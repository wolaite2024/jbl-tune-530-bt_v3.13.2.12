#ifndef _STACK_PATCH_LOG_H_
#define _STACK_PATCH_LOG_H_

/*=======================================MODULE NAME====================================*/
//#define YOUR_LOG_INDEX        0
/*======================================================================================*/

/*=======================================LOWERSTACK=====================================*/
#define LOWERSTACK_START         1000
//legacy
#define SEND_SIGNAL_FAIL         1003 //"Send signal fail: %d, line:%d"
#define LOG_VENDOR_TX_TABLE_IDX  1004 //"BR/EDR tx power table index offset: ce_index=%d, tx_table_index=%d, new_tx_table_index=%d"
#define LOG_RANDOM_PAGING1       1005 //"[RANDOM_PAGING] timer_isr: native_clk=0x%x, counter_reg_read=0x%x, ori_native_counter=%d, random=%d, offset=%d, final_native_counter=%d, btdbg_0x2d=0x%x"
#define LOG_RANDOM_PAGING2       1006 //"[RANDOM_PAGING] tx_int: native_clk=0x%x, native_counter=%d, btdbg_0x2d=0x%x"
#define LOG_RANDOM_PAGING3       1007 //"[RANDOM_PAGING] timer_isr: going to send FHS: 0x2D=0x%x, native_counter=%d"
#define LOG_RANDOM_PAGING4       1008 //"[RANDOM_PAGING] tx_int: rx_on_delay=%d, offset=%d, postpone_time=%d, expected_counter_in_hw_timer - native_counter=%d"
#define LOG_RELEASE_ESCO         1009 //"lmp_release_esco_entity_to_ce_database_patch, entity_status = %d, status = %d"
#define LOG_CE_IDX_ESCO_IDX      1010 //"lmp_kill_esco_right_after_esco_established: ce_index=%d, esco_ce_index=%d"
#define LOG_REMOVE_ESCO_FAIL1    1011 //"handle remove_esco_link_req fail: ce_index:%d, ce_status=%d, reason:0x%x"
#define LOG_REMOVE_ESCO_FAIL2    1012 //"handle remove_esco_link_req fail: esco_ce_index:%d, esco_status=%d"
#define LOG_GEN_DISCONN_COMPLETE 1013 //"Disconn complete: tpoll %d am_addr %d pid %d ce_status %d"

#define LOG_INVALID_ESCO_PARAM   1028 //"esco validate parameter fail!! tx_bandwidth=0x%x, nego_param->tx_bandwidth=0x%x, rx_bandwidth=0x%x, nego_param->rx_bandwidth=0x%x, air_mode=%d, local_air_mode=%d"
#define SNIFF_2_MASTER_1         1029 //"[SNIFF MASTER] schedule before anchor point, ce_index: 0x%x"
#define SNIFF_2_MASTER_2         1030 //"[SNIFF MASTER] pause schedule in sniff attempt end, ce_index: 0x%x, state: 0x%x, lower_lut: 0x%x"
#define RS_INVALID_CE_INDEX      1031 //"[MSS] lmp_role_switch_data.ce_index == 0xFF, need to check reason, line:%d"
#define MULTI_ESCO_DESCO_TUNE    1032 //"[MULTI-ESCO DESCO TUNE] origin_deso 0x%x, target_desco 0x%x, distance_us new link %d, distance_us old link %d"
#define SLOT_COUNTER_INT_LOG     1033 //"slot_counter_int: native_clk=0x%x, g_lc_scan_slot_timer_in_use=%d, scan_enable=%d, page_scan_count=%d, inq_scan_count=%d, scan_flag=%d, 0x30=0x%x, 0x32=0x%x"
#define SCAN_HANG_DETECT         1034 //"[SCAN HANG DETECT] dbg0x2d: 0x%x, dbg0x34: 0x%x, hw_psd_scan_running: 0x%x, bredr_scan_not_done: %d, bredr_scan_is_hang: %d"
#define SCAN_HANG_IN_SNIFF       1035 //"[SCAN HANG WORKAROUND] in sniff_end_int: piconet_id=%d, piconet_clk=0x%x, 0x29C=0x%x"

#define SNIFF_2ND_TRANSI_1       1043 //"[SNIFF ENTER] enter sniff timer timeout"
#define SNIFF_2ND_TRANSI_2       1044 //"[SNIFF ENTER] nearest anchor: 0x%x, slot between target anchor: 0x%x, xtol: 0x%x"
#define SNIFF_2ND_TRANSI_3       1045 //"[SNIFF ENTER] receive ack of accept pdu before enter sniff timer timeout"
#define SNIFF_2ND_TRANSI_4       1046 //"[SNIFF ENTER] receive ack of accept pdu after enter sniff timer timeout"
#define SNIFF_2ND_TRANSI_5       1047 //"[SNIFF ENTER] adjust xtol: 0x%x"
#define PS_RELEASE_CE            1048 //"[PAGE_SCAN] Release correct combination of ce_index=%d, am_addr=%d, piconet_id=%d, bd_addr[0]=0x%x"

#define LOG_INVALID_CE_INDEX_WITH_LR 1050 //"Warning: invalid ce_index %d LR 0x%x"
#define SNIFF_END_LOG            1051 //"[SNIFF END INT] ce:0x%x, piconet clk: 0x%x"
#define ESCO_RX_FORCE_CHANGE_PKT_TYPE   1052 //"[Coex] eSCO rx_int instant=0x%x, switch_to_le_bm=0x%x, force_switch_to_le_bm=0x%x"
#define LOG_AUDIO_SNIFF_IDLE_ZONE_REG_PAGE_SCAN_WINDOW2 1053 //"[AS][PAGESCAN] Create idle zone for next page scan window : curr_slot:%d, scan_period:%d, scan_window:%d, scan_type:%d, idle_zone_inst:%d, idle_zone_ext_inst:%d, idle_zone_win:%d"
#define LOG_AUDIO_SNIFF_IDLE_ZONE_REG_INQ_SCAN_WINDOW2  1054  //"[AS][INQSCAN] Create idle zone for next INQ scan window : curr_slot:%d, scan_period:%d, scan_window:%d, scan_type:%d, idle_zone_inst:%d, idle_zone_ext_inst:%d, idle_zone_win:%d"
#define DISABLE_LE_BEFORE_PCA_UPDATE                    1055 //"[AS][LE_ADV_SCAN] Disable LE ADV SCAN before PCA update: LE_EXT_ADV_disable_bm:%d, LE_EXT_SCAN_disable:%d, LE_EXT_INIT_SCAN_disable:%d, LE_Legacy_ADV_disable:%d, LE_legacy_SCAN_disable:%d, LE_legacy_INIT_SCAN_disable:%d"
#define ENABLE_LE_EXT_ADV_AFTER_PCA_UPDATE              1056 //"[AS][LE_ADV_SCAN] Enable LE EXT ADV after PCA update: adv_handle:%d, event_property:%d, pid:%d, le_ext_adv_disable_bm:%d"
#define ENABLE_LE_EXT_SCAN_AFTER_PCA_UPDATE             1057 //"[AS][LE_ADV_SCAN] Enable LE EXT SCAN %d EXT INIT SCAN %d after PCA update"
#define ENABLE_LE_LEGACY_ADV_SCAN_INIT_AFTER_PCA_UPDATE 1058 //"[AS][LE_ADV_SCAN] Enable LE legacy ADV %d SCAN %d INIT SCAN %d after PCA update"
#define ENABLE_LE_LEGACY_SCAN_AFTER_PCA_UPDATE          1059 //"[AS][LE_ADV_SCAN] Enable LE legacy SCAN after PCA update"
#define DISABLE_LE_EXT_ADV_BEFORE_PCA_UPDATE            1060 //"[AS][LE_ADV_SCAN] Disable LE EXT ADV before PCA update: adv_handle:%d, event_property:%d, pid:%d, le_ext_adv_disable_bm:%d"
#define GET_LE_ADV_PID_FAIL                             1061 //"[AS][LE_ADV_SCAN] Warning!!, get LE ADV pid fail: LE_ADV_handle:%d"
#define ENABLE_LE_EXT_INIT_SCAN_AFTER_PCA_UPDATE        1062 //"[AS][LE_ADV_SCAN] Enable LE EXT initial SCAN after PCA update"
#define ENABLE_LE_LEGACY_INIT_SCAN_AFTER_PCA_UPDATE     1063 //"[AS][LE_ADV_SCAN] Enable LE initial legacy SCANN after PCA update"
#define UNSNIFF_LMP_BYPASS_ENTER_TRANSITION_MODE        1064 //"[SNIFF] handle unsniff lmp and bypass entering sniff transition mode, pid:%d, am_addr:%d"
#define SNIFF_LMP_BYPASS_ENTER_TRANSITION_MODE          1065 //"[SNIFF] handle sniff lmp and bypass entering sniff transition mode, pid:%d, am_addr:%d"
#define ESCO_INSTANT_INTR_NEW_LOG 1066 //"[ESCO][esco_intr_new] esco_lt_addr: %d, pid: %d, packet_received: %d, lc_esco_window_overlap: %d, cur_clk: 0x%x"
#define ESCO_RX_INTR_LOG          1067 //"[ESCO][esco_dup_rx] packet_received: %d, rx_clk: 0x%x, cur_clk: 0x%x"
#define LOG_IGNORE_CLOSE_ESCO_WINDOW_INSTR              1068 //"[ESCO] Warning: ignore close esco window instruction"
#define FORBID_AFH_UPDATE                               1069 //"[AFH] Forbid afh update due to on-going PCA update: am_addr %d pid %d"
#define UPDATE_AFH_INSTANT                              1070 //"[LC][PCA] Update afh instant: pid %d am_addr %d afh_instant(old 0x%x new 0x%x)"
#define KILL_SNIFF_SEND_SIG_FAIL                        1071 //"kill sniff send sig fail: pid:%d, am_addr:%d, lc_sniff_sup_count:%d, tpoll_bkp:%d, tpoll:%d, kill_sniff_in_end_int_status:%d"
#define START_SNIFF_LOG                                 1072 //"[LC][SNIFF] start sniff: am_addr %d pid %d dsniff %d tsniff %d next_inst %d cur_inst %d"
#define LC_INVOKE_SCHD_MSS_LOG                          1073 //"lc_invoke_scheduler: in_role_switching role switch ce %d"
#define BTC_CS_CHG_INT_LOG                              1074 //"[BTC_CS_IDLE] btc_cs_idle=%d, btc_cs=0x%x, wait_btc_cs_idle=%d, scan_flag=0x%x, device_status=%d, lc_cur_dev_state=%d"
#define BTC_CS_CHG_INT_LOG_WARN                         1075 //"[BTC_CS_IDLE] Warning!! wait_btc_cs_idle has been set TRUE but no processed!! native_clk=0x%x, g_lc_scan_slot_timer_in_use=%d, scan_enable=%d, page_scan_count=%d, inq_scan_count=%d, scan_flag=0x%x"
#define HTPOLL_SYNC_IN_RECOVERY_LINK                    1076 //"[AS][HTPOLL SYNC] Cancel the recovery only in receiving htpoll sync"
#define MULTILINK_IDLE_ZONE_SCHEDULE                    1077 //"[AS][IDLEZONE] Register addtional idle zone for multi-link : win_inst:%d, win_slot:%d"
#define IDLEZONE_IN_RECOVERY                            1078 //"[AS][IDLEZONE] Avoid idle zone in recovery link htpoll, win_inst:%d, win_slot:%d, src_type:%d"
#define PICONET_CLK_TWO_SLOT_EARLY                      1079 //"piconet clk is incorrect in sniff mode -> pid:%d"
#define PICONET_NATIVE_CLK_DIFF_MISMATCH                1080 //"[SNIFF] sniff xtol:0x%x, lc_sniff_sup_count:0x%x, cur_piconet:0x%x, prev_piconet:0x%x, cur_native:0x%x, prev_native:0x%x, diff:0x%x, 0x%x, 0x%x"
#define AFH_MAP_USE_SLV_CHANNEL_CLASSIFICATION          1081 //"[AFH] num_good_channel < 20, num_slv_good_channel=%d"
#define REDUCE_DUMMY_POLL_LOG                           1082 //"Reduce master dummy poll, ce_index: 0x%x, type: 0x%x"
#define SET_IGNORE_TPOLL_FLAG                           1083 //"[TPOLL_REQ] Set the ignore remote tpoll flag, conn_handle:%d, ce_index=%d, ignore_tpoll_req_flag:%d"
#define IGNORE_REMOTE_TPOLL_REQ                         1084 //"[TPOLL_REQ] ignore remote tpoll request, ce_index=%d, lmp_opcode:%d"
#define RX_PACKET_AFTER_PCA_UPDATE                      1085 //"[P2P_CLK_ADJ]RX in pca update:rx_intr_recv_cnt:%d, original_disable_invalid_pkt_type_ignored:%d"
#define RX_ONLY_ONE_PACKET_AFTER_PCA                    1086 //"[P2P_CLK_ADJ]RX only one packet after pca update before timeout"
#define DYNAMIC_IDLE_ZONE_ALLOCATION                    1087 //"[AS][IDLEZONE][DYNAMIC] Dynamic allocation idle zone for multi-link : cnt_in_intvl:%d, frequent_packet_num:%d, enable:%d"
#define REGISTER_DYNAMIC_IDLE_ZONE                      1088 //"[AS][IDLEZONE][DYNAMIC] Register dynamic idle zone : win_inst:%d, win_slot:%d, rx_rssi:%d"
#define STOP_RANDOM_BCKOFF_TIMER_FAIL                   1089 //"Warning: stop ramdom backoff timer fail !"
#define AUDIO_SNIFF_SECONDARY_RX_NO_PKT_IN_INTERVAL     1090 //"[AS]Secondary receive no packet in a2dp/esco interval: rx_indication:%d, trigger_count:%d, set_correlation:%d, rx_rssi:%d"
#define AUDIO_SNIFF_SECONDARY_RX_PKT_RESUME_CORR        1091 //"[AS]Secondary receive packet and resume correlation: rx_indication:%d, set_correlation:%d, rx_rssi:%d"
#define DUMP_ACL_RX_FIFO_IN_RX_INT                      1092 //"[RX INT] lt_addr:4/piconet_id:4/hec_error:4/crc_error:4/prev_seqn:4/seq:4/arqn:4/pkt_type:4=0x%08x, lut_index:16/slot_offset:16=0x%08x, packet_header:16/payload_header:16=0x%08x, piconet_clk=0x%x, rxfifo(acl 0x%08x sco 0x%08x), acl_rx_fifo error:%d"
#define DUMP_PICONET_SCHEDULER_IN_TX_INT                1093 //"[TX INT] lt_addr:4/piconet_id:4/ce_index:8/tx_pkt_type:8/tx_id:8=0x%08x, tx_status:16/schd_ce:4/schd_tx:4/schd2_ce:4/schd2_tx:4=0x%08x, lut_index=%d, upper_lut:16/lower_lut:16=0x%08x, piconet_clk=0x%x"
#define KILL_SNIFF_STATUS_LOG                           1094 //"kill sniff status:%d"
#define AS_UPDATE_CTRL_SLOT_OFFSET                      1095 //"[AS] update ctrl slot offs for clock wraparound(cur_inst %d last_inst %d): ctrl_slot_offs(old %d new %d)"
#define VENDOR_CHANGE_ESCO_WINDOW                       1096 //"[ESCO] change esco win: esco_win (orig %d new %d), esco_policy %d"
#define ARBIT_PRE_ENTRY_ANCHOR_SHIFT                    1097 //"[ARBITRATION] pre_entry anchor point shift, anchor shift: 0x%x"
#define LE_EXT_SCAN_STOP_TPOLL                          1098 //"enable LE EXT scan and stop bredr slave tpoll,  ce_index: 0x%x"
#define LE_EXT_SCAN_RESTART_TPOLL                       1099 //"disable LE EXT scan and restart bredr slave tpoll,  ce_index: 0x%x"
#define LOG_LC_HTPOLL_TASK_EXEC_INFO_NEW                1100 //"[LC][TPOLL] htpoll exec: am_addr %d pid %d htpoll_ind %d inst %d intvl %d rsvd_slots_sched %d break_slot 0x%x cur_slot %d"
#define IDLEZONE_MGR_INSERT                             1101 //"[IDLEZONE_MGR] Insert idle zone request into mgr, win_inst:%d, win_slot:%d, src_type:%d, priority:%d"
#define IDLEZONE_MGR_REMOVE                             1102 //"[IDLEZONE_MGR] Remove idle zone request from mgr, win_inst:%d, win_slot:%d, src_type:%d, priority:%d"
#define IDLEZONE_MGR_UPDATE                             1103 //"[IDLEZONE_MGR] Update idle zone request from mgr, win_inst:%d=>%d, win_slot:%d=>%d, src_type:%d=>%d, priority:%d=>%d"
#define IDLEZONE_MGR_CANCEL                             1104 //"[IDLEZONE_MGR] Cancel idle zone request from mgr, win_inst:%d, win_slot:%d, src_type:%d, priority:%d"
#define IDLEZONE_MGR_UPDATE_IN_PCA                      1105 //"[IDLEZONE_MGR] Update mgr instant from pca update: orig_win_end:%d, update_win_end:%d, tuning_value:%d"
#define SCHEDULE_IDLE_ZONE_MGR_INST                     1106 //"[IDLEZONE_MGR_HTPOLL] Update idle zone instant from mgr, audio_inst:%d, win_inst:%d, win_slot:%d, src_type:%d, priority:%d"
#define REGISTER_WITH_IDLEZONE_MGR                      1107 //"[IDLEZONE_MGR_HTPOLL] Register idle zone with mgr init schedule, inst4new_idle_sched_next:%d, win_inst:%d, win_slot:%d, src_type:%d, priority:%d, cancel:%d"
#define IDLEZONE_MGR_OBSV_UPDATE_1                      1108 //"[IDLEZONE_MGR_HTPOLL] obsv_update in mgr, original: inst4new_idle_sched_next:%d, win_inst:%d, win_slot:%d, src_type:%d, priority:%d, cancel:%d, update_zone_inst:%d, update_zone_slot:%d, curr_slot:%d"
#define IDLEZONE_MGR_OBSV_UPDATE_2                      1109 //"[IDLEZONE_MGR_HTPOLL] obsv_update in mgr, update: update_zone:%d, win_inst:%d, win_slot:%d, src_type:%d, priority:%d, cancel:%d"
#define IDLEZONE_MGR_OBSV_CANCEL_1                      1110 //"[IDLEZONE_MGR_HTPOLL] obsv_cancel in mgr, original: inst4new_idle_sched_next:%d, cancel_inst:%d, cancel_slot:%d, curr_inst:%d "
#define IDLEZONE_MGR_OBSV_CANCEL_2                      1111 //"[IDLEZONE_MGR_HTPOLL] obsv_cancel in mgr, cancel: cancel_zone:%d, win_inst:%d, win_slot:%d, src_type:%d, priority:%d, cancel:%d"
#define IDLEZONE_MGR_ABO_HIGH_PRIORITY                  1112 //"[IDLEZONE_MGR_HTPOLL] register abosolutely high priority idle zone in mgr, win_inst:%d, win_slot:%d, src_type:%d, priority:%d"
#define FLUSH_EXPITRE_A2DP_PACKET                       1113 //"Flush packet due to expire or quick flush, seq:%d, rx_inst:%d, deadline:%d"
#define SEND_GENERIC_SIGNAL_FAIL                        1114 //"send_signal_from_isr_generic fail: type:%d, task_handle=%d, LR=0x%x"
#define LOG_LL_DRIVER_UPDATE_MEU_ANCHOR_POINT           1115 //"[LL][DRIVER] update meu anchor point (ent_addr 0x%x cmpl_addr 0x%x): slot %d->%d cnt %d->%d clk_adj(slot %d us %d)"
#define LOG_LC_PCA_MGR_CHECK_IN_LE_CE                   1116 //"[LC][PCA] in ce: entry %d nat_clk 0x%x"
#define LOG_LC_PCA_MGR_AFTER_CE_END_INTR                1117 //"[LC][PCA] after ce end: entry %d nat_clk 0x%x"
#define LOG_HTPOLL_BW_POLICY_RX_INFO                    1118 //"[HTPOLL][BW] default policy info: (am_addr %d pid %d), rx_clk: %x, lcl_rx_pkt_type: %x, crc_err: %d, tx_expected: %d, credit: %d, cont_null_pkt_cnt: %d"
#define LOG_AUDIO_SNIFF_RESCHED_AUDIO_A2DP_HTPOLL       1119 //"[AS] resched audio a2dp htpoll: ctrl(am_addr %d pid %d), cur_inst: %d"
#define LOG_HTPOLL_INC_BW_POLICY_RX_INFO                1120 //"[HTPOLL][BW] inc BW policy info: am_addr %d pid %d, cur_rsvd_slots:%d, slot_passed:%d, htpoll_rsvd_slots:%d, cur_slot:%d"
#define IDLEZONE_MGR_IN_USE                             1121 //"[IDLEZONE_MGR] idle zone mgr in use: %d"
#define IGNORE_LE_RESET_IN_PCA                          1122 //"[AS][LE_ADV_SCAN]Ignore LE reset during pca update: instant:%d, clk_adj_slot:%d, clk_adj_us:%d"
#define LC_PCA_INTR                                     1123 //"[LC][PCA] pca_intr: clk 0x%x pid %d"
#define DUMP_PCA_INTR_MISSING_CLK                       1124 //"[LC][PCA][WARN] pca history: hist_idx %d nat clk 0x%x"
#define DUMP_PCA_INTR_MISSING                           1125 //"[LC][PCA][WARN] pca history record (%d): type %d nat_clk 0x%x reg_val 0x%x"
#define PAUSE_ESCO_WITH_PCA_POLICY                      1126 //"[P2P_CLK_ADJ]Pause esco in pca policy: %d"
#define B2B_HTPOLL_INFO                                 1127 //"[HTPOLL][B2B] Set B2B htpoll, enable:%d, interval:%d, rsvd_slot:%d, ref_inst:%d"
#define B2B_DISCONNECT_OBSV_UPDATE                      1128 //"[HTPOLL][B2B] B2B link disconnect in B2B htpoll enable"
#define B2B_HTPOLL_END_OBSV_UPDATE                      1129 //"[HTPOLL][B2B] B2B htpoll end: interval:%d, rsvd_slot:%d, next_ref_inst:%d, candidate_ref_inst:%d, in_receive_slv_traffic:%d, correlated:%d, num_conflict:%d, decided_offset_count:%d"
#define B2B_HTPOLL_IDLE_ZONE_CONFLICT                   1130 //"[HTPOLL][B2B] B2B htpoll (inst %d slot %d intvl %d) conflict with idle zone (inst %d slot %d): new periodic htpoll inst %d"
#define B2B_INSERT_HTPOLL_IDLE_ZONE_FAIL                1131 //"[HTPOLL][B2B] Warning: failed to insert htpoll_idle_zone(inst %d->%d win %d clk_ref_type %d)"
#define B2B_HTPOLL_IDLE_ZONE_SYNC_FROM_MGR              1132 //"[HTPOLL][B2B] B2B htpoll sync idle zone from mgr: ori_native_inst:%d, sync_b2b_inst:%d, rsvd_slot:%d, src_type:%d"
#define B2B_HTPOLL_UPDATE_ZONE_FROM_MGR                 1133 //"[HTPOLL][B2B] B2B htpoll update idle zone from mgr: ori_native_inst:%d, sync_b2b_inst:%d, rsvd_slot:%d, src_type:%d, curr_slot:%d"
#define B2B_HTPOLL_CANCEL_ZONE_FROM_MGR                 1134 //"[HTPOLL][B2B] B2B htpoll cancel idle zone from mgr: ori_native_inst:%d, sync_b2b_inst:%d, rsvd_slot:%d, src_type:%d, curr_slot:%d"
#define B2B_HTPOLL_END_INTR_DBG                         1135 //"[HTPOLL][B2B] B2B htpoll end intr bypass: htpoll_update_process:%d, htpoll_transition:%d"
#define B2B_HTPOLL_SLAVE_TRAFFIC_INFO                   1136 //"[HTPOLL][B2B] Slave traffic in BTC: interval:%d, offset:%d, rsvd_slot:%d, anchor_point:%d"
#define B2B_HTPOLL_MASTER_TRAFFIC_INFO                  1137 //"[HTPOLL][B2B] Master traffic in BTC: interval:%d, offset:%d, rsvd_slot:%d, anchor_point:%d"
#define PATCH_RANDOM_PAGING1                            1138 //"[RANDOM_PAGING] tx_int: offset=%d, postpone_time=%d, expected_counter_in_hw_timer - native_counter=%d"
#define PATCH_RANDOM_PAGING2                            1139 //"[RANDOM_PAGING] timer_isr: pause once, native_clk=0x%x, native_clk_record=0x%x, native_counter=%d"
#define LOG_LC_HTPOLL_SCHED_HIST_START_TASK             1140 //"[HTPOLL][SCHED_HIST] start task: task(addr %p lut_ind %d inst %d intvl %d rsvd_slot %d periodic %d) in_scheduling %d susp_state %d hlc_killed %d"
#define LOG_LC_HTPOLL_SCHED_HIST_CHECK_TASK_RESCHED     1141 //"[HTPOLL][SCHED_HIST] check task resched: cur_task(addr %p inst %d periodic %d) task(addr %p inst %d periodic %d) cur_inst %d"
#define LOG_LC_HTPOLL_SCHED_HIST_UNSET_OLD_CURRENT      1142 //"[HTPOLL][SCHED_HIST] unset old current: cur_task(addr %p inst %d periodic %d) cur_task2replace(addr %p inst %d periodic %d) cur_inst %d pca_intr_occur %d htpoll_in_stopping %d htpoll_in_expiring %d susp_state %d"
#define LOG_LC_HTPOLL_SCHED_HIST_TASK_EXPIRED           1143 //"[HTPOLL][SCHED_HIST] task expired: task(addr %p orig_inst %d updt_inst %d periodic %d) task2replace(addr %p inst %d periodic %d)"
#define LOC_LC_HTPOLL_SCHED_HIST_SET_NEW_CURRENT        1144 //"[HTPOLL][SCHED_HIST] set new current: cur_task(addr %p inst %d periodic %d) task_pass_pca(addr %p inst %d periodic %d) cur_inst %d"
#define LOG_LC_HTPOLL_SCHED_HIST_INVALID_REC_TYPE       1145 //"[HTPOLL][SCHED_HIST] Warning: invalid record type %d"
#define LOG_LC_HTPOLL_SCHED_HIST_PID                    1146 //"[HTPOLL][SCHED_HIST] htpoll schedule history for pid %d:"
#define LOG_RX_INTR_DELAY_WHEN_SET_FLOW_STOP            1147 //"[RX INT] Warning: delay when set flow STOP: lut_ind %d rx_end_inst %d cur_inst %d"
#define SET_MAX_SLOT_5_WHEN_ALL_ESCO_PAUSED             1148 //"[ESCO] Set max slot 5 except ce_bm %x , general_flag.set_max_slot_5_when_pause_esco %d"
#define CLEAR_FLAG_SET_MAX_SLOT_5_WHEN_PAUSE_ESCO       1149 //"[ESCO] clear flag set_max_slot_5_when_pause_esco %d"
#define PREVENT_HW_GEN_NULTI_ESCO_END_INT               1150 //"[ESCO] bypass hw dupilate esco end interrupt esco_inst_last_rx_clk 0x%x, instant_slot %d"
#define DEBUG_LOG_BBPRO3BUG_905                         1151 //"[DEBUG LOG BBPRO3BUG_905] ce: 0x%x, status: 0x%x, native clk: 0x%x, instant: 0x%x, updt now: 0x%x"
#define DEBUG_LOG_BBPRO3BUG_905_2                       1152 //"[DEBUG LOG BBPRO3BUG_905] btmac isr status: 0x%x"
#define INFORM_PHY_TX_POWER                             1153 //"[INFORM_TX_PWR] link_active=%d, lut_index=%d, ce_index=%d, step_index=%d, txgain_type=%d"
#define LEGACY_LINK_NUM_CONFIG_LOG                      1154 //"[LEGACY] master %d, slave %d, sco %d, esco %d"
#define IGNORE_LE_LINK_HANDLE_IN_PCA                    1155 //"[LC][PCA]Ignore LE link handle during pca update: instant:%d, clk_adj_slot:%d, clk_adj_us:%d"
#define B2S_INSERT_HTPOLL_IDLE_ZONE_FAIL                1156 //"[HTPOLL][B2S] Warning: failed to insert htpoll_idle_zone(inst %d->%d win %d clk_ref_type %d)"
#define B2S_HTPOLL_UPDATE_ZONE_FROM_MGR                 1157 //"[HTPOLL][B2S] B2S htpoll update idle zone from mgr: ori_native_inst:%d, sync_b2b_inst:%d, rsvd_slot:%d, src_type:%d, curr_slot:%d, reset_htpoll:%d"
#define B2S_HTPOLL_CANCEL_ZONE_FROM_MGR                 1158 //"[HTPOLL][B2S] B2S htpoll cancel idle zone from mgr: ori_native_inst:%d, sync_b2b_inst:%d, rsvd_slot:%d, src_type:%d, curr_slot:%d, reset_htpoll:%d"
#define B2S_HTPOLL_IDLE_ZONE_SYNC_FROM_MGR              1159 //"[HTPOLL][B2S] B2S htpoll sync idle zone from mgr: ori_native_inst:%d, sync_b2b_inst:%d, rsvd_slot:%d, src_type:%d"
#define B2S_HTPOLL_IDLE_ZONE_CONFLICT                   1160 //"[HTPOLL][B2S] B2S htpoll (inst %d slot %d) conflict with idle zone (inst %d slot %d): new htpoll inst %d, new htpoll rsvd slot %d"
#define B2S_HTPOLL_END_OBSV_UPDATE                      1161 //"[HTPOLL][B2S] B2S htpoll end: ce_index:%d, ref_schedule_inst:%d, next_sched_inst:%d, next_sched_inst_in_native:%d, next_rsvd_slot:%d, curr_inst:%d, max_rsvd_slot:%d, tpoll_type:%d, sync_sched_cont:%d"
#define B2S_DISCONNECT_OBSV_UPDATE                      1162 //"[HTPOLL][B2S] B2S link disconnect in B2S htpoll enable, ce_index:%d"
#define B2S_HTPOLL_INFO                                 1163 //"[HTPOLL][B2S] Set B2S htpoll, ce_index:%d, enable:%d, type:%d, htpoll_interval:%d, def_rsvd_slt:%d"
#define B2S_HTPOLL_SYNC_TRAFFIC_INFO                    1164 //"[HTPOLL][B2S] Get B2S sync traffic info, ce_index:%d, sync_interval:%d, sync_rsvd_slot:%d"
#define B2S_DISABLE_HTPOLL_DUE_TO_NO_NEXT_INSTANT       1165 //"[HTPOLL][B2S] Disable and reset B2S htpoll due to No next schedule instant, ce_index:%d"
#define B2S_HTPOLL_SYNC_SCHE_BLOCK_MISSING              1166 //"[HTPOLL][B2S] The sync schedule block missing for sync periodic type, ce_index:%d"
#define B2S_HTPOLL_SET_LINK_HTPOLL                      1167 //"[HTPOLL][B2S] B2S set link htpoll: ce_index:%d, ref_schedule_inst:%d, next_sched_inst:%d, next_rsvd_slot:%d, curr_inst:%d, max_rsvd_slot:%d, tpoll_type:%d, sync_sched_cont:%d"
#define B2S_HTPOLL_UPDATE_SCHE_WITH_INFO                1168 //"[HTPOLL][B2S] Update schedule with info: least_feature_inst:%d, last_greatest_inst:%d, safe_sche_inst:%d, htpoll_schedule_ref_inst:%d, candidate_schedule_inst:%d, candidate_rsvd_slot:%d"
#define B2S_HTPOLL_CHECK_IN_TPOLL_START                 1169 //"[HTPOLL][B2S] Enable B2S htpoll in tpoll start: ce_index:%d, enable:%d, type:%d, htpoll_interval:%d, def_rsvd_slt:%d"
#define B2S_HTPOLL_CHECK_IN_TPOLL_STOP                  1170 //"[HTPOLL][B2S] Disable B2S htpoll in TPOLL stop: ce_index:%d"
#define B2S_HTPOLL_PCA_INTR_HANDLE                      1171 //"[HTPOLL][B2S] Handle pca intr for B2S htpoll: ce_index:%d, enable:%d, type:%d, htpoll_interval:%d, def_rsvd_slt:%d, sync_handle:%d"
#define B2S_HTPOLL_CE_INDEX_MISMATCH                    1172 //"[HTPOLL][B2S] Warning: ce_index mismatch in handle htpoll start failure, ce_index:%d, b2s_ce_index:%d"
#define B2S_HTPOLL_START_HTPOLL_FAIL                    1173 //"[HTPOLL][B2S] Warning: b2s htpoll start failure, type:%d, interval:%d, rsvd_slot:%d, instant:%d, real_instant:%d, periodic:%d, restart:%d"
#define B2S_HTPOLL_CE_ENTITY_MISMATCH                   1174 //"[HTPOLL][B2S] Warning: b2s info state missmatch with ce_entity: b2s_enable:%d, ce_index:%d, b2s_ce_index:%d"
#define B2S_HTPOLL_DISABLE_IN_RESET                     1175 //"[HTPOLL][B2S] Warning: b2s htpoll disable during reset, ce_index:%d"
#define LC_HTPOLL_TASK_NULL                             1176 //"[HTPOLL][BW] default policy: task is NULL, interval:%d, credit:%d"
#define LC_HTPOLL_POLICY_NULL                           1177 //"[HTPOLL][BW] default policy: policy is NULL"
#define CALCULATE_MAX_SLOT                              1178 //"lmp_calculate_max_slot(%d): max_slot=%d, LR=0x%x"
#define USE_HTPOLL_INTERVAL_CAL_SWITCH_INSTANT          1179 //"[ROLE_SWITCH] htpoll_interval %d, switch_inst %d"
#define GET_CE_INDEX_FAIL1                              1180 //"[DEBUG] Warning: lmp_ch_to_ce_index_table[%d].status = UNASSIGNED, LR = 0x%x"
#define GET_CE_INDEX_FAIL2                              1181 //"[DEBUG] Warning: lmp_ch_to_ce_index_table[%d].ce_index = INVALID_CE_INDEX, LR = 0x%x"
#define CE_TABLE_DEBUG_LOG                              1182 //"[DEBUG] Check lmp_am_addr_to_ce_index_table_ppi, table->ce_index %d, table->status %d, connection_handle %d, lmp_ch_to_ce_index_table.ce_index %d, lmp_ch_to_ce_index_table.status %d"
#define ENTER_SNIFF_CE_STATE_WRONG                      1183 //"[SNIFF] ce status is wrong when enter sniff %d ce %d"
#define HTPOLL_IDLE_ZONE_MAP_NULL_OR_HTPOLL_DISABLE     1184 //"[HTPOLL][B2S][B2B] Warning: idle zone map NULL or b2s/b2b htpoll disable, function: 0x%x, htpoll_enable:%d"
#define B2S_IDLE_ZONE_HTPOLL_DIABLE_IN_END              1185 //"[HTPOLL][B2S] Warning: idle zone ce_index invalid or b2s htpoll disable, ce_index:%d, b2s_htpoll_enable:%d"
#define LOG_DETECT_TXRX_CS_STUCK_WHEN_ESCO_PAGE_RSP_TIMEOUT 1186 //"Warning: detect txrx_cs stuck when esco + page rsp timeout"
#define B2S_HTPOLL_DIABLE_IN_TPOLL_STOP                 1187 //"[HTPOLL][B2S] Warning: htpoll disable in tpoll stop, bypass htpoll end task, ce_index:%d, b2s_htpoll_enable:%d"
#define DU_RX_SYNC_ERROR                                1188 //"[hciapi_data_received] Rcv SYNC Data Error!! Packet length (%d) > Rx Data length (%d)"
#define PENDING_AFH_PDU_LOG                             1189 //"[PENDING AFH PDU] keep offset in lmp pdu, bm: 0x%x, ce: 0%x, afh instant offset: 0x%x, current tpoll: 0x%x"
#define SET_AFH_OFFSET_LOG                              1190 //"[SET AFH INSTANT] ce_index: %d, instant 0x%x"
#define CHAG_NAT_CLK_DBG                                1191 //"[CLK_DRAG] clk drag pca intr: pid %d nat 0x%x ref_pid %d ref_pid clk 0x%x master_cnt %d , legacy_and_le_chk_bm 0x%x bmActiveHandle %d""
#define CHAG_NAT_CLK_DBG_1                              1192 //"[DBG] pca_set_align_instr total_us_left %d, adjust_us %d , us_diff %d, instant %d, has_master %d"
#define CHAG_NAT_CLK_DBG_2                              1193 //"[DBG] dis_pca_align pid %d active %d master %d mst_cnt %d lno %d cor_en %d"
#define CHAG_NAT_CLK_DBG_3                              1194 //"[DBG] master ce %d "
#define CHAG_NAT_CLK_DBG_4                              1195 //"[CLK_DRAG] rx intr obsvr  master_ce_bm 0x%x glo master_ce_bm 0x%x rx ce %d legacy_and_le_chk_bm 0x%x"
#define CHAG_NAT_CLK_DBG_5                              1196 //"[DBG] pca done and set correlation "
#define CHAG_NAT_CLK_DBG_6                              1197 //"[DBG] set clk fast align mst ce %d ref ce %d"
#define LEGACY_SET_AFH_DIRECTLY                         1198 //"[AFH] timer diff %d us, set afh map directly"
#define SEND_PKT_RIGHT_AWAY_LOG                         1199 //"[LC][CHK_NEED_TX] lcl_rx_pkt_type %d,rx_param->schd->tx_status %d,lc_cont_crc_rx_cnt[lut_index] %d,lc_cont_crc_tx_cnt[lut_index] %d"
#define PKT_ID_CHK_FOR_SPECIFIC_VCMD                    1200 //"[PKG_ID] sub_cmd %d, package_id %d"
#define LOG_GAMING_AND_HFP_COEX_FIND_IDLE_INDEX         1201 //"[GAMING_HFP] cur_esco_instant_slot %d, record pre-esco_interval_index %d, credit[0] %d, credit[1] %d, credit[2] %d, credit[3] %d"
#define LOG_GAMING_AND_HFP_COEX_SET_IDLE_INDEX          1202 //"[GAMING_HFP] set cur_interval_index_for_esco_acl %d and reset other param, observe_times %d"
#define LOG_GAMING_AND_HFP_COEX_DOUBLE_ENTER_ERROR          1203 //"[GAMING_HFP] Warning! already enable gaming & hfp coex, gaming_ce_index %d, esco_ce_index %d"
#define LOG_GAMING_AND_HFP_COEX_END_OF_SELECT_IDLE_INDEX    1204 //"[GAMING_HFP] End of select_esco_acl_index, cur_esco_instant_slot %d, credit_observe_timer %d"
#define LOG_GAMING_AND_HFP_COEX_DATA_GEN_CYCLE_ERROR        1205 //"[GAMING_HFP] Warning! ori data_generate_cycle: %d, MAX_CREDIT_INDEX %d"
#define LOG_GAMING_AND_HFP_COEX_UPDATE_PARAM                1206 //"[GAMING_HFP] Update parameter idle_zone_interval %d, esco_interval %d, data_generate_cycle %d"
#define LOG_GAMING_AND_HFP_COEX_BYPASS_REGISTER_IDLE_ZONE   1207 //"[GAMING_HFP] Bypass register idle zone : cur_acl_idle_counter %d, acl_idle_skip %d"
#define LOG_GAMING_AND_HFP_COEX_REGISTER_IDLE_ZONE          1208 //"[GAMING_HFP] Update idle zone param : zone_inst %d, zone_win %d, phy_piconet_id %d"
#define LOG_GAMING_AND_HFP_COEX_UNSUPPORT_IDLE_SLOT_ERROR   1209 //"[GAMING_HFP] Warning! zone_reserve_slot = 0, bypass update zone flow"
#define LOG_GAMING_AND_HFP_COEX_UPDATE_IDLE_SKIP_STATUS     1210 //"[GAMING_HFP] RX crc pkt from other link. update dynamic_update_acl_idle_skip %d"
#define LOG_GAMING_AND_HFP_COEX_DYNAMIC_UPDATE_IDLE_SKIP    1211 //"[GAMING_HFP] Dynamic update idle skip, dynamic_update_acl_idle_skip %d, ori_idle_skip %d -> %d"
#define LOG_GAMING_AND_HFP_COEX_IDLE_ZONE               1212 //"[GAMING_HFP] Check idle zone index cur_esco_interval_index %d ,index_for_esco_acl %d"
#define LOG_GAMING_AND_HFP_COEX_CANCEL_IDLE_ZONE            1213 //"[GAMING_HFP] Cancel idle zone when rx crc error or no rx pkt (%d/%d) on gaming link in pre interval"
#define LOG_AFH_POLICY_SELECT_CHANNEL                       1214 //"[AFH_VENDOR] select_status %d, min_afh_channel %d, final map: 0x%08x-0x%08x-0x%04x"
#define LOG_AFH_POLICY_SET_POLICY                           1215 //"[AFH_VENDOR] Set AFH policy, ce_index:%d, afh_policy_mode: %d, afh_policy_priority: %d, afh_policy_2_4g_ch_cl_num %d"
#define AFH_POLICY_DBG1                                     1216 //"[AFH_DEBUG] vendor mark ori %d, vendor mark %d, bit map %x %x %x %x %x %x %x %x %x %x"
#define AFH_POLICY_DBG2                                     1217 //"[AFH_DEBUG] num_good_channel %d, good_vendor_channel %d, good_vendor_channel_mix %d, ce %d, afh_policy_mode %d, afh_policy_priority %d"
#define AFH_POLICY_DBG3                                     1218 //"[AFH_DEBUG] best 5 channel %d %d %d %d %d"
#ifndef BB2_DCUT_ONLY
#define LOG_HANDLE_CRC_OK_FIFO_ZERO                         1219 //"[RX] Handle CRC OK, RX FIFO ERROR, pkt_hdr:0x%x, pl_hdr:0x%x"
#define LOG_HANDLE_NOISY_PACKET                             1220 //"[RX] Force CRC error for noisy packet, pkt_hdr:0x%x, pl_hdr:0x%x"
#endif
#define MAX_SLOT_REQ_CHK                                    1221 //"cal_max_slot %d, max_slot_acc %d, sent_pdu %d"
#define SKIP_IDLE_ZONE_REGISTER_FOR_LL_PRE_CONNECTION       1222 //"[AS][IDLEZONE] skip register idle zone for menu_cs is in idle state, conn_entry:%d"
#define LOG_SECURE_CONN_UPDATE_FW_REC_RX_CNT                1223 //"[SC] update record dec_rx_cnt msb 0x%x, lsb 0x%x, start_encryption_rx_check %d"
#define LOG_SECURE_CONN_UPDATE_FW_DAYCOUNTER_CNT            1224 //"[SC] update expect_daycounter due to clock wraparound cur_clock 0x%x, last_rx_clock 0x%x, expect_daycounter %d"
#define LOG_SECURE_CONN_UPDATE_HW_DEC_RX_CNT                1225 //"[SC] update dec_rx_cnt due to wrong dec_rx_cnt, rx_msb 0x%x, rx_lsb 0x%x, status %d"
#define LOG_SECURE_CONN_COMPARE_HW_RX_CNT_WITH_FW           1226 //"[SC] compare dec rx cnt, HW: msb 0x%x lsb 0x%x, FW: msb 0x%x lsb 0x%x, master_in_tx_disable_rx_enable_state %d"
#define LOG_SECURE_CONN_RX_INFO                             1227 //"[SC_RX_INFO] pid:4/addr:4/ce_index:4/mic_err_cnt:4 = 0x%08x  Tx(Msb0x%X Lsb0x%X) Rx(Msb0x%x Lsb0x%X) DayCounter%X"
#ifndef BB2_DCUT_ONLY
#define LOG_RESET_RX_FIFO_WORKAROUND                        1228 //"[WORKAROUND] Flush abnormal RX FIFO rxfifo_bytes=%d"
#endif
#define LOG_SECURE_CONN_BYPASS_SCHEDULE_PKT                 1229 //"[SC] aes_st_hang_on_5 is set, bypass schedule pkt flow"
#define LOG_SECURE_CONN_UPDATE_HW_AES_TX_CNT                1230 //"[SC] update aes_tx_cnt due to wrong aes_tx_cnt, new aes_tx_cnt msb 0x%x lsb 0x%x, fw_workaround_status %d"
#define LOG_SECURE_CONN_COMPARE_HW_TX_CNT_WITH_FW           1231 //"[SC] compare aes_tx_cnt, HW: msb 0x%x lsb 0x%x, FW: msb 0x%x lsb 0x%x, start_encryption_tx_check %d, schd->tx_count %d, record_tx_count %d"
#define LOG_SECURE_CONN_UPDATE_DAYCOUNTER                   1232 //"[SC] update daycounter %d -> %d"
#define LOG_SECURE_CONN_NO_LUT_WARNING                      1233 //"[SC] Warning: invalid lut_index %d, am_addr %d, pid %d"
#define LOG_DEBUG_TX_STEP                                   1234 //"[TX STEP] old_am_addr:%d, old_piconet_id:%d, old_lut_index:%d, old_upper:0x%x, new_am_addr:%d, new_piconet_id:%d, new_lut_index:%d, new_upper:0x%x, ce_index:%d, tx_step_index:%d, rf_mode:%d"
#define B2S_HTPOLL_SKIP_RESTART_IN_END_INTR                 1235 //"[HTPOLL][B2S] Skip htpoll restart in end interrupt, ce_index:%d, inst:%d, htpoll_interval:%d, htpoll_rsvd_slot:%d"
#define B2S_HTPOLL_SKIP_RESTART_IN_SET_HTPOLL               1236 //"[HTPOLL][B2S] Skip htpoll restart in set htpoll, ce_index:%d, inst:%d, htpoll_interval:%d, htpoll_rsvd_slot:%d"
#define AFH_POLICY_DYNAMIC_N                                1237 //"[AFH_DYNAMIC] mac_address_cal 0x%x, set AFH_POLICY_2_4G_MODE_CHANNEL_LOWER_BOUND %d"
#define LOG_FLUSH_CHECK                                     1239 //"[LOG] diff %d send_pkt_slot %d ,nbc_timeout %d"
#ifndef BB2_DCUT_ONLY
#define DGB_FLUSH_AUX1_PKT                                  1240 //"[WORKAROUND] Flush AUX1 RX FIFO rxfifo_bytes=%d"
#endif
#define LOG_B2B_HTPOLL_RESET_LINK_CHECK_STATE               1241 //"[HTPOLL][B2B] B2B htpoll reset link bypass: htpoll_update_process:%d, htpoll_transition:%d, htpoll_enable:%d"
#define LOG_AUDIO_SNIFF_RESET_LINK_CHECK_STATE              1242 //"[AS] AUDIO SNIFF a2dp htpoll reset link bypass"
#define LOG_SNIFF_COLLISION_CHECK                           1243 //"[WORKAROUND] check if need to adjust tolerance, ce_index:%d, interval:%d, rsvd_slot:%d, sniff_start_instant:%d, sniff_interval:%d, pre_le_inst_tail:%d, next_le_inst_head:%d"
#define AES_CCM_COMBO_CTR                                   1244 //"[AS][AES-CCM-COMBO] AES-CCM-COMBO CTR1: 0x%x, 0x%x, 0x%x, 0x%x, 0x%x, 0x%x, 0x%x, 0x%x, 0x%x, 0x%x, 0x%x, 0x%x"
#define AES_CCM_COMBO_DECRYPT_DATA                          1245 //"[AS][AES-CCM-COMBO] AES-CCM-COMBO DECRYPT DATA: 0x%4x, 0x%4x, 0x%4x, 0x%4x"
#define AES_CCM_COMBO_DECRYPT_MAC                           1246 //"[AS][AES-CCM-COMBO] AES-CCM-COMBO DECRYPT MAC: 0x%4x, 0x%4x, 0x%4x, 0x%4x"
#define AES_CCM_COMBO_CBC_MAC                               1247 //"[AS][AES-CCM-COMBO] AES-CCM-COMBO CBC MAC: 0x%4x, 0x%4x, 0x%4x, 0x%4x"
#define AES_CCM_COMBO_MAC_BLK_B0                            1248 //"[AS][AES-CCM-COMBO] AES-CCM-COMBO MAC BLK0: 0x%4x, 0x%4x, 0x%4x, 0x%4x"
#define AES_CCM_COMBO_MAC_BLK_B1                            1249 //"[AS][AES-CCM-COMBO] AES-CCM-COMBO MAC BLK1: 0x%4x, 0x%4x, 0x%4x, 0x%4x"
#define AES_CCM_COMBO_MAC_BLK_B2                            1250 //"[AS][AES-CCM-COMBO] AES-CCM-COMBO MAC BLK2: 0x%4x, 0x%4x, 0x%4x, 0x%4x"
#define AES_CCM_COMBO_MAC_VERIFY_OK                         1251 //"[AS][AES-CCM-COMBO] AES-CCM-COMBO MAC VERIFY PASS"
#define AES_CCM_COMBO_PARTIAL_DECRYPT_INFO                  1252 //"[AS][AES-CCM-COMBO] AES-CCM-COMBO PARTIAL DECRYPT INFO, SDU_length:%d"
#define AES_CCM_COMBO_PARTIAL_DECRYPT_DATA                  1253 //"[AS][AES-CCM-COMBO] AES-CCM-COMBO PARTIAL DECRYPT DATA: 0x%4x, 0x%4x, 0x%4x, 0x%4x"
#define AES_CCM_COMBO_AES_KEY                               1254 //"[AS][AES-CCM-COMBO] AES-CCM-COMBO key: 0x%4x, 0x%4x, 0x%4x, 0x%4x"
#define LOG_READ_PRIORITY_SETTING                           1255 //"READ priority setting, reg@0x11C:0x%x, reg@0x11E:0x%x, reg@0x120:0x%x, reg@0x21C:0x%x, reg@0x27C:0x%x"
#define LOG_SECURE_CONN_SNIFFING_INFO                       1256 //"[SC] shadow slave sc_use_enc_rand %d, enc_rand_remote 0x%x-0x%x, aco 0x%x-0x%x, daycounter 0x%x"
#define LOG_SECURE_CONN_SEC_UPDATE_RX_CNT                   1257 //"[SC] update sniffing link aes_rx_cnt rx_msb 0x%x, rx_lsb 0x%x, ori_rx_lsb 0x%x, aes_rx_cnt_from_pri 0x%x"
#define LOG_SECURE_CONN_FW_DECRYPT_RESULT                   1258 //"[SC] FW decrypt result partial_ret %d, ret %d, rx_msb 0x%x, rx_lsb 0x%x"
#define LOG_SECURE_CONN_UPDATE_RELAY_PKT_LLID_TO_AES_RX_CNT 1259 //"[SC] update relay pkt llid to rx_lsb 0x%x"
#define LOG_SECURE_CONN_SET_ECO_REGISTER                    1260 //"[SC] set register 0xC2 to 0x%x"
#define LOG_SECURE_CONN_SET_AES_CNT_WHEN_S_TO_M             1261 //"[SC] set ce: %d lut_index %d, aes_rx (msb:0x%x, lsb:0x%x), aes_tx (msb:0x%x, lsb:0x%x), daycounter %d, seqn_old %d, remote_seqn %d"
#define LOG_SECURE_CONN_SEC_RESET_AUDIO_AES_RX_CNT          1262 //"[SC] Secondary reset audio aes_rx_cnt from pri: msb:0x%x lsb:0x%x"
#define ACK_DBG_LOG1                                        1263 //"[ACK_DBG] rx_param->ce_index %d, schd->ce_index %d, tx_status %d, selected_am_addr %d, am_addr %d"
#define ACK_DBG_LOG2                                        1264 //"[ACK_DBG] lut_reg.m.tx_type %d, pkt_type 0x%x"
#define LOG_SECURE_CONN_FROCE_SYNC_FW_TX_CNT_WHEN_NO_WAITING_ACK 1265 //"[SC] Sync fw aes_tx_cnt msb 0x%x lsb 0x%x"
#define LOG_START_OFFSET                                    1266 //"[BTC] decide start offset, candidate_overlap_intvl[%d %d], pack_type:%d, start_offs:%d"
#define LOG_B2B_HTPOLL_PEND_CMD                             1267 //"[HTPOLL][B2B] B2B master exec pend cmd flow, htpoll_enable:%d, htpoll_interval:%d, htpoll_rsvd_slot:%d"
#define LOG_B2B_HTPOLL_HANLDE_SLAVE_CMD                     1268 //"[HTPOLL][B2B] B2B master handle slave cmd, htpoll_enable:%d, htpoll_interval:%d, htpoll_rsvd_slot:%d"
#define B2B_HTPOLL_END_INTR_DBG2                            1269 //"[HTPOLL][B2B] B2B htpoll end intr bypass when pause acl"
#define B2B_HTPOLL_SLAVE_TRAFFIC_INFO2                      1270 //"[HTPOLL][B2B] Slave traffic in BTC: interval:%d, offset:%d, rsvd_slot:%d"
#define LOG_SNIFF_RECREATE1                                 1271 //"[SNIFF] Init2 -> Init1, cur_slot:%d, sniff_last_instant:%d, sniff_slot_offset:%d, sniff_slot_offset_init1:%d, sniff_timing_ctrl:%d"
#define LOG_SNIFF_RECREATE2                                 1272 //"[SNIFF] Init1 -> Init2, cur_slot:%d, sniff_last_instant:%d, sniff_slot_offset:%d, sniff_timing_ctrl:%d"
#define OVER_VENDOR_LMP_MAX_PDU_SIZE                        1273 //"WARNING: long lmp pdu size is out of 2DH1 limit: %d"
#define LOG_SEC_FORCE_RESET_COLLECTOR                       1274 //"[AS] secondary force reset collector, pri last_cont_seq %d, sec last_cont_seq %d"
#define LOG_KILL_PAGE_WHEN_KILL_SCAN                        1275 //"[PAGE] Kill page in patch_lc_kill_scan_mode"
#define DGB_FLUSH_PKT_CHK                                   1276 //"[FLUSH_PKT] flush_timeout %d, ppkt->pb_flag %d, ws->flush_time %d"
#define DGB_FLUSH_PKT_CHK_1                                 1277 //"[GET_PKT_FROM_HOST] pkt 0x%x data 0x%x 0x%x 0x%x clock 0x%x"
#define DGB_FLUSH_PKT_CHK_2                                 1278 //"[NBC_TIMEOUT_CHK] pkt 0x%x "
#define DGB_FLUSH_PKT_CHK_3                                 1279 //"[FLUSH_PKT] flush expired pkt before sent 0x%x data 0x%x 0x%x 0x%x""
#define DGB_FLUSH_PKT_CHK_4                                 1280 //"[SEND_PKT] ready to send pkt 0x%x ce_index %d"
#define DGB_FLUSH_PKT_CHK_5                                 1281 //"[NBC_TIMEOUT_CHK] pkt flush pkt 0x%x data 0x%x 0x%x 0x%x"
#define DGB_FLUSH_PKT_CHK_6                                 1282 //"[NBC_TIMEOUT_CHK] pkt 0x%x data 0x%x 0x%x 0x%x"
#define DGB_FLUSH_PKT_CHK_7                                 1283 //"[SEND_PKT_CHK] clk 0x%x"
#define IDLEZONE_MGR_OBSV_BYPASS_UPDATE                     1284 //"[IDLEZONE_MGR_HTPOLL] Bypass idle zone update because a2dp htpoll reset more than one time in an interval"
#define AUDIO_SNIFF_PRI_BYPASS_UPDATE_BZDA_RPTR             1285 //"[AS] Warning, bypass update bzdma rptr & sniffing_ack because in blue piconet"
#define PRI_RESET_FLOW_BIT                                  1286 //"[AS] Pri reset b2s flow bit flow:%d => %d"
#define PRI_SET_PRE_FLOW_STOP                               1287 //"[AS] Pri set flow bit protect b2b sync, flow:%d, os_reserved_buffers:%d"
#define SEC_SET_PRE_FLOW_STOP                               1288 //"[AS] Sec flush a2dp pkt protect b2b sync, os_reserved_buffers:%d, acl_rx_flow_stop_threshold_pkt_cnts:%d"
#define B2B_HTPOLL_END_INTR_DBG3                            1289 //"[HTPOLL][B2B] B2B htpoll end intr bypass when in sniff mode"
#define LOG_B2B_HTPOLL_ABORT                                1290 //"[HTPOLL][B2B] Abort setting b2b htpoll in sniff mode"
#define B2B_HTPOLL_CIG_TRAFFIC_INFO                         1291 //"[HTPOLL][B2B] CIG traffic in BTC: role:%d, interval:%d, offset:%d, rsvd_slot:%d, ap:0x%x, ap_us:%d, rsvd_us:%d"
#define B2B_HTPOLL_CIG_rsvd_slot                            1292 //"[HTPOLL][B2B] htpoll_rsvd_slots:%d, max_cig_rsvd_slot:%d, candidate_htpoll_rsvd_slot:%d based on cig"
#define DYNAMIC_B2B_TX_POWER1                               1293 //"[DYNAMIC_B2B_TX_POWER] set b2b max tx power, rf_mode %d, record_b2b_ori_power_step [0] %d, [1] %d, [2] %d"
#define DYNAMIC_B2B_TX_POWER2                               1294 //"[DYNAMIC_B2B_TX_POWER] revert b2b max tx power, rf_mode %d, target_step %d"
#define DYNAMIC_B2B_TX_POWER3                               1295 //"[DYNAMIC_B2B_TX_POWER] Bypass power ctrl setting on b2b link"
#define DYNAMIC_B2B_TX_POWER4                               1296 //"[DYNAMIC_B2B_TX_POWER] cur_slot %d, hist->pkt_flush_deadline[idx] %d, hist->flush_timeout %d, adapt_deadline_threshold %d"
#define BTC_SCHEDULE_DGB                                    1297 //"[BTC] Warning schedule btc with unknown type:%d"
#define LOG_B2S_HTPOLL_SCHEDULE_WITH_BTC_DGB1               1298 //"[HTPOLL][B2S] B2S htpoll (inst %d slot %d) has intersect with available bw(inst %d slot %d): new htpoll inst %d, new htpoll rsvd slot %d""
#define LOG_BTC_TRAFFIC_INFO                                1299 //"[HTPOLL][B2S] traffic in BTC: interval:%d, offset:%d, rsvd_slot:%d, anchor_point:%d(slot)"
#define LOG_B2S_HTPOLL_SCHEDULE_WITH_BTC_DGB2               1300 //"[HTPOLL][B2S] Warning, B2S htpoll cannot find available bw to coexist with btc and idle zone, ref_inst:%d"
#define LOG_ROLE_SWAP_HANDLE_S2M_WRONG_ROLE                 1301 //"[ROLESWAP] Warning, Wrong device state, when handling LMP s2m packet, ce_index:%d"
#define LOG_ROLE_SWAP_HANDLE_M2S_WRONG_ROLE                 1302 //"[ROLESWAP] Warning, Wrong device state, when handling LMP m2s packet, ce_index:%d"
#define LOG_PCA_WITH_LE_DEBUG_1                             1303 //"[CLK_DRAG] le entry %d"
#define LOG_PCA_WITH_LE_DEBUG_2                             1304 //"[CLK_DRAG] le rx intr: global_master_bm 0x%x ,le_master_rx_bm 0x%x legacy_and_le_chk_bm 0x%x"
#define LOG_PCA_WITH_LE_DEBUG_3                             1305 //"[CLK_DRAG] le_has_master_periodic: le chk: le_bm 0x%x ,bis_bm 0x%x, cis_bm 0x%x"
#define LOG_PCA_WITH_LE_DEBUG_4                             1306 //"[CLK_DRAG] le_has_master_periodic: legacy_and_le_chk_bm 0x%x "
#define LOG_PCA_WITH_LE_DEBUG_5                             1307 //"[CLK_DRAG] reg_max_pa:PA/BIS max_entry %d legacy_and_le_chk_bm 0x%x "
#define LOG_PCA_WITH_LE_DEBUG_6                             1308 //"[CLK_DRAG] check pass set instruction acl rx"
#define LOG_PCA_WITH_LE_DEBUG_7                             1309 //"[CLK_DRAG] check pass set instruction le rx"
#define LOG_PCA_WITH_LE_DEBUG_8                             1310 //"[CLK_DRAG] handle_pca_intr: reg cis rx callback"
#define LOG_PCA_WITH_LE_DEBUG_9                             1311 //"[CLK_DRAG] check_cis_rx_intr: cis_cal_rx_bm 0x%x, cis_rx_bm 0x%x cis_entry_en_map 0x%x, bm_cis_unit_active 0x%x"
#define LOG_PCA_WITH_LE_DEBUG_10                            1312 //"[CLK_DRAG] check pass set instruction cis rx"
#define LOG_PCA_WITH_LE_DEBUG_11                            1313 //"[CLK_DRAG] register_maximum_periodic_adv: PA_max_entry %d entry_id %d, (entry - PA_MIN_ID) %d"
#define LOG_PCA_WITH_LE_DEBUG_12                            1314 //"[CLK_DRAG] check_bis_pa_max_interval: adv_entry_bm 0x%x, adv_ce_repeat_cnt %d"
#define LOG_PCA_WITH_LE_DEBUG_13                            1315 //"[CLK_DRAG] check_bis_pa_max_interval: check_pa_bis_rx_pass set instruction"
#define LOG_PCA_WITH_LE_DEBUG_14                            1316 //"[CLK_DRAG] register_maximum_bis: entry %d, max_entry %d"
#define LE_PCA_UPDATE_DEBUG_1                               1317 //"[LE_PCA] align nat clk to le_entry: clk:%d, entry:%d, new_offset:%d"
#define LE_PCA_UPDATE_DEBUG_2                               1318 //"[LE_PCA] adjust_native_clock_check: param:%d, adjust_unit:%d, ref_slot:%d, ref_us:%d, nat_slot:%d, nat_us:%d"
#define LE_PCA_UPDATE_DEBUG_3                               1319 //"[LE_PCA] dis_pca_align pid %d ref_le_entry_id %d le_aligned %d g_cis_reduce_window %d "
#define LE_PCA_UPDATE_DEBUG_4                               1320 //"[LE_PCA] us_diff is same, start timer clk 0x%x"
#define LOG_DIS_CLK_DRAG_WARN                               1321 //"[CLK_DRAG] warning: dis clk drag fail pid %d"
#define B2B_HTPOLL_UPDATE_LAST_DECIDE_OFFSET                1322 //"[HTPOLL][B2B] Update last decided offset when b2b handshake complete, old:%d, new:%d"
#define AFH_POLICY_SEND_CH_CL                               1323 //"[AFH_POLICY] send ch_cl lmp with %d channels (0 = send mark as good channel)"
#define SNIFF_HANDLE_FOR_MULTIPLE_LINK                      1324 //"[SNIFF] Exit sniff due to window overlap, ce_index:%d, offset1:%d, rsvd_slot1:%d, offset2:%d, rsvd_slot2:%d"
#define B2S_HTPOLL_BYPASS_IDLE_ZONE_SCHEDULE                1325 //"[HTPOLL][B2S] B2S htpoll bypass idle zone type %d"
#define LOG_AUDIO_SNIFF_AVOID_IDLE_ZONE2                    1326 //"[AS][IDLEZONE] Avoid Idle zone in audio link : win_inst:%d, win_slot:%d, ori_audio_inst:%d, ori_audio_slot:%d, new_audio_inst:%d, new_audio_slot:%d, src_type %d"

//le
#define LE_PA_END_MONITOR_AP      1514    //"<PA> End Int: entry:%d, meu_cs:%d->%d, chain_cnt:%d, sync_ap:%d chain_ap:%d diff:%d interval:%d"
#define HCI_RECEIVED_DATA_LOG_01  1516    //"[hciapi_data_recevied] Rcv Cmd Error!!!!!!!!!!! Packet length (%d) > Rx Data length (%ld)"
#define HCI_RECEIVED_DATA_LOG_02  1617    //"Do not support SCO!!"
#define HCI_RECEIVED_DATA_LOG_03  1618    //"hciapi_data_recevied: %d"
#define LE_ADJ_ENTRY_PRIORITY_LOG   1619    //"le adj entry priority, entry:%d, highest_priority:%d, ultra_low:%d"
#define LE_RESET_ALL_ENTRY_PRIORITY  1620    //"Reset all entry priority"
#define LE_INVALID_ENTRY_BM       1621    //"entry bitmap > 0x1F, invalid parameters error."
#define DIFF_PA_ENTRY_PRIORITY    1622 //"pa_active_bm = 0x%x, PA_entry_prioriy: %d, %d, %d, %d, PA_entry_prioriy_min: %d, %d, %d, %d"
#define DIFF_BIS_ENTRY_PRIORITY   1623 //"bis_active_bm = 0x%x, BIS_entry_prioriy: %d, %d, %d, %d, BIS_entry_prioriy_min: %d, %d, %d, %d"
#define DIFF_CIS_ENTRY_PRIORITY   1624 //"cis_active_bm = 0x%x, CIS_entry_prioriy: %d, %d, %d, %d, CIS_entry_prioriy_min: %d, %d, %d, %d"
#define BIG_EVT_END_LOG           1625 //"big event end, big_evt_end_bm_bis_updt[%d] |= BIT%d"
#define CIG_EVT_END_LOG           1626 //"cig event end, cig_evt_end_bm_cis_updt[%d] |= BIT%d"
#define ADJ_BIS_PRIORITY          1627 //"adjust bis priority, l_manager.aging_array[%d].priority = %d, last_scheduled_anchor_point = 0x%x"
#define ADJ_CIS_PRIORITY          1628 //"adjust cis priority, l_manager.aging_array[%d].priority = %d, last_scheduled_anchor_point = 0x%x"
#define LE_INVALID_ENTRY_BM_02    1629  //"entry bitmap > 1F, invalid parameters error."
#define SET_PA_TX_PRIORITY_LOG       1630  //"set pa tx handle priority, ae_handle[%d] = %d"
#define SET_PA_RX_PRIORITY_LOG       1631  //"set pa rx handle priority, sync_handle = 0x%x, entry[%d] = %d"
#define SET_BIS_PRIORITY_LOG       1632  //"set_big_handle_priority_min, big_conn_handle = %d, ll_manager.aging_array[%d].priority_min = %d"
#define SET_CIS_PRIORITY_LOG       1633  //"set_cig_handle_priority_min, cig_handle = %d, cig_handle_priority_map[%d] = %d"
#define SET_AE_PRIORITY_LOG       1634    //"set_ae_handle_priority, handle[%d] = %d"
#define LE_PRE_CON_UPDT_MISS_WORKAROUND_LOG 1635    //"[PRE CON UPDT MISS WORKAROUND DEBUG] 0x%x, 0x%x, 0x%x, 0x%x"
#define PATCH_LE_GRANT_DECISION 1636 //"pre_clk_diff:0x%x, two_anch_clk_diff:0x%x, cur_clk:0x%x, cur_ent_anch:0x%x, scan_pri:%d, link_pri:%d, pre_pri_backup:%d, flag:%d, lose:%d, window:%d, rpt_priority:%d"
#define PATCH_LE_ARBITRATOR_INTERRUPT_LOG 1637 //"[LL] Arbitration , state: 0x%x, pre_entry: %x, pre_inst: %x, win: %x, rpt_cr_entry: %x, rpt_map: %x, rpt_anch:%x, ce_cnt: %d, rpt_type: %x, anch_clk_diff: %x, cur_handle_clk:%x, pre_pri_backup: %x"
#define PATCH_LE_PAST_TX_CLK_LOG          1638 //"<PAST> get_sync_offset_in_sync_info, sync_offset_us:%d, sync_instant:%d, ap_slot:%d, sync_instant_us:%d, clk_diff_slot_ori:%d, interval_to_add:%d"
#define CHECK_COLLISION_BTC_LOG           1639 //"[LL][clk:%d] Check Collision use BTC: type:%d, instant:(%d->%d), offset:%d, reserved_slot:%d, intvl:%d, past:(%d->%d), future:%d"
#define CHECK_COLLISION_BTC_ADV_LEN_LOG   1640 //"[LL][clk:%d] Check Collision use BTC, calculate ADV duration: type:%d, Legacy:%d, adv_duration:%dus (%d slots)"
#define CHECK_COLLISION_ADV_CH_NUM_LOG    1641 //"Itered adv handle:%d, ch map:0x%x, origin:0x%x, instant:0x%x"
#ifndef BB2_DCUT_ONLY
#define CHECK_COLLISION_ADV_FOUND_SPACE   1642 //"Ext adv check collision:%d, Itered adv handle:%d, ch map:0x%x, instant:0x%x, duration_slot:%d, retry_max:%d, type:%d, ultra_low_priority:%d"
#define CHECK_COLLISION_ADV_NOT_FOUND_SPACE 1643 //"Ext adv check collision fail. Itered adv handle:%d, ch map:0x%x, instant:0x%x, duration_slot:%d, retry_max:%d"
#endif
#define CHECK_COLLISION_ADV_ERROR         1644 //"Ext adv check collision, adv type error:%d"
#define LE_MSG_UPDATE_SCAN_INIT_WINDOW    1645 //"[LL] Update SCAN/INIT max window, param:0x%x, SCAN %d -> %d slots, INIT %d -> %d slots."
#define LE_LINK_NUM_CONFIG_LOG            1646 //"[LE] master %d slave %d, PA %d, support ISO(%d): CIG %d CIS %d, BIG %d BIS %d."
#define PAST_CREATE_SYNC_MESSAGE_PATCH    1647 //"<PAST> PAST create sync is triggered due to receive LL_PERIODIC_SYNC_IND. Connection entry ID: %d, PA entry ID: %d, syncConnEventCount: %d, lastPaEventCounter: %d, connEventCount: %d, PeriodicEventCounter: %d, CEt: %d, connEventCount_original: %d, PeriodicEventCounter_original: %d."
#define LE_MSG_RECEIVE_CHANNEL_REPORTING  1648 //"[LL] LE Channel Reporting Ind received. Entry:%d. enable:%d, max_delay:%d, min_spacing:%d"
#define LE_MSG_RECEIVE_CHANNEL_STATUS     1649 //"[LL] LE Channel Status Ind received. Entry:%d. bitmap: 0x%x 0x%x 0x%x 0x%x 0x%x"
#define LE_MSG_GEN_LL_CH_REPORT_IND       1650 //"[LL] Gen LL_CHANNEL_REPORT_IND (%d): enable:%d, max_delay:%d, min_spacing:%d"
#define LE_MSG_GEN_LL_CH_STATUS_IND       1651 //"[LL] Gen LL_CHANNEL_STATUS_IND (%d): 0x%x 0x%x 0x%x 0x%x 0x%x"
#define LE_CH_MAP_INTERSECTION_CH_NO_ENOUGH       1652 //"[LL] Intersection num_good_channel < 5, %d"
#define LE_INVALID_CONN_ENTRY_TO_DISCONNECT       1653 //"conn_handle:%d is neither a CIS conn_handle nor a ACL conn_handle"
#define LE_BYPASS_TRX_TIME_CHECK_LOG      1654 //"[LL] Change PDU Content to Bypass TRx Time Check: entry:%d, max_tx_time:(%d -> %d), max_rx_time:(%d -> %d)"
#define PATH_LOSS_WARNING                 1655 //"phandle_bkp_for_path_loss_monitor==NULL, keep task_param->lmp_s.conn_entry==0"
#define LE_VENDOR_CMD_CH_REF_POLICY_LOG   1656 //"[LL] conn handle: %d, channel map ref policy: %d"
#define EXT_ADV_PKT_PAYLOAD_LEN_ERROR     1657 //"[ERR] extended adv pkt payload length: 0x%x < ext header len + 1: 0x%x"
#define SUSPEND_RESUME_PROTOCOL_LOG       1658 //"[Syscall] Suspend Resume LE Protocol: status:%d, le_bitmap:0x%x, operation:%d, enable:(%d, %d), flag:%d"
#define LE_ACL_SUSP_TIMEOUT               1659 //"[LE_ACL_SUSP] timeout: entry %d type %d state %d"
#define LE_ACL_SUSP_DBG_LOG_00            1660 //"[LE_ACL_SUSP] cmd entry:0x%x, state:0x%x, suspend_type:0x%x, control->state:0x%x"
#define LE_ACL_SUSP_DBG_LOG_01            1661 //"[LE_ACL_SUSP] suspend, entry:0x%x"
#define LE_ACL_SUSP_DBG_LOG_02            1662 //"[LE_ACL_SUSP] resume, entry:0x%x"
#define LE_ACL_SUSP_DBG_LOG_03            1663 //"[LE_ACL_SUSP] Check if LLC is running entry: 0x%x, state: 0x%x, llc type bm: 0x%x, pend: 0x%x"
#define LE_ACL_SUSP_DBG_LOG_04            1664 //"[LE_ACL_SUSP] ce end: %d, entry:0x%x, state:0x%x, punit rx_wd: 0x%x, ce_rx_wd_cnt: 0x%x"
#define LE_ACL_SUSP_DBG_LOG_05            1665 //"[LE_ACL_SUSP] entry:0x%x, vhci ack obsvr"
#define LE_MSG_HIT_CONN_ADV_NO_GNT_LOG    1666 //"[LL] hit_conn_adv conflict with conn update instant-1-2, switch to conn: entry_id:%d, cur:%d, counter:%d, next_ap:%d, instant:%d"
#define LE_WRITE_CAM_OUT_OF_BOUND_LOG     1667 //"[LL] Warning !! Write LE CAM out of Bound: is_slave_cam:%d, cam_addr:%d, wdata:0x%x"
#define LE_RESET_ADI_LIST_LOG             1668 //"[LL] Reset ADI List: Type:%d, adi_list_cam_addr:%d, cam_addr:%d, node:%d, max_list_size:%d"
#define LE_DEASSERT_LOG                   1669 //"[LL] gnt_deassert:0x%x, entry:%d, cur_nclk:(%d,%d), cur_nclk2:(%d,%d), cur_nclk3:(%d,%d), legacy_ap:%d, le_ap:(%d,%d), slot_diff:%d"

// dual
#define RX_STATUS_DUMP_ACL_RX_FIFO_LOG    1800    //"CLEAN RX STATUS type: 0x%x, aclrxfifo: 0x%x, ce_end_status: 0x%x, word_cnt_value: 0x%x, le_int_status_value: 0x%x"
#define RADIO_OFF_PROTECT_SCAN_TERM       1801    //"Write LE 0xDA: radio_off %d, value 0x%x, LR 0x%x, backup_rpt_en %d(%d)"
#define UART_FLOW_CONTROL_ENABLE          1802    //"UART Flow Control enable: CTS_pin=%d, RTS_pin=%d"
#define LE_LEGACY_HW_REG_SETTING_LOG      1803    //"[DEBUG] le_no_acl:%d, le_asi_no_acl:%d, blk_legacy_mslots:%d, asi_blk_legacy_mslots:%d, g_block_legacy_for_le_slot_num:%d, le_ce_en_type_ext:%d, le_adv_en_type_ext:%d"

//le ISO
#define LE_MSG_BIG_CREATE_WW_AUTO_UPDATE  2005 //"Create BIG Sync, local sca:%d, remote sca:%d, iso interval:%dslot, se_len:%dus, comp_duration:%dus, disallow_auto_updt_ww:%d."
#define LE_MSG_BIG_CHECK_BIS_ANCHOR3      2006  //"[ISO][Warn] bis_num: %d got wrong ap at event_cnt %d, case %d. sub_interval: %d, last_event_2_str_event_d:%d, diff: %d(%d)"
#define LE_MSG_BIG_CHECK_BIS_ANCHOR4      2007  //"[ISO][Warn] ap in meu: [0x%x:0x%x](%x), ap in cam: [0x%x:0x%x](%x)"/*======================================================================================*/
#ifndef BB2_DCUT_ONLY
#define LE_MSG_BIG_CHECK_AND_CHANGE_MAP   2008  //"[ISO] Change Channel Map at Next BIG End: big_uid:%d, bis_uid:%d, channel_map:0x%x%x -> 0x%x%x"
#endif
#define LE_MSG_BIG_KILL_BIG_AT_END_INT    2009 //"[ISO] Delay Kill BIG at BIG END: big_uid:%d, bitmap:0x%x, gen_event:%d, big_handle:%d"
#define LE_MSG_BIG_KILL_CIS_AT_END_INT    2010 //"[ISO] Delay Kill CIS at CIG END: cig_uid:%d, cis_uid:%d, kill_bitmap:0x%x, active_bitmap:0x%x"
#define LE_MSG_BIG_FIRST_BIS_PRIORITY     2011 //"[ISO] 1st BIG Event Protect Arbitration Window: entry:%d, window_slot:%d"
#define LOG_CIS_DEBUG_PAYLOAD_CNT         2012 //"[ISO] CIG EVENT END, cis_uid: %d, cis_ce_count: %d, enc pkt cnt: 0x%x, dec pkt cnt: 0x%x, cam4: 0x%x, cam14: 0x%x, cam15: 0x%x, cam16: 0x%x, valid_bm: 0x%x"
#ifndef BB2_DCUT_ONLY
#define LOG_CIS_DEBUG_PAYLOAD_CNT2        2013 //"[ISO] CIS FILL PAYLOAD CNT, cis_ce_count_0: 0x%x, cis_ce_count_1: 0x%x, hw_next_txplcnt_0_32: 0x%x, fill_txplcnt_0: 0x%x, fill_txplcnt_1: 0x%x"
#endif
#define LE_MSG_CIS_NEXT_AP_SLOT_BOUNDARY  2014 //"[ISO] cis_id: %d: Try to Set anchor point wraparound. ap_us: %x"
#define LE_MSG_BIG_CTRL_EVENT_PRIORITY    2015 //"[ISO] BIG CTRL Event Increase Priority: entry:%d, big_uid:%d, cstf:%d, cssn:(%d->%d), required_bw:%d(choose from %d and %d)us."
#define LE_MSG_CIS_GET_NA_CONN_CLK_CNT    2016 //"[ISO] slv conn updt with cis, get ofst betw natv and conn clk, nc_slot: 0x%x, nc_us: 0x%x, cc_slot: 0x%x, cc_us: 0x%x, offset: 0x%x"
#define LE_MSG_CIS_UPDATE_CAM_AP          2017 //"[ISO] slv conn updt with cis, acc hit after instant, update cis ap cam, offset_slot: 0x%x, offset_us: 0x%x"
#define LE_MSG_CIS_GET_NA_CONN_CLK_CNT_ER 2018 //"[ISO] slv conn updt with cis, get ofst betw natv and conn clk error"
#define LOG_CIS_OUT_OF_WW_THRESHOLD       2019 //"[ISO] cis uid %d sca (%d %d), threshold %d iso intv"
#define LOG_CIS_OUT_OF_WW_HAPPENED        2020 //"[ISO] cis uid %d out of ww happened, threshold %d iso intv"
#define LOG_CIS_WW_LIMIT                  2021 //"[ISO] cis uid %d sca (%d %d), ww limit %d us"
#define LE_MSG_BIS_TOGGLE_EMPTY_OPT       2022 //"[ISO] BIS enable bis_tx_empty_opt:%d"
#ifndef BB2_DCUT_ONLY
#define LOG_BIS_GROUP_AP_WORKAROUND_LOG   2023 //"[ISO] h2d clock latch: clock:%d, bis_uid:%d, sync_clk:%d, pn_clk:(%d, %d, %d), diff:%d, cam_ap_native:%d, ref_ap:%d, free_count:%d"
#endif
#define LOG_CIG_PARA_ERR_BY_SEG_NUM       2024 //"[ISO] cig para fail, bn_m2s: %d, delay_itv: %d"
#define LE_MSG_UPDATE_CE_LENGTH_LOG       2025 //"[ISO] update_ce_length: entry:%d, cis_bm:0x%x, cam1:0x%x"
#define LE_MSG_ISO_INIT_TX_PATH_LOG       2026 //"[ISO] initiate tx path settings: clk_slot:%d, ap_slot:%d, ap_offset_us:%d, clk_slot_diff:%d, gap:%d"

//le idle zone manager
#define LE_UPDT_IDLE_ZONE               2500    //"[LE_IDZ] Update mgr:0x%x, inst:0x%x, window:0x%x, entry:%d, priority:%d, action:%d, cur_entry:%d, round:%d, state:0x%x, cur_clk:0x%x"
#define LE_CANCEL_IDLE_ZONE             2501    //"[LE_IDZ] Cancel mgr:0x%x, inst:0x%x, entry:%d, round:%d, cancel_inst:0x%x, cur_clk:0x%x, force_cancel:%d"
#define LE_CANCEL_IDLE_ZONE_CHECK       2502    //"[LE_IDZ] Cancel chk entry:%d, mgr_entry:%d, idle:%d, round:%d"
#define LE_UPDT_IDLE_ZONE_FAIL          2503    //"[LE_IDZ] !!!!!ERROR Update round:%d"

//le btc audio
#define LE_PA_ADV_CLK_STRANGE           2520    //"[clk1 %08X]<PA ADV> Warning!! PA event end timing strange. CAM 0x%04x"
#define LE_BTC_PA_DBG                   2521    //"PA entry:%d, ap:0x%x, offset:%d, interval:%d, rsv_slot:%d"
#define LE_BTC_PA_REG                   2522    //"PA register btc entry:%d"
#define LE_BTC_PA_UNREG                 2523    //"PA unregister btc entry:%d"
#define LE_BTC_BIS_DBG                  2524    //"BIS entry:%d, iter:%d, ap:0x%x, offset:%d, interval:%d, rsv_slot:%d"
#define LE_BTC_BIS_REG                  2525    //"BIS register btc entry:%d"
#define LE_BTC_BIS_UNREG                2526    //"BIS unregister btc entry:%d"
#define LE_BTC_CIS_DBG                  2527    //"CIS entry:%d, iter:%d, ap:0x%x, offset:%d, interval:%d, rsv_slot:%d"
#define LE_BTC_CIS_REG                  2528    //"CIS register btc entry:%d"
#define LE_BTC_CIS_UNREG                2529    //"CIS unregister btc entry:%d"
#define RESCHEDULE_LE_LINK_DEBUG_1      2530    //"[LE] traffic in BTC: type:%d, interval:%d, anchor_point:%d, offset:%d, reserved_slot:%d"
#define RESCHEDULE_LE_LINK_DEBUG_2      2531    //"[LE] Reschedule LE Link: entry: %d"

//lea sniffing
#define LEAS_ADJ_NATIVE_CLK_WITH_MASTER_ERROR     3000    //"[LEAS][WARNING] Secondary adjust native clock with legacy master link"
#define LEAS_TX_CHM_UPDT                          3001    //"[LEAS] switched cis chmap update, cis_uid: 0x%x, ap: 0x%x"
#define LEAS_RX_TERM_IND                          3002    //"[LEAS] rx terminate pdu acl_ch: 0x%x, cis_bm: 0x%x, reason: 0x%x"
#define LEAS_NN_CIS_CHM_UPDT_DONE                 3003    //"[LEAS] non native cis chmap update, cis_uid: 0x%x, next cis ap: 0x%x"
#define LEAS_TX_TERM_IND                          3004    //"[LEAS] send terminate ind, rm_acl_ch: 0x%x, rm_cis_bm: 0x%x, reason: 0x%x"
#define LEAS_CIS_TYPE_ERROR                       3005    //"[LEAS][WARNING] cis uid %d with error cis type: %d"
#define LEAS_TX_DATA_PATH_NOTIFY                  3006    //"[LEAS] send data path notify, cis uid: %d, type: %d, dir %d, id: %d"
#define LEAS_RX_DATA_PATH_NOTIFY                  3007    //"[LEAS] rx data path notify, cis_uid %d (%d %d), type %d, dir %d, id %d"
#define LEAS_CTRL_LINK_NOT_ASSIGN                 3008    //"[LEAS] control link not assign, ce_index %d, status: %d %d"
#define LEAS_CTRL_LINK_INVALID                    3009    //"[LEAS] control link invalid, ce_index %d"
#define LEAS_CIS_REQ_INSTANT_PASS                 3010    //"[LEAS] cis req instant pass, cur clk: 0x%x, ap clk: 0x%x, diff: 0x%x, thrsh: 0x%x"
#define LEAS_CIS_SET_INVALID_AA                   3011    //"[LEAS] set invalid access address in cig end intr, cur ce: 0x%x, switch ce: 0x%x"
#define LEAS_CIS_REQ_WITH_SAME_ID_ERR             3012    //"[LEAS][WARNING] cis req and switched cis with the same cig id and cis id, but b2b link still exists"
#define LEAS_CIS_SET_VALID_AA                     3013    //"[LEAS] cis set valid access address"
#define LEAS_ACL_WITHOUT_SUSPEND                  3014    //"[LEAS][WARNING] acl switch cmd disallowed because acl not suspend"
#define LEAS_ACL_POLLING_MEU_CS_ERR               3015    //"[LEAS][WARNING] acl switch meu cs polling err"
#define LEAS_GET_CH_LOG                           3016    //"[LEAS] hop_inc: %d, chose_index: %d, chbm_L: 0x%08x, chbm_H: 0x%x"
#define LEAS_GET_CH_ERROR                         3017    //"[LEAS][WARNING] Error, cannot find channel_index"
#define LEAS_ACL_REQ_INSTANT_PASS                 3018    //"[LEAS][WARNING]acl req instant pass"
#define LEAS_ACL_REQ_INSTANT_CK_NATIVE            3019    //"[LEAS] acl switch by native clock, current native clk: 0x%x, ap: 0x%x"
#define LEAS_ACL_REQ_INSTANT_CK_CONN              3020    //"[LEAS] acl switch by conn clock, current conn clk: 0x%x, ap: 0x%x"
#define LEAS_ACL_SET_VALID_AA                     3021    //"[LEAS] acl set valid access address, entry %d"
#define LEAS_CIS_SWITCH_RSP_RX                    3022    //"[LEAS] rx cis switch rsp, cis_uid: 0x%x, status: 0x%x"
#define LEAS_CIS_SWITCH_WO_PRE_SYNC               3023    //"[LEAS] cis switch uid %d, no pre sync"
#define LEAS_RECOVER_CIS                          3024    //"[LEAS] recover cis uid %d, meu_cs: %d"
#define LEAS_ACL_SWITCH_WO_CIS_PRE_SYNC           3025    //"[LEAS] acl switch entry %d, no native cis uid %d pre sync"
#define LEAS_ACL_SWITCH_WO_ACL_PRE_SYNC           3026    //"[LEAS] acl switch entry %d, no acl pre sync"
#define LEAS_PRI_TX_LE_CC_REF_B2B_CC              3027    //"[LEAS] pri acl entry %d gen ch report ref b2b ch cla map, ref 0x%x 0x%x 0x%x 0x%x 0x%x, new map 0x%x 0x%x 0x%x 0x%x 0x%x"
#define LEAS_ACL_LATCH_RESULT                     3028    //"[LEAS] acl entry %d, current ce cnt: %d, cam ap (0x%x), meu ap (0x%x, 0x%x), ww (0x%x, 0x%x)"
#define LEAS_ACL_SWITCH_REQ_INFO                  3029    //"[LEAS] acl switch info ce cnt %d, cam ap (0x%x), meu ap (0x%x, 0x%x), ww (0x%x, 0x%x)"
#define LEAS_ACL_SET_INVALID_AA                   3030    //"[LEAS] acl set invalid access address, entry %d"
#define LEAS_ACL_SWITCH_REQ_RX                    3031    //"[LEAS] rx acl switch req, sync nat clk: 0x%x, switch ce cnt: %d, cam ap: 0x%x, meu ap: 0x%x, 0x%x, ww: 0x%x, 0x%x"
#define LEAS_CIS_SWITCH_REQ_RX                    3032    //"[LEAS] rx cis switch req, sync nat clk: 0x%x, type: 0x%x, cam ap: 0x%x, 0x%x, meu ap: 0x%x, 0x%x, tmg_reg_save0: 0x%x, clk_diff: 0x%x ,0x%x, tar_ce_cnt: 0x%x, 0x%x, ww: 0x%x, 0x%x"
#define LEAS_CIS_SWITCH_WO_ACL_PRE_SYNC           3033    //"[LEAS] cis switch entry, no acl pre sync, %d"
#define LEAS_CONN_HANDLE_NOTIFY_ERR               3034    //"[LEAS][ERROR] notify with more than 1 acl, 0x%x, 0x%x, 0x%x"
#define LEAS_ACL_SWITCH_INFO_ACL_FAIL             3035    //"[LEAS][ERROR] rx acl switch info without associated acl pre sync, conn handle: 0x%x"
#define LEAS_ACL_SWITCH_INFO_CIS_FAIL             3036    //"[LEAS][ERROR] rx acl switch info without associated cis pre sync, cis bm: 0x%x"
#define LEAS_ACL_SWITCH_REQ_FAIL                  3037    //"[LEAS][ERROR] rx acl switch req without acl switch info"
#define LEAS_ACL_KEY_SYNC_FAIL                    3038    //"[LEAS][ERROR] rx acl key sync without associated acl pre sync, conn handle: 0x%x"
#define LEAS_CIS_SWITCH_INFO_FAIL                 3039    //"[LEAS][ERROR] rx cis switch info without pre sync, conn handle: 0x%x"
#define LEAS_CIS_SWITCH_REQ_FAIL                  3040    //"[LEAS][ERROR] rx cis switch req without pre sync, conn handle: 0x%x"
#define LEAS_CIS_PRE_SYNC_FAIL                    3041    //"[LEAS][ERROR] rx cis pre sync without associated acl pre sync"
#define LEAS_CLEAR_ACTIVE_LINK_ERROR              3042    //"[LEAS][ERROR] clear pre sync cmd error, 0x%x, 0x%x"
#define LEAS_CIS_SWITCH_FAIL                      3043    //"[LEAS][ERROR] cis switch fail, target cnt: 0x%x, cur_cnt: 0x%x, diff, 0x%x"
#define LEAS_RX_ACL_SUS_RSP_INVALID               3044    //"[LEAS][ERROR] rx acl suspend rsp with invalid acl conn handle 0x%x"

//lea sniffing debug log
#define LEAS_LE_ACL_PRE_SYNC1                     3500    //"[LEAS][DEBUG] send le acl pre sync1, aa: 0x%x, ch: 0x%x, feature: 0x%x 0x%x 0x%x 0x%x, addr type: 0x%x, addr: 0x%x 0x%x 0x%x, hop inc: 0x%x, crc_init: 0x%x, chsel: 0x%x, last sync: %d"
#define LEAS_LE_ACL_PRE_SYNC1_RX                  3501    //"[LEAS][DEBUG] rx le acl pre sync1, ch: 0x%x, remote_ch: 0x%x, aa: 0x%x, feature: 0x%x 0x%x 0x%x 0x%x, addr type: 0x%x, addr: 0x%x 0x%x 0x%x, hop inc: 0x%x, crc_init: 0x%x, chsel: 0x%x, last sync: %d"
#define LEAS_CIS_PRE_SYNC1_TX                     3502    //"[LEAS][DEBUG] send cis pre sync1, cis ch: 0x%x, le acl ch: 0x%x, cis_id: 0x%x, cig_id: 0x%x, iso_itv: 0x%x, sub_intv: 0x%x, nse: 0x%x, phy 0x%x, 0x%x, frame: 0x%x, pack: 0x%x, aa: 0x%x, aa_diff: 0x%x, last sycn: %d"
#define LEAS_CIS_PRE_SYNC1_TX2                    3503    //"[LEAS][DEBUG] send cis pre sync1, bn: 0x%x, 0x%x, ft: 0x%x, 0x%x, sdu_intv: 0x%x, 0x%x, sdu_size: 0x%x, 0x%x, pdu_size: 0x%x, 0x%x, cig_sync_delay: 0x%x, cis_sync_delay: 0x%x, path init: %d, %d"
#define LEAS_CIS_PRE_SYNC1_RX                     3504    //"[LEAS][DEBUG] rx cis pre sync, cis ch: 0x%x, le acl ch: 0x%x, cis_id: 0x%x, cig_id: 0x%x,  cig_uid: 0x%x, iso_itv: 0x%x, nse: 0x%x, phy 0x%x, 0x%x, frame: 0x%x, pack: 0x%x, aa: 0x%x, aa_diff: 0x%x, path init %d %d"
#define LEAS_CIS_PRE_SYNC1_RX2                    3505    //"[LEAS][DEBUG] rx cis pre sync, bn: 0x%x, 0x%x, ft: 0x%x, 0x%x, sdu_intv: 0x%x, 0x%x, , sdu_size: 0x%x, 0x%x, sub_intv: 0x%x, pdu_size: 0x%x, 0x%x, cig_sync_delay: 0x%x, cis_sync_delay: 0x%x"
#define LEAS_KEY_SYNC_TX                          3506    //"[LEAS][DEBUG] send key sync, iv: 0x%x, 0x%x, link_key: 0x%x, 0x%x, 0x%x, 0x%x"
#define LEAS_KEY_SYNC_RX                          3507    //"[LEAS][DEBUG] rx key sync, iv: 0x%x, 0x%x, link_key: 0x%x, 0x%x, 0x%x, 0x%x"
#define LEAS_CIS_SWITCH_INFO1                     3508    //"[LEAS][DEBUG] send cis switch info1, ch: 0x%x, chmap: 0x%x 0x%x, sup_to: 0x%x, remote_sca: 0x%x, enc: 0x%x, data_path_init: 0x%x, 0x%x, txpwr: 0x%x"
#define LEAS_CIS_PROC_INFO                        3509    //"[LEAS][DEBUG] cis type: 0x%x, need native sync: 0x%x, pca: %d"
#define LEAS_CIS_PROC_LATCH                       3510    //"[LEAS][DEBUG] cig end latch, cis uid: 0x%x, evt cnt: 0x%x, 0x%x, cam ap 0x%x, 0x%x, meu ap 0x%x, 0x%x, ww: 0x%x, 0x%x"
#define LEAS_CIS_SWITCH_REQ                       3511    //"[LEAS][DEBUG] send cis switch req, type: 0x%x, cam ap: 0x%x, 0x%x, meu ap: 0x%x, 0x%x, tmg_reg_save0: 0x%x, clk_diff_us: 0x%x, dist: 0x%x, tar_ce_cnt: 0x%x, 0x%x, ww: 0x%x, 0x%x"
#define LEAS_CIS_SWITCH_EARLY_INT_CHK             3512    //"[LEAS][DEBUG] force bg in cis early intr, cur ce: 0x%x, switch ce: 0x%x"
#define LEAS_CIS_SWITCH_INFO1_RX                  3513    //"[LEAS][DEBUG] rx cis switch info1, ch: 0x%x, chmap: 0x%x 0x%x 0x%x 0x%x 0x%x, sup_to: 0x%x, remote_sca: 0x%x, enc: 0x%x, data_path_init: 0x%x, 0x%x, txpwr: 0x%x"
#define LEAS_ACL_CK_POLLING_MEU                   3514    //"[LEAS][DEBUG] acl switch meu cs polling cnt: %d"

/*======================================================================================*/

/*===========================================MP=========================================*/
#define MP_START            7000
#define MP_LOG_USB_01       7001    //"disable_usb_power_seq: power down sequence to disable usb"
#define MP_LOG_USB_02       7002    //"enable_usb_power_seq: power on sequence fail"
#define MP_LOG_USB_03       7003    //"enable_usb_power_seq: power on sequence to enable usb"
#define MP_LOG_USB_04       7004    //"usb_self_loopback: Test Fail, slbbist_crtl=0x%x, power_enable=%d"
#define MP_LOG_USB_05       7005    //"usb_self_loopback: Test Success, slbbist_crtl=0x%x, power_enable=%d"
#define MP_LOG_USB_06       7006    //"usb_self_loopback: Test fail, too long, slbbist_crtl=0x%x, power_enable=%d"
#define MP_LOG_USB_07       7007    //"usb_self_loopback: Test Result: total(%d), success(%d)"
#define MP_LOG_RF_01        7008    //"continuous TX begin"
#define MP_LOG_RF_02        7009    //"continuous TX stop"
#define MP_LOG_GPIO_01      7010    //"GPIO_CTRL: sub_opcode = 0x%x, PAD_num = %d, direct_level = %d"
#define MP_LOG_ADC_01       7011    //"SAR_ADC: mode = 0x%x, channel = %d, average_times = %d"
#define MP_LOG_ADC_02       7012    //"SAR_ADC: sar_adc_result = 0x%x"
#define MP_LOG_CHARGER_01   7013    //"charger: test_type = 0x%x, full_current = %d"
#define MP_LOG_POUTER_01    7014    //"pouter: packet_type not support"
#define MP_LOG_POUTER_02    7015    //"Before mp_txgain_level: 0x%x, mp_txgain_offset: 0x%x, mp_tx_gaink: %d, path loss: %d"
/*======================================================================================*/

/*=======================================PM=============================================*/
#define PM_START                 14000
#define BTMAC_LOG_ENTER_DBG      14006      //"[PM] !**btmac enter: native_clk = 0x%x, native_cnt = %d, wakeup_inst_slot = %d, wakeup_inst_us = %d"
#define BTMAC_LOG_CHECK_DBG      14007      //"[PM] !**btmac check: native_us = %d, native_clk = 0x%x, nxt_status = %d, nxt_status_le = %d, nxt_clock_slot = 0x%x, nxt_clock_slot_le = 0x%x, wakeup_time_diff = %d, wakeup_time_diff_le = %d, unit_wakeup_time_diff = %d"
/*======================================================================================*/


#define LOG_MAX_INDEX   0xFFFFFF

#endif//_PATCH_LOG_H__
