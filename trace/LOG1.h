#ifndef _LOG1_H_
#define _LOG1_H_


#define THOMSON_TEST   0                              //"%s"
#define ACLU_TX_TABLE_BUFFER_CREATION_FAILED    3     //"ACLU tx table buffer creation failed."
#define ACLU_TX_TABLE_SUCCESS                    4      //"ACLU tx table success.%d"
#define ACLU_RX_TABLE_BUFFER_CREATION_FAILED    5      //"ACLU rx table buffer creation failed."
#define ACLU_RX_TABLE_SUCCESS                    6      //"ACLU rx table success.%d"
#define LMP_PDU_BUFFER_CREATION_FAILED             7           //"LMP PDU buffer creation failed."
#define LMP_PDU_SUCCESS                            8      //"LMP PDU success.%d"
#define HCI_COMMAND_BUFFER_CREATION_FAILED      9      //"HCI command buffer creation failed."
#define HCI_COMMAND_BUFFER_SUCCESS              10      //"HCI command buffer success.%d"
#define HCI_EVENT_BUFFER_CREATION_FAILED        11      //"HCI event buffer creation failed."
#define HCI_EVENT_BUFFER_SUCCESS                  12      //"HCI event buffer success.%d"
#define FHS_BUFFER_CREATION_FAILED              13      //"FHS buffer creation failed."
#define FHS_BUFFER_SUCCESS                         14      //"FHS buffer success.%d"
#define AUTH_TID_TIMER_CREATION_FAILED            15      //"Auth TID timer creation failed."
#define PAUSE_ENCRYPTION_ERROR_LINK_IS_NOT_ENCRYPTED_OR_NOT_IDLE      16          //"Pause encryption error:link is not encrypted or not idle."
#define TID_TIMEOUT_TIMER_EXPIRES_FOR_CE_INDEX    17      //"tid timeout timer expires for ce_index = %d"
#define ALLSTRING                                18      //"%s"
#define ALLSTRING_COLON_ALLSTRING_EXPORT_ALLSTRING    19      //"%s:%s => %s"
#define ROLE_COLON                                20      //"Role:%s"
#define ALLSTRING_EXPORT_ALLSTRING_COLON_ALLSTRING    21      //"%s => %s:%s"
#define SOFT_ASSERT_COLON_DIFFERENT_TRANSACTION        22      //"SOFT_ASSERT: Different transaction "
#define HANDLE_ENC_MODE_REQ                        23      //"handle_enc_mode_req (super_state: %d, sub_state: %d, auth_role: %d, remote_dev_role: %d)"
#define SUPER_STATE_COLON_SUB_STATE_COLON        24      //"super_state: %d, sub_state: %d"
#define AUTH_ROLE_COLON_REMOTE_DEV_ROLE_COLON    25      //"auth_role: %d, remote_dev_role: %d"
#define HANDLE_PAUSE                            26      //"auth_handle_pause (ce_index %d, tid %d, super_state: %d, sub_state: %d,  auth_role: %d, remote_dev_role: %d)"
#define EPR_NOT_SUPPORTED                        27      //"EPR not supported"
#define ALLSTRING_EXPORT_ALLSTRING_NMLKS_NSUCCESS_NFAILURE 28      //"%s => %s, nmlks: %d, nsuccess: %d, nfailure: %d"
#define MLK_STATE_NMLKS_NSUCCESS_NFAILURE         29      //"mlk state: %s, nmlks: %d, nsuccess: %d, nfailure: %d"
#define MLK_ENABLE_STATUS_LINK_STATUS             30      //"MLK enable status link: %d, status: %d"
#define MLK_REAUTH_STATUS_LINK_STATUS             31      //"MLK reauth status link: %d, status: %d"
#define MLK_DISABLE_STATUS_LINK_STATUS             32      //"MLK disable status link: %d, status: %d"
#define NO_MLK_LINKS_AND_MLK_REQUIRED_LINKS     33      //"No mlk links and mlk required links"
#define MLK_STATE_EXPECTED_ACTUAL                34      //"MLK state expected %s, actual %s"
#define NO_LMP_CONNECTION_OR_I_AM_NOT_MASTER    35      //"No lmp connection or I am not master"
#define MLK_STATE_EXPECTED_OR_ACTUAL            36      //"MLK state expected %s or %s, actual %s"
#define FATAL_BB_READ_IN_SLEEP_MODE             37      //"Fatal. BB read in sleep mode."
#define FATAL_BB_WRITE_IN_SLEEP_MODE_REG_VAL     38      //"Fatal. BB write in sleep mode.Reg : %d, Val : %d"
#define TX_PLD_DELAY_START                        39              //"Tx pld delay start"
#define TX_PLD_DELAY_END                        40      //"Tx pld delay end"
#define TPOLL_STARTED_FOR_OFFSET                41      //"Tpoll started for %x 0x%X, offset %x"
#define TPOLL_STOPPED_FOR                        42      //"Tpoll stopped for %x"
#define RX_PLD_DELAY_START                        43      //"Rx pld delay start"
#define RX_PLD_DELAY_END                        44      //"Rx pld delay end"
#define RECD_PARK_MODE_COMMAND_FROM_THE_HOST    45      //"Recd park mode command from the host..."
#define ALLOCATED_PM_ADDR_AR_ADDR                46      //"Allocated pm_addr,ar_addr.%x.%x"
#define QOS_SETUP_COMMAND                        47      //"QoS setup command."
#define AFH_MSS_MSS_PAUSED_AS_AFH_IS_IN_PROGRESS    48      //"AFH<->MSS: MSS paused as AFH is in progress."
#define XYZ_UNABLE_TO_ALLOCATE_MEMORY_FROM_EVENT_BUFFER_POOL    49      //"xyz.Unable to allocate memory from event buffer pool!"
#define HCI_READ_RSSI_COMMAND                    50      //"hci read rssi command:%d"
#define ROLE_SWITCH_INVALID_COMMAND_PARAMETER    51      //"Role switch: Invalid command parameter"
#define ROLE_SWITCH_NO_CONNECTION_ERROR            52      //"Role switch: No connection error"
#define ROLE_SWITCH_SELF_DEVICE_IS_NOT_SUP_THE_SWITCH_ROLE_FEATURE    53      //"Role switch: Self device is not sup the switch role feature"
#define ROLE_SWITCH_REMOTE_DEVICE_IS_NOT_SUP_THE_SWITCH_ROLE_FEATURE    54      //"Role switch: Remote device is not sup the switch role feature"
#define ROLE_SWITCH_SYNC_CONNECTION_EXISTS_CAN_NOT_DO_ROLE_SWITCH    55      //"Role switch: Sync Connection exists Can not do role switch"
#define ROLE_SWITCH_NUMBER_OF_HLC_MORE_THAN_1    56      //"Role switch: number of hlc more than 1"
#define ROLE_SWITCH_SCO_CONNECTION_EXISTS_CAN_NOT_DO_ROLE_SWITCH    57      //"Role switch: SCO Connection exists Can not do role switch"
#define ROLE_SWITCH_CE_STATUS_IS_NOT_LMP_CONNECTED    58      //"Role switch: ce status is %d not LMP_CONNECTED"
#define ROLE_SWITCH_INVALID_HCI_PARAMETER        59      //"Role switch: Invalid hci parameter__"
#define BC_WIN_PGMD                                60      //"BC_win pgmd:0x%x"
#define HOLD_INSTANT_IN_THE_PAST_ENTERING_HOLD_MODE_IMMEDIATELY        61      //"Hold instant in the past. Entering hold mode immediately."
#define CLOCK_WRAP                                62      //"Clock Wrap"
#define HOLD_OFFSET_PROGRAMMED                    63      //"Hold Offset programmed: 0x%X"
#define SNIFF_REDESIGN                            64      //"Sniff redesign 0x48=0x%x, first anchor point=0x%x(slot), 0x%x(half slot), next_instant_in_nat_clk=0x%x(half slot), new_dsniff=%d"
#define XTOL_PROGRAMMED                            65      //"Xtol programmed.%x"
#define MODIFIED_XTOL                            66      //"Modified xtol."
#define PROGRAMMED_SLEEP_MODE_WAKEUP_CLK        67      //"Programmed sleep mode. Wakeup clk:0x%x."
#define DSM_CLK_OSC                                68      //"DSM clk:0x%x, osc=%x"
#define DSM_EXIT_SET                            69      //"DSM exit SET"
#define DSM_EXIT_CLEAR_MODE                        70      //"DSM exit CLEAR mode = %x"
#define WOKEUP_FROM_SLEEPMODE                    71      //"Wokeup from sleepmode."
#define TX_GAIN_PROGRAMMED                        72      //"tx-gain programmed.%x"
#define RF_CONFIG_REG_PROGRAMMED                73      //"rf-config-reg programmed.%x"
#define DROPPED_SNIFF_END_INTR                    74      //"Dropped sniff-end intr."
#define E_E_E_E_E                                75      //"======.%x"
#define HEC_ERROR                                76      //"HEC error.%x"
#define DM1_PACKET_LOOPBACK                        77      //"DM1 packet loopback."
#define DH1_PACKET_LOOPBACK                        78      //"DH1 packet loopback."
#define DM3_PACKET_LOOPBACK                        79      //"DM3 packet loopback."
#define DH3_PACKET_LOOPBACK                        80      //"DH3 packet loopback."
#define DM5_PACKET_LOOPBACK                        81      //"DM5 packet loopback."
#define DH5_PACKET_LOOPBACK                        82      //"DH5 packet loopback."
#define HV1_PACKET_LOOPBACK                        83      //"HV1 packet loopback."
#define EV3_PACKET_LOOPBACK_PACKET_HEADER        84              //"2EV3 packet loopback.Packet_header:%x"
#define HV2_PACKET_LOOPBACK                        85      //"HV2 packet loopback."
#define EV4_OR_2_EV5_PACKET_LOOPBACK_PACKET_HEADER    86      //"EV4 or 2-EV5 packet loopback.Packet_header:%x"
#define EV5_3_EV5_PACKET_LOOPBACK_PACKET_HEADER        87      //"EV5 3-EV5 packet loopback.Packet_header:%x"
#define EV3_OR_3EV3_PACKET_LOOPBACK_PACKET_HEADER    88      //"EV3 or 3EV3 packet loopback.Packet_header:%x"
#define HV3_PACKET_LOOPBACK                        89      //"HV3 packet loopback."
#define DH1_PACKET_LOOPBACK_3                    90      //"3-DH1 packet loopback."
#define DV_PACKET_LOOPBACK                        91      //"DV packet loopback."
#define SEQN_UPDATED                            92      //"SEQN updated.%x"
#define SEQN_UPDATED_FOR_ESCO_PKT                93      //"SEQN updated.%x,for ESCO pkt."
#define BPKT                                    94      //"Bpkt.%x.%x.%x.%x"
#define GPKT                                    95      //"Gpkt.%x.%x.%x.%x"
#define CRC_ERROR                                96      //"CRC error.%x.%x"
#define TX_PKT_TYPE                                97      //"Tx-pkt-type.%x"
#define RESTORED_INVALID_PKT_IN_LUT                98      //"Restored invalid pkt in LUT."
#define TX_EQUAL                                99      //"tx = %x"
#define UNPARK_PDU_SENT                            100      //"Unpark PDU sent."
#define FATAL_DUPLICATE_HLC_DROPPED_INTERRUPT    101      //"FATAL. Duplicate HLC?? Dropped interrupt."
#define HLC_EQUAL                                102      //"HLC.%x"
#define SWITCH_NCC_TO_LMP_MSS_STATE                103      //"SWITCH_NCC_TO:lmp_mss_state.%x"
#define RADIO_CONFIG_REG_CONN_VAL                104      //"radio_config_reg_conn_val:%x"
#define INQ_SCAN_IS_NOT_ENABLED_WHEN_RANDOM_BACKOFF_TIMER_FIRED        105      //"inq-scan is not enabled when random-backoff timer fired."
#define ESCO_CONN_CURRENT_CLOCK_DESCO            106      //"Esco conn -- Current clock %x, Desco %x"
#define FHS_RSSI                                107      //"FHS.rssi.%d"
#define OFFSET_PROGRAMMED_FOR_PARK_IS            108      //"Offset programmed for park is:0x%x."
#define ZERO_RSSI                                109      //"Zero RSSI.rssi=%x , rssi_sample_count=%d , rssi_value_accumulate=%x"
#define PDU_BUFFER_CREATION_FAILED                110      //"PDU Buffer creation failed."
#define LC_FULL_BANDWIDTH_FLAG                    111      //"lc_full_bandwidth_flag = %d"
#define LC_ACL_FULL_BANDWIDTH_FLAG                112      //"lc_acl_full_bandwidth_flag = %d"
#define SCO_PKT_TYPE_REG                        113      //"SCO_PKT_TYPE_REG = 0x%hX"
#define SYNC_FIFO_CONFIG_REG                    114      //"SYNC_FIFO_CONFIG_REG = 0x%hX"
#define ML_SN_SUBRATE                            115      //"ML: 0x%X sn: 0x%X subrate: 0x%X"
#define NEW_SSR_TSNIFF                            116      //"New SSR Tsniff: %d"
#define SSR_IS_DISABLED                            117      //"SSR is disabled"
#define CALCULATED_INSTANT                        118      //"Calculated instant: 0x%X"
#define SSR_COLLISION_DETECTED                    119      //"SSR Collision Detected"
#define SNIFF_SUBRATE_RES                        120      //"Sniff subrate_res: 0x%X 0x%X 0x%X"
#define V2_1_PDU_HANDLER_L                        121      //"2.1 PDU Handler"
#define PDU_OPCODE                                122      //"PDU opcode: %d %d"
#define DISABLING_SSR                            123      //"Disabling SSR"
#define RESETING_LMP_SSR_PARAMETERS_CE            124      //"Reseting LMP SSR Parameters: CE: %d"
#define NOT_ENTERING_SSR_NOT_IN_SNIFF_MODE        125      //"Not entering SSR - Not in sniff mode."
#define NOT_ENTERING_SSR_HOST_HAS_NOT_SET_SSR_OR_LATENCY_IS_LESS    126      //"Not entering SSR -host has not set ssr. Or latency is less"
#define CALCULATED_AND_CURRENT_AFH_MAPS_ARE_SAME_NO_PDU_IS_SENT        127      //"Calculated and current AFH maps are same. No PDU is sent."
#define AFH_TIMER_ALREADY_RUNNING_NOT_RESTARTED        128      //"AFH timer already running. Not re-started."
#define CH_AS_TIMER_STARTED_FOR_1                129      //"1.Ch As timer started for %x."
#define AFH_INST_12_HOURS_AWAY_ASSUMING_INSTANT_PASSED    130      //"AFH inst > 12 hours away. Assuming instant passed. ce_index %d, afh instant 0x%x, piconet clk 0x%x"
#define AFH_INST_CLK_WARP_AROUND_CASE            131      //"AFH inst clk warp around case."
#define AFH_OFFSET                                132      //"AFH offset:0x%x"
#define LMP_AFH_INSTANT_AM                        133      //"LMP_AFH_INSTANT:%d:am:%d"
#define CH_AS_TIMER_STARTED_FOR_2                134      //"2.Ch As timer started for %x"
#define AFH_INSTANT_CALCULATION_AFH_OFFSET        135      //"AFH instant calculation - AFH offset: %d, instant %08x (%d, %d)"
#define AFH_LA_CYCLE_PERIOD_MODIFIED_TO            136      //"afh_la_cycle_period modified to %x"
#define SIGNAL_BEGIN_RECD                        137      //"SIGNAL BEGIN recd."
#define ACCESS_CODE_MISS_INT_CORRUPTION_AVOID    138      //"access_code_miss_int Corruption avoid"
#define LA_TIMER_EXPIRY                            139      //"LA timer expiry."
#define FUNC_LMP_LA_COMMON_TIMER_EXPIRY_HANDLER        140      //"func.lmp_la_common_timer_expiry_handler"
#define CH_AS_TIMER_STARTED_FOR_3                141      //"3.Ch As timer started for %x."
#define CH_AS_TIMER_STARTED_FOR_4                142      //"4.Ch As timer started for %x."
#define FUNC_LMP_HANDLE_CHANNEL_ASSESS_TIMER_EXPIRY        143      //"func.lmp_handle_channel_assess_timer_expiry"
#define FUNC_LMP_HOST_CL_TIMER_EXPIRY            144      //"func.lmp_host_cl_timer_expiry"
#define FUNC_LMP_CHANNEL_MAP_ENGINE                145      //"func.lmp_channel_map_engine"
#define MASTER_SLAVE_MASTER                        146      //"MASTER_SLAVE.master"
#define CH_AS_INPUT_TAKEN                        147      //"Ch As input taken."
#define CH_AS_INPUT_DROPPED                        148      //"Ch As input dropped."
#define MASTER_SLAVE_SLAVE                        149          //"MASTER_SLAVE.slave"
#define FUNC_LMP_GET_MAJORITIZED_CLASSIFICATION        152      //"func.lmp_get_majoritized_classification"
#define FUNC_LMP_SORT_USABLE_CHANNELS_ON_ASSESSMENT        153      //"func.lmp_sort_usable_channels_on_assessment"
#define FUNC_LMP_INIT_LOCAL_ASSESSMENT            154      //"func.lmp_init_local_assessment"
#define CH_AS_TIMER_STARTED_FOR_5                155      //"5.Ch As timer started for %x."
#define FUNC_LMP_DISABLE_LOCAL_ASSESSMENT        156          //"func.lmp_disable_local_assessment"
#define FUNC_LMP_ADD_SCATTERED_CHANNELS_IN_MAP        157      //"func.lmp_add_scattered_channels_in_map"
#define FUNC_LMP_GET_PAIR_CLSS_REPORT_FROM_CH_CLSS    158      //"func.lmp_get_pair_clss_report_from_ch_clss"
#define FUNC_LMP_GET_CHANNEL_MAP_FROM_ARRAY        159      //"func.lmp_get_channel_map_from_array"
#define FUNC_LMP_INIT_AFH_HOST_CLASSIFICATION        160      //"func.lmp_init_afh_host_classification"
#define FUNC_LMP_GET_CURRENT_MAP_USED            161      //"func.lmp_get_current_map_used"
#define FUNC_LMP_INIT_ASSESSMENT_AT_CONNECTION        162      //"func.lmp_init_assessment_at_connection"
#define FUNC_LMP_UPDATE_CH_AS_INDICATORS        163      //"func.lmp_update_ch_as_indicators"
#define NO_OF_CHANNELS_RECD                        164      //"No of channels recd:%d"
#define FUNC_LMP_FORM_MAP_FROM_CH_AS_INDICATOR        165      //"func.lmp_form_map_from_ch_as_indicator"
#define SAME_ANALYSIS                            166      //"Same analysis."
#define LMP_CH_GOOD                                167      //"Good."
#define LMP_CH_INC                                168      //"Inc."
#define LMP_CH_BAD                                169      //"Bad."
#define LMP_CH_DEC                                170                          //"Dec."
#define DIFF_ANALYSIS_CUR_GD_REM_BAD            171      //"Diff analysis.cur:gd, rem:bad"
#define MADE_MIN_AND_BAD                        172      //"Made min and bad."
#define DIFF_ANALYSIS_CUR_BAD_REM_GOOD            173      //"Diff analysis.cur:bad, rem:good"
#define MADE_MAX_AND_GOOD                        174      //"Made max and good."
#define UPDATING_CH_AS_WITH_LAST_RX_PDU            175      //"Updating ch-as with last rx PDU.%x"
#define UPDATING_CH_AS_SKIPPED_DUE_TO_HOLD_STATE    176          //"Updating ch-as skipped, due to hold state."
#define UPDATING_CH_AS_SKIPPED_DUE_TO_PARK_STATE    177          //"Updating ch-as skipped, due to park state."
#define SUP_TO_PGMD_XTOL                        178      //"Sup_to pgmd xtol."
#define LMP_DATAMGR_INFO_REPORT                    179      //"%x.<%x>.(%x/%x).%x.%x.%x.%x q:%x.%x.%x"
#define LAST_MAX_SLOT_REQ_SENT                    180      //"last_max_slot_req_sent=%x"
#define HOLD_INSTANT_REQUESTED_HAS_PASSED        181      //"HOLD instant requested [%x] has passed."
#define UNSNIFF_REQ_ACCEPTED_RECEIVED            182      //"Unsniff req Accepted received"
#define AFH_MSS_LMP_MSS_PAUSED_AS_AFH_IS_IN_PROGRESS    183      //"AFH<->MSS: LMP_MSS paused as AFH is in progress."
#define NOT_HANDLING_PREFERRED_RATE_PDU_AS_PTT_BIT_IS_BEING_SET_OR_CLEARED    184      //"Not handling preferred_rate PDU as PTT bit is being set/cleared."
#define RECEIVED_PREFERRED_DATA_RATE_PDU_ALTHOUGH_AUTO_RATE_PDU_HAS_NOT_BEEN_SENT    185      //"Received Preferred data rate PDU although Auto rate PDU has not been sent"
#define NEW_BROADCAST_SCAN_WINDOW_SLOTS            186      //"New Broadcast scan window = 0x%X slots = 0x%X \n"
#define TIMER_NOT_INVALID                        187      //"Timer Not Invalid!!!"
#define AVOID_AM_ADDR_IS_BECOMING_ZERO            188      //"<Avoid>Am_Addr is becoming zero!"
#define UNABLE_TO_FIND_THE_CE_INDEX                189          //"Unable to find the ce_index"
#define LMP_DECR_POW_PDU_ALREADY_AT_MIN_POWER    190      //"lmp_decr_pow_pdu already at min power."
#define DECR_POWER_LC_TCI_PAUSE_FLAG_TRUE        191      //"decr_power:lc_tci_pause_flag = TRUE."
#define LMP_INCR_POW_PDU_ALREADY_AT_MAX_POWER    192      //"lmp_incr_pow_pdu already at max power."
#define DUT_DISABLED_PTT                        194      //"DUT.Disabled PTT."
#define DUT_ENABLED_PTT                            195      //"DUT.Enabled PTT."
#define TEST_MODE_2_EV3                            196      //"Test-mode:2-EV3.0x%x"
#define TEST_MODE_EV3                            197      //"Test-mode:EV3.0x%x"
#define TEST_MODE_EV4_2_EV5                        198      //"Test-mode:EV4/2-EV5.0x%x"
#define TEST_MODE_EV5_3_EV5                        199      //"Test-mode:EV5/3-EV5.0x%x"
#define PKT_CONFIG_DONE                            200      //"Pkt config done."
#define TESTER_TIMER_FIRED                        201      //"Tester timer fired."
#define DUT_79_HOPS_PROGRAMMED                    202      //"DUT.79 hops programmed"
#define DUT_WHITENING_ENABLED                    203      //"DUT.Whitening enabled."
#define DUT_SINGLE_HOP_PROGRAMMED                204      //"DUT.Single hop programmed.%x"
#define DUT_WHITENING_DISABLED_FOR_TX_TEST        205      //"DUT.Whitening disabled for tx-test."
#define DUT_WHITENING_DISABLED                    206      //"DUT.Whitening disabled."
#define DUT_WHITENING_SWITCH                    207      //"DUT.Whitening set enable = %d."
#define DUT_79_HOPS_PROGRAMMED_EXIT_TESTMODE    208      //"DUT.79 hops programmed. Exit testmode"
#define DISABLED_PTT                            209      //"Disabled PTT."
#define ENABLED_PTT                                210      //"Enabled PTT."
#define TESTER_TIMER_CREATED                    211      //"Tester timer created.0x%x"
#define LMP_SELF_DEVICE_DATA_NUMBER_OF_SCO_CONN        212      //"lmp_self_device_data.number_of_sco_conn =%d "
#define LMP_SELF_DEVICE_DATA_SCO_PKT_TYPE        213      //"lmp_self_device_data.sco_pkt_type = %d"
#define LMP_INITIALIZING                        214      //"LMP : Initializing...."
#define TRYING_TO_INITIATE_SSR_REQ                215      //"Trying to initiate ssr_req"
#define CH_AS_TIMER_STARTED_FOR_6                216          //"6.Ch As timer started for %x."
#define RECV_LEN                                217      //"recv: len: %d"
#define PGRESP_TO_AM_ADDR_PICONET_ID            218      //"PgResp To:am_addr = %d.piconet_id = %d"
#define PGRESP_TO_AM_ADDR_TO_CE_INDEX_FAILED    219      //"PgResp To:am_addr to ce_index failed"
#define PGRESP_TO_NOT_IN_PAGE_SCAN_STATE        220      //"PgResp To:Not in page scan state."
#define HOLD_TPOLL_RESTARTED                    221      //"Hold:Tpoll restarted."
#define PDU_ACK                                    222      //"PDU ACK.%x.%x"
#define PDU_SENT                                223      //"PDU SENT.%x.%x"
#define LMP_RESPONSE_TIMER_EXPIRES_CE_INDEX     224      //"lmp_response_timer expires: ce_index %d, sent_pdu_bm 0x%x, sent_pdu_add_on 0x%x, expected_pdu_bm 0x%x"
#define RESPONSE_TIMEOUT_FOR_PDU                225      //"Response timeout for %d = PDU"
#define DEFAULT_VALUES_OF_PARK_PARAMS_ARE_ENOUGH    226          //"Default values of Park params are enough "
#define POWER_CONTROL_TIMER_EXPIRY                227      //"Power control timer expiry."
#define POWER_CONTROL_TIMER_EXPIRY_2            228      //"2.Power control timer expiry."
#define RADIO_DOES_NOT_SUPPORT_RSSI_READ        229      //"Radio does not support RSSI read."
#define NO_OF_RSSI_SAMPLES                        230      //"No of RSSI samples:%d"
#define RSSI_DBM_VAL                            231      //"RSSI dbm val.%x.%d."
#define GET_DSNIFF                                232      //"Get dsniff:%x"
#define PUT_DSNIFF                                233      //"Put dsniff:%x"
#define LMP_SEND_MAX_SLOT_PDU_TO_ALL_DEVICES_FUNCTION    234      //"lmp_send_max_slot_pdu_to_all_devices function."
#define LMP_SEND_MAX_SLOT_REQ_PDU_TO_ALL_DEVICES_FUNCTION    235      //"lmp_send_max_slot_req_pdu_to_all_devices function."
#define LOCAL_DEVICE_OR_REMOTE_NOT_SUPPORTING_3_SLOT_PACKETS    236      //"Local device or remote not supporting 3 slot packets."
#define LOCAL_DEVICE_OR_REMOTE_NOT_SUPPORTING_5_SLOT_PACKETS    237      //"Local device or remote not supporting 5 slot packets."
#define NOT_GENERATING_PREFERRED_RATE_PARAM_AS_PTT_IS_BEING_SET_CLEARED        238      //"Not generating preferred_rate param as PTT is being set/cleared."
#define LMP_CH_AS_DATA_IS_INITIALIZED            239      //"LMP ch as data is initialized."
#define VENDOR_TEST_CONTROL_PROCESSED            240      //"Vendor Test control processed."
#define VENDOR_HV1_PACKET                        241      //"Vendor HV1 packet"
#define ERROR_TIMER_LEAK                        242      //"Error : Timer leak. %x.%x.%x"
#define PDU_RESPONSE_TIMER_COUNT_DECREASED_TO        243      //"PDU response timer count decreased to 0x%x, %x:%x:%x"
#define ERROR_GENERATE_PDU_FAILED                244      //"Error Generate PDU Failed!!!"
#define SUBRATE_CHECK_REQUIRED                    245      //"subrate check required!!! 0x%X 0x%X"
#define TIMER_HANDLE_IS_NOT_INVALID                246      //"Timer handle is not invalid!!!"
#define UNABLE_TO_GET_CE_INDEX_DROPPING            247      //"Unable to get CE Index, dropping"
#define UNKNOWN_PDU_DROPPING_OPCODE                248          //"Unknown PDU: Dropping opcode 0x%X"

#define REG16    249    //"Reg16: 0x%X"
#define AFH_MAP_WRITTEN    250    //"AFH map written. %d"
#define AFH_DISABLE_STR    251    //"AFH Disable: %d"
#define DISABLE_NBC    252    //"Disable NBC"
#define ENABLE_NBC    253    //"Enable NBC"
#define AM_ADDR_ENCRYPTION_CONTROL_OPCODE    254    //"am_addr = %d, Encryption control opcode: %d"
#define REG_VAL_READ    255    //"reg_val = %d (read)"
#define REG_VAL_WRITTEN    256    //"reg_val = %d (written)"
#define WRITING_FLOW_STOP    257    //"Writing flow stop"
#define WRITING_FLOW_GO    258    //"Writing flow go"
#define ENABLE_EIR_TRANS    259    //"Enable EIR Trans: 0x%X"
#define ENABLE_EIR_REC    260    //"Enable EIR Rec: 0x%X"
#define SELECTED_PACKET_TYPE    261    //"Selected packet type: 0x%x %d"
#define OS_FREE_BUFFER_FAILED    262    //"OS Free Buffer Failed."
#define RANDOM_BACKOFF_TIMER_CREATION_FAILED    263    //"random_backoff_timer Creation Failed"
#define NUM_PKS_EVENT_TIMER_CREATION_FAILED    264    //"num_pks_event_timer creation failed"
#define LC_HANDLE_BASEBAND_COMMANDS_STATUS    265    //"LC handle baseband commands : status = %d"
#define UNABLE_TO_START_SUPERVISION_TIMEOUT_FOR_AM_ADDR    266    //"Unable to start supervision timeout for am_addr %d"
#define OFF_INST_INTERV    267    //"Off: 0x%X inst: 0x%X interv: 0x%X"
#define DFF_MC_INS    268    //"Dff: 0x%X MC: 0x%X Ins: 0x%X"
#define DSNIFF_VALUE_LESS_THAN_2_WRAPPING_TO    269    //" Dsniff value less than 2, wrapping to %d"
#define SNIFF_PGMED_CONNECTOR    270    //"sniff pgmed. connector = %x.%x"
#define KILL_SNIFF_IN_BASEBAND    271    //"Kill sniff in baseband."
#define STARTING_THE_BEACON    272    //"Starting the beacon"
#define DEVICE_IS_IN_SCATTERNET    273    //"Device is in scatternet"
#define NOT_IN_SCATTERNET    274    //"Not in scatternet"
#define EXIT_BEACON    276    //"Exit beacon"
#define KILLING_BEACON_INST_87    277    //"Killing Beacon(inst 0x87)"
#define ENABLING_ENCRYPTION    278    //"Enabling Encryption"
#define UNPARK_LUT_INDEX_CE_INDEX    279    //"Unpark: LUT index=%d ce_index=%d"
#define MAKING_AM_ADDR_ACTIVE    280    //"Making %d am_addr active "
#define STARTING_THE_TPOLL_TIMER_FOR_AM_ADDR    281    //"Starting the TPoll timer for am_addr = %d"
#define MAKING_AM_ADDR_ACTIVE_AS_SLAVE_UPPER_LUT    282    //"Making %d am_addr active As Slave. Upper LUT=%x"
#define LUT_ADDRESS    284    //"lut_address = %x"
#define SLAVE_UNPARKING_SENDING_ID_PKT_AR_ADDR    285    //"Slave unparking...sending ID Pkt... ar_addr = %d"
#define PTT_SET    286    //"PTT SET. :%d"
#define PTT_RESET    287    //"PTT RESET. :%d"
#define DATA_TRANSFER_IN_PROGRESS    288    //"Data transfer in Progress"
#define NO_DATA_TRANSFER_IN_PROGRESS    290    //"No Data transfer in Progress"
#define EVENT_POOL_MEMORY_ALLOCATION_FAILED_FOR_SYNC_LOST_EVENT    291    //"Event pool memory allocation failed for Sync Lost Event"
#define WRITING_TX_POWER_LEVEL    292    //"Writing broadcast tx power level: 0x%x"
#define ENT_SSR_FLAGED_1    293    //"1Ent SSR Flaged: 0x%X"
#define CUR_TO    294    //"Cur: 0x%X, to: 0x%X"
#define EXT_SSR_FLGD    295    //"Ext SSR Flgd"
#define SSR_ENTER_SIGNALLED    296    //"SSR Enter signalled"
#define SSR_EXIT_SIGNALLED    297    //"SSR Exit signalled"
#define LMP_SSR_ACTIVE_SIGNALLED    298    //"LMP_SSR_ACTIVE signalled"
#define ACMSINT    299    //"ACmsInt"
#define PARK_CONN_INTR_CE_INDEX_TAKEN_AS_ZERO    300    //"Park conn_intr: ce_index taken as zero"
#define PARK_CONNECTION_INTR    301    //"Park Connection intr"
#define OS_SEND_SIGNAL_TO_TASK_FAILED    302    //"OS send signal to task failed\n"
#define RX_INTER_PKT_PAY_HOP    303    //"RX inter: pkt: 0x%X pay: 0x%X hop: 0x%X"
#define ERROR_SENDING_SIGNAL_TO_LC_RX_TASK_N    305    //"Error sending signal to lc_rx_task \n"
#define UNKNOWN_RECEIVE_INTR_RECD_AM_ADDR_PHY_PICONET_ID    306    //"unknown receive intr recd.am_addr=%d, phy_piconet_id=%d"
#define UPDATING_SCHEDULER    307    //"Updating scheduler"
#define SENDING_ACK_RECEIVED_SIGNAL    308    //"Sending ack Received Signal"
#define ERROR_SENDING_SIGNAL_TO_LC_TX_TASK_N    309    //"Error sending signal to lc_tx_task \n"
#define MULTIPLE_SIGNALS    310    //"Multiple signals: %d"
#define LC_ISR_NBC    311    //"NBC: %d"
#define LC_ISR_WRITING    312    //"Writing: 0x%X"
#define PARK_NCTO_STR    313    //"Park NCTO"
#define PAGE_TIMEOUT_OR_NEW_CONNECTION_TIMEOUT    314    //"Page Timeout or New Connection Timeout"
#define PAGE_TIMEOUT_INT    315    //"Page Timeout INT"
#define NEW_CONNECTION_TO_INT    316    //"New Connection TO INT "
#define BB_NC_TIMEOUT_STR    317    //"BB_NC_TIMEOUT"
#define NBC_TIMEOUT    318    //"NBC Timeout %d"
#define NBC_TIMEOUT_PKT_TYPE    319    //"NBC Timeout pkt_type = %d"
#define HOLD_INTERRUPT    321    //"Hold interrupt"
#define MODE_STATUS_INTR_FOR_PAGE_IMODE    322    //"Mode status INTR for Page imode = %x"
#define TX_INTERRUPT_HOP    323    //"Tx interrupt: 0x%X hop: 0x%X"
#define CALLING_SET_BROADCAST_SCAN    324    //"Calling Set broadcast scan"
#define START_BEACON_IND    325    //"Start beacon ind."
#define INITIATING_SLAVE_UNPARK    326    //"Initiating Slave Unpark %d"
#define MAX_TRIALS_TO_UNPARK_THE_DEVICE_OVER    327    //"Max trials to unpark the device Over"
#define CALLING_MODIFY    328    //"Calling modify"
#define END_OF_ACCESS_WIND    329    //"End of access wind"
#define AUTO_UNPARK_FAILED    330    //"Auto Unpark failed: %X"
#define TRYING_TO_UNPARK_ATTEMP    331    //"Trying to unpark attemp = %d"
#define NCTO_OCCURED_LUT_INDEX_NEW_LUT_INDEX    332    //"NCTO occured lut_index=%d, new_lut_index=%d"
#define NEW_AM_ADDR_FULL_CLOCK    333    //"New am_addr = %d Full Clock = %d\n"
#define ROLE_SWITCH_FAILED_MAKING_OLD_AM_ADDR_ACTIVE    334    //"Role switch failed. Making old am_addr %d active"
#define OLD_AM_ADDR_NEW_AM_ADDR    335    //"old am addr = %x new_am_addr = %x"
#define INVALID_STATE_NEW_CONN_TIMEOUT_RECD    336    //"Invalid State new conn timeout recd..."
#define FHS_SENT_INTR    337    //"FHS Sent Intr"
#define SWITCHING_TO_SLAVE_PICONET    338    //"Switching to Slave Piconet"
#define RANDOM_START_INTR_ONLY_FOR_1_1_COMPATIBILITY    339    //"Random Start Intr - Only for 1.1 Compatibility "
#define SWITCHING_TO_MASTER_PICONET    340    //"Switching to Master Piconet"
#define BASEBAND_ENTERING_PAGE_RESPONSE_STATE    341    //"Baseband entering Page Response State"
#define SCAN_FOR_2ND_ID    342    //"Scan for 2nd ID"
#define SCAN_FOR_1ST_ID    343    //"Scan for 1st ID"
#define ESCO_PRIMARY_AM_ADDR    344    //"ESCO primary am_addr: 0x%X"
#define ESCO_CLK_DIFF    345    //"ESCO: clk diff: %u"
#define LC_PROGRAMING_BB_REGS_DSCO_TSCO_SCO_CE_INDEX    346    //"LC programing BB regs...Dsco = %d, Tsco=%d sco_ce_index = %x\n"
#define SCO_CONN_PROGRAMMED_SLOT_OFFSET    347    //"SCO conn programmed. Slot offset = 0x%x"
#define EXITING_SSR_MODE_BB_LMP    348    //"Exiting SSR mode: BB/LMP"
#define ENTERING_SSR_MODE_BB    349    //"Entering SSR mode: BB"
#define ENTERING_SSR_MODE_LMP    350    //"Entering SSR mode: LMP"
#define LC_HLC_SIGNAL_IN_LC_RX_TASK_LMP_SELF_DEVICE_DATA_DEVICE_STATUS    351    //"LC_HLC_SIGNAL in lc_rx_task lmp_self_device_data.device_status %x"
#define KILL_HLC_AM_ADDR_PICONET_ID    352    //"Kill HLC : am_addr=%d : piconet_id=%d"
#define STARTING_PERIODIC_TMER_FOR_MILLI_SECONDS    353    //"Starting Periodic Tmer for %d Milli Seconds \n"
#define STARTING_PERIODIC_INQUIRY    354    //" Starting Periodic Inquiry"
#define LMP_NUM_INQ_RESP_RECEIVED    355    //"lmp_num_inq_resp_received:%x"
#define LC_KILLING_PERIODIC_INQUIRY    357    //"lc killing periodic inquiry "
#define INQUIRY_RECD_LAP    358    //"Inquiry : Recd LAP : %x"
#define PROGRAMING_DIAC_INQUIRY    359    //"Programing DIAC Inquiry \n"
#define PRTY_BITS    360    //"prty_bits : %x,%x,%x,%x,%x"
#define LC_STARTING_PAGING    361    //"Lc Starting Paging"
#define PAGE_CLK_OFF    362    //"Page Clk off: 0x%X"
#define HANDLE_RECV_PKT_PAY    363    //"handle_recv: pkt: 0x%X pay: 0x%X"
#define LC_TASK_IGNORING    364    //"Ignoring: 0x%X"
#define GOT_EIR_PKT_PAY    365    //"Got EIR: pkt: 0x%X pay: 0x%X"
#define FHS_PKT_RECD_DEACTIVITING_OLD_AM_ADDR    366    //"FHS Pkt recd... Deactiviting old am_addr = %d\n"
#define FHS_PKT_RECD_ACTIVITING_NEW_AM_ADDR    367    //"FHS Pkt recd...Activiting new am_addr = %d\n"
#define LC_TAS_FHS    368    //"FHS: 0x%X 0x%X 0x%X 0x%X 0x%X "
#define FOUND_EIR_WAITING_FOR_GOT_EIR    369    //"Found EIR - waiting for Got EIR"
#define RECEIVED_L2CAP_DATA_PACKET    370    //"Received L2CAP Data packet."
#define LC_RESCHEDULE_CALLED    371    //"Lc Reschedule called"
#define BURST_DATA_LENGTH_IS_ZERO_DATA_NOT_GENERATED    372    //"Burst Data length is ZERO - Data not generated"
#define WRITING_BURST_DATA_TO_THE_FIFO    373    //"Writing Burst data to the FIFO\n"
#define LC_TASK_ACKD    374    //"Ackd: 0x%X 0x%X %d"
#define CHANNEL_REG_IS    376    //"Channel reg is: 0x%x"
#define SCO_PKT_TYPE_REG_IS    377    //"SCO Pkt Type reg is: 0x%x"
#define PROGRAMMED_BB_TO_SINGLE_FREQUENCY_MODE    378    //"Programmed BB to Single frequency mode\n"
#define SCO_PACKET_TYPE_REG_AFTER_HOP_79    379    //"Sco Packet Type Reg after Hop-79: %x \n"
#define INVALID_HOPPING_MODE    380    //"Invalid Hopping mode!\n"
#define GENERATING_BURST_DATA_TO_THE_MASTER    381    //" Generating Burst data to the Master!
#define LMP_PDU_ACK_RECD_SIGNAL_SENDING_TO_LMP_TASK_FAILED    382    //"LMP PDU ack recd signal sending to LMP task failed\n"
#define KILLING_ALL_SCANS_TIMERS    383    //"Killing all Scans Timers"
#define INVALID_TEST_SCENARIO    385    //"Invalid Test scenario !!"
#define UNABLE_TO_FILL_TEST_PATTERN_FOR_BURST_DATA    386    //"Unable to fill test pattern for Burst Data"
#define WRITING_BURST_DATA_TO_FIFO    387    //"Writing burst data to FIFO"
#define BURST_TYPE    388    //"Burst-type=%x."
#define GENERATING_FLUSH_COMPLETE    389    //"Generating flush complete..."
#define GENERATING_FLUSH_OCCURED    390    //"Generating flush occured..."
#define PKT_TYPE_CHANGED_TO    391    //"Pkt type changed to: %X"
#define CE_INDEX_EXTRACTION_FROM_AM_ADDR_FAILED    392    //"CE index extraction from AM Addr failed\n"
#define CMD_STS_PAGE    393    //"CMD sts page"
#define WRITING_BROADCAST_PACKET_TYPE_TO_AM_ADDR_ZERO    394    //"Writing broadcast packet type to am_addr zero\n"
#define ZERO_LENGTH_PACKET_QUEUED    395    //"Zero length packet queued"
#define LC_UTILS_TRYING    396    //"Trying: %d 0x%X"
#define LC_UTILS_FLUSHED    398    //"Flushed: %d"
#define ACK_RECVD_FOR_SET_AFH    400    //"Ack recvd. for set_afh:%d"
#define LC_KILL_HLC_AM_ADDR_CE_INDEX_PHY_PICONET_ID    401    //"LC Kill HLC : am_addr=%d ce_index=%d phy_piconet_id=%d"
#define DETACH_HANDLE_IS_NOT_INVALID    402    //"Detach handle is not Invalid!!!"
#define DETACH_CE_STATUS_IS_ALREADY_DISCONNECTING    403    //"Detach ce_status is already disconnecting."
#define DETACH_TIMER_CREATION_FAILED    404    //"Detach timer creation failed."
#define DETACH_TIMER_STARTING_FAILED    405    //"Detach timer starting failed."
#define HOLD_INTR_FROM_BB    406    //"Hold intr from BB."
#define START_HOLD    407    //"Start Hold"
#define END_HOLD    408    //"End Hold"
#define SLAVE_INITIATED_UNPARK_AR_PI    409    //"Slave initiated unpark:ar:%d pi: %d"
#define DUPLICATE_AR_ADDR_RECD    410    //"Duplicate Ar_addr = %d recd %d"
#define BUTTON_2_PRESSED    411    //" -------- BUTTON 2 PRESSed ------------: %d"
#define XXXXXXX_INT_REG_READ_IN_BUTTON_1    412    //"******* %x INT reg Read in button 1"
#define XXXXXXX_HOST_RX_PATH_READ_IN_BUTTON_1    413    //"******* %x HOST RX PATH Read in button 1"
#define XXXXXXX_HOST_TX_PATH_READ_IN_BUTTON_1    414    //"******* %x HOST TX PATH Read in button 1"
#define UNABLE_TO_DELETE_PERI_INQ_TIMER    415    //"Unable to delete peri_inq timer"
#define LC_SHUTDOWN_UNABLE_TO_DELETE_LC_TX_TASK_HANDLE    417    //"Lc_shutdown : Unable to delete lc_tx_task_handle"
#define LC_SHUTDOWN_UNABLE_TO_DELETE_LC_RX_TASK_HANDLE    418    //"Lc_shutdown : Unable to delete lc_rx_task_handle"
#define FAILED_TO_DELETE_ACL_DATA_BUFFER_POOL    419    //"Failed to delete ACL DATA BUFFER POOL!"
#define FAILED_TO_DELETE_SCO_DATA_BUFFER_POOL    420    //"Failed to delete SCO DATA BUFFER POOL!"
#define FAILED_TO_DELETE_ACL_DATA_BUF_POOL_TO_HOST    421    //"Failed to delete ACL DATA BUF POOL to host!"
#define FAILED_TO_DELETE_SCO_DATA_BUF_POOL_TO_HOST    422    //"Failed to delete SCO DATA BUF POOL to host!"
#define LC_MODULE_RESET    423    //"lc_module_reset:"
#define UNABLE_TO_DELETE_NUM_PKS_EVENT_TIMER    424    //"Unable to delete num_pks_event_timer"
#define LC_INVALID_COMMAND    425    //"Invalid command"
#define SSR_TSNIFF_IS_ZERO    426    //"SSR Tsniff is zero!!!"
#define LC_HANDLE_CMD_STS_EVT_ENABLE_TO_SEND_SIGNAL    427    //"lc_handle_cmd_sts_evt: enable to send signal "
#define LMP_HANDLE_ACL_DISCONNECT_FAILED    428    //"lmp_handle_acl_disconnect: Failed\n"
#define ERROR_GETTING_CE_INDEX_FROM_AM_ADDR    429    //"Error getting ce_index from am_addr\n"
#define ERROR_SENDING_SIGNAL_TO_LC_RX_TASK    430    //"Error sending signal to lc_rx_task \n"
#define MOVING_FROM_ACTIVE_TO_PARKED_STATE_FAILED    432    //"Moving from Active to parked state failed\n"
#define ERROR_SENDING_SIGNAL_TO_LMP_TASK_ERROR    433    //"Error sending signal to lmp_task Error = %d \n"
#define ERROR_SENDING_SIGNAL_TO_LMP_TASK    434    //"Error sending signal to lmp_task \n"
#define ERROR_SENDING_SIGNAL_TO_LC_TX_TASK    435    //"Err sending signal to lc_tx_task"
#define GETTING_CE_INDEX_FROM_AM_ADDR_FAILED_AM_ADDR_LOG_PIC_ID    436    //"Getting CE index from AM addr failed : am_addr =%d log_pic_id = %d"
#define MSS_NCTO_RELEASING_PIC_ID_FAILED    438    //"MSS NCTO:Releasing pic ID failed"
#define INQ_RESPONSE_TIMEOUT_DEPRICIATED_INTERRUPT_SHOULD_NOT_COME_HERE    439    //"Inq Response Timeout Depriciated Interrupt -> Should not come here"
#define RANDOM_BACKOFF_TIMER_START_FAILED    440    //"random_backoff_timer Start Failed"
#define RANDOM_END_INTERRUPT_DEPRECIATED_SHOULD_NOT_COME    441    //"Random End Interrupt - Depreciated - Should not come"
#define LC_TX_TASK_INVALID_SIGNAL_RECEIVED    442    //"LC_TX_TASK: INVALID SIGNAL RECEIVED!"
#define LC_RX_TASK_SWITCH_ROLE_RECD    444    //"LC RX Task Switch role recd."
#define LC_RX_TASK_INVALID_SIGNAL_RECD    445    //"LC_RX_TASK: INVALID SIGNAL RECD!"
#define HARDWARE_LVL_CONNECTION_CONNECTION_ENTITY_IS_INVALID_AM_ADDR    447    //"Hardware Lvl connection:Connection entity is invalid am_addr = %d \n"
#define OS_START_TIMER_FAILED_N    448    //"OS start timer failed\n"
#define KILL_HLC_CE_INDEX_NOT_AVAIL    449    //"kill_hlc-ce_index not avail: %d"
#define START_PERIODIC_INQ_FAILED_TO_CREATE_TIMER    450    //"Start Periodic Inq: Failed to create timer!"
#define START_PER_INQ_FAILED_TO_START_TIMER    451    //"Start Per Inq: Failed to start timer!"
#define START_PERIODIC_INQ_FAILED_TO_START_TIMER_PERIODIC_INQUIRY_TIMER    452    //"Start Periodic Inq: Failed to start timer periodic_inquiry_timer %x"
#define START_PER_INQ_UNABLE_TO_DELETE_TIMER    453    //"Start Per Inq: Unable to delete timer!\n"
#define SCO_LINK_WITH_HV1_EXISTS    454    //"Sco link with HV1 exists "
#define TWO_HV2_EXISTS    455    //"Two HV2 exists "
#define INVALID_NUMBER_OF_SCO_CONNECTIONS    456    //"Invalid number of SCO connections %d "
#define NO_PACKET_IN_THE_HEADERS_QUEUE    457    //"No packet in the headers queue"
#define MISSED_INTERRUPT_GOT_FHS_INSTEAD_OF_EIR    458    //"Missed interrupt got FHS instead of EIR"
#define PAYLOAD_TRUNCATED_TO    459    //"Payload truncated to: %d"
#define HANDLE_RECD_PKT_UNABLE_TO_ALLOC_MEMORY    460    //"Handle_recd_pkt: Unable to alloc memory!"
#define PREVIOUS_FHS_POINTER_IS_NOT_NULL    461    //"previous_fhs_pointer is NOT NULL"
#define EMPTY_LMP_PKT_RECVD    462    //"Empty lmp-pkt recvd"
#define UNABLE_TO_ALLOCATE_LMP_DATA_MEMORY    463    //"Unable to allocate LMP data memory"
#define OS_ALLOC_BUFFER_FAILED_FLUSHING    464    //"OS Alloc-buffer failed! flushing!!!"
#define DUMMY_NBC_TIMEOUT    466    //"Dummy NBC Timeout, clock:0x%08x"
#define UNEXPECTED_PKT_SRC_IN_ACKD_PKT    467    //"Unexpected pkt src %d in ackd pkt"
#define LC_DISABLE_INTR_WRONG_INTERRUPT_TYPE    469    //"lc_disable_intr : wrong interrupt type"
#define LC_HANDLE_CMD_STS_EVT_UNABLE_TO_SEND_SIGNAL_TO_EVENT_TASK    471    //"lc_handle_cmd_sts_evt: Unable to send signal to event task "
#define TIMER_HANDLE_IS_INVALID_REQUIRED    472    //"Timer handle is invalid!!! required: %d"
#define AFH_RECOVERY    473    //"AFH Recovery."
#define NOT_CHANGING_AFH_MODE    474    //"Not Changing AFH mode!!!"
#define CHANNEL_REGISTER_CORRUPTION    475    //"Channel register corruption"
#define CREATE_TIMER_HANDLE_IS_NOT_INVALID    476    //"Create Timer: Handle is not INVALID: %d"

#define INIT_2_1_SELF_DEVICE_DATA_STR    477    //"Init 2.1 Self device Data"
#define BTC_2_1_INIT_ACLQ    478    //"ACLQ: 0x%X %d"
#define BTC_2_1_INIT_Giving    479    //"Giving: 0x%X %d"
#define BTC_2_1_INIT_FLOW_STOP    480    //"Flow stop: %d"
#define BTC_2_1_INIT_FloW_GO    481    //"Flow go: %d"
#define BTC_2_1_INIT_PAUSE_ACL    482    //"Pause ACL: %d"
#define BTC_2_1_INIT_RESUME_ACL    483    //"Resume ACL: %d"
#define BTC_2_1_INIT_REQUEUED_ACL    484    //"Requeued acl: 0x%X %d"
#define NEW_INQ_ID_TX_PWR    485    //"New inq_id_tx_pwr: 0x%X"
#define EIR_EVENT    486    //"EIR Event: 0x%X"
#define MAX_SLOT_REQ_QUEUED_FOR_CH_CON_PKT_TYPE_CMD    487    //"Max-slot-req queued for ch con pkt type cmd."
#define NO_MAX_SLOT_REQ_IS_SENT_FOR_CH_CON_PKT_TYPE_CMD    488    //"No max-slot-req is sent for ch con pkt type cmd."
#define ERROR_SENDING_SIGNAL    489    //"Error sending signal."
#define FLAG_IS_NOT_IDLE    490    //"Flag is not idle: %d"
#define AFH_MSS_CE_PTR_MSS_CMD_PTRIS_NOT_NULL    491    //"AFH<->MSS.ce_ptr->mss_cmd_ptris not NULL."
#define HCI_HANDLE_SWITCH_ROLE_COMMAND_FAILED    492    //"HCI handle switch role command failed\n"
#define AFH_MSS_LMP_CE_PTR_MSS_CMD_PTRIS_NOT_NULL    493    //"AFH<->MSS.LMP_ce_ptr->mss_cmd_ptris not NULL."
#define ISO_PKT_NOT_NULL    494    //"Iso pkt !NULL"
#define USB_TRYING_TO_QUEUE_SCO_PACKET_IGNORING    495    //"USB: Trying to queue sco packet - ignoring"
#define OVER_RUN    496    //"Over Run"
#define FIFO_LEN_3    497    //"Fifo Len < 3"
#define S3C2410_USB_OUT_DM    498    //"DM %X %X"
#define S3C2410_USB_OUT_FAILED    499    //"Failed. %X %X"
#define LEN_4_IGNORE    500    //"Len < 4, ignore: %d 0x%X"
#define S3C2410_USB_OUT_TMP1    501    //"0x%X"
#define S3C2410_USB_OUT_TMP2    502    //"0x%X"
#define S3C2410_USB_OUT_ACL_TX    503    //"ACL TX"
#define EXTRACTED_SYNC_PKT_TYPES    504    //"Extracted Sync pkt types: 0x%hX"
#define SETUP_SYNC_EXTRACTED_INFO    505    //"Setup sync: Extracted info:"
#define TX_BANDWIDTH    506    //"tx_bandwidth = %x"
#define RX_BANDWIDTH    507    //"rx_bandwidth = %x"
#define MAX_LATENCY    508    //"max_latency = %x"
#define VOICE_SETTING    509    //"voice_setting = %x"
#define RETX_EFFORT    510    //"retx_effort = %x"
#define PKT_TYPES    511    //"pkt_types = %x"
#define ACCEPT_SYNC_EXTRACTED_INFO    512    //"Accept sync: Extracted info:"
#define LMP_RELEASE_AM_ADDR_FAILED    513    //"lmp release am_addr failed"
#define SELF_DEVICE_IS_NOT_SUP_THE_SNIFF_MODE_FEATURE    514    //"Self device is not sup the sniff mode feature"
#define SELF_DEVICE_IS_NOT_SUP_THE_PARK_MODE_FEATURE    515    //"Self device is not sup the park mode feature"
#define ERROR_GETTING_PM_ADDRESS    516    //"Error Getting PM address"
#define ERROR_GETTING_AR_ADDRESS    517    //"Error Getting AR address"
#define HCI_COMAMND_TASK_NULL_COMMAND_PACKET_RECEIVED    518    //"HCI comamnd Task:NULL command packet received"
#define CANNOT_FREE    519    //"Cannot free: 0x%X"
#define FREE_TIMERPOOL_FAILED    520    //"Free timerpool failed"
#define TIMER_CREATION_FAILED    521    //"Timer Creation Failed!"
#define INVALID_TIMER_HANDLE    522    //"Invalid timer handle 0x%X"
#define TIMER_IS_NOT_RUNNING    523    //"Timer is not running 0x%X"
#define BUFFER_ALLOCATION_FAILED_POOL    524    //"Buffer Allocation Failed Pool: %d"
#define INSTRUCTING_BASEBAND_TO_CREATE_ESCO_CONNECTION    525    //"Instructing baseband to create eSCO connection"
#define CREATING_ESCO_FOR_LT_ADDR    526    //"Creating ESCO for lt_addr = %d"
#define CONNECTOR_REG    527    //" Connector_Reg = 0x%x"
#define ESCO_INTERVAL_REGISTER_STR    528    //"ESCO_INTERVAL_REGISTER = 0x%x"
#define ESCO_RX_LENGTH_TYPE_REGISTER_STR    529    //"ESCO_RX_LENGTH_TYPE_REGISTER = 0x%x"
#define MASTER_CLOCK_USED    530    //"Master Clock used = 0x%x"
#define MASTER_CLOCK_AFTER_PROGRAMMING    531    //"Master Clock After Programming = 0x%x"
#define ESCO_WINDOW_DESCO_REGISTER_STR    532    //"ESCO_WINDOW_DESCO_REGISTER = 0x%x"
#define ESCO_INTERVAL    533    //" ESCO_INTERVAL = 0x%x"
#define ESCO_WINDOW    534    //" ESCO_WINDOW = 0x%x"
#define ESCO_RX_LENGTH    535    //" ESCO_RX_LENGTH = 0x%x"
#define ESCO_RX_TYPE    536    //" ESCO_RX_TYPE = 0x%x"
#define DESCO    537    //" DESCO = 0x%x"
#define MTOS_PACKET_LEN    538    //"Mtos packet len =%d "
#define STOM_PACKET_LEN    539    //"Stom packet len =%d"
#define INSTRUCTING_BASEBAND_TO_KILL_THE_ESCO_CONNECTION    540    //"Instructing baseband to kill the eSCO connection"
#define INITILIZING_THE_ESCO_SCHEDULER    541    //"Initilizing the ESCO scheduler"
#define QUEUING_THE_ESCO_DATA_PACKET_IN_SCHEDULER    542    //"queuing the esco data packet in scheduler"
#define QUEUE_IS_FULL    543    //"Queue is FULL"
#define FOUND_INSTANT_AT_INDEX    544    //"Found Instant 0x%x at index %d"
#define THERE_ARE_NO_ESCO_ENTITIES_ASSIGNED    545    //"There are no ESCO entities assigned"
#define NOT_ENOUGH_DATA_IN_THE_QUEUE_PADDING_WITH_0_S    546    //"Not enough Data in the Queue Padding with 0's"
#define ALL_FRAGMENTS_WRITTEN_INCREMENTING_READ_INDEX    547    //"All fragments written, Incrementing read_index"
#define ESCO_SCHEDULER_IS_FULL    548    //"ESCO Scheduler is Full"
#define ESCO_WINDOW_OVERLAPS    549    //"ESCO window overlaps"
#define INCREMENTING_WRITE_POINTER    550    //"Incrementing Write Pointer = %d"
#define ESCO_SCHEDULER_LENGTH    551    //"ESCO Scheduler Length = %d"
#define RX_PACKETS_WITH_CRC_ERROR    552    //"Rx packets with CRC error = %d"
#define RX_PACKETS_CORRECT    553    //"Rx packets Correct        = %d"
#define TOTAL_TX_PACKETS_COUNT    554    //"Total Tx packets Count    = %d"
#define TOTAL_ESCO_PKTS_FROM_HOST    555          //"Timer Format Test : 0x%x , %d"
#define ESCO_NUM_COMPLETE_SENT    556    //"ESCO num complete sent    = %d"
#define LC_SYNC_LINKS_E_E_E_E    557    //"=========================="
#define STARTING_TO_SCHEDULER_ESCO_PACKET    558    //"Starting to Scheduler ESCO packet "
#define CANNOT_SCHEDULE_NOW_AS_PREVOIUS_PKT_OVERLAPS    559    //"Cannot schedule now as prevoius pkt overlaps"
#define SCHEDULER_DOSENT_HAVE_FREE_ENTRIES    560    //"Scheduler dosent have free entries, so not FIFO or scheduler for now ! "
#define SCHEDULER_DID_NOT_FIND_ANY_E_SCO_CE_S_RETURNING    561    //"Scheduler did not find any e-SCO CE's returning"
#define DATA_AVALIABLE_IN_ESCO_CE_INDEX    562    //"Data avaliable in ESCO_CE index = %d"
#define NEXT_INSTANT_IS_GREATER_THAN_HIGH_MARK_WAITING_FOR_SOME_MORE_TIME    563    //"Next instant is greater than HIGH MARK Waiting for some more time "
#define FIFO_DOESN_T_HAVE_ENOUGH_FREE_SPACE_NOW    564    //"FIFO doesn't have enough free space now"
#define NEXT_INSTANT_IS_GREATER_THAN_LOW_MARK    565    //"Next instant is greater than LOW MARK but scheduler has more than one entry Waiting for some more time "
#define LOADING_DEFAULT_PACKET_TO_THE_SCHEDULER    566    //"Loading Default packet to the scheduler"
#define DATA_IS_NOT_AVALIABLE_IN_THE_SCHEDULER    567    //"Data is not avaliable in the Scheduler"
#define SENDING_ACK_RECEIVED_SIGNAL_WITH_STATUS    568    //"Sending ACK Received Signal with Status = %d"
#define ESCO_INSTANT_INTERRUPT_FOR_LT_ADDR_PID    569    //"ESCO Instant Interrupt for lt_addr = %d PID = %d"
#define COULD_NOT_FIND_ESCO_CE_FOR_LT_ADDR    570    //"Could not find ESCO CE for lt_addr = %d"
#define SCHEDULER_DOESNOT_HAVE_ANY_ENTRY    571    //"Scheduler doesnot have any entry "
#define DISCARDING_ONE_ESCO_PKT    572    //"Discarding one ESCO pkt "
#define FLUSHING_ESCO_FIFO_FOR_BYTES    573    //"Flushing ESCO fifo for %d bytes"
#define SCHEDULER_ENTRY_HAS_BECOME_EMPTY    574    //"Scheduler entry has become empty"
#define THE_NEW_ESCO_WINDOW_IS_OVERLAPING_WITH_THE_CURRENT    575    //"The New eSCO window is overlaping with the current"
#define SCHEDULER_IS_NOT_READY_THIS_SHOULD_NEVER_HAPPEN    576    //"Scheduler is not ready This Should never Happen"
#define SCHEDULER_NOT_CORRECTLY_LOADED_OR_INVALID_INTR    577    //"Scheduler not correctly loaded or invalid intr"
#define SCHEDULER_CE_INDEX_CE_INDEX_CORRESPONDING_TO_INTERRUPT    578    //"Scheduler CE index = %d CE index corresponding to interrupt = %d"
#define INCREMENTING_SCHEDULER_READ_PTR    579    //"Incrementing Scheduler Read_ptr = %d"
#define PREVIOUS_ESCO_WINDOW_IS_NOT_ACTIVE    581    //"Previous ESCO window is not active"
#define SCHEDULER_IS_NOT_READY_WITH_PACKET    584    //"Scheduler is not ready with packet"
#define SCHEDULER_NOT_CORRECTLY_LOADED_OR_INVALID_INTR_SCHEDULER_CE_INDEX    585    //"Scheduler not correctly loaded or invalid intr,scheduler CE index = %d "
#define CE_INDEX_IN_INTERRUPT    586    //"CE index in interrupt = %d"
#define SCHEDULER_READ_INDEX    587    //"Scheduler Read_index = %d"
#define SCHEDULER_WRITE_INDEX    588    //"Scheduler Write_index = %d"
#define SCHEDULER_LENGTH    589    //"Scheduler length = %d"
#define UPPER_LUT_ADDR_VALUE    590    //"Upper Lut addr = 0x%x Value = 0x%x"
#define LOWER_LUT_ADDR_VALUE    591    //"Lower Lut addr = 0x%x Value = 0x%x"
#define ESCO_WINDOW_END_INTERRUPT_FOR_LT_ADDR_PID    592    //"ESCO Window End Interrupt for lt_addr = %d PID = %d"
#define THIS_INTERRUPT_IS_FOR_THE_PREVIOUS_NODE    594    //"This interrupt is for the previous node "
#define PACKET_WAS_TXMITTED_IN_THE_WINDOW    595    //"Packet was txmitted in the window [%d], sending ack received signal at window end"
#define INVALID_END_OF_WINDOW_INTR    596    //"Invalid End of Window Intr"
#define ERRONOUS_ESCO_LT_ADDRESS_IN_END_OF_WINDOW_INTR    597    //"Erronous ESCO LT address in End of Window Intr"
#define LT_ADDR_IN_INTERRUPT    598    //"LT addr in interrupt = %d"
#define NEXT_CE_INDEX_NEXT_AM_ADDR    599    //"Next Ce index = %d, Next am_Addr = %d"
#define EOW_FOR_NON_ACTIVE    600    //"EOW for non active"
#define CHANGING_OVERLAP_STATUS_OF_NEXT_ESCO_WINDOW    603    //"Changing overlap status of next ESCO window"
#define ACK_RECEIVED_FOR_ESCO_CE_STATUS    604    //"Ack received for esco CE = %d, Status = %d"
#define ACK_RECEIVED_FOR_UNASSIGNED_ESCO_CE_ACK_STATUS    605    //"Ack received for unassigned ESCO CE = %d Ack _status = %d"
#define ACK_RECEIVED_FOR_ALL_THE_FRAGMENTS    606    //"ACK received for all the fragments"
#define FREEING_Q    607    //"freeing q =%d"
#define QLEN_CORRUPTED    608    //"Qlen Corrupted"
#define DQ_LEN    609    //"DQ Len = %d"
#define CE_NUM_ESCO    610    //"ce = %d num esco = %d"
#define ACK_RECEIVED_WITH_STATUS_REXMIT_NOT_HANDLED_NOW    611    //"Ack received with status = Rexmit Not handled now"
#define ESCO_REVEIVE_INTERRUPT_LT_ADDR_PICONET_ID_PACKET_HEADER    612    //"ESCO Reveive Interrupt lt_addr = %d, piconet_id = %d packet_header = 0x%x"
#define PACKET_RECD_WITH_CRC_ERROR_PACKET_HEADER    615    //"Packet recd with CRC Error packet_header = 0x%x"
#define RECEIVED_ESCO_PACKET_LEN_AND_CE_INDEX_STATUS    616    //"Received ESCO packet len and ce_index = 0x%x, Status = 0x%x"
#define RX_PKT_LEN_ESCO_CE_INDEX_CH    617    //" Rx Pkt len = 0x%x ,esco_ce_index = %d ,ch = 0x%x"
#define ESCO_RX_BUFFER_ALLOCATION_FAILED    618    //"ESCO Rx buffer allocation failed"
#define USING_INIT_2_PROCEDURE_TO_CREATE_ESCO    619    //"using INIT 2 procedure to create esco"
#define SIW_1701_SELECTED    620    //"SIW_1701 selected."

#define INVALID_LENGTH_PACKET_RECEIVED_SYNC_LOST    621    //"Invalid length packet Received Sync LOST \n"
#define ACL_BUFFER_POOL_MEMORY_ALLOCATION_FAILED    622    //"ACL  buffer pool memory allocation failed\n"
#define BUFFER_TO_BE_FREED_IS_INVALID    623    //"Buffer to be freed is invalid "
#define INVALID_FIRST_BYTE    624    //"Invalid First Byte"
#define TD_QUEUE_OVERFLOW    625    //"TD Queue OVERFLOW "
#define INVALID_PACKET_TYPE_RECEIVED_SYNC_LOST    626    //"Invalid Packet type received - SYNC Lost \n"
#define PACKET_QUEUED_TO_BE_SENT_TO_HOST_PKT_TYPE_LENGTH    627    //" Packet Queued to be sent to Host pkt_type = %d Length = %d \n
#define SENDING_QUEUED_PACKET_TO_HOST_PACKET    628    //"Sending Queued Packet to Host packet\n"
#define HCI_TD_ENQUE_PKT_BUFFER    629    //"hci_td_enque_pkt Buffer = %x"
#define RECEIVED_SYNCHRONOUS_PACKET    630    //"Received Synchronous Packet \n"
#define INITIALIZING_TRANSPORT_DRIVER    631    //"Initializing Transport Driver \n"
#define TRANSPORT_DRIVER_INITIALIZED_SUCCESSFULLY    632    //"Transport Driver Initialized Successfully"
#define EVENT_SENT_TO_HCI_TD_TASK_EVENT_TYPE_PARAM_LENGTH    633    //"Event Sent to HCI TD Task , Event Type = 0x%x Param Length = 0x%x \n"
#define SIGNAL_PARAM    634    //"Signal param = %x "
#define SCO_DATA_SENT_TO_HCI_TD_TASK_PARAM_LENGHT_CH    635    //"SCO Data sent to HCI TD Task, param_lenght = %x CH = 0x%x"
#define BEGIN_SIGNAL_RECEIVED_BY_TRANSPORT_DRIVER_TASK    636    //"Begin Signal Received by Transport Driver Task"
#define RECEIVED_EVENT_PACKET_TO_SEND_TO_HOST    637    //"Received Event Packet to Send to Host \n"
#define RECEIVED_SYNCHRNOUS_DATA_PACKET_TO_SEND_TO_HOST    638    //"Received Synchrnous Data packet to send to host"
#define INVALID_SIGNAL_TYPE_RECEIVED_BY_TRANSPORT_TASK    639    //"Invalid Signal Type received by Transport Task"
#define OS_RESET_POOL_FAILED    640    //"OS reset pool failed\n"
#define OS_DELETE_POOL_FAILED    641    //"OS Delete Pool failed\n"
#define OS_DELETE_TASK_FAILED    642    //"OS Delete task failed\n"
#define CANNOT_ADD_BD_ADDR_TO_THE_TABLE    643    //"Cannot add BD-ADDR to the table \n"
#define RNR_CMD_CANNOT_ADD_BD_ADDR_TO_THE_TABLE    644    //"RNR cmd cannot add BD ADDR to the table"
#define UNABLE_TO_GENERATE_HCI_EVENT    645    //"Unable to generate HCI event 0x%X"
#define GETTING_CE_INDEX_FROM_CONN_HANDLE_FAILED    646    //"Getting ce_index from conn_handle failed"
#define MAXIMUM_SET_EVENT_FILTERS_REACHED    647    //"Maximum set event filters reached"
#define INVALID_FILTER_TYPE_RECD_FILTER_TYPE    648    //"Invalid filter type recd. Filter type = %d"
#define INVALID_PARAM_TOTAL_LENGTH_RECD_PARAM_TOTAL_LENGTH    649    //"Invalid param_total_length recd. Param total length = %d"
#define INVALID_FILTER_CONDN_TYPE_RECD_FILTER_CONDN_TYPE    650    //"Invalid filter condn. type recd. Filter condn. type = %d"
#define FIRST_VALUE_IS_NOT_A_GENERAL_LAP    651    //"First value is not a general LAP \n"
#define INVALID_LAP_VALUE_RECEIVED    652    //"Invalid LAP value received=%d\n"
#define INVALID_SCAN_PARAM_OR_WRONG_LENGTH    653    //"Invalid Scan param or wrong length"
#define LC_FAILED_TO_HANDLE_WRITE_SCAN_COMMAND    654    //"LC failed to handle write scan command"
#define INVALID_PAGE_SCAN_ACTIVITY_PARAMS    655    //"Invalid Page scan activity params "
#define INVALID_INQ_SCAN_ACTIVITY_PARAMS    656    //"Invalid Inq Scan activity params"
#define INVALID_INPUT_CODING_VALUE_INPUT_CODING_VALUE    657    //"Invalid input coding value, input coding value = %d"
#define HCI_COMMAND_TASK_RECEIVED_UNKNOWN_SIGNAL    658    //"HCI_Command_Task : Received unknown signal\n"
#define HCI_EVENT_TASK_RECEIVED_UNKNOWN_SIGNAL    659    //"HCI_Event_Task : Received unknown signal\n"
#define HCI_HANDLE_CREATE_CONNECTION_COMMAND_FAILED    660    //"hci_handle_create_connection_command Failed\n"
#define ACCEPT_CONNECTION_REQUEST_COMMAND_FAILED    661    //"Accept_connection_request command failed"
#define REJECT_CONNECTION_REQUEST_COMMAND_FAILED    662    //"Reject_connection_request command failed"
#define DISCONNECT_COMMAND_FAILED    663    //"Disconnect command failed\n"
#define ADD_SCO_CONNECTION_COMMAND_FAILED    664    //"Add SCO connection command failed"
#define HCI_PERIODIC_INQUIRY_MODE_COMMAND_FAILED    665    //"hci periodic inquiry mode command failed\n"
#define HCI_HANDLE_CHANGE_CONN_PKT_COMMAND_FAILED    666    //"hci handle change conn pkt command failed"
#define HCI_REMOTE_NAME_REQUEST_COMMAND_FAILED    667    //"hci remote name request command failed\n"
#define HCI_READ_REMOTE_SUPPORTED_FEATURES_COMMAND_FAILED    668    //"hci read remote supported features command failed\n"
#define THIS_DEVICE_IS_NOT_IN_PARK_MODE    669    //"This device is not in Park Mode"
#define HCI_HANDLE_SNIFF_MODE_COMMAND_FAILED    670    //"HCI handle sniff mode command failed\n"
#define HCI_HADLE_EXIT_SNIFF_MODE_COMMAND_FAILED    671    //"HCI hadle exit sniff mode command failed"
#define HCI_HADLE_PARK_MODE_COMMAND_FAILED    672    //"HCI hadle park mode command failed\n"
#define HCI_HADLE_EXIT_PARK_MODE_COMMAND_FAILED    673    //"HCI hadle exit park mode command failed"
#define HCI_HADLE_HOLD_MODE_COMMAND_FAILED    674    //"HCI hadle hold mode command failed\n"
#define HCI_HANDLE_WRITE_LINK_POLICY_SETTINGS_COMMAND_FAILED    676    //"HCI handle write link policy settings command failed\n"
#define HCI_HANDLE_READ_LINK_POLICY_COMMAND_COMMAND_FAILED    677    //"HCI handle read link policy command command failed\n"
#define HCI_HADLE_RESET_COMMAND_FAILED    678    //"HCI hadle reset command failed\n"
#define HCI_HADLE_SET_EVENT_FILTER_COMMAND_FAILED    679    //"HCI hadle set event filter command failed"
#define HCI_WRITE_NUM_BROADCAST_RETRANSMISSIONS_FAILED    680    //"HCI Write Num BroadCast Retransmissions failed\n"
#define HCI_WRITE_HOLD_MODE_ACTIVITY_FAILED    681    //"HCI Write Hold Mode Activity failed\n"
#define HCI_WRITE_SCO_FLOW_CONTROL_ENABLE_FAILED    682    //"HCI Write Sco flow Control Enable failed"
#define HCI_SET_HC_TO_HOST_FLOW_CONTROL_FAILED    683    //"HCI Set HC to Host flow Control failed"
#define HCI_WRITE_CURRENT_IAC_LAP_FAILED    684    //"HCI Write Current IAC LAP failed"
#define HCI_READ_TRANSMIT_POWER_LEVEL_FAILED    685    //"HCI Read Transmit Power Level failed\n"
#define HCI_READ_AUTOMATIC_FLUSH_TIMEOUT_FAILED    686    //"HCI Read Automatic Flush timeout failed"
#define HCI_WRITE_AUTOMATIC_FLUSH_TIMEOUT_FAILED    687    //"HCI Write Automatic Flush timeout failed"
#define HCI_HOST_NUMBER_OF_COMPLETED_PACKETS_FAILED    688    //"HCI Host Number of Completed Packets failed"
#define HCI_HADLE_WRITE_SCAN_ENABLE_COMMAND_FAILED    689    //"HCI hadle write scan enable command failed\n"
#define HCI_WRITE_PAGE_SCAN_ACTIVITY_COMMAND_FAILED    690    //"HCI write page scan activity command failed\n"
#define HCI_WRITE_INQUIRY_SCAN_ACTIVITY_COMMAND_FAILED    691    //"HCI write inquiry scan activity command failed\n"
#define HCI_CHANGE_LOCAL_NAME_COMMAND_FAILED    692    //"HCI change local name command failed\n"
#define HCI_WRITE_CONNECTION_ACCEPT_TIMEOUT_FAILED    693    //"HCI write connection accept timeout failed"
#define HCI_WRITE_PAGE_ACCEPT_TIMEOUT_FAILED    694    //"HCI write page accept timeout failed\n"
#define HCI_WRITE_CLASS_OF_DEVICE_FAILED    695    //"HCI write class of device failed\n"
#define HCI_VOICE_SETTING_COMMAND_FAILED    696    //"HCI voice setting command failed\n"
#define HCI_LINK_SUPERVISION_TIMEOUT_COMMAND_FAILED    697    //"HCI link supervision timeout command failed"
#define HCI_READ_LINK_SUPERVISION_TIMEOUT_COMMAND_FAILED    698    //"HCI Read Link supervision timeout command failed\n"
#define HCI_WRITE_PAGE_SCAN_PERIOD_MODE_COMMAND_FAILED    700    //"HCI write page scan period mode command failed\n"
#define HCI_WRITE_PAGE_SCAN_COMMAND_FAILED    701    //"HCI write page scan command failed\n"
#define HCI_HANDLE_READ_LOOPBACK_COMMAND_FAILED    702    //"HCI handle read loopback command failed\n"
#define HCI_HANDLE_WRITE_LOOPBACK_COMMAND_FAILED    703    //"HCI handle write loopback command failed\n"
#define HCI_HANDLE_ENABLE_DUT_COMMAND_FAILED    704    //"HCI handle Enable DUT command failed\n"
#define RECEIVE_QUEUE_IS_FULL_REMOTE_DEVICE_VIOLATED_FLOW_CONTROL    705    //"Receive Queue is FULL --- Remote device violated flow control "
#define HOLD_MIN_INT_LINK_SUPERVISION_TO    706    //"Hold min int > link supervision TO"
#define HOST_SUPPLIED_MAX_TB_VALUE_IS_NOT_ENOUGH_TO_PARK_A_DEVICE    707    //"Host supplied Max Tb value is not enough to Park a device"
#define INQUIRY_LENGTH_INVALID    708    //"Inquiry length invalid 0x%x"
#define INQUIRY_LAP_INVALID    709    //"Inquiry LAP invalid 0x%x"
#define SELF_DEVICE_IS_NOT_SUP_THE_SWITCH_ROLE_FEATURE    710    //"Self device is not sup the switch role feature"
#define SYNC_CONNECTION_EXISTS_CAN_NOT_DO_ROLE_SWITCH    711    //"Sync Connection exists Can not do role switch"
#define SCO_CONNECTION_EXISTS_CAN_NOT_DO_ROLE_SWITCH    712    //"SCO Connection exists Can not do role switch"
#define UNABLE_TO_STOP_SUPERVISION_TIMEOUT    718    //"Unable to stop supervision timeout"
#define SYNCHRONOUS_BUFFER_POOL_MEMORY_ALLOCATION_FAILED    719    //"Synchronous buffer pool memory allocation failed %x\n"
#define GENERATION_OF_COMMAND_COMPLETE_EVENT_FAILED    720    //"Generation of command complete event failed"
#define UNABLE_TO_ALLOCATE_MEMORY_FROM_EVENT_BUFFER_POOL    722    //"Unable to allocate memory from event buffer pool!\n"
#define GENERATING_COMMAND_STATUS_EVENT    723    //"Generating command status event\n"
#define GENERATING_COMAND_COMPLETE_EVENT    724    //"Generating comand complete event\n"
#define TIMER_VALUE_CONVERTED_TO_SLOTS    725    //"Timer value converted to slots = %d"
#define ACTUAL_FLUSH_TIMEOUT_USED_VALUE_IN_SLOTS    726    //"Actual Flush timeout used value in slots = %d"
#define GENERATING_INQUIRY_COMPLETE_EVENT    727    //"Generating Inquiry complete event\n"
#define GENERATING_INQUIRY_RESULT_EVENT    728    //"Generating Inquiry result event\n"
#define GENERATING_CONNECTION_COMPLETE_EVENT    729    //"Generating connection complete event\n"
#define GENERATING_CONNECTION_REQUEST_EVENT    730    //"Generating connection request event\n"
#define GENERATING_DISCONNECTION_COMPLETE_EVENT    731    //"Generating disconnection complete event\n"
#define NUMBER_OF_ACL_CONNECTIONS    732    //"Number of ACL connections = %d\n"
#define GENERATING_MODE_CHANGE_EVENT    733    //"Generating mode change event\n"
#define GENERATING_REMOTE_NAME_REQUEST_COMPLETE_EVENT    734    //"Generating remote name request complete event\n"
#define GENERATING_REM_SUPPORTED_FEAT_COMPL_EVENT    735    //"Generating rem supported feat compl event\n"
#define GENERATING_REMOTE_VERSION_INFO_COMPLETE_EVENT    736    //"Generating remote version info complete event\n"
#define GENERATING_CLOCK_OFFSET_COMPLETE_EVENT    737    //"Generating clock offset complete event \n"
#define GENERATING_CONNECTION_PACKET_TYPE_CHANGED_EVENT    738    //"Generating connection packet type changed event \n"
#define GENERATING_MAX_SLOTS_CHANGE_EVENT    739    //"Generating max slots change event \n"
#define GENERATING_ROLE_CHANGE_EVENT    740    //"Generating role change event \n"
#define QOS_SETUP_COMPLETE_EVENT    741    //"QOS setup complete event \n"
#define GENERATING_QOS_VIOLATION_EVENT    742    //"Generating QOS violation event \n"
#define GENERATING_PAGE_SCAN_MODE_CHANGE_EVENT    743    //"Generating page scan mode change event \n"
#define GENERATING_PAGE_SCAN_REPETITION_MODE_CHANGE_EVENT    744    //"Generating page scan repetition mode change event \n"
#define GENERATING_LOOPBACK_COMMAND_EVENT    745    //"Generating loopback command event \n"
#define SETTING_EVENT_MASK    747    //"Setting event mask\n"
#define SETTING_EVENT_FILTERS    748    //"Setting event filters\n"
#define INITIALIZING_ALL_THE_EVENT_FILTERS    749    //"Initializing all the event filters"
#define SETTING_UP_INQUIRY_RESULT_FILTER    750    //"Setting up Inquiry result filter"
#define INITIALIZING_ALL_INQUIRY_RESULT_EVENT_FILTERS    751    //"Initializing all Inquiry result event filters"
#define CLASS_OF_DEVICE_RECD    752    //"class of device recd = 0x%x"
#define SETTING_UP_CONNECTION_SETUP_FILTER    753    //"Setting up Connection setup filter"
#define ALLOW_ALL_CONNECTIONS_AUTO_ACCEPT_FLAG    754    //"Allow all connections : Auto accept flag = %d"
#define ALLOW_SPECIFIC_COD_CONNECTIONS    755    //"Allow specific COD connections"
#define CLASS_OF_DEVICE_RECD_COD_MASK    756    //"class of device recd = 0x%x, COD mask =0x%x"
#define AUTO_ACCEPT_FLAG    757    //"Auto accept flag = %d"
#define ALLOW_SPECIFIC_BD_ADDR_CONNECTIONS    758    //"Allow specific BD Addr connections"
#define SUCCESSFULLY_STORED_EVENT_FILTER    760    //"Successfully stored event filter, Total No. of event filters stored = %d"
#define HOST_BUFFER_SIZE_INFO_COMMAND    761    //"Host buffer size info command\n"
#define FIRST_VALUE_LAP_RECEIVED    762    //"First value : Lap received : %x"
#define LAP_RECEIVED    763    //"Lap received : %x"
#define DIAC_LAP_IS_RECEIVED_DIAC_LAP    764    //"DIAC LAP is received diac_lap = %x"
#define GIAC_LAP_IS_RECEIVED_DIAC_LAP    765    //"GIAC LAP is received. diac_lap = %x"
#define TX_POWER_VALUE_FROM_THE_BASEBAND_REGISTER_VALUE    766    //"Tx Power Value from the baseband register = %x, value=%x"
#define RECEIVED_HOST_NUM_COMP_PKTS_FOR_CH_HOST_NUM_COMP_PKTS    767    //"Received host_num_comp_pkts for CH = %x,host_num_comp_pkts = %x"
#define UPDATING_OUT_STANDING_DATA_TO_HOST    768    //"Updating out_standing_data_to_host = %x"
#define INVALID_HOST_NUM_COMP_PACKETS_FOR_THE_CONN    769    //"Invalid Host num comp packets for the conn handle = %x, oustanding = %x,host_num_comp_pkts = %x"
#define HCI_RESET_HOST_NUM_COMPLETE_CALLED    770    //"hci_reset_host_num_complete Called"
#define RESETTING_HOST_NUM_COMPLETE_OUT_STANDING_DATA_TO_HOST    771    //"Resetting host num complete, out_standing_data_to_host = %x"
#define SCAN_ENABLE_COMMAND_RECEIVED_FROM_THE_HOST    772    //"Scan enable = %d command Received from the Host"
#define PAGE_SCAN_WINDOW_PAGE_SCAN_INTERVAL    773    //"Page Scan Window = %x , Page Scan Interval = %x"
#define INQ_SCAN_WINDOW_INQ_SCAN_INTERVAL    774    //"Inq Scan window = %x , Inq Scan Interval = %x"
#define CONNECTION_ACCEPT_TIMEOUT_IN_SLOTS    775    //"Connection accept timeout in slots = %d"
#define CONNECTION_ACCEPT_TIMEOUT_IN_MILLI_SECS    776    //"Connection accept timeout in milli secs = %d"
#define PAGE_TIMEOUT_RECD    777    //"Page timeout recd = %d"
#define COMAND_IS_REJECTED_SCO_CONN_ALREADY_EXISTS    778    //"Comand is rejected.SCO conn already exists"
#define READ_LINK_SUPERVISION_TIMEOUT_CONN_HANDLE    779    //"Read Link supervision timeout : conn_handle = %d"
#define HCI_COMMAND_TASK_SIGNAL_RECD    780    //"HCI command task : Signal Recd "
#define INITILIZING_HCI_MODULE    781    //"Initilizing HCI module"
#define HCI_EVENT_TASK_SIGNAL_RECD    782    //"HCI event task : Signal Recd "
#define HCI_LINK_CONTROL_GROUP_COMMAND_FUNCTION    783    //"HCI : Link Control Group command function"
#define HCI_INQUIRY_COMMAND_SUCCESSFULL    784    //"HCI : Inquiry command Successfull"
#define HCI_INQUIRY_COMMAND_NOT_ALLOWED    785    //"HCI : Inquiry command not allowed..."
#define HCI_CREATE_CONNECTION_STARTED    786    //"HCI : Create connection Started "
#define HCI_LINK_POLICY_GROUP_COMMAND_FUNCTION    787    //"HCI : Link policy Group command function"
#define CONN_ENTITY_STATUS_IS_INVALID_CE_STATUS    788    //"Conn entity status is invalid.ce_status = %d"
#define HCI_HC_AND_BASEBAND_COMMAND_FUNCTION    789    //"HCI : HC and baseband command function"
#define HCI_INFO_PARAMETERS_COMMAND_FUNCTION    790    //"HCI : Info parameters command function"
#define HCI_STATUS_PARAMETERS_COMMAND_FUNCTION    791    //"HCI : Status parameters command function"
#define HCI_TEST_MODE_COMMAND_FUNCTION    792    //"HCI : Test mode command function "
#define PAGE_SUCCESS_SIGNAL_RECEIVED_FROM_LC_CE_INDEX_AM_ADDR    793    //"Page success signal received from LC CE_index=%d am_addr=%d\n"
#define NEW_CONN_TIMEOUT_MODE_CHANGE_EVENT_TO_THE_HOST    794    //"New conn timeout mode change event to the host"
#define HOST_FLOW_CONTROL_IS_ON    795    //"Host flow control is ON "
#define ALLOWED_LENGTH_TOTAL_LENGTH_OF_THIS_PACKET    796    //"Allowed Length = %d Total Length of this Packet = %d"
#define INCREMENTING_OUTSTANDING_DATA_FOR_CH_OUTSTANDING_DATA    797    //"Incrementing Outstanding data for CH = %x, outstanding data = %x"
#define FRAGMENT_LENGTH    798    //"Fragment Length = %d "
#define QUEING_DATA_IN_HCI_EVENT_TASK_HEADER    799    //"Queing Data in HCI event task Header = %x "
#define NOW_HOST_TOTAL_NUM_ACL_DATA_PKTS    800    //"Now host_total_num_acl_data_pkts = %x"
#define CHECKING_THE_EVENT_FILTER    801    //"Checking the event filter = %d"
#define PASSING_THE_EVENT_THROUGH_EVENT_FILTER_NUMBER_OF_EVENT_FILTERS    802    //"Passing the event through event filter:Number of event filters = %d"
#define FILTER_CHECK_FOR_BD_ADDR    803    //"Filter check for BD_ADDR[%d] = %x"
#define FILTER_CHECK_FOR_COD    804    //"Filter check for COD = %x"
#define HOLD_MODE_PARAMTER_CHECKING_FAILED    805    //"Hold mode paramter checking failed."
#define GIVEN_HOLD_INT_MAX_HOLD_INT_NEG    806    //"Given hold int = %d : Max hold int neg = %d"
#define SCATTERED_SLAVE_ROLE_SWITCH    807    //"Scattered slave Role switch"
#define ASSIGNED_AM_ADDRESS    808    //"Assigned am address = %d "
#define SENDING_SYNCHORNOUS_PACKET    809    //"Sending synchornous packet \n"
#define GENERATING_TEST_CONTROLEVENT    810    //"Generating test controlevent \n"
#define DEVICE_IN_TEST_MODE_CANNOT_ENABLE_DUT    812    //" Device in Test Mode - Cannot enable DUT"
#define INVALID_PICONET_ID_RECD_AM_ADDR_PICONET_ID    813    //"Invalid piconet ID recd am_addr=%d, piconet_id=%d"
#define ALLOCATION_OF_CONN_ENTITY_FAILED    814    //"Allocation of Conn entity failed"
#define ALREADY_RELEASED_AM_ADDR_PICONET_ID    815    //"Already released am_addr = %d,piconet_id = %d"
#define INVALID_AM_ADDRESS    816    //"Invalid Am address %d "
#define NO_FREE_AM_ADDRESS    817    //"No Free AM address"
#define CACHE_TABLE_IS_NOT_PROPER    818    //"Cache table is not proper \n"
#define INVALID_DEVICE_INFO_POINTER    819    //"Invalid Device info Pointer \n"
#define TIMER_CREATION_FAILED_1    820    //"Timer creation failed\n"
#define OS_START_TIMER_FAILED    821    //"OS start timer failed\n"
#define NO_FREE_CONNECTION_HANDLES    824    //"No free connection handles"
#define RECEIVED_ACCEPETED_FOR_UNPARK_PM_ADDR_WHILE_WE_ARE_NOT_IN_PARK    825    //"Received Accepeted for Unpark PM _addr while we are not in PARK"
#define INVALID_MAX_SLOT_PDU_RECD_JUST_DROP_THIS_PDU    826    //"Invalid max slot PDU recd... Just drop this PDU"
#define INVALID_STATE_HOST_CONN_REQ_PDU_RECD    827    //"Invalid state host conn req PDU recd"
#define HOST_TIMEOUT_TIMER_CREATION_FAILED    828    //"Host timeout timer creation failed\n"
#define INVALID_CONNECTION_REQUEST    829    //"Invalid Connection Request"
#define LOCAL_DEVICE_NOT_SUPPORTING_HOLD_FEATURE    830    //"Local device not supporting Hold feature"
#define REMOTE_DEVICE_IS_FORCING_THE_INTERVAL_GREATER_THAN_THE_EARLIER    831    //"Remote device is forcing the interval greater than the earlier negotiated hold interval"
#define NEGOTIATED_MAX_INTERVAL_FORCED_HOLD_INTERVAL    832    //"Negotiated Max interval=%d Forced hold interval=%d"
#define HOLD_MODE_LINK_POLICY_IS_NOT_SET    833    //"Hold mode Link Policy is not set."
#define PM_ADDR_TO_CE_INDEX_FAILED_PICONET_ID    836    //"PM addr to ce_index failed = %d,piconet_id=%d"
#define UNABLE_TO_GENTERATE_TEST_CONTROL_EVENT    837    //"Unable to generate Test Control Event."
#define SCO_DISCONNECT_FAILED    838    //"SCO Disconnect Failed\n"
#define LMP_HANDLE_TIMER_DELETE_TIMER_FAILED    839    //"LMP_handle_timer : Delete timer failed (tid=%d)\n"
#define INVALID_SIGNAL_RECEIVED_IN_LMP_TASK    840    //"Invalid signal received in LMP Task\n"
#define INVALID_STATE_FHS_PACKET_RECEIVED    842    //"Invalid state FHS Packet received\n"
#define LMP_TASKS_OS_FREE_BUFFER_FAILED    843    //"OS free buffer failed\n"
#define CAN_NOT_REMOVE_BD_ADDR_TO_THE_TABLE    844    //"Can not Remove BD ADDR to the table \n"
#define CAN_NOT_RELEASE_AM_ADDR    845    //"Can not Release AM Addr = %d \n"
#define CONNECTION_ENTITY_ALLOCATION_FAILED    846    //"Connection entity allocation failed\n"
#define PICONET_ID_ALLOCATION_FAILED    847    //"Piconet ID allocation failed"
#define CAN_NOT_ADD_BD_ADDR_TO_THE_TABLE    848    //"Can not add BD ADDR to the table \n"
#define LMP_GET_CE_INDEX_FROM_AM_ADDR_FAILED_AM_ADDR_PICONET_ID    849    //"lmp_get_CE_index_from_AM_ADDR Failed AM_ADDR=%d, Piconet_id"
#define UNABLE_TO_STOP_NUM_PKS_EVENT_TIMER    850    //"Unable to stop num_pks_event_timer\n"
#define INVALID_STATE_INQUIRY_TIMEOUT_SIGANL    851    //"Invalid state Inquiry timeout siganl!!!....\n"
#define INVALID_PAGE_TIME_OUT_OCCURED    852    //"Invalid Page time out occured!!! \n"
#define CANT_RELEASE_AM_ADDR    854    //"Cant release am_addr = %d"
#define SWITCH_NEW_CONN_TO_RELEASING_PICONET_ID_FAILED    857    //"Switch New conn TO : Releasing piconet ID failed"
#define UNABLE_TO_STOP_SUPERVISION_TIMEOUT_FOR_AM_ADDR    858    //"Unable to Stop supervision timeout for am_addr %d"
#define UNABLE_TO_START_SUP_TO_FOR_AM_ADDR    859    //"Unable to start sup to for am_addr %d"
#define ERROR_ALLOCATING_AM_ADDR    860    //"Error allocating am_addr"
#define ROLE_SWITCH_PICONET_ID_ALLOCATION_FAILED    861    //"Role switch piconet ID allocation failed"
#define AR_ADDRESS_TO_CE_INDEX_FAILED    862    //"AR Address to ce_index failed\n"
#define SOME_OF_THE_PARAMS_ARE_ODD_VALUES    864    //"Some of the params are Odd values "
#define INVALID_D_ACCESS    865    //"Invalid D_access"
#define INVALID_TBEACON    866    //"Invalid Tbeacon"
#define INVALID_ACCESS_SCHEME    867    //"Invalid Access Scheme"
#define INVALID_N_ACC_SLOTS    868    //"Invalid N_acc_slots "
#define TSNIFF_IS_GREATER_THAN_SUPERVISION_TIMEOUT_AND_SNIFF_MIN_INTERVAL_NEGOTIATED    869    //"Tsniff is greater than supervision timeout and sniff min interval negotiated"
#define TSNIFF_IS_LESS_THAN_SNIFF_MIN_INTERVAL_AND_SNIFF_MIN_INTERVAL_NEGOTIATED    870    //"Tsniff is less than Sniff min interval and Sniff min interval negotiated"
#define TSNIFF_IS_GREATERE_THAN_SNIFF_MAX_INTERVAL_AND_SNIFF_MAX_INTERVAL_NEGOTIATED    871    //"Tsniff is greatere than Sniff max interval and Sniff max interval negotiated"
#define HOLD_INTERVAL_IS_GREATERE_THAN_HOLD_MAX_INTERVAL_AND_HOLD_MAX_INTERVAL_NEGOTIATED    872    //"Hold interval is greatere than hold max interval and hold max interval negotiated"
#define FAILED_TO_STOP_PDU_RESP_TIMER    873    //"Failed to Stop PDU Resp Timer"
#define INVALID_CE_STATUS_CE_STATUS    874    //"Invalid ce status. ce_status = %d"
#define FLUSH_TIME_VALUE    876    //"Flush Time Value = %x"
#define INVALID_STATE_PAGE_SUCCESS_RECEIVED    877    //"Invalid state Page success received %d \n"
#define RELEASE_AM_ADDR_AM_ADDR_PICONET_ID    878    //"Release am_addr am_addr=%d, piconet_id=%d"
#define PDU_RECEIVED_OPCODE    879    //"PDU Received opcode = %x"
#define PDU_EXT4_RECEIVED_OPCODE    880    //"PDU ext4 Received opcode = %x"
#define ADDING_THE_PAGE_MODE_INFO_TO_DEVICE_CACHE    881    //"Adding the page mode info to device cache"
#define INVALID_STATE_ROLE_SWITCH_ACCEPTED_PDU_RECD    882    //"Invalid state Role switch accepted PDU recd"
#define SWITCH_INSTANT    883    //":SWITCH_INSTANT = %d"
#define STARTING_THE_TPOLL_TIMER    884    //"Starting the Tpoll timer."
#define GOT_ACCEPTED_FOR_PARK_MODE_WITHOUT_GETTING_A_REQ    885    //" Got accepted for park mode without Getting a Req"
#define SETTING_SUPERVISION_TO_FOR_SLAVE_TO    886    //"Setting Supervision To for slave to %d"
#define HOST_CONN_REQ_NOT_ACCEPTED_RESAOSN    887    //"Host conn req not accepted :resaosn = %d"
#define SLOT_OFFSET_RECD    888    //"slot offset.. recd = %d\n"
#define SLOT_OFFSET_RECEIVED_FROM_THE_REMOTE_DEVICE    889    //"Slot offset received from the remote device = %d"
#define ALLOW_ROLE_SWITH_DURING_CONNECTION_IS_NOT_SET    890    //"Allow role swith during connection is not set"
#define STOPPING_THE_LINK_SUPERVISION_TIMEOUT    891    //"Stopping the link supervision timeout"
#define RESTARTING_THE_LINK_SUPERVISION_TIMEOUT    892    //"Restarting the link supervision timeout"
#define CONNECTION_ACCEPT_TIMER_STARTED_CLOCK_VALUE    893    //"Connection Accept timer started. Clock value = %d"
#define UNPARK_PM_ADDR_REQ_DB_IS_PRESENT    894    //"Unpark pm_addr req... Db is present\n"
#define INVALID_STATE_DETACH_PDU_IS_RECEIVED_CE_STATUS    895    //"Invalid state Detach PDU is received.ce_status=%d"
#define DETACH_PDU_FOR_REM_NAME_REQ_HLC_IS_CREATING    896    //"Detach PDU for Rem-name-req HLC is creating"
#define THE_LINK_IS_ALREADY_DISCONNECTING_DROPING_THIS_PDU    897    //"The link is already disconnecting, Droping this PDU"
#define DETACH_REASON    898    //"Detach Reason = %x "
#define HOLD_MODE_HOLD_INSTANT_HOLD_TIME    899    //"Hold mode  hold_instant=%d,hold_time=%d"
#define MASTER_FORCING_HOLD_MODE    900    //"Master forcing hold mode"
#define SLAVE_FORCING_HOLD_MODE_SENDING_BACK_HOLD_PDU    901    //"Slave forcing hold mode..Sending back hold PDU"
#define HOLD_INSTANT_IS_6_TPOLL_SELECTING_THE_HOLD_INSTANT_AS_6_TPOLL    902    //"Hold instant is < 6*Tpoll, Selecting the hold instant as 6*Tpoll"
#define HOLD_INSTANT_IS_6_TPOLL_SEND_THE_RECEIVED_HOLD_INSTANT_BACK    903    //"Hold instant is > 6*Tpoll, Send the received hold instant back"
#define STARTING_HOLD_INSTANT_TIMER_FOR_SLOTS    904    //"Starting Hold instant Timer for %d slots"
#define HOLD_INSTANT_IS_PASSED_NOT_STARTING_THE_HOLD    905    //"Hold instant is passed...Not starting the hold"
#define HOLD_MODE_PARAMETER_VALIDATION_FAILED    906    //"Hold mode parameter validation failed"
#define SNIFF_REQ_PDU_AM_ADDR_CE_INDEX_PICONET_ID    907    //"Sniff Req PDU : am_addr=%d, ce_index=%d, piconet_id=%d"
#define LINK_POLICY_OR_REMOTE_FEATURE_FAILED_SENT_NOT_ACCEPTED_PDU    908    //"Link Policy or remote feature Failed. Sent Not Accepted PDU"
#define INVALID_BEACON_PARAMETERS_RECD_FROM_THE_REMOTE_MASTER    909    //"Invalid Beacon parameters recd from the remote Master"
#define DB_TB_NB_DELTAB_DACC_TACC_MACC_NPOLL_NAS    910    //"Db=%d,Tb=%d,Nb=%d,DeltaB=%d,Dacc=%d, Tacc=%d,Macc=%d,Npoll=%d,NAS=%d"
#define USING_MIN_VALUES_FOR_PARK_TB    911    //"Using Min Values for Park Tb = %d"
#define USING_SLAVE_SUGGESTED_TB_FOR_PARK_PARAMS    912    //"Using slave suggested Tb = %d for park Params "
#define FIRST_PM_ADDR_RECD_PICONET_ID    914    //"First PM_ADDR recd=%d Piconet_id=%d"
#define VALID_PM_ADDR_RECD_PM_ADDR_AM_ADDR    915    //"Valid PM_Addr recd... pm_addr = %d : am_addr = %d\n"
#define UNPARKING_THE_DEVICE    916    //"Unparking the device\n"
#define NUMBER_OF_RESPONSES_EXPECTED    917    //"Number of responses Expected = %d\n"
#define INVALID_PAGING_SCHEME_SETTINGS_FOR_MANDATORY_PAGING_SCHEME    918    //"invalid paging_scheme_settings for mandatory paging scheme"
#define INVALID_PAGING_SCHEME_SETTINGS_FOR_OPTIONAL_PAGING_SCHEME    919    //"invalid paging_scheme_settings for Optional paging scheme"
#define INVALID_PAGING_SCHEME    920    //"invalid Paging Scheme = %d"
#define NEW_TPOLL_NEW_NBC    921    //"New TPoll = %d, New Nbc = %d"
#define BEFORE_PROGRAMMING_BB_TX_GAIN_VALUE_FROM_THE_BASEBAND_REGISTER_VALUE    922    //"Before programming BB...Tx Gain Value from the baseband register = %x, value=%x"
#define AFTER_PROGRAMMING_BB_TX_GAIN_VALUE_FROM_THE_BASEBAND_REGISTER_VALUE    923    //"After programming BB...Tx Gain Value from the baseband register = %x, value=%x"
#define INVALID_CE_STATUS_IN_HLC_HANDLING_CE_INDEX_CE_STATUS    924    //"Invalid ce_status in HLC handling ce_index = %d ce_status = %d"
#define INQUIRY_FHS_PKT_RECEIVED    925    //"Inquiry FHS pkt received"
#define PERIODIC_INQUIRY_FHS_PKT_RECEIVED    926    //"Periodic Inquiry FHS pkt received"
#define EXTRA_PACKET_RECD_DROPING_IT    927    //"Extra Packet recd....droping it...."
#define LMP_SELF_DEVICE_DATA_DEVICE_STATUS    928    //"lmp_self_device_data.device_status = %d"
#define NUMBER_OF_RESPONSES_RECEIVED    929    //"Number of responses received = %d"
#define PAGE_SCAN_FHS_PKT_BD_ADDR_ALREADY_EXISTS    930    //"Page Scan FHS Pkt : BD_ADDR already exists"
#define SCATTERED_SLAVE_CONNECTION    931    //"Scattered slave connection"
#define NORMAL_SLAVE_CONNECTION    932    //"Normal Slave Connection"
#define PARKED_DEVICE_SUPERVISION_TIMER_EXPIRED    933    //"Parked device Supervision timer expired"
#define LMP_SELF_DEVICE_DATA_NO_OF_PKTS_ACKED_0    934    //"lmp_self_device_data.no_of_pkts_acked = 0"
#define NO_OF_PKTS_MAX_NO_OF_PKTS_MADE_NO_OF_PKTS_0    935    //"no_of_pkts >= MAX_NO_OF_PKTS. made no_of_pkts = 0"
#define TIMER_ALREADY_RUNNING    936    //"timer already running."
#define NUMBER_OF_PARKED_DEVICES    937    //"Number of parked devices = %d"
#define LMP_SUPERVISION_TIMER_AM_ADDR_PICONET_ID    938    //"LMP : Supervision timer : am_addr = %d, piconet_id=%d"
#define STOPPING_PDU_RESP_TIMER_FOR_AM_ADDR    939    //"Stopping PDU Resp timer for am_addr = %d "
#define INQUIRY_TIMEOUT_SIGNAL_RECEIVED    941    //"INQUIRY Timeout signal received"
#define ROLE_SWITCH_FHS_PKT_RECD_AM_ADDR_NEW_PICONET_ID    942    //"Role Switch FHS PKT. recd. am_addr=%d,New_piconet_id=%d"
#define STOPPING_SUPERVISION_TIMER_FOR_AM_ADDR    943    //"Stopping Supervision timer for am addr = %d"
#define STARTING_SUPERVISION_TIMER_FOR_AM_ADDR    944    //"Starting Supervision timer for am addr = %d"
#define SCATTERED_SLAVE    945    //"Scattered slave"
#define NEW_AM_ADDR    946    //"New am_addr = %d"
#define NEW_LUT_INDEX    947    //"New LUT Index = %d"
#define LMP_TASKS_DUPLICATE_AR_ADDR_RECD    948    //"Duplicate Ar_addr = %d recd"
#define DETACH_PDU_ACK_RECD_KILL_THE_HLC    949    //"Detach PDU ACK Recd...Kill the HLC"
#define STOPPING_THE_6_TPOLL_DISCONNECT_TIMER    950    //"Stopping the 6*Tpoll disconnect timer"
#define STARTING_DISCONNECT_TIMER_FOR_3_TPOLL    951    //"Starting disconnect timer for 3*Tpoll"
#define GETTING_CE_INDEX_FROM_AM_ADDR_FAILED_AM_ADDR    952    //"Getting ce_index from am_addr failed am_addr=%d\n"
#define TPOLL_X6_TIMER_EXPIRED_ENTERING_PARK_MODE    953    //"6*Tpoll timer expired... Entering park mode"
#define GENERATING_BEACON_PARAMETERS    955    //"Generating Beacon parameters\n"
#define USING_INITIALIZATION_2    956    //"Using Initialization 2 "
#define DEFAULT_TB_MIN_TB_HOST_MAX_HOST_MIN    957    //"Default Tb = %d, Min Tb = %d Host Max = %d Host Min = %d"
#define USING_MINIMUM_VALUES_OF_PARK_PARAMS    958    //"Using Minimum values of Park params "
#define SLOTS_AVALIABLE_TO_EXPAND    959    //"Slots avaliable to expand = %d"
#define INCREASING_D_ACC    960    //" Increasing D_acc"
#define NO_SLOTS_AVALIABLE_TO_EXPAND_TRAIN    961    //"No slots avaliable to expand train"
#define OUR_MIN_VALUE_DOESNOT_FALL_IN_THE_HOSTRANGE    962    //"Our Min value doesnot fall in the hostrange"
#define USING_EXISTING_PARK_PARAMETERS_TO_PARK_ADDITIONAL_SLAVES    963    //"Using existing park parameters to park additional slaves "
#define PARK_PARAMETER_VALUES_FOR_CE_INDEX    964    //"Park Parameter Values for ce_index = %d"
#define USE_NB    965    //"use_Nb = %d"
#define USE_DELTA_B    966    //"use_Delta_b = %d"
#define USE_NB_SLEEP    967    //"use_Nb_sleep = %d"
#define USE_DB_SLEEP    968    //"use_Db_sleep = %d"
#define USE_D_ACC    969    //"use_D_acc = %d"
#define USE_T_ACC    970    //"use_T_acc = %d"
#define USE_M_ACC    971    //"use_M_acc = %d"
#define USE_N_ACC_SLOTS    972    //"use_N_acc_slots = %d"
#define USE_N_POLL    973    //"use_N_poll = %d"
#define T_BEACON    974    //" T_BEACON = %d"
#define VALIDATING_PARK_PARAMS    975    //"Validating Park Params : Dbeacon = %d Tbeacon = %d Nbeacon = %d,Delta_beacon = %d "
#define VALIDATING_PARK_PARAMS_1    976    //"D_access = %d T_access = %d M_access = %d ,N_acc_slots = %d,N_poll = %d "
#define VALIDATING_PARK_PARAMS_2    977    //"timing_flgs = %d, pm_addr = %d, ar_addr = %d, NB_sleep = %d, DB_sleep = %d, acc_scheme= %d"
#define SENDING_SETUP_COMPLETE    978    //"Sending Setup Complete"
#define INSIDE_LMP_AU_RAND_GENERATING_CONN_COMP_EVENT    979    //"Inside lmp_au_rand generating conn. comp. event"
#define SELECTED_CE_INDEX_FOR_UNPARKING_THE_DEVICE    980    //"Selected ce_index %d for Unparking the device\n"
#define SUPERVISION_TIMEOUT_IN_SLOTS    981    //"Supervision Timeout in slots = %d"
#define TSNIFF_IS_GREATER_THAN_LINK_SUPERVISION    982    //"Tsniff is greater than (link supervision TO - 50) :Negotiate Tsniff as supervision TO"
#define TSNIFF_IS_LESS_THAN_MINIMUM_SNIFF_VALUE    983    //"Tsniff is less than minimum sniff value: Min value=%d"
#define TSNIFF_IS_GREATER_THAN_MAXIMUM_SNIFF_VALUE    984    //"Tsniff is greater than maximum sniff value: Max value=%d"
#define SENDING_ACCEPTED_FOR_SNIFF_REQ_TO_THE_REMOTE_DEV    985    //"Sending Accepted for sniff req to the remote dev\n"
#define NEGOTIATING_NEW_SNIFF_INTERVAL    986    //"Negotiating New sniff interval = %d\n"
#define HOLD_INTERVAL    987    //"Hold_interval = 0x%x"
#define SENDING_ACCEPTED_FOR_HOLD_REQ_TO_THE_REMOTE_DEV    989    //"Sending Accepted for hold req to the remote dev\n"
#define NEGOTIATING_NEW_HOLD_INTERVAL    990    //"Negotiating New hold interval = %d\n"
#define STOPPING_THE_SUPERVISION_TIMER_FOR_AM_ADDR    991    //"Stopping the supervision timer for am_addr = %d"
#define DISCONNECT_TIMER_EXPIRED_AM_ADDR_CE_INDEX    993    //"Disconnect timer expired. am_addr = %d, ce_index = %d"
#define NEW_ACL_CONNECTION_AM_ADDR_CE_INDEX_PICONET_ID    994    //"New ACL connection:am_addr=%d ce_index=%d piconet_id=%d"
#define NUMBER_OF_ACL_CONN_IN_PICONET    995    //"Number of ACL conn=%d in piconet %d"
#define DELETE_ACL_CONNECTION_AM_ADDR_CE_INDEX_PICONET_ID    996    //"Delete ACL connection:am_addr=%d ce_index=%d piconet_id=%d"
#define SENDING_SLOT_OFFSET_TO_THE_REMOTE_DEVICE    998    //"Sending slot_offset = %d to the remote device"
#define FATAL_FAILED_TO_CREATE_ACL_DATA_BUFFER_POOL    999    //"FATAL:Failed to create ACL DATA BUFFER POOL!\n"
#define FATAL_FAILED_TO_CREATE_SCO_DATA_BUFFER_POOL    1000    //"FATAL:Failed to create SCO DATA BUFFER POOL!\n"
#define FATAL_FAILED_TO_CREATE_ACL_DATA_BUFFER_POOL_TO_HOST    1001    //"FATAL:Failed to create ACL DATA BUFFER POOL to host!\n"
#define FATAL_FAILED_TO_CREATE_SCO_DATA_BUFFER_POOL_TO_HOST    1002    //"FATAL:Failed to create SCO DATA BUFFER POOL to host!\n"
#define DISCONNECT_COMMAND_STOP_TIMER_FAILED    997    //"Disonnect command : stop timer failed\n"
#define LMP_DIDN_T_SET_THE_SCO_CONNECTION_INFO_PROPERL_1    1003    //"1.LMP didn't set the SCO connection info properly\n"
#define LMP_DIDN_T_SET_THE_SCO_CONNECTION_INFO_PROPERL_2    1004    //"2.LMP didn't set the SCO connection info properly\n"
#define ACL_DATA_BUFFER_POOL_CREATION_FAILED    1005    //"ACL DATA BUFFER POOL creation Failed\n"
#define BT_FW_STACK_INIT_LMP_PDU_BUFFER_CREATION_FAILED    1006    //"LMP PDU buffer creation failed"
#define HCI_COMMAND_BUFFER_POOL_CREATION_FAILED    1007    //"HCI Command Buffer Pool Creation failed"
#define ACL_DATA_BUFFER_POOL_TO_HOST_CREATION_FAILED    1008    //"ACL DATA BUFFER POOL to host creation failed\n"
#define HCI_EVENT_BUFFER_POOL_CREATION_FAILED    1009    //"HCI Event Buffer Pool Creation failed"
#define LMP_FHS_PKT_BUFFER_POOL_CREATION_FAILED    1010    //"LMP fhs pkt buffer pool creation failed"
#define LMP_BD_ADDR_TO_CE_INDEX_TABLE_CREATION_FAILED    1011    //"LMP BD ADDR to CE index table creation failed"
#define SCO_DATA_BUFFER_POOL_CREATION_FAILED    1012    //"SCO DATA BUFFER POOL Creation Failed\n"
#define SCO_DATA_BUFFER_POOL_TO_HOST_CREATION_FAILED    1013    //"SCO DATA BUFFER POOL to host Creation failed\n"
#define CREATION_OF_HCI_COMMAND_TASK_FAILED    1014    //"Creation of HCI Command Task Failed\n"
#define CREATION_OF_LMP_TASK_FAILED    1015    //"Creation of LMP Task Failed\n"
#define CREATION_OF_LC_TX_TASK_FAILED    1016    //"Creation of LC TX Task Failed\n"
#define CREATION_OF_LC_RX_TASK_FAILED    1017    //"Creation of LC RX Task Failed\n"
#define CREATION_OF_CH_AS_TASK_FAILED    1018    //"Creation of CH AS Task Failed\n"
#define HCI_TD_HANDLE_RECEIVED_PACKET_UNRECOVERABLE_ERROR    1019    //"Invalid Packet type Received in hci_td_handle_received_packet UNRECOVERABLE ERROR \n"
#define ESCO_BUFFER_POOL_MEMORY_ALLOCATION_FAILED    1020    //"ESCO  buffer pool memory allocation failed %x\n"
#define COMMAND_BUFFER_POOL_MEMORY_ALLOCATION_FAILED    1021    //"Command buffer pool memory allocation failed\n"
#define NO_TIMEOUT_FUNCTION_SPECIFIED_FOR_HANDLE    1022    //" No timeout function specified for handle (%d)"
#define ALL_TIMERS_ARE_USED_UP    1023    //"All timers are used up \n"
#define INVALID_TIMER_TYPE    1024    //"Invalid Timer Type \n"
#define INVALID_TIMEOUT_FUNCTION    1025    //"Invalid TimeOut Function \n"
#define DID_NOT_GET_ANY_FREE_TIMERS    1026    //"Did not get any free timers \n"
#define INVALID_TIMER_VALUE_OF_0    1028    //"Invalid Timer Value of 0 \n"
#define TIMER_IS_ALREADY_RUNNING    1029    //"Timer is already running \n"
#define INVALID_TIMER_HANDLE_1    1030    //"Invalid timer handle \n"
#define TIMER_IS_NOT_IN_THE_CALENDAR_TABLE    1031    //" Timer is not in the calendar table. It is being stopped in the Handler \n"
#define OS_INIT_FAILED    1032    //"\n OS_init : failed!"
#define POOL_OF_SIZE_0_REQUESTED    1033    //"\nPool of size 0 requested!"
#define OS_CREATE_POOL_MEMORY_NEEDED_FOR_POOL    1034    //"\nOS_create_pool : memory needed for pool "
#define OS_CREATE_POOL_POOL_MEMORY_ALLOCATION_FAILED    1035    //"\nOS_create_pool : pool memory allocation failed."
#define OS_CREATE_POOL_POOL_INITIALISATION_FAILED    1036    //"\nOS_create_pool : pool initialisation failed."
#define OS_RESET_POOL_INVALID_POOL_HANDLE    1037    //"\nOS_reset_pool : invalid pool handle"
#define OS_RESET_POOL_INVALID_POOL    1038    //"\nOS_reset_pool : invalid pool"
#define OS_RESET_POOL_POOL_STACK_RESET_FAILED    1039    //"\nOS_reset_pool : pool stack reset failed."
#define OS_RESET_POOL_POOL_RESET_FAILED    1040    //"\nOS_reset_pool : pool reset failed."
#define OS_DELETE_POOL_INVALID_POOL_HANDLE    1041    //"\nOS_delete_pool : invalid pool handle"
#define OS_DELETE_POOL_INVALID_POOL    1042    //"\nOS_delete_pool : invalid pool"
#define OS_DELETE_POOL_POOL_STACK_CLEANUP_FAILED    1043    //"\nOS_delete_pool : pool stack cleanup failed"
#define OS_ALLOCATE_BUFFER_INVALID_POOL_HANDLE    1044    //"\nOS_allocate_buffer : invalid pool handle"
#define OS_ALLOCATE_BUFFER_INVALID_POOL    1045    //"\nOS_allocate_buffer : invalid pool"
#define OS_ALLOCATE_BUFFER_ALLOOCATION_FAILED    1046    //"\nOS_allocate_buffer : alloocation failed!"
#define OS_DEALLOCATE_BUFFER_INVALID_POOL_HANDLE    1047    //"\nOS_deallocate_buffer : invalid pool handle"
#define OS_ALLOCATE_BUFFER_INVALID_ADDRESS_OUT_OF_POOL_MEMORY_RANGE    1049    //"\nOS_allocate_buffer : invalid address (out of pool memory range)"
#define OS_ALLOCATE_BUFFER_INVALID_ADDRESS_NOT_ON_CHUNK_BOUNDARY    1050    //"\nOS_allocate_buffer : invalid address"
#define OS_DEALLOCATE_BUFFER_FAILED    1051    //"\nOS_deallocate_buffer : failed!"
#define OS_ALLOCATE_BUFFER_ADDRESS_ALREADY_FREED    1052    //"\nOS_allocate_buffer : address already freed"
#define OS_CREATE_QUEUE_INVALID_QUEUE_SIZE    1054    //"\nOS_create_queue : invalid queue size"
#define OS_CREATE_QUEUE_MALLOC_FAILED    1055    //"\nOS_create_queue : malloc failed!"
#define OS_DELETE_QUEUE_INVALID_HANDLE    1056    //"\nOS_delete_queue : invalid handle"
#define OS_ENQUEUE_ITEM_INVALID_HANDLE    1057    //"\nOS_enqueue_item : invalid handle"
#define OS_ENQUEUE_ITEM_INVALID_QUEUE_ITEM    1058    //"\nOS_enqueue_item : invalid queue item"
#define OS_ENQUEUE_ITEM_QUEUE_STATE_QUEUE_FREE    1059    //"\nOS_enqueue_item : queue state == QUEUE_FREE "
#define OS_ENQUEUE_ITEM_QUEUE_STATE_QUEUE_FULL_HANDLE    1060    //"\nOS_enqueue_item : queue state == QUEUE_FULL handle:%x"
#define OS_REMOVE_ITEM_INVALID_HANDLE    1061    //"\nOS_remove_item : invalid handle"
#define OS_REMOVE_ITEM_INVALID_QUEUE_ITEM    1062    //"\nOS_remove_item : invalid queue item"
#define OS_REMOVE_ITEM_QUEUE_STATE_QUEUE_FREE    1063    //"\nOS_remove_item : queue state == QUEUE_FREE "
#define OS_REMOVE_ITEM_QUEUE_STATE_QUEUE_EMPTY    1064    //"\nOS_remove_item : queue state == QUEUE_EMPTY"
#define OS_IS_QUEUE_EMPTY_INVALID_HANDLE    1065    //"\nOS_is_queue_empty : invalid handle"
#define OS_STACK_INIT_INVALID_STACK_SIZE    1067    //"\nOS_stack_init : invalid stack size "
#define OS_STACK_INIT_MEMORY_ALLOCATION_FOR_STACK_FAILED    1068    //"\nOS_stack_init : memory allocation for stack failed"
#define OS_STACK_INIT_STACK_NULL    1069    //"\nOS_stack_init : stack == NULL "
#define OS_STACK_PUSH_STACK_NULL    1070    //"\nOS_stack_push : stack == NULL "
#define OS_STACK_PUSH_STACK_ITEM_NULL    1071    //"\nOS_stack_push : stack item == NULL "
#define OS_STACK_POP_STACK_NULL    1072    //"\nOS_stack_pop : stack == NULL "
#define OS_STACK_POP_ITEM_ADDRESS_NULL    1073    //"\nOS_stack_pop : item address == NULL "
#define OS_STACK_SEARCH_ITEM_STACK_NULL    1074    //"\nOS_stack_search_item : stack == NULL "
#define OS_IS_STACK_EMPTY_STACK_NULL    1075    //"\nOS_is_stack_empty : stack == NULL "
#define OS_GET_NUM_OF_ITEMS_STACK_NULL    1076    //"\nOS_get_num_of_items : stack == NULL "
#define OS_GET_NUM_OF_ITEMS_STACK_IN_INVALID_STATE_TOP    1077    //"\nOS_get_num_of_items : stack in invalid state,top = %d"
#define OS_IS_STACK_FULL_STACK_NULL    1078    //"\nOS_is_stack_full : stack == NULL "
#define OS_STACK_DUMP_STACK_NULL    1079    //"\nOS_stack_dump : stack == NULL "
#define OS_CREATE_TASK_INVALID_NAME    1080    //"\nOS_create_task : Invalid name"
#define OS_CREATE_TASK_INVALID_PRIORITY    1081    //"\nOS_create_task : Invalid priority"
#define OS_CREATE_TASK_INVALID_TASK_FUNCTION    1082    //"\nOS_create_task : Invalid task function"
#define OS_CREATE_TASK_INVALID_BUSY_PERIOD    1083    //"\nOS_create_task : Invalid busy period"
#define OS_CREATE_TASK_TASK_WITH_PRIORITY_ALREADY_EXISTS    1084    //"\nOS_create_task : task with priority %d already exists"
#define OS_CREATE_TASK_TASK_QUEUE_CREATION_FAILED    1085    //"\nOS_create_task : task queue creation failed"
#define OS_DELETE_TASK_INVALID_TASK    1086    //"\nOS_delete_task : Invalid task"
#define OS_DELETE_TASK_TASK_QUEUE_DELETE_FAILED    1087    //"\\nOS_delete_task : task queue delete failed"
#define OS_SEND_SIGNAL_TO_TASK_INVALID_HANDLE    1088    //"\nOS_send_signal_to_task : Invalid handle"
#define OS_INIT_SUCCESSFUL    1090    //"\nOS_init : successful."
#define OS_BUFFER_MGMT_INIT_SUCCESS    1091    //"\nOS_buffer_mgmt_init : success."
#define OS_QUEUE_MGMT_INIT_SUCCESS    1092    //"\nOS_queue_mgmt_init : success."
#define OS_STACK_PUSH_STACK_FULL    1093    //"\nOS_stack_push : stack full!"
#define OS_STACK_POP_STACK_EMPTY    1094    //"\nOS_stack_pop : stack empty!"
#define OS_TASK_MGMT_INIT_SUCCESS    1095    //"\nOS_task_mgmt_init : success."
#define OS_CREATE_TASK_INVALID_TASK_QUEUE_SIZE    1096    //"\nOS_create_task : Invalid task queue size"
#define OS_SEND_SIGNAL_TO_TASK_SIGNAL_ENQUEUE_FAILED    1097    //"\nOS_send_signal_to_task : signal enqueue failed (handle %d, type %d)"
#define IDLE_FUNCTION_SIGNAL_FREE_FAILED    1098    //"Idle function: Signal free failed\n"
#define TIMER_POOL_FULL    1099    //"Timer Pool Full !"
#define UNABLE_TO_SEND_TIMEROUT_SIGNAL    1100    //"Unable to send Timerout Signal !"
#define INSTANT_TIMER_START_FAILED    1101    //"Instant Timer start Failed"
#define CLASSIFICTION_TIMER_FAILED    1102    //"Classifiction timer failed"
#define INSTANT_TIMER_EXPIRED_AS_SLAVE    1104    //"Instant Timer Expired as Slave"
#define INSTANT_TIMER_EXPIRED_AS_MASTER    1105    //"Instant Timer Expired as Master"
#define LMP_SET_AFH_ACK_RECD_AM_ADDR_PICONET_CLOCK    1106    //"LMP_set_AFH Ack recd am_addr = %x, piconet_clock =%x"
#define CLASSIFICATION_MIN_TIMER_FOR_CE_INDEX    1107    //"Classification Min Timer for ce_index = %x"
#define RECEIVED_CLASSIFICTION_REQ    1108    //" Received Classifiction Req"
#define CLASSIFICATION_HAS_NOT_CHANGE_FROM_LAST_TIME    1109    //"Classification has not change from last time"
//#define HCI_HANDLE_VENDOR_DISABLE_AFH_MODE    1110    //"hci_handle_vendor_disable_afh_mode."
#define LMP_CH_ASSESSMENT_CRC    1112    //"[CRC( %d )]\n"
#define RX_CH_D_RSSI_RSSI_LOW_PASS    1113    //"RX ch%2d RSSI = %d [%d %x] RSSI(low pass) = %d\n"
#define EXPECTED_RSSI_AVAILABLE_READ_RSSI    1114    //"Expected RSSI available. Read RSSI = %d.\n"
#define LMP_CH_ASSESSMENT_RSSI    1115    //"[RSSI( %d )]\n"
#define CALCULATING_LOCAL_ASSESSMENT_VALUES    1116    //"Calculating local assessment values.\n"
#define LOCALLY_UNKNOWN    1117    //"%d locally unknown.\n"
#define STARTING_ASSESSMENT_CYCLE_AGAIN    1118    //"Starting assessment cycle again.\n"
#define ASSESSMENT_PERIOD_TIMER_EXPIRED_NO_CONNECTION_NOT_DOING_ASSESSMENT    1119    //"Assessment period timer expired. No connection. Not doing assessment.\n"
#define ASSESSMENT_PERIOD_TIMER_EXPIRED    1120    //"Assessment period timer expired.\n"
#define ASSESSMENT_THRESHOLD    1121    //"Assessment threshold = %d\n"
#define USED_CHANNELS    1122    //"%d USED channels.\n"
#define ADDING_CHANNELS_BASED_ON_SPECIAL_ASSESSMENT    1123    //"Adding channels based on special assessment.\n"
#define USED_CHANNELS_IN_FINAL_MAP    1124    //"%d USED channels in final map.\n"
#define NO_CONNECTION_NOT_INITIALIZING_ASSESSMENT_NOW    1125    //"No connection. Not initializing assessment now.\n"
#define INITIALIZING_LOCAL_ASSESSMENT_MODULE    1126    //"Initializing local assessment module..\n"
#define DISABLING_LOCAL_ASSESSMENT_MODULE    1127    //"Disabling local assessment module..\n"
#define ADDING_SCATTERED_CHANNELS    1128    //"Adding %d scattered channels.\n"
#define NUMBER_OF_PARTITIONS    1129    //"Number of partitions = %d.\n"
#define NOT_ENOUGH_CHANNELS_AVAILABLE_IN_PARTITIONS    1130    //"Not enough channels available in partitions. Adding all channels in partitions.\n"
#define ADDING_SCATTERED_CH    1131    //"Adding scattered ch %d.\n"
#define ESCO_BUFFER_ALLOC_FAILED    1132    //"Esco buffer alloc. failed\n"
#define NO_BANDWIDTH_TO_ACCEPT_NEW_ESCO_CONNECTION    1134    //"No bandwidth to accept new esco connection"
#define LMP_GENERATE_PDU_FAILED    1135    //"lmp_generate_pdu failed\n"
#define INVALID_RESPONSE_PDU    1136    //"Invalid response pdu = %d\n"
#define AIR_MODE_NOT_SUPPORTED    1137    //"air mode not supported.. Air_mode in the pdu = %d, Air_mode supported by the local device = %d"
#define PDU_RCVD_IN_INVALID_ACL_CE_STATUS    1138    //"pdu rcvd in invalid acl ce status  %d"
#define DEVICE_HAS_REACHED_MAX_OF_ESCO_CONNECTIONS    1139    //"Device has reached Max.of Esco connections."
#define ALLOCATE_AM_ADDRESS_FAILED    1140    //"Allocate am address failed"
#define ALLOC_OF_CONN_ENTITY_FAILED    1141    //"Alloc of Conn entity failed\n"
#define HOST_TO_TIMER_CREATION_FAILED    1142    //"Host to timer creation failed\n"
#define ESCO_LINK_REQ_PDU_RCVD_IN_INAVLID_STATE_SENDING_NOT_ACC_EXT    1144    //"esco link req pdu rcvd in inavlid state - sending not acc ext"
#define CE_STATUS    1145    //"ce status %d"
#define ESCO_NEGOTIATION_FAILED_ESCO_CE_STATUS    1146    //"esco Negotiation failed - esco ce status = %d"
#define INAVLID_RESPONSE    1148    //"Inavlid response"
#define NOT_ACCEPTED_FOR_ESCO_LINK_REQ_RECEIVED_IN_INVALID_CE_STATUS    1149    //"Not accepted for esco link req received in invalid ce status %d"
#define UNEXPECTED_PDU_ESCO_CONNECTION_ENTITIES_ARE_NOT_IN_THE_CORRECT_STATUS    1150    //"Unexpected pdu ,Esco connection entities are not in the correct status to accept the pdu "
#define REMOVE_ESCO_LINK_REQ_PDU_RECEIVED_IN_INVALID_CE_STATUS    1151    //"Remove esco link req pdu received in invalid ce status = %d"
#define REMOVE_ESCO_LINK_REQ_PDU_RECEIVED_WITH_INVALID_HANDLE    1152    //"Remove esco link req pdu received with invalid handle %d, acl_ce_index %d"
#define REMOVE_ESCO_LINK_PDU_RECEIVED_INVALID_ESCO_CE_STATUS    1153    //"remove esco link pdu received invalid esco ce status %d"
#define LMP_ACCEPTED_PDU_RECEIVED_IN_CE_STATUS    1154    //"lmp accepted pdu received in ce status %d"
#define ESCO_PARAM_GEN_FAILED    1157    //"esco param gen. failed"
#define TX_BW_NOT_SUPPORTED_BY_LOCAL_DEV    1159    //"Tx Bw not supported by local dev"
#define LOCAL_DEV_S_TX_BW    1160    //"Local dev's Tx Bw = %d"
#define REM_DEV_S_TX_BW    1161    //"Rem dev's Tx Bw = %d"
#define RX_BW_NOT_SUPPORTED_BY_LOCAL_DEV    1162    //"Rx Bw not supported by local dev"
#define LOCAL_DEV_S_RX_BW    1163    //"Local dev's Rx Bw = %d"
#define REM_DEV_S_RX_BW    1164    //"Rem dev's Rx Bw = %d"
#define MAX_LATENCY_VAL_IS_INVALID_REM_DEV_S_MAX_LAT_LOCAL_DEV_S_MAX_LAT    1165    //"Max_latency val is invalid Rem dev's Max_lat = %d Local dev's Max Lat = %d"
#define ESCO_PARAMETERS_GENEARTION_FAILED    1166    //"esco parameters geneartion failed"
#define HOST_TO_FOR_ESCO_CONN_REQ_EVT    1167    //"Host to for esco conn req evt"
#define INVALID_STATE_CONNECTION_ACCEPT_TIMEOUT_IS_RECD    1168    //"Invalid state connection accept timeout is recd %d"
#define INVALID_LMP_CE_STATUS    1171    //"Invalid lmp CE status = %d"
#define ACCEPTED_PDU_RECEIVED_IN_INVALID_STATE    1172    //"accepted Pdu received in invalid state"
#define INVALID_RETX_EFFORT_VALUE    1173    //"Invalid retx effort value"
#define NO_FREE_BANDWIDTH    1174    //"No free Bandwidth"
#define INVALID_RETX_EFFORT_PARAMETERS    1175    //"Invalid retx effort parameters"
#define COULD_NOT_GET_THE_ESCO_CE_INDEX_FROM_LT_ADDR    1176    //"Could not get the esco_ce_index from lt_addr"
#define DISCONNECTION_EVENT_GENERATION_FAILED    1177    //"Disconnection event generation failed"
#define INVALID_ENABLE_FLAG_VALUE    1178    //"Invalid enable_flag value %d"
#define ESCO_HANDLE    1179    //" esco handle = %d"
#define ESCO_LT_ADDR    1180    //" esco lt_addr = %d"
#define ESCO_WINDOW_1    1181    //"esco window = %d"
#define GENERATING_SYNCHRONOUS_CONNECTION_CHANGED_EVENT    1182    //"Generating synchronous connection changed event\n"
#define GENERATING_SYNC_CON_CHANGED_EVENT    1183    //"Generating sync con changed event"
#define NUM_COMPLETE_EVENT_RCVD_SENDING_NEXT_DATA_PACKET    1184    //"Num complete event rcvd sending next data packet"
#define ACK_RCVD_FOR_LMP_ACCEPTED_EXT_PDU_FOR_ESCO_LINK_REQ    1185    //"Ack rcvd for lmp_accepted_ext pdu ,for esco_link_req"
#define SENDING_ACCEP_FOR_ESCO_LINK_REQ    1186    //"Sending Accep for esco_link_req"
//#define LT_ADDR    1187    //"lt_addr = %x"
#define ESCO_LINK_REQ_PDU_RCVD    1188    //"esco link req pdu rcvd"
#define SELF_DEVICE_INITIATED_THE_TRANSACTION    1189    //"Self device initiated the transaction\n"
#define REMOTE_DEVICE_DEVICE_INITIATED_THE_TRANSACTION    1190    //"Remote device device initiated the transaction\n"
#define NEG_STARTED_FOR_NEW_ESCO_LINK    1191    //"Neg started for new esco link"
#define ALLOCATED_CE_INDEX    1192    //"allocated ce_index=%d\n"
#define GENERATING_SYNC_CONN_REQ_EVENT    1193    //"generating sync conn req event"
#define STARTING_CONNECTION_ACCEPT_TIMER    1194    //"Starting Connection Accept timer "
#define NEG_IN_PROGRESS_ON_ESCO_LINK_CE_IDX    1195    //"Neg. in progress on esco link ce idx = %d"
#define ESCO_CE_STATUS    1196    //"esco ce status = %d"
#define REM_DEV_INITIATES_CHANGE_IN_ESCO_LINK_PARAMS_ON_ESCO_CE_IDX    1197    //"Rem dev initiates change in esco link params on esco ce idx = %d "
#define SENDING_NEW_PARAMS_WITH_ESCO_LINK_RQE_PDU    1198    //"Sending new params with esco link rqe pdu"
#define NOT_ACCEPTED_EXT_PDU_RCVD_WHILE_ADDING_ESCO    1199    //"not_accepted_ext_pdu rcvd while adding esco"
#define GENERATING_SYNCHRONOUS_CONN_COMPLETE_EVENT    1200    //"generating synchronous conn. complete event"
#define GENERATING_DISC_COMP_EVENT_FOR_ESCO    1203    //"Generating disc.comp. event for esco"
#define UPDATING_THE_PKTS_ALLOWED_ACCORDING_TO_MAX_SLOT    1204    //"Updating the Pkts allowed according to max slot"
#define ALLOCATED_ESCO_CONN_HANDLE    1205    //"Allocated Esco conn. handle %d"
#define FREEING_ESCO_CONN_HANDLE    1207    //"Freeing esco conn. handle"
#define FREEING_ESCO_CE    1209    //"Freeing esco ce %d"
#define ALLOCATED_AM_ADDR    1210    //"allocated am_addr = %d"
#define REM_DEV_VIOLATES_LOCAL_DEV_S_MAX_LATENCY    1211    //"Rem. Dev. violates Local dev's Max_latency ."
#define REM_DEV_S_MAX_LAT_LOCAL_DEV_S_MAX_LAT    1212    //"Rem dev's Max_lat = %d Local dev's Max Lat = %d"
#define REM_DEV_PARAMS_CAUSED_RESERVED_SLOT_VIOLATION    1213    //"Rem.dev params caused Reserved slot violation"
#define NEW_NEG_STATE    1214    //"New neg state=%d"
#define ESCO_CONNECTION_ACCEPT_TIMEOUT_OCCURED    1215    //"ESCO connection accept timeout occured..."
#define REM_DEV_PARAMS_CAUSED_LATENCY_VIOLATION    1216    //"Rem.dev params caused Latency violation"
#define NEW_NEGOTIATION_STATE    1218    //"New negotiation state = %d"
#define ESCO_CE_INDEX    1219    //"esco ce index =%d"
#define LT_ADDR_1    1220    //"Lt addr = %d"
#define CHANGIN_ESCO_PARAMS    1221    //"Changin esco params"
#define TX_PKT_LENGTH_RX_PKT_LENGTH    1222    //"\nTx_pkt_length =%d Rx_pkt_length=%d\n"
#define TESCO_RETX_WINDOW    1223    //"\nTesco = %d Retx_window = %d\n"
#define CHANGING_ESCO_LT_ADDR_OLD_LT_ADDR_NEW_LT_ADDR    1224    //"changing esco lt addr :old lt_addr = %d new_lt_addr = %d"
#define FREEING_BUFF    1225    //"freeing buff = %d"
#define HOST_PKT_TYPE    1226    //"Host pkt type = %d"
#define CONNECTION_PKT_TYPE    1227    //"connection pkt type = %d"
#define NEW_MAX_SLOT_VAL    1228    //"New max slot val = %d"
#define DISABLING_DATA_TO_HOST    1229    //"Disabling data to host \n"
#define ENABLING_DATA_TO_HOST    1230    //"Enabling data to host \n"
#define DISABLING_SEND_DATA    1231    //"Disabling send data \n"
#define ENABLING_SEND_DATA    1232    //"Enabling send data \n"
#define NATIVE_CLOCK_SELECTED_1    1233    //"1. Native clock selected."
#define NO_CONNECTION_1    1234    //"1. No connection."
#define CONNECTION_PRESENT_1    1235    //"1. Connection present."
#define WHICH_CLOCK_IN_RANGE_02_FF    1236    //"Which_Clock in range 0x02-0xFF"
#define USB_SUSPEND    1237    //"USB Suspend"
#define USB_RESUME    1238    //"USB Resume"
#define USB_RESET    1239    //"USB Reset"
#define EP1_CSR    1240    //"EP1 csr = 0x%x"
#define CLK_AFTER_PKT_RX    1241    //"Clk after Pkt rx = %d"
#define RECEIVED_LENGTH_TOTAL_PKT_LENGTH    1242    //"received length > total pkt length"
#define POOL_ALLOCATION_FAILED    1243    //"Pool allocation failed "
#define PAGE_TIMEOUT_EXTRACTION_OF_CE_INDEX_FAILED    1244    //"page timeout : extraction of ce_index failed am_addr = %x pid = %x"
#define INQ_SCAN_NOT_NOT_STARTED_AS_WE_ARE_CONNECTED    1245    //"inq-scan not not started as we are connected.%x."
#define ILLEGAL_SIGNAL_RECEIVED_IN_TIMER_TASK    1246    //"\nIllegal signal received in timer task %d"
#define TIMER_IS_IN_THE_CALENDAR_TABLE_BUT_NOT_RUNNING    1247    //"[OS sw timer] Timer %d is in the Calendar table but not running (func %08x) "
#define STOPING_A_RUNNING_TIMER    1248    //"Stoping a Running Timer \n"


//==========================================andy added 20091222============================================
#define MAIN_128  1249  //"MAIN()"
#define MAIN_137  1250  //"OS_MAX_HEAP_MEMORY: %d"
#define MAIN_138  1251  //"BT_FW_HEAP_RESERVE: %d"
#define MAIN_139  1252  //"BT_FW_TASK_Q_HEAP_REQ: %d"
#define MAIN_140  1253  //"ACL1: %d"
#define MAIN_141  1254  //"PDU: %d"
#define MAIN_142  1255  //"CMD: %d"
#define MAIN_143  1256  //"ACL2: %d"
#define MAIN_144  1257  //"ENT: %d"
#define MAIN_145  1258  //"FHS: %d"
#define MAIN_146  1259  //"CE: %d"
#define MAIN_147  1260  //"SCO: %d"
#define MAIN_150  1261  //"BT_FW_CONTROLLER_HEAP_REQ: %d"
#define MAIN_151  1262  //"BT_FW_STK_APPL_HEAP_REQ: %d"
#define BZ_AUTH_INTERNAL_490  1263  //"failed to free buffer"
#define BZ_AUTH_LMP_2182  1264  //"failed to free buffer"
#define BZ_AUTH_MLK_969  1265  //"MLK not allowed, in scatternet."
#define BZ_AUTH_MLK_975  1266  //"MLK not allowed, not master."
#define BZ_AUTH_MLK_982  1267  //"No lmp connection or I am not master"
#define BB_DRIVER_134  1268  //"Fatal. BB write in sleep mode.Reg:0x%x.Val:0x%x.%x"
#define BB_DRIVER_655  1269  //"Tpoll started for am_addr=%d, piconet_id=%d, tpoll=%d"
#define BB_DRIVER_733  1271  //"Tpoll stopped for am_addr=%d, piconet_id=%d"
#define BB_DRIVER_814  1273  //"BB_write_afh_map()+++++++++++++++++++++++"
#define BB_DRIVER_815  1274  //"+++0x%4x, 0x%4x, 0x%4x, 0x%4x , 0x%4x +++"
#define BB_DRIVER_821  1275  //"+++++++++++++++++++++++++++++++++++++++++"
#define BB_DRIVER_825  1276  //"BB_write_afh_map()+++++++++++++++++++++++"
#define BB_DRIVER_826  1277  //"+++ (am_addr:%d pid:%d) 0x%4x 0x%4x 0x%4x 0x%4x  0x%4x +++"
#define BB_DRIVER_832  1278  //"+++++++++++++++++++++++++++++++++++++++++"
#define BB_DRIVER_846  1279  //"AFH enabled.%d.%x"
#define BB_DRIVER_902  1280  //"AFH enabled.%d."
#define BB_DRIVER_968  1281  //"AFH Disable:%d.%x"
#define BB_DRIVER_970  1282  //"AFH Disable:%d."
#define BB_DRIVER_1787  1283  //"voice setting 0x%x"
#define BB_DRIVER_1879  1284  //"Writing flow stop"
#define BB_DRIVER_1899  1285  //"Writing flow go"
#define BT_FW_ACL_Q_101  1286  //"Generating flush complete."
#define BT_FW_ACL_Q_130  1287  //"Generating flush occured..."
#define BT_FW_ACL_Q_714  1288  //"ERROR in calculating acl data size diff %d"
#define BT_FW_ACL_Q_814  1289  //"ERROR acl bb write length mismatch expected %d, actual %d"
#define BT_FW_ACL_Q_866  1290  //"Corrupted conn_handle in acl pkt: %x"
#define BT_FW_ACL_Q_962  1291  //"OS Free Buffer Failed."
#define BT_FW_ACL_Q_1263  1292  //"Flow stop:lut_index:%x"
#define BT_FW_ACL_Q_1266  1293  //"L2CAP Flow stop: %d"
#define BT_FW_ACL_Q_1288  1294  //"Flow go:lut_index:%x"
#define BT_FW_ACL_Q_1291  1295  //"L2CAP Flow go: %d"
#define BT_FW_ACL_Q_1338  1296  //"Pause ACL: %d"
#define BT_FW_ACL_Q_1400  1297  //"Resume ACL: %d"
#define BT_FW_ACL_Q_1639  1298  //"1"
#define BT_FW_ACL_Q_1644  1299  //"A"
#define BT_FW_HCI_1_2_CMDS_85  1300  //"HCI_SETUP_SYNCHRONOUS_CONNECTION_OPCODE"
#define BT_FW_HCI_1_2_CMDS_503  1301  //"hci_handle_set_afh_host_channel_classification_command() should not be called!!!!!!!!!!!"
#define BT_FW_HCI_1_2_CMDS_914  1302  //"self air mode = 0x%x, remote air mode = 0x%x"
#define BT_FW_HCI_1_2_CMDS_934  1303  //"SYNC LINKS OVER CODEC is already %d"
#define BT_FW_HCI_1_2_CMDS_975  1304  //"error bandwidth value, tx = 0x%x, rx = 0x%x"
#define BT_FW_HCI_1_2_CMDS_1039  1305  //"initiate_new_esco_link, fail 1"
#define BT_FW_HCI_1_2_CMDS_1046  1306  //"initiate_new_esco_link, fail 2, total no sco conn = %d"
#define BT_FW_HCI_1_2_CMDS_1058  1307  //"initiate_new_esco_link, fail 3"
#define BT_FW_HCI_1_2_CMDS_1066  1308  //"initiate_new_esco_link, fail 4"
#define BT_FW_HCI_1_2_CMDS_1072  1309  //"role %d"
#define BT_FW_HCI_1_2_CMDS_1075  1310  //"SLAVE"
#define BT_FW_HCI_1_2_CMDS_1085  1311  //"initiate_new_esco_link, fail 5"
#define BT_FW_HCI_1_2_CMDS_1092  1312  //"MASTER"
#define BT_FW_HCI_1_2_CMDS_1096  1313  //"initiate_new_esco_link, fail 6"
#define BT_FW_HCI_1_2_CMDS_1104  1314  //"ESCO AM ADDR %d"
#define BT_FW_HCI_1_2_CMDS_1130  1315  //"initiate_new_esco_link, fail 7"
#define BT_FW_HCI_1_2_CMDS_1147  1316  //"initiate_new_esco_link, fail 8"
#define BT_FW_HCI_1_2_CMDS_1152  1317  //"initiate_new_esco_link (ret %02x debug %d ce_idx %d am_addr %d my_role %d)"
#define BT_FW_HCI_1_2_CMDS_1323  1318  //"self = 0x%x, rem = 0x%x, host = 0x%x"
#define BT_FW_HCI_1_2_CMDS_1332  1319  //"self = 0x%x, rem = 0x%x, host = 0x%x, pkt type = 0x%x, mask = 0x%x"
#define BT_FW_HCI_1_2_CMDS_1339  1320  //"esco"
#define BT_FW_HCI_1_2_CMDS_1408  1321  //"hci_handle_setup_sync_conn_command"
#define BT_FW_HCI_1_2_CMDS_1414  1322  //"exist esco connection (sync_ce_index %d status %d)"
#define BT_FW_HCI_1_2_CMDS_1418  1323  //"Cannot re-negotiate eSCO parameters now"
#define BT_FW_HCI_1_2_CMDS_1435  1324  //"new sync link (acl_ce_index %d)"
#define BT_FW_HCI_1_2_CMDS_1443  1325  //"exist sco link, can not change parameters of the existing link (sync_ce_index %d)"
#define BT_FW_HCI_1_2_CMDS_1455  1326  //"The provided Connection Handle is not valid"
#define BT_FW_HCI_1_2_CMDS_1478  1327  //"link type %d, acl ce index %d, ce status = %d, sync_link %d, *p_ce_index %d"
#define BT_FW_HCI_1_2_CMDS_1513  1328  //"setup_sync_conn, tx_bw=%d, rx_bw=%d, latency=%d, voice_setting=0x%x, pkt_type=0x%x, retx=%d, air_mode=0x%x"
#define BT_FW_HCI_1_2_CMDS_1529  1329  //"hci handle new sync link sync_ce_index=%d"
#define BT_FW_HCI_1_2_CMDS_1536  1330  //"hci handle esco renegotiation"
#define BT_FW_HCI_1_2_CMDS_1709  1331  //"invalid"
#define BT_FW_HCI_1_2_CMDS_1910  1332  //"invalid"
#define BT_FW_HCI_CMDS_295  1333  //"lmp_allocate_am_addr failed."
#define BT_FW_HCI_CMDS_312  1334  //"ACL AM ADDR %d"
#define BT_FW_HCI_CMDS_334  1335  //"Clk offset for paging:%x."
#define BT_FW_HCI_CMDS_352  1336  //"lmp release am_addr failed"
#define BT_FW_HCI_CMDS_750  1337  //"hci_handle_add_sco_connection_command, voice setting = 0x%x"
#define BT_FW_HCI_CMDS_825  1338  //"CCPT for SCO not allowed in scatternet."
#define BT_FW_HCI_CMDS_1749  1339  //"cont_poll_count=LC_CONT_POLL_SLOT_COUNT.%x"
#define BT_FW_HCI_CMDS_1817  1340  //"Park:lmp_self_device_data.number_of_parked_dev != 0"
#define BT_FW_HCI_CMDS_1858  1341  //"A"
#define BT_FW_HCI_CMDS_2022  1342  //"Host initiating unpark twice."
#define BT_FW_HCI_CMDS_2030  1343  //"Flag is not idle: %d"
#define BT_FW_HCI_CMDS_2038  1344  //"Auto unpark already in progress."
#define BT_FW_HCI_CMDS_2042  1345  //"Remote dev initiated unpark already in progress."
#define BT_FW_HCI_EVENTS_112  1346  //"failed to free buffer"
#define BT_FW_HCI_EVENTS_117  1347  //"failed to send signal to event task"
#define BT_FW_HCI_EVENTS_469  1348  //"read voice setting = 0x%x"
#define BT_FW_HCI_EVENTS_584  1349  //"acl %d, sco %d"
#define BT_FW_HCI_EVENTS_1563  1350  //"Generating read lmp handle complete event "
#define BT_FW_HCI_HCBB_INFO_461  1351  //"host flow ctrl = %d"
#define BT_FW_HCI_HCBB_INFO_1204  1352  //"voice setting = 0x%x"
#define BT_FW_HCI_HCBB_INFO_1633  1353  //"test mode = %d"
#define BT_FW_HCI_TASKS_134  1354  //"free cmd buffer failed"
#define BT_FW_HCI_TASKS_146  1355  //"[clk:0x%04x]-->HCI_CMD:opcode:%04x len:%d, %02x %02x %02x %02x %02x %02x %02x %02x %02x %02x %02x %02x %02x %02x %02x %02x %02x %02x %02x %02x"
#define BT_FW_HCI_TASKS_150  1356  //"Para:[%02x][%02x][%02x]"
#define BT_FW_HCI_TASKS_210  1357  //"free cmd buffer failed"
#define BT_FW_HCI_TASKS_260  1358  //"[clk:0x%04x]<--HCI_EVENT:code:%02x len:%d, %02x %02x %02x %02x %02x %02x %02x %02x %02x %02x %02x %02x %02x %02x %02x %02x %02x %02x %02x %02x"
#define BT_FW_HCI_TASKS_293  1359  //"failed to free buffer"
#define BT_FW_HCI_TASKS_458  1360  //"HCI_CREATE_CONNECTION_OPCODE"
#define BT_FW_HCI_TASKS_499  1361  //"DISCONNECT OPCODE"
#define BT_FW_HCI_TASKS_536  1362  //"Stack start addr: 0x%08x"
#define BT_FW_HCI_TASKS_543  1363  //"Clean stack addr: 0x%08x"
#define BT_FW_HCI_TASKS_545  1364  //"Used stack size: %d"
#define BT_FW_HCI_TASKS_1760  1365  //"hci_send_next_packet"
#define BT_FW_HCI_TASKS_1882  1366  //"hci acl data Q over flow"
#define BT_FW_HCI_TASKS_1900  1367  //"hci acl data Q over flow"
#define BT_FW_HCI_TASKS_1949  1368  //"failed to free buffer"
#define BT_FW_HCI_UTILS_734  1369  //"Error sending signal."
#define BT_FW_HCI_UTILS_1041  1370  //"Connected in more than one piconet. Cant enter park state"

#define BT_FW_HCI_CMD_MSG_PARAMS  1371 //"[clk:0x%08x]-->HCI_CMD:opcode:%04x len:%d, %08x-%08x-%08x-%08x-%08x"
#define BT_FW_HCI_EVT_MSG_PARAMS  1372 //"[clk:0x%08x]<--HCI_EVENT:code:%02x len:%d, %08x-%08x-%08x-%08x-%08x"
#define BT_FW_LLC_MSG_NEW_PARAMS  1373 //"<= [LL] LL Ctrl PDU received, opc:%d ent:%d len:%d enc_state:%02x counter:%d data:%08x-%08x-%08x"
#define BT_FW_HCI_LE_CONTROL_CMD_NEW_PARAMS  1374 //"====>HCI LE Cmd:ocf=%02x len:%d,  %08x-%08x-%08x-%08x-%08x"
#define BT_FW_LMP_MSG_SENT_NON_EXT_PDU_PARAMS 1375 //"[clk:0x%08x] --> send lmp opc:%d (addr:%d pid:%d tid:%d ce:%d m:%d, ce_st:%d), %08x-%08x-%08x-%08x"
#define BT_FW_LMP_MSG_SENT_EXT_PDU_PARAMS 1376 //"[clk:0x%08x] --> send lmp ext.opc:%d/%d (addr:%d pid:%d tid:%d ce:%d m:%d, ce_st:%d), %08x-%08x-%08x-%08x"
#define BT_FW_LMP_MSG_RX_NON_EXT_PDU_PARAMS 1377 //"[clk:0x%08x] <-- receive lmp opc:%d (addr:%d pid:%d tid:%d ce:%d m:%d, ce_st:%d), %08x-%08x-%08x-%08x"
#define BT_FW_LMP_MSG_RX_EXT_PDU_PARAMS 1378 //"[clk:0x%08x] <-- receive lmp ext.opc:%d/%d (addr:%d pid:%d tid:%d ce:%d m:%d, ce_st:%d), %08x-%08x-%08x-%08x"
#define LOG_LMP_GET_CE_INDEX_FROM_AM_ADDR_FAILURE 1379 //"Warning: failed to get CE index from am_addr %d pid %d: am2ce_tbl(status %d ce_index %d), LR=0x%x"
#define BT_FW_HCI_EVENTS_EXT_ISR_TASK_FAIL  1380  //"failed to send signal to ISR extended task"

#define HCI_TD_872  1390  //"failed to free buffer"
#define HCI_TD_882  1391  //"failed to free buffer"
#define HCI_TD_893  1392  //"failed to free buffer"
#define HCI_TD_959  1393  //"over flow 1 w%d r%d"
#define HCI_TD_1007  1394  //"over flow 2"
#define HCI_TD_1118  1395  //"1"
#define HCI_TD_1155  1396  //"C"
#define HCI_TD_1160  1397  //"failed to free buffer"
#define HCI_TD_1170  1398  //"1"
#define HCI_TD_1175  1399  //"failed to free buffer"
#define HCI_TD_API_148  1400  //"hci td deliver event to host"
#define HCI_TD_API_161  1401  //"%d,%d,%d,%d,%d,%d"
#define HCI_TD_API_175  1402  //"len = %d"
#define HCI_TD_API_313  1403  //"failed to free buffer"
#define HCI_TD_API_342  1404  //"failed to free buffer"
#define HCI_TD_API_368  1405  //"syn %d"
#define HCI_TD_TASK_86  1406  //"failed to free buffer"
#define HCI_TD_TASK_114  1407  //"HCI_TD_HCI_EVENT_TO_HOST_SIGNAL"
#define HCI_TD_TASK_125  1408  //"tx completed"
#define HCI_TD_TASK_126  1409  //"tx completed"
#define LC_764  1412  //"lc_handle_baseband_commands: in LMP_PERIODIC_INQUIRY"
#define LC_774  1413  //"lc_handle_baseband_commands:lc_cur_device_state:%d, bd_addr:0x%x 0x%x 0x%x"
#define LC_791  1414  //"Slave connected. Inq/page is not allowed."
#define LC_804  1415  //"7"
#define LC_813  1416  //"lc_handle_baseband_commands:cmd_buffer->cmd_opcode."
#define LC_1015  1417  //"3"
#define LC_1090  1418  //"Hold instant in the past. Entering hold mode immediately."
#define LC_1096  1419  //"Clock Wrap in hold mode."
#define LC_1099  1420  //"Hold Offset programmed:0x%X (state %d)"
#define LC_1197  1421  //"B"
#define LC_1379  1422  //"cont_poll_flag=TRUE"
#define LC_1385  1423  //"4"
#define LC_1400  1424  //"5"
#define LC_1524  1425  //"Kill sniff in baseband, am_addr=%d, piconet_id=%d"
#define LC_1580  1426  //"Active bits cleared in LUT:1-7."
#define LC_1582  1427  //"ActBit cleared in lc_start_beacon."
#define LC_1766  1428  //"Killing Beacon(inst 0x87)"
#define LC_1802  1429  //"Cleared park bits in pic info reg.%x.%x"
#define LC_1810  1430  //"Kill beacon:%x.%x"
#define LC_1904  1431  //"Enabling Encryption"
#define LC_1910  1432  //"Unpark: LUT index=%d ce_index=%d"
#define LC_1915  1433  //"Making %d am_addr active "
#define LC_1936  1434  //"Starting the TPoll timer for am_addr = %d"
#define LC_1965  1435  //"Making %d am_addr active As Slave. Upper LUT=%x"
#define LC_1987  1436  //"Making %d am_addr active As Slave. Upper LUT=%x"
#define LC_1989  1437  //"lut_address = %x"
#define LC_2042  1438  //"Slave unparking.sending ID Pkt.ar_addr=%d"
#define LC_2284  1439  //"LC Clear Queue1: re-loaded pdu am_addr: %d"
#define LC_2315  1440  //"LC Clear Queue1: re-loaded acl am_addr: %d"
#define LC_2336  1441  //"LC Clear Queue: re-loaded acl am_addr: %d"
#define LC_2373  1442  //"LC Clear Queue for am_addr: %d"
#define LC_2934  1443  //"Xtol programmed.%x."
#define LC_2999  1444  //"Disabled Dynamic Polling. "
#define LC_3023  1445  //"Enabled Dynamic Polling. "
#define LC_3342  1446  //"Sleep mode not enabled in config."
#define LC_3357  1447  //"Sleep mode not pgmd as scans!=0 & sca bit enabled in config."
#define LC_3410  1448  //"Programmed sleep mode. Wakeup clk:0x%x."
#define LC_3447  1449  //"Deep Sleep mode not pgmd as scans are enabled."
#define LC_3874  1450  //"PTT SET:%d"
#define LC_3876  1451  //"PTT SET:%d.%d.0x%x"
#define LC_3921  1452  //"PTT RESET:%d"
#define LC_3923  1453  //"PTT RESET:%d.%d.0x%x"
#define LC_4152  1454  //"0x89 programmed."
#define LC_1_2_UTILS_130  1455  //"%d"
#define LC_1_2_UTILS_136  1456  //"not use codec"
#define LC_1_2_UTILS_143  1457  //"failed to free buffer"
#define LC_1_2_UTILS_168  1458  //"failed to free buffer"
#define LC_1_2_UTILS_176  1459  //"error sco packet, handle 0x%x"
#define LC_1_2_UTILS_180  1460  //"failed to free buffer"
#define LC_1_2_UTILS_193  1461  //"E"
#define LC_ISR_488  1462  //"%d %d %d %d %d %d %d %d"
#define LC_ISR_499  1463  //"%d %d"
#define LC_ISR_628  1464  //"%x %x"
#define LC_ISR_945  1465  //"Dropped sniffEndIntr.%x.%x"
#define LC_ISR_1033  1466  //"1915:EndOfSniff:%x.%x.%x.%x"
#define LC_ISR_1408  1467  //"ParkConIntr.Made lc_slave_init_unpark_pending = FALSE.%x.%x.%x"
#define LC_ISR_1490  1468  //"ParkConIntr.Made lc_slave_init_unpark_pending = FALSE."
#define LC_ISR_1668  1469  //"%x %x"
#define LC_ISR_2046  1470  //"Error sending signal to lmp_task."
#define LC_ISR_2097  1471  //"bad%d"
#define LC_ISR_2104  1472  //"[LC] set flow STOP: reserved_buffers %d, free_buffers %d"
#define LC_ISR_2199  1473  //"Flow changed from %x to %x.%x"
#define LC_ISR_2299  1474  //"2EV3 packet loopback.Packet_header:%x"
#define LC_ISR_2614  1475  //"MSS:Pkt recd on new pn before MSS "
#define LC_ISR_2656  1476  //"Updating scheduler."
#define LC_ISR_2741  1477  //"Sending ack Received Signal"
#define LC_ISR_2748  1478  //"Error sending signal to lc_tx_task "
#define LC_ISR_2891  1479  //"CRC error.%x.%x"
#define LC_ISR_3060  1480  //"Multiple signals: %d"
#define LC_ISR_3102  1481  //"Multiple signals: %d"
#define LC_ISR_3118  1482  //"[LC] set flow GO: reserved_buffers %d, free_buffers %d"
#define LC_ISR_3270  1483  //"TIME OUT STATUS 0x%x"
#define LC_ISR_3296  1484  //"Park NCTO"
#define LC_ISR_3364  1485  //"ParkNCTOactBitClearedFor %x.%x."
#define LC_ISR_3374  1486  //"ParkNCTO.Made lc_slave_init_unpark_pending=FALSE"
#define LC_ISR_3449  1487  //"BB_ITO_MSS_SUCCESS."
#define LC_ISR_3455  1488  //"General BB_ITO_NC_TIMEOUT (lt_addr:%d pid:%d) *clk=0x%08x"
#define LC_ISR_3573  1489  //"NBC Timeout pkt_type = %d"
#define LC_ISR_3574  1490  //"Sending ack Received Signal"
#define LC_ISR_3623  1491  //"NBCTo:%x.%x"
#define LC_ISR_3703  1492  //"Hold interrupt"
#define LC_ISR_3985  1493  //"TX %x"
#define LC_ISR_3989  1494  //"%x"
#define LC_ISR_3994  1495  //"Tx interrupt: 0x%X hop: 0x%X"
#define LC_ISR_4161  1496  //"Restored invalid pkt in LUT."
#define LC_ISR_4187  1497  //"Sent ID in park."
#define LC_ISR_4230  1498  //"Inq resp pkt sent. clk:0x%x"
#define LC_ISR_4346  1499  //"OS send signal to task failed"
#define LC_ISR_5021  1500  //"Start of bracon intr."
#define LC_ISR_5085  1501  //"SoB:Initiating Slave Unpark %d"
#define LC_ISR_5187  1502  //"Unpark polling:am_addr:%x.%x.%x"
#define LC_ISR_5191  1503  //"StartOfBeaconIntr."
#define LC_ISR_5209  1504  //"Max trials to unpark the device Over"
#define LC_ISR_5313  1505  //"Calling modify"
#define LC_ISR_5320  1506  //"Start of AW."
#define LC_ISR_5380  1507  //"End of access wind"
#define LC_ISR_5421  1508  //"Auto Unpark failed: %X"
#define LC_ISR_5436  1509  //"Controller initiated auto unpark started."
#define LC_ISR_5459  1510  //"Trying to unpark attemp = %d"
#define LC_ISR_5498  1511  //"EOAWintr:Unpark PDU sent.LMP_UNPARK_READY"
#define LC_ISR_5585  1512  //"FATAL. Duplicate HLC?? Dropped interrupt."
#define LC_ISR_5602  1513  //"HLC.%x"
#define LC_ISR_5683  1514  //"Cleared active bit in.%x"
#define LC_ISR_5701  1515  //"Fatal:No ce_index in HLC."
#define LC_ISR_5887  1516  //"SWITCH_NCC_TO:lmp_mss_state.%x"
#define LC_SCAN_544  1520  //"Inq scan enabled."
#define LC_SCAN_615  1521  //"IS:enabled."
#define LC_SCAN_662  1522  //"PS:enabled:%x"
#define LC_SYNC_LINKS_280  1523  //"over codec %d, num_esco_links_over_codec %d esco_entry %d lt_addr %d"
#define LC_SYNC_LINKS_293  1524  //"USING CODEC: PCM"
#define LC_SYNC_LINKS_297  1525  //"transparent"
#define LC_SYNC_LINKS_468  1526  //"ESCO.%x.%x.%x.%x"
#define LC_SYNC_LINKS_529  1527  //"RX_THRESHOLD = %x"
#define LC_SYNC_LINKS_934  1528  //"failed to free buffer"
#define LC_SYNC_LINKS_1420  1529  //"Next instant is greater than LOW MARK"
#define LC_SYNC_LINKS_2234  1530  //"failed to free buffer"
#define LC_SYNC_LINKS_2568  1531  //"failed to free buffer"
#define LC_SYNC_LINKS_2642  1532  //"failed to free buffer"
#define LC_SYNC_LINKS_2673  1533  //"failed to free buffer"
#define LC_SYNC_LINKS_3093  1534  //"fifo config register:0x%x"
#define LC_SYNC_LINKS_3098  1535  //"connector register 0x%x"
#define LC_SYNC_LINKS_3135  1536  //"intr mask 0x%x"
#define LC_SYNC_LINKS_3157  1537  //"RX_THRESHOLD = %x"
#define LC_SYNC_LINKS_3245  1538  //"******* %x HOST RX PATH Read"
#define LC_SYNC_LINKS_3267  1539  //"DetachSCOClr.SCA_PRIORITY_REGISTER:Wr.%x. (over codec %d)"
#define LC_SYNC_LINKS_3281  1540  //"++++"
#define LC_SYNC_LINKS_3318  1541  //"lc_kill_sco_connection"
#define LC_SYNC_LINKS_3823  1542  //"number_of_sco_conn should be zero for HV1"
#define LC_TASK_426  1543  //"Entering SSR mode: LMP"
#define LC_TASK_497  1544  //"lc_handle_lc_hlc_signal"
#define LC_TASK_516  1545  //"HLC:CE is invalid am_addr = %d"
#define LC_TASK_562  1546  //"Sup timer started."
#define LC_TASK_569  1547  //"LC_Updated:SCA_MASTER"
#define LC_TASK_574  1548  //"LC_Updated:SCA_SLAVE"
#define LC_TASK_578  1549  //"LC_Updated:SCA_MASTER_SLAVE"
#define LC_TASK_584  1550  //"LC_Updated:SCA_SLAVE_MASTER"
#define LC_TASK_590  1551  //"LC_Updated:SCA_SLAVE1_SLAVE2"
#define LC_TASK_594  1552  //"LC_Updated:SCA_IDLE_SLAVE"
#define LC_TASK_598  1553  //"LC_Updated:SCA_IDLE_MASTER"
#define LC_TASK_604  1554  //"LC_Updated:Invalid state."
#define LC_TASK_608  1555  //"LC_Updated:%x.%x.%x.%x.%x.%x."
#define LC_TASK_889  1556  //"DISC_Updated:SCA_MASTER"
#define LC_TASK_894  1557  //"DISC_Updated:SCA_SLAVE"
#define LC_TASK_898  1558  //"DISC_Updated:SCA_MASTER_SLAVE"
#define LC_TASK_903  1559  //"DISC_Updated:SCA_SLAVE_MASTER"
#define LC_TASK_908  1560  //"DISC_Updated:SCA_SLAVE1_SLAVE2"
#define LC_TASK_912  1561  //"DISC_Updated:SCA_IDLE_SLAVE"
#define LC_TASK_916  1562  //"DISC_Updated:SCA_IDLE_MASTER"
#define LC_TASK_921  1563  //"DISC_Updated:Invalid state."
#define LC_TASK_925  1564  //"DISC_Updated:%x.%x.%x.%x.%x.%x."
#define LC_TASK_1107  1565  //"c"
#define LC_TASK_1404  1566  //"Periodic inq not started in hold mode."
#define LC_TASK_1591  1567  //"Assumed %x sco links for inquiry."
#define LC_TASK_1733  1568  //"First piconet selected for paging."
#define LC_TASK_1737  1569  //"Second piconet selected for paging."
#define LC_TASK_1859  1570  //"Assumed %x sco links for paging."
#define LC_TASK_1945  1571  //"lc_start_paging -- end"
#define LC_TASK_2013  1572  //"No packet in the headers queue"
#define LC_TASK_2018  1573  //"PktRxLcTask:%x.%x."
#define LC_TASK_2037  1574  //"handle_recv: pkt: 0x%X pay: 0x%X"
#define LC_TASK_2047  1575  //"Ignoring: 0x%X"
#define LC_TASK_2068  1576  //"failed to free buffer"
#define LC_TASK_2080  1577  //"Got EIR: pkt: 0x%X pay: 0x%X"
#define LC_TASK_2088  1578  //"Payload truncated to: %d"
#define LC_TASK_2129  1579  //"Flushing pkt.%x.%x"
#define LC_TASK_2149  1580  //"Could not allocate mem for FHS pkt.Flushing."
#define LC_TASK_2152  1581  //"Could not allocate mem for FHS pkt.Flushing."
#define LC_TASK_2160  1582  //"FHS Rx:%x.%x."
#define LC_TASK_2175  1583  //"Warning:MSS completed before FHS processing. Abort following MSS operation"
#define LC_TASK_2212  1584  //"MSS.P1 selected."
#define LC_TASK_2225  1585  //"MSS.P2 selected."
#define LC_TASK_2267  1586  //"FHS rx: [reg: %x.%x.%x] [rem bt addr:%02x %02x %02x %02x %02x %02x] [parity:%02x %02x %02x %02x %02x %02x] [pid:%d->%d] [lta:%d->%d] [lut:%d->%d]"
#define LC_TASK_2303  1587  //"Received FHS packet in invalid state. Dropping."
#define LC_TASK_2350  1588  //"Rx.FHS.Allocating S1."
#define LC_TASK_2372  1589  //"Rx.FHS.Allocating S2.S1 already connected."
#define LC_TASK_2397  1590  //"Programmed con-reg:%x."
#define LC_TASK_2450  1591  //"Rx FHS.0x%x.0x%x.0x%x."
#define LC_TASK_2482  1592  //"FHS.rssi.%d"
#define LC_TASK_2490  1593  //"prev_fhs_ptr_for_eir is NOT NULL"
#define LC_TASK_2493  1594  //"failed to free buffer"
#define LC_TASK_2503  1595  //"Found EIR - waiting for Got EIR"
#define LC_TASK_2525  1596  //"FHS rx payload:%x.%x.%x.%x.%x.%x.%x.%x.%x.%x.%x.%x.%x.%x.%x.%x.%x.%x."
#define LC_TASK_2554  1597  //"FHSPktRx:160:%x.162:%x.164:%x"
#define LC_TASK_2584  1598  //"Unable to allocate LMP data memory"
#define LC_TASK_2675  1599  //"OS Alloc-buffer failed! flushing!!!"
#define LC_TASK_2689  1600  //"OS Alloc-buffer failed! flushing!!! rs %d, fr %d"
#define LC_TASK_2785  1601  //"Invalid CRC pkts received lch %d"
#define LC_TASK_2845  1602  //"RX L2CAP: failed to find broadcast ce_index: pid %d"
#define LC_TASK_2880  1603  //"failed to free buffer"
#define LC_TASK_2937  1604  //"Dropped pkt.%x.%x."
#define LC_TASK_3134  1605  //"failed to free buffer"
#define LC_TASK_3319  1606  //"OS Alloc-SCO-buffer failed! flushing!!!"
#define LC_TASK_3415  1607  //"OS send signal to task failed"
#define LC_TASK_3424  1608  //"Invalid CRC pkts received lch %d"
#define LC_TASK_4136  1609  //"Channel reg is: 0x%x"
#define LC_TASK_4137  1610  //"SCO Pkt Type reg is: 0x%x"
#define LC_TASK_4138  1611  //"Programmed BB to Single frequency mode"
#define LC_TASK_4154  1612  //"Sco Packet Type Reg after Hop-79: %x "
#define LC_TASK_4161  1613  //"Invalid Hopping mode!"
#define LC_TASK_4203  1614  //"Generating Burst data to the Master!"
#define LC_TASK_4281  1615  //"LMP PDU ack recd signal sending to LMP task failed"
#define LC_TASK_4446  1616  //"failed to free buffer"
#define LC_TASK_4452  1617  //"13"
#define LC_TASK_4493  1618  //"Killed scans."
#define LC_TASK_4856  1619  //"F"
#define LC_TASK_4861  1620  //"[LC] Warning: ack l2cap pkt not in aclq: am_addr %d pid %d buf %p clk 0x%x"
#define LC_UTILS_1161  1621  //"enable -- intr mask 0x%x"
#define LC_UTILS_1239  1622  //"disable -- intr mask 0x%x"
#define LC_UTILS_1588  1623  //"Pgming park:%x.%x"
#define LC_UTILS_1597  1624  //"8"
#define LC_UTILS_1604  1625  //"Pgming park:Xtol = 0 written:0x%x"
#define LC_UTILS_1668  1626  //"lc_invoke_scheduler fn:MSS in progress(%d)."
#define LC_UTILS_1877  1627  //"Trying: %d 0x%X"
#define LC_UTILS_1952  1628  //"queued_pkt = %d, lmp_pkt = %d"
#define LC_UTILS_2653  1629  //"SCA:lc_current_scatternet_state addition updated to 0x%x."
#define LC_UTILS_2804  1630  //"SCA:lc_current_scatternet_state deletion updated to 0x%x."
#define LC_UTILS_3003  1631  //"Page scan suspended due to hold mode activity."
#define LC_UTILS_3011  1632  //"Inq scan suspended due to hold mode activity."
#define LC_UTILS_3149  1633  //"lc_allocate_piconet_id_for_paging fn:%x.%x"
#define LC_UTILS_3196  1634  //"Flushed p1 Tx-fifo."
#define LC_UTILS_3220  1635  //"Flushed p2 Tx-fifo."
#define LC_UTILS_3243  1636  //"Flushed BC Tx-fifo."
#define LC_UTILS_3673  1637  //"Allocated am_addr:%d for MSS piconet %d."
#define LC_UTILS_4052  1638  //"Invalid state.Fatal.%x."
#define LC_UTILS_4121  1639  //"Aborting MSS before instant.Pkt(s) in scheduler. lc_allowed_pkt_cnt=%d, schd->ce_index=%d, schd1->ce_index=%d, ce_index=%d"
#define LMP_196  1640  //"failed to free buffer"
#define LMP_207  1641  //"---->send lmp opcode = %d"
#define LMP_211  1642  //"---->send lmp Ext.opcode = %d"
#define LMP_1122  1643  //"pid:%d, am:%d already released (ce = %d status = %d). lmp_assigned_ce_index = %d"
#define LMP_1173  1644  //"am_addr already released."
#define LMP_1_2_PDU_268  1645  //"LMP_REMOVE_ESCO_LINK_REQ_OPCODE"
#define LMP_2_1_267  1646  //"SSR Collision Detected"
#define LMP_2_1_349  1647  //"Sniff subrate_res: 0x%X 0x%X 0x%X"
#define LMP_2_1_393  1648  //"2.1 PDU Handler."
#define LMP_2_1_578  1649  //"Reseting LMP SSR Parameters: CE: %d"
#define LMP_AFH_149  1650  //"MSS is in progress for this connection. So AFH map not updated.%x"
#define LMP_AFH_158  1651  //"AFH timer already running. Not re-started."
#define LMP_AFH_244  1652  //"Last lmp-set-afh is <10s away. Deferring set-AFH."
#define LMP_AFH_302  1653  //"lmp_handle_set_afh_pdu() is called"
#define LMP_AFH_371  1654  //"AFH enabled.%x.%x.%x"
#define LMP_AFH_376  1655  //"AFH enabled.%x.%x."
#define LMP_AFH_511  1656  //"AFH enabled.%x.%x.%x"
#define LMP_AFH_516  1657  //"AFH enabled.%x.%x."
#define LMP_AFH_537  1658  //"AFH enabled.%x.%x.%x"
#define LMP_AFH_542  1659  //"AFH enabled.%x.%x."
#define LMP_AFH_566  1660  //"AFH enabled.%x.%x.%x"
#define LMP_AFH_571  1661  //"AFH enabled.%x.%x."
#define LMP_AFH_745  1662  //"AFH enabled.%x.%x.%x"
#define LMP_AFH_750  1663  //"AFH enabled.%x.%x."
#define LMP_AFH_814  1664  //"AFH updation in progress."
#define LMP_AFH_962  1665  //"[slot:0x%08x]Set AFH: ce_idx %d, rem role %d, enable %d, afh status %d, clock %06x, map %02x %02x %02x %02x %02x %02x %02x %02x %02x %02x, state %d"
#define LMP_AFH_1018  1666  //"lmp_decide_for_lmp_afh_pdu() is called!!!!!!!"
#define LMP_AFH_1093  1667  //"lmp_handle_channel_classification_req_pdu() should not be called!!!!!!!!!!!"
#define LMP_AFH_1220  1668  //"lmp_handle_channel_classification_pdu() is called!!!!!!!!"
#define LMP_AFH_1272  1669  //"lmp_send_ch_cl_req_pdu() is called!!!!!!!!"
#define LMP_AFH_1580  1670  //"Slave AFH Map %x %x %x %x %x %x %x %x %x"
#define LMP_AFH_1591  1671  //"Classified Map %x %x %x %x %x %x %x %x %x"
#define LMP_CH_ASSESSMENT_358  1672  //"!!!!!!!!Host Map: %02x %02x %02x %02x %02x %02x %02x %02x %02x %02x"
#define LMP_CH_ASSESSMENT_1081  1673  //"NUM Good Channel %d"
#define LMP_CH_ASSESSMENT_1082  1674  //"Map %x %x %x %x %x %x %x %x %x %x"
#define LMP_CH_ASSESSMENT_1356  1675  //"++++++++++++++++++++++++++++++++"
#define LMP_CH_ASSESSMENT_1357  1676  //"+++0x%2x, 0x%2x, 0x%2x, 0x%2x ++"
#define LMP_CH_ASSESSMENT_1362  1677  //"+++0x%2x, 0x%2x, 0x%2x, 0x%2x ++"
#define LMP_CH_ASSESSMENT_1367  1678  //"+++0x%2x, 0x%2x, +++++++++++++++"
#define LMP_CH_ASSESSMENT_1370  1679  //"++++++++++++++++++++++++++++++++"
#define LMP_DATAMGR_688  1680  //"name length = %d"
#define LMP_DATAMGR_692  1681  //"%d"
#define LMP_DATAMGR_791  1682  //"lmp_init_device, voice setting = 0x%x"
#define LMP_DATAMGR_801  1684  //"3---*(0xb000a000)=0x%x"
#define LMP_DATAMGR_805  1685  //"3---radio value=0x%x"
#define LMP_DATAMGR_1572  1686  //"Connection timed out while switching role.CSR has a known issue."
#define LMP_DATAMGR_1658  1687  //"Sup_TO:<%x>.%x.%x.%x.%x.%x.%x.%x.%x.%x.%x.%x.%x.Sched :%x.%x.%x.%x"
#define LMP_EDTM_522  1688  //"failed to free buffer"
#define LMP_PDU_673  1689  //"Generating active mode.%x"
#define LMP_PDU_943  1690  //"cont_poll_flag=FALSE."
#define LMP_PDU_2061  1691  //"MSS in progress. Rejecting new MSS request.%x"
#define LMP_PDU_2338  1692  //"hci_cmd_bits = 0x%x"
#define LMP_PDU_2342  1693  //"lmp_handle_clockoffset_resp_pdu 2"
#define LMP_PDU_2392  1694  //"supervison time out 2"
#define LMP_PDU_2885  1695  //"lmp_handle_detach_pdu"
#define LMP_PDU_3497  1696  //"cont_poll_count = LC_CONT_POLL_SLOT_COUNT.%x"
#define LMP_PDU_3657  1697  //"Device in scatternet. Remote device initiated park rejected."
#define LMP_PDU_5116  1698  //" Handling LMP_TEST_ACTIVATE pdu"
#define LMP_PDU_5133  1699  //" Generating LMP_NOT_ACCEPTED pdu"
#define LMP_PDU_5149  1700  //" Generating LMP_ACCEPTED pdu"
#define LMP_PDU_5209  1701  //"Unable to handle LMP_TEST_CONTROL - Generating LMP_NOT_ACCEPTED"
#define LMP_PDU_5214  1702  //"failed to free buffer"
#define LMP_PDU_5242  1703  //"failed to free buffer"
#define LMP_PDU_5263  1704  //"failed to free buffer"
#define LMP_PDU_5334  1705  //"failed to free buffer"
#define LMP_PDU_5522  1706  //"failed to free buffer"
#define LMP_PDU_5831  1707  //"Generating LMP_NOT_ACCEPTED - Reason: %x "
#define LMP_PDU_Q_487  1708  //"failed to free buffer"
#define LMP_SCO_235  1709  //"HV1 in scatternet is not allowed."
#define LMP_SCO_257  1710  //"HV2 in scatternet is not allowed."
#define LMP_SCO_281  1711  //"More than one SCO connection scatternet is not allowed."
#define LMP_SCO_438  1712  //"Error:Device in sca and no of SCO != 0."
#define LMP_SCO_902  1713  //"lmp_get_sco_ce_index_from_ce_index : ce_index %d, status %d, result %d, sco_ce_index %d"
#define LMP_SCO_906  1714  //"index %d, entry_index = %d, conn_status = %d"
#define LMP_SCO_942  1715  //"lmp_get_sco_ce_index_from_sco_handle, sco_handle %d, ce_index %d, result %d, sco_ce_index %d"
#define LMP_SCO_949  1716  //"index %d, sco handle = %d, ce index = %d"
#define LMP_SCO_1063  1717  //"codec_state = %d, codec_type = %d, fifo_num = %d"
#define LMP_SCO_1092  1718  //"SCO index %d"
#define LMP_SCO_1289  1719  //"lmp kill"
#define LMP_SCO_1337  1720  //"remove sco link req ack"
#define LMP_SCO_1424  1721  //"invalid"
#define LMP_SCO_1499  1722  //"invalid"
#define LMP_SCO_1742  1723  //"CCPT for SCO rem init not allowed in scatternet."
#define LMP_SCO_1934  1724  //"1"
#define LMP_SCO_1939  1725  //"2"
#define LMP_SCO_1948  1726  //"ce status %d, handle %d sco ce index"
#define LMP_SCO_1969  1727  //"3, remote device role = %d"
#define LMP_SCO_1975  1728  //"5"
#define LMP_SCO_1985  1729  //"sco_ce_index = %d"
#define LMP_SCO_2050  1730  //"%d"
#define LMP_SCO_2090  1731  //"%d remote_air_mode = %d local_air_mode = %d"
#define LMP_SCO_2096  1732  //"failed, reason = %d"
#define LMP_SCO_2102  1733  //"%d %d"
#define LMP_SCO_2152  1734  //"lmp_handle_sco_link_request_pdu, handle = %d, timing = %d, Dsco = %d, Tsco = %d, pkt_type = %d, air_mode = %d"
#define LMP_SCO_2297  1735  //"lmp_handle_sco_disconnect"
#define LMP_SYNC_LINKS_1435  1736  //"lmp_allocate_esco_entity_from_ce_database"
#define LMP_SYNC_LINKS_1474  1737  //"lmp_release_esco_entity_to_ce_database, entity_status=%d, status=%d"
#define LMP_SYNC_LINKS_1595  1738  //"lmp_generate_init_esco_params 2"
#define LMP_SYNC_LINKS_1651  1739  //"lmp_generate_init_esco_params, succeed"
#define LMP_SYNC_LINKS_2448  1740  //"lmp_handle_esco_disconnect, 1"
#define LMP_SYNC_LINKS_2452  1741  //"lmp_handle_esco_disconnect, 2"
#define LMP_SYNC_LINKS_2592  1742  //"lmp_create_esco_connection, ce status = %d"
#define LMP_SYNC_LINKS_2622  1743  //"lmp_create_esco_connection, ce status = %d esco ce index = %d"
#define LMP_SYNC_LINKS_2770  1744  //"acl index %d, esco index %d, tx band %d, rx band %d, latency %d, retx %d"
#define LMP_SYNC_LINKS_2778  1745  //"esco connection status = %d"
#define LMP_SYNC_LINKS_2805  1746  //"pkt type = 0x%x, max latency = %d, retx_effort = %d"
#define LMP_SYNC_LINKS_2881  1747  //"max window size = %d, max pkt length = %d, retx effort = %d allowed packet type = 0x%x, 0x%x, 0x%x, 0x%x, 0x%x, 0x%x, 0x%x"
#define LMP_SYNC_LINKS_2883  1748  //"allowed packet type = 0x%x, 0x%x, 0x%x, 0x%x, 0x%x, 0x%x, 0x%x"
#define LMP_SYNC_LINKS_2959  1749  //"rx pkt %d, pkt size %d, tx pkt %d, pkt size %d, window size %d, latency %d, window number %d"
#define LMP_SYNC_LINKS_3026  1750  //"tesco %d, retx_window %d, number_of_rx_tx_windows %d"
#define LMP_SYNC_LINKS_3037  1751  //"rx pkt length %d, tx pkt length %d, tesco %d"
#define LMP_SYNC_LINKS_3054  1752  //"FAILED to call lmp_find_packet_length function"
#define LMP_SYNC_LINKS_3065  1753  //"failed 1"
#define LMP_SYNC_LINKS_3081  1754  //"1"
#define LMP_SYNC_LINKS_3090  1755  //"2"
#define LMP_SYNC_LINKS_3119  1756  //"succeed"
#define LMP_SYNC_LINKS_3126  1757  //"failed 1"
#define LMP_SYNC_LINKS_3138  1758  //"failed"
#define LMP_SYNC_LINKS_3649  1759  //"failed to free sco pkt: pkt %p"
#define LMP_TASKS_163  1760  //"LMP : Initializing...."
#define LMP_TASKS_1157  1761  //"<----recv lmp opcode=%d"
#define LMP_TASKS_1161  1762  //"<----recv lmp Ext opcode=%d"
#define LMP_TASKS_1176  1763  //"SCA:lmp_handle_incoming_pdu.ppi:%x.%x.%x.%x"
#define LMP_TASKS_1241  1764  //"failed to free buffer"
#define LMP_TASKS_1257  1765  //"failed to free buffer"
#define LMP_TASKS_1276  1766  //"failed to free buffer"
#define LMP_TASKS_1311  1767  //"1"
#define LMP_TASKS_1429  1768  //"LMP_CLKOFFSET_RES_OPCODE "
#define LMP_TASKS_1571  1769  //"failed to free buffer"
#define LMP_TASKS_1741  1770  //"LINK detach pending pkts %d"
#define LMP_TASKS_1745  1771  //"LINK detach Max Retries for clear lc scheduled pkts over"
#define LMP_TASKS_1953  1772  //"Detach timer started for %x.."
#define LMP_TASKS_2280  1773  //"lmp_self_device_data.device_status:%d (not LMP_PAGE)"
#define LMP_TASKS_2471  1774  //"MSS FHS pkt."
#define LMP_TASKS_2786  1775  //"MSS_Updated:SCA_MASTER(%x)"
#define LMP_TASKS_2791  1776  //"MSS_Updated:SCA_SLAVE"
#define LMP_TASKS_2795  1777  //"MSS_Updated:SCA_MASTER_SLAVE(%x)"
#define LMP_TASKS_2800  1778  //"MSS_Updated:SCA_SLAVE_MASTER(%x)"
#define LMP_TASKS_2805  1779  //"MSS_Updated:SCA_SLAVE1_SLAVE2"
#define LMP_TASKS_2809  1780  //"MSS_Updated:SCA_IDLE_SLAVE"
#define LMP_TASKS_2813  1781  //"MSS_Updated:SCA_IDLE_MASTER(%x)"
#define LMP_TASKS_2818  1782  //"MSS_Updated:Invalid state."
#define LMP_TASKS_2822  1783  //"MSS_Updated:%x.%x.%x.%x.%x.%x."
#define LMP_TASKS_2901  1784  //"AFH instant pending. MSS stopped."
#define LMP_TASKS_2986  1785  //"Slot offset.%x"
#define LMP_TASKS_3012  1786  //"MSS: PicoInfoReg 1:0x%x, 2: 0x%x"
#define LMP_TASKS_3195  1787  //"AFH instant pending. MSS stopped."
#define LMP_TASKS_3552  1788  //"Start Hold.%x"
#define LMP_TASKS_3597  1789  //"cont_poll_flag=FALSE."
#define LMP_TASKS_3638  1790  //"End Hold.%x"
#define LMP_TASKS_3864  1791  //"Slave initiated unpark:ar:%d pi: %d"
#define LMP_TASKS_3887  1792  //"Deferred Slave init unpark:ar:%d pi: %d am: %d"
#define LMP_TASKS_3909  1793  //"Resumed Slave initiated unpark:ar:%d pi: %d am: %d"
#define LMP_TASKS_3926  1794  //"Duplicate Ar_addr = %d recd %d"
#define LMP_TASKS_4077  1795  //"Rem slave init unpark:%x.%x"
#define LMP_TASKS_4118  1796  //"%x, %x"
#define LMP_TASKS_4122  1797  //"ERROR****UnparkPDUnotLoaded.%x."
#define LMP_TASKS_4175  1798  //"cont_poll_flag=FALSE."
#define LMP_TASKS_4261  1799  //"Failed.ce_ptr->detach_timer_state == SIX_TPOLL_STATE.%x.%x"
#define LMP_TASKS_4350  1800  //"PDU ACK.%x.%x.%x. am_addr:%x. pid:%x 160:0x%x. 162:0x%x. 164:0x%x"
#define LMP_TASKS_4355  1801  //"PDU ACK.%x.%x.%x."
#define LMP_TASKS_4367  1802  //"PDU ack no connection:%x.phy:%x"
#define LMP_TASKS_4372  1803  //"failed to free buffer"
#define LMP_TASKS_4526  1804  //"failed to free buffer"
#define LMP_TASKS_4580  1805  //"PDU SENT.%x.%x. amaddr:%x. pid:%x"
#define LMP_TASKS_4745  1806  //"lower_lut_addr: 0x%x"
#define LMP_TASKS_4769  1807  //"lower_lut_addr: 0x%x"
#define LMP_TASKS_4809  1808  //"Detach sent.Restarted timer.%x."
#define LMP_TASKS_4828  1809  //"Park NCTO fn in lmp_task.%x.%x"
#define LMP_TASKS_4869  1810  //"lmp_handle_host_initiated_unpark.%x.%x"
#define LMP_UTILS_309  1811  //"SCA:ConnAcptTimer fired.%x.%x"
#define LMP_UTILS_992  1812  //"Power control disabled, as MSS is in progress.%x."
#define LMP_UTILS_2205  1813  //"LastTxMaxSlot=curCalMaxSlot. ce_index:%x.max_slot:%x."
#define LMP_UTILS_2953  1814  //"ce_status change:%x.%x.%x."
#define LMP_UTILS_2992  1815  //"Error:>1 slave in first.M-piconet."
#define LMP_UTILS_3001  1816  //"Error:>1 slave in Second.M-piconet."
#define LMP_UTILS_3016  1817  //"Error:Cant allocate am-addr in master piconet."
#define LMP_UTILS_3034  1818  //"Error:More than 1 HV3 connections."
#define LMP_UTILS_3041  1819  //"Error:Non HV3 SCO connection present."
#define LMP_UTILS_3057  1820  //"Error:Scatternet disabled in config."
#define BZ_FW_ISOCH_57  1821  //"failed to free buffer"
#define BZ_FW_ISOCH_93  1822  //"add_sco_queues, ISO CONNS = %d, con_handle = %d, sync = %d"
#define BZ_FW_ISOCH_130  1823  //"failed to free buffer"
#define BZ_FW_ISOCH_140  1824  //"remove_sco_queues, ISO CONNS = %d"
#define BZ_FW_ISOCH_171  1825  //"%d %d %d"
#define BZ_FW_ISOCH_280  1826  //"dac interrupt"
#define BZ_FW_ISOCH_298  1827  //"error host packet length: %d"
#define BZ_FW_ISOCH_306  1828  //"full1"
#define BZ_FW_ISOCH_318  1829  //"full1"
#define BZ_FW_ISOCH_337  1830  //"full1"
#define BZ_FW_ISOCH_349  1831  //"start transfer"
#define BZ_FW_ISOCH_359  1832  //"Failed to allocate synchronous data packet"
#define BZ_FW_ISOCH_424  1833  //"error host iso packet size: %d"
#define BZ_FW_ISOCH_483  1834  //"failed"
#define BZ_FW_ISOCH_545  1835  //"connection handle:%d, packet length:%d"
#define BZ_FW_ISOCH_552  1836  //"failed to free sync buffer"
#define BZ_FW_ISOCH_561  1837  //"sco buffer full"
#define BZ_PF_ISOCH_29  1838  //"sync handle = %d"
#define BZ_PF_ISOCH_33  1839  //"sco handle = %d"
#define BZ_PF_ISOCH_57  1840  //"full"
#define BZ_PF_ISOCH_78  1841  //"null"
#define BT_FW_STACK_INIT_247  1842  //"acl %d, pdu %d, cmd %d, acl_to_host %d, event %d, fhs %d, bd %d, sco %d, sco_to_host %d"
#define BT_FW_STACK_INIT_376  1843  //"acl %d, pdu %d, cmd %d, acl_to_host %d, event %d, fhs %d, bd %d, sco %d, sco_to_host %d"
#define HCI_VENDOR_CMDS_596  1844  //"HCI_VENDOR_SET_BD_ADDR_OPCODE"
#define HCI_VENDOR_CMDS_717  1845  //"WriteVendorReg, offset:0x%x, val:0x%x"
#define HCI_VENDOR_CMDS_722  1846  //"WriteBBReg, offset:0x%x, val:0x%x"
#define HCI_VENDOR_CMDS_1246  1847  //"=+++++++++++++++0x%x +++++++"
#define HCI_VENDOR_CMDS_1247  1848  //"=+++++++++++++++0x%x +++++++"
#define HCI_VENDOR_CMDS_1248  1849  //"read modem@0x01=0x%x rf@0x18=0x%x"
#define HCI_VENDOR_CMDS_1252  1850  //"=+++++++++++++++0x%x +++++++"
#define HCI_VENDOR_CMDS_1253  1851  //"=+++++++++++++++0x%x +++++++"
#define HCI_VENDOR_CMDS_1254  1852  //"=+++++++++++++++0x%x +++++++"
#define HCI_VENDOR_CMDS_1357  1853  //"+++++++++++++++++++++++++++Rx Test++++++++++++++++"
#define HCI_VENDOR_CMDS_1426  1854  //"WriteModem, offset:0x%x, val:0x%x"
#define HCI_VENDOR_CMDS_1433  1855  //"WriteRf, offset:0x%x, val:0x%x"
#define HCI_VENDOR_EVENTS_136  1856  //"ReadVendorReg, offset:0x%x, val:0x%x"
#define HCI_VENDOR_EVENTS_141  1857  //"ReadBBReg, offset:0x%x, val:0x%x"
#define HCI_VENDOR_EVENTS_211  1858  //"ReadModem, add:0x%x"
#define HCI_VENDOR_EVENTS_218  1859  //"ReadRf, add:0x%x"
#define MINT_OS_186  1860  //"no memory"
#define MINT_OS_202  1861  //"no memory"
#define MINT_OS_230  1862  //"no memory"
#define MINT_OS_BUFFER_108  1863  //"OS_create_pool(): MIX_MODE but num_chunks is odd"
#define MINT_OS_BUFFER_193  1864  //"OS_create_pool--pool initialisation failed"
#define MINT_OS_BUFFER_206  1865  //"OS_create_pool--pool initialisation failed"
#define MINT_OS_BUFFER_221  1866  //"OS_create_pool--pool initialisation failed"
#define MINT_OS_BUFFER_232  1867  //"free pool = %d, top = %d"
#define MINT_OS_BUFFER_240  1868  //"address[%d] = 0x%x"
#define MINT_OS_BUFFER_323  1869  //"OS_create_pool--pool initialisation failed"
#define MINT_OS_BUFFER_334  1870  //"free pool = %d, top = %d"
#define MINT_OS_BUFFER_342  1871  //"address[%d] = 0x%x"
#define MINT_OS_BUFFER_372  1872  //"OS_reset_pool"
#define MINT_OS_BUFFER_542  1873  //"invalid pool handle %d"
#define MINT_OS_BUFFER_552  1874  //"invalid pool"
#define MINT_OS_BUFFER_560  1875  //"a%d %d"
#define MINT_OS_BUFFER_571  1876  //"allocation failed, free pool = %d, top = %d"
#define MINT_OS_BUFFER_646  1877  //"OS_deallocate_buffer : invalid pool handle, pool %d, address 0x%x"
#define MINT_OS_BUFFER_657  1878  //"OS_allocate_buffer : invalid pool, pool %d, address 0x%x"
#define MINT_OS_BUFFER_683  1879  //"invalid address, pool %d, address 0x%x"
#define MINT_OS_BUFFER_684  1880  //"invalid address, pool %d, address 0x%x start 0x%x, end 0x%x, chunk_size %d, number %d"
#define MINT_OS_BUFFER_711  1881  //"invalid address (not on chunk boundary)pool %d, address 0x%x"
#define MINT_OS_BUFFER_712  1882  //"start 0x%x, end 0x%x, chunk_size %d, number %d"
#define MINT_OS_BUFFER_717  1883  //"chunk_address = 0x%x"
#define MINT_OS_BUFFER_737  1884  //"deallocate buffer failed"
#define MINT_OS_BUFFER_746  1885  //"d%d %d"
#define MINT_OS_BUFFER_756  1886  //"address already free, address 0x%x, pool %d, free = %d,top = %d"
#define MINT_OS_BUFFER_760  1887  //"new %d, delete %d"
#define MINT_OS_BUFFER_786  1888  //"pool is full"
#define MINT_OS_BUFFER_794  1889  //"deallocate_buffer : failed!"
#define MINT_OS_QUEUE_172  1890  //"invalid handle"
#define MINT_OS_QUEUE_250  1891  //"invalid handle"
#define MINT_OS_QUEUE_337  1892  //"invalid handle"
#define MINT_OS_QUEUE_425  1893  //"invalid handle"
#define MINT_OS_STACK_175  1894  //"A"
#define MINT_OS_STACK_183  1895  //"A"
#define MINT_OS_STACK_192  1896  //"stack is full"
#define MINT_OS_STACK_222  1897  //"%x"
#define MINT_OS_STACK_225  1898  //"%x"
#define MINT_OS_STACK_258  1899  //"stack is NULL "
#define MINT_OS_STACK_265  1900  //"item address == NULL "
#define MINT_OS_STACK_275  1901  //"top = %d"
#define MINT_OS_STACK_305  1902  //"0x%x"
#define MINT_OS_STACK_340  1903  //"OS_stack_search_item : stack == NULL "
#define MINT_OS_STACK_357  1904  //"top = %d, total = %d"
#define MINT_OS_STACK_361  1905  //"0x%x"
#define MINT_OS_STACK_366  1906  //"%x"
#define MINT_OS_TASK_176  1907  //"task queue creation failed"
#define MINT_OS_TIMER_780  1908  //"pf timer handle tick"
#define VECTORS_100  1909  //"0x%x"
#define TIMER_132  1910  //"0x%x 0x%x 0x%x 0x%x 0x%x"
#define TIMER_140  1911  //"packet type(0x70):0x%x, packet type(0x74):0x%x"
#define TIMER_153  1912  //"bb %d usb %d real %d rx %d in %d out %d eopf %d in_out %d in_in %d sof %d pkt %d %d %d %d setup_comp %d setup_pkt %d"
#define TIMER_157  1913  //"trans %d %d %d %d out_coml %d %d %d %d, in_coml %d %d %d %d sco full %d tx empty %d %d %d %d"
#define USB_91  1914  //"L %d, T%d, B 0x%x, %d, %d, %d, %d, %d, %d"
#define USB_112  1915  //"%d %d"
#define USB_132  1916  //"%d"
#define USB_139  1917  //"S3C2410UsbWr() %d"
#define USB_140  1918  //"S3C2410UsbWr() %d"
#define USB_141  1919  //"S3C2410UsbWr() %d"
#define USB_149  1920  //"UsbWr, iso length = %d"
#define USB_282  1921  //"USB Init finished"
#define USB_593  1922  //"USBFlushTxFIFO() HANG! GRSTCTL=0x%x GNPTXSTS=0x%x "
#define USB_622  1923  //"USBFlushRxFIFO() HANG! GRSTCTL=0x%x"
#define USB_695  1924  //"USBCoreReset() AHBIdle HANG! GRSTCTL=0x%x"
#define USB_709  1925  //"USBCoreReset() CSftRst HANG! GRSTCTL=0x%x"
#define USB_779  1926  //"HandleEP0, status %d"
#define USB_808  1927  //"%d, %d"
#define USB_826  1928  //"error!! other usb_ep0_state = %d"
#define USB_906  1929  //"EP0SetupStatusPhase, in = %d"
#define USB_942  1930  //"EP0StartTransfer, in = %d"
#define USB_949  1931  //"EP0StartTransfer:[1] diepctl0_reg=0x%08x, dieptsiz0_reg=0x%08x"
#define USB_994  1932  //"%x, %x"
#define USB_1108  1933  //"EPxStartTransfer -- transfer 0 byte"
#define USB_1113  1934  //"size = %d, pkcnt = %d"
#define USB_1129  1935  //"size = %d, pkcnt = %d"
#define USB_1173  1936  //"%x %x"
#define USB_1274  1937  //"EP0SetupBuffer:0x%08x, 0x%08x"
#define USB_1276  1938  //"bRequestType: 0x%x"
#define USB_1309  1939  //"USB_DEVICE_DESCRIPTOR_TYPE"
#define USB_1320  1940  //"USB_CONFIGURATION_DESCRIPTOR_TYPE wLength=%d"
#define USB_1335  1941  //"USB_STRING : language ID, count = %d"
#define USB_1342  1942  //"USB_STRING : language ID--end"
#define USB_1346  1943  //"USB_STRING : iManufacturer"
#define USB_1365  1944  //"USB_STRING : iProduct"
#define USB_1384  1945  //"USB_STRING : iSerialNumber"
#define USB_1403  1946  //"USB_STRING : iConfiguration"
#define USB_1414  1947  //"USB_STRING : iInterface"
#define USB_1425  1948  //"USB_STRING : iInterface Alternate"
#define USB_1436  1949  //"USB_STRING : undefined string index"
#define USB_1442  1950  //"USB_DEVICE_QUALIFIER_DESCRIPTOR_TYPE"
#define USB_1460  1951  //"USB_REQUEST_GET_DESCRIPTOR: invalid command"
#define USB_1469  1952  //"USB_REQUEST_SET_ADDRESS"
#define USB_1486  1953  //"USB_REQUEST_SET_CONFIGURATION 1"
#define USB_1502  1954  //"USB_REQUEST_SET_CONFIGURATION: invalid command"
#define USB_1509  1955  //"USB_REQUEST_GET_INTERFACE"
#define USB_1527  1956  //"USB_REQUEST_SET_INTERFACE, wIndexHi = %d,  wIndexLo= %d, wValueHi = %d, wValueLo = %d"
#define USB_1539  1957  //"USB_REQUEST_SET_INTERFACE, interface = %d, max packet size = %d"
#define USB_1565  1958  //"error SCO packet size: %d"
#define USB_1574  1959  //"sco tx buf size = %d"
#define USB_1583  1960  //"bz_sco_pkt_size = %d"
#define USB_1588  1961  //"2"
#define USB_1595  1962  //"1"
#define USB_1601  1963  //"USB_REQUEST_GET_STATUS"
#define USB_1614  1964  //"USB_REQUEST_GET_STATUS, value = 0x%x, index = 0x%x"
#define USB_1636  1965  //"4"
#define USB_1647  1966  //"USB_REQUEST_GET_CONFIGURATION"
#define USB_1655  1967  //"USB_REQUEST_SET_FEATURE"
#define USB_1703  1968  //"5"
#define USB_1710  1969  //"6"
#define USB_1716  1970  //"7"
#define USB_1723  1971  //"8"
#define USB_1757  1972  //"9"
#define USB_1763  1973  //"10"
#define USB_1769  1974  //"11"
#define USB_1777  1975  //"USB_REQUEST_CLEAR_FEATURE"
#define USB_1797  1976  //"12"
#define USB_1804  1977  //"13"
#define USB_1814  1978  //"clear intr ep halt feature"
#define USB_1820  1979  //"clear bulk out ep halt feature"
#define USB_1825  1980  //"clear bulk in ep halt feature"
#define USB_1839  1981  //"clear iso out ep halt feature"
#define USB_1844  1982  //"clear iso in ep halt feature"
#define USB_1853  1983  //"14"
#define USB_1860  1984  //"15"
#define USB_1866  1985  //"16"
#define USB_1873  1986  //"17"
#define USB_1877  1987  //"18"
#define USB_1892  1988  //"hci command, length = %d"
#define USB_1897  1989  //"19"
#define USB_1923  1990  //"HCI Command"
#define USB_1931  1991  //"20"
#define USB_1937  1992  //"<---SetupProcess() normal return"
#define USB_1941  1993  //"<---SetupProcess() STATUS_HANDSHAKE return"
#define USB_1947  1994  //"<---SetupProcess() STALL_HANDSHAKE return"
#define USB_1958  1995  //"EPxActive"
#define USB_INTR_110  1996  //"USBInterruptHandler"
#define USB_INTR_150  1997  //"USBHandleUSBResetIntr()"
#define USB_INTR_154  1998  //"USBHandleEnumDoneIntr()"
#define USB_INTR_158  1999  //"USBHandleUSBSuspIntr()"
#define USB_INTR_162  2000  //"USBHandleConIDStsChngIntr()"
#define USB_INTR_166  2001  //"USBHandleWkUpIntr()"
#define USB_INTR_170  2002  //"USBHandleModeMisIntr()"
#define USB_INTR_174  2003  //"USBHandleEarlySuspIntr()"
#define USB_INTR_202  2004  //"EOPF"
#define USB_INTR_310  2005  //"USBHandleUSBResetIntr"
#define USB_INTR_445  2006  //"EnumDone intr"
#define USB_INTR_452  2007  //"doepctl0 = 0x%x, diepctl0 = 0x%x"
#define USB_INTR_557  2008  //"SOF Intr, GINTMSK = 0x%x, GINTSTS = 0x%x"
#define USB_INTR_572  2009  //"\n***Early Suspend****"
#define USB_INTR_635  2010  //"TimeOUT, ep_num = %d, %d, %d"
#define USB_INTR_648  2011  //"[%d] Compl"
#define USB_INTR_665  2012  //"0 Compl"
#define USB_INTR_671  2013  //"2 comp"
#define USB_INTR_674  2014  //"ep2 comp"
#define USB_INTR_679  2015  //"XferSize %d"
#define USB_INTR_726  2016  //"3C"
#define USB_INTR_746  2017  //"error ep num %d"
#define USB_INTR_776  2018  //"%d %d %d %d"
#define USB_INTR_795  2019  //"%d %d %d %d"
#define USB_INTR_816  2020  //"2 TxFEmp %d"
#define USB_INTR_831  2021  //"%d %d %d"
#define USB_INTR_863  2022  //"%d %d"
#define USB_INTR_869  2023  //"sco buffer empty,rx 0x%x"
#define USB_INTR_877  2024  //"full2"
#define USB_INTR_890  2025  //"%d %d"
#define USB_INTR_915  2026  //"%d, %d, %d"
#define USB_INTR_919  2027  //"0"
#define USB_INTR_928  2028  //"error ep num, %d"
#define USB_INTR_943  2029  //"In EP[%d] disabled, nDisInEP = %d"
#define USB_INTR_960  2030  //"ep %d, intr 0x%x"
#define USB_INTR_968  2031  //"<---USBHandleInEPIntr()"
#define USB_INTR_1013  2032  //"\n***OUT EP Intr***"
#define USB_INTR_1036  2033  //"EP[%d] out XferCompl, cur_count = %d, size = %d, hci_command = %d"
#define USB_INTR_1039  2034  //"EP[%d] out comp"
#define USB_INTR_1052  2035  //"alloc buffer"
#define USB_INTR_1056  2036  //"8"
#define USB_INTR_1072  2037  //"HCI cmd copy %d bytes, off = %d"
#define USB_INTR_1077  2038  //"***************HCI CMD finish, lenght = %d, %x, %x, %x, %x, %x, %x, %x, %x"
#define USB_INTR_1083  2039  //"0x%x, 0x%x"
#define USB_INTR_1151  2040  //"EP[%d] SetupPhaseDone"
#define USB_INTR_1158  2041  //"SETUP DONE"
#define USB_INTR_1165  2042  //"EP[%d] out Endpoint disabled, nDisOutEP = %d"
#define USB_INTR_1227  2043  //"\n***Rx Fifo Intr***"
#define USB_INTR_1241  2044  //"GLOBAL_OUT_NAK"
#define USB_INTR_1249  2045  //"OUT_PKT_RCV %d %d"
#define USB_INTR_1274  2046  //"alloc acl buf failed"
#define USB_INTR_1281  2047  //"9"
#define USB_INTR_1295  2048  //"+++++++++++"
#define USB_INTR_1358  2049  //"error acl pkt len = %d"
#define USB_INTR_1362  2050  //"failed to free buffer"
#define USB_INTR_1396  2051  //"---------------"
#define USB_INTR_1444  2052  //"acl pkts %d"
#define USB_INTR_1462  2053  //"no sco connection"
#define USB_INTR_1472  2054  //"alloc sco buf failed"
#define USB_INTR_1493  2055  //"%d "
#define USB_INTR_1543  2056  //"OUT_TRANSFER_COMP"
#define USB_INTR_1550  2057  //"SETUP_TRANSACTION_COMP"
#define USB_INTR_1554  2058  //"SETUP_PKT_RCV"
#define USB_INTR_1564  2059  //"error RX packet"
#define USB_INTR_1587  2060  //"\n***Wake Up Intr***"
#define USB_INTR_1600  2061  //"\n*******************************Mode Mis Intr*****************************"
#define USB_INTR_1601  2062  //"\n***Mode Mis Intr***"
#define USB_INTR_1614  2063  //"\n***ConIDStatus Change Intr***"
#define USB_INTR_1631  2064  //"\n***USB Suspend Intr***"
#define USB_INTR_1668  2065  //"\n***SessReq Intr***"
#define USB_INTR_1705  2066  //"count %d, fifo %d, fill %d"
#define USB_INTR_1712  2067  //"%d"
#define USB_INTR_1744  2068  //"count = %d, buf[62] = %d, buf[63]=%d"
#define USB_INTR_1777  2069  //"len = %d"
#define CRYPTO_460  2070  //"len_x = %d, len_y = %d"
#define CRYPTO_462  2071  //"S[%d] = %08x"
#define CRYPTO_463  2072  //"X[%d] = %08x"
#define CRYPTO_464  2073  //"Y[%d] = %08x"
#define GPIO_47  2074  //"GpioIntrHandler()"
#define GPIO_50  2075  //"GPIO_INT_STATUS_REG=%x"
#define GPIO_53  2076  //"GPIO_RAW_STATUS_REG=%x"
#define GPIO_58  2077  //"GPIO_INT_STATUS_REG=%x"
#define GPIO_61  2078  //"GPIO_RAW_STATUS_REG=%x"
#define GPIO_69  2079  //"GPIO_EXT_PORTA_REG=%x"
#define GPIO_73  2080  //"GpioIntrHandler()"
#define GPIO_76  2081  //"GPIO_INT_STATUS_REG=%x\n"
#define GPIO_79  2082  //"GPIO_RAW_STATUS_REG=%x\n"
#define GPIO_84  2083  //"GPIO_INT_STATUS_REG=%x\n"
#define GPIO_87  2084  //"GPIO_RAW_STATUS_REG=%x\n"
#define GPIO_95  2085  //"GPIO_EXT_PORTA_REG=%x\n"
#define OTP_INIT_OTP_STRUCT_1 2086  //"OTP SyntaxByte is not 0xA5 but:0x%x"
#define MAIN_MAIN_1 2087  //"init_otp_struct() fail in main()"
#define HCI_VENDOR_CMDS_2828 2088  //"Error: Len is not correct for OTP write"
#define HCI_VENDOR_CMDS_2837 2089  //"Error: Offset is not correct for OTP write"
#define LMP_TASK_PDU_ACK 2090 //"PDU ACK with diff piconet id(old=>new): %x=>%x\n"
#define LMP_TASK_MSS 2091 //"MSS:%x.%x.%x.%x.%x.%x"
#define BT_FW_ACL_Q_INVALID 2092 //"invalid ce_index\n"
#define BT_FW_HCI_UTILS_INVALID 2093 //"invalid flow_direction:%d\n"
#define LC_ISR_INVALID 2094 //"invalid ce index"
#define LC_ISR_INVALID_PICONET_ID 2095 //"invalid piconet id:%d\n"
#define LMP_SYNC_LINK_FAIL_TO_GET_ESCO_INDEX 2096 //"failed to get esco ce index from connection handle"
#define LC_PROGRAM_TX_POWER_1 2097 //"program power level for ce_index=%d, TxGain=%d, change_type=%d"

#define CHRIS_HCI_TRANSPORT_CMD_PKT 2098 //"HCI Transport CMD\n"
#define CHRIS_TRACE_USB_1 2099 //"USBHandleRxFLvlIntr 1"
#define CHRIS_TRACE_USB_2 2100 //"USBHandleInEPIntr 2"
#define CHRIS_TRACE_USB_3 2101 //"USBHandleOutEPIntr 3"
#define CHRIS_TRACE_USB_VA 2102 //"%d"
#define CHRIS_TRACE_USB_EP0 2103 //"EP0 state %d"
#define CHRIS_TRACE_USB_SETUP 2104 //"Setup Request 0x%x"

#define DMA_INIT 2105 //"DMAT Start"
#define DMA_TX_ERROR 2106 //"DMA TX error!!!"
#define DMA_RX_ERROR 2107 //"DMA RX error!!!"
#define DMA_SOFT_TEST_COMPLETE 2108 //"DMA soft reset complete"
#define ACL_TX_BUF_START_ADDR_LOG 2109 //"ACL TX buffer start address: 0x%x"
#define SCO_TX_BUF_START_ADDR_LOG 2110//"SCO TX buffer start address: 0x%x"
#define CMD_TX_BUF_START_ADDR_LOG 2111//"CMD TX buffer start address: 0x%x"
#define ACL_TX_BUF_SIZE_LOG 2112 //"ACL TX buffer entry size: %d, packet number: %d"
#define SCO_TX_BUF_SIZE_LOG 2113 //"SCO TX buffer entry size: %d, packet number: %d"
#define CMD_TX_BUF_SIZE_LOG 2114 //"CMD TX buffer entry size: %d, packet number: %d"
#define ACL_RX_DES_RING_BASE_LOG 2115 //"ACL RX des. ring base address: 0x%x"
#define SCO_RX_DES_RING_BASE_LOG 2116 //"SCO RX des. ring base address: 0x%x"
#define EVENT_RX_DES_RING_BASE_LOG 2117 //"EVENT RX des. ring base address: 0x%x"
#define ISR_ENABLE_LOG 2118 //"ISR enable register: 0x%x"
#define DMA_CTL_LOG 2119 //"DMA control register: 0x%x"
#define DMA_TX_WORK 2120 //"DMA TX work!!!"
#define DMA_RX_WORK 2121 //"DMA RX work!!!"
#define DMA_DES_ALLOCAT_ERROR 2122 //"DMA descriptor allcate error"
#define DMA_ACL_DES_ALLOCAT_ERROR 2123 //"ACL des errot"
#define DMA_SCO_DES_ALLOCAT_ERROR 2124 //"SCO des errot"
#define DMA_CMD_DES_ALLOCAT_ERROR 2125 //"CMD des errot"
#define DMA_ACL_TX_DES_LOG 2126 //"========ACL Des ==========="
#define DMA_SCO_TX_DES_LOG 2127 //"========SCO Des ==========="
#define DMA_CMD_TX_DES_LOG 2128 //"========CMD Des ==========="
#define DMA_TX_ADDRESS 2129 //"0x%x"
#define CMD_ISR 2130 //"CMD ISR 0x%x"
#define ACL_ISR 2131 //"ACL ISR"
#define DMA_DES_ALLOCAT_TX_ADDR 2132 //"TX allocated addr 0x%x"
#define DMA_DES_INIT 2133 //"DMA DES init"
#define ISR_TRIGGER 2134 //"ISR ENTER"
#define _DEBUG_ 2135 //"%d 0x%x"
#define DMA_DEBUG_TEST 2136 //"temp address 0x%x"
#define HCI_CMD 2137 //"++++ HCI CMD ++++"
#define TX_DES_INDEX 2138 //"Descriptor Index %d"
#define TX_DES_CONTEXT 2139 //"0x%x "
#define TX_PKT_LEN 2140 //"packet length %d"
#define SEND_PACKET 2141 //"Set DMA TX Descriptor 0x%x, packet_type %d"
#define EVT_SEND_FINISH 2142 //"Event had sent to PC"
#define TEST_DEBG 2143 //"REG 0x80: 0x%x"
#define EVT_RX_SRAM_CONTEXT 2144 //"RX Context: 0x%x"
#define DMA_DES_ALLOCAT_RX_ADDR 2145 //"RX allocated addr 0x%x"
#define DMA_DES_ALLOCAT_ADDR 2146 //"Allocated addr 0x%x"
#define DMA_TX_FIFO_FREE_TYPE_ERROR 2147 //"TX FIFO free type is invaild!!!"
#define ACL_SEND_FINISH 2148 //"ACL had sent to PC"
#define SCO_SEND_FINISH 2149 //"SCO had sent to PC"
#define CHRIS_TRACE_HCI_CMD 2150 //"Receive CMD packet!!!!!\n"
#define LOOPBACK_TEST_BITMAP 2151 //"Free Bit Map %d"
#define ISR_INDEX_CHECK 2152 //"ISR NUM %d"
#define LOOPBACK_TEST_TX_ERROR 2153 //"LoopBack Test TX error, %d byte !!!!"
#define HCI_TX_COMPLETE 2154 //"TX Complete"
#define HCI_TX_COMPLETE_2 2155 //"hci_td_tx_complete"
#define RX_PREPARE_PACKET_BUFFER_AADER 2156 //"HCI RX allocated address 0x%x"
#define RX_FREE_ADDR 2157 //"RX DONE release address 0x%x"
#define EVT_RX_FIFO_INDEX 2158 //"EVT FIFO index %d"
#define EVT_RX_FREE_FIFO_INDEX 2159 //"EVT Free FIFO index %d"
#define DBG_BUFFER_CONTEXT 2160 //"%02x"
#define DBG_RX_INDEX 2161 //"RX Index %d"
#define LOOPBACK_TX_INDEX_ERROR 2162 //"TX fifo index error %d"
#define DBG_LOOPBACK_TX 2163 //"pending packet %d, tx index %d"
#define PEND_ACL_PACKET 2164 //"ACL pending packet %d"
#define UNKONW_PKT_TYPE 2165 //"Not support DMA rx packet type"
#define SCO_ISR 2166 //"SCO ISR"
#define TX_SCO_PACKET_LENGTH 2167 //"SCO TX packet length %d"
#define RTL_VENDER_COMMAND 2168 //"RealTek Vender Command"
#define RTL_VENDER_COMMAND_OPCODE_1 2169 //"OPCODE 1: register context 0x%x"
#define PEND_SCO_PACKET 2170 //"SCO pending packet %d"
#define DMA_ACL_TX_DES 2171 //"====ACL TX Des====="
#define DMA_SCO_TX_DES 2172 //"====SCO TX Des====="
#define DMA_CMD_TX_DES 2173 //"====CMD TX Des====="
#define TX_CMD_PACKET_LENGTH 2174 //"CMD pending packet %d"
#define MEMORY_ADDRESS 2175 //"memory size 0x%x"
#define SCO_HANDLE_REG_CONTEXT 2176 //"SCO REG: 0x%x"
#define FREE_TX_INDEX 2177 //"Free Index %d"
#define RX_DONE_INDEX 2178 //"RX Done"
#define CMD_SEND_FINISH 2179 //"CMD had sent"
#define PEND_CMD_PACKET 2180 //"Cmd pending packet %d"
#define PCIE_DMA_ACL_MAX_LEN 2181 //"PCIE ACL packet len %d"
#define PCIE_DMA_SCO_MAX_LEN 2182 //"PCIE SCO packet len %d"
#define PCIE_DMA_CMD_MAX_LEN 2183 //"PCIE CMD packet len %d"
#define REG_WRITE_VALUE 2184 //"Wreite value 0x%x to Register"
#define REG_READ_VALUE 2185 //"Register value: 0x%x"
#define READ_WRITE_COMMAND 2186 //"Read/Write Command"
#define HCI_TD_STRUCT_STATE_ERROR 2187 //"hci_td_struct state = HCI_TD_TRANSMITTING"
#define DMA_RX_DES_GAP 2188 //"rx gap %d"
#define RX_FIFO_FULL 2189 //"Warning:RX fifo full, can't send packet to host, write index: %d, read index: %d"
#define ISR_ERROR 2190 //"ISR:Some thing happen"
#define DMA_RX_ENTRY_ALLOCAT_FAILED 2191 //"DMA RX entry memory pool allocate fail"
#define DMA_TX_ENTRY_ALLOCAT_FAILED 2192 //"DMA TX entry memory pool allocate fail"
#define ALLOCATE_POOL_ID_NUM 2193 //"Pool Id: %d"
#define ALLOCATE_ADDRESS 2194 //"allocate address: 0x%x"
#define PUSH_ADDRESS_TO_STACK 2195 //"Push Stack => Stack[%d] = 0x%x "
#define POP_STACK_TO_ADDRESS 2196 //"Pop Stack => Stack[%d] = 0x%x "
#define ACL_DATA_TO_CONTROLL_POOL_ID 2197 //"ACL Host => Controll Pool ID"
#define ACL_DATA_TO_HOST_POOL_ID 2198 //"ACL Controll => Host Pool ID"
#define CMD_DATA_TO_CONTROLL_POOL_ID 2199 //"CMD Host => Control Pool ID"
#define EVT_DATA_TO_HOST_POOL_ID 2200 //"EVT Controll => Host Pool ID"
#define SCO_DATA_TO_CONTROLL_POOL_ID 2201 //"SCO Host => Control Pool ID"
#define SCO_DATA_TO_HOST_POOL_ID 2202 //"SCO Controll => Host Pool ID"
#define DMA_TX_POOL_ID 2203 //"DMA TX Pool ID"
#define DMA_RX_POOL_ID 2204 //"DMA RX Pool ID"
#define LMP_FHS_PKT_BUF_POOL_ID 2205 //"LMP FHS Packet Buffer Pool ID"
#define LMP_PDU_BUF_POOL_ID 2206 //"LMP PDU Buffer Pool ID"
#define ALLOCATE_TX_DMA_ADDRESS 2207 //"TX DMA Point: 0x%x; TX DMA Start Address: 0x%x"
#define ALLOCATE_RX_DMA_ADDRESS 2208 //"RX DMA Point: 0x%x"
#define SAPARATE_LINE 2209 //"=========================================================="
#define DMA_ALLOCATE_ERROR 2210 //"DMA allocate descriptor fail"
#define FREE_DMA_CMD_TX_FIFO 2211 //"Free DMA Type %d;TX FIFO Index %d"
#define FREE_DMA_TX_FIFO 2212 //"Free DMA Fifo"
#define DMA_IS_PCIE_INTERFACE 2213 //"++++++ PCIE Interface ++++++"
#define DMA_IS_USB_INTERFACE 2214 //"++++++ USB Interface ++++++"
#define DMA_IS_UART_INTERFACE 2215 //"++++++ UART Interface ++++++"
#define DMA_DO_NOT_SUPPORT_THIS_INTERFACE 2216 //"DMA Doesn't Support this interface type %d !!!!"
#define DMA_UART_CLK 2217 //"DMA UART CLK: %d"
#define DMA_UART_BAUDRATE 2218 //"DMA UART BaudRate: %d"
#define UART_TEST 2219 //"UART TEST"
#define INSTRUCTION_COUNT 2220 //"m %d: cycle count = %d, i_cache_miss = %d, i_cache_miss_cycle = %d, i_fetches_cycle = %d"
#define INSTRUCTION_COUNT_FOR_BB 2221 //"isr_num %d: 1:%d, 2:%d counter time %d us"
#define INTIAL_GPS_FUNCTION 2222 //"Initial GPS Function"
#define GPS_BUF_START_ADDRESS 2223 //"GPS Buffer Start Address: 0x%x"
#define ENABLE_GPS_FUNCTION_ 2224 //"Enable GPS Function"
#define DISABLE_GPS_FUNCTION_ 2225 //"Disable GPS Function"
#define HANDLE_GPS_UI_ISR 2226 //"Handle GPS User Trigger ISR"
#define HANDLE_GPS_RF_DATA 2227 //"Handle GPS RF Data ISR"
#define GPS_BUFFER_INDEX 2228 //"GPS Buffer Index %d"
#define GPS_BUFFER_ADDRESS 2229 //"Now, GPS Buffer Address: 0x%x"
#define GPS_DATA_CONTEXT 2230 //"Data 0x%x"
#define LE_ACL_ISR 2231 //"LE ACL ISR"
#define RX_LE_ACL_ISR 2232 //"RX ISR is LE pkt"
#define DMA_LE_ACL_TX_DES_LOG 2233 //"========LE ACL Des ==========="
#define DMA_ISR_STATUS 2234 //"DMA ISR Status: 0x%x"
#define LE_ACL_TX_BUF_START_ADDR_LOG 2235 //"LE ACL TX buffer start address: 0x%x"
#define LE_ACL_TX_BUF_SIZE_LOG 2236 //"LE ACL TX buffer entry size: %d, packet number: %d"
#define LE_TX_POOL_ID 2237 //"LE Data to Controller Pool ID"
#define LE_LLC_CONTROL_POOL_ID 2238 //"LE LLC Control Pool ID"
#define LE_RX_POOL_ID 2239 //"LE Data to Host Pool ID"
#define DMA_LE_ACL_TX_DES 2240 //"====LE ACL TX Des====="
#define UART_DMA_RESET_FAIL_1 2241 //"UART reset fail 1"
#define UART_DMA_RESET_FAIL_2 2242 //"UART reset fail 2"
#define DBG_MODEM_VALUE 2243 //"DBG value 0x%x"
#define RECEIVE_PKT_ENTER_FHS 2244 //"RX ISR:Before enter FHS FUN ---> pkt_type 0x%x"
#define ENTER_FHS_FUN 2245 //"RX ISR: enater FHS FUN"
#define ENTER_QUEUE 2246 //"Send lc queue"
#define LC_RX_TASK_HANDLE 2247 //"LC Rx task handle"
#define PKT_HEADER_INFO 2248 //"packet type: 0x%x, phy piconet id: 0x%x, AM address: 0x%x"
#define RESULT_EVENT 2249 //"0x%x"
#define LMP_EXTRACT_FHS_PKT 2250 //"lmp extract fhs pkt"
#define BEFORE_GEN_HCI_INQUIRY_RESULT_EVENT 2251 //"Before generate event"
#define AFTER_GEN_HCI_INQUIRY_RESULT_EVENT 2252 //"After generate event"
#define RF_TX_STATUS 2253 //"BZ TX ISR Status 0x%x, tx isr number %d"
#define BB_ISR_STATUS 2254 //"BZ ISR Status 0x%x, isr number %d"
#define BB_RX_ISR_STATUS 2255 //"BZ RX ISR Status 0x%x 0x%x rx isr number %d"
#define CHECK_LC_BEHAVIOR 2256 //"check lc"
#define CHECK_LC_BEHAVIOR_1 2257 //"lc_tx_task"
#define CHECK_LC_BEHAVIOR_2 2258 //"lc_check_and_enable_scans_in_scatternet"
#define LMP_PARA_DBG 2259 //"LUT Low address: 0x%x, Low LUT content: 0x%x, LUT High address: 0x%x, High LUT content: ox%x, am_addr: 0x%x, phy piconet id: 0x%x, tx content reg: 0x%x"
#define LC_UPDATE_DBG 2260 //"MAC DBG: number_of_hlc %d, lc_cur_dev_state %d"
#define DYNAMIC_POLL_DBG_1 2261 //"D1"
#define DYNAMIC_POLL_DBG_2 2262 //"D2"
#define DYNAMIC_POLL_DBG_3 2263 //"D3"
#define DYNAMIC_POLL_DBG_4 2264 //"D4"
#define DYNAMIC_POLL_DBG_5 2265 //"D5"
#define DYNAMIC_POLL_DBG_6 2266 //"D6"
#define DYNAMIC_POLL_DBG_7 2267 //"D7"
#define DYNAMIC_POLL_DBG_8 2268 //"D8"
#define DYNAMIC_POLL_DBG_9 2269 //"D9"
#define MAC_DBG_LOG_MESS_1 2270 //"DBG entry_id: 0x%x, am_addr: 0x%x"
#define MAC_DBG_LOG_MESS_2 2271 //"DBG entry_id: 0x%x"
#define ALTERNATING_SETTING_NUMBER 2272 //"Alternating Setting %d"
#define LC_WRITE_SCAN_MODE_1 2273 //"Wrire Scan Mode:0x%x, scan in use: %d, lc device state: 0x%x"
#define LC_WRITE_SCAN_MODE_2 2274 //"write current IAC"
#define LC_WRITE_SCAN_MODE_3 2275 //"write page scan type: %d"
#define LC_WRITE_SCAN_MODE_4 2276 //"write inquiry scan type: %d"
#define INQUIRY_MODE_DBG_1 2277 //"periodic inquiry"
#define INQUIRY_MODE_DBG_2 2278 //"inquiry mode"
#define __DEVICE_STATUS 2279 //"state: %d"
#define EVT_TD_QUEUE_OVERFLOW 2280 //"Event manager index overflow"
#define ACL_TD_QUEUE_OVERFLOW 2281 //"ACL manager index overflow"
#define SCO_TD_QUEUE_OVERFLOW 2282 //"SCO manager index overflow"
#define LMP_PARA_DBG_1 2283 //"LUT uper content: 0x%x, Payload header: 0x%x"
#define EVT_RX_OWN_ERROR 2289 //"Event RX own bit mismatch with ISR: %d"
#define SEND_PACKET_1 2290 //"Send packet 1, piconet id: %d"
#define SEND_PACKET_2 2291 //"Send packet 2, piconet id: %d"
#define SEND_PACKET_3 2292 //"Send packet 3, piconet id: %d"
#define SEND_PACKET_4 2293 //"Send packet 4, piconet id: %d"
#define SEND_PACKET_5 2294 //"Send packet 5, piconet id: %d"
#define SEND_PACKET_FALSE_1 2295 //"Send packet fail 1: lmp_mss_state: %d"
#define SEND_PACKET_FALSE_2 2296 //"Send packet fail 2: schedule tx status :%d"
#define SCAN_DBG_1 2297 //"piconet:%d, inf address: 0x%x"
#define SCAN_DBG_2 2298 //"piconet:%d"
#define PAGE_SCAN_DBG 2299 //"Piconet address 0x%x content: 0x%x"
#define LMP_TYPE_INFO 2300 //"LMP type: 0x%x"
#define CHECK_PAIRING_CONFIRM 2301 //"Check Pairing Confirm"
#define LMP_SIMPLE_PAIR_FAIL_1 2302 //"LMP simple pair fail 1"
#define LMP_SIMPLE_PAIR_FAIL_2 2303 //"LMP simple pair fail 2"
#define LMP_SIMPLE_PAIR_CONFIRM_PDU 2304 //"LMP handle simple pair confirm pdu=> state: %d"
#define LMP_AUT_HANDLE_SECURITY_PDU 2305 //"LMP security pdu opcode: %d"
#define LMP_HANDLE_NOTACCEPT_PDU 2306 //"Handle not accept pdu opcode: %d"
#define LMP_HANDLE_ACCEPT_PDU 2307 //"Handle accept pdu opcode: %d"
#define LMP_SEND_SIMPLE_PAIR_CONFIRM_PDU 2308 //"LMP send simple pair confirm pdu"
#define BZ_AUTH_PERFORM_USER_PASSKEY_REQUEST 2309 //"bz_auth_perform_user_passkey_request_neg_reply_action: 0x%x"
#define BZ_AUTH_HANDLE_USER_PASSKEY_REQUEST 2310 //"bz_auth_handle_user_passkey_request_reply: 0x%x"
#define LMP_GEN_CONTENT 2311 //"lmp pkt  -->  am_addr: 0x%x, pdu_length: 0x%x, ce_index: 0x%x, picont: %d"
#define LMP_PKTLOAD_CONTENT 2312 //"===LMP payload==="
#define LMP_PAYLOAD_INFO 2313 //"0x%x"
#define LMP_TX_RX_BUF_DBG 2314 //"TX addr: 0x%x RX addr: 0x%x"
#define LMP_RX_BUF_DBG 2315 //"RX addr: 0x%x"
#define BZ_DMA_R_W_POINT 2316 //"w_p: %d, r_p: %d"
#define LMP_RX_ERROR 2317 //"LMP rx error"
#define LC_MANAGER_INFO 2318 //"master count: %d, slave count: %d"
#define LC_MANAGER_INFO_1 2319 //"isr condition-> piconet id: %d, master count: %d, slave count: %d"
#define LC_MANAGER_INFO_2 2320 //"isr condition-> master count: %d, slave count: %d"
#define LC_PROGRAM_BEACOM 2321 //"Lc program beacon"
#define ENTER_IMODE_BZDMA 2322 //"enter imode bzdma-> mode status reg:0x%x, picont: %d"
#define BR_DBG_LOG 2323 //"0x46:0x%x, 0x44: 0x%x, 0x42:0x%x"
#define BZ_DMA_BC_LOG 2324 //"BZ DMA BC: 0x%x, DW0 0x%08x DW1 0x%08x"
#define RECEIVE_SCO_PKT 2325 //"Receive Sco pkt"
#define DEBG_SCO_LOG 2326 //"payload: 0x%x"
#define SEND_LMP_PKT_OPCODE 2327 //"LMP opcode: %d"
#define SCO_FIFO_NUM 2328 //"SCO fifo number:%d"
#define TRIGGER_LA 2329 //"Triger LA Debug!!!!!!!!"
#define ESCO_DBG_LOG 2330 //"tesco:0x%x, wesco: 0x%x, esco_win: 0x%x, desco: 0x%x"
#define POOL_SIZE 2331 //"Pool Size: 0x%x, %d"
#define ROLE_SWITCH_ID_ISR 2332 //"TX trigger->Role switch-> lmp_mss_state: 0x%x"
#define ROLE_SWITCH_ID_ISR_1 2333 //"RX trigger->Role switch->packet header: 0x%x"
#define BDADDR_SEED 2334 //"BD_Address Seed: 0x%d"
#define RSSI_NOT_READY 2335 //"Modem not ready!!!!"
#define RSSI_READY 2336 //"Modem ready"
#define DISABLE_HCI_DMA_TX_RX 2337 //"Disable HCI DMA"
#define DO_SUPPORT_TYPE 2338 //"Don't Support mode"
#define TX_DBG_LOG 2339 //"tx_status: 0x%x, ce_index:0x%x ,lc_wait for crc pkt ack: 0x%x"
#define AMADDR_ZERO 2340 //"Am addr = 0, state: %d"
#define AMADDR_ZERO_1 2341 //"Am addr 1: 0x%x, %d"
#define AMADDR_ZERO_2 2342 //"Am addr 2: 0x%x"
#define AMADDR_ZERO_3 2343 //"Am addr 3: 0x%x, %d"
#define DO_NOT_NEED_FREE_BUFFER 2344 //"Don't need release memory to pool"
#define NOT_SUPPORT_TEST_MODE 2345 //"Not support test mode"
#define ENABLE_HCI_DMA_TX_RX 2346 //"Enable HCI DMA"
#define FW_SEND_ONE_SCO_PKT 2347 //"Send SCO packet: length: %d"
#define START_TIME_STAMP 2348 //"Level %d=>Start time:0x%x"
#define END_TIME_STAMP 2349 //"Level %d=>End time:0x%x"
#define BZ_DMA_TX_TIME 2350 //"BZ DMA Time: 0x%x"
#define ESCO_NO_DATA_TRANSFER 2351 //"no data in esco data queue"
#define EV3_TX_DONE 2352 //"EV3 TX Done"
#define EV3_RX_DONE 2353 //"EV3 RX Done: packet header: 0x%x, payload header: 0x%x"
#define DYNAMIC_POLL_DBG_10 2354 //"D10"
#define DYNAMIC_POLL_DBG_11 2355 //"D11"
#define DYNAMIC_POLL_DBG_12 2356 //"D12"
#define DYNAMIC_POLL_DBG_13 2357 //"D13"
#define DYNAMIC_POLL_DBG_14 2358 //"D14"
#define DYNAMIC_POLL_DBG_15 2359 //"D15"
#define DYNAMIC_POLL_DBG_16 2360 //"D16"
#define DYNAMIC_POLL_DBG_17 2361 //"D17"
#define DYNAMIC_POLL_DBG_18 2362 //"D18"
#define DYNAMIC_POLL_DBG_19 2363 //"D19"
#define DYNAMIC_POLL_DBG_20 2364 //"D20"
#define DYNAMIC_POLL_DBG_21 2365 //"D21"
#define DYNAMIC_POLL_DBG_22 2366 //"D22"
#define DYNAMIC_POLL_DBG_23 2367 //"D23"
#define DYNAMIC_POLL_DBG_24 2368 //"D24"
#define DYNAMIC_POLL_DBG_25 2369 //"D25"
#define EV4_TX_DONE 2370 //"EV4 TX Done"
#define ESCO_START 2371 //"esco start int"
#define ESCO_END 2372 //"esco end int"
#define FIFO_DOESN_T_HAVE_ENOUGH_FREE_SPACE_NOW_1 2373 //"No enough free space: free:0x%x, request: 0x%x"
#define FIFO_FREE_BYTE 2374 //"load esco=> fifo free bytes: 0x%x"
#define FIFO_FREE_BYTE_1 2375 //"receive ack=> free bytes: 0x%x"
#define BT_VOICE_SETTING_PARAMETER 2376 //"air mode bm:(self 0x%x, remote 0x%x) air mode:0x%x, input codec:0x%x, input data formate:0x%x, is 16bit: 0x%x"
#define SCO_CONV_TABLE_VALUE 2377 //"convert table:0x%x"
#define LEAVE_32_K_MODE 2378 //"Leave 32K clock mode"
#define CLEAR_BT_AND_GPS_POWN_BIT 2379 //"Clear Power Down bit for BT and GPS"
#define DO_NOT_SUPPORT_MODE 2380 //"Don't Support mode!!!!"
#define INTERFACE_SUSPEND 2381 //"Interface suspend isr"
#define MAILBOX_DATA_ERROR 2382 //"Mailbox error!!"
#define MAILBOX_CMD_ID 2383 //"Mailbox ID: %d, write: %d"
#define MAILBOX_READ_VALUE 2384 //"Read reg value: 0x%x"
#define ROM_CODE_PAGE_ADDR 2385 //"Rom code page addr: 0x%x"
#define ROM_CODE_PAGE_CMD_ERROR 2386 //"Page addr error!!!"
#define FLASH_SYNC_FIFO 2387 //"flash iso fifo!"
#define DOES_NOT_SUPPORT_PARAMETER 2388 //"Not support mode!!"
#define SCO_TX_FREE_ERROR 2389 //"SCO tx packet number free error!!!"
#define SCO_TX_ENQUUE_ERROR 2390 //"SCO tx packet number %d enqueue error!!!"
#define QUEUE_SCO_PKT 2391 //"queue pkt num: %d"
#define SEGMA_NUM 2392 //"segna index number: %d"
#define SCO_HEADER_NULL 2393 //"sco tx no pkt"
#define DEQUEUE_SCO_PKT 2394 //"de-queue pkt num: %d"
#define SCO_DATA_TO_REMOTE_POOL_ID 2395 //"BT => Remote Pool ID"
#define SEG_INFO 2396 //"len:%d, addr:0x%x"
#define SCO_STACK_AVAIABLE_NUM 2397 //"SCO stack avaiable number: %d"
#define FLUSH_TIME_OUT_VALUE 2398 //"Flush timeout value: 0x%x"
#define EX_BT_GPIO_PDN_EN 2399 //"External BT GPIO Power Down"
#define EX_GPS_GPIO_PDN_EN 2400 //"External GPS GPIO Power Down"
#define PCIE_SUSPEND_EN 2401 //"PCIE Suspend!!"
#define USB_SUSPEND_EN 2402 //"USB Suspend!!"
#define OTHER_STATUS_APPEAR 2403 //"No expected status: 0x%x"
#define MAILBOX_WAKEUP_INT 2404 //"Mailbox wake up interrupt"
#define BLUEWIZ_WAKEUP_INT 2405 //"Bluewiz wake up interrupt"
#define UART0_WAKEUP_INT 2406 //"UART0 wake up interrupt"
#define USB_WAKEUP_INT 2407 //"USB wake up interrupt"
#define THERMETER_WAKEUP_INT 2408 //"Thermeter wake up interrupt"
#define TIMER_32K_WAKEUP 2409 //"32K timer wake up interrupt"
#define POWER_CTRL_REG_VALUE 2410 //"Power control reg 0x40: 0x%x"
#define GPIO_FOR_UART 2411 //"GPIO pin for UART interfaces"
#define INITI_GPIO_FOR_POWER 2412 //"GPIO initial for power saving"
#define GPIO_INT_POLARITY_STS 2413 //"GPIO Polarity status: 0x%x"
#define BTCORE_SET_PDN 2414 //"BTCore set power down setting"
#define BTCORE_CLEAR_PDN 2415 //"BTCore clear power down setting"
#define BT_PDN_ENABLE 2416 //"BT Power Down Start"
#define GPS_PDN_ENABLE 2417 //"GPS Power Down Start"
#define USB_SUSPEND_ENABLE 2418 //"USB suspend"
#define PCIE_SUSPEND_ENABLE 2419 //"PCIE suspend"
#define BT_PDN_FALSE_ALARM 2420 //"BT PDN False alarm"
#define GPS_PDN_FALSE_ALARM 2421 //"GPS PDN False alarm"
#define USB_SUS_FALSE_ALARM 2422 //"USB Suspend False alarm"
#define PCIE_SUS_FALSE_ALARM 2423 //"PCIE Suspend False alarm"
#define WIFI_INFO 2424 //"WIFI channel: 0x%d, bw: 0x%d, mask num: 0x%d "
#define WIFI_DISCONNECT 2425 //"Wifi disconnect!!!"
#define POWER_CTRL_GLOBAL_REG_VALUE 2426 //"Power control global reg 0x40: 0x%x"
#define TIMER_REGISTER_VALUE 2427 //"Timer regisre 0x%x: 0x%x"
#define UART_REGISTER_VALUE 2428 //"UART regisre 0x%x: 0x%x"
#define GPIO_REGISTER_VALUE 2429 //"GPIO regisre 0x%x: 0x%x"
#define NO_SUPPORT_TIMER 2430 //"TIMER ID No Support!!"
#define TIMER_TIK_ERROR 2431 //"Timer tik error!!!=> set timer tik to 1"
#define RTK8723_SDIO_UART 2432 //"RTK8723 SDIO UART Mode: hci sel = 0x%x"
#define RTK8723_USB_MULTI 2433 //"RTK8723 USB MILTI Mode: hci sel = 0x%x"
#define RTK8723_PCIE_MULTI 2434 //"RTK8723 PCIEMULTI Mode: hci sel = 0x%x"
#define RTK8723_PCIE_USB 2435 //"RTK8723 PCIE USB Mode: hci sel = 0x%x"
#define RTK8723_INTERFACE_INFO 2436 //"RTK8723 BT Fun:%x, Interface:%x; GPS Fun:%x, Interface:%x"
#define PDN_GPIO_POLARTIY 2437 //"BT gpio polarity:%x, GPS gpio polarity:0x%x"
#define DATA_UART_EN 2438 //"BT Data Uart enable"
#define USB_SIE_NY_ENABLE 2439 //"USB SIE NY Enable"
#define EFUSE_POWER_INFO 2440 //"EFUSE power option: 0x%x      (Note: overwritten if efuse_pow_setting_1.lop_sop_low_power_setting_en = 1)"
#define PTA_GET_LMP_CE_INDEX_ERROR 2441 //"PTA get ce_index error!!!"
#define PTA_GET_MIN_TIME_ERROR 2442 //"PTA get period time error!!!; flash time = 0"
#define NOTIFY_WIFI_CALIBRATION 2443 //"Notify WiFi Calibration"
#define ENTER_HCI_LOOPBACK_MODE 2444 //"Enter HCI LoopBack Mode"
#define LEAVE_HCI_LOOPBACK_MODE 2445 //"Leave HCI LoopBack Mode"
#define CMD_TX_ERROR 2446 //"cmd tx error;length: %d"
#define SCO_TX_ERROR 2447 //"sco tx error;length: %d"
#define ACL_TX_ERROR 2448 //"acl tx error;length: %d"
#define FREE_ALL_RX_BUFFER 2449 //"Alternat set to Free RX buffer"
#define ENABLE_TDMA_MODE 2450 //"Enable PTA to TDMA mode"
#define TRIGGER_TDMA_CALLBACK 2451 //"Trigger TDMA mode"
#define PTA_MAX_TRANSFER_TIME 2452 //"PTA max transfer time 0x%x"
#define UART_RX_TEST 2453 //"Uart RX Test Len:%d"
#define UART_RX_DBG_UNKNOW_CMD 2454 //"UART RX DBG: Unknow CMD ID!!!"
#define GPIO_INDEX_CAN_NOT_USE 2455 //"GPIO Index Can't use: %d"
#define MAILBOX_TDMA_TRANSFER_LEN 2456 //"TDMA transfer len: %d"
#define GET_EXPECT_TRANSFER_TIME_FROM_LC 2457 //"LC expect transfer time: %d"
#define PTA_TDMA_FLUSH_TIME 2458 //"PTA TDMA period time(flush time):%d ms"
#define MAILB_BOX_WRITE 2459 //"Mailbox write operation"
#define MAILBOX_TX_DONE 2460 //"Mailbox TX Done"
#define PTA_TBT_TIME 2461 //"PTA Tbt time: %d us"
#define PTA_TBT_TIME_1 2462 //"PTA Tbt time input from uart: 0x%x"
#define TDMA_BT_PERIOD_TIME 2463 //"PTA TDMA period time:%d ms"
#define HID_PROFILE_OFF 2464 //"HID Profile Off"
#define HID_PROFILE_ON 2465 //"HID Profile On"
#define CON_HANDLE_NUMBER 2466 //"Connection Handle %d"
#define SCAN_ERROR 2467 //"Scan BT Role Fail"
#define PTA_MAX_QUEUE_TX_TIME 2468 //"PTA max queue tx time %d"
#define TDMA_RETRY_INDEX 2469 //"TDMA retry index %d"
#define BT_IGNORE_WLAN_ACT 2470 //"BT ignorw WLAN_ACT"
#define DISABLE_TDMA_MODE 2471 //"Disable PTA to TDMA mode"
#define WIFI_ASSIGN_TX_POWER 2472 //"Wifi Assign TX Power %d!!"
#define ENABLE_BT_IGNORE_WLAN_ACT 2473 //"Enable BT Ignore WAN_ACT"
#define DISABLE_BT_IGNORE_WLAN_ACT 2474 //"Disable BT Ignore WAN_ACT"
#define TDMA_PKT_TYPE 2475 //"TDMA BT packet type index:%d"
#define MSG_VEMDOR_REG_RD_AFTER_WR 2476 //"Modify Vendor Reg(%x): 0x%x->0x%x"
#define REG_ALIGNMENT_ERROR 2477 //"Address alignment error: 0x%x"
#define ENABLE_TRADITIONAL_TDMA 2478 //"Taditional TDMA enable: wlan time: 0x%x, bt time: 0x%x"
#define BT_STATUS_DISABLE 2479 //"BT FUN Disable"
#define GPS_STATUS_DISABLE 2480 //"GPS FUN Disable"
#define LMP_TASKS_3864_NEW  2481  //"Slave initiated unpark:ar:%d pi: %d pend %d"
#define LMP_TASKS_3887_NEW  2482  //"Deferred or Resumed Slave init unpark:ar:%d pi: %d am: %d pend %d"
#define LMP_SLAVE_UNPARK_1  2483  //"SlaveUnpark: unpark_req_flag %d ce_index %d am_addr %d"
#define CTRL_BT_IGNORE_WLAN_ACT 2484 //"Control BT Ignore WAN_ACT (data %x)"
#define CTRL_ENABLE_TDMA_MODE 2485 //"Switch PTA to TDMA mode (%d)"
#define MSG_HCI_VENDOR_ADD_DEVICE_TO_WHITE_LIST 2486   //"HCI_VENDOR_ADD_DEVICE_TO_WHITE_LIST state %x"
#define MSG_HCI_VENDOR_REMOVE_DEVICE_FROM_WHITE_LIST 2487   //"HCI_VENDOR_REMOVE_DEVICE_FROM_WHITE_LIST state %x"
#define MSG_PDN_GPIO_POLARTIY 2488 //"gpio:%x, BT gpio polarity:%x, GPS gpio polarity:0x%x"
#define MSG_CHK_GPIO_PWRON 2489 //"Check GPIO PWR ON -- State:%x GPIO_PIN:%x POW_CTRL:%x"
#define MSG_GPIO_INTR 2490 //"GPIO INT MSG: -- State:%x, BTON_INT_INFO:%x, GPIO_STA:%x, PWR_CTRL:%x, PWR_OPT:%x"
#define MSG_CHK_GPIO_PWRON2 2491 //"Check GPIO PWR ON -- State:%x GPIO_PIN:%x POW_CTRL:%x bton_inter_info:%x"
#define RTK8723_INTERFACE_INFO2 2492 //"RTK8723 BT Fun:%x, Interface:%x; BTON BT Fun:%d, BT ON UART Fun:%d, BT GPIO11 RF OFF:%d"
#define DMA_INIT_2 2493 //"DMAT Start      pow_ctrl = 0x%x       efuse_pow_para.b.usb_sie_ny_en = %x"
#define BT_MSG_GENERATE_FLUSH  2494  //"Generating flush event (%d) ce_index=%d, ce_ptr->enhanced_flush=%d, ce_ptr->flush_running=%d"
#define INITI_GPIO_FOR_POWER_2 2495 //"GPIO initial for power saving,  gpio_polarity_mask: 0x%X"
#define MSG_HCI_DMA_SET_MODE 2496 //"hcidma set mode %d"
#define MSG_CHK_GPIO_PWRON3 2497 //"Check GPIO PWR ON -- State:%x GPIO_PIN:%x POW_CTRL:%x bton_inter_info:%x  vendor0x7C:%x"
#define MSG_CPU_REBOOT 2498 //"######## CPU Reboot ########"
#define MSG_3DD_BB_NATIVE_CLK 2499 //"msg:3dd bt clk %08x:%d us count %d"
#define TDMA_BT_PERIOD_TIME_NEW 2500 //"PTA TDMA period time:%d ms state:%d bt max time:%d s"
#define MSG_RESOLVING_LIST_DUMP 2501 //"idx: %d(cam_addr: 0x%x), LocalIRK = 0x%08x%08x%08x%08x, PeerIRK = 0x%08x%08x%08x%08x, addr = 0x%4x%4x%4x, type = %d"
#define MSG_LE_PRIVACY_LOCAL_RPA 2502 //"local RPA in resolving_list[%d] = 0x%x%x%x"
#define MSG_LE_PRIVACY_PEER_RPA 2503 //"peer RPA in resolving_list[%d] = 0x%x%x%x"
#define MSG_LE_PRIVACY_NOT_ENABLE 2504 //"address resolution is not enable!"
#define MSG_LE_PRIVACY_RX_STATUS 2505 //"privacy: rx_status = 0x%x"
#define MSG_LE_PRIVACY_DUMP_DEBUG 2506 //"privacy_debug(0x%x): 0x%x"
#define MSG_LE_PRIVACY_REGEN_RPA 2507 //"privacy: re-generate RPA, local rand: 0x%x%x, peer rand: 0x%x%x"
#define MSG_LE_PRIVACY_RX_CHECK 2508 //"resolved check: in adv. channel (%d), rx_entries_chk (%d), scan_rcv_all_ind (%d), scan_rcv_nreso_inita (%d)"
#define MSG_LE_PRIVACY_SET_MODE 2509 //"set mode in resolving list[%d] = %d"
#define MSG_LE_PRIVACY_NONRPA 2510 //"non-RPA = 0x%x%x%x"
#define MSG_LE_PRIVACY_READ_RPA_TO 2511 //"Warning!! Read RPA Fail!!!"
#define LOG_LMP_CHECK_CE_INDEX_ENTITY_STATUS_FAILED 2512 //"Warning!! Invalid ce_index:%d or ent_stat:%d"
#define LOG_LC_PCA_MGR_TASK_EXHAUSTED 2513 //"[LC][PCA] Warning: (pid %d) pca_task exhausted"
#define LOG_LC_PCA_MGR_INSTANT_NOT_SAFE 2514 //"[LC][PCA] Warning: (pid %d) instant not safe: cur_inst %d inst (old %d -> new %d)"
#define LOG_LC_PCA_MGR_CURRENT_TASK_MISMATCH 2515 //"[LC][PCA] Warning: current task mismatch: task %p (pid %d) mgr_cur_task %p (pid %d)"
#define LOG_LC_PCA_MGR_INSTANT_EXCEED_LE_CE_SAFE_ZONE 2516 //"[LC][PCA] Warning: task instant exceeds LE safe zone: pid %d cur_inst %d inst %d ap %d"
#define LOG_LC_PCA_MGR_CURRENT_TASK_NULL 2517 //"[LC][PCA] Warning: (pid %d) current task is NULL"
#define LOG_LC_PCA_MGR_CURRENT_TASK_PID_MISMATCH 2518 //"[LC][PCA] Warning: (pid %d) piconet_adj_intr: current task pid != hw pid %d"
#define LOG_LC_TPOLL_MGR_INVALID_CE_INDEX 2519 //"[LC][TPOLL] Warning: invalid ce_index %d"
#define LOG_LC_TPOLL_MGR_OPERATION_FAIL_DUE_TO_INVALID_SUSPENSION_STATE 2520 //"[LC][TPOLL] Warning: operation fail (am_addr %d pid %d) due to suspension (state %d)"
#define LOG_LC_TPOLL_MGR_HTPOLL_ALREADY_RUN 2521 //"[LC][TPOLL] Warning: cancelled starting tpoll (am_addr %d pid %d) because htpoll is running"
#define LOG_LC_TPOLL_MGR_NO_FREE_TASK 2522 //"[LC][TPOLL] Warning: failed to allocate new htpoll task"
#define LOG_LC_TPOLL_MGR_HTPOLL_END_MISMATCH_LUT_INDEX 2523 //"[LC][TPOLL] Warning: htpoll end notify: mismatch lut_ind %d %d"
#define LOG_LC_TPOLL_MGR_HTPOLL_CURRENT_NULL 2524 //"[LC][TPOLL] Error: htpoll current is null: am_addr %d pid %d"
#define LOG_LC_TPOLL_MGR_HTPOLL_START_INFO 2525 //"[LC][TPOLL] htpoll start intr: am_addr %d pid %d task_inst %d cur_inst %d"
#define LOG_LC_TPOLL_MGR_HTPOLL_END_INFO 2526 //"[LC][TPOLL] htpoll end intr: am_addr %d pid %d cur_inst %d"
#define LOG_LC_HTPOLL_TASK_EXEC_INFO 2527 //"[LC][TPOLL] htpoll exec: am_addr %d pid %d htpoll_ind %d inst %d intvl %d rsvd_slots_sched %d cur_slot %d"
#define LOG_LC_HTPOLL_TASK_EXEC_INSTANT_PASSED 2528 //"[LC][TPOLL] Warning: htpoll task exec instant passed: am_addr %d pid %d inst %d cur_inst %d"
#define LOG_LC_HTPOLL_SCHED_INSERT_TASK_ALREADY_IN_QUEUE 2529 //"[LC][TPOLL] Warning: htpoll sched(pid %d): task (am_addr %d pid %d inst %d) already in queue"
#define LOG_LC_TPOLL_MGR_HTPOLL_RSVD_SLOT_TOO_LARGE 2530 //"[LC][TPOLL] Warning: htpoll rsvd_slot %d > interval %d (rsvd_slot will be changed to interval)"
#define LOG_LC_TPOLL_MGR_EXPIRE_HTPOLL 2531 //"[LC][TPOLL] expire htpoll: am_addr %d pid %d task_inst %d task_sched_end %d cur_inst %d"
#define LOG_LC_TPOLL_MGR_IGNORE_EXPIRE_HTPOLL 2532 //"[LC][TPOLL] ignore expire htpoll: am_addr %d pid %d task_inst %d task_sched_end %d cur_inst %d"
#define LOG_LC_TPOLL_MGR_MODIFY_HTPOLL 2533 //"[LC][TPOLL] modify htpoll: am_addr %d pid %d task_inst %d task_sched_end %d cur_inst %d rsvd_slot(old %d new %d)"
#define LOG_LC_TPOLL_MGR_IGNORE_MODIFY_HTPOLL 2534 //"[LC][TPOLL] ignore modify htpoll: am_addr %d pid %d task_inst %d task_sched_end %d cur_inst %d rsvd_slot(old %d new %d)"
#define LOG_LC_TPOLL_MGR_SUSPEND 2535 //"[LC][TPOLL] suspend: am_addr %d pid %d susp_state %d susp_cnt %d"
#define LOG_LC_TPOLL_MGR_RESUME 2536 //"[LC][TPOLL] resume: am_addr %d pid %d susp_state %d susp_cnt %d"
#define LOG_CFG_PARSE_ERROR    2537    //">>>>>> CFG_Header:0x%x, Parsing Error"
#define LOG_LC_PCA_MGR_INVALID_PID 2538 //"[LC][PCA] Warning: pid %d is not active"
#define LOG_LC_TPOLL_MGR_HTPOLL_TASK_NULL 2539 //"[LC][TPOLL] htpoll task (am_addr %d pid %d lut_ind %d) is NULL"
#define LOG_LC_SUSPEND_TPOLL 2540 //"[LC] suspend Tpoll: am_addr %d pid %d"
#define LOG_LC_RESUME_TPOLL 2541 //"[LC] resume Tpoll: am_addr %d pid %d"
#define LOG_LC_HOLD_MGR_INSTANT_PASSED 2542 //"[LC][HOLD] Warning: start hold instant passed: inst (old %d new %d) cur_inst %d"
#define LOG_LC_TPOLL_MGR_UNASSIGNED_CE_INDEX 2543 //"[LC][TPOLL] Warning: unassigned ce_index %d"
#define LOG_LC_TPOLL_MGR_INVALID_AM_ADDR_PID 2544 //"[LC][TPOLL] Warning: invalid am_addr %d pid %d"
#define LOG_INVALID_CE_INDEX 2545 //"Warning: invalid ce_index %d"
#define LOG_UNASSIGNED_CE_INDEX 2546 //"Warning: unassigned ce_index %d"
#define LOG_LC_HANDLE_LMP_PDUS_FAILED 2547 //"Warning: lc_handle_lmp_pdus() failed: status %d lmp opc %d/%d"
#define LOG_LC_HANDLE_HLC_PS_ERR 2548 //"[HLC][PS-Err] Now ce: %d %d addr 0x%x Err ce: %d %d addr 0x%x"
#define LOG_LC_TPOLL_MGR_HTPOLL_TASK_MISMATCH 2549 //"[LC][TPOLL] htpoll task (am_addr %d pid %d lut_ind %d) mismatch %p %p"
#define LOG_LC_TPOLL_MGR_INVALID_LUT_INDEX 2550 //"[LC][TPOLL] Warning: invalid lut_ind %d"
#define LOG_LC_TPOLL_MGR_SLAVE_TPOLL_MASK_POLICY_LUT_NOT_FOUND 2551 //"[LC][TPOLL] Warning: slave_tpoll_mask policy: lut_index %d not found"
#define LOG_LC_TPOLL_MGR_EXCEED_MAX_LEVEL_OF_NESTED_SUSPENSION 2552 //"[LC][TPOLL] Warning: cannot suspend because max level (%d) of suspension is exceeded"
#define LOG_LC_HOLD_MGR_EXCEED_MAX_LEVEL_OF_NESTED_HOLD 2553 //"[LC][HOLD] Warning: cannot start hold mode because max level (%d) of hold is exceeded"
#define LOG_LC_TPOLL_MGR_START_TPOLL_ON_KILLED_LINK_WARN 2554 //"[LC][TPOLL] Warning: ignore start tpoll/htpoll because HLC is killed: am_addr %d pid %d"
#define LOG_RESET_RX_FIFO_WORKAROUND                     2555 //"[WORKAROUND] Flush abnormal RX FIFO rxfifo_bytes=%d"
#define DGB_FLUSH_AUX1_PKT                               2556 //"[WORKAROUND] Flush AUX1 RX FIFO rxfifo_bytes=%d"
#define LOG_HANDLE_CRC_OK_FIFO_ZERO                      2557 //"[RX] Handle CRC OK, RX FIFO ERROR, pkt_hdr:0x%x, pl_hdr:0x%x"
#define LOG_HANDLE_NOISY_PACKET                          2558 //"[RX] Force CRC error for noisy packet, pkt_hdr:0x%x, pl_hdr:0x%x"

#define LOG_VHCI_H2C_ACL_PKT_OVERLAPPED_WARN 2600 //"Warning!! vhci_send(): acl (pkt:0x%p, len:%d) overlapped with (pkt:0x%p, len:%d)"
#define LOG_VHCI_C2H_PKT_NODE_EXHAUSTED 2601 //"Warning: VHCI_C2H_PKT_NODE exhausted: pkt_type %d buf %p"
#define LOG_LMP_VENDOR_P2P_CLK_ADJ_PCA_INST_INFO 2602 //"[P2P_CLK_ADJ] pca_intr: pid %d pca_slot_offs %d pca_us_offs %d pca_timeout %d pca_inst(after pca_intr) %d cur_slot %d"
#define LOG_LMP_VENDOR_P2P_CLK_ADJ_EARLIER_PCA_INSTANT_WARN 2603 //"[P2P_CLK_ADJ] Waring: pca_intr is too early: pid %d pca_inst(after pca_intr) %d cur_slot %d"
#define LOG_LMP_VENDOR_P2P_CLK_ADJ_PCA_REVERT_INFO 2604 //"[P2P_CLK_ADJ] revert clk adj: pid %d pca_slot_offs %d pca_us_offs %d pca_inst %d cur_slot %d"
#define LOG_LMP_VENDOR_P2P_CLK_ADJ_TIMEOUT_PASSED_WARN 2605 //"[P2P_CLK_ADJ] Warning: ignore pca request due to timeout passed: pid %d pca_inst %d pca_timeout %d cur_slot %d"
#define LOG_LMP_VENDOR_SWAP_ROLE_MGR_INVALID_SR_STATE 2606 //"[SR] swap role invalid state %d"
#define LOG_LMP_VENDOR_SWAP_ROLE_MGR_INVALID_CE_INDEX 2607 //"[SR] swap role invalid ce_index %d"
#define LOG_LMP_VENDOR_SWAP_ROLE_MGR_SETUP_NEW_ACL_LINK 2608 //"[SR] setup new acl: role %d(0=m;1=s) am_addr %d pid %d local_addr_modified %d lut(l:0x%04x h:0x%04x)"
#define LOG_LMP_VENDOR_SWAP_ROLE_MGR_UNSET_NEW_ACL_LINK 2609 //"[SR] unset new acl: role %d(0=m;1=s) am_addr %d pid %d"
#define LOG_LMP_VENDOR_SWAP_ROLE_MGR_ROLE_SWAPPED_INFO 2610 //"[SR] role swapped: m %d am_addr %d->%d pid %d->%d bd_addr 0x%08x%04x->0x%08x%04x"
#define LOG_LMP_VENDOR_SWAP_ROLE_MGR_ROLE_SWAP_CANCELLED_INFO 2611 //"[SR] role swap cancelled: m %d am_addr %d<-%d pid %d<-%d sr_state %d state 0x%x"
#define LOG_LMP_VENDOR_SWAP_ROLE_MGR_NEW_ACL_PCA_INFO 2612 //"[SR] new acl clk adj: old(slot %d us %d) new(slot %d us %d) diff(slot %d us %d) inst %d"
#define LOG_LMP_VENDOR_SWAP_ROLE_MGR_PCA_COMPLETE_CLOCK_INFO 2613 //"[SR] pca complete: old(pid %d slot %d us %d) new(latch_type %d slot %d us %d)"
#define LOG_LMP_VENDOR_CONT_TXRX_MGR_CE_INDEX_ALREADY_IN_USE 2614 //"[CONT_TXRX] Warning: ce_index %d already in cont TXRX: other_links_flow_stop %d"
#define LOG_LMP_VENDOR_CONT_TXRX_MGR_CE_INDEX_MISMATCH 2615 //"[CONT_TXRX] Warning: ce_index mismatch: %d %d"
#define LOG_LMP_VENDOR_SWAP_ROLE_MGR_INVALID_AM_ADDR 2616 //"[SR] swap role invalid am addr %d"
#define LOG_LMP_VENDOR_P2P_CLK_ADJ_RX_AFTER_PCA_INTR 2617 //"[P2P_CLK_ADJ] rx_intr after pca_intr pid %d clk 0x%x"
#define LOG_VENDOR_SYNC_DATA_CMD 2618 //"[SYNC_VEN_DATA] Cmd-> vendor_data_len: %d"
#define LOG_VENDOR_SYNC_DATA_EVT 2619 //"[SYNC_VEN_DATA] Evt-> vendor_data_len: %d"
#define LOG_LMP_VENDOR_P2P_CLK_ADJ_INVALID_SLOT_DIFF 2620 //"[P2P_CLK_ADJ] Invalid pca adj!!: slot_diff: %d, valid_inst_offs: %d"

#define LOG_SHADOW_CLK_ADJ_INTR 2700 //"[SHADOW] piconet_adj_intr: pid %d cur_slot %d cur_cnt %d"
#define LOG_SHADOW_GEN_LL_SHADOW_SLAVE_HANDOVER_REQ 2701 //"[LL]Gen EXT_SHADOW_SLAVE_HANDOVER_REQ: sniff_opt %d"
#define LOG_SHADOW_GEN_LL_SHADOW_SLAVE_HANDOVER_RSP 2702 //"[LL]Gen EXT_SHADOW_SLAVE_HANDOVER_RSP: status %d"
#define LOG_SHADOW_GEN_LL_SHADOW_SLAVE_PICONET_SYNC_IND 2703 //"[LL]GEN EXT_SHADOW_SLAVE_PICONET_SYNC_IND: piconet_slot %d piconet_us %d ce_cnt %d am_addr %d ptt %d afh %d encrypted %d bd_addr 0x%08x%04x seqn(t:%d r:%d) arqn %d tpoll %d supv_to %d pkt_type 0x%04x"
#define LOG_SHADOW_SETUP_LINK_INFO 2704 //"[SHADOW] setup link: pid %d am_addr %d m %d lut(l:0x%04x h:0x%04x)"
#define LOG_SHADOW_CLK_ADJ_SETTING 2705 //"[SHADOW] piconet_adj: cur_slot %d slot_diff %d us_diff %d clk_slot %d clk_cnt %d"
#define LOG_SHADOW_CLK_ADJ_DIFFERENT_NATIVE_PICONET_CLK 2706 //"[SHADOW] piconet_adj: ctrl slot %d us %d, piconet(pid %d) slot %d us %d"
#define LOG_SHADOW_GEN_LMP_SHADOW_SLAVE_PICONET_SYNC1 2707 //"[LMP]GEN EXT_SHADOW_SLAVE_PICONET_SYNC1: piconet_slot_diff %d piconet_us_diff %d am_addr %d ptt %d afh %d encrypted %d seqn(t:%d r:%d) arqn %d tpoll %d supv_to %d pkt_type 0x%04x"
#define LOG_SHADOW_INVALID_SHADOW_ACL_CE_INDEX 2708 //"[SHADOW] Warning: invalid shadow acl ce_index %d"
#define LOG_SHADOW_INVALID_TARGET_ACL_CE_INDEX 2709 //"[SHADOW] Warning: invalid target acl ce_index %d"
#define LOG_SHADOW_INVALID_LE_CTRL_LINK 2710 //"[SHADOW] Warning: invalid le ctrl link: type %d handle %p"
#define LOG_SHADOW_INVALID_BR_CTRL_LINK 2711 //"[SHADOW] Warning: invalid br ctrl link: type %d ce_index %d"
#define LOG_SHADOW_TARGET_ACL_CE_INDEX_MISMATCH 2712 //"[SHADOW] Warning: target acl ce_index mismatch: %d %d"
#define LOG_SHADOW_UNEXPECTED_SHADOW_LINK_STAGE 2713 //"[SHADOW] Warning: unexpected shadow link stage %d"
#define LOG_SHADOW_IGNORE_LINK_TX_LMP 2714 //"[SHADOW] ignore TX LMP: ce_index %d am_addr %d pid %d lmp opc %d/%d"
#define LOG_SHADOW_IGNORE_LINK_TX_ACL 2715 //"[SHADOW] ignore TX ACL: ce_index %d am_addr %d pid %d acl %p"
#define LOG_SHADOW_ESCO_CE_INDEX_NOT_FOUND 2716 //"[SHADOW] Warning: esco_ce_index not found: am_addr %d pid %d"
#define LOG_SHADOW_ESCO_CE_INDEX_NOT_FOUND_IN_ACL_LINK 2717 //"[SHADOW] Warning: esco_ce_index not found in acl link (ce_index %d)"
#define LOG_SHADOW_ENABLE_AFH_MAP 2718 //[SHADOW] enable afh_map, piconet_clock = 0x%x, afh_instant = 0x%x (unit:312.5us)

#define LOG_LINK_CORR_CLOCK_DIFF_INFO 2789 //"[LINK_CORR] clock diff: tgt(slot %d us %d) src(slot %d us %d) abs_diff(slot %d us %d)"
#define LOG_LINK_CORR_ACTIVATE 2790 //"[LINK_CORR] Activate-> Link Info: src_link_ce_idx: %x, tgt_link_ce_idx: %x"
#define LOG_LINK_CORR_ACTIVATE_FAIL 2791 //"[LINK_CORR] Activate-> Tx p2p clk adj procedure fail!! (src_link_ce_idx: %x)"
#define LOG_LINK_CORR_BITMAP_ERR 2792 //"[LINK_CORR] Bitmap Error!! src_link_ce_idx: %x"
#define LOG_LINK_CORR_DISABLE 2793 //"[LINK_CORR] Disable-> src_link_ce_idx: %x"
#define LOG_LINK_CORR_ENABLE 2794 //"[LINK_CORR] Enable-> Link Info: src_link_ce_idx: %x, tgt_link_ce_idx: %x"
#define LOG_LINK_CORR_ALREADY_USED 2795 //"[LINK_CORR] Warning! Link corr mgr is being used (%d). Reject src_link_ce_idx: %x"
#define LOG_ACL_SUSP_TIMEOUT 2796 //"[ACL_SUSP] timeout: ce_index %d type %d state %d force_nak %d txrx_stopped %d"
#define LOG_LMP_CONN_ENTITY_SCO_LIST_NOT_EMPTY_WARN 2797 //"Warning: SCO link (sco_ce_idx %d) still exists when underlying ACL link (acl_ce_idx %d) is disconnected"
#define LOG_LMP_CONN_ENTITY_ESCO_LIST_NOT_EMPTY_WARN 2798 //"Warning: eSCO link (esco_ce_idx %d) still exists when underlying ACL link (acl_ce_idx %d) is disconnected"
#define LOG_BZDMA_SNIFFING_TXCMD_ALREADY_SENT 2799 //"[BZDMA] bzdma sniffing TX cmd already sent: reg0x%x 0x%08x"
#define LOG_AUDIO_SNIFF_UNASSIGNED_CE_INDEX 2800 //"[AS] Warning: unassigned ce_index %d"
#define LOG_AUDIO_SNIFF_INVALID_CE_INDEX 2801 //"[AS] Warning: invalid ce_index %d"
#define LOG_AUDIO_SNIFF_UNASSIGNED_ESCO_CE_INDEX 2802 //"[AS] Warning: unassigned esco_ce_index %d"
#define LOG_AUDIO_SNIFF_INVALID_ESCO_CE_INDEX 2803 //"[AS] Warning: invalid esco_ce_index %d"
#define LOG_AUDIO_SNIFF_ROLE_MISMATCH 2804 //"[AS] Warning: role mismatch: %d %d"
#define LOG_AUDIO_SNIFF_INVALID_AUDIO_TYPE 2805 //"[AS] Warning: invalid audio_type %d"
#define LOG_AUDIO_SNIFF_CTRL_CE_INDEX_MISMATCH 2806 //"[AS] Warning: ctrl ce_index mismatch: %d %d"
#define LOG_AUDIO_SNIFF_RESET_OLD_ROLE 2807 //"[AS] reset old role %d"
#define LOG_AUDIO_SNIFF_SET_NEW_ROLE 2808 //"[AS] set new role %d"
#define LOG_AUDIO_SNIFF_RECOV_CE_INDEX_ALREADY_EXISTED 2809 //"[AS] Warning: recovery ce_index %d already existed"
#define LOG_AUDIO_SNIFF_ALLOCATE_AM_ADDR_FAILED 2810 //"[AS] Error: allocate am_addr failed: err_code = %d"
#define LOG_AUDIO_SNIFF_GET_SNIFF_TX_CMD_FAILED 2811 //"[AS] Error: get sniff tx cmd (type %d) failed"
#define LOG_AUDIO_SNIFF_SNIFF_TX_CMD_NULL 2812 //"[AS] Warning: sniff tx cmd is NULL (sniff: role %d)"
#define LOG_AUDIO_SNIFF_IGNORE_LINK_TX_LMP 2813 //"[AS] ignore TX LMP: ce_index %d am_addr %d pid %d lmp opc %d/%d"
#define LOG_AUDIO_SNIFF_IGNORE_LINK_TX_ACL 2814 //"[AS] ignore TX ACL: ce_index %d am_addr %d pid %d acl %p"
#define LOG_AUDIO_SNIFF_INCORRECT_ROLE 2815 //"[AS] Warning: incorrect role %d"
#define LOG_AUDIO_SNIFF_A2DP_PKT_SIZE_LESS_THAN_BB_PKT_SIZE 2816 //"[AS] Warning: a2dp packet size %d is less than baseband packet size %d"
#define LOG_AUDIO_SNIFF_A2DP_HISTORY_FIFO_LEN_NEGATIVE 2817 //"[AS] Warning: a2dp history fifo len is negative: rptr $d wptr %d eff_wptr %d"
#define LOG_AUDIO_SNIFF_A2DP_HISTORY_ADD_OUTDATED_PACKET_WARN 2818 //"[AS] Warning: a2dp history add outdated pkt: wptr %d eff_wptr %d seq %d"
#define LOG_AUDIO_SNIFF_A2DP_HISTORY_INVALID_FLUSH_PKT_SEQ 2819 //"[AS] Warning: a2dp history invalid flush pkt seq: rptr %d seq %d"
#define LOG_AUDIO_SNIFF_A2DP_HISTORY_FLUSH_MOER_THAN_PKT_FIFO_LEN 2820 //"[AS] a2dp history flush more than pkt_fifo_len: rptr %d wptr %d new_rptr %d"
#define LOG_AUDIO_SNIFF_A2DP_HISTORY_FLUSH_UNTIL_SEQ 2821 //"[AS] a2dp history flush: seq %d fw (rptr %d wptr %d) hw (rptr %d wptr %d bm_mask 0x%x) audio_clk 0x%x"
#define LOG_AUDIO_SNIFF_A2DP_HISTORY_WRITE_PKT_SNIFFING_BZDMA 2822 //"[AS] a2dp history write pkt sniffing bzdma: seq %d pl_len %d fw (rptr %d wptr %d) hw (rptr %d wptr %d bm_mask 0x%x status 0x%x) audio_clk 0x%x"
#define LOG_AUDIO_SNIFF_A2DP_HISTORY_WAITQ_ENQUEUE_PKT 2823 //"[AS] a2dp history waitq enqueue pkt: seq %d pl_len %d fw (rptr %d wptr %d eff_wptr %d) hw (rptr %d wptr %d bm_mask 0x%x)"
#define LOG_AUDIO_SNIFF_A2DP_COLLECTOR_ADD_OUTDATED_PACKET_WARN 2824 //"[AS] Warning: a2dp collector add outdated pkt: last_cont_seq %d seq %d"
#define LOG_AUDIO_SNIFF_A2DP_COLLECTOR_INVALID_ACK_LAST_CONT_SEQ 2825 //"[AS] Warning: a2dp collector invalid ack last_cont_seq: fw %d ack %d"
#define LOG_AUDIO_SNIFF_A2DP_COLLECTOR_SET_LOST_SEQ_WARN 2826 //"[AS] Warning: a2dp collector set lost seq: last_cont_seq %d seq %d"
#define LOG_AUDIO_SNIFF_A2DP_COLLECTOR_SET_LOST_SEQ_OF_RECEIVED_PKT 2827 //"[AS] Warning: a2dp collector set lost seq of received pkt: seq %d"
#define LOG_AUDIO_SNIFF_A2DP_COLLECTOR_FLUSH_PKT_FIFO_DUE_TO_OVERFLOW 2828 //"[AS] Warning: a2dp collector flush pkt fifo due to overflow: last_cont_seq %d seq %d pkt_fifo_len %d"
#define LOG_AUDIO_SNIFF_A2DP_COLLECTOR_SET_LOST_SEQ_INFO 2829 //"[AS] a2dp collector set lost pkt (am_addr %d pid %d): seq %d fw (last_cont_seq %d pkt_fifo_len %d) ack (last_cont_seq %d bitlen %d bitmap 0x%x)"
#define LOG_AUDIO_SNIFF_A2DP_COLLECTOR_ADD_PKT 2830 //"[AS] a2dp collector add pkt (am_addr %d pid %d): seq %d fw (last_cont_seq %d pkt_fifo_len %d) ack (last_cont_seq %d bitlen %d bitmap 0x%x) audio_clk 0x%x"
#define LOG_AUDIO_SNIFF_A2DP_HTPOLL_INFO 2831 //"[AS] a2dp htpoll: audio(idle_slot %d idle_skip %d) ctrl(offs %d inst %d rsvd_slot %d) intvl %d cur_inst %d"
#define LOG_AUDIO_SNIFF_CLONE_ACL_LINK 2832 //"[AS] clone link: create link (am_addr %d pid %d)"
#define LOG_AUDIO_SNIFF_A2DP_PARSER_FLUSH_PKT 2833 //"[AS] a2dp parser flush pkt: buf %p pl_len %d fr_len %d seq %d overflow %d"
#define LOG_AUDIO_SNIFF_A2DP_PARSER_RECV_START_PKT 2834 //"[AS] a2dp parser recv start pkt: buf %p pl_len %d fr_len %d seq %d status %d"
#define LOG_AUDIO_SNIFF_A2DP_PARSER_MERGE_CONT_PKT 2835 //"[AS] a2dp parser merge cont pkt: buf %p pl_len %d fr_len %d seq %d frag_buf %p frag_len %d status %d"
#define LOG_AUDIO_SNIFF_PRIMARY_HW_INFO 2836 //"[AS] audio sniff primary HW info: reg0x2d6=0x%04x reg0x2d4=0x%04x reg0x2a8=0x%04x reg0x2aa=0x%04x reg0x2ac=0x%04x reg0x2ae=0x%04x txcmd_reg=0x%08x pri_recv_ack(last_cont_seq %d bitlen %d bitmap 0x%x)"
#define LOG_AUDIO_SNIFF_SECONDARY_HW_INFO 2837 //"[AS] audio sniff secondary HW info: reg0x2d6=0x%04x reg0x2d4=0x%04x reg0x2a8=0x%04x reg0x2aa=0x%04x reg0x2ac=0x%04x reg0x2ae=0x%04x txcmd_reg=0x%08x sec_send_ack(last_cont_seq %d bitlen %d bitmap 0x%x)"
#define LOG_AUDIO_SNIFF_LINK_TX_INTR_INFO 2838 //"[AS] link TX ISR info: am_addr %d pid %d tx_pkt_type 0x%x cur_clk 0x%x"
#define LOG_AUDIO_SNIFF_LINK_RX_INTR_INFO 2839 //"[AS] link RX ISR info: am_addr %d pid %d rx_pkt_type 0x%x llid 0x%x len %d rx_status 0x%04x cur_clk 0x%x"
#define LOG_AUDIO_SNIFF_ACK_CHECK_STATUS_WARN 2840 //"[AS] Warning: sniffing ack check error status (%d): rptr %d last_cont_seq %d bitlen %d bitmap 0x%x"
#define LOG_AUDIO_SNIFF_FAILED_TO_ALLOCATE_HFP_RECOV_ESCO_ENTITY 2841 //"[AS] Warning: failed to allocate hfp recovery connection entity"
#define LOG_AUDIO_SNIFF_FAILED_TO_ARRANGE_HFP_RECOV_LINK 2842 //"[AS] Warning: failed to arrange hfp recovery link: esco_stant %d cur_inst %d tesco %d lmp_pkt_type 0x%x num_pkt_slot %d"
#define LOG_AUDIO_SNIFF_PRIMARY_RECV_HFP_PKT 2843 //"[AS] primary (am_addr %d pid %d) recv hfp pkt: esco_inst_clk 0x%x relay_htpoll (inst_clk 0x%x rsvd_slot %d)"
#define LOG_AUDIO_SNIFF_SECONDARY_RECV_HFP_PKT 2844 //"[AS] secondary (am_addr %d pid %d) recv hfp pkt: esco_inst_clk 0x%x"
#define LOG_AUDIO_SNIFF_SECONDARY_NOT_RECV_HFP_PKT 2845 //"[AS] secondary (am_addr %d pid %d) NOT recv hfp pkt: esco_inst_clk 0x%x relay_htpoll (inst_clk 0x%x rsvd_slot %d)"
#define LOG_AUDIO_SNIFF_A2DP_HISTORY_FLUSH_EXPIRED_PKT 2847 //"[AS] a2dp history flush expired pkt: seq %d rx_inst %d cur_inst %d flush_timeout %d"
#define LOG_AUDIO_SNIFF_A2DP_COLLECTOR_FLUSH_STALE_PKTS 2848 //"[AS] a2dp collector flush stale pkts: last_cont_seq %d seq %d pkt_fifo_len %d"
#define LOG_AUDIO_SNIFF_UNEXPECTED_RECOVERY_LINK_STAGE_WARN 2849 //"[AS] Warning: unexpected recovery link (am_addr %d pid %d) stage %d"
#define LOG_AUDIO_SNIFF_A2DP_RECOV_LINK_HTPOLL 2851 //"[AS] a2dp recovery htpoll: (am_addr %d pid %d) inst %d rsvd_slot %d"
#define LOG_AUDIO_SNIFF_PRIMARY_UPDATE_SNIFF_ACK 2852 //"[AS] primary update sniffing ack: old (last_cont_seq %d bitlen %d bitmap 0x%x) new (last_cont_seq %d bitlen %d bitmap 0x%x)"
#define LOG_AUDIO_SNIFF_AUDIO_CE_INDEX_MISMATCH 2854 //"[AS] Warning: audio (type %d) ce_index mismatch: %d %d"
#define LOG_AUDIO_SNIFF_FREE_STALE_PENDED_HFP_PKT_WARN 2855 //"[AS] Warning: secondary (am_addr %d pid %d) free stale pended hfp pkt: esco_inst_clk 0x%x"
#define LOG_AUDIO_SNIFF_A2DP_COLLECTOR_INVALID_FLUSH_PKT_SEQ 2856 //"[AS] Warning: a2dp collector invalid flush pkt seq: last_cont_seq %d new_last_cont_seq %d"
#define LOG_AUDIO_SNIFF_A2DP_COLLECTOR_FLUSH_EXPIRED_PKTS 2857 //"[AS] a2dp collector flush expired pkts: last_cont_seq %d num_flushed %d/%d last_rx_inst %d cur_inst %d flush_timeout %d"
#define LOG_AUDIO_SNIFF_RESET_RECOVERY_LINK 2858 //"[AS] reset recovery link (am_addr %d pid %d): type %d role %d"
#define LOG_AUDIO_SNIFF_CHANGE_RECOVERY_LINK 2859 //"[AS] change recovery link (am_addr %d pid %d): stage %d type %d->%d audio_ce_index %d->%d"
#define LOG_AUDIO_SNIFF_CHANGE_RECOVERY_LINK_A2DP 2860 //"[AS] A2DP param change: media_l2cap_cid %d->%d flush_timeout %d->%d a2dp_intvl %d->%d a2dp_ctrl_rsvd_slot %d->%d"
#define LOG_AUDIO_SNIFF_RECOV_CE_INDEX_MISMATCH 2861 //"[AS] Warning: recov ce_index mismatch: %d %d"
#define LOG_AUDIO_SNIFF_SECONDARY_RECV_HFP_PKT_SCHED_RECOV_HTPOLL 2862 //"[AS] secondary (am_addr %d pid %d) recv hfp pkt: esco_inst_clk 0x%x relay_htpoll (inst_clk 0x%x rsvd_slot %d)"
#define LOG_AUDIO_SNIFF_ENTER_HTPOLL_TRANSITION 2863 //"[AS] enter a2dp htpoll transition: ctrl_ce_index %d ctrl_link_inst %d intvl %d rsvd_slot %d cur_inst %d"
#define LOG_AUDIO_SNIFF_EXIT_HTPOLL_TRANSITION 2864 //"[AS] exit a2dp htpoll transition: ctrl_ce_index %d"
#define LOG_AUDIO_SNIFF_A2DP_HISTORY_ADD_FAR_AWAY_PKT 2865 //"[AS] a2dp history add far away pkt: seq %d fw (rptr %d wptr %d) hw (rptr %d wptr %d bm_mask 0x%x)"
#define LOG_AUDIO_SNIFF_CLOCK_DIFF_INFO 2866 //"[AS] clock diff: audio(slot %d us %d) ctrl(slot %d us %d) abs_diff(slot %d us %d)"
#define LOG_AUDIO_SNIFF_A2DP_HISTORY_RESET_SEQ 2867 //"[AS] a2dp history reset seq: old fw(rptr %d wptr %d eff_wptr %d) hw(rptr %d wptr %d bm_mask 0x%x) new seq %d"
#define LOG_AUDIO_SNIFF_A2DP_HISTORY_MOVE_WPTR_TO_RPTR 2868 //"[AS] a2dp history move wptr to rptr: wptr %d eff_wptr %d rptr %d"
#define LOG_AUDIO_SNIFF_IGNORE_AUDIO_END 2869 //"[AS] ignore audio end: audio_end_inst %d eff_cur_inst %d real_cur_inst %d"
#define LOG_AUDIO_SNIFF_UPDATE_CTRL_SLOT_OFFS1 2870 //"[AS] update ctrl slot offs for clock wraparound(cur_inst %d last_inst %d): ctrl_slot_offs(old %d new %d)"
#define LOG_AUDIO_SNIFF_UPDATE_CTRL_SLOT_OFFS2 2871 //"[AS] update ctrl slot offs for clock wraparound(cur_inst %d ref_inst_msb %d): ctrl_slot_offs(old %d new %d)"
#define LOG_AUDIO_SNIFF_ROLLBACK_INVALID_STATE_WARN 2872 //"[AS] Warning: rollback invalid state: role %d stage %d status %d"
#define LOG_AUDIO_SNIFF_SETUP_GAMING_MODE 2873 //"[AS] setup gaming mode: audio(am_addr %d pid %d) dup_num %d"
#define LOG_AUDIO_SNIFF_UNSET_GAMING_MODE 2874 //"[AS] unset gaming mode: audio(am_addr %d pid %d)"
#define TRIGGER_WAKE_UP_FROM_DSM  2875  //"[LL][ADV_EXT] check task timeout, trigger wake up from dsm."
#define DISCONNECT_WHEN_ROLE_SWITCHING  2876    //"Disconnect when role switching, ce_index:%d, ce_status:%d"
#define MSG_BTMAC_WR_REG_WRAP_AROUND      2877 //"Write Register Wrap Around !!"
#define LOG_UNSUPPORTED_ESCO_RETX_PARAM 2878 //"[esco_conn] Warining! unsupported esco parameters ->ce_index:%d, esco_ce_index:%d, esco_status:%d, retx_effort:%d, wesco:%d"
#define LOG_START_INQUIRY_SCAN 2879 //"[INQSCAN] START INQ SCAN curr_slot:%d, scan_period:%d, scan_window:%d"
#define LOG_START_PAGE_SCAN 2880 //"[PAGESCAN] START PAGE SCAN curr_slot:%d, scan_period:%d, scan_window:%d"
#define LOG_MULI_MASTER_SNIFF_SCHE_BEFORE_ANCHOR 2881    //"[SNIFF MASTER] schedule before anchor point, ce_index: 0x%x"
#define LOG_MULI_MASTER_SNIFF_PAUSE_SCHE         2882    //"[SNIFF MASTER] pause schedule in sniff attempt end, ce_index: 0x%x, state: 0x%x, lower_lut: 0x%x"
#define LE_MSG_KILL_SAME_BDADDR_NEW_LINK    2883   //"Warning: Exist same bdaddr's link. kill new link ent%d !!"
#define LE_MSG_CHK_NEW_LINK_BDADDR       2884    //"Check New Link's BD_ADDR: ent%d type%d 0x%02X%02X%02X%02X%02X%02X"
#define LE_MSG_CHK_CUR_LINK_BDADDR       2885    //"Check Cur Link's BD_ADDR: ent%d type%d 0x%02X%02X%02X%02X%02X%02X"
#define LE_MSG_CHK_LINK_BDADDR_RESULT    2886    //"Check BD_ADDR's Result: new conn entry%d exist same bdaddr%d"
#define LE_MSG_SLV_CONN_INTR_EN_ADV    2887      //" LE Slv early kill link's Disconn Intr and enable adv again. Origin bmActiveHandle0x%04x"
#define LE_MSG_KILL_NEW_LINK_AS_INVALID_HOP_INC    2888    //"Warning: Invalid Hop Incremental:%d. kill new link ent%d !!"
#define LOG_CANCEL_TX_ON_SUSPENDED_LINK 2889 //"[TX] cancel TX pkt on suspended link: pid %d schd(am_addr %d) rx_param(am_addr %d)"
#define LOG_AUDIO_SNIFF_GET_RTK_HFP_RELAY_PKT 2890 //"[AS] secondary get rtk esco relay pkt rx_clk=0x%x"
#define LOG_AUDIO_SNIFF_PRIMARY_NOT_A2DP_CTRL_START 2891 //"[AS][PrimSyncInfo]Warning: a2dp_ctrl_start is not set in primary_rx_intr_observer"
#define LOG_AUDIO_SNIFF_PRIMARY_SYNC_NOT_COMPLETE 2892 //"[AS][PrimSyncInfo]Primary/Secodary sync is not complete in last control link htpoll"
#define LOG_AUDIO_SNIFF_PRIMARY_CHECK_SYNC_INFO 2893 //"[AS][PrimSyncInfo]Check_sync_needed: never_synced:%d,has_flushed:%d,has_added:%d,seq_diff:%d,recov_needed:%d,htpoll_changed:%d,policy_credit:%d"
#define LOG_AUDIO_SNIFF_PERIODIC_HTPOLL_IDLE_ZONE_CONFLICT 2894 //"[AS] periodic htpoll (inst %d slot %d intvl %d) conflict with idle zone (inst %d slot %d): new periodic htpoll inst %d"
#define LOG_AUDIO_SNIFF_INVALID_STATE_WARN 2895 //"[AS] Warning: invalid state(in_adjusting_htpoll %d in_changing_param %d)"
#define LOG_AUDIO_SNIFF_SCHED_HTPOLL_ADJUST_PROC 2896 //"[AS] adjust htpoll: prepare req: old(ctrl_link_offs %d ref_inst_msb %d) new(ctrl_link_offs %d ref_inst_msb %d)"
#define LOG_AUDIO_SNIFF_ADJUST_HTPOLL 2897 //"[AS] adjust htpoll: ctrl(offs %d->%d)"
#define LOG_AUDIO_SNIFF_INSERT_HTPOLL_IDLE_ZONE_FAIL 2898 //"[AS] Warning: failed to insert htpoll_idle_zone(inst %d->%d win %d clk_ref_type %d)"
#define LOG_AUDIO_SNIFF_IDLE_ZONE_REG_PAGE_SCAN_WINDOW 2899 //"[AS][PAGESCAN] Create idle zone for next page scan window : curr_slot:%d, scan_period:%d, scan_window:%d, idle_zone_range:%d-%d"
#define LOG_AUDIO_SNIFF_AVOID_IDLE_ZONE 2900 //"[AS][IDLEZONE] Avoid Idle zone in audio link : win_inst:%d, win_slot:%d, ori_audio_inst:%d, ori_audio_slot:%d, new_audio_inst:%d, new_audio_slot:%d"
#define LOG_AUDIO_SNIFF_IDLE_ZONE_REG_OTHER_PROTOCOL 2901 //"[AS][IDLEZONE] register idle zone for other protocols : cur_inst:%d, ctrl_last_inst:%d, inst4new_idle_sched:%d, audio_idle_inst_def:%d, audio_idle_inst:%d, idle skip:%d, audio_idx:%d audio_idx_direc:%d found %d dev_status %d"
#define LOG_AUDIO_SNIFF_IDLE_ZONE_REG_INQ_SCAN_WINDOW 2902 //"[AS][INQSCAN] Create idle zone for next INQ scan window : curr_slot:%d, scan_period:%d, scan_window:%d, idle_zone_range:%d-%d"
#define LOG_AUDIO_SNIFF_CHECK_END_OF_HTPOLL_PERIOD 2903 //"[AS][AUDIOEND] audio htpoll end: audio_end_inst_intr:%d, ctrl_next_inst:%d, audio_next_schedule_inst:%d, audio_period_end:%d"
#define LOG_AUDIO_SNIFF_SECONDARY_RX_NO_PKT_IN_INTERVAL 2904 //"[AS] Secondary receive no packet in a2dp interval: rx_indication:%d, trigger_count:%d, set_correlation:%d, rx_rssi:%d"
#define LOG_AUDIO_SNIFF_SECONDARY_RX_PKT_RESUME_CORR 2905 //"[AS] Secondary receive packet and resume correlation: rx_indication:%d, set_correlation:%d, rx_rssi:%d"

#define MSG_CP3_COUNTER_MEASURE 2950 //"INS COUNTER: id %d cycle %d I_cache_miss %d I_cache_miss_cycle %d I_fetch_cycle %d"
#define MSG_SP_CHECK 2951 //"Warning !! stack overflow : limit %08x -> cur %08x ..."
#define LE_IGNORE_HW_WDCNT 2952 //"ignore first event_end hw wdcnt, fw calculate correct wdcnt, wr_ptr = 0x%x, rd_ptr = 0x%x, correct wordcnt = %d"
#define FLUSH_RX_FIFO_DONE   2953 //"Flush rx fifo done vendor(0x33c) = 0x%x"
#define FLUSH_RX_FIFO_START  2954 //"LE flush rx fifo start, LR=0x%x"
#define FLUSH_RX_FIFO_SEND_FAIL   2955 //"Flush rx fifo send fail, LR=0x%x"
#define FLUSH_RX_FIFO_RESEND_FAIL   2956 //"Flush rx fifo send step 2 fail func = 0x%x"
#define RX_OFF_POLLING_TO 2957 //"Set RF OFF polling timeout"
#define DIFF_EXT_ADV_LOG_01       2958    //"hci_vendor_set_ext_adv_handle_priority, handle[%d] = %d"
#define DIFF_EXT_ADV_LOG_02       2959    //"ll_ext_adv_manager.enable = %d, cur_adv_handle = 0x%x, ae_handle[0]_priority = %d, ae_handle[1]_priority = %d, ae_handle[2]_priority = %d, ae_handle[3]_priority = %d"
#define DIFF_EXT_ADV_LOG_03       2960    //"ae_handle[0]_priority_min = %d, ae_handle[1]_priority_min = %d, ae_handle[2]_priority_min = %d, ae_handle[3]_priority_min = %d, pre_ae_handle = %d"
#define LOWER_LOG_283       2961    //"Link tx pow in user mode, not update. entry: 0x%x, phy:%d"
#define HCI_EXIT_UNSNIFF_VALIDATE_STATUS    2962    //"hci_exit_sniff, ce_index:%d, ce_status:%d, hw_instruction_status:%d, hw_instruction_status.sniff:%d"
#define FLUSH_RX_FIFO_WHEN_FULL       2963    //"[WORKAROUND] RX FIFO FULL! Flush RX FIFO when no link, rxfifo_bytes=%d, rxfifo_status=0x%x"
#define LOG_FUNCTION_NOT_IMPLEMENTED 2996 //"Function is not implemented: LR 0x%p"
#define MSG_HW_TIMER_CHECK 2997 //"hw timer: %d sec, bb native clock %08x --> %08x"
#define MSG_FW_MAIN_SHOWTIME 2998 //"firmware-4.0 version = %04x %04x cpu clock = %d my_bt_addr = 0x%02x%02x%02x%02x%02x%02x"
#define MSG_FW_MAIN_SHOWTIME2 2999 //"firmware-4.0 version = %04x %04x boot time %s %s cpu clock = %d my_bt_addr = 0x%02x%02x%02x%02x%02x%02x"

//==================Austin Debug Use (3000 ~ 4000) ===========================
#define BZDMA_MSG_INIT 3000 //"BZDMA is init (%d)!!"
#define BZDMA_MSG_CIS_TX_LAG_DROP 3001 //"Warnning!! drop BZDMA cis tx lag pkt: cis %d, fw_wptr %d, hw_rptr %d"
#define BZDMA_MSG_BIS_TX_LAG_DROP 3002 //"Warnning!! drop BZDMA bis tx lag pkt: bis %d, fw_wptr %d, hw_rptr %d"
#define BZDMA_MSG_GET_FREE_TX_ENTRY 3012 //"Get Free TxCmd Entry %d"
#define BZDMA_MSG_FREE_TX_ENTRY 3013 //"Free TxCmd Entry %d"
#define BZDMA_MSG_GET_FREE_RX_ENTRY 3014 //"Get Free RxCmd Entry %d"
#define BZDMA_MSG_FREE_RX_ENTRY 3015 //"Free RxCmd Entry %d"
#define BZDMA_MSG_INT_SRC 3016 //"BZDMA Interrupt (trx=%d eid=%d)"
#define BZDMA_MSG_TXCMD_GENERATE_CASE 3017 //"BZDMA Txcmd Case: tu %d eid %d cid %d src %08x len %d segs %d"
#define BZDMA_MSG_RXCMD_GENERATE_CASE 3018 //"BZDMA Rxcmd Case: tu %d eid %d cid %d dest %08x len %d"
#define BZDMA_MSG_IO_TEST_ACL_TX_FIFO 3019 //"ACL TXFIFO Error (idx=%d o:%08x x:%08x)"
#define BZDMA_MSG_IO_TEST_ACL_RX_FIFO 3020 //"ACL RXFIFO Error (idx=%d o:%08x x:%08x)"
#define BZDMA_MSG_RXCMD_CHECK 3021 //"BZDMA RX CMD eid=%d reg=%08x"
#define BZDMA_MSG_REG_PCM_CMP_ERROR 3022 //"PCM CMP RPT: type=%d src=%04x cen=%04x dest=%04x src=%04x cen=%04x dest=%04x"
#define BZDMA_MSG_CODEC_RX_CMP_WRONG 3023 //"CODEC Rx DMA is Wrong (len=%d addr=%08x offset=%d data=(ch:%d in:%04x o:%04x x:%04x))"
#define BZDMA_MSG_CODEC_TX_CMP_WRONG 3024 //"Tx DMA is Wrong (len=%d start=%08x i=%d ch=%d data=(o:%04x x:%04x s0=%04x s1=%04x) w0=%04x w1=%04x)"
#define BZDMA_MSG_CODEC_RX_FIFO_TEST 3025 //"Test SCO Rx FIFO (in0=%04x in1=%04x out0=%04x out1=%04x)"
#define BZDMA_MSG_SCO_RX_FIFO_PTR_CHK 3026 //"SCO RX FIFO Error (tu %d eid %d cid %d len %d Exp:%d HW:%d)"
#define BZDMA_MSG_RX_LB_CMP_WRONG   3027 //"New Rx DMA is Wrong (len=%d src=%08x offset=%d dest=%08x data=(o:%04x x:%04x))"
#define BZDMA_MSG_LE_GEN_TXCMD      3028 //"Gen LE TXCMD (eid=%d pdu=%d cur_seg=%d addr=%08x len=%d desc=%08x)"
#define BZDMA_MSG_LE_GEN_RXCMD      3029 //"Gen LE RXCMD (desc=%08x cur_seg=%d len=%d addr=%08x)"
#define BZDMA_MSG_LE_TRI_TXCMD      3030 //"TRI LE TXCMD (eid=%d word=%08x)"
#define LE_MSG_TX_DESC_CONTENT      3031 //"Txcmd Id %d : Txcmd status 0x%08x TxDesc[0] = 0x%08x 0x%08x"
#define LE_MSG_TX_CMD_REENTRY       3032 //"Error!! Txcmd is Reentry (id %d content 0x%08x) "
#define MT8852B_MSG_TEST_CTRL       3033 //"*TestCtrl: scenario %d hop_m %d tx_freq %d rx_freq %d pwr_ctrl %d pp %d  pkt_type %d pkt_type_desc %d len %d"
#define MT8852B_MSG_RX_LB_TEST      3034 //"*RxInt@LB_test(%d): pkt_hdr %04xh pal_hdr %04xh data:%02x %02x %02x %02x"
#define MT8852B_MSG_TX_LB_TEST      3035 //"*TxInt@LB_test(%d):tx_status (%04xh) lut(lo:%04xh hi:%04xh) data:%02x %02x %02x %02x"
#define MT8852B_MSG_TX_TX_TEST      3036 //"**TxInt@TX_test(%d):tx_status(%04xh) lut(lo:%04xh hi:%04xh) data:%02x %02x %02x %02x"
#define MT8852B_MSG_TX_LAG_LB_TEST  3037 //"*TxInt LAG@LB_test(%d):tx_status (%04xh) lut(lo:%04xh hi:%04xh)"
#define MT8852B_MSG_TX_LAG_TX_TEST  3038 //"**TxInt LAG@TX_test(%d):tx_status(%04xh) lut(lo:%04xh hi:%04xh)"
#define MSG_SHOW_MY_BD_ADDR         3039 //"BD addr(%02x %02x %02x %02x %02x %02x)"
#define MSG_BZDMA_RXCMD_TIMEOUT     3040 //"BZDMA_RXCMD_TIMEOUT !!"
#define MSG_BZDMA_REG_MSG           3041 //"Read BZDMA REGs (RxCmd1=%08x RxCmd=%08x RxStatus=%08x ACL RxFIFO=%08x SCO RxFIFO=%08x)"
#define MSG_ALLOC_OS_BUFFER_FAIL  3042  //"[OS Buffer]allocation failed, pool id=%d free pool=%d, top=%d"
#define MSG_SUPTER_TO               3043  //"[clk:0x%08X] Sup_To - timer(cur %d to %d) pid %d addr %d ce %d sta %d lut(id %d low %04x up %04x) pinfo %04x sched(sta %d type %d src %d)"
#define LMP_MSG_RES_TIMER_INFO      3044 //"*PDU resp timer(ce:%d send:%08x run:%d)....time_info(handle %d cnt %d cal %d cur %d)"
#define LC_MSG_CHECK_SCAN           3045 //"LC check scan status (page scan=%d inq scan=%d dbg_bm=0x%08x)"
#define LC_MSG_RF_MODEM_MONITER 3046 //"RxInt: miss %d crc_err %d hec_err %d bak0 0x%04x bak1 0x%04x bak2 0x%04x bak3 0x%04x bak4 0x%04x"
#define LMP_UTILS_UPDATE_PKT_WHEN_MAX_SLOT 3047 //"Updated pkts when queued max-slot.%x.%x.%x"
#define LC_UTILS_MSS_START_TPOLL 3048 //"MSS_Start tpoll: lt_addr %d tpoll %d piconet %d"
#define LC_UTILS_MSS_STOP_TPOLL 3049 //"MSS_Stop tpoll: lt_addr %d piconet %d"
#define MSG_LC_CREATE_HLC 3050 //"LC HLC Create: M(cnt=%d id=%d links=%d) bmS=%02x pid=%d lta=%d devA=0x%02x%02x%02x%02x%02x%02x"
#define LC_TASK_0380_2 3051 //"The %d th piconet selected for paging."
#define LC_TASK_0380_3 3052 //"MSS.P%d selected."
#define LC_TASK_0380_4 3053 //"Rx.FHS.Allocating S%d."
#define BT_FW_ACL_Q_0380_1 3054 //"ERROR acl tx segment overflow: seg[max=%d now=%d],len[all=%d w=%d buf=%d],pkt %08x"
#define BZ_FW_ISOCH_0380_1 3055 //"add sco queues: sco id(%d) host 8bit(%d) air 8bit(%d) no bypass (%d) ISO CONNS (%d) con_handle (%d) sync (%d)"
#define BZ_VENDOR_TIMER_MEASURE 3056 //"Measure Vendor Timer (id %d diff %d ticks)"
#define BZ_MSG_READ_REGISTER 3057 //"*Read BZ Reg 0x%04x = 0x%04x"
#define TIMER_MSG_MON_POOR 3058 //"pool %d, total buffers: %d, max used:%d"
#define BT_DRIVER_TX_DMA_WRITE  3060 //"No free tx entry when dma write TX FIFO (ori=%d)"
#define LMP_MSG_POWER_CTRL 3061 //"ce_index: %d, rssi_dbm: %d, max_rssi:%d, min_rssi:%d: pdu send:%d, power resp:%d, count:%d"
#define BB_MSG_KILL_PERIODIC_INQUIRY 3062 //"kill periodic inquiry"
#define LMP_MSG_SET_AFH_PDU 3063 //"send set afh pdu"
#define LMP_MSG_PREFER_PACKET_TYPE 3064 //"== ptt_sta:%d prefer packet type:0x%x data rate: 0x%x allow_status: 0x%x max slot(accept %d sent %d)=="
#define LMP_MSG_RX_DEC_POWER 3065 //"receive decr power"
#define LMP_MSG_RX_INC_POWER 3066 //"receive incr power"
#define LMP_MSG_TX_DEC_POWER 3067 //"send decr power"
#define LMP_MSG_TX_INC_POWER 3068 //"send incr power"
#define ACK_RECEIVED_FOR_ALL_THE_FRAGS_AND_FREE_Q  3069 //"ACK received for all the fragments (freeing q =%d)"
#define LC_UTILS_0380_1  3070 //"lc_allocate_piconet_id_for_paging: M(cnt=%d id=%d) S(cnt=%d bm=%02x) Pnet=%d"
#define LMP_QOS_REQ_ERR_MSG  3071 //"*Check QOS_REQ: Poll=%d Nbc=%d SuperTo=%d reason=%d role=%d"
#define LMP_HANDLE_POWER_CTRL_REQ_MSG 3072 //"[EPC]LMP_power_control_req => support %d action %d act_res %02xh"
#define LMP_HANDLE_BT3_0_PDU_MSG 3073 //"3.0 PDU Handler PDU opcode: %d %d"
#define LMP_REM_DEV_NO_SUPPORT_EPC 3074 //"remote device not support EPF"
#define LMP_MSG_SEND_PWR_CTRL_REQ 3075 //"send power control, step:%d"
#define LMP_MSG_EPC_REACH_MAX_POWER 3076 //"reach max power"
#define LMP_MSG_EPC_REACH_MIN_POWER 3077 //"reach min power"
#define MSS_MSG_PICOINFO 3078//"MSS: PicoInfoReg 1:0x%04x 2:0x%04x 3:0x%04x 4:0x%04x"
#define ITO_MSG_UNPARK_REQ 3079 //"ITO: Unpark Req Int!!"
#define LMP_TASKS_0380_1 3080 //"MSS_Updated: M(cnt=%d id=%d nun_conns=%d) bmS=%02x"
#define LMP_UTILS_0380_1 3081 //"Warning : slave cnt %d + master cnt %d > MAX_PICONET_CNT"
#define LMP_TASKS_MSG_ACCEPT_EXT 3082 //"Rx LMP Accept Ext: %d %d"
#define LMP_TASKS_UNKNOWN_PDU 3083 //"Unknown LMP PDU (ce_index %d am_addr %d pid %d): Dropping opcode %d"
#define LMP_TASKS_MSG_NOT_ACCEPT_EXT  3084 //"Rx LMP Not Accept Ext: %d %d"
#define LC_MSG_FHS_LEN_MISMATCH 3085 //"** LC_RX_FHS: length mistach (len=%d)!!"
#define LC_MSG_FHS_CONTENT_MISMATCH 3086 //"** LC_RX_FHS: Inquiry Content mistach !!"
#define LC_MSG_FHS_PARITY_MISMATCH 3087 //"** LC_RX_FHS: Inquiry parity bit mistach !!"
#define LC_MSG_FHS_PARITY_ERROR 3088 //"** Inquiry parity bit mistach: Lap=0x%08x (0)%02x %02x %02x %02x %02x (X)%02x %02x %02x %02x %02x"
#define LC_MSG_FHS_PARITY_CHECK 3089 //"** Inquiry Parity Bit Check: LAP=0x%08x (%02x %02x %02x %02x %02x)"
#define MAIN_MSG_KEEP_ALIVE 3090 //"Keep Alive (%d) - pool cnt:(%d %d %d %d : %d %d %d %d : %d %d %d %d %d)"
#define LMP_MSG_SENT_NON_EXT_PDU 3091 //"[clk:0x%08X] --> send lmp opc:%d (addr:%d pid:%d tid:%d ce:%d m:%d) - %02x %02x %02x %02x %02x %02x %02x %02x"
#define LMP_MSG_SENT_EXT_PDU 3092 //"[clk:0x%08X] --> send lmp ext.opc:%d/%d (addr:%d pid:%d tid:%d ce:%d m:%d) - %02x %02x %02x %02x %02x %02x %02x %02x"
#define LMP_MSG_RX_NON_EXT_PDU 3093 //"[clk:0x%08X] <-- receive lmp opc:%d (addr:%d pid:%d tid:%d ce:%d m:%d) - %02x %02x %02x %02x %02x %02x %02x %02x"
#define LMP_MSG_RX_EXT_PDU 3094 //"[clk:0x%08X] <-- receive lmp ext.opc:%d/%d (addr:%d pid:%d tid:%d ce:%d m:%d) - %02x %02x %02x %02x %02x %02x %02x %02x"
#define LMP_MSG_PDU_ACK  3095  //"[clk:0x%08X] <-- ack lmp opc %d/%d addr:%d pid:%d tid:%d"
#define ITO_MSG_RETX_TIMEOUT_PACKET_INFO 3096 //"[clk:0x%08X] Unicast ReTx PktInfo (src:%d, ppkt:%08x, payload:0x%08x 0x%08x, time:%08x)"
#define PICONET_ID_CHECK_MSG_NEW 3097 //"Err!! at least one piconet id (old:%d new:%d) is invalid !!"
#define HCI_MSG_SETUP_SYNC_LINK 3098 //"hci_handle_setup_sync_conn_command (handle:%d)"
#define ITO_MSG_INQUIRY_TIMEOUT 3099 //"[clk:0x%08X] Inquiry Timeout(the duration for inquiry:%d slots)"
#define ITO_MSG_PAGE_TIMEOUT 3100 //"[clk:0x%08X] Paging Timeout(the duration for paging:%d slots lt_addr %d pid %d)"
#define ITO_MSG_RETX_TIMEOUT 3101 //"[clk:0x%08X] Unicast ReTx Abort (N:%d pid:%d addr:%d lut:%d up:0x%04x low:0x%04x) - rxcnt:%d fc:%d txtime:%08X-%d"
#define ITO_MSG_NBC_TIMEOUT 3102 //"[clk:0x%08X] Broadcast ReTx Abort (Nbc = %d) -  rxcnt:%d fc:%d txtime:%08X-%d"
#define ITO_MSG_PAGE_RESPONSE_TIMEOUT 3103 //"[clk:0x%08X] Page Resp Timeout (no response for 8 slots), pid=%d "
#define LC_MSG_INQUIRY_SCAN_INFO 3104 //"IS:enabled. inquiry scan interval/window reg:%04x/%04x"
#define LC_MSG_PAGE_SCAN_INFO 3105 //"PS:enabled. pid:%d page scan interval/window reg:%04x/%04x"
#define SCO_DBG_CVSD_LINK 3106 //"SCO Tx Intr: 0xee:%04x 0xe0:%04x 0x9e:%04x sco_fifo(tx:%08x rx:%08x) alt:%d"
#define SCO_MSG_CODEC_SETTING 3107 //"SCO Codec Settings: ce:%d sco:%d pcm:%d 0xDE=%04x 0x9E=%04x"
#define ESCO_MSG_CODEC_SETTING 3108 //"eSCO Codec Settings: esco_ce_idx:%d pcm:%d 0xDE=%04x 0x9E=%04x"
#define PARK_MSG_PG_BEACON 3109 //"Program Beacon: lcl(addr %04x val %04x) ce:%d pid:%d rem_role:%d Dbeacon:%d"
#define RF_MSG_INIT_ERR 3110 //"RF Init Error !!"
#define RF_MSG_WRITE_REG_ERR 3111 //"Write RF Register Error (reg=%x value=%x) !!"
#define RF_MSG_READ_REG_ERR 3112 //"Read RF Register Error (reg=%x) !!"
#define LC_MSG_START_PAGING 3113  //"lc_start_paging -- rem dev: 0x%04x%04x%04x"
#define LC_MSG_BACKOFF_TIMER_INF 3114 //"callback: lc_inquiry_scan_timeout (%d)"
#define LMP_SYNC_LINKS_MSG 3115 //"acl index %d, esco index %d, txbw %d, rxbw %d, latency %d, retx %d status %d"
#define ESCO_NOT_ENOUGH_DATA_IN_THE_QUEUE 3116 //"Not enough Data in the Queue Padding (pkt_len %d frag_data_ptr %d len %d)"
#define ESCO_NOT_DATA_IN_THE_QUEUE 3117 //"no data in esco data queue (read idx %d cnts %d)"
#define HCI_DMA_ISO_OUT_CONN_HANDLE_CHANGE 3118 //"** SCO Out Conn Handle Changed (%02x -> %02x)"
#define HCI_MSG_LINK_LEY_NOTI_EVENT_MAC_ADDR 3119 //"Link_Key Noti:idx:%d BD_ADDR:0x%02x%02x%02x%02x%02x%02x type:%d"
#define HCI_MSG_LINK_LEY_NOTI_EVENT_KEY_CONTENT 3120 //"Link_Key Data:%02x %02x %02x %02x %02x %02x %02x %02x %02x %02x %02x %02x %02x %02x %02x %02x"
#define HCI_MSG_LINK_LEY_REQ_REPLY_KET_ENTRY 3121 //"Link_Key Req Reply:idx:%d type:%d substate:%d pend_pdu_ptr:%08x data:%02x %02x %02x %02x %02x %02x %02x %02x %02x %02x %02x %02x %02x %02x %02x %02x"
#define HCI_MSG_LINK_LEY_REQ_REPLY_KET_CONTENT 3122 //"Link_Key Req Reply Data:%02x %02x %02x %02x %02x %02x %02x %02x %02x %02x %02x %02x %02x %02x %02x %02x"
#define LC_SYNC_LINKS_ESCO_REG_MSG 3123 //"ESCO Regs(conn:%04x t_esco:%04x rx_type:%04x win_dsco:%04x)"
#define PICONET_ID_CHECK_MSG 3124 //"Err!! piconet id (%d) is invalid !!"
#define ESCO_MSG_TXPKT_LEN_NOT_ENOUGH 3125 //"ESCO Tx Pkt Len is Not Enough (expect:%d actual:%d seg_cnt:%d)"
#define ESCO_MSG_TXPKT_QUEUE_FULL 3126 //"eSCO Tx Pkt Queue is Full (wptr %d rptr %d waitcnt %d pend_len %d PKtPtr %08x)"
#define ESCO_MSG_QUEUE_HCI_PKT 3127 //"eSCO Queue HCI Pkt: wait %d pend %d wptr %d rptr %d ppkt 0x%08x"
#define MSG_ALLOC_POOL_ACL_DATA_H2C 3128 //"[POOL] id %02d pkt_num %02d pkt_size %04d (acl_data_pool_id)"
#define MSG_ALLOC_POOL_LMP_BUFF 3129 //"[POOL] id %02d pkt_num %02d pkt_size %04d (lmp_pdu_buffer_pool_handle)"
#define MSG_ALLOC_POOL_HCI_CMD 3130 //"[POOL] id %02d pkt_num %02d pkt_size %04d (hci_cmd_buffer_pool_handle)"
#define MSG_ALLOC_POOL_ACL_DATA_C2H 3131 //"[POOL] id %02d pkt_num %02d pkt_size %04d (acl_data_to_host_pool_id)"
#define MSG_ALLOC_POOL_EVENT_BUFF 3132 //"[POOL] id %02d pkt_num %02d pkt_size %04d (hci_event_buffer_pool_handle)"
#define MSG_ALLOC_POOL_FHS_BUFF 3133 //"[POOL] id %02d pkt_num %02d pkt_size %04d (lmp_fhs_pkt_buffer_pool_handle)"
#define MSG_ALLOC_POOL_DMA_TX_DESC 3134 //"[POOL] id %02d pkt_num %02d pkt_size %04d (dma_tx_pool_id)"
#define MSG_ALLOC_POOL_DMA_RX_DESC 3135 //"[POOL] id %02d pkt_num %02d pkt_size %04d (dma_rx_pool_id)"
#define MSG_ALLOC_POOL_LE_ACL_H2C 3136 //"[POOL] id %02d pkt_num %02d pkt_size %04d (le_acl_data_to_ll_pool_id)"
#define MSG_ALLOC_POOL_LE_LLC_PDU 3137 //"[POOL] id %02d pkt_num %02d pkt_size %04d (le_llc_pdu_pool_id)"
#define MSG_ALLOC_POOL_LE_ACL_C2H 3138 //"[POOL] id %02d pkt_num %02d pkt_size %04d (le_acl_data_to_host_pool_id)"
#define MSG_ALLOC_POOL_SCO_DATA_H2C 3139 //"[POOL] id %02d pkt_num %02d pkt_size %04d (synchronous_data_pool_id)"
#define MSG_ALLOC_POOL_SCO_DATA_C2H 3140 //"[POOL] id %02d pkt_num %02d pkt_size %04d (synchronous_data_to_host_pool_id)"
#define MSG_ALLOC_POOL_SCO_TX_ENTRY 3141 //"[POOL] id %02d pkt_num %02d pkt_size %04d (synchronous_data_to_remote_id)"
#define ESCO_MSG_LOAD_FIFO 3142 //"eSCO Load FIFO: pend (%d->%d) rptr (%d->%d) frag (%d->%d) seg_num %d sent %d"
#define ESCO_MSG_SCHEDUAL_NEW 3143 //"eSCO Schedual New: pend_len %d next_inst 0x%08x cur_clk 0x%08x"
#define MSG_BB_HLC_ISR 3144 //"[HLC ISR] self_dev_state(%d->%d) pid (old %d new %d) addr %d role %d lut_init(l:%04x h:%04x)"
#define MSG_REM_BZ_FW_ISOCH  3145  //"remove_sco_queues, ISO CONNS = %d (idx %d conn_handle=%d)"
#define MSG_PAGING_REM_DEV  3146 //"[clk:0x%08x]lc_start_paging: bd_addr:0x%04x%04x%04x lt_addr:%d pid:%d"
#define MSG_LC_KILL_HLC 3147 //"LC HLC Kill: M(cnt=%d id=%d links=%d) bmS=%02x pid=%d lta=%d devA=0x%02x%02x%02x%02x%02x%02x"
#define MSG_SCO_ENTRY_DBG 3148 //"[SCO] sco_tx_entry_free = %08x"
#define MSG_SCO_ENTRY_UPS_DBG 3149 //"[SCO UPS] handle %d sco_tx_entry_free = cur %08x new %08x (pkt cnt %d)"
#define MSG_SCO_ENTRY_FREE_DBG 3150 //"[SCO FREE] handle %d sco_tx_entry_free new %08x (pkt cnt %d)"
#define MT8852B_MSG_RX_TX_TEST 3151 //"*RxInt@Tx_test(%d): pkt_hdr %04xh pal_hdr %04xh lut-l %04xh clk 0x%06x"
#define MSG_ACL_FLUSH_EVENT 3152 //"[FlushTo] idx %d timeout %08x clk (pkt %08x cur %08x)"
#define MSG_ACL_HOST_DATA_PKT_ERR 3153 //"ACL Host Data PKT Err (reason=%02x, conn_handle=0x%x, packet_boundry_flag=%d, pkt_len=%d)"
#define MSG_EIR_LEN_MISMATCH 3154  //"EIR Pkt Mismatch !! (pkt_hdr %04x pl_hdr %04x acl_rxfifo %08x)"
#define MSG_DBG_FLUSH_TIMEOUT 3155  //"Flush_TO_Check: clk_start %08x clk_cur %08x diff %d to %d status %d"
#define MSG_ACLQ_STATE 3156 //"(acl_q state: %08x)"
#define MSG_SW_SCHEDULER_STATE 3157 //"(sw_sched state: %08x)"
#define MSG_ACK_ACLQ_STATE 3158 //"(ack_acl_q state: %08x)"
#define MSG_ROLE_SWITCH_ERR1 3159 //"allocate new piconet is the same as old in mss (pid %d role %d)"
#define MSG_AUS_DBG 3160 //"@@max_slot=%d status=0x%04x"
#define RF_MSG_READ_REG_ERR_PRO 3161 //"Read RF/Modem Register Error (reg=%04x, state=%d, cnt=%d) !!"
#define MSG_TX_ISR_INQ_FHS_RSSI  3162  //"Inq resp pkt sent (cnt:%d rssi:%d tx_ch:%d rx_ch:%d)"
#define MT8852B_MSG_RX_LB_TEST_PRO 3163 //"*RxInt@LB_test_pro(%d): pkt_hdr %04xh pal_hdr %04xh clk(%06x:%d -> %06x:%d)"
#define MT8852B_MSG_RX_LB_TEST_PRO2 3164 //"*RxInt@LB_test_pro(%d): pkt_hdr %04xh pal_hdr %04xh cause %08x clk(%06x:%d -> %06x:%d -> %06x:%d)"
#define MSG_LC_SCO_OVER_HCI  3165  //"SCO OVER HCI"
#define MSG_HCI_VENDOR_CMDS_ERR  3166  //"HciVendor: Err!! Not Alignment (page:%d offset:0x%04x)"
#define MSG_HCI_VENDOR_CMDS_WR  3167  //"HciVendorWriteReg: base:0x%08x offset:0x%04x val:0x%04x"
#define MSG_HCI_VENDOR_CMDS_RD  3168  //"HciVendorReadReg: base:0x%08x offset:0x%04x val:0x%04x"
#define MSG_SCO_OVER_HCI_1ST_INSTANT 3169  //"*First SCO Instant: handle %d sco_ce_idx %d instant %08x"
#define MSG_SCO_EARLY_LAG 3170  //"*SCO Early Lag: cnt %d  next %08x cur %08x"
#define LMP_MSG_RES_TIMER_INFO_PRO 3171 //"[clk:0x%08X] *PDU resp timer(ce:%d pid:%d addr:%d send:%08x[%d %d] exp:%08x)..timer(handle:%d cnt:%d)"
#define LC_ISR_MSG_NOTIFY 3172 //"**lc_rx_isr: rx_pkt_type %d flow (%d %d) lut_idx %d rx_cnt %d tx_cnt %d poll_cnt %d"
#define LC_SCHED_MSG_INVOKE 3173 //"*Invoke Sched: wptr %d rptr %d allow_pktcnt %d"
#define LC_SCHED_MSG_SEND 3174 //"*Send PKT: wptr %d rptr %d allow_pktcnt %d"
#define LC_SCHED_MSG_BROADCAST 3175  //"Sched Broadcast Pkt (ptr %08x): conn_handle:%04x pb %d bc %d pkt_len %d ava_len %d"
#define SCO_CONN_PROGRAM_INFO 3176  //"lc_conn_sco: fifo_reg=%04x conn_reg=%04x nslots=%d"
#define MSG_RT8723_NEW_RF_PHY_INIT 3177  //"(%d)rtl8723_btrf_PHYInit: type %d addr %04x value %04x"
#define MSG_RT8723_NEW_RF_TXGAIN 3178 //"TxGain (%dM): tx_gain_idx %d gain_step %d gain 0x%02x"
#define MSG_RT8723_NEW_RF_LE_TXGAIN 3179 //"TxGain LE: tx_gain_idx %d gain 0x%02x"
#define MSG_RT8723_NEW_RF_RXAGC 3180 //"RxAGC: n=%d value=0x%04x"
#define MSG_OS_TASK_CHECK_QUEUE 3181 //**OS_Task: pri %d signal_queue=%d"
#define MSG_RT8723_RF_THERMAL_TIMER 3182 //"ThermalTimerCallback..thermal:(now %d diff %d recal %d) track:(txpwr %d cfo %d rxgain %d lok %d)"
#define MSG_RT8723_RF_TXPOWER_TRACK 3183 //"TxPwr_Track: N_old %d N_new %d TxScalingFactor %d"
#define MSG_RT8723_RF_CFO_TRACK 3184 //"CFO_Track: N_old %d N_new %d CapOffset %d"
#define MSG_RT8723_RF_RXGAIN_TRACK 3185 //"RxGain_Track: N_old %d N_new %d RxGainPara 0x%04x"
#define MSG_RT8723_RF_LOK_TRACK 3186 //"LOK_Track: N_old %d N_new %d ChL 0x%04x ChH 0x%04x"
#define MSG_LC_RX_ISR_TX_WARNING 3187 //"TX_WARNNING: long time no tx acl packet (tx_count %d acl_pktcnt %d)"
#define MSG_HCI_ACL_QUEUE_FULL 3188 //"ACL_TXQUEU_FULL: tx_count %d rptr %d wptr %d info0: %d %d info1: %d %d bzdma=0x%08x"
#define MSG_HCI_ACL_QUEUE_EMPTY 3189 //"ACL_TXQUEU_EMPTY: long time no tx acl packet (tx_count %d)"
#define MSG_RT8723_NEW_RF_INIT_ERR 3190 //"RFPHYInit Exception Error: type %d addr %04x value %04x"
#define MSG_CE_INDEX_MISMATCH 3191 //"CE Index Mismatch in Tx Interrupt (o:%d, x:%d)!!"
#define MSG_LOG_UART_RX_INPUT 3192 //"[UART_RX_CMD]: type %d 16bit %d write %d offset %04x value %08x"
#define MSG_LOG_UART_CMD_ERROR 3193 //"** UART_RX_CMD Err!! %02x %02x %02x %02x %02x %02x %02x %02x"
#define MSG_LOG_UART_CMD_UNALIGNED 3194 //"** UART_RX_CMD Address Unaligned!!"
#define MSG_LOG_UART_CMD_GENERAL 3195 //"** UART_RX_CMD len %d ptr %d data %02x %02x %02x %02x %02x %02x %02x %02x"
#define MSG_LOG_CHECK_PATCH_FUNC1 3196 //"=> Patched Func1 (data@sram %d data@dmem %d)"
#define MSG_LOG_CHECK_PATCH_FUNC2 3197 //"<= Patched Func2 (data@sram %d data@dmem %d)"
#define MSG_LOG_SCHEDULE_LOG 3198 //"SW Schedule [r w s0 s1] %d %d %d %d - %d %d %d %d - %d %d %d %d - %d %d %d %d - rxfifo(acl:%08x sco:%08x)"
#define MSG_SET_AFH_PDU_STATE_ERR 3199 //"Ilegal set afh status (afh mode %d state %d)!!"
#define HCI_LE_CONTROL_CMD  3200 //"HCI LE Control Command (opcode=%02x)"
#define LE_MSG_ACL_DATA_H2L_POOL_CREATION_FAILED 3201 //"LE ACL DATA H2L POOL creation failed"
#define LE_MSG_LLC_PDU_POOL_CREATION_FAILED 3202 //"LE LLC PDU POOL creation failed"
#define LE_MSG_ACL_DATA_L2H_POOL_CREATION_FAILED 3203 //"LE ACL DATA L2H POOL creation failed"
#define LE_MSG_ERR_ADV_PDU_TYPE 3204 //"LE LL Advertising PDU is Wrong (type %d)"
#define LE_MSG_NO_FREE_TXCMD_OF_ADV_TYPE 3205 //"No Free TxCmd for Advertising Type"
#define LE_MSG_HW_INSTRUCTION_CODE_ERROR 3206 //"LE HW Instruction Code Error (code=%d)"
#define LE_MSG_INVALID_TXCMD_LLID 3207 //"LE Invalid TxCmd LLID (id=%d)"
#define LE_MSG_NO_FREE_CONN_ENTRY 3208 //"LE No Free Connection Entry"
#define LE_MSG_INVALID_CONN_ENTRY 3209 //"LE Invalid Entry (id %d opcode %d)"
#define LE_MSG_SET_UNCONNECTED_CONN_ENTRY 3210 //"Warning! LE Set Unconnected Entry (id=%d code=%d)"
#define LE_MSG_NO_FREE_LE_CONTROL_PDU_IN_POOL 3211 //"No Free LE Ctrl PDU in the Pool"
#define LE_MSG_INVALID_LLC_PDU 3212 //"Invalid Opcode of LLC PDU (opcode %d)"
#define LE_MSG_LLC_FEATURE_SET_VIOLATE 3213 //"Error!! LLC FeatureSet Violation (ent:%d)"
#define LE_MSG_NO_FREE_DEV_UNIT_ADD_TO_LIST 3214 //"Warning!! No Free Device Unit to Add List (ltype %d atype %d addr=%02x %02x %02x %02x %02x %02x)"
#define LE_MSG_ADV_CH_RX_PKT_LEN_ERROR 3215 //"Adv Channel Rx Pkt Length Mismatch (type %d pl_len %d size %d len %d)"
#define LE_MSG_ADV_CH_RX_PDU_LEN_ERROR 3216 //"Adv Channel Rx PDU Payload Length Mismatch (type %d size %d)"
#define LE_MSG_ADV_CH_RX_UNKNOWN_PDU 3217 //"Get Adv Channel Rx Unknown PDU (type %d size %d)"
#define LE_MSG_DATA_CH_INVALID_RX_PKT 3218 //"Get Data Channel Invalid Pkt (entry %d header %04x rxstatus %02x), ce_count:%d"
#define LE_MSG_FREE_LLC_PDU_ERROR 3219 //"LLC PDU Pkt Free Error (pdu %08x) !!"
#define LE_MSG_FREE_H2L_ACL_DATA_ERROR 3220 //"HCI Data Pkt (H2L) Free Error (entry %d pkt %08x) !!"
#define LE_MSG_EVENT_END_STATUS_ERROR 3221 //"LE Event End Status Error (reg0 %04x reg1 %04x)"
#define LE_MSG_EVENT_END_RX_WORD_CNT_ERROR 3222 //"LE Event End Rx Word Count Error (cur %d total %d)"
#define LE_MSG_NO_FREE_TXCMD_OF_LE_DATA_TYPE 3223 //"No Free TxCmd for LE Data Channel Type"
#define LE_MSG_SEND_INVALID_LLC_PDU_TYPE 3224 //"LE Send Invalid LLC PDU Type (num %d pkt %08x type %d)"
#define LE_MSG_LL_INTERRUPT 3225 //"*LE Interrupt (misr %04x en %04x rx_status 0x%04x tx_status 0x%04x rx_fifo 0x%08x tx_fifo 0x%08x)"
#define LE_MSG_LL_ADV_PARAS 3226 //"Set AdvPara: err %d Host type %d adv type %d addr(loc %d rem %d) Intv(min %d max %d) ChM %d filter(s%d c%d)"
#define LE_MSG_EN_ADV_MODE 3227 //"LL_DRV_EN_ADV: adv_len:%d, host adv_type %d h2h %d intv %d rem-addr %02x %02x %02x %02x %02x %02x"
#define LE_MSG_LL_SCAN_PARAS 3228 //"Set ScanPara: type %d addr(loc %d) intv(%d) window(%d) ChM %d filter(%d)"
#define LE_MSG_LL_SCAN_EN 3229 //"Set Scan Enable: enable %d duplicated %d"
#define LE_MSG_EVENT_END 3230 //"LL_EVENT_END: idx %d reg0 %04x reg1 %04x wptr %d rptr %d cnt %d"
#define LE_MSG_QUIT_ADV 3231 //"QUIT LE ADV STATE: reason %d status_reg %04x"
#define LE_MSG_QUIT_CONN 3232 //"QUIT LE INIT/CONN STATE: reason %d status_reg %04x"
#define LE_MSG_QUIT_SCAN 3233 //"QUIT LE SCAN STATE"
#define LE_MSG_CONFIRM_DEV_LIST 3234 //"Confirm Dev List: type %d addr %d wr(DWord0 %08x DWord1 %08x) rd(DWord0 %08x DWord1 %08x)"
#define LE_MSG_ADD_DEV_LIST 3235 //"Add Dev List (%d): type %d addr %02x %02x %02x %02x %02x %02x"
#define LE_MSG_CHK_WHITE_LIST_IN_CAM 3236 //"Read CAM: idx %d addr %d DWord0 %08x DWord1 %08x"
#define LE_MSG_HANDLE_RX_PKT_IN_TASK 3237 //"LE_RX PKT: type %d src %d rx_bytecnt %d conn_entry %d ce_cnt %d (clk:0x%08x)"
#define LE_MSG_ADV_RX_DATA_CONTENT 3238 //"LE ADV Data Content: pdu_type %d offset %d  pdu_len %d (len=%d)"
#define LE_MSG_CAM_ACCESS_WARNNING 3239 //"LE Cam Access Warning ...  HW is processing !!"
#define LE_MSG_TAIL_4BYTE 3240 //"HW Tail:%02x %02x %02x %02x"
#define LE_MSG_SALVE_CONN_SUCCESS_ERROR 3241 //"Slave Conn Success but check Error !! (conn_num %d enable %d master %d)"
#define LE_MSG_MASTER_CONN_SUCCESS_ERROR 3242 //"Master Conn Success but check Error !! (init_en %d entry(fw:%d hw:%d) bm_entry 0x%04x)"
#define LE_MSG_DATA_CH_RX_DATA_CONTENT 3243 //"LE Data Channel Content: llid %d header 0x%04x  pl_len %d entry %d discard %d pktcnt %d->%d"
#define LE_MSG_DATA_CH_RX_DATA_ERR_CHK 3244 //"LE Rx Data Pkt Err: len %d index %d exp %02x actual %02x"
#define LE_MSG_DATA_CH_RX_DATA_PKT_RPT 3245 //"LE Rx Data Pkt Rpt: len %d err bytecnt %d (ce_cnt %d err %d pass %d)"
#define LE_MSG_CONN_COMPLETE_EVENT 3246 //"LE Connection Complete: status %02xh idx %d handle %d role %d"
#define LE_MSG_HOST_DATA_ERR 3247 //"LE Host Data Error: reason %d pb_flag %d bc_flag %d conn_handle %d"
#define LE_MSG_READ_CAM 3248 //"LE Read CAM (addr %d rdata 0x%08x)"
#define LE_MSG_INSERT_ACL_TX_PKT_TO_PEND_LIST 3249 //"LE Insert Acl Tx Pkt to Pend List - entry %d pkt %08x (old: head %08x tail %08x =>new: head %08x tail %08x) cnt %d"
#define LE_MSG_INSERT_ACL_TX_PKT_LIST_TO_LIST_PARAM 3250 //"LE Insert Acl Pkt List to List Param (entry %d policy %d type %d head %08x tail %08x cnt %d)"
#define LE_MSG_INSERT_ACL_TX_PKT_LIST_TO_LIST_OUTPUT 3251 //"LE Insert Acl Pkt List to List Output (old: head %08x tail %08x =>new: head %08x tail %08x) cnt %d"
#define LE_MSG_CHECK_CE_ANCHOR_POINT 3252 //"LE Check Anchor Point: cur time %d"
#define LE_MSG_CHECK_BZDMA_TXDESC   3253 //"LE Check BZDMA TXDesc (cnt %d) 0:DW0=%08x DW1=%08x 1:DW0=%08x DW1=%08x)"
#define LE_MSG_CREATE_CONN_PARA0 3254 //"LE CreatConn 0: err=%02xh(%d) aa=%08xh scan(intv=%d win=%d) fp=%d rem(type=%d addr:%02xh %02xh %02xh %02xh %02xh %02xh)"
#define LE_MSG_CREATE_CONN_PARA1 3255 //"LE CreatConn 1: locAT=%d chM=%d conn_intv([%d %d]->%d) TxOffset=%d TxWinSz=%d latency=%d suprtTo=%d ce_len([%d %d]->%d)"
#define LE_MSG_HW_REPORT_EXTRA_ACK 3256 //"**LE HW Error: Report More Tx Ack in CE (send %d ack %d)!!"
#define LE_MSG_CHK_LLC_SENT_TIME 3257 //"LE LLC PDU Tx Time: entry %d txpkt %d ce_cnt %d"
#define LE_MSG_CONNECT_NO_ALIVE 3258 //"Err!! LE Connect is Not Alive (entry %d)"
#define MSG_LE_RSSI_COUNT_INFO2 3259 //"[rssi]: mode %d entry %d index %d rssi count %d rssi sum %d rssi adv %d"
#define HCI_LE_TX_TEST_PARAM 3260 //"LE Transmitter Test Command: tx_freq %d len %d pkt_pl %d (ret status %d)"
#define HCI_LE_RX_TEST_PARAM 3261 //"HCI LE Receiver Test Command: rx_freq %d (ret status %d)"
#define HCI_LE_TEST_END_PARAM 3262 //"HCI LE Test End Command: (test_mode %d ret status %d NumOfPkts %d NumOfTxPkts %d)"
#define LE_MSG_TEST_PKT_PDU_WARN 3263 //"Warning!! Receive LE Test PDU: type %d len %d (all %d offset %d)"
#define LE_MSG_GEN_LL_CONN_UPDT_REQ 3264 //"[LL]Gen LL_CONN_UPDT_REQ (%d): %02x %02x %02x %02x %02x %02x %02x %02x %02x %02x %02x, cur:%d, instant:%d, slv_l(ori):%d"
#define LE_MSG_GEN_LL_CH_MAP_REQ 3265 //"[LL]Gen LL_CH_MAP_REQ (%d):  %02x %02x %02x %02x %02x %02x %02x CE:%d instant: %d"
#define LE_MSG_GEN_LL_TERMINATE_REQ 3266 //"[LL]Gen LL_TERMINATE_REQ: %02x"
#define LE_MSG_GEN_LL_ENC_REQ 3267 //"[LL]Gen LL_ENC_REQ (%d): %02x %02x %02x %02x %02x %02x %02x %02x %02x %02x %02x %02x %02x %02x %02x %02x %02x %02x %02x %02x %02x %02x"
#define LE_MSG_GEN_LL_ENC_RSP 3268 //"[LL]Gen LL_ENC_RSP (%d): %02x %02x %02x %02x %02x %02x %02x %02x %02x %02x %02x %02x"
#define LE_MSG_GEN_LL_START_ENC_REQ 3269 //"[LL]Gen LL_START_ENC_REQ"
#define LE_MSG_GEN_LL_START_ENC_RSP 3270 //"[LL]Gen LL_START_ENC_RSP"
#define LE_MSG_GEN_LL_UNKNOWN_RSP 3271 //"[LL]Gen LL_UNKNOWN_RSP: %02x"
#define LE_MSG_GEN_LL_FEATURE_REQ 3272 //"[LL]Gen LL_FEATURE_REQ: %02x %02x %02x %02x %02x %02x %02x %02x"
#define LE_MSG_GEN_LL_FEATURE_RSP 3273 //"[LL]Gen LL_FEATURE_RSP (%d): %02x %02x %02x %02x %02x %02x %02x %02x"
#define LE_MSG_GEN_LL_PAUSE_ENC_REQ 3274 //"[LL]Gen LL_PAUSE_ENC_REQ"
#define LE_MSG_GEN_LL_PAUSE_ENC_RSP 3275 //"[LL]Gen LL_PAUSE_ENC_RSP"
#define LE_MSG_GEN_LL_VERSION_IND 3276 //"[LL]Gen LL_VERSION_IND: %02x %02x %02x %02x %02x"
#define LE_MSG_GEN_LL_REJECT_IND 3277 //"[LL]Gen LL_REJECT_IND: %02x"
#define LE_MSG_CHECK_SESSION_KEY_INPUT 3278 //"[LL]SessKey_In: data(0x%04x%04x%04x%04x%04x%04x%04x%04x) text(0x%04x%04x%04x%04x%04x%04x%04x%04x)"
#define LE_MSG_CHECK_SESSION_KEY_OUTPUT 3279 //"[LL]SessKey_Out: key(0x%04x%04x%04x%04x%04x%04x%04x%04x)"
#define LE_MSG_INSTALL_SESSION_KEY_1 3280 //"[LL]install sessKey-1: role %d entry %d iv(0x%04x%04x%04x%04x)"
#define LE_MSG_INSTALL_SESSION_KEY_2 3281 //"[LL]install sessKey-2: key(0x%04x%04x%04x%04x%04x%04x%04x%04x)"
#define LE_MSG_SIX_TIMEOUT_EXCEPTION 3282 //"Warning!! Receive LE Six Timeout But No Valid Conn Handle (entry %d adv %d init %d)"
#define LE_MSG_SUPERVISION_TIMEOUT 3283 //"[LL] Supervision Timeout: entry %d timeout %d cnt(rx_any_pkt %d no_crc_ok %d)  ce_counter(restart:%d cur:%d)  (no_any_pkt_received:%d, crc_ok:%d)"
#define LE_MSG_LLC_PROCEDURE_TIMEOUT 3284 //"[LL] LLC Procedure Timeout: killing le connection %d, llc_type:%d"
#define LE_MSG_KILL_CONNECTION_INFO 3285 //"[LL] Kill LE Conn Int: entry %d connected %d reason %d"
#define LE_MSG_ACL_DISCONNECT_CMD 3286  //"[LL] Disconnect Cmd: conn_handle %d entry %d reason %02x "
#define LE_MSG_USER_DISCONNECT_CMD 3287  //"[LL] User Disconnect Cmd:  entry %d connected %d "
#define LE_MSG_START_TIMER 3288  //"[LL] (re)Start Timer:  entry %d type %d restart %d timeout %d"
#define HCI_LE_TEST_END_PARAM_CRC_ERR 3289 //"HCI LE Test End Command: (test_mode %d ret status %d NumOfPkts %d NumOfTxPkts %d NumOfCrcErrPkts %d)"
#define MSG_SCO_RX_PATH_DBG 3290 //"sco rx msg: Dnstream (total %d ok %d miss %d drop %d) Upstr (total %d sent %d ack %d)"
#define LE_MSG_RECEIVE_TERMINATE 3291   //"[LL]Receive LL_TERMINATE_REQ (entry %d err 0x%02x)"
#define MSG_NEW_ALLOC_POOL_ACL_DATA_H2C 3292 //"[POOL] id %02d pkt_num %02d pkt_size %04d (acl_data_pool_id)"
#define MSG_NEW_ALLOC_POOL_LMP_BUFF 3293 //"[POOL] id %02d pkt_num %02d pkt_size %04d sp %08x ep %08x (lmp_pdu_buffer_pool_handle)"
#define MSG_NEW_ALLOC_POOL_HCI_CMD 3294 //"[POOL] id %02d pkt_num %02d pkt_size %04d sp %08x ep %08x (hci_cmd_buffer_pool_handle)"
#define MSG_NEW_ALLOC_POOL_ACL_DATA_C2H 3295 //"[POOL] id %02d pkt_num %02d pkt_size %04d sp %08x ep %08x (acl_data_to_host_pool_id)"
#define MSG_NEW_ALLOC_POOL_EVENT_BUFF 3296 //"[POOL] id %02d pkt_num %02d pkt_size %04d sp %08x ep %08x (hci_event_buffer_pool_handle)"
#define MSG_NEW_ALLOC_POOL_FHS_BUFF 3297 //"[POOL] id %02d pkt_num %02d pkt_size %04d sp %08x ep %08x (lmp_fhs_pkt_buffer_pool_handle)"
#define MSG_NEW_ALLOC_POOL_DMA_TX_DESC 3298 //"[POOL] id %02d pkt_num %02d pkt_size %04d sp %08x ep %08x (dma_tx_pool_id)"
#define MSG_NEW_ALLOC_POOL_DMA_RX_DESC 3299 //"[POOL] id %02d pkt_num %02d pkt_size %04d sp %08x ep %08x (dma_rx_pool_id)"
#define MSG_NEW_ALLOC_POOL_LE_ACL_H2C 3300 //"[POOL] id %02d pkt_num %02d pkt_size %04d sp %08x ep %08x (le_acl_data_to_ll_pool_id)"
#define MSG_NEW_ALLOC_POOL_LE_LLC_PDU 3301 //"[POOL] id %02d pkt_num %02d pkt_size %04d sp %08x ep %08x (le_llc_pdu_pool_id)"
#define MSG_NEW_ALLOC_POOL_LE_ACL_C2H 3302 //"[POOL] id %02d pkt_num %02d pkt_size %04d sp %08x ep %08x (le_acl_data_to_host_pool_id)"
#define MSG_NEW_ALLOC_POOL_SCO_DATA_H2C 3303 //"[POOL] id %02d pkt_num %02d pkt_size %04d sp %08x ep %08x (synchronous_data_pool_id)"
#define MSG_NEW_ALLOC_POOL_SCO_DATA_C2H 3304 //"[POOL] id %02d pkt_num %02d pkt_size %04d sp %08x ep %08x (synchronous_data_to_host_pool_id)"
#define MSG_NEW_ALLOC_POOL_SCO_TX_ENTRY 3305 //"[POOL] id %02d pkt_num %02d pkt_size %04d sp %08x ep %08x (synchronous_data_to_remote_id)"
#define MSG_HCI_CREATE_CONNECT 3306 //"HciCreateConn: bd_addr: %02x %02x %02x %02x %02x %02x lt_addr:%d ce_index:%d piconet:%d"
#define MSG_PAGE_SCAN_NO_PID 3307 //"No valid piconet id  for page scan!!"
#define MSG_RT8723_NEW_RF_RXAGC_2 3308 //"RxAGC: n=%d value=0x%04x  (lna_gain_idx_now = %d)  (modem_agc_table_3e = %04x)"
#define MSG_WR_EFUSE 3309 //"Efuse WR: bank %d addr 0x%04x wdata 0x%02x status %d (0x%08x 0x%08x)"
#define MSG_RD_EFUSE 3310 //"Efuse RD: bank %d addr 0x%04x rdata 0x%02x status %d (0x%08x 0x%08x)"
#define MSG_EFUSE_COMP_ERROR 3311 //"Efuse Compare: bank %d addr %04x rdata (o:%02x x:%02x)"
#define MSG_EFUSE_TEST_CHECK 3312 //"Efuse check: (err %d all %d)"
#define MSG_LE_RSSI_RPT_LOG 3313 //"[rssi]:no_links %d, type %d, addr %02x %02x %02x %02x %02x %02x, rssi_min %d rssi_max %d"
#define MSG_LE_BIND_RSSI_INFO 3314 //"[rssi]: bind rssi => le index %d, rssi blk %d"
#define MSG_LE_RSSI_COUNT_INFO 3315 //"[rssi]: le entry %d index %d rssi count %d rssi sum %d rssi adv %d"
#define MSG_LE_RSSI_S3_RX_PKT 3316 //"[rssi]: le enter s3 receive pkt ... status %d, rssi %d %d %d %d, idx = %d %d, cnt %d"
#define MSG_LE_RSSI_S3_RX_PKT_SIM 3317 //"[rssi]: le enter s3 receive pkt ... status %d"
#define LMP_MSG_RX_NON_EXT_PDU_PRO 3318 //"[clk:0x%08X] <--receive lmp opc:%d %d (addr:%d pid:%d tid:%d ce:%d m:%d) - %02x %02x %02x %02x %02x %02x %02x %02x"
#define MSG_ACCESS_EFUSE 3319 //"Efuse Access: wr %d bank %d addr 0x%04x rdata 0x%02x status %d"
#define MSG_CHECK_AFH_MAP_1 3320 //"check_afh_map (m1) : %02x %02x %02x %02x %02x %02x %02x %02x %02x %02x"
#define MSG_CHECK_AFH_MAP_2 3321 //"check_afh_map (m2) : %02x %02x %02x %02x %02x %02x %02x %02x %02x %02x"
#define MSG_CHECK_AFH_MAP_3 3322 //"check_afh_map (m3) : %02x %02x %02x %02x %02x %02x %02x %02x %02x %02x"
#define MSG_CHECK_AFH_SCO_SCORE 3323 //"afh sco_score (%d) : %d %d %d %d %d %d %d %d %d %d : %d %d %d %d %d %d %d %d %d %d"
#define MSG_CHECK_AFH_SCO_PKT 3324 //"rx sco pkt (ch %d): all %d bad %d sco_hq %d acl all %d.. (bak2 %04x bak3 %04x hq %d miss %d hec err %d)"
#define MSG_CHECK_AFH_SCORE 3325 //"afh score (%d) : %d %d %d %d %d %d %d %d %d %d : %d %d %d %d %d %d %d %d %d %d"
#define MSG_CHECK_AFH_PKT_CNT 3326 //"afh pkt cnt (%d) : %d %d %d %d %d %d %d %d %d %d : %d %d %d %d %d %d %d %d %d %d"
#define MSG_CHECK_AFH_SCO_PKT_CNT 3327 //"afh sco pkt cnt (%d) : %d %d %d %d %d %d %d %d %d %d : %d %d %d %d %d %d %d %d %d %d"
#define MSG_CHECK_AFH_SCO_PKT_INFO 3328 //"rx sco pkt (ch %d): hq_max %d hq_min %d hq_div %d miss %d hec_err %d"
#define MSG_CHECK_AFH_ACL_HDR_QALITY 3329 //"afh acl hdr quality (%d) : %d %d %d %d %d %d %d %d %d %d : %d %d %d %d %d %d %d %d %d %d"
#define BZDMA_MSG_GET_NO_FREE_TX_ENTRY 3330 //"[BZDMA] warning!! no free TxCmd entry %d ..."
#define MSG_LOG_SCHEDULE_LOG_NEW 3331 //"sw sch: %x-%x-%x %x-%x-%x %x-%x-%x %x-%x-%x acl_tx:%x acl_rx:%x sco_tx:%x sco_rx:%x"
#define HCI_LE_CONTROL_CMD_NEW  3332 //"====>HCI LE Cmd:ocf=%02x len:%d, %02x %02x %02x %02x %02x %02x %02x %02x %02x %02x %02x %02x %02x %02x %02x %02x %02x %02x"
#define LE_MSG_GEN_LL_CONN_UPDT_REQ_NEW 3333 //"[LL]Gen LL_CONN_UPDT_REQ (%d): cur:%d instant:%d ce_interval(%d->%d) ce_len(%d->%d) slv_l(%d->%d) sup_to(%d->%d) win_sz:%d, win_sz_ofst:%d, win_ofst:%d"
#define MSG_TASK_QUEUE_FULL_BM 3334 //"Warnning!! Task Queue Full = bm:%08x, drop:%d, seq:%d %d %d %d %d %d %d %d"
#define MSG_LL_CAM_WRITE_ERR 3335 //"Write LL Cam Error (addr=%x value=%x) !!"
#define MSG_LL_CAM_READ_ERR 3336 //"Read LL Cam Error (addr=%x) !!"
#define MSG_LL_CAM_ACCESS_WARNNING 3337 //"LE Cam Access (addr=%x data=%x) Warning ...  HW is processing !!"
#define MSG_LL_INSTALL_KEY_FAILED 3338 //"LE Install Key Always Failed -- !!"
#define LE_MSG_KILL_CONN_ENT_MISMATCH 3339 //"[LL] Killed conn entry mismatch: conn_ent: %d, hw_conn_ent: %d"
#define LE_MSG_GEN_LL_LENGTH_RSP 3340 //"[LL]Gen LL_LENGTH_RSP: %d %d %d %d"
#define LE_MSG_LOCAL_DATA_LEN_INFO 3341 //"[LL] local: max_tx_size: %d, max_tx_time: %d, max_rx_size: %d, max_rx_time: %d"
#define LE_MSG_REMOTE_DATA_LEN_INFO 3342 //"[LL] remote: max_tx_size: %d, max_tx_time: %d, max_rx_size: %d, max_rx_time: %d"
#define LE_MSG_DATA_LEN_INFO 3343 //"[LL] max_tx_size: %d, max_tx_time: %d, max_rx_size: %d, max_rx_time: %d"
#define LE_MSG_SLA_LATENCY_WAKEUP 3344 //"[LL] wake_from_sla_latency:cause %d,cur_clk %06x,ww_h(%06x %d->%06x %d),ww_t(%06x %d->%06x %d),ap(%06x->%06x),cc(%d->%d),men(%x %d->%x %d),cnt(%d->%d)"
#define LE_MSG_GEN_LL_REJECT_IND_EXT 3345 //"[LL]Gen LL_REJECT_IND_EXT: rej_opcode:0x%02x, err_code:0x%02x"
#define LE_MSG_LL_LENGTH_REQ_CONFLICT 3346 //"[LL] LL_LENGTH_REQ conflict (ent:%d)"
#define LE_MSG_LL_LENGTH_RSP_NOT_ALLOWED 3347 //"[LL] LL_LENGTH_RSP not allowed (ent:%d)"
#define LE_MSG_GEN_LL_LENGTH_REQ 3348 //"[LL]Gen LL_LENGTH_REQ: %d %d %d %d"
#define LE_MSG_GEN_LL_SLV_FEATURE_REQ 3349 //"[LL]Gen LL_SLV_FEATURE_REQ: %02x %02x %02x %02x %02x %02x %02x %02x"
#define LE_MSG_GEN_LL_CONN_PARAM_REQ 3350 //"[LL]Gen LL_CONN_PARAM_REQ (%d): Interval(min %d max %d ori %d) slv_l %d(ori %d) to %d(ori %d) Period %d Ref %d Offset %d %d %d %d %d %d"
#define HCI_LE_TX_TEST_PARAM_ENHANCED 3351 //"LE Transmitter Test Command: tx_freq %d len %d pkt_pl %d phy %d (ret status %d)"
#define HCI_LE_RX_TEST_PARAM_ENHANCED 3352 //"HCI LE Receiver Test Command: rx_freq %d phy %d midx: %d(ret status %d)"

#define LE_MSG_SC_TIMING_PARA_MODIFY 3353 //"[LL] Warning!! sc timing parameters are modified (%d->%d, %d->%d)"
#define LE_MSG_QUIT_SLV_CONN 3354 //"QUIT LE ADV/SLV CONN STATE: reason %d entry %04x"
#define LE_MSG_OUT_OF_WINDOW_WIDENING 3355 //"[LL] Out Of WW: entry %d intv %d (unit:1.25ms)slv_l %d timeout %d cnt(rx_any_pkt %d no_crc_ok %d)  ce_counter(restart:%d cur:%d)  (no_any_pkt_received:%d, crc_ok:%d) reg0x54 0x%04x 0x72 0x%04x"
#define HCI_LE_TX_TEST_PARAM_ENHANCED2 3356 //"LE Transmitter Test Command: tx_freq %d len %d pkt_pl %d phy %d pkt_duration %dus Intv%dslots(ret status %d)"
#define HCI_LE_SCA_SLV_STATE_WRONG 3357 //"[LL]Warning!! slave entry may be wrong!! (%d)"
#define LE_MSG_LLC_PROCEDURE_TIMEOUT_NEW 3358 //"[LL] LLC Procedure Timeout: killing le connection %d, llc_type_bm:0x%x, llc_type:%d"

#define LE_MSG_LE_SCHED_PKT_FIFO_EXHAUSTED 3359 //"Error: le_sched_pkt_fifo (ent: %d) exhausted (act_cnt%d)"
#define MSG_BZDMA_V8_RPTR_MISMATCH 3360 //"[bzdma v8] rptr mismatch (fw %d hw %d), bm %08x, wptr %d, ack %d, %d, %02x, cnt %d"
#define MSG_BEE_NO_FREE_NODE 3361 //"Warning !! No free LL misc node  !!"
#define LE_MSG_GEN_LL_PING_REQ 3362 //"[LL]Gen LL_PING_REQ (%d)"
#define LE_MSG_GEN_LL_PING_RSP 3363 //"[LL]Gen LL_PING_RSP (%d)"
#define LE_MSG_ADD_DEV_LIST_TYPE 3364 //"Add Dev List (%d), type(%d): type %d addr %02x %02x %02x %02x %02x %02x"
#define MSG_LL_WRITE_CAM_FAILED 3365 //"WARNING!!! Write cam failed cnt %d addr %d val%d!!"
#define LE_MSG_CREATE_CONN_PARA1_NEW 3366 //"LE CreatConn 1: locAT=%d chM=%d conn_intv([%d %d]->%d) anchor_point(offset=%d reserved_slot=%d) latency=%d suprtTo=%d ce_len([%d %d]->%d)"

#define LL_MSG_EXT_RUN_QUEUE_INFO 3367 //"[LL][ADV_EXT] adv_runq(%d) cur_clk1:(%d %d) curNull%d (%d 0x%04x %d)(%d 0x%04x %d)(%d 0x%04x %d)(%d 0x%04x %d)(%d 0x%04x %d)"
#define LL_MSG_EXT_ADV_NO_FREE_DATA_ERR 3368 //"[LL][ADV_EXT] Warning!! No Free Data"
#define LL_MSG_EXT_ADV_TOTAL_NUM_OF_TASK_WRONG 3369 //"[LL][ADV_EXT] Warning!! Adv handle0x%02x aux task num(%d)is wrong.  Adv set Properties 0x%04x"
#define LL_MSG_EXT_ADV_NUM_OF_ENABLE_ADV_SET 3370  //"[LL][ADV_EXT](%d) ext adv en: %d num of enable adv set%d bm0x%02x adv sets:0(0x%02x 0x%04x %d)1(0x%02x 0x%04x %d)2(0x%02x 0x%04x %d)3(0x%02x 0x%04x %d)4(0x%02x 0x%04x %d)"
#define LL_MSG_EXT_ADV_NUM_OF_ENABLE_ADV_SET2 3371 //"[LL][ADV_EXT]                                                     adv sets:5(0x%02x 0x%04x %d)6(0x%02x 0x%04x %d)7(0x%02x 0x%04x %d)8(0x%02x 0x%04x %d)"
#define LL_MSG_EXT_ADV_SET_DURATION 3372 //"[LL][ADV_EXT] Adv Handle 0x%02x properties 0x%04x duration(%dus %dslots)"
#define LL_MSG_EXT_ADV_TASK_INSERT_FAIL 3373 //"[LL][ADV_EXT] Warning!!! Adv Task insert Fail. Adv_handle %d"
#define LL_MSG_EXT_LEGACY_ADV_PARAM_WRONG 3374 //"[LL][ADV_EXT] Warning!!!Legacy Adv Param Wrong Err 0x%x, adv_properties:0x%02x"
#define LL_MSG_EXT_ADV_ADV_EXT_IND 3375 //"[clk1%08x][LL]ADV_EXT 1st instant 0x%08x, phy%d m%d ext_h0x%x h%d pro0x%x intv(max%d min%d) chm%d txp%d remote0x%02x%02x%02x%02x%02x%02x len%d"
#define LL_MSG_EXT_ADV_ADV_EXT_IND_W_AUX 3376 //"[LL]ADV_EXT with AUX type %d skip(%d/%d) instant0x%08x phy%d m%d ext_h0x%x ch%d ofu%d ca%d len%d"
#define LL_MSG_EXT_ADV_AUX_ADV_IND 3377 //"[clk1%08x][LL]ADV_EXT 2nd instant 0x%08x, phy%d m%d ext_h0x%x h%d pro0x%x ch%d remote0x%02x%02x%02x%02x%02x%02x ext_h_len%d adv_len%d"
#define LL_MSG_EXT_ADV_INSTANT_ERR 3378 //"[LL][ADV_EXT]Warning!!adv_h%d type%d child(%x)intant(0x%08x) is later than parent(%x)instant(0x%08x) more than %d slots"
#define LL_MSG_EXT_ADV_INTR_REASON_WARNING 3379 //"[clk %08x][LL][ADV_EXT] WARNING! adv termitate without any reason. (reg 0x%04x)"
#define LL_MSG_EXT_ADV_TASK_COUNT_ERR 3380 //" [LL][ADV_EXT] Warning!! Num of enabled adv set %d larger than total %d "
#define LL_MSG_EXT_ADV_DATA_TOO_LARGE 3381 //"[LL][ADV_EXT] Warning!! adv(scan_rsp) data length ((ori)%d + (new)%d) larger than max(%d)"
#define LL_MSG_EXT_ADV_UPDT_HEADER 3382 //"[ADV_EXT] Update ExtHeader. type%d adv_mode%d ext_flag 0x%x ext_h_len%d"
#define LL_MSG_EXT_ADV_FILL_HEADER 3383 //"[LL][ADV_EXT] Fill ExtHeader. type%d flag0x%x whole_ext_len%d "
#define LL_MSG_EXT_ADV_TASK_ERR 3384 //"[LL][ADV_EXT] Err!! Task Null "
#define LL_MSG_EXT_ADV_TASK_TYPE_ERR 3385 //"[LL][ADV_EXT] Err!! Wrong Task type (%d)"
#define LL_MSG_EXT_ADV_ENABLE_ADV_ERR 3386 //"[LL][ADV_EXT] Warning!! ADV_set %d is already advertising. Reset Duration & Executed_Event"
#define LL_MSG_EXT_ADV_TERMINATED 3387 //"[clk 0x%08x][LL][ADV_EXT] ADV Terminated(set%d) reason0x%x new_state%d PHY(pri%d sec%d)pid%d active%d enabled 0x%08x duration %d(10ms) evts(max:%d excuted%d)"
#define LL_MSG_EXT_ADV_NO_FREE_TASK_ERR 3388 //"[LL][ADV_EXT] Warning!!! No Free Task (type%d)"
#define LL_MSG_EXT_ADV_HEADER_LENGTH_ERR 3389 //"[LL][ADV_EXT] Err!! Ext Header length Wrong. (len %d flag %d)"
#define LL_MSG_EXT_ADV_SCHEDULE_WRONG_NULL_TASK 3390 //"[LL][ADV_EXT] Warning!! ADV scheduler state wrong with null task. hw_reason %d "
#define LL_MSG_EXT_ADV_SCHEDULE_WRONG 3391 //"[LL][ADV_EXT] Warning!! ADV scheduler state wrong. task_type %d, hw_reason %d "
#define LL_MSG_EXT_ADV_SCHEDULE 3392 //"[LL][ADV_EXT][clk1%08x] adv scheduling triggered by adv interrupt. source %d task_type %d handle %d hw_reason %d"
#define LL_MSG_EXT_ADV_LEGACY_PARAM_WRONG 3393 //"[LL][ADV_EXT][clk 0x%08x] adv scheduling triggered by adv interrupt. task_type %d hw_reason %d"
#define LL_MSG_EXT_ADV_TASK_LINK_WRONG 3394 //"[LL][ADV_EXT] Warning!! task list error (h%d)"
#define LL_MSG_EXT_ADV_INTR_STATE_WRONG 3395 //" [clk %08x][LL][ADV_EXT] Err!! Task Null reason 0x%04x "
#define LL_MSG_EXT_ADV_TASK_CUR_ERR 3396 //"[clk1%08x][LL][ADV_EXT] current task err. h%d instant %d. Remove it. "
#define LL_MSG_EXT_ADV_TASK_LOOP_CNT_TOO_LARGE 3397 //"[LL][ADV_EXT] Err!! Loop Cnt Too Large "
#define LL_MSG_EXT_ADV_CHK_FREE_TASK_DATA 3398 //"[LL][ADV_EXT][clk1 %d] cur 0x%x adv_h%d instant%d, run_q %d Task(free %d total %d) Data(free %d total %d)"
#define LL_MSG_EXT_ADV_WRONG_PID 3399 //"[LL][ADV_EXT] Warning!! Invalid Adv Pid 0xFF!!"

#define LL_MSG_EXT_SCAN_PRIMARY_SCAN_INFO 3400 //"[LL][ADV_EXT] lv1_scan: inst:%d, intvl:%d, win:%d, ch_bm:0x%x, phy:%d"
#define LL_MSG_EXT_SCAN_SECONDARY_SCAN_INFO 3401 //"[LL][ADV_EXT] lv2_scan: inst:%d, ch:%d, phy:%d"
#define LL_MSG_EXT_SCAN_PRIMARY_INIT_INFO 3402 //"[LL][ADV_EXT] lv1_init: inst:%d, intvl:%d, win:%d, ch_bm:0x%x, phy:%d"
#define LL_MSG_EXT_SCAN_SECONDARY_INIT_INFO 3403 //"[LL][ADV_EXT] lv2_init: inst:%d, ch:%d, phy:%d"
#define LL_MSG_EXT_SCAN_SCHED_INFO 3404 //"[LL][ADV_EXT] scan_sched: cur:0x%p, cur_type:0x%x, cur_inst:%d, runq(1v1_len:%d, lv2_len:%d, expire_len:%d), free_cnt:%d, task(start_cnt:%d, end_cnt:%d)"
#define LL_MSG_EXT_SCAN_AUTO_SCAN_INFO 3405 //"[LL][ADV_EXT] auto scan (ll_ch:%d, aux_offs_unit:%d, aux_offs:%d, aux_phy:%d), inst:%d"
#define LL_MSG_EXT_SCAN_CE_END_INFO 3406 //"[LL][ADV_EXT] CE_end: type:%d, inst:%d"
#define LL_MSG_EXT_SCAN_AUTO_CHAIN_INFO 3407 //"[LL][ADV_EXT] auto chain (ll_ch:%d, aux_offs_unit:%d, aux_offs:%d, aux_phy:%d), inst:%d"
#define LL_MSG_EXT_SCAN_PKT_INST_INFO 3408 //"[LL][ADV_EXT] rx_pkt_inst:%d, aux_offs_slot:%d, cur_inst:%d, rx_phy:%d, auto_recv:%d"
#define LL_MSG_EXT_SCAN_SCAN_TERM_INFO 3409 //"[LL][ADV_EXT] scan_term: inst:%d"
#define LL_MSG_EXT_SCAN_CONN_FSM_TERM_INFO 3410 //"[LL][ADV_EXT] conn_fsm_term: inst:%d"
#define LL_MSG_EXT_SCAN_SCAN_STATE_INFO 3411 //"[LL][ADV_EXT] scan(en:%d, phy_bm:0x%x, intvl:%d, win:%d), init(en:%d, phy_bm:0x%x, intvl:%d, win:%d)"
#define LL_MSG_INVALID_LL_AUX_PHY 3412 //"Error!! invalid ll_aux_phy:%d (0:1M; 1:2M; 2:Coded)"
#define LL_MSG_INVALID_LL_HOST_PHY 3413 //"Error!! invalid ll_host_phy:%d (1:1M; 2:2M; 4:Coded)"
#define LL_MSG_INVALID_LL_HW_PHY 3414 //"Error!! invalid ll_hw_phy:%d (0:1M; 1:2M; 2:500K; 3:125K)"
#define LL_MSG_EXT_SCAN_INVALID_TASK_TYPE 3415 //"[LL][ADV_EXT] Invalid task type:0x%x"
#define LL_MSG_EXT_SCAN_INVALID_RX_PKT_INST 3416 //"Warning: rx_pkt_inst (%d, %d, %d) is greater than cur_inst (%d)"
#define LL_MSG_EXT_SCAN_AUX_SCAN_RSP_MISMATCH_ADVA 3417 //"Error!! AUX_SCAN_RSP AdvA mismatch (rpt:0x%02x%02x%02x%02x%02x%02x, pkt:0x%02x%02x%02x%02x%02x%02x)"
#define LL_MSG_EXT_SCAN_EXT_ADV_REPORT_EVT_PARAM_RAW 3418 //"[LL][ADV_EXT] EXT_ADV_REPOT(%d): %08x:%08x:%08x:%08x:%08x:%08x:%08x:%08x"
#define LL_MSG_EXT_SCAN_INVALID_SEC_TASK_STATE 3419 //"Error!! Invalid sec_scan_task state:%d"
#define LL_MSG_EXT_SCAN_MISMATCH_ADV_SID 3420 //"Error!! ADV SID mismatch (old:%04x, new:%04x)"
#define LL_MSG_EXT_SCAN_ERROR_TASK_ALREADY_IN_QUEUE 3421 //"Error!! task already in queue (task:0x%p, type:0x%x)"
#define LL_MSG_EXT_ADV_INFO_ADI 3422 //"[LL][ADV_EXT] ADI(SID:%d, DID:%d)"
#define LL_MSG_EXT_ADV_INFO_ADV_MODE 3423 //"[LL][ADV_EXT] AdvMode:%d, ExtHeaderLen:%d, ExtHeaderFlag:0x%02x (@scan_task_type:0x%x)"
#define LL_MSG_EXT_ADV_INFO_ADVDATA 3424 //"[LL][ADV_EXT] AdvData: %02x:%02x:%02x:%02x"
#define LL_MSG_EXT_ADV_INFO_ADVA 3425 //"[LL][ADV_EXT] AdvA:0x%02x%02x%02x%02x%02x%02x"
#define LL_MSG_EXT_ADV_INFO_TARGETA 3426 //"[LL][ADV_EXT] TargetA:0x%02x%02x%02x%02x%02x%02x"
#define LL_MSG_EXT_ADV_INFO_AUX_PTR 3427 //"[LL][ADV_EXT] AuxPtr(LLChannel:%d, CA:%d, OffsetUnit:%d, AuxOffset:%d, AuxPHY:%d)"
#define LL_MSG_EXT_SCAN_REQ_SENT 3428 //" [clk %08x][LL][ADV_EXT] Scan Request Sent!! "
#define LL_MSG_EXT_SCAN_REQ_SENT_2 3429 //" ****************************************** "
#define LL_MSG_INVALID_LL_INIT_PHY_ID 3430 //"Error!! invalid ll_init_phy_id:%d (0:1M; 1:2M; 2:Coded)"
#define LE_MSG_DIS_CONN_ENT_MISMATCH 3431 //"[LL] Disconnected conn entry mismatch: conn_ent: %d, hw_conn_ent: %d"
#define LL_MSG_EXT_LEGACY_ADV_PARAM_LEGACY 3432 //"[LL][ADV_EXT] Legacy Adv type %d "
#define LE_MSG_IGNORE_OUT_OF_WINDOW_WIDENING 3433  //"[LL] Out Of WW: False alarm, ignore it "
#define LE_MSG_TX_TEST_CANNOT_GET_TXGAIN  3434 //"Warning!! Cannot get corresponding txgain in tx test mode! tx_power:%d"
#define LE_MSG_DISCARD_ACLU_PKT 3438 //" Warning!! Discard ACL(entry:%d)enc_state: %d/%d "
#define LE_MSG_FW_HW_RX_TEST_PKT_MISMATCH 3439 //" Warning!! Rx Test Pkt Error(0x%x). len%d hw_pdu_len%d payload_len%d iq_num%d rx_slot%d rx_status 0x%04x rx_status2 0x%04x"
#define LE_MSG_RX_CTE_MISMATCH 3440 //" Warning!! Rx CTE Test Pkt Mismatch. Expected Type %d len %d. Received Type %d len %d. (total_crc_ok %d err_cnt%d). "
#define LE_PA_TYPE_WRONG 3441 //"[LL][PA] Warning!! Enable PA but Task type wrong %d "
#define LE_MSG_PA_TYPE_WRONG 3442 //"[LL][PA] Warning!! Enable PA but Task type wrong %d "
#define LE_MSG_PA_SYNC_INFO_INSTANT_WRONG 3443 //"[clk %08x][LL][PA] Warning!! Offset_Adjust = 1 in PA sync_info, adv_h/conn_entry %d, ofst_adj%d sync_ofst%d unit %d "
#define LE_MSG_ADV_DATA_LEN_WRONG 3444 //"[LL] ADV Haeder/Data Length Wrong: adv_header_len%d  adv_data_len %d adv_handle %d  seg_id%d "
#define LE_MSG_GET_BIG_INFO_WRONG 3445 //"[LL][PA] WARNING!! Get BIG INFO Wrong !! adv_handle %d"

#define LE_MSG_KILL_CONNECTION 3449 //"[LL] request hw to kill le conn entry %d !!"

#define RF_MSG_READ_ERR_RF_OFF_NOT_READY 3450 //"Read RF Register Error: RF OFF not ready(reg=%x) !!"
#define RF_MSG_WRITE_ERR_RF_OFF_NOT_READY 3451 //"Write RF Register Error: RF OFF not ready (reg=%x value=%x) !!"
#define LE_MSG_PDU_WITH_INCORRECT_LEN 3452 //"[LL] Warning: (ent:%d) received pdu (opc:%d) with incorrect len:%d"
#define LE_MSG_PDU_SENT_FROM_INCORRECT_ROLE 3453 //"[LL] Warning: (ent:%d) received pdu (opc:%d) from incorrect role:%d"
#define LE_MSG_CLEAN_PROC_MISMATCH_PROC_TYPE_BM 3454 //"[LL] Warning: (ent:%d) clean proc type mismatch (dir:%d, clean_type_bm:0x%x, type_bm_local:0x%x, type_bm_remote:0x%x)"
#define LE_MSG_MISMATCH_RX_PKT_CNT 3455 //"[LL] Warning: (ent:%d) rx_pkt_cnt mismatch (hw:%d, fw:%d)"
#define LE_MSG_ENC_PROC_RECV_UNEXPECTED_LLC_PDU 3456 //"[LL] Warning: (ent:%d) encryption procedure receives unexpected llc pdu (opcode:0x%x)"
#define LE_MSG_CH_MAP_UPDT_INFO 3457 //"Channel map update for pid:%d, ce:%d, instance:%d, nxt_ce:%d, map:0x%x_%x %x %x"
#define LE_MSG_HIT_CONN_ADV_ISR_INFO 3458 //"[LL][ISR] hit_conn_adv: adv_rx_slot %d adv_rx_us %d conn_req_end_slot %d tx_win_delay %d tx_win_offs_slot %d conn_win_offs_reg 0x%04x conn_win_updt_reg 0x%04x"
#define LE_MSG_GEN_LL_CONN_UPDT_REQ_NEW2 3459 //"[LL]Gen LL_CONN_UPDT_REQ (%d): cur:%d instant:%d ce_interval(%d->%d) ce_len(%d->%d) slv_l(%d->%d) sup_to(%d->%d) win_sz:%d, win_ofst:%d"
#define LE_MSG_CONN_ANCHOR_POINT_INFO 3460 //"(ent:%d) ce_count %d next_ap %d offs %d interval %d"
#define LE_MSG_GEN_LL_CONN_UPDT_REQ_CONN_ANCHOR_POINT_INFO 3461 //"[LL]Gen LL_CONN_UPDT_REQ (%d): ap %d inst %d inst_offs %d interval_slot %d"
#define LE_MSG_HIT_CONN_ADV_ISR_INFO2 3462 //"[LL][ISR] hit_conn_adv: adv_rx_slot %d adv_rx_us %d conn_req_end_slot %d tx_win_delay %d tx_win_offs_slot %d 1st_ap %d conn_win_offs_reg 0x%04x conn_win_size_reg 0x%04x"
#define LE_MSG_REVERT_WPTR_INVALID_NUM_SEGS_LEFT 3463 //"[BZDMA] Warning: (ent:%d) revert wptr with invalid num_segs_left: valid_bm 0x%x pkt_sched_fifo(start %d orig_num_pkts %d)"
#define LE_MSG_REVERT_WPTR_INVALID_NUM_SEGS_USED 3464 //"[BZDMA] Warning: (ent:%d) revert wptr with invalid count: num_used_segs %d free_segs %d count %d"
#define RF_MSG_SET_RF_OFF_POLLING_TIMEOUT 3466 //"Set RF OFF polling timeout"
#define LE_ADV_RACE_CONDITION 3467 //"LE adv race condition. Cancel + Conn_created 0x%x"
#define LE_LINK_DBG_PEND_PKT  3468 //"pend_data:%x, pend_ctrl:%d, pend_misc:%d, sched_empty:%d, bmActive:0x%x, latency:%d"
#define LE_LINK_DBG_SLV_LA  3469 //"wake ntv_clk:0x%x, cnt:0x%x"
#define LE_LINK_DBG_CE_END 3470 //"CE:%d rx_any_pkt:%d crc_error:%d, ap:0x%x, slv_clk:0x%x, ntv_clk:0x%x %d"
#define LE_S_GUARD_TIME_SLOT_RESTORT  3471 //"Restore guard_time_slots"
#define LE_S_GUARD_TIME_SLOT_MOD  3472 //"Modify guard_time_slots:%d -> %d, ww: %d -> %d (new_tx_win_size:%d, new_ce_interval:%d)"
#define LE_S_WW_VAL_OVERFLOW 3473 //"ww val slot overflow:%d, new ww_val_slot:%d"
#define LE_DROP_ADV_RPT 3474 //"event pool approaches empty. drop adv report event subevent_code %d (consists of %d rpt)"

#define LE_MSG_GEN_LL_CONN_UPDT_PROPRIETARY_IND 3475 //"[LL]Gen LL_CONN_UPDT_PROPRIETARY_IND (%d): cur:%d instant:%d ce_interval(%d->%d) slv_l(%d->%d) sup_to(%d->%d)"
#define LE_CONN_UPDT_PROPRIETARY_WRITE_CAM_SUCCESS 3476 //"[LL]connection parameter update procedure write cam success, entry = %d, ce_counter = %d, new ce_interval in CAM = 0x%x"
#define LE_CONN_UPDT_PROPRIETARY_WRITE_CAM_FAIL 3477 //"[LL]connection parameter update procedure write cam failed!!!, entry = %d, ce_counter = %d, the value of ce_interval want to write CAM = 0x%x"
#define LE_RECEIVE_CONN_PARA_UPDT_INSTANT_PASSED 3478 //"[LL] Connection Update received but Instant Passed. Entry:%d, CE_count:%d, instant:%d. Kill Connection!!"
#define LE_RECEIVE_CONN_UPDT_PROPRIETARY_IND 3479 //"[LL] Connection Update Proprietary IND received. Entry:%d. CE_Count:%d, Instant:%d, ce_int:%04x slv_la:%04x sup:0x%04x"

#define LE_MSG_GEN_LL_CTE_REQ 3480 //"[LL]Gen LL_CTE_REQ (%d): type%d len:%d payload%02x"
#define LE_MSG_GEN_LL_CTE_RSP 3481 //"[LL]Gen LL_CTE_RSP (%d): type%d len:%d"
#define LE_MSG_HANDLE_LL_CTE_REQ 3482 //"[LL]Rx LL_CTE_REQ (%d): type%d len:%d host_en(%d) host_CTE_types:0x%0x"
#define LE_MSG_HANDLE_LL_CTE_RSP 3483 //"[LL]Rx LL_CTE_RSP (%d): type%d len:%d"
#define LE_MSG_AOX_TX_TEST_MODE 3484 //"HCI LE AoX Tx Test: err 0x%02x CTE_len %d CTE_Type %d len %d(x8us) sp%d Aox_type%d(0:AoA1us 1:AoA2us 2:AoD1us 3:AoD2us) transmit_power_level: 0x%02x num_pattern%d reg 0x%04x"
#define LE_MSG_AOX_RX_TEST_MODE 3485 //"HCI LE AoX Rx Test. err 0x%02x sp%d len %d(x8us) type %d slot %dus Aox_type%d(0:AoA1us 1:AoA2us 2:AoD1us 3:AoD2us) num_pattern%d reg 0x%04x"

#define LE_MSG_FW_KILL_CONNECTION_FOR_LL_TERM_IND_RETRY_MAX 3490 //"FW Kill connection for ll_term_ind_retry_max, entry: 0x%x, max_retry_cnt: %d"
#define LE_MSG_LE_ENTRY_KILL_LINK_INTSTR_IS_QUEUED_INFO 3491 //"le_instr_queue_is_empty: 0x%x, le_entry 0x%x is queued!"
#define LE_MSG_LE_ENTRY_FW_AND_HW_CONN_STATE_MISMATCH 3492 //"FW and HW CONN STATE mismatch, conn_handle = 0x%x, connection_interval: %d"
#define LE_MSG_LE_RECV_CONN_REQ_WITH_INVALID_CE_INTERVAL_PARA 3493 //"Received invalid connection_ind: connection_interval: %d"
#define LE_MSG_LE_RECV_CONN_REQ_WITH_INVALID_SUPTO_PARA 3494 //"Received invalid connection_ind: supervision_timeout: %d"
#define LE_ARBITRATOR_INTERRUPT_LOG 3495 //"[LL] Arbitration , state: 0x%x, pre_entry: %x, pre_inst: %x, win: %x, rpt_cr_entry: %x, rpt_map: %x, rpt_anch:%x, ce_cnt: %d, rpt_type: %x, rpt_anch_v: %x, anch_clk_diff: %x, cur_handle_clk:%x, pre_pri_backup: %x"
#define LE_MSG_LL_CHANNEL_MAP_UPDATE_RENEW_INSTANT_AND_MAP 3496 //"Warning: entry %x LL_CHANNEL_MAP_UPDT pdu hasn't been sent to air, we need to modify pdu content: cur_ce_count: %d, last_sent_pkt_LLID: %d, new_instant: 0x%x, new_map: %x %x %x %x %x"

#define LE_SLAVE_CON_INT_STATUS_ERROR 3497 //" Warning!! s_con_int status error LE_REG_SLAVE_CONN_INT_STS:0x%x LE_REG_EXT_MISR: 0x%x"
#define LE_MUTI_LINK_INSTANT_HIT_ADV_GET_WANTED_AP 3498 //"Get wanted anchor point: cur_clock_slot= 0x%x, want_ap= 0x%x, base_interval_slot= 0x%x, con_win_start_clk_slot= 0x%x, con_win_end_clk_slot= 0x%x, init_tx_win_offset= 0x%x, init_tx_win_size= 0x%x, init_conn_interval= 0x%x"
#define LE_MUTI_LINK_INSTANT_HIT_ADV_CHECK_RESULT 3499 //"Check hit_adv_anchor_point result: diff= 0x%x, base_offset= 0x%x, want_ap= 0x%x, cur_clock_slot= 0x%x"

//###############################################################//
//==========================Add By Jr. Neil =============2010--09--20=====//
//define for AFH mechanism debug log message
//###############################################################//
#define AFH_INIT_CHANNEL_ASSESSMENT_MODULE 3500 //"AFH Mechanisn initialize channel assessment Parameter"
#define AFH_INIT_HOST_CHANNEL_CLASSIFICATION 3501 //"AFH Mechanisn initialize host channel classification"
#define AFH_ACCESS_CODE_MISS_INTERRUPT     3502 //"AFH_ACCESS_CODE_MISS_INTERRUPT: Channel_ID: %d Access_code_miss:%d HEC_err:%d CRC_err: %d"
#define AFH_HANDLE_CHANNEL_ASSESS_TIMER  3503 // "AFH local assess measurement time(AFH Instant): %d"
#define AFH_RX_PER_PACKET_INFO 3504 //"AFH Received Per Packet Information: Channel_ID=> %d, Access_code_miss=>%d, HEC_err=>%d, CRC_err=> %d"
#define NUM_AFH_ENABLED_CONNECTIONS 3505 //"AFH ENABLED CONNECTIONS NUMBERS: %d"
#define GENERATE_AFH_MAP_FOR_DEVICE 3506 //"Generate the AFH map for device RTK"
#define GENERATE_AFH_MAP_STATE 3507 //"Generate the AFH map STATE, piconet=>%d, AFH_STATE=> %x"
#define AFH_CAL_CHANNEL_QUALITY 3508 //"Channel index=>%d,   AFH CAL CHANNEL SCORE=> %d"
#define GENERATE_AFH_MAP_FROM_PGR_RTK 3509 //"GENERATE AFH MAP FROM PGR RTK, AFH MAP[0]=> %02x, [1]=>%02x, [2]=>%02x, [3]=>%02x, [4]=>%02x, [5]=> %02x, [6]=> %02x, [7]=> %02x, [8]=>%02x, [9]=> %02x"
#define GENERATE_AFH_MAP_FOR_RECOVERY 3510 //"GENERATE AFH MAP FOR RECOVERY, AFH MAP[0]=> %02x, [1]=>%02x, [2]=>%02x, [3]=>%02x, [4]=>%02x, [5]=> %02x, [6]=> %02x, [7]=> %02x, [8]=>%02x, [9]=> %02x"
#define ERROR_PATH_OF_AFH  3511 //"ERROR PATH OF AFH"
#define CORRECT_PATH_OF_AFH 3512 //"COREECT PATH of AFH"
#define CE_PTR_STATUS 3513 //"CE_PTR STATUS, ce_ptr->status: %d, ce_ptr->phy_piconet_id: %d, ce_ptr->afh_mode: %d"
#define AFH_CH_STATUS 3520 //"idx=>%d, STO:%d, SG:%d,SB:%d, SCO_HQ:%d,SCO_SCROE=>%d"
#define ST_AFH_AS_SLV 3521 //"Start AFH mechanism as the slave report by local measurement"
#define ERR_DEBUG 3522 //"Check error point of Satrt AFH mechanism as the slave"
#define STA_GEN_AFH  3523 //" Start Generate AFH MAP"
#define PARA_SHOWI 3524 //"Initital AFH state parameter, AFH_STATE=> %d, recovery_cnt=>%d"
#define PARA_SHOWII 3525 //"Show afh_ch_status parameter, total_pkt=>%d, good_pkts=>%d, UnkI_pkts=>%d, UnkII_pkts=>%d, bad_pkts=>%d, host_ch=>%d"
#define NUM_OF_GOOD_CHANNELS 3526 //" Number of Good channels=>%d"
#define AFHSTATE_NORMAL 3527 //" =====Now the afh state is normal state====="
#define AFHSTATE_RECOVERY 3528 //"######Now the afh state is RECOVERY state######"
#define AFHCH_STATUS 3529 //" AFH channel status,channel=>%d, total_pkts=>%d, good_pkts=>%d, bad_pkts=>%d, unknownI=>%d,unknownII=>%d"
#define NORMALCNT 3530 //"Display NOrmal cnt =>%d"
#define RECOVERYCNT 3531 //" Display RECOVERY CNT =>%d"
#define NUM_OF_BAD_CHANNELS 3532 //" Number of bad channels=>%d"
#define AFH_CAL_CHANNEL_PGR 3533  //" Channel index=>%d,  channel good packet ratio=> %d"
#define NUM_OF_CHANNEL_TH 3534 //"Channel average pkts threshold=>%d"
#define SLAVE_ACL_PATH 3535 //" Slave ACL Path for AFH "
#define NUM_OF_USED_CHANNEL 3536 //" Used channel for this AFH intstant=>%d"
#define NUM_OF_CHANNEL_AVG 3537 //"Channel average pkts of this AFH instant=>%d"
#define GENERATE_UNKNOW_MAP 3538 //"//"GENERATE UNKNOW MAP for ReCOVERY, UNK MAP[0]=> %02x, UNK MAP[1]=>%02x, UNK MAP[2]=>%02x,UNK MAP[3]=>%02x, UNK MAP[4]=>%02x, UNK MAP[5]=> %02x, UNK MAP[6]=> %02x, UNK MAP[7]=> %02x, UNK MAP[8]=>%02x, UNK MAP[9]=> %02x "
#define HEADER_Q_ST 3539 //" Channel Header Quality, Channel Index=> %d, Header Quailty=>%d"
#define AFH_CH_STATUS_NEW 3540 //"Status=> Channel_index=>%d, total pkts: %d, Good pkts: %d, HQuality: %d, SYNCMAX=>%d, AGC_IDX=>%d"
#define ADD20TIMES 3541 //" ADD to 20 good channel times =>%d"
#define NUM_OF_AVG_BAD_PKTS 3543 //"Number of Average bad pkts=>%d"
#define NUM_OF_RECOVERY 3544 //"Recovery Channel number for using=>%d"
#define NUM_OF_CEHCKE 3545 //"Check the recovery check for recovery state=>%d"
#define CHK_MASTER_PATH 3546 //"Check the master path is correctness or not"
#define CHK_TO_RECOVERY 3547 //"Check the recovery channel number=>%d"
#define CHK_SLAVE_PATH 3548 //"It's the slave path, not the master"
#define SEL_CH_FOR_REC 3549 //"Selected for recovery channel,channel=>%d, bank=>%d"
#define WLAN_EST_MIN 3550 //" WLAN MASKED Min number, 0=>%d, 1=>%d, 2=>%d,3=>%d"
#define WLAN_EST_MAX 3551 //" WLAN MASKED Max number, 0=>%d, 1=>%d, 2=>%d,3=>%d"
#define NUM_OF_TEST 3552 //" Try channels work successful and go to next step,byte=>%d, bit=>%d"
#define CHK_TO_DOWNUP 3553 //"It's the downup path..."
#define CHK_TO_UPDOWN 3554 //"It's the up to down path....."
#define CHK_TO_VAR 3555 //"Check the downtoup value=>%d"
#define WLAN_NBI_SEL 3556 //"Check the WLAN_NBI=>%d"
#define SCO_CH_STATUS 3557 //"idx=>%d, sco_total pkts: %d, Bad: %d, UnKI: %d, UnkII: %d, sco_SCORE=>%d"
#define SCO_OF_CHANNEL_AVG 3558 //"SCO avg total pkts=>%d"
#define SCO_OF_AVG_BAD_PKTS 3559 //"SCO avg bad pkts=>%d"
#define BT_AFH_STATE 3560 //"CE_status value=>%d"
#define AFH_ACL_CH_STATUS 3561 //"idx=>%d, TO:%d, G:%d,B:%d, UnI:%d, UnII:%d,HQ:%d,SCROE=>%d"
#define AFH_SCO_CH_STATUS 3562 //"idx=>%d,SCO_SCROE=>%d, SCROE=>%d"
#define PSD_CHECK 3563 //"TO check WLAN PSD Path, rssi=>AVG_RSSI=>%02x"
#define WLAN_PSD_2 3564 //"WLAN PSD by Realtek path, AVG_RSSI=>%02x"
#define WR_2_MBOX_SUC 3565 //"BT WRITE to MAILBOX SUCCESSFULLY"
#define WR_2_MBOX_FAL 3566 //"BT WRITE to MAILBOX FAI"
#define CK_PSD 3567 //"READB back PSD data to generate AFH map"
#define WIFI_PSD_DATA 3568 //"WIFI PSD DATA DATA1=>%02x, DATA2=>%02x"
#define WIFI_PSD_DATA1 3569 //""WIFI first write the psd data to BT AFH DATA1=>%02x,DATA2=>%02x"
#define WIFI_PSD_DATA2 3570 //""WIFI second write the psd data to BT AFH DATA1=>%02x,DATA2=>%02x"
#define ERROR_AFH_MAP 3571 //"======AFH MAP num is error======== used channel=>%d"
#define WLAN_PSD_RESULT 3572 //"WLAN PSD MAP, PSD MAP[0]=> %02x, PSD MAP[1]=>%02x, PSD MAP[2]=>%02x, PSD MAP[3]=>%02x, PSD MAP[4]=>%02x, PSD MAP[5]=> %02x, PSD MAP[6]=> %02x, PSD MAP[7]=> %02x, PSD MAP[8]=>%02x, PSD MAP[9]=> %02x "
#define WLAN_PSD_WRITE 3573 //"Show wifiwtmailbox value=>%d"
#define WIFI_INFO_AFH 3574 //" Check WFIF info, connect=>%d, wifi_ch=>%d, wifi_bw=>%d"
#define MASK_INFO 3575 //" WIFI INFO mask min=>%d, mask max=>%d"
#define HOST_UPDATE 3576//"HOST INFOR, chidx=>%d, badorgood=>%d"
#define AFH_MAP_BY_HOST 3577 //"AFH MAP BY HOST, AFH MAP[0]=> %02x, AFH MAP[1]=>%02x, AFH MAP[2]=>%02x, AFH MAP[3]=>%02x, AFH MAP[4]=>%02x, AFH MAP[5]=> %02x, AFH MAP[6]=> %02x, AFH MAP[7]=> %02x, AFH MAP[8]=>%02x, AFH MAP[9]=> %02x "
#define HOST_CLASS 3578 //"HOST CLASSSIFICATION, HOSt MAP[0]=> %02x, HOST MAP[1]=>%02x, HOST MAP[2]=>%02x, HOST MAP[3]=>%02x, HOST MAP[4]=>%02x, HOST MAP[5]=> %02x, HOST MAP[6]=> %02x, HOST MAP[7]=> %02x, HOST MAP[8]=>%02x, HOST MAP[9]=> %02x "
#define CHANNEL_CLASSIFY_TIMER 3579 //"Channel Classify timer has been executed"
#define BTPSD_RECOVERY 3580 //" AFH Recovery by BT PSD"

#define MSG_BLE_HW_FLOW_GO2 3584 //"LS: set le flow GO: reserved_buffers %d, free_buffers %d"
#define MSG_BLE_HW_FLOW_STOP2 3585 //"LS: set le flow STOP: reserved_buffers %d, free_buffers %d"
#define MSG_BLE_HW_TX_ACK_MISMATCH 3586 //"Warning !! tx ack mismatch - fw (rptr %d wptr %d len %d), hw (rptr %d bitmap %08x)"
#define MSG_BLE_HW_FLOW_STOP 3587 //"LS: set le flow STOP (en%d cnt%d): %d %d %d"
#define MSG_BLE_HW_FLOW_GO 3588 //"LS: set le flow GO (en%d cnt%d): %d %d %d"

#define MSG_BLE_STACK_OVERFLOW 3589 //"[BTMAC] Error !! BLE Stack Overflow !! (br_ov %d, le_ov  %d)"
#define MSG_PLC_PCM_OUTPUT_DATA 3590 //"[(%08x) PLC sample stream %d] : %04x %04x %04x %04x %04x %04x %04x %04x %04x %04x %04x %04x %04x %04x %04x %04x %04x %04x %04x %04x\n"
#define MSG_SW_TIMER_DISPATCH_WRONG_NODE 3591 //"[OS sw timer] Warnning !! We found wrong node in sw timer list of Calendar table !! (index %d, loops %d, prev %08x, func %08x, wrong node %08x)"
#define MSG_SW_TIMER_DISPATCH_ERROR 3592 //"[OS sw timer] Warnning !! The sw timer list of Calendar table is anbormal  !! (index %d, pre %08x, func %08x, cur %08x, func %08x)"
#define MSG_SW_TIMER_DISPATCH_RING_ERROR 3593 //"[OS sw timer] Warnning !! One sw timer entry  let the list of Calendar table become ring  !! (index %d,  cur %08x, func %08x)"
#define MSG_SW_TIMER_DISPATCH_NVALID_CONTENT 3594 //"[OS sw timer] Error  !! One temp sw timer entry is invalid (%d %08x %08x %08x %08x)"
#define MSG_BBPRO_MP_RXI300_HOLE_EXCEPION 3595 //"[RXI300 Hole Intr] Group %d.. ErrCode %08x ErrADR %08x-%08x ErrPLD %08x-%08x ErrTAG %08x"
#define MSG_BBPRO_RXI300_ADDR_HOLE_EXCEPION  3596 //"[RXI300 Addr Hole Intr] Warnning.. ErrCode %08x ErrADR %08x ErrPLD %08x ErrTAG %08x"

// for LE power control
#define LE_MSG_GEN_LL_POWER_CONTROL_REQ 3629 //"[LL]Gen LL_POWER_CONTROL_REQ. Entry:%d. phy_bm:%d, delta:%d, txpower:%d"
#define LE_MSG_GEN_LL_POWER_CONTROL_RSP 3630 //"[LL]Gen LL_POWER_CONTROL_RSP. Entry:%d. Min:%d, Max:%d, delta:%d, txpower:%d, apr:%d"
#define LE_MSG_GEN_LL_POWER_CHANGE_IND 3631 //"[LL]Gen LL_POWER_CHANGE_IND. Entry:%d. phy_bm:%d, Min:%d, Max:%d, delta:%d, txpower:%d"
#define LE_MSG_RECEIVE_LL_POWER_CONTROL_REQ 3632 //"[LL] LE Power Control Req received. Entry:%d. phy_bm:%d, delta:%d, txpower:%d"
#define LE_MSG_RECEIVE_LL_POWER_CONTROL_RSP 3633 //"[LL] LE Power Control Rsp received. Entry:%d. Min:%d, Max:%d, delta:%d, txpower:%d, apr:%d"
#define LE_MSG_RECEIVE_LL_POWER_CHANGE_IND 3634 //"[LL] LE Power Change Ind received. Entry:%d. phy_bm:%d, Min:%d, Max:%d, delta:%d, txpower:%d"
#define LE_MSG_ACTUAL_TX_POWER_CHANGED  3635 //"[LL] Update LE Power Control record. New_power is different from original_power. Original_power:%d, RF_mode:%d, New_power:%d"
#define LE_MSG_GET_TXGAIN_INDEX_FAIL    3636 //"[LL] Get txgain index fail!! Line:%d, conn_entry:%d, rf_mode:%d"
#define LE_PWR_CTRL_DBG_01  3637       //"[LE_PWR_CTRL] gain table -> handle: %2x, 1M:%2x, 2M:%2x, 125k:%2x, 500k:%2x"
#define LE_PWR_CTRL_DBG_02  3638       //"[LE_PWR_CTRL] phy_rate: %d, old_gain: %2x, current_gain: %2x, thermal_offset: %d, gain_offset: %d"
#define LE_PWR_CTRL_DBG_03  3639       //"[LE_PWR_CTRL] Warning: le phy transfer fail: trans_type: 0x%x, phy: 0x%x"
#define LE_PWR_CTRL_DBG_04  3640       //"[LE_PWR_CTRL] current_path_loss_zone: 0x%x, rssi_dbm: %d, path_loss_db: %d"

#define LE_RX_CRC_PKT_INFO 3660 //" [LL] CRC CHK. LE entry %d ce_cnt%d llid%d len%d RxPkt Payload 0x%02X %02X %02X %02X CRC[23:0] 0x%X%04X "
#define LE_RX_CRC_PKT_INFO_ADV 3661 //" [LL] CRC CHK. LE ADV Pkt len%d Header 0x%02X%02X Payload 0x%02X %02X %02X %02X %02X %02X CRC[23:0] 0x%X%04X "
#define LE_MSG_FW_HW_RX_PKT_MISMATCH 3662 //" Warning!! Rx Pkt Error(0x%x). en(%d), counter%d mic%d len%d hw_pdu_len%d payload_len%d iq_num%d rx_slot%d"
#define LE_MSG_FW_HW_RX_PKT_MISMATCH2 3663 //" Warning!! Rx Pkt Error(0x%x). en(%d), counter%d mic%d len%d hw_pdu_len%d payload_len %d"
#define LL_MSG_RX_FIFO_MISMATCH 3664 //"[clk %08x] WARNING!!! ACL Rx FIFO mismatch (entry %d conn_counter %d)!! rx_pkt_cnt(fw %d  hw %d) bytecnt:hw %d fw %d) wr0x%x rd0x%x rdbuf%d src%d"
#define LE_EXT_SCAN_WAKE_FROM_LPS_LOG1   3665    //"[EXT_SCAN] Wake from LPS, primary old instant = %d"
#define LE_EXT_SCAN_WAKE_FROM_LPS_LOG2   3666    //"[EXT_SCAN] Wake from LPS, primary updated instant = %d"
#define LE_EXT_SCAN_WAKE_FROM_LPS_LOG3   3667    //"[EXT_SCAN] Wake from LPS, secondary old instant = %d, add to expired task"
#define LE_EXT_SCAN_WAKE_FROM_LPS_LOG4   3668    //"[EXT_SCAN] Wake from LPS, enabled instant = %d"
#define LE_EXT_SCAN_REMOVE_ERR_TASK      3669    //"[clk[1]%d][LL][EXT_SCAN] current task err. instant %d. Remove it."
#define LE_EXT_ADV_DO_TERM_PROCEDURE     3670    //"[EXT_ADV]cur_parent->adv_ext_ind.enable = %d, do terminate procedure."
#define LE_MSG_ADV_CH_RX_INVALID_CONN_REQ 3671   //"Adv Channel Rx CONN_REQ with invalid paramater (conn_interval %d, slave_latency %d, sup_to %d), flush it."
#define LL_EXT_ADV_DECIDE_INST_LOG  3672   //"[ADV_EXT] decide ext_adv instant, cur == %d, now_clk = %d, new_inst = %d"

//####################################################################
#define MSG_CSB_STP_TX_ENABLE           3700 //"[CSB] STP Tx is enable (lt_addr %d, sdata %d, afh map %02x %02x %02x %02x %02x %02x %02x %02x %02x %02x, intv 0x%x , TO 0x%x)"
#define MSG_CSB_STP_TX_DISABLE          3701 //"[CSB] STP Tx is disable ..."
#define MSG_CSB_BEACON_TX_ENABLE        3702 //"[CSB] CSB Tx is enable (intv 0x%x TO 0x%x)"
#define MSG_CSB_BEACON_TX_DISABLE       3703 //"[CSB] CSB Tx is disable ..."
#define MSG_CSB_TX_NON_NULL_PKT         3704 //"[CSB] Set CSB Tx Pkt : type %d, len %d, ppkt %08x, data %02x %02x %02x %02x"
#define MSG_CSB_TX_NULL_PKT             3705 //"[CSB] Set CSB Tx Null Pkt (status %d)"
#define MSG_CSB_MODE_CHANGE             3706 //"[CSB] Current 3DD Mode is %d (1:CSB, 0:RP) ..."
#define MSG_CSB_TRUNCATED_PAGE          3707 //"[CSB] Truncated Page bd_addr 0x%02x%02x%02x%02x%02x%02x lt_addr:%d ce_index:%d piconet:%d"
#define MSG_CSB_TRUNCATED_PAGE_RX_ID    3708 //"[CSB] Truncated Page ID received!! clk0x%08x"
#define MSG_CSB_STP_RX_ENABLE           3709 //"[CSB] STP Rx is enable(%d)(bd_addr0x%02x%02x%02x%02x%02x%02x win/intv:%d/%d map %d TO 0x%x)"
#define MSG_CSB_STP_RX_DISABLE          3710 //"[CSB] STP Rx is disable ..."
#define MSG_CSB_RX_PKT_TYPE_WRONG       3711 //"[CSB] CSB Rx packet type is wrong(0x%02x). BR and EDR can not be enabled at the same time"
#define MSG_CSB_BEACON_RX_ENABLE1       3712 //"[CSB] CSB Rx is enable xtol%d. ltA%d, devA=0x%02x%02x%02x%02x%02x%02x, intv0x%02X, clk_ofst:0x%08x, next_instant0x%08x supTo:%d RemAccu%d"
#define MSG_CSB_BEACON_RX_ENABLE2       3713 //"      skip %d pkt_bm0x%04X Ch_map 0x%02X %02X %02X %02X %02X %02X %02X %02X %02X %02X"
#define MSG_CSB_BEACON_RX_DISABLE       3714 //"[CSB] CSB Rx is disable ..."
#define MSG_CSB_STP_RECEIVED1           3715 //"[CSB] Sync-Train Received !! bd_addr:0x%02X%02X%02X%02X%02X%02X, clk_ofst0x%08x ch_map:0x%02X %02X %02X %02X %02X %02X %02X %02X %02X %02X"
#define MSG_CSB_STP_RECEIVED2           3716 //" ==> Beacon lt_addr%d NextIns[27:0]:0x%02X%02X%02X%02X, intv:0x%02x%02x SerData:0x%02x"
#define MSG_CSB_BEACON_RECEIVED         3717 //" <== [0x%08X]Beacon received!! llid%d pkt_type%d length:%d 0x%02X%02X%02X%02X%02X%02X%02X%02X%02X%02X%02X%02X%02X%02X%02X%02X%02X%02X clk_ofst0x%08X clk_rx0x%08X"
#define MSG_CSB_SNIFF_START             3718 //" Sniff Start Interrupt. lut%d cam_ofst0x%02x afh map 0x%08x 0x%08x %04x"
#define MSG_CSB_SNIFF_END               3719 //" Sniff End Interrupt. [0x%08X]self0x%08x pid%d reg(intv0x%04x ofst0x%04x xtol0x%04x piconetInfo0x%04x UpLut0x%04x LowLut0x%04x) clock_ofst:0x%04x %04x"

//####################################################################
#define DAPE_TEST_LOG206 3806 //"[clk:0x%08X]lc_kill_scan kill page. (paging:%dslots.lt_addr:%d pid:%d bd_addr:0x%02x%02x%02x%02x%02x%02x ce_index:%d, pinfo:0x%x)"
#define DAPE_TEST_LOG207 3807 //"dape_test_log207: cur_clk:0x%x"
#define DAPE_TEST_LOG208 3808 //"dape_test_log208: ce_ptr->afh_min_interval:0x%x, ce_ptr->afh_max_interval:0x%x"
#define DAPE_TEST_LOG213 3813 //"dape_test_log213: le_reg0x%x:0x%x"
#define DAPE_TEST_LOG231 3831 //"dape_test_log231: conn_entry:%d, access_address:0x%x, win_size:0x%x, win_offset:0x%x, conn_interval:0x%x, conn_latency:0x%x, sup_to:0x%x, ch_map:0x%x %x %x %x %x, hop:0x%x, masterSCA:0x%x hop_inc:%d"
#define DAPE_TEST_LOG259 3859 //"dape_test_log259: register local device random address" 0x %04x %04x %04x "
#define DAPE_TEST_LOG260 3860 //"[LL] LL_ENC_RSP received. m:0%d, entry:0x%x, len:%d, support_enc:%d, enc_state:%d, install_key:%d"
#define DAPE_TEST_LOG261 3861 //"[LL] LL_START_ENC_RSP received. m:%d, entry:0x%x, len:%d"
#define LE_MSG_RECV_LL_ENC_RSP_INFO 3862 //"[LL] LL_ENC_RSP received. m:0%d, entry:0x%x, len:%d, support_enc:%d, enc_state:%d"
#define DAPE_TEST_LOG264 3864 //"[LL] ENCRYPTED LL_START_ENC_RSP Received. pEnc_blk->start_enc_state:%d. Send Event to Host."
#define DAPE_TEST_LOG265 3865 //"[LL] LL_START_ENC_REQ received. m:%d, entry:%d, len:%d, support_enc:%d"
#define DAPE_TEST_LOG267 3867 //"[LL] LL_ENC_REQ received, m:%d, entry:%d, len:%d, support_enc:%d, enc:%d"
#define DAPE_TEST_LOG268 3868 //"[LL] LL_FEATURE_REQ received, m:%d, entry:%d, len:%d"
#define DAPE_TEST_LOG269 3869 //"[LL] LL_FEATURE_RSP received, m:%d, entry:%d, len:%d"
#define DAPE_TEST_LOG270 3870 //"[LL] LL_PAUSE_ENC_REQ received. m:%d, entry:%d, len:%d, pause_enc_state:%d, start_enc_state:%d"
#define DAPE_TEST_LOG271 3871 //"[LL] LL_PAUSE_ENC_RSP received. m:%d, entry:%d, len:%d, pause_enc_state:%d, start_enc_state:%d"
#define DAPE_TEST_LOG272 3872 //"[LL] LL_VERSION_REQ received, m:%d, entry:%d, len:%d"
#define DAPE_TEST_LOG273 3873 //"[LL] LL_REJ_IND received, m:%d, entry:%d, len:%d"
#define DAPE_TEST_LOG274 3874 //"<= [LL] LL Ctrl PDU received, opc:0x%x m:%d ent:%d len:%d pause_enc:%d start_enc:%d counter:%d data:%02x %02x %02x %02x %02x %02x %02x %02x"
#define LE_MSG_DRIVER_CREATE_CONN 3875 //"ll_driver_create_connection: conn_entry:%d, access_address:0x%x, conn_interval:0x%x, conn_latency:0x%x, sup_to:0x%x, ch_map:0x%x %x %x %x %x, hop:0x%x, masterSCA:0x%x hop_inc:%d"

#define DAPE_TEST_LOG277 3877 //"[LL] LL_CHANNEL_MAP received. len:%d, entry:%d"
#define DAPE_TEST_LOG279 3879 //"[LL] Channel Map Update received. Entry:%d. CE_Count:%d, Instant:%d, Channel Map:0x%04x %04x %04x %04x %04x"
#define DAPE_TEST_LOG280 3880 //"[LL] Connection Update received. Entry:%d. CE_Count:%d, Instant:%d, win_size:0x%04x win_ofst:%04x ce_int:%04x slv_la:%04x sup:0x%04x ce_len:0x%04x"
#define DAPE_TEST_LOG283 3883 //"[LL] Channel Map Update received but Instant Passed. Entry:%d, CE_count:%d, instant:%d. Kill Connection!!"
#define DAPE_TEST_LOG284 3884 //"[LL] Connection Update received but Instant Passed. Entry:%d, CE_count:%d, instant:%d. Kill Connection!!"
#define DAPE_TEST_LOG293 3893 //"dape_test_log293: %d"
#define DAPE_TEST_LOG414 4114 //"dape_test_log414: slot_offset:%d, slot_offset_for_le_conn2:%d,cur_clock:0x%x, initiator->conn_interval:%d,conn_win_offset:%d,initiator->tx_win_offset:%d, slot_min:%d, slot_max:%d,(slot_min mod (conn_interval)<<1):%d, count_down:%d"
#define DAPE_TEST_LOG415 4115 //"dape_test_log415: Warning!! Conn_win_size_offset(%d) > Tx_win_size(%d)."
#define DAPE_TEST_LOG416 4116 //"dape_test_log416: slot_offset:%d, slot_offset_for_le_conn2:%d,cur_clock:0x%x, initiator->conn_interval:%d,conn_win_offset:%d,initiator->tx_win_offset:%d, slot_min:%d, slot_max:%d,tx_winsize_ofst:%d, count_down:%d state:%d"
#define DAPE_TEST_LOG417 4117 //"dape_test_log417: Warning!! Slot Overlap. Change slot_offset_for_le(%d) to slot_min(%d)."
#define DAPE_TEST_LOG424 4124 //"dape_test_log424: num_le_conn:%d, anchor_point_slot[0]:0x%x,anchor_point_slot[1]:0x%x, cur_clock:0x%x, cur_clock_slot:0x%x, count_down:%d, con_win_start_clk_slot:0x%x, conn_win_size_offset:%d, anchor_point_slot_min:0x%x"
#define DAPE_TEST_LOG425 4125 //"dape_test_log425: Warning!! Conn_interval(entry:%d):%d(1.25ms) is changed to global_interval %d(1.25ms)"
#define DAPE_TEST_LOG426 4126 //"dape_test_log426: dape_test:%d, anchor_point_slot_max:0x%x,next_anchor_point_slot_min:0x%x,ce_interval_slot_min:0x%x, conn_win_size_offset:%d, tx_win_offset:%d, next_anchor_distance:%d, next_anchor_point:0x%x, ce_interval_same:%d"
#define DAPE_TEST_LOG427 4127 //"[0x%08X][LL] Update all slaves interval: initiator %d ce_interval(%d init:%d min:%d same:%d)"
#define DAPE_TEST_LOG428 4128 //"dape_test_log428: empty_entry:%d, cur_clock_slot_offset:%d,ll_manager.conn_unit.first_slot_offset_for_le:%d, next_anchor_point_offset:0x%x, conn_intv_slot:%d"
#define DAPE_TEST_LOG430 4130 //"dape_test_log430: real_anchor_point:0x%x, ahchor_point_slot:0x%x, ll_manager.conn_unit.slot_offset_for_le:%d, le_slot_offset:%d, conn_interval_slot:%d"
#define DAPE_TEST_LOG431 4131 //"[LL]Get LE SLOT OFST: conn_entry:%d, role:%d, full_real_anchor_point:0x%x, real_anchor_point:0x%x, anchor_point_slot:0x%x, phandle->slot_offset:%d, conn_interval_slot:%d"
#define DAPE_TEST_LOG435 4135 //"dape_test_log435: switch_instant[27:0](0x%x) is too far away from native_clock[27:0](0x%x), reject and send req on our own."
#define DAPE_TEST_LOG436 4136 //"k:%d, exp:0x%x, ptr:0x%x, queued:0x%x,&ptr[k]:0x%x, count:%d,addr:0x%x, entry:0x%x, sco_num:%d, sco_index:%d"
#define DAPE_TEST_LOG438 4138 //"dape_test_log438: task_queue_full(%d %d %d)"
#define DAPE_TEST_LOG439 4139 //"dape_test_log439: pdu_timer:%d, os_timer:%d, send:%08x[%d %d] exp:%08x"
#define DAPE_TEST_LOG440 4140 //"WARNING!! PCD is still Receiving when sniff end.(%d)"

#define DAPE_TEST_LOG500 4600 //"dape_test_log500: pl_header:0x%x,rx_status:0x%x,current(rd:0x%x, wr:0x%x),pre(rd:0x%x, wr:0x%x) 0x%x %d %d"
#define DAPE_TEST_LOG501 4601 //"dape_test_log501: reg:0x%x, rd_ptr:0x%x, wr_ptr:0x%x"
#define DAPE_TEST_LOG502 4602 //"ck:0x%x,pl:0x%x,rx:0x%x,acl(rd:0x%x, wr:0x%x ,in:0x%x)fw(rd:0x%x, wr:0x%x)sco(rd:0x%x, wr:0x%x ,in:0x%x) 0x%x 0x%x %d %d"
#define DAPE_TEST_LMP_MSG_SENT_NON_EXT_PDU 4614 //"[clk:0x%08X] --> send lmp opc:%d (addr:%d pid:%d tid:%d ce:%d m:%d) - %02x %02x %02x %02x %02x %02x %02x %02x (0x%x 0x%x)"
#define DAPE_TEST_LMP_MSG_SENT_EXT_PDU 4615 //"[clk:0x%08X] --> send lmp ext.opc:%d/%d (addr:%d pid:%d tid:%d ce:%d m:%d) - %02x %02x %02x %02x %02x %02x %02x %02x (0x%x 0x%x)"
#define DAPE_TEST_LMP_MSG_RX_NON_EXT_PDU 4616 //"[clk:0x%08X] <-- receive lmp opc:%d (addr:%d pid:%d tid:%d ce:%d m:%d) - %02x %02x %02x %02x %02x %02x %02x %02x (0x%x 0x%x)"
#define DAPE_TEST_LMP_MSG_RX_EXT_PDU 4617 //"[clk:0x%08X] <-- receive lmp ext.opc:%d/%d (addr:%d pid:%d tid:%d ce:%d m:%d) - %02x %02x %02x %02x %02x %02x %02x %02x (0x%x 0x%x)"

#define DAPE_TEST_KEEP_ALIVE 4618 //"Keep Alive (%d) - pool cnt:(%d %d %d %d : %d %d %d %d : %d %d %d %d %d) acl_rx_fifo:0x%x"
#define DAPE_TEST_LOG519 4619 //"dape_test_log519: clk:0x%x, secondary lower_lut(0x%x):0x%x, upper_lut(0x%x):0x%x, primary lower:0x%x, upper:0x%x, old_lower:%x"
#define DAPE_TEST_LOG520 4620 //"dape_test_log520: master_clk:0x%x, desco:%d"
#define DAPE_TEST_LOG521 4621 //"dape_test_log521: %d, %d %d %d %d %d %d %d %d"
#define DAPE_TEST_LOG522 4622 //"dape_test_log522: %d %d"
#define DAPE_TEST_LOG523 4623 //"dape_test_log523: conn_handle:0x%x, dape_clk:0x%x"
#define DAPE_TEST_LOG524 4624 //"dape_test_log524: Start Hold mode, remote_device:%d, reg%x: %x"
#define DAPE_TEST_LOG525 4625 //"dape_test_log525: 0x%x %x %x %x %x %x"
#define DAPE_TEST_LOG526 4626 //"dape_test_log526: 0x%x %x %x %x %x %x %x %x %x %x %x %x %x %x %x %x %x %x"
#define DAPE_TEST_LOG527 4627 //"dape_test_log527: Device(0x%02x%02x%02x%02x%02x%02x) not in white list. Reject Connection Req"
#define DAPE_TEST_LOG528 4628 //"dape_test_log528: Add Legacy device to white list OK."
#define DAPE_TEST_LOG529 4629 //"dape_test_log529: No more memory. Add Legacy device to white list Fail!!"
#define DAPE_TEST_LOG530 4630 //"dape_test_log530: Remove Legacy device from white list OK."
#define DAPE_TEST_LOG531 4631 //"dape_test_log531: Device is not in the white list."
#define DAPE_TEST_LOG532 4632 //"dape_test_log532: WARNING!! White list is empty."
#define DAPE_TEST_LOG533 4633 //"dape_test_log533: Device is already in the white list."
#define DAPE_TEST_LOG534 4634 //"Link is detaching. MSS stopped."
#define DAPE_TEST_LOG535 4635 //"Remote device dosen't support role switch."
#define MAIN_MSG_KEEP_ALIVE2 4636 //"Keep Alive (%d) - pool cnt:(%d %d %d %d : %d %d %d %d : %d %d %d %d %d) sta(%04x, %04x, %04x, %04x)"
#define DAPE_TEST_LOG537 4637 //"LE_CONNECTION_COMPLETE. Master:%d, Entry:%d, AccessAddress:%x"
#define DAPE_TEST_LOG538 4638 //"le_cnt:%d, adv:%d(0x%04x), scan:%d(int0x%04x,win0x%04x),dup:%d, init:%d, counter%d(%d)"
#define DAPE_TEST_LOG539 4639 //"m:%d, en0(int:%d, counter:%d, restart:%d, sup_to:%d) en1(int:%d, counter:%d, restart:%d, sup_to:%d)"
#define DAPE_TEST_LOG540 4640 //"LE scan en/disable pending due to LE connection update. scan_en:%d, conn_entry:%d, chm_entry:%d, scan_dup:%d"
#define DAPE_TEST_LOG541 4641 //"LE scan en/disable after LE connection update. scan_en:%d, conn_entry:%d, chm_entry:%d, scan_dup:%d"
#define DAPE_TEST_LOG542 4642 //"LE Conn Updt entry:%d, reg0x22:0x%04x, reg0x24:0x%04x"
#define DAPE_TEST_LOG543 4643 //"le_cnt:%d, le_bm:%04x, adv:%d(0x%04x), scan:%d(int0x%04x,win0x%04x),dup:%d, init:%d(int0x%04x,win0x%04x) wakeup_cnt:%d, err_code:0x%x le_inst_rpt: 0x%04x"
#define DAPE_TEST_LOG544 4644 //"win_sz:%d, win_sz_ofst:%d, win_ofst:%d, interval:%d, slv_l:%d, supto:%d"
#define DAPE_TEST_LOG545 4645 //"LE_CREATE_CONN, reg0x22:0x%04x, reg0xA:0x%04x"
#define DAPE_TEST_LOG546 4646 //"[LE SELF CONN UPDT(%d)]slot_offset:(current:%d, new:%d) ce_interval:%d. TxOfst:%d"
#define LE_MSG_CONN_COMPLETE_EVENT_NEW 4647 //"LE Connection Complete: status %02xh idx %d handle %d role %d AccessAddress:0x%08x. interval %d(x1.25ms) slv_l %d"
#define DAPE_TEST_LOG548 4648 //"[LE CHK SLOT OFFSET(0x%08x)(%d)]ce_counter:(%d, updated:%d), ce_interval:(%d, ofst:%d). slv_l:%d, self_updt:%d, avoid:(%d, %d)"
#define DAPE_TEST_LOG549 4649 //"[LL] Warning! RxThEntry Mismatch(HW:%d, FW:%d)"
#define DAPE_TEST_LOG550 4650 //"[clk0x%08x]ce%d ESCO Data: 0x%02x 0x%02x 0x%02x 0x%02x 0x%02x 0x%02x 0x%02x 0x%02x 0x%02x 0x%02x 0x%02x 0x%02x"
#define DAPE_TEST_LOG551 4651 //"Broadcast Data(%d bytes): 0x%02x 0x%02x 0x%02x 0x%02x 0x%02x 0x%02x 0x%02x 0x%02x 0x%02x 0x%02x"
#define DAPE_TEST_LOG552 4652 //"BB_handle_crc_pkt. lt_addr = 0. crc_err:%d. eir:%d."
#define DAPE_TEST_LOG553 4653 //" WHCK running...Item:%d (0:SCO 1:P2P(%d))"
#define DAPE_TEST_LOG554 4654 //" Nofity WHCK running...Item:%d (0:SCO 1:P2P)"
#define DAPE_TEST_LOG555 4655 //"[clk:0x%08X] ACL-U Data received(%d bytes)!!: 0x%02x 0x%02x 0x%02x 0x%02x 0x%02x 0x%02x 0x%02x 0x%02x 0x%02x 0x%02x"
#define DAPE_TEST_LOG556 4656 //"Zero length Pkt Sent."
#define DAPE_TEST_LOG557 4657 //"ACL-U Data Tx(%d bytes)!!: 0x%02x 0x%02x 0x%02x 0x%02x 0x%02x 0x%02x 0x%02x 0x%02x 0x%02x 0x%02x"
#define DAPE_TEST_LOG558 4658 //"(acl:0x%08x sco:0x%08x)"
#define DAPE_TEST_LOG559 4659 //"[clk:0x%08X] Reg274(now:0x%04x, previous:0x%04x), latch_clk[15:0]0x%04x, latch_cnt%d  write_cnt%d"
#define DAPE_TEST_LOG560 4660 //"[clk:[now]0x%08x[pre]0x%08x] Reg274(write:0x%04x now:0x%04x), clk[1:0](latch %d, write %d), latch_cnt%d  cnt((Minus%d)read %d, diff %d, write %d)"
#define DAPE_TEST_LOG561 4661 //"[clk:0x%08X] Reg274(0x%04x), latch_clk[15:0]0x%04x,latch_clk[1:0]:%d, latch_cnt %d (0x%04xh)"
#define DAPE_TEST_LOG562 4662 //"[clk:0x%08X] Adj_inst_clk[21:1](w:0x%06x r:0x%06x) Write(adj_clk 0x%04x %04x, cnt0x%04x), Read(adj_clk 0x%04x %04x, cnt0x%04x)"
#define DAPE_TEST_LOG563 4663 //" WARNING! Device(0x%02x%02x%02x%02x%02x%02x) not in white list and connection established."
#define DAPE_TEST_LOG564 4664 //"[clk:0x%08X] Self Device Feature Not Support: Clk_Adj:%d CSB Master:%d Sync Train Master:%d"
#define DAPE_TEST_LOG565 4665 //"[clk:0x%08X] Send LMP_CLK_ADJ pdu(pid:%d instant[27:0]0x%08x %dslot %dus nbc:%d mode %d update(clk:0x%08x % us))"
#define DAPE_TEST_LOG566 4666 //"[clk:0x%08X] Clock Adjust Interrupt.(pid %d %dus)(previous: 0x%08x modify: %dslots %dus)"
#define DAPE_TEST_LOG567 4667 //"[clk:0x%08X] [PCA] Excute Response LMP_CLK_ADJ (pid:%d instant[27:0]0x%08x %dslot %dus mode %d Update(clk 0x%08x %dus))"
#define DAPE_TEST_LOG568 4668 //"[clk:0x%08X] [PCA] Send LMP_CLK_ADJ_REQ (ce_index %d pid:%d %dslots %dus, period %d)"
#define DAPE_TEST_LOG569 4669 //"[clk:0x%08X][LL Conn Updt Complete(%d)]m:%d ce_interval(1.25ms)(%d->%d) ce_len(slot)(%d->%d) slv_l(%d->%d) sup_to(10ms)(%d->%d) counter:%d"
#define DAPE_TEST_LOG570 4670 //"[LL Conn Updt Complete Param Same. No actual update(handle:%d)]ce_interval:%d(1.25ms) ce_len:%d(slot) slv_l:%d sup_to:%d(10ms)"
#define DAPE_TEST_LOG571 4671 //"[PCA] Remote device(ce:%d m:%d) Feature Not Support: Clk_Adj:%d CSB Slave:%d Sync Train Slave:%d"
#define DAPE_TEST_LOG572 4672 //"[clk:0x%08X] Receive LMP_CLK_ADJ_REQ pdu(ce_index %d pid:%d m:%d, %dslots %dus, period %d)"
#define DAPE_TEST_LOG573 4673 //"[PCA] Generate LMP_CLK_ADJ_PDU FAILED!! We are still waiting for someone's LMP_CLK_ADJ_ACK (last_id%d slv_bm 0x%04x)"
#define DAPE_TEST_LOG574 4674 //"[PCA] Receive LMP_CLK_ADJ_ACK (ce %d slv_bm 0x%04x)"
#define DAPE_TEST_LOG575 4675 //"[clk:0x%08X] LMP Clk Adj PDU Broadcast ReTx Abort (pid%d Nbc = %d)"
#define DAPE_TEST_LOG576 4676 //"[clk:0x%08X] Vendor Cmd Send LMP CLK Adj PDU. instant:0x%08x slot:%d us:%d mode:%d"
#define DAPE_TEST_LOG577 4677 //"[clk:0x%08X] Clk Adj Procedure Done. CLK_ADJ_ID:%d"
#define DAPE_TEST_LOG578 4678 //"[clk:0x%08X] [PCA] Rx LMP_CLK_ADJ (pid:%d ID:%d instant[27:0]0x%08x %dslot %dus mode %d) Current ID:%d"
#define DAPE_TEST_LOG579 4679 //"[clk:0x%08X] Latched(0x%06X %dus) write(0x%01X %dus) total(last%d latched:%d cur%d write%d last_w%d targ%d)target(%d %dus) way%d reg274:0x%04x need%d cant%d case%d"
#define DAPE_TEST_LOG580 4680 //"[clk:0x%08X] MWS Frame Sync Update. Latched(0x%08X %dus) write(0x%08X %dus) target(%d %dus) way%d reg274:0x%04x"
#define DAPE_TEST_LOG581 4681 //"PCA Updating so no sending afh map...(ce %d)"
#define DAPE_TEST_LOG582 4682 //"[PCA] Gen LMP Clk Adj based on LMP_Clk_Adj_Req...Ofst From Now:%d..Instant:0x%08x"
#define DAPE_TEST_LOG583 4683 //"(%d)Warning!! Tx not done in LE Tx Cnt Mode...(reg0x112 val: 0x%04x)"
#define DAPE_TEST_LOG584 4684 //"lc_handle_broadcast_pkt. lt_addr = 0."
#define DAPE_TEST_LOG585 4685 //" (base_plus0x%08x)Warning!! CPU Error Access (0x%08X), ERR_ACCESS_ADDR = 0x%x, ERR_ACCESS_CMD_LEN = 0x%x, ERR_ACCESS_TAGID = 0x%x, ERR_ACCESS_INFO = 0x%x"
#define DAPE_TEST_LOG586 4686 //" ACL paused(ce %d). Stop Sending lmp (%d/%d). paused_lut_index: 0x%x"
#define DAPE_TEST_LOG587 4687 //"[BZDMA] warning!! no free TxCmd entry 9, clk: 0x%08x, lc_sco_pause_status: 0x%02x"
#define DAPE_TEST_LOG588 4688 //"[LL Param REQ] Warning! LL Connection Procedure Cancelled(%d) Current Procedure:%d"
#define DAPE_TEST_LOG589 4689 //"[LL Ping REQ] Warning! LL Ping Procedure Cancelled(%d) Current Procedure:%d"
#define DAPE_TEST_LOG590 4690 //"[LL Rx Test] LE Test Triggerred!! g_modem_sram_debug_le_trig_crc_ok? %d crc_err %d num_of_rx_pkts %d num_of_rx_pkts_crc_err %d"
#define DAPE_TEST_LOG591 4691 //"[LL PHY REQ] Warning! LL PHY Update Procedure Cancelled(%d) Current Procedure:%d"
#define DAPE_TEST_LOG592 4692 //"[LL PHY UPDT (%d)] phy updt wrong state %d"
#define LE_MSG_SET_UNCONNECTED_CONN_ENTRY2 4693 //"Warning! LE set phy update wrong entry (id=%d code=%d)"
#define DAPE_TEST_LOG594 4694 //"[LL PHY UPDT(%d)] Warning! no suitable phy. Sending PHY_UPDATE_REQ with both 0. local(t %d r %d) remote(t %d r %d)"
#define DAPE_TEST_LOG595 4695 //"[clk:0x%08X][LL PHY UPDT(%d)] Gen LL_PHY_UPDATE_IND. m_to_s %d s_to_m %d instant %d ce_cnt %d"
#define DAPE_TEST_LOG596 4696 //"[clk:0x%08X][LL PHY UPDT(%d)] Gen LL_PHY_REQ. tx_phys %d rx_phys %d"
#define DAPE_TEST_LOG597 4697 //"[clk:0x%08X][LL PHY UPDT(%d)] Gen LL_PHY_RSP. tx_phys %d rx_phys %d"
#define DAPE_TEST_LOG598 4698 //"[LL PHY UPDT(%d)] Warning!! Invalid phy update parameters. no processing PHY update. (m_to_s %d s_to_m %d instant %d)"
#define DAPE_TEST_LOG599 4699 //"[clk:0x%08X][LL PHY UPDT(%d)] Phy update received but instant passed. CE_count:%d, instant:%d. Kill Connection!!"
#define DAPE_TEST_LOG600 4700 //"[clk:0x%08X][LL PHY UPDT(%d)] Rx LL_PHY_REQ. tx_phys %d rx_phys %d ce_count %d"
#define DAPE_TEST_LOG601 4701 //"[clk:0x%08X][LL PHY UPDT(%d)] Rx LL_PHY_RSP. tx_phys %d rx_phys %d ce_count %d"
#define DAPE_TEST_LOG602 4702 //"[clk:0x%08X][LL PHY UPDT(%d)] Rx LL_PHY_UPDATE_IND. m_to_s %d s_to_m %d instant %d cur %d"
#define DAPE_TEST_LOG603 4703 //"[LL PHY UPDT] decide phy trx rate. type%d local_phys(tx %d rx %d) host_phys(all %d tx %d rx %d)"
#define DAPE_TEST_LOG604 4704 //"[LL Rx Test] is_le_crc_trigered %d trig_crc_ok? %d crc_err %d num_of_rx_pkts %d num_of_rx_pkts_crc_err %d"
#define DAPE_TEST_LOG605 4705 //"[LL PHY Updt Param Same. No actual update(handle:%d)] current(t %d r %d) host(all %d t %d r %d) decided local(t %d r %d) phy_opt%d CI(host %d cur %d) should %d"
#define DAPE_TEST_LOG606 4706 //"[LL CTRL] rx REJ_EXT_PDU(0x%x) opc 0x%x reason 0x%x"
#define DAPE_TEST_LOG607 4707 //"[LL CTRL(%d)] rx %d phy_state %d current_proc %d"
#define DAPE_TEST_LOG608 4708 //"[LL CTRL(%d)] sch LLC PHY UPDATE PROCEDURE....phy_state %d current_proc %d"
#define DAPE_TEST_LOG609 4709 //"[LL Phy Updt Interrupt (%d)] m %d counter %d state %d ori(t%d r%d) new(t%dr%d) CI %d"
#define DAPE_TEST_LOG610 4710 //"[LL Phy Updt(%d)] decide phy update req parameter local(t%dr%d) remote(t%dr%d) current(t%dr%d)"
#define DAPE_TEST_LOG611 4711 //"[LL Modem DBG] LE Link Mode Triggerred!! g_modem_le_trig_crc_ok? %d ce_cnt %d ce (rx_any %d no_crc_ok %d) cnt(rx_any_pkt %d no_crc_ok %d)(no_any_pkt_received:%d, crc_ok:%d)"
#define DAPE_TEST_LOG612 4712 //"[Modem SRAM DBG] mode %d (0:adc_re 1:aagc 2:gfsk_a 3:gfsk_b 4:gfsk_c 5:eq_dpsk_a 6:eq_dpsk_b) crc_ok%d modem_dbg%d link_mode %d link_rx_any_trig %d"
#define DAPE_TEST_LOG613 4713 //"[Modem SRAM DBG] WARNING!!! unexist handle. entry :%d"
#define DAPE_TEST_LOG614 4714 //" WARNING!!! receiving unknown rsp (ent: %d, opcode 0x%x)"
#define DAPE_TEST_LOG615 4715 //"[LL PHY UPDT(%d)] WARNING!!! receiving rej ind (unknown opcode 0x%x)"
#define DAPE_TEST_LOG616 4716 //"[LL CTRL] rx REJ_PDU(%d) err 0x%x"
#define DAPE_TEST_LOG617 4717 //"WARNING!! [LL PHY UPDT(%d)] pending phy req. proc:%d"
#define DAPE_TEST_LOG618 4718 //"llc procedure collision(%d), cur_proc_type %d, send rej (opcode:%d, reason:%d)"
#define DAPE_TEST_LOG619 4719 //"[LL CTRL(%d)] rx 0x%x llc pdu. checking llc procedure collision...(%d) "
#define DAPE_TEST_LOG620 4720 //"Error gen piconet_clk_adj pdu err 0x%0x instant 0x%08x %dslot %dus mode %d"
#define DAPE_TEST_LOG621 4721 //"Error gen csb rx event 0x51. offset %d(should <=1021) len %d (should <=236)"
#define DAPE_TEST_LOG622 4722 //"Error!! Unknown Phy(%d) rate!!"
#define DAPE_TEST_LOG623 4723 //"Error!! Unknown CI!! Phy_option %d (0:no prefer 1:CI_2 2:CI_8)"
#define DAPE_TEST_LOG624 4724 //"Host Set Phy cur(t %d r %d) host(t %d r %d)phy_opt %d CI(host %d cur %d)"
#define DAPE_TEST_LOG625 4725 //"Long Range Update CI(entry%d)to %d (old %d) (0: CI=8, 125K, 1: CI=2, 500K)"
#define DAPE_TEST_LOG626 4726 //"Error!! Unknown CI!! %d (0:125k 1:500k)"
#define DAPE_TEST_LOG627 4727 //"m%d ce_interval %d(x1.25ms) ce_cnt %d Phy(T%d R%d)(1:1m 2:2m 4:codedphy) CI(T%d R%d)(0:125k 1:500k) LastRxdataCI%d Txsize%d"
#define DAPE_TEST_LOG628 4728 //"Error!! Unknown Phy(%d) rate!! (1:1M 2:2M 4:Coded Phy)"
#define DAPE_TEST_LOG629 4729 //"Error!! Unknown Phy(%d) rate!! Tx(0:1M 1:2M 2:125k 3:500k) Rx(0:1M 1:2M 2:LR)"
#define DAPE_TEST_LOG630 4730 //"Error!! Unknown CI!! g_ci_order %d CI:%d"
#define DAPE_TEST_LOG631 4731 //"LE Schedule Pkt [ci_order %d  CI%d]"
#define DAPE_TEST_LOG632 4732 //" Warning!! LE Tx Time (%d) smaller than 2704us in Coded Phy(tx Phy%d CI %d). Change to 2704us. "
#define DAPE_TEST_LOG633 4733 //" [DLE][handle 0x%x] Update Length tx_phy(current%d new%d) CI(current%d host%d)phy_updt_state%d compare(phy %d CI %d) tx(time %d size %d real size %d)"
#define DAPE_TEST_LOG634 4734 //" [DLE] Update Length tx_size(%d:%d) tx_time(%d:%d) rx_size(%d:%d) rx_time(%d:%d)"
#define DAPE_TEST_LOG635 4735 //" [clk:0x%08X] Rx LE-ACL pkt. RxStatus(0x%x 0x%x) Rx Phy %d CI:%d enc%d len %d data 0x%02X%02X%02X%02X%02X%02X%02X%02X%02X%02X (CI 0:125K 1:500K) "
#define DAPE_TEST_LOG636 4736 //" LE Instruction %d "
#define DAPE_TEST_LOG637 4737 //"m:%d, en8(int:%d, counter:%d, restart:%d, sup_to:%d) en9(int:%d, counter:%d, restart:%d, sup_to:%d)"
#define DAPE_TEST_LOG638 4738 //"[LL PHY UPDT (%d)] Issue HW PHY UPDT instant %d m:%d hw_tx_phy %d hw_rx_phy %d (0:1M 1:2M 2:125K 3:500K)"
#define DAPE_TEST_LOG639 4739 //" Warning!! HW's tx acked pkt (%d) more than FW scheduled(%d)"
#define DAPE_TEST_LOG640 4740 //" Fix LE TRX @ ch %d (Enable %d)"
#define DAPE_TEST_LOG641 4741 //" [clk %08x][LE] Enable Instance Mode Advertising %d slot or nat_clk 0x%08x instance_clk 0x%08x reg(0x44:0x%04x 0x3E:0x%04x)"
#define DAPE_TEST_LOG642 4742 //" [clk %08x][LL][ADV_EXT] Scan Request Received!! len %d Type%d RemoteAddr0x%02x%02x%02x%02x%02x%02x"
#define DAPE_TEST_LOG643 4743 //" Warning!!! HW LE H2H Timeout !!"
#define DAPE_TEST_LOG644 4744 //" Error!! Unknown LL_Phy(%d) rate!!(ci%d) (0:1M 1:2M 2:Coded Phy)"
#define DAPE_TEST_LOG645 4745 //" slave info ce_intv %d(x1.25ms) ce_cnt %d Phy(T%d R%d)(1:1m 2:2m 4:codedphy) CI(T%d R%d)(0:125k 1:500k) LastRxdataCI%d Txsize%d slv_l%d"
#define DAPE_TEST_LOG646 4746 //"en0(m%d int:%d cnt:%d restart:%d sup_to:%d t%dr%dtxCI%d) en1(m%d int:%d cnt:%d restart:%d sup_to:%d t%dr%dtxCI%d)"
#define DAPE_TEST_LOG647 4747 //" [LL] Warning!! Entry %d cnt %d phy rate not match. Tx(HW%d FW%d) Rx(HW%d FW%d) (FW 0:1M 1:2M 4:LR) (HW 0:1M 1:2M 2:125K 3:500K)"
#define DAPE_TEST_LOG648 4748 //" Ignore unexpected conn_updt_int. fw_entry:%d hw_entry:%d, CE:%d"
#define DAPE_TEST_LOG650 4750 //" [LL Phy Updt Interrupt Instant CE Early(%d)] m%d counter %d Phy_rate(m<->s):%d<->%d CI %d"
#define DAPE_TEST_LOG651 4751 //" [LL] Update Tx Phy to FW's value(HW%d FW%d)(FW 0:1M 1:2M 4:LR) (HW 0:1M 1:2M 2:125K 3:500K)"
#define DAPE_TEST_LOG652 4752 //" [DLE][handle 0x%x] Update Length tx_phy(current%d new%d) phy_updt_state%d compare(phy %d) tx(time %d size %d real size %d)"
#define LOG_SET_PICONET_CLK_ADJ_INFO 4753 //"[clk:0x%08X] pid %d clk_slot %d clk_cnt %d inst %d clkadj_ctrl_reg(ctrl0:0x%02x ctrl1:0x%02x ctrl2:0x%02x ctrl3:0x%02x)"
#define LE_GRANT_DECISION 4754 //"pre_clk_diff:0x%x, two_anch_clk_diff:0x%x, cur_clk:0x%x, cur_ent_anch:0x%x, scan_pri:%d, link_pri:%d, pre_pri_backup:%d, flag:%d, lose:%d, ignore:0x%x, window:%d"
#define LE_MUTI_LINK_INSTANT_NO_MATCH_LINK 4755 //"No match link: just return wanted_ap = 0x%x"
#define LE_MUTI_LINK_INSTANT_ONLY_ONE_MATCH_LINK 4756 //"Only one match link: just select the half window, wanted_ap = 0x%x"
#define LE_MUTI_LINK_INSTANT_CALC_WANTED_AP_BY_WIN 4757 //"Calc Multi link wanted anchor point by win: cur_clk_slot=0x%x, diff=0x%x, max_win_size=0x%x, max_base_position=0x%x, i=%d"
#define LE_MUTI_LINK_INSTANT_CALC_CONN_UPDATE_AP 4758 //"Update the conn_update_anchor_point: cur_clk_slot= 0x%x, conn_intv_slot= 0x%x, want_ap= 0x%x, base_intv_slot= 0x%x, conn_update_ap= 0x%x, conn_old_intv_slot= 0x%x"
#define LE_MUTI_LINK_INSTANT_CONN_UPT_AP_CHECK_RESULT 4759 //"Check conn_update_anchor_point result: diff= 0x%x, base_offset= 0x%x, want_ap= 0x%x, conn_update_ap= 0x%x"
#define LE_LOG_TX_ACK_WRONG_ENTRY 4760 //"Warning!! Tx ack interrupt handle wrong entry: %d"

#define MSG_LE_PRIVACY_CHECK_RPA_AH_BY_FW 5000 //"[LL][Privacy]: Address = [pRand:%03x] + [ah:%03x]: IRK: %08x%08x%08x%08x AES-128 out[23:0]: %x, result: %x"
#define MINT_OS_MALLOC_REQUEST  5001        //"[OS] Malloc: caller: 0x%x, req_type: 0x%x, bytes 0x%x"
#define MINT_OS_MALLOC_REMAINING  5002     //"[OS] Malloc Remaining: req_type: 0x%x, remaining memory: 0x%x bytes"
#define MINT_OS_MALLOC_FAIL  5003     //"[OS] Malloc Allocate Fail: req_type: 0x%x, lack of memory: 0x%x bytes"

#define MSFT_HCI_EXTENSION_RSSI_EVENT 5004 //"[HCI EXT][%d] Generate HCI_EXT_RSSI_EVENT conn_han 0x%02x rssi %d"
#define MSFT_HCI_EXTENSION_LE_MONITOR_EVENT 5005 // "[HCI EXT][%d] Generate HCI_EXT_LE_MONITOR_EVENT addr_type%d 0x%02x%02x%02x%02x%02x%02x monitor_h%d state%d"
#define MSFT_HCI_EXTENSION_INFINITE_LOOP 5006 // "[HCI EXT][%d] Warning!! Too many loops!! 0x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x"

#define LE_MSG_GEN_LL_CIS_TERMINATE_IND 5007 //"[LL] Gen LL_CIS_TERMINATE_IND: cig_id: %d cis_id %d err 0x%02x"
#define LE_MSG_PARSE_RX_TAIL_STATUS 5008  //"[LE] Parse Rx HW Tail. Total Len: %d, rx_tail_offset: %x, tail_len: %x, src: %x, status3_en: %x, status2_en: %x, iso_hit_latch_en: %x, crc_en: %x, bc_cnt: %x, valid: %x"
#define LE_MSG_ISO_DATA_C2H_POOL_CREATION_FAILED 5009 //"LE ISO H2C POOL creation failed"
#define LE_MSG_ISO_DATA_H2C_POOL_CREATION_FAILED 5010 //"LE ISO C2H POOL creation failed"
#define MSG_ALLOC_POOL_LE_ISO_C2H 5011 //"[POOL] id %02d pkt_num %02d pkt_size %04d (hci_iso_c2h_buffer_pool_handle)"
#define MSG_ALLOC_POOL_LE_ISO_H2C 5012 //"[POOL] id %02d pkt_num %02d pkt_size %04d (hci_iso_h2c_buffer_pool_handle)"
#define LE_MSG_ISO_CH_INVALID_RX_PKT 5013 //"Get ISO Channel Invalid Pkt (entry %d header %04x rxstatus %02x), cis_count:%08x%08x"
#define LE_MSG_ISO_MALLOC_NO_RESOURCE_ERROR 5014 //"Error!! No resource when LE ISO malloc in init (%08x, %08x, %08x)"
#define LE_MSG_ISO_SET_CIG_PARAM_CIG 5015 //"[ISO] Set CIG param (CIG Info): cig_id %02x, sdu_intv(%06x %06x), sca %d, pack %d, framing %d, max_latency(%04x %04x), cis_cnt %d"
#define LE_MSG_ISO_SET_CIG_PARAM_CIS 5016 //"[ISO] Set CIG param (CIS Info): cis_id %02x, max_sdu(%04x %04x), phy(%02x %02x), rtn(%02x %02x)"
#define LE_MSG_ISO_OCCUPY_CIG_CIS_INFO 5017 //"[ISO] Occupy CIG & CIS Info: result %02x, cis_cnt %d, cig_uid(%d), cis_uid(%d %d %d %d)"
#define LE_MSG_ISO_FW_GEM_CIS_PARAM 5018 //"[ISO] Gen CIS Params from host info: status %02x, cis_uid %d, max_pdu(%d %d), bn(%d %d), ft(%d %d), nse %d, iso_intv %d, se_len %d"
#define LE_MSG_ISO_FW_GEM_PACK_PARAM 5019  //"[ISO] Gen CIG Packing Params: policy %d, cis(bmap %x cnt %d, sub_intv(%d %d %d %d), cis_len(all %d, min %d)"
#define LE_MSG_ISO_SET_CIG_TEST_PARAM_CIG 5020 //"[ISO] Set CIG Test param (CIG Info): cig_id %02x, sdu_intv(%06x %06x), ft(%d %d), iso_intv(%04x), sca %d, pack %d, framing %d, cis_cnt %d"
#define LE_MSG_GEN_CIS_1ST_AP_INFO 5021 //"[ISO][nclk %08x] Gen first CIS AP:(%d %d), op %02x, ce_count(%d->%d), ce_ap(%06x->%06x), ce_intv %04x, iso_intv %04x"
#define LE_MSG_GEN_CIS_REQ_INFO 5022 //"[ISO] CIS %d Req 1st AP offset info : head %08x total_cis_len(%d->%d, min=%d) extra(%d->%d) offset %d"
#define LE_MSG_GEN_CIS_RSP_INFO 5023 //"[ISO] CIS %d Rsp 1st AP offset info : offset (min %d max %d), ce_count (%d)"
#define LE_MSG_GEN_CIS_IND_INFO 5024 //"[ISO] CIS %d Ind 1st AP offset info : ap %08x, offset %d, ce_count %d, sync_delay(cig %d cis %d), g2s_offset(%d), aa(%08x)"
#define LE_MSG_ISO_RX_LL_CIS_REQ_CIG_PARAMS0 5025 //"[ISO] recd  ll cis req info param0: cig_id %d cis_id %d phy(%d %d) max_sdu(%d %d) framed %d sdu_intv(%d %d)"
#define LE_MSG_ISO_RX_LL_CIS_REQ_CIS_PARAMS1 5026 //"[ISO] recd  ll cis req info param1: max_pdu(%d %d) nse %d sub_intv %d bn(%d %d) ft(%d %d) iso_intv %d offset(%d %d) ce_count %d"
#define LE_MSG_ISO_OCCUPY_CIG_CIS_INFO_SIM 5027 //"[ISO] Seach & Occupy  CIG & CIS Info: result %02x,  cig id %d,  cis id %d, cig_uid %d, cis_uid %d"
#define LE_MSG_ISO_RX_LL_CIS_IND_PARAMS 5028 //"[ISO] recd  ll cis ind params: ce %d, cis_uid %d, state %d, cis_offset %d, sync_delay(g %d s %d), ce_count %d, aa %08x "
#define LE_MSG_CIS_MASTER_HW_INIT_INFO 5029  //"[ISO] Gen M CIS HW Init Info: now(nclk %08x, ce_cnt %d ap %08x), cis_ap(%08x:%d:%d)->(%08x:%d)"
#define LE_MSG_CIS_SLAVE_HW_INIT_INFO 5030  //"[ISO] Gen S CIS HW Init Info: now(pclk %08x, ce_cnt %d ap %08x), cis_ap(%08x:%d:%d)->(%08x:%d), ww_ap(%08x:%d)"
#define LE_MSG_HW_CIS_EVT_END_INTR_INFO 5031  //"[ISO] ISO HW event end intr!! (ent %d reg0 %04x reg1 %04x bm_cis_updt %x)"
#define LE_MSG_HW_CIS_M_CONN_INTR_INFO 5032  //"[ISO] ISO HW master cis conn intr!! (ent %d  hw_status %04x"
#define LE_MSG_HW_CIS_S_CONN_INTR_INFO 5033  //"[ISO] ISO HW slave cis conn intr!! ch_map %04x, hw_status %04x "
#define LE_MSG_CIS_CLEANUP_INFO 5034  //"[ISO] cleanup cis channel : type %d, cis_uid %d, sw state %d, hw reason %d"
#define LE_MSG_CIS_TX_ACKED_EVENT_END 5035  //"[ISO] tx iso data acked in cis iso event end: id %d, hw_bmap %08x fw_bmap %08x, acked (le %d,  bzdma %d)"
#define LE_MSG_CIS_RECEIVE_PACKET 5036 //"[ISO] iso packet is received: id %d, statu %x, plen %d, cis_rxcnt %d, hdr (%04x), dat (%08x-%08x-%08x-%08x-%08x)"
#define LE_MSG_CIS_TIME_OFFSET_GEN 5037 //"[ISO] new sdu is received: id %d, packet counter %d, expire %d,  (expected: time_offset %08x, cis_ap %d) "
#define LE_MSG_CIS_RX_TEST_INFO_UPDT 5038 //"[ISO] rx test mode report: id %d, mon clk slot (%08x to %08x), (valid %d, miss %d, fail %d, all %d)"
#define LE_MSG_CIS_RX_TEST_FRAME_PKT_INFO 5039 //"[ISO] recd framed pkts in rx test mode: id %d, start %d end %d, len %d, rxcnt_hw %d, pktcnt (rx %d, exp %d), refer %d, isocnt %d, fail %d, valid %d"
#define LE_MSG_HW_CIS_CH_INFO_MORE 5040 //"[ISO] hw cis ch more init info: prnsubevt_lu %d, subevt_indx %d, ch_idx %d "
#define LE_MSG_HW_SCHEDULE_PEND_CIS_REQ_INFO 5041  //"[ISO] Schedule Pending CIS REQ: cis_uid %d bmap 0x%x"
#define LE_MSG_READ_ISO_REG_INFO 5042  //"[ISO] rd le reg value: index %d, cis_uid %d, offset 0x%x, value 0x%x"
#define LE_MSG_CIS_TX_TEST_SDU_DATA_INFO 5043 //"[ISO] framing tx data list pattern (%d): type %d, msdu %d, mpdu %d, seq %d, time_offset %d, sdu_sz %d, dat_ptr 0x%08x"
#define LE_MSG_CIS_SLAVE_HW_INIT_INFO2 5044  //"[ISO] Gen S CIS HW Init Info2: sn %d, nesn %d, TxPLC %d, RxPLC %d, CisEvt %d"
#define LE_MSG_CIS_INIT_TXDATA_INFO 5045  //"[ISO] Init CIS Tx Data Path: cis_uid %d, bn %d, TxPLC %d, PktCnt %d, cur_cisEvtCnt %d, tar_cisEvtCnt %d"
#define LE_MSG_CIS_SUPERVISION_TIMEOUT 5046  //"[ISO] Supervision timeout in CIS link: cis_uid %d, no_crc_ok %d, rx_any %d, crc_ok%d, no_rx_any %d, last_cis_cnt %d"
#define LE_MSG_SHOW_SET_CIG_TEST_ERR_STATE 5047  //"[ISO] Error to handle le set cig param test cmd: %x"
#define LE_MSG_SHOW_SET_CIG_ERR_STATE 5048  //"[ISO] Error to handle le set cig param cmd: %x"
#define LE_MSG_SHOW_CIS_REQ_ERR_STATE 5049  //"[ISO] Error to handle ll cis req: %x"
#define LE_MSG_SHOW_CIS_RSP_ERR_STATE 5050  //"[ISO] Error to handle ll cis rsp: %x"
#define LE_MSG_SHOW_CIS_IND_ERR_STATE 5051  //"[ISO] Error to handle ll cis ind: %x"
#define LE_MSG_SHOW_BW_CHECK_ERROR 5052  //"[ISO] Error !! No enough bandwidth to create CIS (cis_uid %d, ce_intv %d, iso_intv %d, cis_len %d)"
#define LE_MSG_SHOW_HCI_C2H_ISO_DATA_INFO 5053  //"[ISO] send HCI iso c2h pkt: ppkt %08x, ch %d, flag (pb=%d, ts=%d, ps=%d), len(%d, %d), ts %d, seqn %d "
#define LE_MSG_CIS_RX_TEST_UNFRAME_PKT_INFO 5054 //"[ISO] recd unframed pkts in rx test mode: id %d, start %d, end %d, len %d, rxcnt %d, pktcnt (rx %d, exp %d), index %d, SEcnt %d, fail %d, miss %d, valid %d"
#define LE_MSG_ISO_RX_INVALID_FRAMED_PKT 5055 //"[ISO] Warning!!Found invalid framed pdu - cis_uid %d, PLcnt %d, len %d (state 0x%x, left %d, sdu_len %d, offset %d)"
#define LE_MSG_RX_ERR_HCI_ISO_DATA_PKT 5056 //"[ISO] Warning!!error hci iso data pkt is received: ppkt %08x, pb_flag %d, ts_flag %d, ch %d, len %d, state %d"
#define LE_MSG_CIS_FIRST_SYNC_INFO 5057 //"[ISO] CIS creating to established info: cis_uid %d, cis cnt %d, ce cnt %d, rx_cnt %d, clk %08x"
#define LE_MSG_H2C_UNFRAMED_FRAG_INFO 5058 //"[ISO] gen CIS unframe pdu info: id %d, left pdu sz %d, left p-sdu sz %d, node %08x (head %08x, tail %08x), list (head %08x, cnt %08x)"
#define LE_MSG_H2C_FRAMED_FRAG_INFO 5059 //"[ISO] gen CIS frame pdu info: id %d, left pdu sz %d, left p-sdu sz %d, node %08x (head %08x, tail %08x), list (head %08x, cnt %08x)"
#define LE_MSG_SHOW_HCI_C2H_ISO_DATA_INFO2 5060  //"[ISO] send HCI iso c2h pkt: ppkt %08x, ch %d, flag (pb=%d, ts=%d, ps=%d), len(%d, %d), ts %d, seqn %d, data: %02x %02x %02x %02x"
#define LE_MSG_SET_UNFRAMED_CIS_ERR_STATE 5061  //"[ISO] Error to generate_cis_unframed_parameters_from_host_info: id %d, state %x"
#define LE_MSG_SET_FRAMED_CIS_ERR_STATE 5062  //"[ISO] Error to generate_cis_framed_parameters_from_host_info: id %d, state %x"
#define LE_MSG_CHECK_CIS_MAP 5063  //"[ISO] check current cis map: hw %x, fw %x, pend cis req %x %x, reason %x"
#define LE_MSG_CHECK_CIS_CONN_INT_EVT 5064  //"[ISO] check cis conn int evt: id %d, state %d, reason %d"
#define LE_MSG_H2C_FRAMED_FRAG_INFO01 5065 //"[ISO] gen CIS frame pdu info: node %08x (head %08x, tail %08x)"
#define LE_MSG_H2C_UNFRAMED_FRAG_INFO02 5066 //"[ISO] gen CIS unframe pdu info: id %d, left pdu sz %d, left p-sdu sz %d, list (head %08x, cnt %08x)"
#define LE_MSG_RM_CIS_FROM_CIG_INFO 5067 //"[ISO] rm cis from cig (%d): old %x -> new %x, list update (fw:%d ps:%d)"
#define LE_MSG_INSERT_CIS_FROM_CIG_INFO 5068 //"[ISO] insert cis from cig (%d): old %x -> new %x, list update (fw:%d ps:%d)"
#define LE_MSG_SHOW_GEN_CIS_OFFSET_ERROR 5069  //"[ISO] Error !! CIS Conflict with its associated CE (con_uid %d, ce_intv %d, cis_nse %d, cis_sub_intv %d, cis_offset %d, offset_bond %d)"
#define LE_MSG_PROFILE_C2H_SDU_CNTS_B4_ISO_END 5070 //"[ISO] c2h sdu cnts b4 iso end (id %d, unit:us): ref iso ap (0x%08x), sdu ap ap (0x%08x), iso_intv %d, sdu_intv %d"
#define LE_MSG_ISO_FW_MODIFY_CIG_FRAMING_PARA 5071 //"[ISO] Warining! Change Framing bit because framing is 0 and the sdu interval is not an integar multiple of the iso interval: framing changed to %d, sdu_intv_m2s: %d, sdu_intv_s2m: %d"
#define LE_MSG_ISO_FW_MODIFY_BIG_FRAMING_PARA 5072 //"[ISO] Warining! Change Framing bit because framing is 0 and the sdu interval is not an integar multiple of the iso interval: framing changed to %d, sdu_intv: %d"
#define LOG_BIS_GROUP_AP_WORKAROUND_LOG 5073 //"[ISO] h2d clock latch: clock:%d, bis_uid:%d, sync_clk:%d, pn_clk:(%d, %d, %d), diff:%d, cam_ap_native:%d, ref_ap:%d, free_count:%d"
#define LOG_CIS_DEBUG_PAYLOAD_CNT2      5074 //"[ISO] CIS FILL PAYLOAD CNT, cis_ce_count_0: 0x%x, cis_ce_count_1: 0x%x, hw_next_txplcnt_0_32: 0x%x, fill_txplcnt_0: 0x%x, fill_txplcnt_1: 0x%x"
#define LE_MSG_BIG_CHECK_AND_CHANGE_MAP 5075  //"[ISO] Change Channel Map at Next BIG End: big_uid:%d, bis_uid:%d, channel_map:0x%x%x -> 0x%x%x"

#define LE_MSG_ISO_CREATE_BIG_PARAM 5100 //"[ISO] Create BIG param (BIG Info): big_handle %d, adv_handle %d, bis_cnt %d, sdu_intv(%d), max_sdu(%d), max_latency(%d), rtn %d, phy %d, pack %d, framing %d, enc %d"
#define LE_MSG_ISO_CREATE_BIG_TEST_PARAM0 5101 //"[ISO] Create BIG test param (BIG Info0): big_handle %d, adv_handle %d, bis_cnt %d, sdu_intv %d, iso_intv %d, max_sdu %d, max_pdu %d"
#define LE_MSG_ISO_CREATE_BIG_TEST_PARAM1 5102 //"[ISO] Create BIG test param (BIG Info1): nse %d, phy %d, pack %d, framing %d, bn %d, irc %d, pto %d, enc %d"
#define LE_MSG_ISO_CREATE_BIG_SYNC_PARAM 5103 //"[ISO] Create BIG sync param: big_handle %d, sync_handle %d, enc %d, mse %d, big_sync_to %d, num_bis %d"
#define LE_MSG_SHOW_CREATE_BIG_ERR_STATE 5104  //"[ISO] Error to handle le create big cmd: %x"
#define LE_MSG_SHOW_CREATE_BIG_TEST_ERR_STATE 5105  //"[ISO] Error to handle ll create big test cmd: %x"
#define LE_MSG_SHOW_CREATE_BIG_SYNC_ERR_STATE 5106  //"[ISO] Error to handle le create big sync cmd: %x"
#define LE_MSG_SHOW_BIGINFO_ERR_STATE 5107  //"[ISO] Error to handle le BIGInfo: %x"
#define LE_MSG_ISO_GET_BIGINFO0 5108 //"[ISO] Get ACAD BIGInfo0: sync_handle %d, sync_ref_clk (slot 0x%08x, us %d), big_uid %d, big_off %d (unit:%d), afh_map 0x%02x%08x, bisPLcnt 0x%02x%08x"
#define LE_MSG_ISO_GET_BIGINFO1 5109 //"[ISO] Get ACAD BIGInfo1: iso_intv %d, num_bis %d, nse %d, bn %d, sub_intv %d, pto %d, bis_spacing %d, irc %d, max_pdu %d, SeedAA %08x"
#define LE_MSG_ISO_GET_BIGINFO2 5110 //"[ISO] Get ACAD BIGInfo2: sdu_intv %d, max_sdu %d, BaseCRCInit %04x, phy %d, framing %d, enc %d"
#define LE_MSG_ISO_GET_BIGINFO_ENC_PART 5111 //"[ISO] Get ACAD BIGInfo (msb to lsb): GIV=0x 08%x %08x, GSKD= 0x %08x %08x %08x %08x"
#define LE_MSG_ISO_CAM_WRITE_ERR 5112 //"[ISO] Write LL BIS Cam Error (addr=%x, data=%d) !!"
#define LE_MSG_ISO_CAM_READ_ERR 5113 //"[ISO] Read LL BIS Cam Error (addr=%x) !!"
#define LE_MSG_BIG_SECURITY_VERIFY 5114 //"[ISO] BIG Security Sample Data Verify (event %d, error code %d) : %08x %08x %08x %08x"
#define LE_MSG_ISO_CREATE_BIG_PARAM_ERROR 5115 //"[ISO] Create BIG param Error: framing %d, state %x"
#define LE_MSG_CHECK_BIS_CONN_INT_EVT 5116  //"[ISO] check bis conn int evt: id %d, state %d, reason %d"
#define LE_MSG_BIS_TX_ACKED_EVENT_END 5117  //"[ISO] tx bis data acked in bis iso event end: id %d, hw_bmap %08x fw_bmap %08x, acked (%d)"
#define LE_MSG_BIS_RECEIVE_PACKET 5118 //"[ISO] iso bis packet is received: id %d, statu %x, plen %d, bis_rxcnt %d, hdr (%04x), dat (%08x-%08x-%08x-%08x-%08x)"
#define LE_MSG_BIG_FIRST_SYNC_INFO 5119 //"[ISO] BIG syncing to synced info: big_uid %d, bis_uid %d, bigEvtcnt %d, clk %08x"
#define LE_MSG_BIS_INIT_TXDATA_INFO 5120  //"[ISO] Init BIS Tx Data Path: bis_uid %d, bn %d, TxPLC %d, PktCnt %d, cur_bigEvtCnt %d, tar_bigEvtCnt %d"
#define LE_MSG_ISO_CREATE_BIG_PARAM_GEN 5121 //"[ISO] Generate BIG param (BIG Info): max_pdu %d, iso_intv %d, bn %d, nse %d, irc %d, pto %d"
#define LE_MSG_BIG_CLEANUP_INFO 5122  //"[ISO] cleanup big channel : type %d, big_uid %d, sw state %d, hw reason %d"
#define LE_MSG_ISO_CREATE_BIG_COM_PARAM_GEN 5123 //"[ISO] Generate BIG param (BIG Info): seed_aa %08x, sub_intv %d, bis_spacing %d, sync_dly %d, trans_latency %d, ctrl_subevt_len %d, bw %d"
#define LE_MSG_ISO_BIG_TX_AP_INFO 5124 //"[ISO] BIG Tx AP Info: cur clk (slot %08x, us %d), bis_num %d, aa %08x, bis_ap (slot %08x, us %d)"
#define LE_MSG_ISO_BIG_ENCRYPTION_INFO 5125 //"[ISO] BIG Encrypt Info: GIV = 0x%08x%08x, GSK = 0x%08x%08x%08x%08x"
#define LE_MSG_ISO_GEN_BIGINFO_INFO0 5126 //"[ISO] Gen BIGInfo 0: nclk[0x%08x:%d], ref_pap[0x%08x:%d], pa_off:%0d, ref_bap[0x%08x:%d], bige_cnt[%d->%d], big_off:%d"
#define LE_MSG_ISO_INIT_BIG_TX_AP_INFO 5127 //"[ISO] Gen BIG AP: cur clk (slot %08x, us %d), ref_pa_ap (slot %08x, us %d), adv_handle %d, pa_intv %d, pa_len %d"
#define LE_MSG_ISO_INIT_BIG_SYNC_AP_INFO0 5128 //"[ISO] Gen BIG Sync AP0: clk (slot %08x, us %d), pa_ap (slot %08x, us %d, big_off %d), num %d, aa %08x, bis_ap (slot %08x, us %d),  bis_ap_ww (slot %08x, us %d), evtcnt %d"
#define LE_MSG_ISO_INIT_BIG_SYNC_AP_INFO1 5129 //"[ISO] Gen BIG Sync AP1: num %d, aa %08x, bis_ap (slot %08x, us %d),  bis_ap_ww (slot %08x, us %d)"
#define LE_MSG_BIG_CONTROL_RECEIVE_PACKET 5130 //"[ISO] iso big control is received : bis_uid: %x, big_opcode: %x, last_rcv_plc: %x, cur_rcv_plc: %x"
#define LE_MSG_BIG_CHANNEL_MAP_UPDATE 5131 //"[ISO] BIG Issue Channel Map Update: big_id: %x, channel: %04x%08x, big_instance: %x"
#define LE_MSG_BIG_CHANNEL_MAP_UPDATE_INTERRUPT 5132 //"[ISO] BIS Channel Map Updated: bis_id: %x, channel in cam: %04x%08x, big_instance: %x"
#define LE_MSG_BIG_TERMINATE_COMMAND 5133 //"[ISO] BIS Issue Termiante: current bis map: 0x%04x, issued kill map: 0x%04x"
#define LE_MSG_BIS_RX_COLLECTOR_HANDLE 5134 //"[ISO Rx] BIS Handle Rx Collector From %x(1:after_irc): bis_id: 0x%x, map: 0x%08x, rptr: 0x%x, rptr_region: 0x%x ~ 0x%x, node_index: 0x%x, active: 0x%x, lost: 0x%x"
#define LE_MSG_BIS_RX_COLLECTOR_ALLOCATE_JUDGE 5135 //"[ISO Rx] BIS Rx Judge if Allocate Node: bis_id: 0x%x, rx_collecotr_map: 0x%08x,  idx: %d, active: %d, sw_bmask: 0x%08x"
#define LE_MSG_INIT_BIG_TERMINATE_PROC_ERR 5136 //"[ISO] initiate big terminate procedure error: big_uid %d, cause 0x%x"
#define LE_MSG_INIT_BIG_CHMAP_IND_PROC_ERR 5137 //"[ISO] initiate big channel map procedure error: big_uid %d, cause 0x%x"
#define LE_MSG_INIT_BIG_TERMINATE_PROC 5138 //"[ISO] initiate big terminate procedure: big_uid %d,  reason %x, inst %04x"
#define LE_MSG_INIT_BIG_CHMAP_IND_PROC 5139 //"[ISO] initiate big channel map procedure: big_uid %d, map 0x%02x%08x, inst %04x"
#define LE_MSG_BIG_OUT_OF_WW_WRANNING 5140 //"[ISO] warnning : BIS (%d) lost sync - out of ww (state %d) !!"
#define LE_MSG_TUNE_BIG_PARAMS 5141 //"[ISO] Tuning BIG params to reduce BW: bn %d, irc %d, nse %d, pto %d"
#define LE_MSG_BIG_TUNE_MEU_REGS 5142 //"[ISO][Warn] bis_id: %d (tx_sca: %d) change anchor point at event 0x%x%08x: ap CAM:[0x%x:0x%x], ap meu: [0x%x:0x%x], ap compensate: [0x%x:0x%x], ww tune: [%d -> %d]"
#define LE_MSG_BIG_CHECK_BIS_ANCHOR 5143  //"[ISO][Warn] bis_id: %d(bis_num: %d) got wrong ap at event 0x%x%08x:. ap CAM:[0x%x:0x%x](%x) move to [0x%x:0x%x](%x), lead ap CAM: [0x%x:0x%x](%x), bis_spacing: %x"
#define LE_MSG_GENERATE_BIG_COMPLETE 5144  //"[ISO] Generate BIG Complete Event (0x3e1b) after sending PA BIGinfo. PA event count: %x"
#define LE_MSG_BIG_NEXT_AP_SLOT_BOUNDARY 5145  //"[ISO][Warn] bis_id: %d: Try to Set anchor point wraparound. ap_us: %x"
#define LE_MSG_ISO_GET_MISC_MODE_FAIL 5146  //"[ISO][Warn] ISO get misc node fail. left misc count: %d "


#define SDIO_CRC_ERR_INT 5600 //"SDIO CRC Error interrupt: intr_status: %x cmd_err_cnt: %02d data_err_cnt: %02d"

#define BRUCE_TEST_LOG5605 5605//"Calculated and current AFH maps are same. No LE_CTRL PDU is sent."
#define BRUCE_TEST_LOG5606 5606 //" (PSD)Warning!!PSD scan maybe timeout ch=%d, Invalid value=%x"
#define BRUCE_TEST_LOG5607 5607 //" (PSD)Warning!!Invalid value %04d"
#define BRUCE_TEST_LOG5608 5608 //" (PSD)Warning!!Invalid value %x"
#define BRUCE_TEST_LOG5609 5609 //" (PSD)Warning!!Maybe occur timeout"
#define BRUCE_TEST_LOG5610 5610 //" (PSD)modemreg 0x14=0x%04X, 0x3C=0x%04X ,BlueWizreg 0x220=0x%04X ,0x222=0x%04X ,0x224=0x%04X ,psd_ce_index=%02d, psd_count_temp=%02d, psd_count=%02d"
#define BRUCE_TEST_LOG5611 5611 //" (PSD)ch_index=%d, afh_map_modem_psd=0x%x, mask_ch=0x%x, psd_report=%d, psd_th1=%d,  num_gd_ch=%d"
#define BRUCE_TEST_LOG5612 5612 //" (PSD)recovery I %d"
#define BRUCE_TEST_LOG5613 5613 //" (PSD)recovery II %d"
#define BRUCE_TEST_LOG5614 5614 //" (PSD)recovery III ch_num=%d ,loc=%d"
#define BRUCE_TEST_LOG5615 5615 //" (PSD)recovery III force %d"
#define BRUCE_TEST_LOG5616 5616 //" (PSD)clk:%08x, afh_map: %02X, %02X, %02X, %02X, %02X, %02X, %02X, %02X, %02X, %02X, th1(%d)"
#define BRUCE_TEST_LOG5617 5617 //" (PSD)Warning!!No completed any PSD scan, No update afh_map_modem_psd %d"
#define BRUCE_TEST_LOG5618 5618 //" (PSD)ch_num(part1)= %02d"
#define BRUCE_TEST_LOG5619 5619 //" (PSD)ch_num(part2)= %02d"
#define BRUCE_TEST_LOG5620 5620 //" (PSD)ch_num=%02d, psd_count=%02d, TH_2M=%d, TH_3M=%d, data_rate=%2d, psd_th1=%d, rssi_dbm=%d"
#define BRUCE_TEST_LOG5621 5621 //" (PSD)recoveryII scan unuse wifi ch. loc=%d, ini_idx=%d, wifi_ch=%d"
#define BRUCE_TEST_LOG5622 5622 //" (PSD)recoveryIII Sequentially open wifi ch.loc=%d, ini_idx=%d, wifi_ch=%d"
#define BRUCE_TEST_LOG5623 5623 //" (PSD)Testing!! %d ""
#define BRUCE_TEST_LOG5624 5624 //"c%02d= %04d, c%02d= %04d, c%02d= %04d, c%02d= %04d, c%02d= %04d, c%02d= %04d, c%02d= %04d, c%02d= %04d, c%02d= %04d, c%02d= %04d"
#define BRUCE_TEST_LOG5625 5625 //" (PSD)wifi_pwr_avg: %04d, %04d, %04d, %04d, %04d, %04d, %04d, %04d, %04d, %04d, %04d, %04d, %04d, %02d"
#define BRUCE_TEST_LOG5626 5626 //" (PSD)wifi_index  : %02d, %02d, %02d, %02d, %02d, %02d, %02d, %02d, %02d, %02d, %02d, %02d, %02d, %02d"
#define BRUCE_TEST_LOG5627 5627 //" (PSD)fast_screen_wifi: %02d, %02d, %02d, %02d, %02d, %02d, %02d, %02d, %02d, %02d, %02d, %02d, %02d, %02d"

#define BRUCE_TEST_LOG5628 5628 //"avg_dc %02d= %04d, c%02d= %04d, c%02d= %04d, c%02d= %04d, c%02d= %04d, c%02d= %04d, c%02d= %04d, c%02d= %04d, c%02d= %04d, c%02d= %04d"
#define BRUCE_TEST_LOG5629 5629 //"gain_index c%02d= %04d, c%02d= %04d, c%02d= %04d, c%02d= %04d, c%02d= %04d, c%02d= %04d, c%02d= %04d, c%02d= %04d, c%02d= %04d, c%02d= %04d"
#define BRUCE_TEST_LOG5630 5630 //"temp c%02d= %04d, c%02d= %04d, c%02d= %04d, c%02d= %04d, c%02d= %04d, c%02d= %04d, c%02d= %04d, c%02d= %04d, c%02d= %04d, c%02d= %04d"
#define BRUCE_TEST_LOG5631 5631 //"diff_mode= %02d, afh_map: %02X, %02X, %02X, %02X, %02X, %02X, %02X, %02X, %02X, %02X"
#define BRUCE_TEST_LOG5632 5632 //"(PSD)ble_get_info psd_count=%02d,psd_th1=%d,now_rssi=%d,rssi_dbm=%d, rssi_samples=%d, rssi_value_acc=%d"
#define BRUCE_TEST_LOG5633 5633 //"(PSD)dual_get_info psd_count=%02d,psd_th1=%d,now_rssi=%d,rssi_dbm=%d, rssi_samples=%d, rssi_value_acc=%d,index=%d,now_data_rate=%d"
#define LOG_PSD_SCAN_PERIOD_CHANGE 5634 //"(PSD) change psd scan period:%d (ms)"
#define LOG_PSD_START_CHANGE_TIMER 5635 //"(PSD) start change scan period timer trigger_time:%d (ms)"

#define MSG_BT_WDG_TIMEOUT_DBG 5800 //"Wdg_Timeout!!!(pre_stats) isr %d, isr_bm %02x,  cpu_idle %d, sig_id %d, isr_cause %08x, isr_cnt %d, last_epc 0x%08x, ra 0x%08x "
#define MSG_BT_TIMER_DBG 5801 //"[Timer] Handle %08x cal_idx %x cnt %x val %08x func %08x type %x args %08x next %08x state %x tick %08x"

#define LEGACY_RX_INT_INFO  5802 //"[RX INT] lt_addr:4/piconet_id:4/hec_error:4/crc_error:4/prev_seqn:4/seq:4/arqn:4/pkt_type:4=0x%08x, lut_index:16/slot_offset:16=0x%08x, packet_header:16/payload_header:16=0x%08x, piconet_clk=0x%x, rxfifo(acl 0x%08x sco 0x%08x), acl_rx_fifo error:%d"
#define LEGACY_IDLE_LOG 5803 //"BR/EDR status: hlc_num:%d, acl_num:%d, sniff_num:%d, esco_num:%d, status=0x%x([7:0]:is_adding_esco, [15:8]:master_link_cnt, [23:16]:device_status, [31:24]:lc_cur_dev_state), bb_link_flow_control_mask=0x%x, bt_fw_feature=0x%x, bt_fw_feature2=0x%x, timer_isr_en.d8=0x%x, 0x32=0x%x, pn0_info=0x%x, pn1_info=0x%x, pn2_info=0x%x, pn3_info=0x%x"
#define ROLE_SWITCH_INSTANT 5804 //"cur_clk=0x%x (unit: slot), switch_instant=0x%x (unit: slot), diff=0x%x, native_clk=0x%x (unit: half slot)"
#define MULTI_PKT_TYPE_LOG  5805 //"am_addr=%d, piconet_id=%d, lut_index=%d, ext_lower_lut_address=0x%x, ext_lut_contents=0x%x, default_pkt_type=0x%x, is_ext_lut_enable=%d, g_if_enable_multiple_pkt_type_decision_for_tx=%d, if_last_tx_nbc_timeout=%d, ptt_status=%d, pkt_type_lut=0x%x"
#define L2CAP_PKT_INFO  5806 //"[L2CAP PKT] am_addr=%d, piconet_id=%d, acl_data_total_length=0x%x, l2cap_pdu_len=0x%x, packet_boundary_flag=%d"
#define L2CAP_PKT_LEN_MISMATCH 5807 //"[L2CAP PKT] acl_data_total_length is mismatch with l2cap_pdu_len!!"
#define L2CAP_PKT_CONTENT 5808  //"[L2CAP PKT] 0x%02x 0x%02x 0x%02x 0x%02x 0x%02x 0x%02x 0x%02x 0x%02x"
#define LEGACY_TX_INT_INFO  5809 //"[TX INT] lt_addr:4/piconet_id:4/ce_index:8/tx_pkt_type:8/tx_id:8=0x%08x, tx_status:16/schd_ce:4/schd_tx:4/schd2_ce:4/schd2_tx:4=0x%08x, lut_index=%d, upper_lut:16/lower_lut:16=0x%08x, piconet_clk=0x%x, aes_st_hang_on_5 %d"
#define SNIFF_START_INT_INFO  5810 //"[SNIFF START INT] lt_addr=%d, piconet_id=%d, ce_index=%d, piconet_clk=0x%x, native_clk=0x%x, anchor_point: 0x%x, next_next_sniff_instant=0x%x"
#define LEGACY_FEATURE_CACHE  5811 //"Receive page 0 feature of ce_index=%d"
#define LEGACY_EXT_FEATURE_CACHE  5812 //"Receive page %d feature of ce_index=%d"
#define SETTING_FOR_HW_SNIFF_TRANSITION_MODE 5813 //"bt_option_feature_param.bt_fw_feature.use_hw_sniff_transition=%d, ce_index=%d, lut_index=%d, rem_dev_role=%d, lower_lut_content=0x%x, upper_lut_content=0x%x, tolerance=%d"
#define CLEAR_MSS_STATUS_FAIL   5814    //"!!Cannot find corresponding ce_index! bd_addr=0x%x 0x%x 0x%x 0x%x 0x%x 0x%x"
#define SNIFF_FIRST_INSTANT_INFO 5815   //"offset=%d, delta_offset=%d, new_dsniff=%d, tar_clk=0x%x(unit:slot), Dsniff=%d(unit:slot), Tsniff=%d(unit:slot)"
#define HANDLE_EXTRA_DELAY_WARNING 5816 //"Warning!! ce_index == 0xFF, cur_clk=0x%x, g_next_sniff_anchor_point=0x%x"
#define EXTRA_DELAY_HAPPEN 5817 //"Extra delay condition happen, wakeup late than expected: cur_clk=0x%x, g_next_sniff_anchor_point=0x%x, diff_cnt=%d, ce_index=%d"
#define LEGACY_ESCO_TX_INT_INFO  5818 //"[TX INT] lt_addr=%d, piconet_id=%d, esco_ce_index=%d, tx_pkt_type=0x%x, tx_id=%d, tx_status=0x%x, lut_index=%d, upper_lut_data=0x%x, lower_lut_data=0x%x, piconet_clk=0x%x"
#define RANDOM_PAGING_1 5819    //"[RANDOM_PAGING] timer_isr: native_clk=0x%x, counter_reg_read=0x%x, ori_native_counter=%d, random=%d, offset=%d, final_native_counter=%d, btdbg_0x2d=0x%x"
#define RANDOM_PAGING_2 5820    //"[RANDOM_PAGING] tx_int: native_clk=0x%x, native_counter=%d, btdbg_0x2d=0x%x"
#define RANDOM_PAGING_3 5821    //"[RANDOM_PAGING] timer_isr: going to send FHS: btdbg_0x2d=0x%x, native_counter=%d"
#define RANDOM_PAGING_4 5822    //"[RANDOM_PAGING] tx_int: rx_on_delay=%d, offset=%d, postpond_time=%d, expected_counter_in_hw_timer - native_counter=%d"
#define ACCESS_CODE_MISS_INFO 5823 //"[AC INT] piconet_id=%d, piconet_clk=0x%x, native_clk=0x%x, 0x29C=0x%x"
#define PEND_ROLE_SWITCH            5824    //"[PEND_ROLE_SWITCH] avoid conflict with esco anchor point: esco_num=%d, ce_index=%d, esco_ce_index=%d, pending_offset=%d(unit:slot), ori_role_switch_instant=0x%x(unit:slot), cond_bm=0x%x"
#define PEND_ROLE_SWITCH_DBG_1      5825    //"[PEND_ROLE_SWITCH_DBG] ce_index=%d, check_switch_instant_result=%d, switch_instant=0x%x(unit: half slot), piconet_clk=0x%x"
#define PEND_ROLE_SWITCH_DBG_2      5826    //"[PEND_ROLE_SWITCH_DBG] esco_ce_index=%d, piconet_clk=0x%x, rs_piconet_clk=0x%x, esco_window=%d(unit: half slot), esco_next_instant=0x%x, diff_clk=0x%x, pending_offset=%d, cond_bm=0x%x"
#define PEND_ROLE_SWITCH_DBG_3      5827    //"[PEND_ROLE_SWITCH_DBG] ce_index=%d, native_clk=0x%x, rs_piconet_clk=0x%x, sniff_window=%d(unit: half slot), sniff_next_instant=0x%x, diff_clk=0x%x, pending_offset=%d, cond_bm=0x%x"
#define PEND_ROLE_SWITCH_DBG_4      5828    //"[PEND_ROLE_SWITCH_DBG] ce_index=%d, cond_bm=0x%x"
#define PEND_ROLE_SWITCH_2          5829    //"[PEND_ROLE_SWITCH] avoid conflict with sniff anchor point: ce_index=%d, sniff_num=%d, pending_offset=%d(unit:slot), ori_role_switch_instant=0x%x(unit:slot), cond_bm=0x%x"
#define ENTER_SNIFF_TRANSITION 5830 //"[Sniff] enter sniff transition: ce_index=%d, en_sniff_trans=%d, sniff_state=%d, Tpoll=%d, Tpoll_bkp=%d, LR=0x%x"
#define EXIT_SNIFF_TRANSITION 5831 //"[Sniff] exit sniff transition: ce_index=%d, en_sniff_trans=%d, sniff_state=%d, Tpoll=%d, Tpoll_bkp=%d, LR=0x%x"
#define VALIDATE_ESCO_REQ_FAIL 5832 //"esco validate parameter fail!! tx_bandwidth=0x%x, nego_param->tx_bandwidth=0x%x, rx_bandwidth=0x%x, nego_param->rx_bandwidth=0x%x, air_mode=%d, local_air_mode=%d"
#define SNIFF_END_INT_INVALID1 5833 //[Sniff_end_int] !!ce_index=0x%x, lut_index=%d, sniff_interval=%d!!
#define SNIFF_END_INT_INVALID2 5834 //[Sniff_end_int] !!ce_index=0x%x, lut_index=%d!!
#define LL_SET_EXT_LNA_INFO 5835    //"[EXT_LNA][LL] isEnable=%d, entry_id=%d, reg_addr=0x%x, ext_lna_entry=%d"
#define LC_SET_EXT_LNA_INFO 5836    //"[EXT_LNA][LC] isEnable=%d, lut_index=%d"
#define NO_DISCONNECTING_ESCO 5837  //"Find disconnecting entry fail: ce_index=%d"
#define NEW_TX_STEP_INDEX_INFO 5838 //"BR/EDR tx step index offset: conn_handle=0x%x(0xFFFF means broadcast), tx_step_index=%d, new_tx_step_index=%d"
#define NEW_TX_TABLE_INDEX_NO_CONN_HANDLE 5839 //"Wrong connection handle: 0x%x for tx table index offset: %d, return 0"
#define SET_TX_STEP_INDEX_IN_LUT 5840 //"lut_index=%d, tx_step_index=%d"
#define TX_STEP_INDEX_OFFSET_RECORD_NO_FOUND 5841 //"Tx step index offset record no found, cmd_status=0x%x, conn_handle=0x%x"
#define ESCO_CE_ALREADY_DISC 5842   //"The esco_ce_index:%d is already disconnect"
#define OS_DELETE_TIMER_PARAM_NULL 5843 //"Warning!! OS delete timer, timer null, lr:0x%x"
#define MSS_ABORT_AT_INSTANT    5844    //"ce_index=%d, new_am_addr=%d, new_pid=%d, old_am_addr=%d, old_pid=%d"
#define SLOT_CTR_INT_INFO   5845    //"[Slot_counter_int] native_clk=0x%x, g_lc_scan_slot_timer_in_use=%d, scan_enable=%d, page_scan_count=%d, inq_scan_count=%d, scan_flag=%d, 0x30=0x%x, 0x32=0x%x"
#define INVALID_CE_INDEX_NOTIFY 5846 //"WARNING!! ce_index == 0xFF"
#define DUPLICATE_DEVICE_CONNECT 5847 //"Duplicate device paging us: 0x%02x%02x%02x%02x%02x%02x, ce_index=%d, ce_status=%d"
#define AUTO_ISSUE_REFRESH_KEY  5848    //"Issue refresh key every 12 hrs, ce_index=%d"
#define SCAN_HANG_DETECT_LOG    5849 //"[SCAN HANG DETECT] dbg0x2d: 0x%x, cur_0x34: 0x%x, prev_0x34: 0x%x, hw_psd_scan_running: 0x%x, bredr_scan_is_hang: %d"
#define ESCO_RM_CREATE_TIMING_COLLISION 5850 //"Receive remove esco req when esco_ce_ptr->status == ADDING_ESCO_LINK or CHANGING_ESCO_PARAMS or WAITING_FOR_ACCEPT_SYNC_CONN: ce_status=%d, esco_status=%d, disc_reason=0x%x"
#define SYNC_PKT_WS_IS_NULL   5851    //Warning! Get ws == NULL!! pkt=0x%x, conn_handle=0x%x, LR=0x%x (It's expected to see the log if we use HCI reset to disconnect eSCO link in HCI mode)
#define SCAN_HANG_WORKAROUND_AFTER_DISC     5860    //"[SCAN HANG WORKAROUND] after disc: scatter_ctrl_reg=0x%x, pid=%d"

#define OS_SEND_SIG_FROM_ISR_GENERIC_FAIL  5900  //"send_signal_from_isr_generic fail: type:%d, task_handle=%d, LR=0x%x"

#define CCH_DBG_000 6000 //"SCO DEBUG %d"
#define CCH_DBG_001 6001 //"(Warning) phy_piconet_id=%d, lc_allowed_pkt_cnt==0!!"
#define CCH_DBG_002 6002 //"Schedule LMP Packet pkts_allowed=%04x, use_dm1=%01x, pkt_type_lut=%02x"
#define CCH_DBG_003 6003 //"Force LMP use DM1 but not DV1"
#define CCH_DBG_004 6004 //"BB_ENTER_SNIFF_TRAN_MODE! But We Jump"
#define CCH_DBG_005 6005 //"BB_ENTER_SNIFF_TRAN_MODE! WithOut Jump"
#define CCH_DBG_006 6006 //"Exit Sniff but ce_index=%02d ce_status= %02d"
#define CCH_DBG_007 6007 //"ce_index=%02d ce_status= %02d"
#define CCH_DBG_008 6008 //"ce_index=%02d connection_handle=%02d ce_status= %02d"
#define CCH_DBG_009 6009 //"CRC Pkt Received: Pkt_type: 0x%02x, Lt_addr: %02d, Seqn: %1d"
#define CCH_DBG_010 6010 //"USB Handle ACL RX"
#define CCH_DBG_011 6011 //"pid: %02d,am_addr: %02d, lut_index: %02d, remote_seqn_bit: %02d, bc_seqn_bit: %02d"
#define CCH_DBG_012 6012 //"UPD SEQN rx_status->seqn: %02d, remote_seqn_bit: %02d, bc_seqn_bit: %02d"
#define CCH_DBG_013 6013 //"FLUSH LLID=%02d (2: Start, 1: Cont)"
#define CCH_DBG_014 6014 //"local_host_packet_type: 0x%04x, conn_packet_type: 0x%04x"
#define CCH_DBG_015 6015 //"sniff_neg_flag=%d, sniff_interval =%02d sniff_attempt=%02d, sniff_timeout=%02d"
#define CCH_DBG_016 6016 //"HANDLE eSCO Remove Req: ce_index: %02d, esco_ce_index: %02d, esco_status: %02d"
#define CCH_DBG_017 6017 //"lmp_create_esco_connection, ce index = %d"
#define CCH_DBG_018 6018 //"hci_generate_disconnection_complete_event"
#define CCH_DBG_019 6019 //"HERE"
#define CCH_DBG_020 6020 //""
#define CCH_DBG_021 6021 //" clock_offset=0x%08x, mod(clock_offset,Tsniff)= %d"
#define CCH_DBG_022 6022 //"sniff_slot_offset_temp =%02d"
#define CCH_DBG_023 6023 //"Desco =%02d"
#define CCH_DBG_024 6024 //"ce_index=%02d, Tpoll=%02d"
#define CCH_DBG_025 6025 //"sniff_master_clock=0x%08x, sniff_native_clock=0x%08x, sniff_stom_clock=0x%08x"
#define CCH_DBG_026 6026 //"lmp_get_global_slot_offset=%02d"
#define CCH_DBG_027 6027 //"index: %02d, global_slot_offset_ce_index=%02d"
#define CCH_DBG_028 6028 //"lmp_get_global_slot_offset: ce_index=%02d, interval=%02d, slot_num=%02d"
#define CCH_DBG_029 6029 //"lmp_put_global_slot_offset: ce_index=%02d"
#define CCH_DBG_030 6030 //"acl_ce_index,   use_ce_index,   use_interval,   use_slot_offset,    use_remote_slot,    use_slot_num,   interval"
#define CCH_DBG_031 6031 //"            %03d,       %03d,       %03d,       %03d,       %03d,       %03d,       %03d"
#define CCH_DBG_032 6032 //"lmp_get_global_slot_offset"
#define CCH_DBG_033 6033 //"0x%x"
#define CCH_DBG_034 6034 //"phy_piconet_id= %d, am_addr= %d, tpoll_offset= %d"
#define CCH_DBG_035 6035 //"lmp_get_global_slot_offset ce_index= %d, is_esco_ce_index= %d, interval= %d, slot_num= %d"
#define CCH_DBG_036 6036 //"lmp_force_global_slot_offset ce_index= %d, is_esco_ce_index= %d, interval= %d, slot_num= %d, slot_offset= %d"
#define CCH_DBG_037 6037 //"lmp_find_global_slot_offset fail"
#define CCH_DBG_038 6038 //"lmp_find_global_slot_offset = %d"
#define CCH_DBG_039 6039 //"nonflush_do_not_send: ce_index = %d, ce_ptr->nonflush_do_not_send = %d"
#define CCH_DBG_040 6040 //"ChRX = %02d, ChTX = %02d, Native Clock = %08x, Fail = %1x, RPT_gain_idx=%02d,RPT_AGC_idx=%02d, bz_gain_idx=0x%04x"
#define CCH_DBG_041 6041 //"max_rtk_radio_tx_step_index  = %02d"
#define CCH_DBG_042 6042 //"BB_ENTER_SNIFF_TRAN_MODE! But We Jump"
#define CCH_DBG_043 6043 //"BB_ENTER_SNIFF_TRAN_MODE! WithOut Jump"
#define CCH_DBG_044 6044 //"eSCO frag_status = %d"
#define CCH_DBG_045 6045 //"slot_offset=%d, interval=%d, attempt=%d, timeout=%d"
#define CCH_DBG_046 6046 //"sniff_interval=%d(slot), sniff_attempt=%d, timeout:%d"
#define CCH_DBG_047 6047 //"sniff_slot_offset =%02d"
#define CCH_DBG_048 6048 //"Sniff PAUSE ACL Slot = %d"

#define CCH_DBG_049 6049 //"RPT_CFOE_sync: %d,RPT_CFOE_trailer: %d"
#define CCH_DBG_050 6050 //"No SetAFH PDU Ack Received at ce_index = %d, Skip gen set_afh LMP PDU"
#define CCH_DBG_051 6051 //"_CCH_HANDLE_FLOW_STOP_ at lut_index = %d"
#define CCH_DBG_052 6052 //"ce_index = %02d Detach AUTH Fail"
#define CCH_DBG_053 6053 //"ce_index = %02d Detach Remote Name Req Only"
#define CCH_DBG_054 6054 //"Remote Name Req: ce_index = %02d am_addr = %02d, ce_status = %02d"

#define CCH_DBG_055 6055 //"ce_ptr->waiting_for_rs_several_times = %d"
#define CCH_DBG_056 6056 //"OS send signal to task failed"
#define CCH_DBG_057 6057 //"use_acl_ce_index = %d, use_ce_index = %d, slot_overlap = %d"
#define CCH_DBG_058 6058 //" slot_overlap =%d "
#define CCH_DBG_059 6059 //"ce_index = %d, entity_status = %d, sniff = %d, sniff_interval = %d, temp_sniff_interval = %d, max = %d"
#define CCH_DBG_060 6060 //"pid = %d, lc_allowed_pkt_cnt = %d donot_schedule_pkt = %d"
#define CCH_DBG_061 6061 //"No Free Entry %d!! BB_dma_write_baseband_TX_FIFO at pid = %d, am_addr = %d"
#define CCH_DBG_062 6062 //"[OS Buffer]allocation, pool id=%d free pool=%d, top=%d"
#define CCH_DBG_063 6063 //"Read Txcmd (id %d content 0x%08x) "

#define CCH_DBG_064 6064 //"pid:%d addr:%d lut:%d up:0x%04x low:0x%04x"
#define CCH_DBG_065 6065 //"am_addr: %d, tx_status: %d (0: IDLE, 1: READY, 2: SENT), pkt_type_lut:0x%04x, length:0x%04x, sent_time:0x%08x"
#define CCH_DBG_066 6066 //"FW Try To Write Invalid PKT Type at ce_index: %d"

#define CCH_DBG_067 6067 //"bb_reg_offset = 0x%02x, val = 0x%04x"
#define CCH_DBG_068 6068 //"phy_piconet_id = %02d, selected_am_addr = %02d, lower_lut_addr = 0x%02x"
#define CCH_DBG_069 6069 //"lc_handle_host_data_pkt at ce_index = %d"
#define CCH_DBG_070 6070 //"ReSchedule phy_piconet_id = %d, lcl_lut_index = %d"
#define CCH_DBG_071 6071 //"Pid: %d, Allowed Count = %d"
#define CCH_DBG_072 6072 //"ce_index: %d, lut_index: %d, curr_pkt_type: 0x%04x"
#define CCH_DBG_073 6073 //"flush_bb_fifo: %d, reload_fifo: %d, schd_am_addr: %d, schd1_am_addr: %d, rptr: %d, wptr: %d"
#define CCH_DBG_074 6074 //"lc_invoke_scheduler: pid = %d, lc_no_of_connections = %d"
#define CCH_DBG_075 6075 //"pid: %d, am_addr: %d, status: %d, lmp_am2ce_is_acl_ce_index(index): %d, lc_pagescan_flow_bitmap = 0x%04x"
#define CCH_DBG_076 6076 //"Error! General BB_ITO_NC_TIMEOUT (lt_addr:%d pid:%d) *clk=0x%08x"
#define CCH_DBG_077 6077 //"ce_index: %d, pid: %d, am_addr: %d, status: %d"
#define CCH_DBG_078 6078 //"aclq_mark_am_addr_as_paused: %d %d"
#define CCH_DBG_079 6079 //"(No) lc_flush_piconet1_tx_fifo pid = %d"
#define CCH_DBG_080 6080 //"lc_flush_piconet1_tx_fifo pid = %d"
#define CCH_DBG_081 6081 //"entry_id = %d, am_addr = %d, lt_addr = %d"
#define CCH_DBG_082 6082 //"invalid_quit at pid = %d, am_addr = %d"
#define CCH_DBG_083 6083 //"Do Not Start LMP Response Timer when RS and QoS"
#define CCH_DBG_084 6084 //"RS. ce_index = %d"
#define CCH_DBG_085 6085 //"pid = %d, am_addr = %d"
#define CCH_DBG_086 6086 //"Broadcast??"
#define CCH_DBG_087 6087 //"lmp_slave_use_am_addr_ppi (ce_index/ status)"
#define CCH_DBG_088 6088 //"%2d %2d %2d %2d %2d %2d %2d %2d"
#define CCH_DBG_089 6089 //"Broadcast??"
#define CCH_DBG_090 6090 //"(JUMP) Detach handle is not Invalid at ce_index = %d"
#define CCH_DBG_091 6091 //"(RETURN) Detach handle is not Invalid at ce_index = %d"
#define CCH_DBG_092 6092 //"%d: bd_addr = %02x %02x %02x %02x %02x %02x, entity_status = %d, ce_status = %d"
#define CCH_DBG_093 6093 //"lmp_update_map at ce_index %d but no update"
#define CCH_DBG_094 6094 //"SCO NOT CORRECT_DATA"
#define CCH_DBG_095 6095 //"lmp_release_am_addr_ppi: pid: %d, am_addr: %d, ce_index: %d"
#define CCH_DBG_096 6096 //"auto_accept_flag_event = %d (0,1: req, 2: comp, 3: rs)"
#define CCH_DBG_097 6097 //"local:  %02x %02x %02x %02x"
#define CCH_DBG_098 6098 //"remote: %02x %02x %02x %02x"
#define CCH_DBG_099 6099 //"ACL_CONNECTION_EXISTS_ERROR but return HCI_COMMAND_SUCCEEDED"
#define CCH_DBG_100 6100 //"LMP_GET_TRANSACTION_ID = %d"
#define CCH_DBG_104 6104 //"SCO DEBUG"
#define CCH_DBG_105 6105 //"ce_index = %d sco_conn_status = %d"
#define CCH_DBG_106 6106 //"%x %x"
#define CCH_DBG_107 6107 //"hci_baseband_cmd_pending = %d"
#define CCH_DBG_108 6108 //"ENC_DEBUG: auth state = %d"
#define CCH_DBG_109 6109 //"ENC_DEBUG: %d"
#define CCH_DBG_110 6110 //"PCM_DEBUG: 0x%x"
#define CCH_DBG_111 6111 //"old_amaddr: %d new_amaddr: %d"
#define CCH_DBG_112 6112 //"wptr %d -------->"
#define CCH_DBG_113 6113 //"<-------- rptr %d"
#define CCH_DBG_114 6114 //"UART Break"
#define CCH_DBG_115 6115 //"RS DEBUG: device_status=%d, lc_cur_dev_state=%d"
#define CCH_DBG_116 6116 //"RS DEBUG: 0x%x"
#define CCH_DBG_117 6117 //"RS DEBUG: ce_status 0x%x"
#define CCH_DBG_118 6118 //"RS DEBUG: hci_cmd_bits 0x%x"

#define CCH_DBG_119 6119 //"lmp not accepted: ce_index= %d opcode= %d"
#define CCH_DBG_120 6120 //"CON DEBUG: 0x%x 0x%x"
#define CCH_DBG_121 6121 //"LMP DEBUG: LC_HANDLE_RECD_PACKET_SIGNAL"
#define CCH_DBG_122 6122 //"WHQL DEBUG: Add SCO Fail"
#define CCH_DBG_123 6123 //"N_INQUIRY_REGISTER = %x"
#define CCH_DBG_124 6124 //"lmp_calculate_max_slot: %d"
#define CCH_DBG_125 6125 //"ce_index=%d request lmp_send_unsniff_pdu_to_all_devices: ce_index=%d"

#define CCH_DBG_126 6126 //"EIR Pkt Mismatch !!"
#define CCH_DBG_127 6127 //"sco_ce_index: %d, bb_pkt_type= %x"
#define CCH_DBG_128 6128 //"[lc_handle_connect_sco] sco_ce_index: %d"
#define CCH_DBG_129 6129 //"sco_ce_index= %x, sco_handle= %x"
#define CCH_DBG_130 6130 //"sco_start= %x"

#define CCH_DBG_140 6140 //"Disable PCM output force zero: sco_ce_index= %x"
#define CCH_DBG_141 6141 //"Enable PCM output force zero : sco_ce_index= %x count = %d"
#define CCH_DBG_142 6142 //"cal_to_sniff/sniff_to_lock                              %d               %d"
#define CCH_DBG_143 6143 //"Diverge@Clock                                 0x%x"
#define CCH_DBG_144 6144 //"32k Calibration NOT READY!! lps_mode = 0x%x, lps_32k_cal_count = 0x%x, lock = 0x%x"
#define CCH_DBG_145 6145 //"[PTA] Scan Response DeadLock 0x%x  0x%x"
#define CCH_DBG_146 6146 //"[Vendor] BB_RESET~"
#define CCH_DBG_147 6147 //"[Vendor] BB_RESET~: num_hlc = 0x%x, LE.conn = 0x%x, LE__cnts = 0x%x CE_STATUS: 0x%02x 0x%02x 0x%02x 0x%02x 0x%02x 0x%02x 0x%02x 0x%02x 0x%02x 0x%02x "
#define CCH_DBG_148 6148 //" slot_overlap =%d slot offset = %d"
#define CCH_DBG_149 6149 //"32k Calibration NOT READY!! lps_32k_cal_count = 0x%x cal_lock = 0x%x"
#define CCH_DBG_150 6150 //"(SC) PrivateKey(Local):  0x%02x%02x%02x%02x 0x%02x%02x%02x%02x 0x%02x%02x%02x%02x 0x%02x%02x%02x%02x 0x%02x%02x%02x%02x 0x%02x%02x%02x%02x 0x%02x%02x%02x%02x 0x%02x%02x%02x%02x"
#define CCH_DBG_151 6151 //"(SC) PublicKey(Remote): 0x%02x%02x%02x%02x 0x%02x%02x%02x%02x 0x%02x%02x%02x%02x 0x%02x%02x%02x%02x 0x%02x%02x%02x%02x 0x%02x%02x%02x%02x 0x%02x%02x%02x%02x 0x%02x%02x%02x%02x"
#define CCH_DBG_152 6152 //"(SC) DHKey: 0x%02x%02x%02x%02x 0x%02x%02x%02x%02x 0x%02x%02x%02x%02x 0x%02x%02x%02x%02x 0x%02x%02x%02x%02x 0x%02x%02x%02x%02x 0x%02x%02x%02x%02x 0x%02x%02x%02x%02x"
#define CCH_DBG_153 6153 //"(SC) ACO: 0x%02x%02x%02x%02x 0x%02x%02x%02x%02x 0x%02x%02x%02x%02x SRES_m:0x%02x%02x%02x%02x SRES_s:0x%02x%02x%02x%02x"
#define CCH_DBG_154 6154 //"(SC) IV USE ACO : enc_on = %x"
#define CCH_DBG_155 6155 //"(SC) IV USE EN_RAND"
#define CCH_DBG_156 6156 //"(SC) CAM: 0x%x: 0x%08x 0x%08x 0x%08x 0x%08x"
#define CCH_DBG_157 6157 //"(SC) H3: 0x%02x%02x%02x%02x"
#define CCH_DBG_158 6158 //"(SC) H4: 0x%02x%02x%02x%02x"
#define CCH_DBG_159 6159 //"(SC) H5: 0x%02x%02x%02x%02x"
#define CCH_DBG_160 6160 //"(SC) G:  0x%02x%02x%02x%02x"
#define CCH_DBG_161 6161 //"(SC) F2: 0x%02x%02x%02x%02x"
#define CCH_DBG_162 6162 //"(SC) F3: 0x%02x%02x%02x%02x"
#define CCH_DBG_163 6163 //"(SC) IV: 0x%x: 0x%08x 0x%08x"
#define CCH_DBG_164 6164 //"cur_clk:0x%x 0x%x 0x%x"
#define CCH_DBG_165 6165 //"[SC] [clk 0x%08x] %dth MIC error(ce%d, pid%d, am_addr%d) pkt_len%d, llid%d, ptt%d, err(hex%d, crc%d) (ph:0x%04x pl:0x%04x) lut%d, upper_lut0x%04x"
#define CCH_DBG_166 6166 //"[SC] [clk 0x%08x] Rx Good Pkt(ce%d, pid%d, am_addr%d) pkt_len%d, llid%d, ptt%d, err(mic%d, hex%d, crc%d) (ph:0x%04x pl:0x%04x) lut%d, upper_lut0x%04x"
#define CCH_DBG_167 6167 //"[SC] Set eSCO first_aes_esco_pkt_flag ce_index = 0x%x"
#define CCH_DBG_168 6168 //"[SC] Set rxpkcnt_ignore_seqcompare ce_index = 0x%x"
#define CCH_DBG_169 6169 //"[SC] Ini CAM ce_index = 0x%x with lut_index = 0x%x"
#define CCH_DBG_170 6170 //" [clk %08x][LE] Enable Instance Mode Scan %d slot or nat_clk 0x%08x instance_clk 0x%08x reg(0x44:0x%04x 0x3E:0x%04x)"
#define CCH_DBG_200 6200 //"Write Modem PGA_Settlingtime: [BT2.1] page1.0x18=0x%.8x,  [BT4] page1.0x19=0x%.8x"


#define CCH_SEC_001 6201 //"(ISSC SEC) Error Code 0x%08x"

#define CCH_SEC_002 6202 //"(DSA512) Input H_m = 0x%08X%08X"
#define CCH_SEC_003 6203 //"(DSA512) Random K = 0x%08X%08X"
#define CCH_SEC_004 6204 //"(DSA512)             R = 0x%08x 0x%08x 0x%08x 0x%08x 0x%08x"
#define CCH_SEC_005 6205 //"(DSA512)             S = 0x%08x 0x%08x 0x%08x 0x%08x 0x%08x"
#define CCH_SEC_006 6206 //"(DSA512) Loop Num 0x%04x"
#define CCH_SEC_007 6207 //"(DSA512) Ans = %d"
#define CCH_SEC_008 6208 //"(DSA512)           Any = 0x%08X%08X%08X%08X"
#define CCH_SEC_009 6209 //"(DSA512)             G = 0x%08X%08X%08X%08X"
#define CCH_SEC_010 6210 //"(DSA512)             P = 0x%08X%08X%08X%08X"
#define CCH_SEC_011 6211 //"*****************************************************************"
#define CCH_SEC_012 6212 //"(DSA512)        Inv_K = 0x%08X%08X"
#define CCH_SEC_013 6213 //"(DSA512)          (H(m)+x.r) = 0x%08X%08X%08X%08X"
#define CCH_SEC_014 6214 //"(DSA512) (H(m)+x.r)modQ = 0x%08X%08X"
#define CCH_SEC_015 6215 //"(DSA512)           (x.r)modQ = 0x%08X%08X"
#define CCH_SEC_016 6216 //"(DSA512)         (g^k)modP = 0x%08X%08X%08X%08X"

#define CCH_SEC_018 6218 //"(ISSC SEC) sec_input   = 0x%02x 0x%02x 0x%02x 0x%02x"
#define CCH_SEC_019 6219 //"(ISSC SEC) sec_output = 0x%02x 0x%02x 0x%02x 0x%02x"
#define CCH_SEC_020 6220 //"(ISSC SEC) mic err %d, sec_output = 0x%02x 0x%02x 0x%02x 0x%02x"

#define CCH_SEC_021 6221 //"(ISSC SEC) Input Slat = 0x%02x 0x%02x"
#define CCH_SEC_022 6222 //"(ISSC SEC) Input Challenge = 0x%02x 0x%02x 0x%02x 0x%02x"
#define CCH_SEC_023 6223 //"(ISSC SEC) Input MIC = 0x%08x"
#define CCH_SEC_024 6224 //"(ISSC SEC) State = 0x%00x"

#define CCH_LPS_001 6301 //"(LPS) lps_period_count = %d, lps_period_state = %d, bitmap = 0x%x, lps_mode = %d"
#define CCH_LPS_002 6302 //"(LPS) "
#define CCH_LPS_003 6303 //"m:%d, en0(int:%d/%d counter:%d, restart:%d, sup_to:%d) en1(int:%d/%d, counter:%d, restart:%d, sup_to:%d)"
#define CCH_LPS_004 6304 //"m:%d, en8(int:%d/%d, counter:%d, restart:%d, sup_to:%d) en9(int:%d/%d, counter:%d, restart:%d, sup_to:%d)"
#define CCH_LPS_005 6305 //"(LPS) WakeupCount:%d, PowerMode:%d, ErrorCode:0x%x, Monitor:%d %d, Scan:%x, RefuseReason:0x%x"
#define CCH_LPS_006 6306 //"Fatal. BB write in deep sleep mode. Reg:0x%x.Val:0x%x. cnt:%d at clk:0x%x"
#define LE_MSG_CONN_COMP_EVENT 6307 //"LE Connection Complete: status %02xh idx %d handle %d role %d AccessAddress:0x%08x. interval %d(x1.25ms) slv_l %d winsz %d winof %d"
#define LE_MSG_CONN_ENTRY_INFO 6308 //"m:%d, en%d(int:%d/%d counter:%d, restart:%d, sup_to:%d)"
#define CCH_DBG_309 6309 //"os_wrapper_timer_callback send fail timer id = 0x%x"
#define CCH_DBG_310 6310 //"UPD(%d): paging orig_pid:%d, new:%d, MasterCnt=%d, state=%d, orig.act=%d, new.act=%d ps=%d p=%d"
#define CCH_DBG_311 6311 //"AFH map are the same, ce:%d"

#define SNIFF_2ND_TRANSITION_01  6400    //"[SNIFF 2ND TRANSITION] receive ack of accept pdu before enter sniff timer timeout"
#define SNIFF_2ND_TRANSITION_02  6401    //"[SNIFF 2ND TRANSITION] receive ack of accept pdu after enter sniff timer timeout"
#define SNIFF_2ND_TRANSITION_03  6402    //"[SNIFF 2ND TRANSITION] no recv ack of accept, sniff with xtol: 0x%x"
#define SNIFF_2ND_TRANSITION_04  6403    //"[SNIFF 2ND TRANSITION] timer timeout, lut_index: %d, lc_sniff_sup_count: %d"
#define SNIFF_2ND_TRANSITION_05  6404    //"[SNIFF 2ND TRANSITION] timeout value(slot): 0x%x, sup_to(slot): 0x%x, xtol: 0x%x"
#define RS_NC_TO_WITH_MSS_SUCESS_INT  6405  //"[WARNING] role switch nc timeout with mss success interrupt"

#define BRUCE_DEBUG_002 6999 //"Abnormal phenomenon"
#define BRUCE_DEBUG_001 7000 //"Bzdma being executed Tx"
#define BRUCE_ESCO_PKT_TYPE 7001 //"ESCO_PKT_TYPE 0x%x  (hint:  0X07-EV3  0x0C-EV4  0x0D-EV5  0x00-NULL/POLL  0x26-2_EV3  0x37-_3EV3  0x2c-2_EV5  0x3d-3_EV5)"
#define BRUCE_TEST_LOG 7002 //"BRUCE_test_log: 0x%x"
#define BRUCE_TEST_LOG_7003 7003 //"=BRUCE_test="
#define BRUCE_TEST_LOG_d 7004 //"BRUCE_test_log: %d"
#define BRUCE_AFH_DISPALY 7005 //"<AFH> display bt afh ch = 0 quality = %d  %d  %d  %d  %d  %d  %d  %d  %d  %d  ch = 1 quality = %d  %d  %d  %d  %d  %d  %d  %d  %d  %d  ch = 2 quality = %d  %d  %d  %d  %d  %d  %d  %d  %d  %d"
#define BRUCE_AFH_DISPALY2 7006 //"<AFH> display bt afh ch = 3 quality = %d  %d  %d  %d  %d  %d  %d  %d  %d  %d  ch = 4 quality = %d  %d  %d  %d  %d  %d  %d  %d  %d  %d  ch = 5 quality = %d  %d  %d  %d  %d  %d  %d  %d  %d  %d"
#define BRUCE_AFH_DISPALY3 7007 //"<AFH> display bt afh ch = 6 quality = %d  %d  %d  %d  %d  %d  %d  %d  %d  %d  ch = 7 quality = %d  %d  %d  %d  %d  %d  %d  %d  %d  %d"
#define BRUCE_TEST_LOG_7008 7008 //"WARNING: sco_num mismatch, sco_num=%d  txcmd_id=%d ch_id=%d"


#define BRUCE_AFH_ch0   7010 //"<AFH> ch0~9    =%d  %d  %d ,%d  %d  %d ,%d  %d  %d ,%d  %d  %d ,%d  %d  %d ,%d  %d  %d ,%d  %d  %d ,%d  %d  %d ,%d  %d  %d ,%d  %d  %d "
#define BRUCE_AFH_ch1   7011 //"<AFH> ch10~19 =%d  %d  %d ,%d  %d  %d ,%d  %d  %d ,%d  %d  %d ,%d  %d  %d ,%d  %d  %d ,%d  %d  %d ,%d  %d  %d ,%d  %d  %d ,%d  %d  %d "
#define BRUCE_AFH_ch2   7012 //"<AFH> ch20~29 =%d  %d  %d ,%d  %d  %d ,%d  %d  %d ,%d  %d  %d ,%d  %d  %d ,%d  %d  %d ,%d  %d  %d ,%d  %d  %d ,%d  %d  %d ,%d  %d  %d "
#define BRUCE_AFH_ch3   7013 //"<AFH> ch30~39 =%d  %d  %d ,%d  %d  %d ,%d  %d  %d ,%d  %d  %d ,%d  %d  %d ,%d  %d  %d ,%d  %d  %d ,%d  %d  %d ,%d  %d  %d ,%d  %d  %d "
#define BRUCE_AFH_ch4   7014 //"<AFH> ch40~49 =%d  %d  %d ,%d  %d  %d ,%d  %d  %d ,%d  %d  %d ,%d  %d  %d ,%d  %d  %d ,%d  %d  %d ,%d  %d  %d ,%d  %d  %d ,%d  %d  %d "
#define BRUCE_AFH_ch5   7015 //"<AFH> ch50~59 =%d  %d  %d ,%d  %d  %d ,%d  %d  %d ,%d  %d  %d ,%d  %d  %d ,%d  %d  %d ,%d  %d  %d ,%d  %d  %d ,%d  %d  %d ,%d  %d  %d "
#define BRUCE_AFH_ch6   7016 //"<AFH> ch60~69 =%d  %d  %d ,%d  %d  %d ,%d  %d  %d ,%d  %d  %d ,%d  %d  %d ,%d  %d  %d ,%d  %d  %d ,%d  %d  %d ,%d  %d  %d ,%d  %d  %d "
#define BRUCE_AFH_ch7   7017 //"<AFH> ch70~79 =%d  %d  %d ,%d  %d  %d ,%d  %d  %d ,%d  %d  %d ,%d  %d  %d ,%d  %d  %d ,%d  %d  %d ,%d  %d  %d ,%d  %d  %d ,%d  %d  %d "
#define BRUCE_TEST_7018   7018 //"[BZDMA] warning!! ESCO no free TxCmd entry. clk: 0x%08x, lc_sco_pause_status: 0x%02x, %d,  %d,  %d,  %d"
#define BRUCE_DBG_9 7019 //"<BRUCE> rptr=%x wptr=%x schd_tx_status=%x schd1_tx_status=%x schd->ce_index=%x  schd1->ce_index=%x  aclq_resch_flag=%x all_pkt_cnt=%x trace_map=%x"

#define LE_CANCEL_RACE_COND 7500 //"le create_conn_cancel conn_success race condition"


#define FONGPIN_READ_PAGE0_1BYTE 8000   //"(new io) read page 0, 1 byte registrer offset 0x%04x = 0x%02x"
#define FONGPIN_READ_PAGE0_2BYTE 8001   //"(new io) read page 0, 2 byte registrer offset 0x%04x = 0x%04x"
#define FONGPIN_READ_PAGE0_4BYTE 8002   //"(new io) read page 0, 4 byte registrer offset 0x%04x = 0x%08x"
#define READ_SIE_ERROR_MSG 8003         //"(new io) indirect read sie with illegal parameters"
#define READ_SIE_DATA 8004              //"(new io) read sie registrer, offset 0x%02x = 0x%04x"
#define SCOREBOARD_REG  8005            //"(scorebord) scoreboard interrupt occure = 0x%08x"
#define FONGPIN_SIE_REG 8006            //"(LPM) sie reg 0xFE%02X = 0x%02X"
#define FONGPIN_SWITCH_PCM_TO_ON 8007   //"(MUX) switch gpio%d to On area"
#define FONGPIN_SWITCH_PCM_TO_OFF 8008  //"(MUX) switch gpio%d to Off area"
#define FONGPIN_SET_PCM_AS_INPUT    8009 //"(MUX) set gpio%d as input"
#define FONGPIN_SET_PCM_AS_OUTPUT   8010 //"(MUX) set gpio%d as output"
#define FONGPIN_SET_PCM_AS_OUTPUT_HIGH   8011 //"(MUX) set gpio%d output high"
#define FONGPIN_SET_PCM_AS_OUTPUT_LOW   8012 //"(MUX) set gpio%d output low"
#define FONGPIN_SET_PCM_DISC_IO_STATUS_VEN_CMD   8013 //"(MUX) got a set_pcm_disc_io_status vendor command, data = 0x%08X"
#define FONGPIN_SWITCH_TO_PCM_MUX   8014    //"(MUX) switch to pcm mux, backup 0x48 = 0x%x, 0x38 = 0x%x, "
#define FONGPIN_BT_CTRL_GPIO_INIT   8015    //"(MUX) bt control gpio: init"
#define FONGPIN_USB_TIMEOUT_OCCUR  8016     //"(int) usb token timeout occur, interrupt enable= 0x%x, interrupt status = 0x%x"
#define FONGPIN_CROSSBAR_INTERRUPT  8017    //"(exception) crossbar interrupt error occur, ERR_ACCESS_ADDR = 0x%x, , ERR_ACCESS_CMD_LEN = 0x%x, ERR_ACCESS_TAGID = 0x%x, ERR_ACCESS_INFO = 0x%x"
#define FONGPIN_EVT_IN_TOKEN_TO  8018  //"(int) usb rx event token timeout: rx req len = 0x%x, sie_fe52= 0x%x, sie_rx_w_addr= 0x%x"
#define FONGPIN_ISO_OUT_TOKEN_TO  8019      //"(int) usb iso out token timeout"
#define FONGPIN_ISO_IN_TOKEN_TO_22B  8020       //"(int) usb iso in token timeout: rx req len = 0x%x, sie_fe52= 0x%x, sie_rx_w_addr= 0x%x"
#define FONGPIN_ISO_IN_TOKEN_TO  8021       //"(int) usb iso in token timeout"
#define FONGPIN_POWER_GPIO_DBG      8022    //" bit_offset = 0x%x, *bit_polarity_sts= 0x%x, no_delay= 0x%x"
#define FONGPIN_FM_PAD_ENABLE       8023    //"pow gpio pad enable( 0x%X )"
#define FONGPIN_IS_RISING_EDGE       8024    //"pow gpio interrupt is_rising_edge = true"
#define FONGPIN_IS_NOT_RISING_EDGE       8025    //"pow gpio interrupt is_rising_edge = false"
#define FONGPIN_IS_DETECT_HIGH      8026    //"pow gpio pad is_detect_high = true"
#define FONGPIN_IS_NOT_DETECT_HIGH      8027    //"FM pad is_detect_high = false"
#define FM_WAKEUP_INT               8028        //"FM Suspend wakeup!!"
#define SAFE_READ_SIE_ERROR_MSG 8029            //"(new io) safe indirect read sie fail"
#define SAFE_READ_PAGE0_ERROR_MSG 8030         //"(new io) safe indirect read page0 fail"

#define FONGPIN_EVT_USB_WAKEUP_HOST  8031       //"(int) usb dma done, assert a usb_remote_wakeup"
#define FONGPIN_USB_BUFF_OK             8032    //"(usb) sub buff ok, reg = 0x%x, 0x%x, 0x%x"
#define FONGPIN_USB_L1_WAKEUP_WHEN_DMA           8033    //"(usb) usb L1 remote wakeup when dma, %d"
#define FONGPIN_USB_L1_WAKEUP_WHEN_TIMER           8034    //"(timer, usb) usb L1 remote wakeup when timer, state = 0x%x, timer wake cnt = %d"
#define FONGPIN_DMA_DESC_FREE_CNT               8035    //"(dma) dma desc free cnt, EVT = %d(%d), ACL = %d(%d), SCO = %d(%d)"
#define FONGPIN_USB_IN_D2                       8036    //"(timer, usb) usb in D2"
#define FONGPIN_USB_SET_L1_PARA_ERROR           8037    //"(usb) set L1 parameters error, %d"
#define FONGPIN_USB_L1_WAKEUP_WHEN_ISR_RX           8038    //"(usb) usb L1 remote wakeup when evt rx = %d"
#define FONGPIN_TEST_MUX_HOST_WAKEUP_BT_MUX_OK      8039    //"(mux) got host wakeup bt gpio interrupt"
#define FONGPIN_TEST_MUX_LEAVE_LPS_BY_GPIO13      8040    //"(mux) leave lps by gpio13"
#define PACKAGE_TO_HCI                              8041    //"(hci) hci selection = %d"
#define PACKAGE_ERROR_SELECTION                              8042    //"(hci) hci selection error"
#define PAGE0_REG_HW_INFO                             8043    //"(system on) hw id = 0x%X (A:8822B, B:8703B ), chip version = 0x%X"
#define VENDOR_GPIO_INTERRUPT                   8044        //"(int) vendor gpio interrupt, ven_gpio_ctl = 0x%x, ven_gpio_int = 0x%x"
#define USB_WAKEUP_DEBUG_INFO                           8045    //"(usb) usb remote wakeup clock = 0x%x, count = %d"





#define LOG_FM_SWITCH 8500 //"[FM][SWITCH] state: %d"
#define LOG_FM_READ 8501 //"[FM][READ] addr: 0x%x, len: %d"
#define LOG_FM_WRITE 8502 //"[FM][WRITE] addr: 0x%x, data: 0x%x"
#define LOG_FM_SET 8503 //"[FM][SET] addr: 0x%x, mask: 0x%x, val: 0x%x; old: 0x%x, new: 0x%x"
#define LOG_FM_GET_READY 8504 //"[FM][STATUS] ready: %d"
#define LOG_FM_GET_ACCESS_REG 8505 //"[FM][STATUS] access_reg: 0x%x"
#define LOG_FM_POLL_TIMEOUT 8506 //"[FM] poll timeout"
#define LOG_FM_READ_REG 8507 //"[FM][REG][READ] reg[0x%04x]=0x%02x"
#define LOG_FM_WRITE_REG 8508 //"[FM][REG][WRITE] reg[0x%04x]=0x%02x"

#define MSG_HCI_VENDOR_CMD_ERROR_00 8880 //"hci_vendor_handle_unlock_req_cmd: verify fail!"
#define MSG_HCI_VENDOR_CMD_ERROR_01 8881 //"hci_vendor_handle_unlock_req_cmd: allocate fail!"
#define MSG_HCI_VENDOR_CMD_ERROR_02 8882 //"pRandomIVandPlaintext is NULL!"
#define MSG_HCI_VENDOR_CMD_ERROR_03 8883 //"hci_vendor_handle_unlock_process_cmd: verify fail!"
#define MSG_OS_WRAPPER_SEND_SIGNAL_FAIL 8884 //"os_wrapper_send_signal_to_task send fail: task_id %d signal (type %d param 0x%x ext_param 0x%x)"

#define DMA_UART_001_DBG_FLT 9001 //"<DMA UART DBG> %f"
#define DMA_UART_002_DBG_DEC 9002 //"<DMA UART DBG> %d"
#define DMA_UART_003_DBG_HEX 9003 //"<DMA UART DBG> 0x%.8x"
#define DMA_UART_004_DBG_STR 9004 //"<DMA UART DBG> %s"
#define DMA_UART_005 9005 //"<DMA UART> RL6216 HCI UART: hci_uart_reset_init_RTL8723(re_init_flag = %d) STARTS ... "
#define DMA_UART_006 9006 //"<DMA UART> RTL8723 HCI UART: check BT_ON Baudrate Record ... "
#define DMA_UART_007 9007 //"<DMA UART> BAUD DETECTION STARTS ... "
#define DMA_UART_008 9008 //"<DMA UART> BTON_INTERFACE_CTRL_REG: 0x%.8x"
#define DMA_UART_009 9009 //"<DMA UART> Write BTON_INTERFACE_CTRL_REG: 0x%.8x"
#define DMA_UART_010 9010 //"<DMA UART> WARNING: UART setting before BAUD - DETECTION fails!  baud.d32 = 0x%.8x"
#define DMA_UART_011 9011 //"<DMA UART> Baudrate Detection loop number: %d,  timeout: %d"
#define DMA_UART_012 9012 //"<DMA UART> +++++ Baudrate Detection Loop End: %d loops, goto_check_default = %d, goto_LPS = %d, baud.d32 = 0x%.8x +++++"
#define DMA_UART_013 9013 //"<DMA UART> goto_check_default_flag = %d, goto_LPS_mode_flag = %d, g_hci_uart_baud_default_en = %d, g_baudRate = 0x%.8x "
#define DMA_UART_014 9014 //"<DMA UART> To Execute hci_uart_goto_LPS_mode() "
#define DMA_UART_015 9015 //"<DMA UART> uart_set_baud_clk(baud.d32 = 0x%.8x, re_init_flag = %d) STARTS ...   baud_hw_setting.d32 = 0x%.8x "
#define DMA_UART_016 9016 //"<DMA UART> uart_set_baud_clk()/hci_uart_read_hw_setting(): baud_hw_setting.d32 = 0x%.8x "
#define DMA_UART_017 9017 //"<DMA UART> BTON_UART_SPI_AFE_CTRL_REG: 0x%.8x"
#define DMA_UART_018 9018 //"<DMA UART> BTON_CORE_AFE_LDO_CTRL_REG: 0x%.8x"
#define DMA_UART_019 9019 //"<DMA UART> uart_set_baud_clk_RTL8723() return API_FAILURE; reason: divisor = 0"
#define DMA_UART_020 9020 //"<DMA UART> uart_set_baud_clk_RTL8723() return API_FAILURE; reason: goto_afe_conflict = %d, pll_ckrdy_timeout = %d "
#define DMA_UART_021 9021 //"<DMA UART> PLL CKRDY Loop End: %d loops, pll_ckrdy_bt = %d, pll_ckrdy_timeout = %d, bton_core_afe_ldo_ctrl_reg = 0x%.8x"
#define DMA_UART_022 9022 //"<DMA UART> Write BTON_UART_SPI_AFE_CTRL_REG: 0x%.8x"
#define DMA_UART_023 9023 //"<DMA UART> uart_set_baud_clk_RTL8723() return API_SUCCESS; clk_sel = %d, pll_sel = %d, pll_d = %d, ovsr(real_ovsr-5) = %d, divisor = %d, sts = %d"
#define DMA_UART_024 9024 //"<DMA UART> +++++ Set Baudrate = %d Hz +++++          uart_set_baud_clk_RTL8723() return API_SUCCESS; clk_sel = %d, pll_sel = %d, pll_d = %d, ovsr(real_ovsr-5) = %d, divisor = %d"
#define DMA_UART_025 9025 //"<DMA UART> g_baudRate = 0x%.8x, g_uart_clk = %d, g_hci_uart_chk_bton_en = %d, UINT16 g_hci_uart_wr_bton_en = %d, g_hci_uart_baud_det_en = %d, g_hci_uart_baud_default_en = %d, g_hci_uart_baud_det_timeout = %d, g_hci_uart_baud_det_timeout_en = %d"
#define DMA_UART_026 9026 //"<DMA UART> g_hci_uart_pll_ckrdy_timeout = %d, g_hci_uart_pll_ckrdy_timeout_en = %d, g_hci_uart_det_timeout_LPS_en = %d, tune_pll_sel_en = %d, h4_err_intr_en = %d, g_hci_uart_en0_before_set_en = %d"
#define DMA_UART_027 9027 //"<DMA UART> hci_uart_reset_init_RTL8723() ENDs ...  Read BTON_INTERFACE_CTRL_REG: 0x%.8x"
#define DMA_UART_028 9028 //"<DMA UART> PLL CK Ready loop number: %d,  timeout: %d"
#define DMA_UART_029 9029 //"<DMA UART> +++++ Baudrate Detection Success +++++"
#define DMA_UART_030 9030 //"<DMA UART> ***** Baudrate Detection Fail *****"
#define DMA_UART_031 9031 //"<DMA UART> ***** Baudrate Detection TimeOut *****"
#define DMA_UART_032 9032 //"<DMA UART> ***** UART Error, Call hci_uart_reset_init_RTL8723(re_init_flag = 1) *****"
#define DMA_UART_033 9033 //"<DMA UART> ***** UART Error, Call API to send Hardware Error Event *****"
#define DMA_UART_034 9034 //"<DMA UART> g_hci_uart_pll_ldo_stable_loops = %d, g_hci_uart_err_send_event_en = %d, g_hci_uart_baud_redet_en = %d, g_hci_uart_det_wait_en = %d, g_hci_uart_redet_wait_en = %d, uart_h5_go_sleep_backup_en = %d"
#define DMA_UART_035 9035 //"<DMA UART> PLL CKRDY loop number: %d,  timeout: %d"
#define DMA_UART_036 9036 //"<DMA UART VENDOR SET BAUD> Execute hci_uart_vendor_set_baud(baud_new.d32 = 0x%08x);  baud_old.d32 = 0x%08x"
#define DMA_UART_037 9037 //"<DMA UART VENDOR SET BAUD> Execute uart_set_baud_clk_RTL8723(baud_new) FAILURE!!!   Try to restore by uart_set_baud_clk_RL6216(baud_old) !!!"
#define DMA_UART_038 9038 //"<DMA UART VENDOR SET BAUD> ERROR: Execute uart_set_baud_clk_RTL8723(baud_old) FAILURE!!!    Try to execute hci_uart_reset_init_RL6216(1) !!!"
#define DMA_UART_039 9039 //"<DMA UART VENDOR SET BAUD> Execute uart_set_baud_clk_RTL8723(baud_new) SUCCESS!!!"
#define DMA_UART_040 9040 //"<DMA UART> ***** UART Error, Write 1 Clear, uart_reg_status=0x%x *****"
#define DMA_UART_041 9041 //"<DMA UART> +++++ Set Baudrate = %d Hz +++++          uart_set_baud_clk_RTL8723() return API_SUCCESS; baud.d32 = 0x%x"
#define DMA_UART_042 9042 //"<DMA UART> PLL CKRDY Loop End: %d loops"
#define DMA_UART_043 9043 //"<DMA UART> +++++ Baudrate Detection Loop End: %d loops, baud.d32 = 0x%.8x +++++"
#define DMA_UART_050 9050 //"<DMA UART H5> tx_seq: %d, tx_ack: %d, ln_state: %d, sliding_wsize: %d, oof_fctrl: %d, data_chec_en: %d, rsvd: %d, intsts=%08x, ctl0=%08x, ctl1=%08x, dma isr_status=%08x"
#define DMA_UART_051 9051 //"<ACL LOOPBACK TX> len: %d, buff: %.2x %.2x %.2x %.2x %.2x %.2x %.2x %.2x %.2x %.2x"
#define DMA_UART_052 9052 //"<SCO LOOPBACK TX> len: %d, buff: %.2x %.2x %.2x %.2x %.2x %.2x %.2x %.2x %.2x %.2x"
#define DMA_UART_053 9053 //"<CMD LOOPBACK TX> len: %d, buff: %.2x %.2x %.2x %.2x %.2x %.2x %.2x %.2x %.2x %.2x"
#define DMA_UART_054 9054 //"<DMA UART H5> H5 Interrupt: INTSTS: %.8x"
#define DMA_UART_055 9055 //"hci_handle_received_packet: ACL PKT: handle(%d), length(%d), next(0x%.8x), ws(0x%.8x), DATA END: 0x%.2x 0x%.2x 0x%.2x 0x%.2x"
#define DMA_UART_056 9056 //"ACL TX: ACL PKT DES[%d] @0x%.8x: handle(%d), length(%d), next(0x%.8x), ws(0x%.8x), DATA END: 0x%.2x 0x%.2x 0x%.2x 0x%.2x"
#define DMA_UART_057 9057 //"ACL TX: acl_tx_index(%d), acl_q_head(%d)"
#define DMA_UART_058 9058 //"aclq_get_next_acl_pkt(): Unexpected while (ppkt1 != NULL) loop, acl_q_head(%d)"
#define DMA_UART_059 9059 //"dma_tx_fifo_pkt_free(): idx(%d) pool_id(%d)"
#define DMA_UART_060 9060 //"ACLQ Link List: ACLQ[%d] @0x%.8x: handle(%d), length(%d), next(0x%.8x), ws(0x%.8x), DATA END: 0x%.2x 0x%.2x 0x%.2x 0x%.2x"
#define DMA_UART_061 9061 //"CMD_TX_BUF_FREE_RX_START_CTL_REG: %08x"
#define DMA_UART_062 9062 //"###### _DMA_LOOPBACK_TEST_ ######"
#define DMA_UART_063 9063 //"###### _NORMAL_TEST_ ######"
#define DMA_UART_064 9064 //"###### ISSC MODE: NOP EVT with CMD NUM = 1 ######"
#define DMA_UART_065 9065 //"###### H5 Force SCO as Reliable ######"
#define DMA_UART_066 9066 //"<DMA UART H5> H5 Interrupt: INTSTS: %.8x        W1C: %08x"
#define DMA_UART_067 9067 //"<DMA UART> uart_set_baud_clk_RTL8723() return API_SUCCESS; clk_sel = %d, pll_sel = %d, pll_d = %d, ovsr(real_ovsr-5) = %d, divisor = %d"
#define DMA_UART_068 9068 //"<DMA UART> RTL8723 HCI UART: check baud_in ... "
#define DMA_UART_069 9069 //"++++++ UART Interface ++++++      hci_uart_reset_init_RTL8723(re_init_flag=%d) STARTS...  g_baudRat =0x%08x, g_uart_clk=%d, chk_bton_en=%d, wr_bton_en=%d, baud_det_en=%d, baud_default_en=%d, baud_det_timeout=%d, baud_det_timeout_en=%d"
#define DMA_UART_070 9070 //"Free ACL TX FIFO %d"
#define DMA_UART_071 9071 //"CMD_TX_BUF_FREE:%08x    ACL_TX_BUF_FREE:%08x    SCL_TX_BUF_FREE:%08x    pending CMD:%d"
#define DMA_UART_072 9072 //"CMD_TX_BUF_FREE:%08x    ACL_TX_BUF_FREE:%08x    SCL_TX_BUF_FREE:%08x"
#define DMA_UART_073 9073 //"<DMA UART> hci_uart_reset_init_RTL8723(re_init_flag=%d,use_baud_in_flag=%d,baud_in=0x%08x) STARTS...   g_baudRat =0x%08x, g_uart_clk=%d, chk_bton_en=%d, wr_bton_en=%d, baud_det_en=%d, baud_default_en=%d, baud_det_timeout=%d, baud_det_timeout_en=%d"
#define DMA_UART_074 9074 //"<BT DMA> isr_status = 0x%08x err status= %08x"
#define DMA_UART_075 9075 //"<HCI UART PHY> set MODEM_CTL_REG = 0x%02x"
#define DMA_UART_076 9076 //"<HCI UART H5> Unexpected Poll Wake Timeout !!! Timer Handle: %d"
#define DMA_UART_077 9077 //"<DMA UART H5> H5 Interrupt: INTSTS: %.8x"
#define DMA_UART_078 9078 //"<DMA UART H5> TRX ACTIVE CHECK MASK = 0x%08x"
#define DMA_UART_081 9081 //"go_sleep %d times, succ %d times, restore %d times"
#define DMA_UART_082 9082 //"Free DMA Fifo Index %d"
#define DMA_UART_083 9083 //"DMA stais is NOT idle, CANNOT go to LPS mode! H5 leave sleep!"
#define DMA_UART_084 9084 //"DMA stais is idle!, STORE/H5-Reinit/RESTORE START ..."
#define DMA_UART_085 9085 //"H5 go sleep %d times,        succ %d times,        DMA idle & restore %d times"
#define DMA_UART_086 9086 //"<HCI UART H5> Timing Parameter Adapt: baudrate_hz = %dHz, g_hci_uart_resend_target = (250>>%d)ms, resend_to_val = %d, retry_limit = %d"
#define DMA_UART_087 9087 //"<HCI UART H5> hci_uart_h5_go_sleep() FAIL! park_ok_int = %d,  BTDMA_trigger = %d,   intsts_reg = 0x%08x"
#define DMA_UART_088 9088 //"<HCI UART H5> hci_uart_h5_go_sleep() SUCCESS! park_ok_int = %d,  BTDMA_trigger = %d,   intsts_reg = 0x%08x"
#define DMA_UART_089 9089 //"<HCI UART H5> hci_uart_h5_go_sleep() FAIL! DMA ISR !=0 !"
#define DMA_UART_090 9090 //"<HCI UART H5> hci_uart_h5_go_sleep() FAIL! DMA INT triggered !"
#define DMA_UART_091 9091 //"H5 go sleep: test %d times,   go_sleep %d times,   succ %d times,   dma_triggered %d times,   isr_status!=0 %d times,   dma fifo conflict %d timers"
#define DMA_UART_092 9092 //" hci_uart_man.h5_retry_alarm_state = %d,   hci_uart_man.h5_retry_fail_state = %d,   hci_uart_man.h5_sleep_msg_state = %d"
#define DMA_UART_093 9093 //"++++++ UART Interface ++++++      hci_uart_reset_init_RTL8723(re_init_flag=%d) STARTS...  g_baudRat =0x%08x, g_uart_clk=%d, g_data_uart_settings = 0x%08x, g_data_uart_settings_2 = 0x%08x, g_data_uart_settings_3 = 0x%08x"
#define DMA_UART_094 9094  //"<----HCI_EVENT:code:%02x len:%d, %02x %02x %02x %02x %02x %02x %02x %02x %02x %02x"
#define DMA_UART_095 9095  //"BT_FW_HCI_TASKS_260 START"
#define DMA_UART_096 9096  //"BT_FW_HCI_TASKS_260 END"
#define DMA_UART_097 9097  //"+++++ HCI UART H5 Mode +++++"
#define DMA_UART_098 9098  //"+++++ HCI UART H4 Mode +++++"
#define DMA_UART_099 9099  //"ENABLE _DMA_LOOPBACK_TEST_"
#define DMA_UART_100 9100  //"ENABLE _MODIFY_LOOPBACK_CODE_"
#define DMA_UART_101 9101  //"ISSC MODE: NOP EVT with CMD NUM = 1"
#define DMA_UART_102 9102  //"enable_hci_loopback_mode = 1"
#define DMA_UART_103 9103  //"H5 Force SCO as Unreliable"
#define DMA_UART_104 9104  //"H5 Force SCO as Reliable"
#define DMA_UART_105 9105  //"H5 UART DEBUG PORT: 0x%02x"
#define DMA_UART_106 9106  //"H5 DMA DEBUG PORT: 0x%02x"
#define DMA_UART_107 9107  //"send command status event with NOP command to host:  %02x %02x %02x %02x %02x %02x"
#define DMA_UART_108 9108  //"hci_uart_h5_send_short_break() STARTS ..."
#define DMA_UART_109 9109  //"Long Break Timer Handle: %d"
#define DMA_UART_110 9110  //"hci_uart_h5_clr_unack_pkt() STARTS ..."
#define DMA_UART_111 9111  //"hci_uart_h5_send_sleep_msg() STARTS ..."
#define DMA_UART_112 9112  //"hci_uart_h5_send_sleep_msg_wait_done():    baudrate_khz = %d,  byte_us = %d"
#define DMA_UART_113 9113  //"hci_uart_h5_poll_wake() STARTS ..."
#define DMA_UART_114 9114  //"hci_uart_h5_poll_wake() ACTIVE"
#define DMA_UART_115 9115  //"hci_uart_h5_poll_wake() STOPs due to poll_wake = 1"
#define DMA_UART_116 9116  //"Poll Wake Timer Handle: %d"
#define DMA_UART_117 9117  //"hci_uart_h5_go_sleep() STARTS ..."
#define DMA_UART_118 9118  //"hci_uart_h5_leave_idle() STARTS ..."
#define DMA_UART_119 9119  //"rx_sleep_int, hci_uart_man.h5_sleep_msg_state = %d"
#define DMA_UART_120 9120  //"poll_wake_int with rx_woken_int"
#define DMA_UART_121 9121  //"poll_wake_int without rx_woken_int"
#define DMA_UART_122 9122  //"h4_err_event_recov Timer Handle: %d"
#define DMA_UART_123 9123  //"HCI_VENDOR_ISSC_WARM_RESET Received!"
#define DMA_UART_124 9124  //"<----HCI_EVENT:code:%02x len:%d"
#define DMA_UART_125 9125  //"---->HCI_CMD:code:%04x len:%d"
#define DMA_UART_126 9126  //"lbm_queue len: %d,   wr_ptr: %x,   rd_ptr: %x"
#define DMA_UART_127 9127  //"HCI_VENDOR_SET_BAUDRATE (0xFC17)  COMMAND_COMPLETE_EVENT RX INTERRUPT; Set Baudrate.d32 = 0x%x   Result: %d (0: SUCCESS) "
#define DMA_UART_128 9128 //"<DMA UART> BTON_UART_INFO_REG: 0x%.8x"
#define DMA_UART_129 9129 //"<DMA UART> Write BTON_UART_INFO_REG: 0x%.8x"
#define DMA_UART_130 9130 //"<DMA UART> uart_set_baud_clk(baud.d32 = 0x%.8x, re_init_flag = %d) STARTS ... "
#define DMA_UART_131 9131 //"<DMA UART> +++++ Set Baudrate = %d Hz +++++          uart_set_baud_clk_RTL8723() return API_SUCCESS; baud.d32 = 0x%x; re_init_flag = %d"
#define YL_DBG_HEX_1 9132 //"<YL DBG - 1> 0x%X"
#define YL_DBG_HEX_2 9133 //"<YL DBG - 2> 0x%X %X"
#define YL_DBG_HEX_3 9134 //"<YL DBG - 3> 0x%X %X %X"
#define YL_DBG_HEX_4 9135 //"<YL DBG - 4> 0x%X %X %X %X"
#define YL_DBG_HEX_5 9136 //"<YL DBG - 5> 0x%X %X %X %X,  %X"
#define YL_DBG_HEX_6 9137 //"<YL DBG - 6> 0x%X %X %X %X,  %X %X"
#define YL_DBG_HEX_7 9138 //"<YL DBG - 7> 0x%X %X %X %X,  %X %X %X"
#define YL_DBG_HEX_8 9139 //"<YL DBG - 8> 0x%X %X %X %X,  %X %X %X %X"
#define YL_DBG_HEX_9 9140 //"<YL DBG - 9> 0x%X %X %X %X,  %X %X %X %X, %X"
#define YL_DBG_HEX_10 9141 //"<YL DBG - 10> 0x%X %X %X %X,  %X %X %X %X,  %X %X"
#define YL_DBG_HEX_11 9142 //"<YL DBG - 11> 0x%X %X %X %X,  %X %X %X %X,  %X %X %X"
#define YL_DBG_HEX_12 9143 //"<YL DBG - 12> 0x%X %X %X %X,  %X %X %X %X,  %X %X %X %X"
#define YL_DBG_HEX_13 9144 //"<YL DBG - 13> 0x%X %X %X %X,  %X %X %X %X,  %X %X %X %X,  %X"
#define YL_DBG_HEX_14 9145 //"<YL DBG - 14> 0x%X %X %X %X,  %X %X %X %X,  %X %X %X %X,  %X %X"
#define YL_DBG_HEX_15 9146 //"<YL DBG - 15> 0x%X %X %X %X,  %X %X %X %X,  %X %X %X %X,  %X %X %X"
#define YL_DBG_HEX_16 9147 //"<YL DBG - 16> 0x%X %X %X %X,  %X %X %X %X,  %X %X %X %X,  %X %X %X %X"
#define YL_DBG_HEX_17 9148 //"<YL DBG - 17> 0x%X %X %X %X,  %X %X %X %X,  %X %X %X %X,  %X %X %X %X,  %X"
#define YL_DBG_HEX_18 9149 //"<YL DBG - 18> 0x%X %X %X %X,  %X %X %X %X,  %X %X %X %X,  %X %X %X %X,  %X %X"
#define YL_DBG_HEX_19 9150 //"<YL DBG - 19> 0x%X %X %X %X,  %X %X %X %X,  %X %X %X %X,  %X %X %X %X,  %X %X %X"
#define YL_DBG_HEX_20 9151 //"<YL DBG - 20> 0x%X %X %X %X,  %X %X %X %X,  %X %X %X %X,  %X %X %X %X,  %X %X %X %X"
#define DMA_UART_161 9161 //"<DMA UART,BAUD EST> uart_h5_intsts 0x%x, uart_h5_inten 0x%x, uart_toggle_mon 0x%x, valid sign 0x%X, baud 0x%X, est_state %d, trial_cnt %d, min_low_period_rec %d, min_falling_space_rec %d, min_low_period %d"
#define DMA_UART_162 9162 //"<DMA UART,BAUD EST> intr_en %d, intr_sts %d, toggle_mon_en %d, mon_data_valid %d, falling_space %d, low_period %d, falling_cnt_th %d, sync_received %d, set_baud received %d, set_baud executed %d"
#define DMA_UART_163 9163 //"<DMA UART,BAUD EST> hci_uart_falling_cnt_isr() ... hci_uart_baud_est_state %d, hci_uart_baud_est_intr_cnt %d, h5_ln_state %d, DMA_UART_STS_REG 0x%x"
#define DMA_UART_170 9170 //"<DMA UART,BAUD EST> uart_falling_cnt_intr_sts = %d, uart_min_falling_space = %d, uart_min_low_period = %d, uart_falling_cnt_th = %d, uart_toggle_mon = %d, uart_falling_cnt_intr_en = %d"
#define DMA_UART_171 9171 //"<DMA UART,BAUD EST> BAUD EST Interrupt: INTSTS: %.8x"
#define DMA_UART_172 9172 //"<DMA UART,BAUD EST> intr_en %d, intr_sts %d, toggle_mon_en %d, mon_data_valid %d, falling_space %d, low_period %d, falling_cnt_th %d"
#define YL_DBG_DEC_1 9173 //"<YL DBG DEC - 1> %d"
#define YL_DBG_DEC_2 9174 //"<YL DBG DEC - 2> %d %d"
#define YL_DBG_DEC_3 9175 //"<YL DBG DEC - 3> %d %d %d"
#define YL_DBG_DEC_4 9176 //"<YL DBG DEC - 4> %d %d %d %d"
#define YL_DBG_DEC_5 9177 //"<YL DBG DEC - 5> %d %d %d %d,  %d"
#define YL_DBG_DEC_6 9178 //"<YL DBG DEC - 6> %d %d %d %d,  %d %d"
#define YL_DBG_DEC_7 9179 //"<YL DBG DEC - 7> %d %d %d %d,  %d %d %d"
#define YL_DBG_DEC_8 9180 //"<YL DBG DEC - 8> %d %d %d %d,  %d %d %d %d"
#define YL_DBG_DEC_9 9181 //"<YL DBG DEC - 9> %d %d %d %d,  %d %d %d %d, %d"
#define YL_DBG_DEC_10 9182 //"<YL DBG DEC - 10> %d %d %d %d,  %d %d %d %d,  %d %d"
#define YL_DBG_DEC_11 9183 //"<YL DBG DEC - 11> %d %d %d %d,  %d %d %d %d,  %d %d %d"
#define YL_DBG_DEC_12 9184 //"<YL DBG DEC - 12> %d %d %d %d,  %d %d %d %d,  %d %d %d %d"
#define YL_DBG_DEC_13 9185 //"<YL DBG DEC - 13> %d %d %d %d,  %d %d %d %d,  %d %d %d %d,  %d"
#define YL_DBG_DEC_14 9186 //"<YL DBG DEC - 14> %d %d %d %d,  %d %d %d %d,  %d %d %d %d,  %d %d"
#define YL_DBG_DEC_15 9187 //"<YL DBG DEC - 15> %d %d %d %d,  %d %d %d %d,  %d %d %d %d,  %d %d %d"
#define YL_DBG_DEC_16 9188 //"<YL DBG DEC - 16> %d %d %d %d,  %d %d %d %d,  %d %d %d %d,  %d %d %d %d"
#define YL_DBG_DEC_17 9189 //"<YL DBG DEC - 17> %d %d %d %d,  %d %d %d %d,  %d %d %d %d,  %d %d %d %d,  %d"
#define YL_DBG_DEC_18 9190 //"<YL DBG DEC - 18> %d %d %d %d,  %d %d %d %d,  %d %d %d %d,  %d %d %d %d,  %d %d"
#define YL_DBG_DEC_19 9191 //"<YL DBG DEC - 19> %d %d %d %d,  %d %d %d %d,  %d %d %d %d,  %d %d %d %d,  %d %d %d"
#define YL_DBG_DEC_20 9192 //"<YL DBG DEC - 20> %d %d %d %d,  %d %d %d %d,  %d %d %d %d,  %d %d %d %d,  %d %d %d %d"
#define POW_LOG_001 9201 //"<POW> !!! Power-Down/Suspend HW Execute Fail !!!, exe_pdn_flag = %d, exe_sus_flag = %d, delay = %d(us) "
#define DMA_UART_202 9202 //"GPIO_13 (HOST_WAKE_BT) Interrupt Occurs!"
#define DMA_UART_203 9203 //"UART TX Packet drop!!! CMD drop cnt: %d, ACL drop cnt: %d, SCO drop cnt: %d"

#define BRUCE_DBG_PLC_14 9204 //"<BRUCE_DBG_PLC - 14> tot=%d CRC=%d HEC=%d pkt_miss=%d,  HW_pkt_miss=%d  burst=% d erasecnt_2=%d erasecnt_3=%d erasecnt_5=%d mse_avg=%d , 0xE0=%X 0x254=%X 0x25E=%X,  0x23E=%X "

#define BRUCE_DBG_LOG_9205 9205 //"setting max_slot=0(don't care),for LMP_preferred_rate %d, %d, %d"

#define PSD_LOG_001 9250  //"bit map %x %x %x %x %x %x %x %x %x %x"
#define PSD_LOG_002 9251  //"le bit map %x %x %x %x %x"

#define LPS_LOG_001 9301  //"<LPS> lc_handle_sm_intr()    POWER_STATUS_REGISTER = 0x%x"
#define LPS_LOG_003 9303  //"<LPS> lc_post_dsm_mode_signal_test(sleep_duration_slot = %d, piconet_id = %d) STARTs...   slot_ind = %d,   wakeup_instant = %d"
#define LPS_LOG_004 9304  //"<LPS> lc_program_dsm_mode(wakeup_instant = 0x%x, piconet_id = %d) STARTs... "
#define LPS_LOG_005 9305  //"<LPS> IS_ENABLE_POWER_SAVE = 0; EXIT lc_program_dsm_mode()"
#define LPS_LOG_006 9306  //"<LPS> lmp_self_device_data.scan_enable != 0; EXIT lc_program_dsm_mode()"
#define LPS_LOG_007 9307  //"<LPS> (diff = %d) not in the range of [%d,0xFFFF]; EXIT lc_program_dsm_mode()"
#define LPS_LOG_008 9308  //"<LPS> execute_lps_mode_procedure_6128(bz_wake = %d, bz_wake_time = %x) STARTs... "
#define LPS_LOG_009 9309  //"<LPS> enter_lps_mode_6128(bluewiz_wakeup = %d) STARTs..."
#define LPS_LOG_010 9310  //"<LPS> lc_program_dsm_mode DSM entrance condition (connnection status check) FAIL:   total_no_of_sco_conn = %d,   number_of_esco_connections = %d,   number_of_hlc = %d"
#define LPS_LOG_011 9311  //"<LPS> lc_handle_sm_intr() at Instant = 0x%x  (Wakeup Instant = 0x%x)"
#define LPS_LOG_012 9312  //"<LPS> sleep_mode_param: bb_sm_sts = %d,   bb_sm_wakeup_inst = %d,   bb_sm_piconet_id = %d,   BB_INT_STS = 0x%x,  VENDOR(0x00) = 0x%x,  VENDOR(0x40) = 0x%x"
#define LPS_LOG_013 9313 //"<BB INT> isr_status = 0x%08x"
#define LPS_LOG_014 9314 //"<LPS> scan_enable = %d,   total_no_of_sco_conn = %d,   number_of_esco_connections = %d,   number_of_hlc = %d,   number_of_parked_dev = %d"
#define LPS_LOG_015 9315 //"<LPS> SNIFF: lc_post_DSM_mode_signal;   ps_clock = %d,   ps_duration = %d,   cur_pic_id = %d, sniff_last_instant = %d, sniff_interval = %d"
#define LPS_LOG_016 9316 //"<LPS> SNIFF: lc_post_SM_mode_signal;   ps_clock = %d,   ps_duration = %d,   cur_pic_id = %d, sniff_last_instant = %d, sniff_interval = %d"
#define LPS_LOG_017 9317 //"<LPS> SNIFF: NOT post Sleep Signal;   ps_clock = %d,   ps_duration = %d,   cur_pic_id = %d, sniff_last_instant = %d, sniff_interval = %d"
#define LPS_LOG_018 9318 //"<LPS> BB_handle_start_of_sniff_attemp_interrupt(lut_index = %x) STARTs..."
#define LPS_LOG_019 9319 //"<LPS> BB_handle_end_of_sniff_attemp_interrupt(lut_index = %x) STARTs..."
#define LPS_LOG_020 9320 //"<LPS> BB_handle_sniff_interrupt() STARTs...   bm_sniff_start = 0x%x,   bm_sniff_end = 0x%x"
#define LPS_LOG_021 9321 //"<BB HANDLE RX INT> packet_header = 0x%x"
#define LPS_LOG_022 9322 //"lc_exit_sm_mode () is being Called;    bb_sm_sts = %d"
#define LPS_LOG_023 9323 //"<BB HANDLE TX INT> lc_tx_status = 0x%x"
#define LPS_LOG_024 9324 //"[PM] !**enter lc_program_lps_mode but task_id = %d with queue num = %d"
#define LPS_LOG_025 9325 //"<LPS> enter lc_program_lps_mode lps_mode = %d, wakeup_instant = 0x%x, piconet_id = %d "
#define LPS_LOG_026 9326 //"[TIMER2] g_timer2_counter= 0x%x"
#define LPS_LOG_027 9327 //"<LPS> execute_exit_lps_mode_procedure_6128 here with bb_sm_sts = %d (0: normal, 1: sleep, 2: deep sleep)"
#define LPS_LOG_028 9328 //"<LPS> EXIT lc_program_lps_mode()"
#define LPS_LOG_029 9329 //"<LPS> EXIT lc_program_sniff_sm_mode() cause g_timer2_counter = %d"

#define LPS_LOG_030 9330 //"<LPS>                                clock: 0x%x with pow_ctrl.b.lps_mode_en = 1! pow_ctrl.b = 0x%x <!!!!!!!!!!>"
#define LPS_LOG_031 9331 //"Sup TO: link_supervision_timeout = %d, sniff_interval = %d, lc_sniff_cont_count = %d "
#define LPS_LOG_032 9332 //"[clk:0x%08X] *PDU resp timer(ce:%d pid:%d addr:%d send:%08x[%d %d] exp:%08x)..timer(handle:%d cnt:%d lps_cnt:%d)"
#define LPS_LOG_033 9333 //"<LPS> lps_scan_interval = %d, lps_scan_window = %d"
#define LPS_LOG_034 9334 //"sleep_mode_param.bb_sm_sts != BB_NORMAL_MODE @ g_lps_timer_counter = 0x%x"
#define LPS_LOG_035 9335 //"**** BB REG DUMP ---- ADDR %03X:     %04X %04X %04X %04X %04X %04X %04X %04X %04X %04X %04X %04X %04X %04X %04X %04X "
#define LPS_LOG_036 9336 //"0x%x 0x%x 0x%x"
#define LPS_LOG_037 9337 //"0x%x 0x%x 0x%x 0x%x"
#define LPS_LOG_038 9338 //"Timer Intr at Wrong State: g_lps_timer_counter=0x%x, bb_sm_sts=0x%x"
#define LPS_LOG_039 9339 //"[TIMER2] g_timer2_counter= 0x%x write_bb_reg_count = 0x%x"
#define LPS_LOG_040 9340  //"<LPS> lc_handle_sm_intr() at Instant = 0x%x  (Wakeup Instant = 0x%x) with enable_deep_lps_mode = 0x%x"
#define LPS_LOG_041 9341  //"<LPS> lc_program_dsm_mode(lps_mode = 0x%x, wakeup_instant = 0x%x) STARTs... "
#define LPS_LOG_042 9342 //"<LPS> #%d: Wakeup:0x%x Sleep:0x%x Mode:0x%x Bitmap:0x%x at Wakeup Instance:0x%x Now:0x%x 0x%x"
#define LPS_LOG_043 9343  //"<LPS> table_index=0x%x (diff = 0x%x) not in the range of [%d,0xFFFF]; EXIT lc_program_dsm_mode()"
#define LPS_LOG_044 9344 //"<BB HANDLE RX INT> packet_header = 0x%x sup_count = 0x%x next_instance   = 0x%x"
#define LPS_LOG_045 9345  //"<LPS> lc_program_lps_mode() at Instant = 0x%x  (Wakeup Instant = 0x%x)"
#define LPS_LOG_046 9346 //"wakeup_scan_enable = 0x%x lps_table_ing_bitmap = 0x%x"
#define LPS_LOG_047 9347  //"<LPS> NativeClk=0x%x WakeUp=0x%x LPS mode=0x%xEXIT lc_program_dsm_mode()"
#define LPS_LOG_048 9348 //"<LPS> #%d: Wakeup(3):0x%x Sleep(3):0x%x (%x %x) Reason:0x%x Cnt:%d Bitmap:0x%x at Wakeup Instance(6):0x%x Now(6):0x%x  Sleep at(6):0x%x %x %x"

#define LPS_LOG_050 9350 //"<DLPS> enable_deep_lps_mode = %x at BTON reg = %x"
#define LPS_LOG_051 9351 //"<DLPS> Exit from DLPS"
#define LPS_LOG_052 9352 //"<LPS> EXIT lc_program_lps_mode() with fail = 0x%x"
#define LPS_LOG_053 9353 //"VENDOR Reg Write Pass %x / Write Twice Pass %x"
#define LPS_LOG_054 9354 //"Inquiry scan timer fail enable=%d, inq_scan_timer=0x%x, random_backoff_timer=0x%x, error_bitmap=0x%x"
#define LPS_LOG_055 9355 //"LOW_POW_SRC: %d, osc_k_method: %d"
#define LPS_LOG_056 9356 //"Alpha_tracker_fb_alg init, address:0x%x, size:%d"
#define LPS_LOG_057 9357 //"Page scan timer fail enable=%d, page_scan_timer=0x%x, error_bitmap=0x%x"

#define MDM_LOG_001 9501 //"<MODEM DEBUG> g_modem_sram_debug_array: 0x%08X, modem_reg.p2reg52 = 0x%04X, modem_reg.p2reg54 = 0x%04X "
#define MDM_LOG_002 9502 //"<MODEM DEBUG> reg_sram_debug_en %d, INDEX %d, hex2dec('%X') hex2dec('%X') hex2dec('%X') hex2dec('%X') hex2dec('%X') hex2dec('%X') hex2dec('%X') hex2dec('%X') hex2dec('%X') hex2dec('%X') hex2dec('%X') hex2dec('%X') hex2dec('%X') hex2dec('%X') hex2dec('%X') hex2dec('%X') "
#define MDM_LOG_003 9503 //"<MODEM DEBUG> RX INTERRUPT, Stop Record!"
#define MDM_LOG_004 9504 //"<MODEM DEBUG> RX INTERRUPT, Stop Record!"
#define MDM_LOG_005 9505 //"<MODEM DEBUG> MODEM-RPT/MP_GAIN_IDX = 0x%02X"
#define MDM_LOG_006 9506 //"<MODEM DEBUG> fl %d IDX %d hex2dec('%X') hex2dec('%X') hex2dec('%X') hex2dec('%X') hex2dec('%X') hex2dec('%X') hex2dec('%X') hex2dec('%X') hex2dec('%X') hex2dec('%X') hex2dec('%X') hex2dec('%X') hex2dec('%X') hex2dec('%X') hex2dec('%X') hex2dec('%X') "
#define MDM_LOG_007 9507 //"<MODEM REGISTER> ********** WARNING: WRITE MODEM REG0x00 = %d AT RUN-TIME (AFTER INITIALIZATION) **********"
#define MDM_LOG_008 9508 //"<MODEM REGISTER> ********** WARNING: READ MODEM REG0x00 AT RUN-TIME (AFTER INITIALIZATION) **********"
#define MDM_LOG_009 9509 //"<RADIO ACCESS> ======= MODEM Reg: g_efuse_modem_pi_enable = %d, Page = 0x%X, Start Address = 0x%02X ======="
#define MDM_LOG_010 9510 //"<RADIO ACCESS> ======= RFC Reg:  g_efuse_modem_pi_enable = %d, Start Address = 0x%02X ======="
#define MDM_LOG_011 9511 //"<RADIO ACCESS> ======= g_efuse_modem_pi_enable is intialized as %d ======="
#define MDM_LOG_012 9512 //"<MODEM REGISTER> ********** WARNING: ACCESS RADIO before initializing g_efuse_modem_pi_enable **********"
#define MDM_LOG_013 9513 //"<MODEM REGISTER> ********** WARNING: ACCESS MODEM REG0x00 AT RUN-TIME, R(1)/W(0) = %d **********"
#define MDM_LOG_014 9514 //"<PSD SCAN> BB_handle_psd_end_intr() executes ... "
#define MDM_LOG_015 9515 //"<PSD SCAN> PSD Start Native Clock: 0x%X"
#define MDM_LOG_016 9516 //"<PSD SCAN> PSD End Native Clock: 0x%X"
#define MDM_LOG_017 9517 //"<PSD SCAN> WARNING: PSD SCAN with g_efuse_modem_pi_enable = 0 !!!!!"
#define MDM_LOG_018 9518 //"<MODEM DEBUG> CAPTURE TRIGGERED: rssi=0x%x, packet_header=0x%x, payload_header=0x%x"
#define MDM_LOG_019 9519 //"<MODEM DEBUG> RX ERROR LOG: rssi=0x%x, packet_header=0x%x, payload_header=0x%x"
#define MDM_LOG_020 9520 //"<RFC> BT RF LOK, rtl8821_btrf_lok() result(rf0x21) = 0x%04X"
#define MDM_LOG_021 9521 //"<MODEM RX RPT> ch %d  rssi %d  header 0x%x,  p0reg68 0x%x  p0reg6a 0x%x  p0reg6c 0x%x  p0reg6e 0x%x  p0reg70 0x%x  p2reg64 0x%x  p2reg76 0x%x  p2reg78 0x%x  p2reg7a 0x%x  p2reg7c 0x%x  p2reg7e 0x%x"
#define MDM_LOG_022 9522 //"<MODEM RX RPT -- LE> reg_union 0x%x  reg_union2 0x%x  crc_err %d,  p0reg68 0x%x  p0reg6a 0x%x  p0reg6c 0x%x  p0reg6e 0x%x  p0reg70 0x%x  p2reg64 0x%x  p2reg76 0x%x  p2reg78 0x%x  p2reg7a 0x%x  p2reg7c 0x%x  p2reg7e 0x%x"
#define MDM_LOG_023 9523 //"<MODEM RX RPT> ch %d  rssi %d  pkt header 0x%x  pld header 0x%x,  p0reg68 0x%x  p0reg6a 0x%x  p0reg6c 0x%x  p0reg6e 0x%x  p0reg70 0x%x,  p2reg64 0x%x  p2reg76 0x%x  p2reg78 0x%x  p2reg7a 0x%x  p2reg7c 0x%x  p2reg7e 0x%x,  p0reg7e 0x%x"
#define MDM_LOG_024 9524 //"<MODEM RX RPT -- LE> reg_union 0x%x  reg_union2 0x%x  fifo_word_cnt %d  crc_err %d,  p0reg68 0x%x  p0reg6a 0x%x  p0reg6c 0x%x  p0reg6e 0x%x  p0reg70 0x%x,  p2reg64 0x%x  p2reg76 0x%x  p2reg78 0x%x  p2reg7a 0x%x  p2reg7c 0x%x  p2reg7e 0x%x,  p0reg7e 0x%x"

#define MDM_LOG_040 9540 //"<MODEM PSD> lmp_handle_channel_assess_timer_expiry()..."
#define MDM_LOG_041 9541 //"<MODEM PSD> lmp_modem_psd_scan_period_timer_expiry()...   scan_period_cnt = %d"
#define MDM_LOG_042 9542 //"<MODEM PSD> lmp_modem_psd_scan_tdm_timer_expiry()...   scan_tdm_cnt = %d,  scan_tdm_ch_start = %d,  scan_tdm_ch_step = %d,  scan_tdm_ch_stop = %d"
#define MDM_LOG_043 9543 //"<MODEM PSD> lmp_modem_psd_afh_map_gen_timer_expiry()..."
#define MDM_LOG_044 9544 //"<MODEM PSD> WARNING: PSD TDM Scan Un-finished in-time,  scan_tdm_state = %d !!!!"
#define MDM_LOG_045 9545 //"<MODEM PSD> psd_dbm_add200_signle[%d:...]:   %d %d %d %d %d   %d %d %d %d %d   %d %d %d %d %d   %d %d %d %d %d"
#define MDM_LOG_046 9546 //"<MODEM PSD> psd_dbm_add200_max_hold[%d:...]:   %d %d %d %d %d   %d %d %d %d %d   %d %d %d %d %d   %d %d %d %d %d"
#define MDM_LOG_047 9547 //"<MODEM PSD> lmp_generate_afh_map_for_device()..."
#define MDM_LOG_048 9548 //"<MODEM PSD> OS_START_TIMER(scan_period_timer, 10)..."

#define MDM_LOG_060 9560 //"<RFC> BT RF LOK, rtl8821_btrf_lok() result(rf0x21) = 0x%04X      TXIQK(page0.0x7C) = 0x%04X"

#define MDM_LOG_070 9570 //"<TMETER> (N_old: %d) --> (N_new: %d),  Thermal Diff: %d,  pwr_trk_new: %02X,  cfo_trk_new: %02X"
#define MDM_LOG_071 9571 //"<LOK> READ RFC TMETER  (WARNING: This shall only executed at RE-BOOT)"

#define MDM_LOG_080 9580 //"<RFC> VCO CURVE TRACK: g_vco_trk_en: %d,  g_vco_tmeter_init: %d,  tmeter_now: %d,  g_vco_st: %d,  vco_st_nxt: %d"
#define MDM_LOG_081 9581 //"<PSD> ERROR: modem_psd_report_entry_num = 0 !!!"

#define RF_MSG_LOG_00 9590 //"lok 0x21:%x , iqk_x:%x , iqk_y:%x , lok_success:%x"
#define RF_MSG_LOG_01 9591 //"single iqk/lok result , iqk_x:%x , iqk_y:%x , lok:%x , fail:%x , timeout:%x"
#define RF_MSG_LOG_02 9592 //"polling tmeter ready bit timeout!!"
#define RF_MSG_LOG_03 9593 //"Read Rfc Via Mac_Pi TIMEOUT!!! We might suffer a severe issue!!!"
#define RF_MSG_LOG_04 9594 //"Write Rfc Via Mac_Pi TIMEOUT!!! We might suffer a severe issue!!!"
#define RF_MSG_LOG_05 9595 //"Modem AFC Test: TPM0/IQM1:%d Tx0/Rx1:%d Loop = %d , 2s after will start"
#define RF_MSG_LOG_06 9596 //"TPM0/IQM1:%d Tx0/Rx1:%d CH:%d, max(diff):%d, min(diff):%d ,LCK:%d, diff(<=-4:1:>=4):%d %d %d %d %d %d %d %d %d"
#define RF_MSG_LOG_07 9597 //"Airplane Mode Enable!!!"
#define RF_MSG_LOG_08 9598 //"!!ERROR!! THERMAL_TIMER stop fail!"
#define RF_MSG_LOG_09 9599 //"!!ERROR!! THERMAL_TIMER start fail!"
#define RF_MSG_LOG_10 9600 //"Airplane Mode Disable!!!"

#define SECURE_CONN_LOG1 9601 //"[SC] Tx(Msb0x%X Lsb0x%X) Rx(Msb0x%x Lsb0x%X) DayCounter%X"
#define SECURE_CONN_LOG2 9602 //"[SC] First eSCO Start (ce:%d) DayCounter- FWSetValue 0x%08x Read0x%08X"
#define SECURE_CONN_LOG3 9603 //"[SC] [clk0x%08x] 4th MIC Error!! Disconnect!!"
#define SECURE_CONN_LOG4 9604 //"[SC] [clk 0x%08x] %dth MIC error(ce%d, pid%d, am_addr%d) pkt_len%d, llid%d, ptt%d, err(hex%d, crc%d) (ph:0x%04x pl:0x%04x) Tx(Msb0x%X Lsb0x%X) Rx(Msb0x%x Lsb0x%X) DayCounter%X"
#define SECURE_CONN_LOG5 9605 //"[SC] [clk 0x%08x] Rx Good Pkt(ce%d, pid%d, am_addr%d) pkt_len%d, llid%d, ptt%d, mic_err_cnt%d (ph:0x%04x pl:0x%04x) Tx(Msb0x%X Lsb0x%X) Rx(Msb0x%x Lsb0x%X) DayCounter%X"
#define SECURE_CONN_LOG6 9606 //"[SC] ce%d Secure Connection Enabled. Ping%d"
#define SECURE_CONN_LOG7 9607 //"[SC] ce%d Secure Connection(Host%d, Controller%d) Not Enabled."
#define YL_DUMP_REG_16B 9608 //"<YL DUMP REG 16B> ADDRESS 0x%02X: %04X %04X %04X,  %04X %04X %04X %04X,  %04X %04X %04X %04X,  %04X %04X %04X %04X,  %04X"

//==================Misc Debug Use (9800 ~) ===========================
#define LC_SYNC_LINKS_CODEC  9800  //"lc_handle_connect_sco, SCO_index = %d, CE_index = %d, Dsco = %d, Tsco = %d, pkt_type = %d, air_mode = %d, PCM_CODEC_type = %d, En_8bit = %d"
#define LC_PCM_CODEC_REG  9801  //" PCM Codec Reg, 0x9E=%04x, 0xDE=%04x, 0x1EC = %04x, 0x1EE = %04x, 0x23C = %04x, 0xE0 = %04x, 0x254 = %04x, 0x25E = %04x, 0x260 = %04x"
#define LMP_SCO_AIRMODE  9802  //"SCO AIR mode = %x"
#define LC_ESCO_LINKS_CODEC  9803  //"lc_make_esco_connection, ESCO_index = %d, air_mode = %d, PCM_CODEC_type = %d, En_8bit = %d"
#define MSG_PAGESCAN_PICONET_DIFF 9804 //"BB_hlc_interrupt: piconet is different for pagescan(%d -> %d)"
#define MSG_PAGING_PICONET_DIFF 9805 //"BB_hlc_interrupt: piconet is different for paging(%d -> %d)"
#define MSG_ACL_TX_PKT_ORDER_FIFO 9806 //"ACL Tx Pkt Order FIFO reg = 0x%x"
#define MSG_LE_TX_PKT_ORDER_FIFO 9807 //"LE Tx Pkt Order FIFO reg = 0x%x"
#define MSG_ACL_TXADDR_INPTR 9808 //"ACL Tx Buffer Addr = 0x%x"

#define MSG_PCM_MUX_PCMOUT_0   9809 //"Switch to pcm mux, PCMOUT drive HIGH/LOW. 0x38 = 0x%x, 0x48 = 0x%x, 0xB4 = 0x%x"

#define MSG_ACL_TX_HCI_PAYLOAD_SIZE_LIMIT 9810 //"ACL Tx HCI payload size limit: %04x"
#define MSG_PACKET_ADDR 9811 //"Index: 0x%x, Tx Packet Address: 0x%x"

#define MSG_ACL_HDR_LEN_SHORTER 9812 //"USB ACL Tx Pkt shorter than Length field, Connection Handle=0x%x, ACL FIFO Index=0x%x"
#define MSG_ACL_HDR_LEN_LONGER 9813 //"USB ACL Tx Pkt longer than Length field, Connection Handle=0x%x, ACL FIFO Index=0x%x"

#define MSG_LE_HDR_LEN_SHORTER 9814 //"USB LE Tx Pkt shorter than Length field, Connection Handle=0x%x, LE FIFO Index=0x%x"
#define MSG_LE_HDR_LEN_LONGER 9815 //"USB LE Tx Pkt longer than Length field, Connection Handle=0x%x, LE FIFO Index=0x%x"

#define INTR_ACL_HDR_LEN_LONGER 9816 //"Intr early: USB ACL Tx Pkt longer than Length field, Pkt Index = %04x"
#define INTR_LE_HDR_LEN_LONGER 9817 //"Intr early: USB LE Tx Pkt longer than Length field, Pkt Index = %04x"
#define MSG_ACL_PKT_LEN 9818 //"USB ACL Tx Pkt Length=0x%x"
#define INTR_CMD_PKT_ERR 9819 //"Intr early: USB CMD Tx Pkt Err. DMA ISR=0x%X"

#define MSG_HCI_VENDOR_CMDS_FEATURE_MAP 9820 //"op:0x%x, sub:%d orig_feature_map(0x%x) new_map(0x%x) return(%d)"
#define MSG_HCI_VENDOR_CMDS_SET_BT_FW_FEATURE 9821 //"Vendor cmd(0xFC6E, sub:7) feature_map = 0x%x"
#define MSG_HCI_VENDOR_CMDS_UPDATE_MAC_REGISTER 9822 //"Vendor cmd(0xFC6E, sub:9) reg_type(%d) addr(0x%x) mask(0x%x) data(0x%x)"
#define MSG_HCI_VENDOR_CMDS_SET_BT_FW_FEATURE2 9823 //"Vendor cmd(0xFC6E, sub:11) feature_map = 0x%x"

#define LC_ESCO_DATA_PKT_Q 9824 //"esco_data_q_ptr->esco_data_pkt_Q: 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x"
#define LC_LPS_KILL_INQ_SCAN 9825 //"lps_kill_inq_scan: sleep_mode_param.legacyscan_flag.scan_flag = 0x%x"
#define LC_LPS_KILL_PAGE_SCAN 9826 //"lps_kill_page_scan: sleep_mode_param.legacyscan_flag.scan_flag = 0x%x"

#define LC_MAX_QOS_TPOLL 9827 //"ce_index_max_qos_tpoll:0x%x max_qos_tpoll:0x%x"
#define BZ_AUTH_VALIDATE_SYNC_PARAM 9828 //"hci_validate_sync_params, self_air_mode_bitmap(0x%x) rem_air_mode_bitmap(0x%x) host_params->voice_setting(0x%x)"
#define BZ_AUTH_LINK_KET_REQ_REPLY 9829 //"Link_Key Req Reply:idx:%d type:%d substate:%d pend_pdu_ptr:0x%08x data:0x%08x%08x%08x%08x"

#define BZ_AUTH_LINK_KET_NOTI 9830 //"Link_Key Noti:idx:%d BD_ADDR:0x%04x%04x%04x type:%d"
#define BZ_AUTH_LINK_KET_DATA 9831 //"Link_Key Data: 0x%04x%04x%04x%04x%04x%04x%04x%04x"

#define MSG_CODEC_I2S_0 9840  //"USING CODEC: I2S"
#define MSG_CODEC_0 9841  //"USING CODEC"

#define MSG_USBLPM_SUSPEND_L1 9842 //"USB Suspend: L1"
#define MSG_USBLPM_SUSPEND_L2 9843 //"USB Suspend: L2"
#define MSG_USBLPM_SUSPEND_L1_ERR 9844 //"USB Suspend: L1 Error State"
#define MSG_USBLPM_SUSPEND_L1_RMTWKUP_EN 9845 //"USB Suspend: L1 RemoteWakeup enable"
#define MSG_USBLPM_SUSPEND_L1_RMTWKUP_DIS 9846 //"USB Suspend: L1 RemoteWakeup disable"
#define MSG_USBLPM_SUSPEND_L1_HIRDBESL_VAL 9847 //"USB Suspend: L1 HIRD/BESL=0x%x, Value=0x%x"
#define MSG_USBLPM_REG 9848 //"USB LPM Reg=0x%x"
#define MSG_USBLPM_SUSPEND_L2_RMTWKUP_EN 9849 //"USB Suspend: L2 RemoteWakeup enable"
#define MSG_USBLPM_SUSPEND_L2_RMTWKUP_DIS 9850 //"USB Suspend: L2 RemoteWakeup disable"


// ============== PHY ========
#define PHY_LOG1 10001 //"rck = 0x%x"
#define PHY_LOG2 10002 //"[RXADCK] Rxadc[%d] from modem = 0x%x"
#define PHY_LOG3 10003 //"[RXADCK] Rxadc_sum = 0x%x"
#define PHY_LOG4 10004 //"[RXADCK] Rxadck_result = 0x%x"
#define PHY_LOG5 10005 //"IQK/LOK result: lok:0x%x , iqk_x:0x%x , iqk_y:0x%x"
#define PHY_LOG6 10006 //"function pointer is not assigned"
#define PHY_LOG7 10007 //"Polar Tx cannot switch RF mode"
#define PHY_LOG8 10008 //"[PHY_VENDOR] Set txgain_index = 0x%x, edr_txgain_index = %d"
#define PHY_LOG9 10009 //"lbt_enable = %d, lbt_mode = %d, lbt_ant_gain = %d"
#define PHY_LOG10 10010 //"THERMAL_TIMER start fail!"
#define PHY_LOG11 10011 //"THERMAL_TIMER create fail!"
#define PHY_LOG12 10012 //"[TX_PWR_TRACK] Tx power track phase: %d, thermal_now = %d, tx_power_table_offset = %d, RF_MODE = %d, txgaink = %d, RF 0x02 = 0x%x"
#define PHY_LOG13 10013 //"[TX_PWR_TRACK] txgain_1M[%d]=0x%x, txgain_2M[%d]=0x%x, txgain_3M[%d]=0x%x"
#define PHY_LOG14 10014 //"[TX_PWR_TRACK] txgain_1M[%d]=0x%x"
#define PHY_LOG15 10015 //"[TX_PWR_TRACK] LE_txgain_offset = 0x%x, txgain_LE1M_adv = 0x%x, txgain_LE2M_adv = 0x%x"
#define PHY_LOG16 10016 //"[TX_PWR_TRACK] txgain_LE1M_2402 = 0x%x, txgain_LE1M_2480 = 0x%x, txgain_LE2M_2402 = 0x%x, txgain_LE2M_2480 = 0x%x"
#define PHY_LOG17 10017 //"[TX_PWR_TRACK] txgain_LE1M = 0x%x, txgain_LE2M = 0x%x, txgain_LE1M_adv = 0x%x, txgain_LE2M_adv = 0x%x"
#define PHY_LOG18 10018 //"[TX_PWR_TRACK] txgain_LE1M_2402 = 0x%x, txgain_LE1M_2480 = 0x%x, txgain_LE2M_2402 = 0x%x, txgain_LE2M_2480 = 0x%x, txgain_LR = 0x%x"
#define PHY_LOG19 10019 //"[TX_PWR_TRACK] enable_0p25_comp_for_thermal_tracking=%d, txgain_offset_x1000_floor=%d"
#define PHY_LOG20 10020 //"[TX_PWR_TRACK] enable_0p25_comp_for_thermal_tracking=%d, txgain_offset_x1000=%d, txgain_offset_x1000_floor=%d"
#define PHY_LOG21 10021 //"[TX_PWR_TRACK] tx_power_table_offset=%d"
#define PHY_LOG22 10022 //"Error phy rate: %d"
#define PHY_LOG23 10023 //"WRONG modulation scheme: %d"
#define PHY_LOG24 10024 //"[TXGAIN_FLATK] original[%d]=0x%x"
#define PHY_LOG25 10025 //"[TXGAIN_FLATK] larger than 7dB: 0x%x"
#define PHY_LOG26 10026 //"[TXGAIN_FLATK] res_0p25dB_part[%d]=0x%x"
#define PHY_LOG27 10027 //"[TXGAIN_FLATK] rfc=%d, modem=%d, fw=%d"
#define PHY_LOG28 10028 //"[TXGAIN_FLATK] rfc_comp[%d]=0x%x"
#define PHY_LOG29 10029 //"[TXGAIN_FLATK] modem_0p50=0x%x, modem_0p25=0x%x"
#define PHY_LOG30 10030 //"[LBT] idx_1M = %d, idx_2M = %d, idx_3M = %d (tx_power_idx <= %d is the biggest power step), lbt_case = %d (0:BR, 1:EDR)"
#define PHY_LOG31 10031 //"Error phy rate: %d, type: %d"
#define PHY_LOG32 10032 //"Out of modify rf mode range: 0x%x, rf mode: %d"
#define PHY_LOG33 10033 //"RSSI type=%d, rssi_raw=0x%x, rssi_dBm=%d, phy_rssi0_dBm=%d, is_TPM=%d"
#define PHY_LOG34 10034 //"[RFC_IND] Indirect access RF is disabled, reg=0x%x"
#define PHY_LOG35 10035 //"[RFC_IND] rfc access conflict, reg=0x%x"
#define PHY_LOG36 10036 //"[RFC_IND] cannot detect RFC_Indirect read done, give up read 0x%x this time"
#define PHY_LOG37 10037 //"[RFC_IND] Indirect access RF is disabled, reg=0x%x, wdata=0x%x"
#define PHY_LOG38 10038 //"[RFC_IND] rfc access conflict, reg=0x%x, wdata=0x%x"
#define PHY_LOG39 10039 //"[RFC_IND] cannot detect RFC_Indirect write done, give up write 0x%x = 0x%x this time"
#define PHY_LOG40 10040 //"Wrong default_rf_type: %d"
#define PHY_LOG41 10041 //"Get tx bound power fail: txgain_type=%d, rf_mode=%d, request_power=0x%x, LR=0x%x"

#define LEGACY_LOG1 10101 //"ce_index=%d, super_state=0x%x, sub_state=0x%x, lk_type=0x%x, enc_mode=%d, auto_epr_time_count=%d, txn_params.auth_role=%d, txn_params.lk_type=0x%x"
#define LEGACY_LOG2 10102 //"Auth pending pdu opcode: %d"
#define LEGACY_LOG3 10103 //"Auth pending ext_pdu opcode: %d"
#define LEGACY_LOG4 10104 //"Already obtained feature page %d of ce_index=%d"
#define LEGACY_LOG5 10105 //"Enable DUT mode, scan_enable=%d"
#define LEGACY_LOG6 10106 //"[Sniff] stop lmp_power_control_handle for sniff fail! ce_index = %d"
#define LEGACY_LOG7 10107 //"[Sniff] stop supervision_timeout_handle for sniff fail! ce_index = %d"
#define LEGACY_LOG8 10108 //"[Sniff] start sniff_supervision_timeout_handle fail! ce_index = %d"
#define LEGACY_LOG9 10109 //"[Sniff] stop sniff_supervision_timeout_handle for sniff fail! ce_index = %d"
#define LEGACY_LOG10 10110 //"[Sniff] re-start sup_timer after exit sniff fail! ce_index = %d"
#define LEGACY_LOG11 10111 //"[Sniff] re-start lmp_power_control_handle after exit sniff fail! ce_index = %d"
#define LEGACY_LOG12 10112 //"channel map update miss instant, entry:%d next_ce:%d instant:%d"
#define LEGACY_LOG13 10113 //"conn update miss instant, entry:%d next_ce:%d, instant:%d"
#define LEGACY_LOG14 10114 //"phy update miss instant, entry:%d next_ce:%d instant:%d"
#define LEGACY_LOG15 10115 //"PSW Reg bit14/15: %d %d with inst: 0x%x"
#define LEGACY_LOG16 10116 //"Unsniff procedure didn't finish in single sniff window, enter fw transition mode, pid: %d, am_addr: %d lc_sniff_sup_count: %d, ce_ptr->Tpoll_bkp=%d, ce_ptr->Tpoll=%d"
#define LEGACY_LOG17 10117 //"Sniff end: pid:%d, ce:%d, piconet_clk:0x%x, native_clk:0x%x, sniff count:%d sup_count:%d"
#define LEGACY_LOG18 10118 //"[Coex] tx_int instant = 0x%x, native_count = %d"
#define LEGACY_LOG19 10119 //"Add esco entry in coex manager fail, esco_conn_handle=0x%x"
#define LEGACY_LOG20 10120 //"Free pkt of paused eSCO link, pending_len=%d"
#define LEGACY_LOG21 10121 //"[Coex] eSCO recv crc error pkt!"
#define LEGACY_LOG22 10122 //""[eSCO] Enable esco end null option"
#define LEGACY_LOG23 10123 //"Start conn_complete_timer fail, ce_index=%d"
#define LEGACY_LOG24 10124 //"AckedTxPktHead: buf %08x, data %08%08x, ws %08x, next %08x, len %d (clk=0x%08x)"
#define LEGACY_LOG25 10125 //"txdesc_used_cnt:%d, txdesc[0].DWord0=%08x, txdesc[0].DWord1=%08x, txfifo_ptr=%08x"
#define LEGACY_LOG26 10126 //"baseband reg 0x52 bit12 is available, ce_index %d"
#define LEGACY_LOG27 10127 //"[Coex] The eSCO link conn_handle=0x%x doesn't exist in esco_le_coex_manager"
#define LEGACY_LOG28 10128 //"[Coex] The LE link conn_handle=0x%x doesn't exist in esco_le_coex_manager"
#define LEGACY_LOG29 10129 //"[Coex] No free le entry in coex manager"
#define LEGACY_LOG30 10130 //"[Coex] Clear esco coex entry %d"
#define LEGACY_LOG31 10131 //"[Coex] Clear conn_handle 0x%x in esco_le_coex_manager"
#define LEGACY_LOG32 10132 //"[Coex] Change accept_olp_time from %d to %d"
#define LEGACY_LOG33 10133 //"[Coex] conn_update, update_instant=%d, next_ce_ctr=%d"
#define LEGACY_LOG34 10134 //"[Coex] chmap_update, update_instant=%d, next_ce_ctr=%d"
#define LEGACY_LOG35 10135 //"[Coex] phy_update, update_instant=%d, next_ce_ctr=%d"
#define LEGACY_LOG36 10136 //"[Coex] before decide pause next eSCO, unpause eSCO"
#define LEGACY_LOG37 10137 //"[Coex] (upperbound) esco_exp_clk = 0x%x, LE entry %d next_ap = 0x%x, clk_diff = 0x%x, ce_ctr = %d, olp_counter = %d"
#define LEGACY_LOG38 10138 //"[Coex] (lowerbound) esco_exp_clk = 0x%x, LE entry %d next_ap = 0x%x, clk_diff = 0x%x"
#define LEGACY_LOG39 10139 //"[Coex] esco_start_instant(native clk) = 0x%x, piconet_clk = 0x%x, switch_to_le_bm =0x%x, force_switch_to_le_bm = 0x%x, force_esco_paused_flag = 0x%x"
#define LEGACY_LOG40 10140 //"[Coex] eSCO_start_int scatternet_ctrl = 0x%x"
#define LEGACY_LOG41 10141 //"[Coex] native_clk = 0x%x, clk_diff = 0x%x, expected_ap = 0x%x"
#define LEGACY_LOG42 10142 //"Release scatternet ctrl, clk_diff = 0x%x, 0x29C = 0x%x"
#define LEGACY_LOG43 10143 //"[Coex] esco_end_instant(native clk) = 0x%x"
#define LEGACY_LOG44 10144 //"[Coex] eSCO_end_int pause eSCO, switch_to_le_bm=0x%x, force_switch_to_le_bm=0x%x, feature_bm=0x%x"
#define LEGACY_LOG45 10145 //"[Coex] eSCO rx_int instant=0x%x, switch_to_le_bm=0x%x, force_switch_to_le_bm=0x%x"
#define LEGACY_LOG46 10146 //"[Coex] LE entry %d is going to supervision timeout, native_clk = 0x%x, le_last_instant = 0x%x, clk_diff = 0x%x"
#define LEGACY_LOG47 10147 //"[Coex] olp_counter=%d, then return to 0"
#define LEGACY_LOG48 10148 //"[Coex] should switch control to LE, accept_olp_time=%d, overlap_counter=%d, switch_to_le_bm=0x%x, force_switch_to_le_bm=0x%x, force_esco_paused_flag=%d"
#define LEGACY_LOG49 10149 //"lmp transaction collision tid:%d"
#define LEGACY_LOG50 10150 //"The remote device should not return not accept ext for remove esco request"
#define LEGACY_LOG51 10151 //"Wrong eSCO status when disconnecting: %d"
#define LEGACY_LOG52 10152 //"ce_index: %d, preferred rate: %d"
#define LEGACY_LOG53 10153 //"[Sniff] Supervision Timeout: ce_index = %d"
#define LEGACY_LOG54 10154 //"The remote device should not return not accept for unsniff request, reason: 0x%x"
#define LEGACY_LOG55 10155 //"The role switch req is going to be rejected, reason = 0x%x"
#define LEGACY_LOG56 10156 //"Sniff collision! ce_index=%d, tid=%d"
#define LEGACY_LOG58 10158 //"lmp transaction collision tid:%d"
#define LEGACY_LOG59 10159 //"Wrong eSCO status: %d"
#define LEGACY_LOG60 10160 //"[eSCO] reject req caused by the same desco and piconet"
#define LEGACY_LOG61 10161 //"lmp_disconnect_esco_links: eSCO status=%d"
#define LEGACY_LOG62 10162 //"ce_index=%d, setup_complete_status=%d"
#define LEGACY_LOG63 10163 //"Reject Role switch for ce %d while %d is switching"
#define LEGACY_LOG64 10164 //"[PSD Legacy] afh_ch_num: %d, afh_ch_avg_psd: %d, max_mean: %d, less_psd_thd_ch_num: %d, rssi_dB: %d, suggested_rate: %d"
#define LEGACY_LOG65 10165 //"[PSD LE] afh_ch_num: %d, afh_ch_avg_psd: %d, max_mean: %d, less_psd_thd_ch_num: %d, rssi_dB: %d"
#define LEGACY_LOG66 10166 //"Disallow set BD_ADDR because we are master in piconet %d"
#define LEGACY_LOG67 10167 //"dhkey calculate and check procedure fail"
#define LEGACY_LOG68 10168 //"[AFH] map update status cur ce %d, diff us: 0x%x"
#define LEGACY_LOG69 10169 //"Ignore remote preferred rate because there is no intersection with support feature"
#define LEGACY_LOG70 10170 //"clear piconet info register with invalid piconet id %d, LR=0x%x"
#define LEGACY_LOG71 10171 //"Start random backoff timer fail, random_backoff_timer=0x%x"
#define LEGACY_LOG72 10172 //"waiting for remote reponse of max request pdu transaction , skip the new one, ce_index: 0x%x"
#define LEGACY_LOG73 10173 //"Page scan timer cb: inst_status=0x%x 0x%x, scan_flag=0x%x, %x, inq/ps cnt=0x%x 0x%x, scan_window_reg=0x%x 0x%x"
#define LEGACY_LOG74 10174 //"Inq scan timer cb:  inst_status=0x%x 0x%x, scan_flag=0x%x, %x, inq scan cnt=0x%x, page scan cnt=0x%x, scan_window_reg=0x%x 0x%x"
#define LEGACY_LOG75 10175 //"Kill page scan: scan_flag=0x%x"
#define LEGACY_LOG76 10176 //"Kill inq scan: scan_flag=0x%x"
#define LEGACY_LOG77 10177 //"Receive ps fhs: pid=%d, lt_addr=%d, ce=%d, bd_addr=0x%02x%02x%02x%02x%02x%02x"
#define LEGACY_LOG78 10178 //"Receive ps fhs: same_as_paging_addr=%d"
#define LEGACY_LOG79 10179 //"Scan Info: is %d ps %d enable %d"

#define HCI_LOG0 10300 //"hci_handle_eflash_cmd: g_eflash_hci_read_buffer_ptr %p"
#define HCI_LOG1 10301 //"hci_handle_eflash_cmd: g_eflash_hci_read_buffer_tmp_ptr %p"

#define LE_LOG1 10501 //"[Coex] CE_EARLY: ce_ctr = %d, ce_early_instant = 0x%x, native_count = %d, slv_latency = %d, switch_to_le_bm = 0x%x, force_switch_to_le_bm = 0x%x"
#define LE_LOG2 10502 //"[Coex] CE_END: ce_ctr = %d, ce_end_instant = 0x%x, at_least_one_crc_ok = %d, at_least_one_acc_hit = %d"
#define LE_LOG3 10503 //"[Coex] ce_end_int unpause eSCO"
#define LE_LOG4 10504 //"llid error Entry:%d, CE:%d, llid:%d"
#define LE_LOG5 10505 //"Update LE early time to 0x%x (0x0 means no link)"
#define LE_LOG6 10506 //"Add LE entry in coex manager fail, le_conn_handle=0x%x"
#define LE_LOG7 10507 //"[Coex] unpause esco in ll_cleanup_rx_status(), ce_ctr=%d"
#define LE_LOG8 10508 //"[Coex] pause esco entry %d back"
#define LE_LOG9 10509 //"Wake from slv latency because rx data pkt"
#define LE_LOG10 10510 //"pcd not idle! read again."
#define LE_LOG11 10511 //"[Coex] eSCO is paused by dape mechanism in ce_early_int, ce_counter - updated_ce_counter = %d, avoid=%d, slot_ofst_avoid=%d"
#define LE_LOG12 10512 //"Update int(type:%d) for entry:%d, ce:%d"
#define LE_LOG13 10513 //"Modify Local SCA from %d to %d, Remote SCA update for pid:%d, entry:%d, ce:%d, from %d to %d"
#define LE_LOG14 10514 //"Restore Local SCA to %d, Remote SCA %d, ce:%d"
#define LE_LOG15 10515 //"Channel map update for pid:%d, entry:%d, instance:%d, nxt_ce:%d, map:0x%x_%x %x %x"
#define LE_LOG16 10516 //"Unknown rx phy rate: %d"
#define LE_LOG17 10517 //"Retry wake_from_slave_latency meu_cs:%d, slv_entry:%d"
#define LE_LOG18 10518 //"wake_from_slave_latency with conn_updt cur_ce: %d, instant:%d"
#define LE_LOG19 10519 //"wake_from_slave_latency with conn_updt slv_entry:%d, cur_ce: %d, ap:0x%x, cur_clk:%d, time_diff_updt:0x%x, ce_cnt_diff_updt:%d"
#define LE_MSG_PRIVACY_CHECK_RPA_AH_BY_FW 10520 //"[LL][Privacy]: Address = [pRand:%03x] + [ah:%03x]: IRK: %08x%08x%08x%08x AES-128 out[23:0]: %x, result: %x"
#define LE_MSG_PRIVACY_CAL_RPA_LOG        10521 //"[LL][Privacy]: ll_cal_rpa, rpa_idx = %d, random_num = 0x%x, local_rpa_res = 0x%x, local_rpa[0] = 0x%x, local_rpa[1] = 0x%x, local_rpa[2] = 0x%x"
#define LE_WAKE_FROM_SLAVE_LATENCY_SEND_SIGNAL_FAIL 10522 //"Retry wake_from_slave_latency fail"
#define LE_WAKE_FROM_SLAVE_LATENCY_RETRY_2  10523    //"Retry wake_from_slave_latency processing id:%d"

#define CHECK_COLLISION_ADV_FOUND_SPACE 10540    //"Ext adv check collision success. Itered adv handle:%d, ch map:0x%x, instant:0x%x, duration_slot:%d, retry_max:%d"
#define CHECK_COLLISION_ADV_NOT_FOUND_SPACE 10541   //"Ext adv check collision fail. Itered adv handle:%d, ch map:0x%x, instant:0x%x, duration_slot:%d, retry_max:%d"
#define LE_BTC_CHECK_COLLISION_DEBUG    10542    //"[LL][clk:%d] Check Collision use BTC: type:%d, instant:(%d+%d->%d), offset:%d, reserved_slot:%d, intvl:%d, past:(%d->%d), future:%d"
#define LE_BTC_CHECK_COLLISION_ADV_LEN_LOG 10543 //"[LL][clk:%d] Check Collision use BTC, calculate ADV duration: type:%d, Legacy:%d, adv_duration:%dus (%d slots)"
#define LE_BTC_CHECK_COLLISION_NO_SPACE 10544    //"[LL][clk:%d] Check Collision Can't Found Free Space: type:%d, instant:(%d->%d), offset:%d, reserved_slot:%d, intvl:%d, past:(%d->%d), future:%d"
#define LL_EXT_ADV_CHECK_COLLISION_LOG  10545    //"[ADV_EXT] adv check collision:%d, task:0x%x, type:%d, instant:%d -> %d, next_free_slot_offset:%d < %d"

// ============== morgan add afh ========
#define AFH_DISPLAY_UINT16_DATA 11511 //"<AFH> Display Uint16 data type = %d value = 0x%2x"
#define AFH_DISPLAY_UINT8_DATA 11512 //"<AFH> Display Uint8 data type = %d value = 0x%x 0x%x"
#define AFH_DISPLAY_UINT32_DATA 11513 //"<AFH> Display Uint32 data type = %d value = 0x%4x"
#define AFH_DISPLAY_UINT16_2_DATA 11514 //"<AFH> Display Uint16 data type = %d value = 0x%x 0x%x"
#define AFH_DISPLAY_UINT32_2_DATA 11515 //"<AFH> Display Uint32 data type = %d value = 0x%2x 0x%2x"
#define AFH_DISPLAY_UINT8_2_DATA 11516 //"<AFH> Display Uint8 data type = %d value = 0x%x 0x%x"
#define AFH_NEED_WIFI_PSD 11517 //"<AFH> BT need Wifi report psd and channel"
#define AFH_WIFI_SET_CH_BW 11518 //"<AFH> Wifi Set Channel BW, AFH MAP[0]=> %02x, AFH MAP[1]=>%02x, AFH MAP[2]=>%02x, AFH MAP[3]=>%02x, AFH MAP[4]=>%02x, AFH MAP[5]=> %02x, AFH MAP[6]=> %02x, AFH MAP[7]=> %02x, AFH MAP[8]=>%02x, AFH MAP[9]=> %02x "
#define AFH_SUB_RECOVER_WIFI 11519 //"<AFH> recover sub state = wifi"
#define AFH_SUB_RECOVER_RANDOM 11520 //"<AFH> recover sub state = random"
#define AFH_SUB_RECOVER_STATE 11521 //"<AFH> recover sub state = %d ( 0=random 1= wifi)"
#define AFH_DISPALY_BT_AFH_CH_QTY 11522 //"<AFH> display bt afh ch = %d quality = %d  %d  %d  %d  %d  %d  %d  %d  %d  %d"
#define AFH_TRY_RECOVER_CH 11523 //"<AFH> generate 2 recover direction= %d (0 : up 1: down )channel = %d %d"
#define AFH_GEN_RANDOM_NUMBER 11524 //"<AFH> generate recover rendom number = %d"
#define AFH_CHANNEL_QUALITY_ACL_SCO_NO_TRAFFIC 11525 //"<AFH> CHANNEL_QUALITY_ACL_SCO_NO_TRAFFIC ACL=%d SCO=%d"
#define AFH_LMP_SEND_SET_AFH_PDU 11526 //"<AFH> Send Lmp Set AFH PDU"
#define AFH_CHANNEL_QUALITY_ACL_LOW_TRAFFIC 11527 //"<AFH> CHANNEL_QUALITY_ACL_LOW_TRAFFIC=%d"
#define AFH_CHANNEL_QUALITY_SCO_LOW_TRAFFIC 11528 //"<AFH> CHANNEL_QUALITY_SCO_LOW_TRAFFIC=%d"
#define AFH_SET_STATE 11529 //"<AFH> #### RESET AFH SET STATE = %d ####"
#define AFH_DISPLAY_MAP_STATE 11530 //"<AFH> Generate the AFH map STATE, piconet=>%d, AFH_STATE=> %x ,ch as mode = %d "
#define AFH_FIND_WIFI_CHANNEL 11531 //"<AFH> Find wifi used channel = %d"
#define MAILBOX_BT_LOOPBACK 11807 //"<MAILBOX> Set BT_LOOPBACK value = %04x %04x"
// ============== morgan add pta ========
#define PTA_DISPLAY_MESSAGE3 12000 //"<PTA> display timer handle = 0x%x 0x%x"
#define PTA_HCI_TD_RX_TRANSPORT 12001 //"<PTA> Measure HCI TD RX : Packet_type(1 CMD 2 ACL 3 SCO 4 EVt 5 LE) = 0x%x length = 0x%x bytes"
#define PTA_HCI_TD_TX_TRANSPORT 12002 //"<PTA> Measure HCI TD TX : Packet_type(1 CMD 2 ACL 3 SCO 4 EVt 5 LE) = 0x%x length = 0x%x bytes(times)"
#define PTA_INQUIRY_GET_COD_IN_FHS 12003 //"<PTA> obtain FHS CoD in inquiry CoD = 0x%x 0x%x 0x%x"
#define PTA_DISPLAY_MESSAGE 12004 //"<PTA> display message 1 timer enable 2 meter value 3 enter HCI TX= 0x%x"
#define PTA_DISPLAY_MESSAGE2 12005 //"<PTA> display timer handle = 0x%x"
#define PTA_DISPLAY_FHS_MESSAGE 12006 //"<PTA FHS> display FHS message EIR=0x%x BD_ADDR=0x%x 0x%x  0x%x 0x%x 0x%x CoD=0x%x 0x%x 0x%x LT_ADDR=0x%x"
#define PTA_DISPLAY_VERSION_MESSAGE 12007 //"<PTA> FW version 20111115 morgan add mailbox cmd bt report status"
#define PTA_DISPLAY_FHS_SERVICE_MESSAGE_POSITION 12010 //"<PTA SERVICE FHS MSG>POSITION"
#define PTA_DISPLAY_FHS_SERVICE_MESSAGE_NETWORK 12011 //"<PTA SERVICE FHS MSG>NETWORK"
#define PTA_DISPLAY_FHS_SERVICE_MESSAGE_RENDERING 12012 //"<PTA SERVICE FHS MSG>RENDERING"
#define PTA_DISPLAY_FHS_SERVICE_MESSAGE_CAPTURE 12013 //"<PTA SERVICE FHS MSG>CAPTURE"
#define PTA_DISPLAY_FHS_SERVICE_MESSAGE_OBJTRANSFER 12014 //"<PTA SERVICE FHS MSG>OBJTRANSFER"
#define PTA_DISPLAY_FHS_SERVICE_MESSAGE_AUDIO 12015 //"<PTA SERVICE FHS MSG>AUDIO"
#define PTA_DISPLAY_FHS_SERVICE_MESSAGE_TELEPHONY 12016 //"<PTA SERVICE FHS MSG>ELEPHONY"
#define PTA_DISPLAY_FHS_SERVICE_MESSAGE_INFORMATION 12017 //"<PTA SERVICE FHS MSG>NFORMATION"
#define PTA_DISPLAY_FHS_MESSAGE_COMPUTER 12018 //"<PTA MAJOR FHS MSG>COMPUTER"
#define PTA_DISPLAY_FHS_MESSAGE_PHONE 12019 //"<PTA MAJOR FHS MSG>PHONE"
#define PTA_DISPLAY_FHS_MESSAGE_LAN 12020 //"<PTA MAJOR FHS MSG>LAN"
#define PTA_DISPLAY_FHS_MESSAGE_AUDIOVIDEO 12021 //"<PTA MAJOR FHS MSG>AUDIOVIDEO"
#define PTA_DISPLAY_FHS_MESSAGE_PERIPHERAL 12022 //"<PTA MAJOR FHS MSG>PERIPHERAL"
#define PTA_DISPLAY_FHS_MESSAGE_IMAGE 12023 //"<PTA MAJOR FHS MSG>IMAGE"
#define PTA_DISPLAY_FHS_MESSAGE_TOY 12024 //"<PTA MAJOR FHS MSG>TOY"
#define PTA_DISPLAY_FHS_MESSAGE_UNKNOWN 12025 //"<PTA MAJOR FHS MSG>UNKNOWN"
#define PTA_DISPLAY_FHS_MESSAGE_SERVICE_UNKNOWN 12026 //"<PTA SERIVCE CLASS FHS MSG>UNKNOWN"
#define PTA_DISPLAY_FHS_MESSAGE_WEARABLE 12027 //"<PTA MAJOR FHS MSG>IMAGE"
#define PTA_DISPLAY_FHS_MESSAGE_NON_MOUSE_KEYBOARD 12028 //"<PTA MINOR FHS MSG>NON_MOUSE_KEYBOARD"
#define PTA_DISPLAY_FHS_MESSAGE_MOUSE 12029 //"<PTA MINOR FHS MSG>MOUSE"
#define PTA_DISPLAY_FHS_MESSAGE_KEYBOARD 12030 //"<PTA MINOR FHS MSG>KEYBOARD"
#define PTA_DISPLAY_FHS_MESSAGE_COMBO_MOUSE_KEYBOARD 12031 //"<PTA MINOR FHS MSG>COMBO_MOUSE_KEYBOARD"
#define PTA_MAILBOX_TASK_IN 12032 //"<PTA> mailbox task in type=%d id=0x%x buf1=0x%x buf2=0x%x"
#define PTA_MAILBOX_TASK_OUT 12033 //"<PTA> mailbox task out type=%d id=0x%x buf1=0x%x buf2=0x%x"
#define PTA_BT_INT_MSG 12034 //"<PTA> mailbox interrupt out_rdy=0x%x in_rdy=0x%x out_data_rdy=0x%x"
#define PTA_MAILBOX_WRITE_TASK 12035 //"<PTA> mailbox task out type=%d id=0x%x buf1=0x%x buf2=0x%x"
#define PTA_DISPLAY_HCI_MESSAGE_SNIFF_MODE 12039 //"<PTA> HCI_SNIFF_MODE_PROFILE Tsniff=0x%d sniff attepmt=0x%x timeout=0x%x "
#define PTA_DISPLAY_HCI_MESSAGE_FLUSHABLE 12040 //"<PTA> HCI_FLUSHABLE_A2DP_PROFILE"
#define PTA_DISPLAY_BT_INFO_MESSAGE 12041 //"<PTA> BT MESSAGE Connection=  %d SCO= %d INQ= %d ACL=%d SCO busy= %d TXRetry=%d  HID=%d A2DP=%d FTP=%d RETRY=%d TXSLOT=%d RXSLOT=%d"
#define PTA_DISPLAY_BT_INFO_MESSAGE2 12042 //"<PTA> enter mailbox command 0x23"
#define PTA_DISPLAY_HCI_REBUILD_PACKET_SIZE 12043 //"<PTA> Rebuild PAcket size = %d"
#define PTA_DISPLAY_FIND_FTP_PROFILE 12044 //"<PTA>  ### FIND FTP PROFILE ###"
#define PTA_DISPLAY_PACKET_TYPE_TABLE 12045 //"<PTA> Packet type table = 0x%x length = %d"
#define PTA_DISPLAY_ENTER_SMALL_PACKET 12046 //"<PTA> Enter small packet  lut_type= 0x%x length = %d"
#define PTA_DISPLAY_HID_MESSAGE 12047 //"<PTA> find HID profile"
#define PTA_DISPLAY_HID_MESSAGE2 12048 //"<PTA> packet info HID_Exist=%d LLID=0x%x am_addr=%d pid=%d conn_handle=%d cur_conn_handle=%d"
#define PTA_DISPLAY_HID_MESSAGE3 12049 //"<PTA> enter HID packet reg setting wdata = 0x%x"
#define PTA_DISPLAY_TXRETRYCNT_INFO_MESSAGE 12050 //"<PTA> TxRetryCountermeasure retryslot= %d txslot= %d rxslot= %d"
#define PTA_DISPLAY_BT_INFO_MESSAGE3 12051 //"<PTA> Conn=%d SCO=%d INQ=%d ACL=%d SCO busy=%d TXRetry=%d HID=%d A2DP=%d FTP=%d out_data2 %x rssi_sum %d pkt_cnt=%d"
#define PTA_DISPLAY_BT_AUTO_REPORT_FLAG 12052 //"<PTA> AUTO REPORT Conn=  %d  INQ= %d SCOconn= %d ACLbusy=%d SCObusy= %d TXRetry=%d  HID=%d A2DP=%d FTP=%d ReInit=%d"

// ============== 5.0 LE Periodic Advertising ========
#define PA_ENTITY_FREE_FAIL                 17500       //"<PA> WARNING!!, PA entity is NULL."
#define PA_ENTITY_ALLOCATE_FAIL             17501       //"<PA> WARNING!!, PA entity allocate fail."
#define LE_MSG_PA_CREATE_SYNC_CMD_PARA      17502       //"<PA> LE PA_Creat_Sync_Cmd: status: 0x%x, Options: 0x%02x, Advertising_SID: 0x%x, Advertiser_Address_Type: 0x%x, Advertiser_Address: 0x%02x%02x%02x%02x%02x%02x, Skip: 0x%x, Sync_Timeout: 0x%x, Sync_CTE_Type: 0x%02x"
#define PA_RX_WARNING                       17503       //"<PA> WARNING!!, PA Rx unexpect adv pkt type. %x"
#define PA_RX_HW_ENTRY_ID_MISMATCH          17504       //"<PA> WARNING!!, PA Rx HW entry ID %d and %d mismatch."
#define PA_UNKNOWN_HW_ENTRY_ID              17505       //"<PA> WARNING!!, Unknown HW entry ID %d"
#define PA_UNEXPECTED_ERROR                 17506       //"<PA> WARNING!!, unexpected PA-related error. (%x, %x, %x)"
#define PA_RX_SUPERVISION_TIMEOUT           17507       //"<PA> PA scanner (%x) supervision timeout (%x)."
#define PA_RX_OUT_OF_WW                     17508       //"<PA> PA scanner (%x) out of window widening."
#define PA_CREATE_SYNC_WARNING              17509       //"<PA> WARNING!! PA create sync warning. pending PA entity %x and PA entity %x has the same access address"
#define PA_CREATE_SYNC_MESSAGE              17510       //"<PA> PA create sync is triggered due to receive AE packet with SyncInfo. Entry ID: %d, Advertiser_Address: 0x%02x%02x%02x%02x%02x%02x, Address_Type: 0x%x, Options: 0x%02x."
#define PA_EVT_CNT_MISMATCH                 17511       //"<PA> WARNING!!, event counter mismatch. Entry ID: %d, complete evt cnt: %x, partial evt cnt: %x"
#define PA_CREATE_SYNC_SUCCESS              17512       //"<PA> PA create sync SUCCESS. PA_entry_id: %d."
#define PA_CREATE_SYNC_FAIL                 17513       //"<PA> WARNING!! PA create sync FAIL. pending PA entity %x"
#define PA_ENTITY_INFO_1                    17514       //"<PA Info> ent%x(role: %x, handle: %x, intvl: %d)"
#define PA_ENTITY_INFO_2                    17515       //"<PA Info> ent%x(role: %x, handle: %x, intvl: %d) ent%x(role: %x, handle: %x, intvl: %d)"
#define PA_CHANNEL_MAP_UPT_INFO             17516       //"<PA> Receiving PA channel map update indication. ent: %x, instant: %x, map_l: %x, map_h: %x
#define PA_TERMINATE_ENTRY                  17517       //"<PA> PA terminated=%d, entry0:%d reason:%d, entry1:%d reason:%d entry2:%d reason:%d entry3:%d reason:%d"
#define PA_TERMINATE_SIGNAL_TYPE            17518       //"<PA> PA terminate signal: type = %d"
#define PA_CHANNEL_RECALCULATE              17519       //"<PA> PA chain end re-calculate channel hopping: %d -> %d (AA:%d map_table_l:%d map_table_h:%d sync_count:%d)"
#define PA_CHANNEL_RECALCULATE2             17520       //"<PA> PA chain end block by legacy, but no need to re-calculate channel hopping."

#define PA_ADV_TX_INSTANT_INFO              17550       //"[clk1 %08X]<PA ADV> 1st 0x%04X 2nd 0x%04X 3rd 0x%04X total_adv_slot%d PA_intv: %d slot"
#define PA_ADV_CLK_STRANGE                  17551       //"[clk1 %08X]<PA ADV> Warning!! PA event end timing strange. CAM 0x%04x sync_instant(ori0x%08x new0x%08x)"
#define PA_ADV_CTE_TX                       17552       //"<PA ADV CTE Para> adv_h%d CTE len 0x%x type %d (0:AoA; 1:AoD1us 2:AoD2us) CTEcnt %d SwitchPattern(%d): 0x%2x %2x ... Cont'd"
#define PA_ADV_DISABLE_ADV_WRONG            17553       //"<PA ADV> Warning!! PA ADV HW enabled but reg status wrong!! adv_h %d reg 0x%04x"
#define PA_ADV_ACAD_CH_MAP                  17554       //"<PA ADV> event_cnt %d, ch_map_update_cnt %d, ch_map 0x%02X%02X%02X%02X%02X"
#define PA_GET_PA_ENTITY_FAIL               17555       //"<PA>" get invalid pa entity, entry:%d, LR:0x%x

#define PAST_LL_PERIODIC_SYNC_IND_TX        17600       //"<PAST> ll_gen_periodic_sync(%d) cur%d ce_cnt%d ap slot0x%06x us%d sync_event%d ap slot0x%06x us%d ofst%dus %d(*(%d)0:30/1:300) %02x %02x %02x %02x %02x %02x %02x"
#define PAST_LL_PERIODIC_SYNC_IND_TX_INFO_WRONG 17601   //"<PAST> Warning!! get sync_info_wrong 0x%0x"
#define PAST_TRANSLATE_FAIL                 17602       //"<PAST> Warning!! PAST translate fail. reg_val 0x%04x"
#define PAST_TRANSLATE                      17603       //"[clk1 %08X]<PAST> PA translate IN:0x%08x %dus OUT:0x%08x %dus, slv_en%d pa%d reg 0x%04x %04x"
#define PAST_CREATE_SYNC_MESSAGE            17604       //"<PAST> PAST create sync is triggered due to receive LL_PERIODIC_SYNC_IND. Connection entry ID: %d, PA entry ID: %d, syncConnEventCount: %d, lastPaEventCounter: %d, connEventCount: %d, PeriodicEventCounter: %d, CEt: %d."
#define PAST_CREATE_SYNC_SUCCESS            17605       //"<PAST> PAST create sync SUCCESS. conn_entry_id: %d, PA_entry_id: %d."
#define PAST_TX_ADD_COMPENSATION            17606       //"<PAST> PAST Tx Add compensation. conn_entry%d(Master?%d)PA rolw(%d 1:ADV;2:SCAN) Tx_Phy %d CI%d sync_offset %d tx_on_delay %d result %d"
#define PAST_TX_ADD_TX_ON_DELAY             17607       //"<PAST> PAST Tx Add Tx On Delay conn_entry%d Tx_Phy %d CI%d sync_offset %d tx_on_delay %d result %d"

#define PA_EARLY_INFO                       17700       //"<PA> Ear sync_cnt:%d, ent:%d, ntv_clk slot:0x%x, ap:0x%x, pacam0:0x%x, pacam1:0x%x"
#define PA_END_INFO                         17701       //"<PA> End sync_cnt:%d, ent:%d, ntv_clk slot:0x%x, ap:0x%x, pacam0:0x%x, pacam1:0x%x, is_src: %d"

// ============== MWS ========
#define MWS_DEBUG_VERIFICATION0 18000 //"<MWS verification> register_index=%x  write=%x  read=%x"
#define MWS_DEBUG_VERIFICATION1 18001 //"<MWS_log_HERE>  HERE , addr=%x"
#define MWS_DEBUG_VERIFICATION2 18002 //"<MWS verification> before write register_index=%x  , read_value=%x"
#define LOG_MWS_POLL_TIMEOUT    18003 //"[MWS] poll timeout"
#define MWS_DEBUG_VERIFICATION3 18004 //"<<MWS>> now at REG %x  ========================================"
#define MWS_READ_COMPLETE       18005 //"==MWS_READ_COMPLETE== REG_value=%x"
#define MWS_WRITE_COMPLETE      18006 //"==MWS_WRITE_COMPLETE=="
#define MWS_READY_BIT_SUCCESS_COMPLETE      18007   //"~~MWS_READY_BIT_SUCCESS~~"
#define MWS_DEBUG_VERIFICATION4 18008 //"<<MWS>> reg at=%x , write_byte=%x , read_reg value=%x "
#define MWS_WRITE_REG_FAIL      18009 //"MWS write register fail!!!!"
#define MWS_READ_REG_FAIL       18010 //"MWS read register fail!!!!"
#define MWS_FETCH_RX_ERROR      18011 //"MWS fetch RT/NRT RX buffer error!!!"
#define MWS_UART_TRX_SUCCESS    18012 //"MWS UART interrupt SUCCESS"
#define MWS_RT_BREAK_ERR_INT    18013 //"MWS real time break interrept indicator"
#define MWS_RT_FRAME_ERR_INT    18014 //"MWS real time frame error indicator"
#define MWS_RT_PARITY_ERR_INT   18015 //"MWS real time parity error indicator"
#define MWS_RT_OVERRUN_ERR_INT  18016 //"MWS real time overrun indicator"
#define MWS_RT_RXFIFO_RDY_INT   18017 //"MWS real time RX FIFO RDY indicator"
#define MWS_UART_RX_ERROR_INT   18018 //"MWS UART RX ERROR  indicator"
#define MWS_NRT_BREAK_ERR_INT   18019 //"MWS non-real time break indicator"
#define MWS_NRT_FRAME_ERR_INT   18020 //"MWS non-real time frame error indicator"
#define MWS_NRT_PARITY_ERR_INT  18021 //"MWS non-real time parity error indicator"
#define MWS_NRT_OVERRUN_ERR_INT 18022 //"MWS non-real time overrun indicator"
#define MWS_NRT_RXFIFO_RDY_INT  18023 //"MWS non-real time RX FIFO RDY indicator"
#define MWS_ERROR               18024 //"MWS error"
#define LOG_MWS_POLL_TIMEOUT1   18025 //"[MWS] poll UART idle timeout"
#define MWS_HAND_SHAKE_DONE     18026 //"[MWS] WLAN off to on hand-shaking when BT_is_ON finish!!"
#define MWS_HAND_SHAKE_DONE1    18027 //"[MWS] coexistence hand-shaking fail!!"
#define MWS_HAND_SHAKE_DONE2    18028 //"[MWS] WLAN off to on hand-shaking when BT_is_ON start!!"
#define REG_PI_ACCESS_ERROR     18029 //"I'm sorry , kid , but you don't support modem/rfc reg_pi access :("
#define IQK_LOK_RESULT          18030 //"BT Calibration result , LOK = %x , IQK_x = %x , IQK_y = %x"
#define SCOREBOARD_DATA_WRITE   18031 //"SCOREBOARD data write : %x"
#define SCOREBOARD_DATA_READ    18032 //"SCOREBOARD data read : %x"

// ============== morgan add 3DD ========
#define BT_3DD_MSG_SEND_VENDOR_EVT_SYNC_TOGGLE 12054 //"<3DD> Send HCI Event 0xFF sub code0x28 toggle=%d"
#define DD_MSG_CMD 12076 //"<3DD> Run command = 0x%2x"
#define DD_MSG_CMD2 12077 //"<3DD> enter 3dd init : mode is 3dd only<1> or host<0> =%d"
#define DD_MSG_CMD3 12078 //"<3DD> write 3DD EIR payload"
#define DD_MSG_CMD4 12079 //"<3DD> enter 3dd init end"
#define DD_MSG_CMD5 12080 //"<3DD> show %d avg clk period = %d"
#define DD_MSG_CMD6 12081 //"<3DD> write 3DD COD payload"
#define DD_MSG_CMD7 12082 //"<3DD> show long term avg clk period = %d"
#define DD_MSG_CMD8 12083 //"<3DD> 3dd only mode lsod =%d lscd =%d rsod =%d rscd =%d"
#define DD_MSG_CMD9 12084 //"<3DD> Receive Power On/Off Key!! Idx(current:%d previous:%d)"
#define DD_MSG_CMD10 12085 //"<3DD> Power On/Off Key Idx Change!! Toggle IR.(current idx:%d)"
#define DD_MSG_CMD11 12086 //"<3DD> LE scan:%d(int:%d,win:%d),dup:%d. Legacy scan:%d. (ps:%d/%d slots)(is:%d/%d slots)"
#define DD_MSG_CMD12 12087 //"<3DD> show original %d avg clk period = %d long_term_avg_period = %d"
#define DD_MSG_CMD13 12088 //"<3DD> host mode lsod =%d lscd =%d rsod =%d rscd =%d"
#define DD_MSG_CMD14 12089 //"<3DD> period init = %d"
#define HCI_VENDOR_3DD_subcode_0 12090 //"<3DD> Vendor cmd subcode = %d param1 =%d param2 =%d param3 =%d param4 =%d param5 =%d param6 =%d param7 =%d param8 =%d"
#define HCI_VENDOR_3DD_subcode_1 12091 //"<3DD> Vendor cmd subcode = %d param1 =%d param2 =%d param3 =%d param4 =%d param5=%d"
#define D3D_MSG_10 12094 //"<3DD> d3d_cnt = %d"
#define D3D_MSG_11 12095 //"<3DD> toggle restart = %d"
#define D3D_MSG_12 12096 //"<3DD> truncated page restart sync train"
#define D3D_MSG_13 12097 //"<3DD> long term period = %d mode = %d"
#define D3D_MSG_14 12098 //"<3DD> period diff = %d"
#define D3D_MSG_15 12099 //"<3DD> set sync train = %d"
#define D3D_MSG_16 12100 //"<3DD> set beacon train = %d"
#define D3D_MSG_17 12101 //"<3DD> rejection end rejection cnt = %d init period = %d long term =%d"
#define D3D_MSG_18 12102 //"<3DD> rejection cnt = %d init_period_us = %d"
#define D3D_MSG_19 12103 //"<3DD> period unusual happen period = %d cnt =%d"
#define D3D_MSG_20 12104 //"<3DD> period unusual restart cur_period=%d long_term_period = %d"
#define D3D_MSG_21 12105 //"<3DD> truncated page Send Event"
#define D3D_MSG_22 12106 //"<3DD> toggle status change status= %d period_mode= %d"
#define D3D_MSG_23 12107 //"<3DD> toggle status change (%d) but host is not wake up yet. So no send event."
#define D3D_MSG_24 12108 //"<3DD> toggle restart state 0"
#define MSG_3DD_RP_RX_AN  12109 //"[3DD-RP] 3DG AN Received!! (clk:0x%08x)"
#define MSG_3DD_SHOW_BEACON 12110 //"[3DD-RP] Left(%d %d) Right(%d %d)"

#define LOG_TV_POWERON_AD_DATA_TYPE 13000 //"[TV] ADV: AD type: 0x%x"
#define LOG_TV_POWERON_MANU_COMP_ID 13001//"[TV] ADV: manufacturer company id: 0x%x"
#define LOG_TV_POWERON_RTK_CMD 13002 //"[TV] ADV: rtk command: 0x%x"
#define LOG_TV_POWERON_UNKNOWN_RTK_CMD 13003 //"[TV] ADV: unknown rtk command: 0x%x"
#define LOG_TV_POWERON_RC_UID_LOCAL 13004 //"[TV] ADV: rc uid check enable: %d, rc uid local: 0x%x"
#define LOG_TV_POWERON_RC_UID_REMOTE 13005 //"[TV] ADV: rc uid remote: 0x%x"
#define LOG_TV_POWERON_KEY_IDX 13006 //"[TV] ADV: idx: %d, old idx: %d"
#define LOG_TV_POWERON_IR_CODE_LEN 13007 //"[TV] ADV: ir code bitlen: %d, len: %d"
#define LOG_TV_POWERON_IR_CODE_BYTE 13008 //"[TV] ADV: ir code[%d]: 0x%x"
#define LOG_TV_POWERON_IR_INFO 13009 //"[TV] ADV: ir info: logic1_high_first: %d, logic0_high_first: %d, has_stop_bit: %d, stop_bit_val: %d, lead_high_len: %d, lead_low_len: %d, logic1_high_len: %d, logic1_low_len: %d, logic0_high_len: %d, logic0_low_len: %d"
#define LOG_TV_POWERON_UNKNOWN_IR_PROTO 13010 //"[TV] ADV: unknown ir proto: 0x%x"
#define LOG_TV_POWERON_EMIT_BYTE 13011 //"[TV] gpio14_emit_byte(): byte: 0x%x, bitlen: %d"
#define LOG_TV_POWERON_EMIT_BYTE2 13012 //"[TV] gpio14_emit_byte(): byte: 0x%x, bitlen1: %d, bitlen2: %d"
#define LOG_TV_POWERON_MSG 13013 //"[TV] Notify Power OnOff(%d)"
#define LOG_TV_AUTO_PAIR_ENABLE 13014 //"[TV] auto pair enable: %d"
#define LOG_TV_AUTO_PAIR_PKT_BUFFER_FULL 13015 //"[TV] auto pair packet buffer full"
#define LOG_TV_AUTO_PAIR_PKT_IGNORE 13016 //"[TV] ignore auto pair pkt: evt_type: %d, addr_type: %d, addr: 0x%02x%02x%02x%02x%02x%02x, timestamp: %u"
#define LOG_TV_AUTO_PAIR_PKT_REGISTER 13017 //"[TV] register auto pair pkt: evt_type: %d, addr_type: %d, addr: 0x%02x%02x%02x%02x%02x%02x, timestamp: %u"
#define LOG_TV_AUTO_PAIR_SCAN_PARM 13018 //"[TV] auto pair scan: %d(interval: %d, window: %d)"
#define LOG_TV_AUTO_PAIR_SET_SCAN_PARAM 13019 //"[TV] auto pair set scan param: type %d addr(loc %d) intv(%d) window(%d) ChM %d filter(%d)"
#define LOG_TV_AUTO_PAIR_PKT_LIST_INFO 13020 //"[TV] auto pair pkt list: #pkt: %d, #free: %d"
#define LOG_TV_AUTO_PAIR_EVT 13021 //"[TV] auto pair evt: num_report: %d"
#define LOG_OPT_REG_BEACON_BLOCK_TIME 13022 //"OPT_REG: bcn_blk_func: %d, beacon_block_time: %d"
#define LOG_TV_POWERON_IR_INFO_EX 13023 //"[TV]: ir info: poweroff_type: %d, shift: %d"

#define LOG_BTMAC_PM_EXIT               13024 //"[PM] !**btmac exit: native_clk = 0x%x, native_cnt = %d"
#define LOG_BTMAC_PM_STAGE_TIME         13025 //"[PM] !**btmac stage time: Check: %d, Store: %d, Enter: %d, Exit: %d, Restore: %d"
#define LOG_BTMAC_PM_STATISTIC          13026 //"[PM] !**btmac #%d: [%d] Wakeup Time: %d us Sleep Time: %d us (%d %d) Wakeup at: 0x%x %d Sleep at: 0x%x %d"
#define LOG_BTMAC_PM_INIT_FAIL          13027 //"[PM] !!!btmac_pm_init: btmac malloc fail"
#define LOG_BTMAC_PM_CHECK              13028 //"[PM] !**btmac check: native_us = %d, native_clk = 0x%x, nxt_status = %d, nxt_status_le = %d, nxt_clock_slot = 0x%x, nxt_clock_slot_le = 0x%x, wakeup_time_diff = %d, wakeup_time_diff_le = %d, unit_wakeup_time_diff = %d"
#define LOG_BTMAC_PM_ENTER              13029 //"[PM] !**btmac enter: native_clk = 0x%x, native_cnt = %d, wakeup_inst_slot = %d, wakeup_inst_us = %d"
#define LOG_BTMAC_PM_CHECK_FAIL         13030 //"[PM] !**btmac check fail: Error bitmap=0x%x"
#define LOG_BTMAC_PM_CHECK_FAIL2        13031 //"[PM] !**btmac check fail: Error bitmap=0x%x, native_clk=0x%x, nxt_clock_slot=0x%x, nxt_clock_slot_le=0x%x, minimum_sleep_time=%d, unit_wakeup_time_diff=0x%x"

#define DU_TX_BY_GDMA                   14000 //"[DU] GDMA Tx sem take. Type:%d"
#define DU_TX_BY_GDMA_DONE_ERR          14001 //"[DU] GDMA Tx sem give. Type:%d, Err:%d"
#define DU_TX_BY_GDMA_DONE              14002 //"[DU] GDMA Tx sem give. Type:%d"
#define DU_TX_BY_GDMA_WAIT              14003 //"[DU] GDMA Tx sem wait. Type:%d"
#define DU_RX_CMD_ERROR                 14004 //"[hciapi_data_recevied] Rcv Cmd Error!!!!!!!!!!! Packet length (%d) > Rx Data length (%ld)"
#define DU_RX_ACL_ERROR                 14005 //"[hciapi_data_recevied] Rcv ACL Data Error!! Packet length (%d) > Rx Data length (%d), type:%d"
#define DU_NOT_SUP_SCO                  14006 //"Do not support SCO!!"
#define DU_TYPE_ERROR                   14007 //"hciapi_data_recevied type error:%d"
#define DU_INIT_BAUDRATE                14008 //"Uart Init - div=%d, ovsr=%d, ovsr_adj=%d"
#define DU_RX_OVERRUN                   14009 //"hciapi_uart_rx_data_length_update: rx overrun - data length = %4.4x"
#define DU_RX_DATA_LEN_UPDT             14010 //"hciapi_uart_rx_data_length_update"
#define DU_RESET                        14011 //"SW HCI Reset (%d)"

//===================================special used index=================================
#define ERR_EXP_REPORT_CP0_CAUSE  65500 //"Error Exception, CP0_CAUSE:0x%x, CP0_EPC:0x%x, ra: 0x%x, sp: 0x%x, v0: 0x%x, v1: 0x%x"
#define ERR_EXP_EXPORT_LOG_BUF_END 65501 //"End of Log Buffer (len:%d) After Exception!!!!"
#define ERR_EXP_SPACE 65502 //" "

#define LOG_PDU_INDEX 65535

#endif//_LOG1_H_
