<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\objects\single.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\objects\single.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060960: Last Updated: Sat Jun 07 14:28:34 2025
<BR><P>
<H3>Maximum Stack Usage =       2236 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
app_gfps_rfc_cback &rArr; app_gfps_msg_loop_check_data_complete &rArr;  app_gfps_msg_loop_check_data_complete (Cycle)
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[3a3]">app_transfer_pop_data_queue</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3a3]">app_transfer_pop_data_queue</a><BR>
 <LI><a href="#[b0d]">ftl_garbage_collect</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[b0f]">ftl_write</a><BR>
 <LI><a href="#[f8e]">codec_drv_config_init</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[f8e]">codec_drv_config_init</a><BR>
 <LI><a href="#[a20]">audio_mgr_exception</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[a25]">audio_mgr_dispatch</a><BR>
 <LI><a href="#[487]">audio_track_volume_out_set</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[a25]">audio_mgr_dispatch</a><BR>
 <LI><a href="#[a6f]">audio_track_volume_in_set</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[a25]">audio_mgr_dispatch</a><BR>
 <LI><a href="#[a56]">audio_session_state_set</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[a25]">audio_mgr_dispatch</a><BR>
 <LI><a href="#[a6d]">audio_track_reschedule</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[a56]">audio_session_state_set</a><BR>
 <LI><a href="#[5b3]">audio_track_stop</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[a56]">audio_session_state_set</a><BR>
 <LI><a href="#[f86]">codec_drv_config_default</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[f86]">codec_drv_config_default</a><BR>
 <LI><a href="#[2ea]">app_led_check_repeat_mode</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[35b]">app_led_change_mode</a><BR>
 <LI><a href="#[362]">app_led_set_charging_mode</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[35b]">app_led_change_mode</a><BR>
 <LI><a href="#[34f]">app_led_reset_mode</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[35b]">app_led_change_mode</a><BR>
 <LI><a href="#[5a4]">app_multi_judge_active_a2dp_idx_and_qos</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[470]">app_multi_handle_sniffing_link_disconnect_event</a><BR>
 <LI><a href="#[89b]">app_lea_uca_link_idle</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[376]">app_mmi_handle_action</a><BR>
 <LI><a href="#[5ad]">app_multi_disconnect_inactive_link</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4ea]">app_bt_policy_disconnect</a><BR>
 <LI><a href="#[518]">app_bt_policy_default_connect</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[608]">app_bt_policy_state_machine</a><BR>
 <LI><a href="#[539]">mtc_topology_dm</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3d3]">app_lea_uca_link_sm</a><BR>
 <LI><a href="#[5ba]">app_sass_preempt_policy</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5ba]">app_sass_preempt_policy</a><BR>
 <LI><a href="#[900]">mtc_terminate_cis</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[539]">mtc_topology_dm</a><BR>
 <LI><a href="#[8d4]">app_lea_bca_state_starting</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[539]">mtc_topology_dm</a><BR>
 <LI><a href="#[8bc]">app_lea_bca_state_bass_add_source</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[539]">mtc_topology_dm</a><BR>
 <LI><a href="#[8bb]">app_lea_bca_state_scan</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[539]">mtc_topology_dm</a><BR>
 <LI><a href="#[8d6]">app_lea_bca_state_wait_retry</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[539]">mtc_topology_dm</a><BR>
 <LI><a href="#[8f9]">mtc_cis_ase_release</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[376]">app_mmi_handle_action</a><BR>
 <LI><a href="#[8f6]">mtc_ase_release</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3d3]">app_lea_uca_link_sm</a><BR>
 <LI><a href="#[679]">app_bt_policy_msg_prof_conn</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[608]">app_bt_policy_state_machine</a><BR>
 <LI><a href="#[c07]">ase_action_released</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[c06]">ascs_check_current_state</a><BR>
 <LI><a href="#[67a]">app_bt_policy_msg_prof_disconn</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[608]">app_bt_policy_state_machine</a><BR>
 <LI><a href="#[879]">app_lea_uca_handle_mcp_state</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5a6]">app_multi_preemptive_judge</a><BR>
 <LI><a href="#[5a6]">app_multi_preemptive_judge</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[51d]">app_multi_active_hfp_transfer</a><BR>
 <LI><a href="#[52d]">app_bt_policy_enter_dut_test_mode</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[608]">app_bt_policy_state_machine</a><BR>
 <LI><a href="#[4c1]">app_bt_policy_enter_pairing_mode</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[608]">app_bt_policy_state_machine</a><BR>
 <LI><a href="#[4a5]">app_bt_policy_disconnect_all_link</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[608]">app_bt_policy_state_machine</a><BR>
 <LI><a href="#[5d4]">app_bt_policy_linkback_run</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5ce]">app_bt_policy_stable_sched</a><BR>
 <LI><a href="#[5dd]">app_bt_policy_prepare_for_dedicated_enter_pairing_mode</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4ea]">app_bt_policy_disconnect</a><BR>
 <LI><a href="#[2b]">app_bt_policy_timer_cback</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[608]">app_bt_policy_state_machine</a><BR>
 <LI><a href="#[602]">app_bt_policy_event_handle</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5e5]">app_bt_policy_roleswitch_handle</a><BR>
 <LI><a href="#[778]">app_gfps_msg_loop_check_data_complete</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[778]">app_gfps_msg_loop_check_data_complete</a><BR>
 <LI><a href="#[7d7]">app_gfps_msg_le_loop_check_data_complete</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[7d7]">app_gfps_msg_le_loop_check_data_complete</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[1bd]">ADC_Handler</a> from startup_rtl87x3e.o(.text) referenced from vector_table_ext.o(.data)
 <LI><a href="#[1bd]">ADC_Handler</a> from startup_rtl87x3e.o(.text) referenced from startup_rtl87x3e.o(VECTOR)
 <LI><a href="#[1d0]">ADP_DET_Handler</a> from startup_rtl87x3e.o(.text) referenced from vector_table_ext.o(.data)
 <LI><a href="#[1d0]">ADP_DET_Handler</a> from startup_rtl87x3e.o(.text) referenced 2 times from startup_rtl87x3e.o(VECTOR)
 <LI><a href="#[1fd]">ADP_IN_DET_Handler</a> from startup_rtl87x3e.o(.text) referenced from startup_rtl87x3e.o(VECTOR)
 <LI><a href="#[1fe]">ADP_OUT_DET_Handler</a> from startup_rtl87x3e.o(.text) referenced from startup_rtl87x3e.o(VECTOR)
 <LI><a href="#[1f4]">ANC_Handler</a> from startup_rtl87x3e.o(.text) referenced from vector_table_ext.o(.data)
 <LI><a href="#[1f4]">ANC_Handler</a> from startup_rtl87x3e.o(.text) referenced from startup_rtl87x3e.o(VECTOR)
 <LI><a href="#[1ee]">ASRC0_Handler</a> from startup_rtl87x3e.o(.text) referenced from vector_table_ext.o(.data)
 <LI><a href="#[1ee]">ASRC0_Handler</a> from startup_rtl87x3e.o(.text) referenced from startup_rtl87x3e.o(VECTOR)
 <LI><a href="#[1ef]">ASRC1_Handler</a> from startup_rtl87x3e.o(.text) referenced from vector_table_ext.o(.data)
 <LI><a href="#[1ef]">ASRC1_Handler</a> from startup_rtl87x3e.o(.text) referenced from startup_rtl87x3e.o(VECTOR)
 <LI><a href="#[1b8]">BTMAC_Handler</a> from startup_rtl87x3e.o(.text) referenced from vector_table_ext.o(.data)
 <LI><a href="#[1b8]">BTMAC_Handler</a> from startup_rtl87x3e.o(.text) referenced from startup_rtl87x3e.o(VECTOR)
 <LI><a href="#[1b0]">BusFault_Handler</a> from startup_rtl87x3e.o(.text) referenced from vector_table_ext.o(.data)
 <LI><a href="#[1b0]">BusFault_Handler</a> from startup_rtl87x3e.o(.text) referenced from startup_rtl87x3e.o(VECTOR)
 <LI><a href="#[1b9]">DSP_Handler</a> from startup_rtl87x3e.o(.text) referenced from vector_table_ext.o(.data)
 <LI><a href="#[1b9]">DSP_Handler</a> from startup_rtl87x3e.o(.text) referenced from startup_rtl87x3e.o(VECTOR)
 <LI><a href="#[1b3]">DebugMon_Handler</a> from startup_rtl87x3e.o(.text) referenced from startup_rtl87x3e.o(VECTOR)
 <LI><a href="#[5]">Default_Handler</a> from startup_rtl87x3e.o(.text) referenced 5 times from vector_table_ext.o(.data)
 <LI><a href="#[5]">Default_Handler</a> from startup_rtl87x3e.o(.text) referenced from system_rtl87x3.o(.text)
 <LI><a href="#[5]">Default_Handler</a> from startup_rtl87x3e.o(.text) referenced 6 times from startup_rtl87x3e.o(VECTOR)
 <LI><a href="#[1d2]">GDMA0_Channel0_Handler</a> from startup_rtl87x3e.o(.text) referenced from vector_table_ext.o(.data)
 <LI><a href="#[1d2]">GDMA0_Channel0_Handler</a> from startup_rtl87x3e.o(.text) referenced from startup_rtl87x3e.o(VECTOR)
 <LI><a href="#[1d3]">GDMA0_Channel1_Handler</a> from startup_rtl87x3e.o(.text) referenced from vector_table_ext.o(.data)
 <LI><a href="#[1d3]">GDMA0_Channel1_Handler</a> from startup_rtl87x3e.o(.text) referenced from startup_rtl87x3e.o(VECTOR)
 <LI><a href="#[1d4]">GDMA0_Channel2_Handler</a> from startup_rtl87x3e.o(.text) referenced from vector_table_ext.o(.data)
 <LI><a href="#[1d4]">GDMA0_Channel2_Handler</a> from startup_rtl87x3e.o(.text) referenced from startup_rtl87x3e.o(VECTOR)
 <LI><a href="#[1d5]">GDMA0_Channel3_Handler</a> from startup_rtl87x3e.o(.text) referenced from vector_table_ext.o(.data)
 <LI><a href="#[1d5]">GDMA0_Channel3_Handler</a> from startup_rtl87x3e.o(.text) referenced from startup_rtl87x3e.o(VECTOR)
 <LI><a href="#[1d6]">GDMA0_Channel4_Handler</a> from startup_rtl87x3e.o(.text) referenced from vector_table_ext.o(.data)
 <LI><a href="#[1d6]">GDMA0_Channel4_Handler</a> from startup_rtl87x3e.o(.text) referenced from startup_rtl87x3e.o(VECTOR)
 <LI><a href="#[1d7]">GDMA0_Channel5_Handler</a> from startup_rtl87x3e.o(.text) referenced from vector_table_ext.o(.data)
 <LI><a href="#[1d7]">GDMA0_Channel5_Handler</a> from startup_rtl87x3e.o(.text) referenced from startup_rtl87x3e.o(VECTOR)
 <LI><a href="#[1d8]">GDMA0_Channel6_Handler</a> from startup_rtl87x3e.o(.text) referenced from vector_table_ext.o(.data)
 <LI><a href="#[1d8]">GDMA0_Channel6_Handler</a> from startup_rtl87x3e.o(.text) referenced from startup_rtl87x3e.o(VECTOR)
 <LI><a href="#[1d9]">GDMA0_Channel7_Handler</a> from startup_rtl87x3e.o(.text) referenced from vector_table_ext.o(.data)
 <LI><a href="#[1d9]">GDMA0_Channel7_Handler</a> from startup_rtl87x3e.o(.text) referenced from startup_rtl87x3e.o(VECTOR)
 <LI><a href="#[1da]">GDMA0_Channel8_Handler</a> from startup_rtl87x3e.o(.text) referenced from vector_table_ext.o(.data)
 <LI><a href="#[1da]">GDMA0_Channel8_Handler</a> from startup_rtl87x3e.o(.text) referenced from startup_rtl87x3e.o(VECTOR)
 <LI><a href="#[ab2]">GDMA_channel_request_in_hal</a> from platform_ext.o(.text) referenced from platform_ext.o(.text)
 <LI><a href="#[85]">GPIOA0_Handler</a> from hal_gpio_int.o(.isr.text) referenced from hal_gpio_int.o(.text)
 <LI><a href="#[207]">GPIOA10_Handler</a> from startup_rtl87x3e.o(.text) referenced from startup_rtl87x3e.o(VECTOR)
 <LI><a href="#[208]">GPIOA11_Handler</a> from startup_rtl87x3e.o(.text) referenced from startup_rtl87x3e.o(VECTOR)
 <LI><a href="#[209]">GPIOA12_Handler</a> from startup_rtl87x3e.o(.text) referenced from startup_rtl87x3e.o(VECTOR)
 <LI><a href="#[20a]">GPIOA13_Handler</a> from startup_rtl87x3e.o(.text) referenced from startup_rtl87x3e.o(VECTOR)
 <LI><a href="#[20b]">GPIOA14_Handler</a> from startup_rtl87x3e.o(.text) referenced from startup_rtl87x3e.o(VECTOR)
 <LI><a href="#[20c]">GPIOA15_Handler</a> from startup_rtl87x3e.o(.text) referenced from startup_rtl87x3e.o(VECTOR)
 <LI><a href="#[20d]">GPIOA16_Handler</a> from startup_rtl87x3e.o(.text) referenced from startup_rtl87x3e.o(VECTOR)
 <LI><a href="#[20e]">GPIOA17_Handler</a> from startup_rtl87x3e.o(.text) referenced from startup_rtl87x3e.o(VECTOR)
 <LI><a href="#[20f]">GPIOA18_Handler</a> from startup_rtl87x3e.o(.text) referenced from startup_rtl87x3e.o(VECTOR)
 <LI><a href="#[210]">GPIOA19_Handler</a> from startup_rtl87x3e.o(.text) referenced from startup_rtl87x3e.o(VECTOR)
 <LI><a href="#[86]">GPIOA1_Handler</a> from hal_gpio_int.o(.isr.text) referenced from hal_gpio_int.o(.text)
 <LI><a href="#[211]">GPIOA20_Handler</a> from startup_rtl87x3e.o(.text) referenced from startup_rtl87x3e.o(VECTOR)
 <LI><a href="#[212]">GPIOA21_Handler</a> from startup_rtl87x3e.o(.text) referenced from startup_rtl87x3e.o(VECTOR)
 <LI><a href="#[213]">GPIOA22_Handler</a> from startup_rtl87x3e.o(.text) referenced from startup_rtl87x3e.o(VECTOR)
 <LI><a href="#[214]">GPIOA23_Handler</a> from startup_rtl87x3e.o(.text) referenced from startup_rtl87x3e.o(VECTOR)
 <LI><a href="#[215]">GPIOA24_Handler</a> from startup_rtl87x3e.o(.text) referenced from startup_rtl87x3e.o(VECTOR)
 <LI><a href="#[216]">GPIOA25_Handler</a> from startup_rtl87x3e.o(.text) referenced from startup_rtl87x3e.o(VECTOR)
 <LI><a href="#[217]">GPIOA26_Handler</a> from startup_rtl87x3e.o(.text) referenced from startup_rtl87x3e.o(VECTOR)
 <LI><a href="#[218]">GPIOA27_Handler</a> from startup_rtl87x3e.o(.text) referenced from startup_rtl87x3e.o(VECTOR)
 <LI><a href="#[219]">GPIOA28_Handler</a> from startup_rtl87x3e.o(.text) referenced from startup_rtl87x3e.o(VECTOR)
 <LI><a href="#[21a]">GPIOA29_Handler</a> from startup_rtl87x3e.o(.text) referenced from startup_rtl87x3e.o(VECTOR)
 <LI><a href="#[1ff]">GPIOA2_Handler</a> from startup_rtl87x3e.o(.text) referenced from startup_rtl87x3e.o(VECTOR)
 <LI><a href="#[21b]">GPIOA30_Handler</a> from startup_rtl87x3e.o(.text) referenced from startup_rtl87x3e.o(VECTOR)
 <LI><a href="#[21c]">GPIOA31_Handler</a> from startup_rtl87x3e.o(.text) referenced from startup_rtl87x3e.o(VECTOR)
 <LI><a href="#[200]">GPIOA3_Handler</a> from startup_rtl87x3e.o(.text) referenced from startup_rtl87x3e.o(VECTOR)
 <LI><a href="#[201]">GPIOA4_Handler</a> from startup_rtl87x3e.o(.text) referenced from startup_rtl87x3e.o(VECTOR)
 <LI><a href="#[202]">GPIOA5_Handler</a> from startup_rtl87x3e.o(.text) referenced from startup_rtl87x3e.o(VECTOR)
 <LI><a href="#[203]">GPIOA6_Handler</a> from startup_rtl87x3e.o(.text) referenced from startup_rtl87x3e.o(VECTOR)
 <LI><a href="#[204]">GPIOA7_Handler</a> from startup_rtl87x3e.o(.text) referenced from startup_rtl87x3e.o(VECTOR)
 <LI><a href="#[205]">GPIOA8_Handler</a> from startup_rtl87x3e.o(.text) referenced from startup_rtl87x3e.o(VECTOR)
 <LI><a href="#[206]">GPIOA9_Handler</a> from startup_rtl87x3e.o(.text) referenced from startup_rtl87x3e.o(VECTOR)
 <LI><a href="#[21d]">GPIOB0_Handler</a> from startup_rtl87x3e.o(.text) referenced from startup_rtl87x3e.o(VECTOR)
 <LI><a href="#[227]">GPIOB10_Handler</a> from startup_rtl87x3e.o(.text) referenced from startup_rtl87x3e.o(VECTOR)
 <LI><a href="#[228]">GPIOB11_Handler</a> from startup_rtl87x3e.o(.text) referenced from startup_rtl87x3e.o(VECTOR)
 <LI><a href="#[229]">GPIOB12_Handler</a> from startup_rtl87x3e.o(.text) referenced from startup_rtl87x3e.o(VECTOR)
 <LI><a href="#[22a]">GPIOB13_Handler</a> from startup_rtl87x3e.o(.text) referenced from startup_rtl87x3e.o(VECTOR)
 <LI><a href="#[22b]">GPIOB14_Handler</a> from startup_rtl87x3e.o(.text) referenced from startup_rtl87x3e.o(VECTOR)
 <LI><a href="#[22c]">GPIOB15_Handler</a> from startup_rtl87x3e.o(.text) referenced from startup_rtl87x3e.o(VECTOR)
 <LI><a href="#[22d]">GPIOB16_Handler</a> from startup_rtl87x3e.o(.text) referenced from startup_rtl87x3e.o(VECTOR)
 <LI><a href="#[22e]">GPIOB17_Handler</a> from startup_rtl87x3e.o(.text) referenced from startup_rtl87x3e.o(VECTOR)
 <LI><a href="#[22f]">GPIOB18_Handler</a> from startup_rtl87x3e.o(.text) referenced from startup_rtl87x3e.o(VECTOR)
 <LI><a href="#[230]">GPIOB19_Handler</a> from startup_rtl87x3e.o(.text) referenced from startup_rtl87x3e.o(VECTOR)
 <LI><a href="#[21e]">GPIOB1_Handler</a> from startup_rtl87x3e.o(.text) referenced from startup_rtl87x3e.o(VECTOR)
 <LI><a href="#[231]">GPIOB20_Handler</a> from startup_rtl87x3e.o(.text) referenced from startup_rtl87x3e.o(VECTOR)
 <LI><a href="#[232]">GPIOB21_Handler</a> from startup_rtl87x3e.o(.text) referenced from startup_rtl87x3e.o(VECTOR)
 <LI><a href="#[233]">GPIOB22_Handler</a> from startup_rtl87x3e.o(.text) referenced from startup_rtl87x3e.o(VECTOR)
 <LI><a href="#[234]">GPIOB23_Handler</a> from startup_rtl87x3e.o(.text) referenced from startup_rtl87x3e.o(VECTOR)
 <LI><a href="#[235]">GPIOB24_Handler</a> from startup_rtl87x3e.o(.text) referenced from startup_rtl87x3e.o(VECTOR)
 <LI><a href="#[236]">GPIOB25_Handler</a> from startup_rtl87x3e.o(.text) referenced from startup_rtl87x3e.o(VECTOR)
 <LI><a href="#[237]">GPIOB26_Handler</a> from startup_rtl87x3e.o(.text) referenced from startup_rtl87x3e.o(VECTOR)
 <LI><a href="#[238]">GPIOB27_Handler</a> from startup_rtl87x3e.o(.text) referenced from startup_rtl87x3e.o(VECTOR)
 <LI><a href="#[239]">GPIOB28_Handler</a> from startup_rtl87x3e.o(.text) referenced from startup_rtl87x3e.o(VECTOR)
 <LI><a href="#[23a]">GPIOB29_Handler</a> from startup_rtl87x3e.o(.text) referenced from startup_rtl87x3e.o(VECTOR)
 <LI><a href="#[21f]">GPIOB2_Handler</a> from startup_rtl87x3e.o(.text) referenced from startup_rtl87x3e.o(VECTOR)
 <LI><a href="#[23b]">GPIOB30_Handler</a> from startup_rtl87x3e.o(.text) referenced from startup_rtl87x3e.o(VECTOR)
 <LI><a href="#[23c]">GPIOB31_Handler</a> from startup_rtl87x3e.o(.text) referenced from startup_rtl87x3e.o(VECTOR)
 <LI><a href="#[220]">GPIOB3_Handler</a> from startup_rtl87x3e.o(.text) referenced from startup_rtl87x3e.o(VECTOR)
 <LI><a href="#[221]">GPIOB4_Handler</a> from startup_rtl87x3e.o(.text) referenced from startup_rtl87x3e.o(VECTOR)
 <LI><a href="#[222]">GPIOB5_Handler</a> from startup_rtl87x3e.o(.text) referenced from startup_rtl87x3e.o(VECTOR)
 <LI><a href="#[223]">GPIOB6_Handler</a> from startup_rtl87x3e.o(.text) referenced from startup_rtl87x3e.o(VECTOR)
 <LI><a href="#[224]">GPIOB7_Handler</a> from startup_rtl87x3e.o(.text) referenced from startup_rtl87x3e.o(VECTOR)
 <LI><a href="#[225]">GPIOB8_Handler</a> from startup_rtl87x3e.o(.text) referenced from startup_rtl87x3e.o(VECTOR)
 <LI><a href="#[226]">GPIOB9_Handler</a> from startup_rtl87x3e.o(.text) referenced from startup_rtl87x3e.o(VECTOR)
 <LI><a href="#[1c8]">GPIO_A0_Handler</a> from startup_rtl87x3e.o(.text) referenced from vector_table_ext.o(.data)
 <LI><a href="#[1c8]">GPIO_A0_Handler</a> from startup_rtl87x3e.o(.text) referenced from startup_rtl87x3e.o(VECTOR)
 <LI><a href="#[1c9]">GPIO_A1_Handler</a> from startup_rtl87x3e.o(.text) referenced from vector_table_ext.o(.data)
 <LI><a href="#[1c9]">GPIO_A1_Handler</a> from startup_rtl87x3e.o(.text) referenced from startup_rtl87x3e.o(VECTOR)
 <LI><a href="#[1cc]">GPIO_A_16_23_Handler</a> from startup_rtl87x3e.o(.text) referenced from vector_table_ext.o(.data)
 <LI><a href="#[89]">GPIO_A_16_23_Handler</a> from hal_gpio_int.o(.isr.text) referenced from hal_gpio_int.o(.text)
 <LI><a href="#[1cc]">GPIO_A_16_23_Handler</a> from startup_rtl87x3e.o(.text) referenced from startup_rtl87x3e.o(VECTOR)
 <LI><a href="#[1cd]">GPIO_A_24_31_Handler</a> from startup_rtl87x3e.o(.text) referenced from vector_table_ext.o(.data)
 <LI><a href="#[8a]">GPIO_A_24_31_Handler</a> from hal_gpio_int.o(.isr.text) referenced from hal_gpio_int.o(.text)
 <LI><a href="#[1cd]">GPIO_A_24_31_Handler</a> from startup_rtl87x3e.o(.text) referenced from startup_rtl87x3e.o(VECTOR)
 <LI><a href="#[1ca]">GPIO_A_2_7_Handler</a> from startup_rtl87x3e.o(.text) referenced from vector_table_ext.o(.data)
 <LI><a href="#[87]">GPIO_A_2_7_Handler</a> from hal_gpio_int.o(.isr.text) referenced from hal_gpio_int.o(.text)
 <LI><a href="#[1ca]">GPIO_A_2_7_Handler</a> from startup_rtl87x3e.o(.text) referenced from startup_rtl87x3e.o(VECTOR)
 <LI><a href="#[1cb]">GPIO_A_8_15_Handler</a> from startup_rtl87x3e.o(.text) referenced from vector_table_ext.o(.data)
 <LI><a href="#[88]">GPIO_A_8_15_Handler</a> from hal_gpio_int.o(.isr.text) referenced from hal_gpio_int.o(.text)
 <LI><a href="#[1cb]">GPIO_A_8_15_Handler</a> from startup_rtl87x3e.o(.text) referenced from startup_rtl87x3e.o(VECTOR)
 <LI><a href="#[1db]">GPIO_B_0_7_Handler</a> from startup_rtl87x3e.o(.text) referenced from vector_table_ext.o(.data)
 <LI><a href="#[8b]">GPIO_B_0_7_Handler</a> from hal_gpio_int.o(.isr.text) referenced from hal_gpio_int.o(.text)
 <LI><a href="#[1db]">GPIO_B_0_7_Handler</a> from startup_rtl87x3e.o(.text) referenced from startup_rtl87x3e.o(VECTOR)
 <LI><a href="#[1dd]">GPIO_B_16_23_Handler</a> from startup_rtl87x3e.o(.text) referenced from vector_table_ext.o(.data)
 <LI><a href="#[8d]">GPIO_B_16_23_Handler</a> from hal_gpio_int.o(.isr.text) referenced from hal_gpio_int.o(.text)
 <LI><a href="#[1dd]">GPIO_B_16_23_Handler</a> from startup_rtl87x3e.o(.text) referenced from startup_rtl87x3e.o(VECTOR)
 <LI><a href="#[1de]">GPIO_B_24_31_Handler</a> from startup_rtl87x3e.o(.text) referenced from vector_table_ext.o(.data)
 <LI><a href="#[8e]">GPIO_B_24_31_Handler</a> from hal_gpio_int.o(.isr.text) referenced from hal_gpio_int.o(.text)
 <LI><a href="#[1de]">GPIO_B_24_31_Handler</a> from startup_rtl87x3e.o(.text) referenced from startup_rtl87x3e.o(VECTOR)
 <LI><a href="#[1dc]">GPIO_B_8_15_Handler</a> from startup_rtl87x3e.o(.text) referenced from vector_table_ext.o(.data)
 <LI><a href="#[8c]">GPIO_B_8_15_Handler</a> from hal_gpio_int.o(.isr.text) referenced from hal_gpio_int.o(.text)
 <LI><a href="#[1dc]">GPIO_B_8_15_Handler</a> from startup_rtl87x3e.o(.text) referenced from startup_rtl87x3e.o(VECTOR)
 <LI><a href="#[1ae]">HardFault_Handler</a> from startup_rtl87x3e.o(.text) referenced 4 times from vector_table_ext.o(.data)
 <LI><a href="#[1ae]">HardFault_Handler</a> from startup_rtl87x3e.o(.text) referenced from startup_rtl87x3e.o(VECTOR)
 <LI><a href="#[1bc]">I2C0_Handler</a> from startup_rtl87x3e.o(.text) referenced from vector_table_ext.o(.data)
 <LI><a href="#[1bc]">I2C0_Handler</a> from startup_rtl87x3e.o(.text) referenced from startup_rtl87x3e.o(VECTOR)
 <LI><a href="#[1e1]">I2C1_Handler</a> from startup_rtl87x3e.o(.text) referenced from vector_table_ext.o(.data)
 <LI><a href="#[1e1]">I2C1_Handler</a> from startup_rtl87x3e.o(.text) referenced from startup_rtl87x3e.o(VECTOR)
 <LI><a href="#[1e2]">I2C2_Handler</a> from startup_rtl87x3e.o(.text) referenced from vector_table_ext.o(.data)
 <LI><a href="#[1e2]">I2C2_Handler</a> from startup_rtl87x3e.o(.text) referenced from startup_rtl87x3e.o(VECTOR)
 <LI><a href="#[1f0]">I8080_Handler</a> from startup_rtl87x3e.o(.text) referenced from vector_table_ext.o(.data)
 <LI><a href="#[1f0]">I8080_Handler</a> from startup_rtl87x3e.o(.text) referenced from startup_rtl87x3e.o(VECTOR)
 <LI><a href="#[1f9]">IR_Handler</a> from startup_rtl87x3e.o(.text) referenced from startup_rtl87x3e.o(VECTOR)
 <LI><a href="#[1f1]">ISO7816_Handler</a> from startup_rtl87x3e.o(.text) referenced from vector_table_ext.o(.data)
 <LI><a href="#[1f1]">ISO7816_Handler</a> from startup_rtl87x3e.o(.text) referenced from startup_rtl87x3e.o(VECTOR)
 <LI><a href="#[1e3]">KeyScan_Handler</a> from startup_rtl87x3e.o(.text) referenced from vector_table_ext.o(.data)
 <LI><a href="#[1e3]">KeyScan_Handler</a> from startup_rtl87x3e.o(.text) referenced from startup_rtl87x3e.o(VECTOR)
 <LI><a href="#[1fc]">LPCOMP_Handler</a> from startup_rtl87x3e.o(.text) referenced 2 times from startup_rtl87x3e.o(VECTOR)
 <LI><a href="#[1f6]">MFB_DET_L_Handler</a> from startup_rtl87x3e.o(.text) referenced from startup_rtl87x3e.o(VECTOR)
 <LI><a href="#[1af]">MemManage_Handler</a> from startup_rtl87x3e.o(.text) referenced from vector_table_ext.o(.data)
 <LI><a href="#[1af]">MemManage_Handler</a> from startup_rtl87x3e.o(.text) referenced from startup_rtl87x3e.o(VECTOR)
 <LI><a href="#[1ad]">NMI_Handler</a> from startup_rtl87x3e.o(.text) referenced from vector_table_ext.o(.data)
 <LI><a href="#[1ad]">NMI_Handler</a> from startup_rtl87x3e.o(.text) referenced from startup_rtl87x3e.o(VECTOR)
 <LI><a href="#[1fb]">PSRAMC_Handler</a> from startup_rtl87x3e.o(.text) referenced from startup_rtl87x3e.o(VECTOR)
 <LI><a href="#[1f7]">PTA_Mailbox_Handler</a> from startup_rtl87x3e.o(.text) referenced from startup_rtl87x3e.o(VECTOR)
 <LI><a href="#[1b4]">PendSV_Handler</a> from startup_rtl87x3e.o(.text) referenced from vector_table_ext.o(.data)
 <LI><a href="#[1b4]">PendSV_Handler</a> from startup_rtl87x3e.o(.text) referenced from startup_rtl87x3e.o(VECTOR)
 <LI><a href="#[1c7]">Peri_Handler</a> from startup_rtl87x3e.o(.text) referenced from vector_table_ext.o(.data)
 <LI><a href="#[1c7]">Peri_Handler</a> from startup_rtl87x3e.o(.text) referenced from startup_rtl87x3e.o(VECTOR)
 <LI><a href="#[1e4]">QDEC_Handler</a> from startup_rtl87x3e.o(.text) referenced from vector_table_ext.o(.data)
 <LI><a href="#[1e4]">QDEC_Handler</a> from startup_rtl87x3e.o(.text) referenced from startup_rtl87x3e.o(VECTOR)
 <LI><a href="#[1c3]">RTC_Handler</a> from startup_rtl87x3e.o(.text) referenced from vector_table_ext.o(.data)
 <LI><a href="#[1c3]">RTC_Handler</a> from startup_rtl87x3e.o(.text) referenced from startup_rtl87x3e.o(VECTOR)
 <LI><a href="#[1ba]">RXI300_Handler</a> from startup_rtl87x3e.o(.text) referenced from startup_rtl87x3e.o(VECTOR)
 <LI><a href="#[1ac]">Reset_Handler</a> from startup_rtl87x3e.o(RESET) referenced from vector_table_ext.o(.data)
 <LI><a href="#[1ac]">Reset_Handler</a> from startup_rtl87x3e.o(RESET) referenced from startup_rtl87x3e.o(VECTOR)
 <LI><a href="#[1f2]">SDIO0_Handler</a> from startup_rtl87x3e.o(.text) referenced from vector_table_ext.o(.data)
 <LI><a href="#[1f2]">SDIO0_Handler</a> from startup_rtl87x3e.o(.text) referenced from startup_rtl87x3e.o(VECTOR)
 <LI><a href="#[1bb]">SPI0_Handler</a> from startup_rtl87x3e.o(.text) referenced from vector_table_ext.o(.data)
 <LI><a href="#[1bb]">SPI0_Handler</a> from startup_rtl87x3e.o(.text) referenced from startup_rtl87x3e.o(VECTOR)
 <LI><a href="#[1df]">SPI1_Handler</a> from startup_rtl87x3e.o(.text) referenced from vector_table_ext.o(.data)
 <LI><a href="#[1df]">SPI1_Handler</a> from startup_rtl87x3e.o(.text) referenced from startup_rtl87x3e.o(VECTOR)
 <LI><a href="#[1e0]">SPI2_Handler</a> from startup_rtl87x3e.o(.text) referenced from vector_table_ext.o(.data)
 <LI><a href="#[1e0]">SPI2_Handler</a> from startup_rtl87x3e.o(.text) referenced from startup_rtl87x3e.o(VECTOR)
 <LI><a href="#[1e7]">SPIC0_Handler</a> from startup_rtl87x3e.o(.text) referenced from vector_table_ext.o(.data)
 <LI><a href="#[1e7]">SPIC0_Handler</a> from startup_rtl87x3e.o(.text) referenced from startup_rtl87x3e.o(VECTOR)
 <LI><a href="#[1e8]">SPIC1_Handler</a> from startup_rtl87x3e.o(.text) referenced from vector_table_ext.o(.data)
 <LI><a href="#[1e8]">SPIC1_Handler</a> from startup_rtl87x3e.o(.text) referenced from startup_rtl87x3e.o(VECTOR)
 <LI><a href="#[1e9]">SPIC2_Handler</a> from startup_rtl87x3e.o(.text) referenced from vector_table_ext.o(.data)
 <LI><a href="#[1e9]">SPIC2_Handler</a> from startup_rtl87x3e.o(.text) referenced from startup_rtl87x3e.o(VECTOR)
 <LI><a href="#[1ea]">SPIC3_Handler</a> from startup_rtl87x3e.o(.text) referenced from vector_table_ext.o(.data)
 <LI><a href="#[1ea]">SPIC3_Handler</a> from startup_rtl87x3e.o(.text) referenced from startup_rtl87x3e.o(VECTOR)
 <LI><a href="#[1bf]">SPORT0_RX_Handler</a> from startup_rtl87x3e.o(.text) referenced from vector_table_ext.o(.data)
 <LI><a href="#[1bf]">SPORT0_RX_Handler</a> from startup_rtl87x3e.o(.text) referenced from startup_rtl87x3e.o(VECTOR)
 <LI><a href="#[1be]">SPORT0_TX_Handler</a> from startup_rtl87x3e.o(.text) referenced from vector_table_ext.o(.data)
 <LI><a href="#[1be]">SPORT0_TX_Handler</a> from startup_rtl87x3e.o(.text) referenced from startup_rtl87x3e.o(VECTOR)
 <LI><a href="#[1ce]">SPORT1_RX_Handler</a> from startup_rtl87x3e.o(.text) referenced from vector_table_ext.o(.data)
 <LI><a href="#[1ce]">SPORT1_RX_Handler</a> from startup_rtl87x3e.o(.text) referenced from startup_rtl87x3e.o(VECTOR)
 <LI><a href="#[1cf]">SPORT1_TX_Handler</a> from startup_rtl87x3e.o(.text) referenced from vector_table_ext.o(.data)
 <LI><a href="#[1cf]">SPORT1_TX_Handler</a> from startup_rtl87x3e.o(.text) referenced from startup_rtl87x3e.o(VECTOR)
 <LI><a href="#[1f3]">SPORT2_RX_Handler</a> from startup_rtl87x3e.o(.text) referenced from vector_table_ext.o(.data)
 <LI><a href="#[1f3]">SPORT2_RX_Handler</a> from startup_rtl87x3e.o(.text) referenced from startup_rtl87x3e.o(VECTOR)
 <LI><a href="#[1b2]">SVC_Handler</a> from startup_rtl87x3e.o(.text) referenced from vector_table_ext.o(.data)
 <LI><a href="#[1b2]">SVC_Handler</a> from startup_rtl87x3e.o(.text) referenced from startup_rtl87x3e.o(VECTOR)
 <LI><a href="#[1b5]">SysTick_Handler</a> from startup_rtl87x3e.o(.text) referenced from vector_table_ext.o(.data)
 <LI><a href="#[1b5]">SysTick_Handler</a> from startup_rtl87x3e.o(.text) referenced from startup_rtl87x3e.o(VECTOR)
 <LI><a href="#[1b6]">System_Handler</a> from startup_rtl87x3e.o(.text) referenced from vector_table_ext.o(.data)
 <LI><a href="#[1b6]">System_Handler</a> from startup_rtl87x3e.o(.text) referenced from startup_rtl87x3e.o(VECTOR)
 <LI><a href="#[1c0]">TIM2_Handler</a> from startup_rtl87x3e.o(.text) referenced from vector_table_ext.o(.data)
 <LI><a href="#[1c0]">TIM2_Handler</a> from startup_rtl87x3e.o(.text) referenced from startup_rtl87x3e.o(VECTOR)
 <LI><a href="#[1c1]">TIM3_Handler</a> from startup_rtl87x3e.o(.text) referenced from vector_table_ext.o(.data)
 <LI><a href="#[1c1]">TIM3_Handler</a> from startup_rtl87x3e.o(.text) referenced from startup_rtl87x3e.o(VECTOR)
 <LI><a href="#[1c2]">TIM4_Handler</a> from startup_rtl87x3e.o(.text) referenced from vector_table_ext.o(.data)
 <LI><a href="#[1c2]">TIM4_Handler</a> from startup_rtl87x3e.o(.text) referenced from startup_rtl87x3e.o(VECTOR)
 <LI><a href="#[1eb]">TIM5_Handler</a> from startup_rtl87x3e.o(.text) referenced from vector_table_ext.o(.data)
 <LI><a href="#[1eb]">TIM5_Handler</a> from startup_rtl87x3e.o(.text) referenced 2 times from startup_rtl87x3e.o(VECTOR)
 <LI><a href="#[1ec]">TIM6_Handler</a> from startup_rtl87x3e.o(.text) referenced from vector_table_ext.o(.data)
 <LI><a href="#[1ec]">TIM6_Handler</a> from startup_rtl87x3e.o(.text) referenced 2 times from startup_rtl87x3e.o(VECTOR)
 <LI><a href="#[1ed]">TIM7_Handler</a> from startup_rtl87x3e.o(.text) referenced from vector_table_ext.o(.data)
 <LI><a href="#[1ed]">TIM7_Handler</a> from startup_rtl87x3e.o(.text) referenced 2 times from startup_rtl87x3e.o(VECTOR)
 <LI><a href="#[1f5]">TOUCH_Handler</a> from startup_rtl87x3e.o(.text) referenced from vector_table_ext.o(.data)
 <LI><a href="#[1f5]">TOUCH_Handler</a> from startup_rtl87x3e.o(.text) referenced from startup_rtl87x3e.o(VECTOR)
 <LI><a href="#[1fa]">TRNG_Handler</a> from startup_rtl87x3e.o(.text) referenced from startup_rtl87x3e.o(VECTOR)
 <LI><a href="#[1c4]">UART0_Handler</a> from startup_rtl87x3e.o(.text) referenced from vector_table_ext.o(.data)
 <LI><a href="#[1c4]">UART0_Handler</a> from startup_rtl87x3e.o(.text) referenced from startup_rtl87x3e.o(VECTOR)
 <LI><a href="#[1c5]">UART1_Handler</a> from startup_rtl87x3e.o(.text) referenced from vector_table_ext.o(.data)
 <LI><a href="#[1c5]">UART1_Handler</a> from startup_rtl87x3e.o(.text) referenced from startup_rtl87x3e.o(VECTOR)
 <LI><a href="#[1c6]">UART2_Handler</a> from startup_rtl87x3e.o(.text) referenced from vector_table_ext.o(.data)
 <LI><a href="#[1c6]">UART2_Handler</a> from startup_rtl87x3e.o(.text) referenced from startup_rtl87x3e.o(VECTOR)
 <LI><a href="#[1e5]">USB_Handler</a> from startup_rtl87x3e.o(.text) referenced from vector_table_ext.o(.data)
 <LI><a href="#[1e5]">USB_Handler</a> from startup_rtl87x3e.o(.text) referenced from startup_rtl87x3e.o(VECTOR)
 <LI><a href="#[1e6]">USB_ISOC_Handler</a> from startup_rtl87x3e.o(.text) referenced from vector_table_ext.o(.data)
 <LI><a href="#[1e6]">USB_ISOC_Handler</a> from startup_rtl87x3e.o(.text) referenced from startup_rtl87x3e.o(VECTOR)
 <LI><a href="#[1b1]">UsageFault_Handler</a> from startup_rtl87x3e.o(.text) referenced from vector_table_ext.o(.data)
 <LI><a href="#[1b1]">UsageFault_Handler</a> from startup_rtl87x3e.o(.text) referenced from startup_rtl87x3e.o(VECTOR)
 <LI><a href="#[1f8]">Utmi_Suspend_N_Handler</a> from startup_rtl87x3e.o(.text) referenced from startup_rtl87x3e.o(VECTOR)
 <LI><a href="#[1d1]">VBAT_DET_Handler</a> from startup_rtl87x3e.o(.text) referenced from vector_table_ext.o(.data)
 <LI><a href="#[1d1]">VBAT_DET_Handler</a> from startup_rtl87x3e.o(.text) referenced 2 times from startup_rtl87x3e.o(VECTOR)
 <LI><a href="#[1b7]">WDT_Handler</a> from startup_rtl87x3e.o(.text) referenced from startup_rtl87x3e.o(VECTOR)
 <LI><a href="#[17f]">__buffer_dump</a> from media_buffer.o(.text) referenced from media_buffer.o(.constdata)
 <LI><a href="#[17b]">__buffer_flush</a> from media_buffer.o(.text) referenced from media_buffer.o(.constdata)
 <LI><a href="#[17c]">__buffer_peek</a> from media_buffer.o(.text) referenced from media_buffer.o(.constdata)
 <LI><a href="#[180]">__buffer_reset</a> from media_buffer.o(.text) referenced from media_buffer.o(.constdata)
 <LI><a href="#[17d]">__buffer_shrink</a> from media_buffer.o(.text) referenced from media_buffer.o(.constdata)
 <LI><a href="#[17e]">__buffer_write</a> from media_buffer.o(.text) referenced from media_buffer.o(.constdata)
 <LI><a href="#[101]">_sbackspace</a> from _sgetc.o(.text) referenced from __0sscanf.o(.text)
 <LI><a href="#[102]">_scanf_char_input</a> from scanf_char.o(.text) referenced from scanf_char.o(.text)
 <LI><a href="#[100]">_sgetc</a> from _sgetc.o(.text) referenced from __0sscanf.o(.text)
 <LI><a href="#[ff]">_snputc</a> from ROM.lib(ABSOLUTE) referenced from noretval__2snprintf.o(.text)
 <LI><a href="#[da0]">a2dp_callback</a> from a2dp.o(.text) referenced from a2dp.o(.text)
 <LI><a href="#[13f]">adc_dlps_enter</a> from io_dlps.o(.text) referenced from io_dlps.o(.constdata)
 <LI><a href="#[140]">adc_dlps_exit</a> from io_dlps.o(.text) referenced from io_dlps.o(.constdata)
 <LI><a href="#[141]">adc_need_restore</a> from io_dlps.o(.text) referenced from io_dlps.o(.constdata)
 <LI><a href="#[242]">adp_5v_get_curr_state</a> from hal_adp.o(.text) referenced from hal_adp.o(.data)
 <LI><a href="#[241]">adp_5v_get_deboune_time</a> from hal_adp.o(.text) referenced from hal_adp.o(.data)
 <LI><a href="#[243]">adp_5v_get_level</a> from hal_adp.o(.ram_text) referenced from hal_adp.o(.data)
 <LI><a href="#[83]">adp_5v_handler</a> from hal_adp.o(.ram_text) referenced from hal_adp.o(.text)
 <LI><a href="#[abb]">adp_5v_in_handler</a> from hal_adp.o(.text) referenced from hal_adp.o(.text)
 <LI><a href="#[244]">adp_5v_init_isr</a> from hal_adp.o(.text) referenced from hal_adp.o(.data)
 <LI><a href="#[245]">adp_5v_init_plug</a> from hal_adp.o(.text) referenced from hal_adp.o(.data)
 <LI><a href="#[abd]">adp_5v_out_handler</a> from hal_adp.o(.text) referenced from hal_adp.o(.text)
 <LI><a href="#[abe]">adp_high_to_low_wake_up_trigger_isr</a> from hal_adp.o(.text) referenced from hal_adp.o(.text)
 <LI><a href="#[247]">adp_io_get_curr_state</a> from hal_adp.o(.text) referenced from hal_adp.o(.data)
 <LI><a href="#[246]">adp_io_get_deboune_time</a> from hal_adp.o(.text) referenced from hal_adp.o(.data)
 <LI><a href="#[248]">adp_io_get_level</a> from hal_adp.o(.ram_text) referenced from hal_adp.o(.data)
 <LI><a href="#[84]">adp_io_handler</a> from hal_adp.o(.isr.text) referenced from hal_adp.o(.text)
 <LI><a href="#[ac0]">adp_io_in_handler</a> from hal_adp.o(.text) referenced from hal_adp.o(.text)
 <LI><a href="#[249]">adp_io_init_isr</a> from hal_adp.o(.text) referenced from hal_adp.o(.data)
 <LI><a href="#[24a]">adp_io_init_plug</a> from hal_adp.o(.text) referenced from hal_adp.o(.data)
 <LI><a href="#[ac1]">adp_io_out_handler</a> from hal_adp.o(.text) referenced from hal_adp.o(.text)
 <LI><a href="#[b3c]">adv_data_timer_callback</a> from ble_adv_data.o(.text) referenced from ble_adv_data.o(.text)
 <LI><a href="#[b6]">analog_dsp_mgr_session_cb</a> from audio_path.o(.text) referenced from audio_path.o(.text)
 <LI><a href="#[aa]">analog_wait_running_handler</a> from audio_path.o(.text) referenced from audio_path.o(.text)
 <LI><a href="#[1f]">app_a2dp_bt_cback</a> from app_a2dp.o(.text) referenced from app_a2dp.o(.text)
 <LI><a href="#[32]">app_adp_5v_handler</a> from app_adp.o(.ram_text) referenced from app_adp.o(.text)
 <LI><a href="#[31]">app_adp_stage_change_cb</a> from app_adp.o(.text) referenced from app_adp.o(.text)
 <LI><a href="#[2e]">app_audio_bt_cback</a> from app_audio_policy.o(.text) referenced from app_audio_policy.o(.text)
 <LI><a href="#[642]">app_audio_mtc_if_handle</a> from app_audio_policy.o(.text) referenced from app_audio_policy.o(.text)
 <LI><a href="#[2d]">app_audio_policy_cback</a> from app_audio_policy.o(.text) referenced from app_audio_policy.o(.text)
 <LI><a href="#[2f]">app_audio_policy_timeout_cb</a> from app_audio_policy.o(.text) referenced from app_audio_policy.o(.text)
 <LI><a href="#[641]">app_audio_probe_cback</a> from app_audio_policy.o(.text) referenced from app_audio_policy.o(.text)
 <LI><a href="#[3a]">app_audio_route_adc_gain_get_cback</a> from app_audio_route.o(.text) referenced from app_audio_route.o(.text)
 <LI><a href="#[3b]">app_audio_route_dac_gain_get_cback</a> from app_audio_route.o(.text) referenced from app_audio_route.o(.text)
 <LI><a href="#[37]">app_auto_power_off_dm_cback</a> from app_auto_power_off.o(.text) referenced from app_auto_power_off.o(.text)
 <LI><a href="#[36]">app_auto_power_off_timeout_cb</a> from app_auto_power_off.o(.text) referenced from app_auto_power_off.o(.text)
 <LI><a href="#[1d]">app_avrcp_bt_cback</a> from app_avrcp.o(.text) referenced from app_avrcp.o(.text)
 <LI><a href="#[1e]">app_avrcp_timeout_cb</a> from app_avrcp.o(.text) referenced from app_avrcp.o(.text)
 <LI><a href="#[19]">app_ble_common_adv_callback</a> from app_ble_common_adv.o(.text) referenced from app_ble_common_adv.o(.text)
 <LI><a href="#[1a]">app_ble_common_adv_rand_addr_cb</a> from app_ble_common_adv.o(.text) referenced from app_ble_common_adv.o(.text)
 <LI><a href="#[12]">app_ble_gap_bt_cback</a> from app_ble_gap.o(.text) referenced from app_ble_gap.o(.text)
 <LI><a href="#[13]">app_ble_gap_cb</a> from app_ble_gap.o(.text) referenced from app_ble_gap.o(.text)
 <LI><a href="#[3d6]">app_ble_gap_client_discov_cb</a> from app_ble_gap.o(.text) referenced 2 times from app_ble_gap.o(.text)
 <LI><a href="#[14]">app_ble_gap_timeout_cb</a> from app_ble_gap.o(.text) referenced from app_ble_gap.o(.text)
 <LI><a href="#[3f8]">app_ble_gap_vendor_callback</a> from app_ble_gap.o(.text) referenced from app_ble_gap.o(.text)
 <LI><a href="#[17]">app_ble_service_bas_srv_cb</a> from app_ble_service.o(.text) referenced from app_ble_service.o(.text)
 <LI><a href="#[18]">app_ble_service_dis_srv_cb</a> from app_ble_service.o(.text) referenced from app_ble_service.o(.text)
 <LI><a href="#[15]">app_ble_service_general_srv_cb</a> from app_ble_service.o(.text) referenced from app_ble_service.o(.text)
 <LI><a href="#[16]">app_ble_service_transmit_srv_cb</a> from app_ble_service.o(.text) referenced from app_ble_service.o(.text)
 <LI><a href="#[2a]">app_bt_policy_cback</a> from app_bt_policy.o(.text) referenced from app_bt_policy.o(.text)
 <LI><a href="#[2c]">app_bt_policy_device_event_cback</a> from app_bt_policy.o(.text) referenced from app_bt_policy.o(.text)
 <LI><a href="#[2b]">app_bt_policy_timer_cback</a> from app_bt_policy.o(.text) referenced from app_bt_policy.o(.text)
 <LI><a href="#[10]">app_charger_dm_cback</a> from app_charger.o(.text) referenced from app_charger.o(.text)
 <LI><a href="#[392]">app_charger_soc_cb</a> from app_charger.o(.text) referenced 2 times from app_charger.o(.text)
 <LI><a href="#[391]">app_charger_state_cb</a> from app_charger.o(.text) referenced from app_charger.o(.text)
 <LI><a href="#[f]">app_charger_timeout_cb</a> from app_charger.o(.text) referenced from app_charger.o(.text)
 <LI><a href="#[34]">app_cmd_bt_cback</a> from app_cmd.o(.text) referenced from app_cmd.o(.text)
 <LI><a href="#[35]">app_cmd_timeout_cb</a> from app_cmd.o(.text) referenced from app_cmd.o(.text)
 <LI><a href="#[21]">app_device_ble_cback</a> from app_device.o(.text) referenced from app_device.o(.text)
 <LI><a href="#[23]">app_device_bt_cback</a> from app_device.o(.text) referenced from app_device.o(.text)
 <LI><a href="#[22]">app_device_dm_cback</a> from app_device.o(.text) referenced from app_device.o(.text)
 <LI><a href="#[20]">app_device_link_policy_ind</a> from app_device.o(.text) referenced from app_device.o(.text)
 <LI><a href="#[24]">app_device_timerout_cb</a> from app_device.o(.text) referenced from app_device.o(.text)
 <LI><a href="#[26]">app_dlps_check_callback</a> from app_dlps.o(.ram_text) referenced from app_dlps.o(.text)
 <LI><a href="#[54c]">app_dlps_enter_callback</a> from app_dlps.o(.text) referenced from app_dlps.o(.text)
 <LI><a href="#[555]">app_dlps_exit_callback</a> from app_dlps.o(.text) referenced from app_dlps.o(.text)
 <LI><a href="#[27]">app_dlps_timeout_cb</a> from app_dlps.o(.text) referenced from app_dlps.o(.text)
 <LI><a href="#[55]">app_dult_audio_cback</a> from app_dult_device.o(.text) referenced from app_dult_device.o(.text)
 <LI><a href="#[54]">app_dult_cb</a> from app_dult.o(.text) referenced from app_dult.o(.text)
 <LI><a href="#[56]">app_dult_timer_cb</a> from app_dult_device.o(.text) referenced from app_dult_device.o(.text)
 <LI><a href="#[30]">app_eq_factory_reset_cback</a> from app_eq.o(.text) referenced from app_eq.o(.text)
 <LI><a href="#[40]">app_ext_charger_bt_cback</a> from app_ext_charger.o(.text) referenced from app_ext_charger.o(.text)
 <LI><a href="#[23f]">app_ext_charger_charging_error_handler</a> from app_ext_charger.o(.text) referenced from app_ext_charger.o(.data)
 <LI><a href="#[23e]">app_ext_charger_charging_finish_handler</a> from app_ext_charger.o(.text) referenced from app_ext_charger.o(.data)
 <LI><a href="#[23d]">app_ext_charger_charging_handler</a> from app_ext_charger.o(.text) referenced from app_ext_charger.o(.data)
 <LI><a href="#[42]">app_ext_charger_dlps_check_cb</a> from app_ext_charger.o(.text) referenced from app_ext_charger.o(.text)
 <LI><a href="#[240]">app_ext_charger_no_charge_handler</a> from app_ext_charger.o(.text) referenced from app_ext_charger.o(.data)
 <LI><a href="#[3f]">app_ext_charger_plug_status_cb</a> from app_ext_charger.o(.text) referenced from app_ext_charger.o(.text)
 <LI><a href="#[3e]">app_ext_charger_status_det_gpio_intr_handler</a> from app_ext_charger.o(.isr.text) referenced from app_ext_charger.o(.text)
 <LI><a href="#[41]">app_ext_charger_timeout_cb</a> from app_ext_charger.o(.text) referenced from app_ext_charger.o(.text)
 <LI><a href="#[11]">app_gap_bt_cback</a> from app_gap.o(.text) referenced from app_gap.o(.text)
 <LI><a href="#[422]">app_gaps_gatt_client_callback</a> from app_ble_client.o(.text) referenced from app_ble_client.o(.text)
 <LI><a href="#[4b]">app_gfps_adv_callback</a> from app_gfps.o(.text) referenced from app_gfps.o(.text)
 <LI><a href="#[49]">app_gfps_cb</a> from app_gfps.o(.text) referenced from app_gfps.o(.text)
 <LI><a href="#[4c]">app_gfps_finder_beacon_le_disconnect_cb</a> from app_gfps_finder.o(.text) referenced from app_gfps_finder_adv.o(.text)
 <LI><a href="#[799]">app_gfps_finder_cb</a> from app_gfps_finder.o(.text) referenced from app_gfps_finder.o(.text)
 <LI><a href="#[78c]">app_gfps_finder_timeout_cb</a> from app_gfps_finder.o(.text) referenced from app_gfps_finder.o(.text)
 <LI><a href="#[4a]">app_gfps_le_disconnect_cb</a> from app_gfps.o(.text) referenced from app_gfps.o(.text)
 <LI><a href="#[50]">app_gfps_msg_rfc_audio_cback</a> from app_gfps_msg.o(.text) referenced from app_gfps_msg.o(.text)
 <LI><a href="#[4f]">app_gfps_msg_rfc_bt_cback</a> from app_gfps_msg.o(.text) referenced from app_gfps_msg.o(.text)
 <LI><a href="#[51]">app_gfps_msg_timeout_cb</a> from app_gfps_msg.o(.text) referenced from app_gfps_msg.o(.text)
 <LI><a href="#[7db]">app_gfps_psm_msg_coc_conn_callback</a> from app_gfps_psm.o(.text) referenced from app_gfps_psm.o(.text)
 <LI><a href="#[4e]">app_gfps_rfc_cback</a> from app_gfps_rfc.o(.text) referenced from app_gfps_msg.o(.text)
 <LI><a href="#[7f2]">app_gfps_timer_timeout_cb</a> from app_gfps_timer.o(.text) referenced from app_gfps_timer.o(.text)
 <LI><a href="#[74]">app_harman_adc_interrupt_handler</a> from app_harman_adc.o(.isr.text) referenced from app_harman_adc.o(.text)
 <LI><a href="#[75]">app_harman_adc_timeout_cb</a> from app_harman_adc.o(.text) referenced from app_harman_adc.o(.text)
 <LI><a href="#[72]">app_harman_audio_probe_dsp_cback</a> from app_harman_license.o(.text) referenced from app_harman_license.o(.text)
 <LI><a href="#[71]">app_harman_audio_probe_dsp_event_cback</a> from app_harman_license.o(.text) referenced from app_harman_license.o(.text)
 <LI><a href="#[6f]">app_harman_ble_ota_timeout_cb</a> from app_harman_ble_ota.o(.text) referenced from app_harman_ble_ota.o(.text)
 <LI><a href="#[73]">app_harman_dsp_event_cback</a> from app_harman_eq.o(.text) referenced from app_harman_eq.o(.text)
 <LI><a href="#[6e]">app_harman_timeout_cb</a> from app_harman_behaviors.o(.text) referenced from app_harman_behaviors.o(.text)
 <LI><a href="#[76]">app_harman_usb_adc_interrupt_handler</a> from app_harman_usb_connector_protect.o(.isr.text) referenced from app_harman_usb_connector_protect.o(.text)
 <LI><a href="#[77]">app_harman_usb_adc_timeout_cb</a> from app_harman_usb_connector_protect.o(.text) referenced from app_harman_usb_connector_protect.o(.text)
 <LI><a href="#[1b]">app_hfp_audio_cback</a> from app_hfp.o(.text) referenced from app_hfp.o(.text)
 <LI><a href="#[1c]">app_hfp_bt_cback</a> from app_hfp.o(.text) referenced from app_hfp.o(.text)
 <LI><a href="#[471]">app_hfp_timeout_cb</a> from app_hfp.o(.text) referenced from app_hfp.o(.text)
 <LI><a href="#[c]">app_key_bt_cback</a> from app_key_process.o(.text) referenced from app_key_process.o(.text)
 <LI><a href="#[d]">app_key_factory_reset_cback</a> from app_key_process.o(.text) referenced from app_key_process.o(.text)
 <LI><a href="#[e]">app_key_timeout_cb</a> from app_key_process.o(.text) referenced from app_key_process.o(.text)
 <LI><a href="#[57]">app_lea_adv_callback</a> from app_lea_adv.o(.text) referenced from app_lea_adv.o(.text)
 <LI><a href="#[58]">app_lea_adv_timeout_cb</a> from app_lea_adv.o(.text) referenced from app_lea_adv.o(.text)
 <LI><a href="#[59]">app_lea_ascs_ble_audio_cback</a> from app_lea_ascs.o(.text) referenced from app_lea_ascs.o(.text)
 <LI><a href="#[69]">app_lea_bca_audio_cback</a> from app_lea_broadcast_audio.o(.text) referenced from app_lea_broadcast_audio.o(.text)
 <LI><a href="#[6a]">app_lea_bca_ble_audio_cback</a> from app_lea_broadcast_audio.o(.text) referenced from app_lea_broadcast_audio.o(.text)
 <LI><a href="#[6c]">app_lea_bca_le_disconnect_cb</a> from app_lea_broadcast_audio.o(.text) referenced from app_lea_broadcast_audio.o(.text)
 <LI><a href="#[68]">app_lea_bca_sync_cb</a> from app_lea_broadcast_audio.o(.text) referenced 2 times from app_lea_broadcast_audio.o(.text)
 <LI><a href="#[6b]">app_lea_bca_timeout_cb</a> from app_lea_broadcast_audio.o(.text) referenced from app_lea_broadcast_audio.o(.text)
 <LI><a href="#[5a]">app_lea_ccp_ble_audio_cback</a> from app_lea_ccp.o(.text) referenced from app_lea_ccp.o(.text)
 <LI><a href="#[5b]">app_lea_mcp_ble_audio_cback</a> from app_lea_mcp.o(.text) referenced from app_lea_mcp.o(.text)
 <LI><a href="#[8d9]">app_lea_mgr_bmr_mtc_if_handle</a> from app_lea_broadcast_audio.o(.text) referenced from app_lea_broadcast_audio.o(.text)
 <LI><a href="#[863]">app_lea_mgr_cis_mtc_if_handle</a> from app_lea_mgr.o(.text) referenced from app_lea_mgr.o(.text)
 <LI><a href="#[5f]">app_lea_mgr_direct_cback</a> from app_lea_mgr.o(.text) referenced from app_lea_mgr.o(.text)
 <LI><a href="#[60]">app_lea_mgr_probe_cback</a> from app_lea_mgr.o(.text) referenced from app_lea_mgr.o(.text)
 <LI><a href="#[61]">app_lea_mgr_timeout_cb</a> from app_lea_mgr.o(.text) referenced from app_lea_mgr.o(.text)
 <LI><a href="#[5c]">app_lea_pacs_ble_audio_cback</a> from app_lea_pacs.o(.text) referenced from app_lea_pacs.o(.text)
 <LI><a href="#[5d]">app_lea_scan_cb</a> from app_lea_scan.o(.text) referenced from app_lea_scan.o(.text)
 <LI><a href="#[64]">app_lea_uca_audio_cback</a> from app_lea_unicast_audio.o(.text) referenced from app_lea_unicast_audio.o(.text)
 <LI><a href="#[65]">app_lea_uca_ble_audio_cback</a> from app_lea_unicast_audio.o(.text) referenced from app_lea_unicast_audio.o(.text)
 <LI><a href="#[63]">app_lea_uca_bond_cback</a> from app_lea_unicast_audio.o(.text) referenced from app_lea_unicast_audio.o(.text)
 <LI><a href="#[66]">app_lea_uca_le_disconnect_cb</a> from app_lea_unicast_audio.o(.text) referenced from app_lea_unicast_audio.o(.text)
 <LI><a href="#[62]">app_lea_uca_record_read_cb</a> from app_lea_unicast_audio.o(.text) referenced from app_lea_unicast_audio.o(.text)
 <LI><a href="#[5e]">app_lea_vcs_ble_audio_cback</a> from app_lea_vcs.o(.text) referenced from app_lea_vcs.o(.text)
 <LI><a href="#[67]">app_lea_vol_ble_audio_cback</a> from app_lea_vol_policy.o(.text) referenced from app_lea_vol_policy.o(.text)
 <LI><a href="#[7]">app_led_bt_cback</a> from app_led.o(.text) referenced from app_led.o(.text)
 <LI><a href="#[8]">app_led_timeout_cb</a> from app_led.o(.text) referenced from app_led.o(.text)
 <LI><a href="#[25]">app_mmi_timeout_cb</a> from app_mmi.o(.text) referenced from app_mmi.o(.text)
 <LI><a href="#[28]">app_multi_bt_cback</a> from app_multilink.o(.text) referenced from app_multilink.o(.text)
 <LI><a href="#[5be]">app_multi_mtc_if_handle</a> from app_multilink.o(.text) referenced from app_multilink.o(.text)
 <LI><a href="#[29]">app_multi_timeout_cb</a> from app_multilink.o(.text) referenced from app_multilink.o(.text)
 <LI><a href="#[52]">app_sass_policy_bt_cback</a> from app_sass_policy.o(.text) referenced from app_sass_policy.o(.text)
 <LI><a href="#[53]">app_sass_policy_timeout_cb</a> from app_sass_policy.o(.text) referenced from app_sass_policy.o(.text)
 <LI><a href="#[33]">app_spp_bt_cback</a> from app_spp.o(.text) referenced from app_spp.o(.text)
 <LI><a href="#[38]">app_swift_pair_adv_callback</a> from app_ble_swift_pair.o(.text) referenced from app_ble_swift_pair.o(.text)
 <LI><a href="#[39]">app_swift_pair_timeout_cb</a> from app_ble_swift_pair.o(.text) referenced from app_ble_swift_pair.o(.text)
 <LI><a href="#[6]">app_task</a> from app_main.o(.text) referenced from app_main.o(.text)
 <LI><a href="#[afa]">app_timer_cb</a> from app_timer.o(.text) referenced from app_timer.o(.text)
 <LI><a href="#[163]">ascs_attr_read_cb</a> from ascs_mgr.o(.text) referenced from ascs_mgr.o(.constdata)
 <LI><a href="#[164]">ascs_attr_write_cb</a> from ascs_mgr.o(.text) referenced from ascs_mgr.o(.constdata)
 <LI><a href="#[165]">ascs_cccd_update_cb</a> from ascs_mgr.o(.text) referenced from ascs_mgr.o(.constdata)
 <LI><a href="#[93]">ascs_dm_cback</a> from ascs_mgr.o(.text) referenced from ascs_mgr.o(.text)
 <LI><a href="#[c16]">ascs_handle_cig_mgr_msg</a> from ascs_mgr.o(.text) referenced from ascs_mgr.o(.text)
 <LI><a href="#[b2]">audio_dsp_mgr_session_cb</a> from audio_path.o(.text) referenced from audio_path.o(.text)
 <LI><a href="#[bc]">audio_latency_timeout_cback</a> from audio_latency.o(.text) referenced from audio_latency.o(.text)
 <LI><a href="#[ad]">audio_mgr_codec_timer_cback</a> from audio_path.o(.text) referenced from audio_path.o(.text)
 <LI><a href="#[a46]">audio_mgr_dsp_msg_pipe</a> from audio_mgr.o(.text) referenced from audio_mgr.o(.text)
 <LI><a href="#[ae]">audio_mgr_dsp_timer_cback</a> from audio_path.o(.text) referenced from audio_path.o(.text)
 <LI><a href="#[fe]">audio_pad_dlps_enter_callback</a> from audio_pad.o(.text) referenced from audio_pad.o(.text)
 <LI><a href="#[184]">audio_path_analog_stop</a> from audio_path.o(.text) referenced from audio_path.o(.constdata)
 <LI><a href="#[181]">audio_path_audio_stop</a> from audio_path.o(.text) referenced from audio_path.o(.constdata)
 <LI><a href="#[a2]">audio_path_composite_cback</a> from notification.o(.text) referenced from notification.o(.text)
 <LI><a href="#[ac]">audio_path_dsp_cback</a> from audio_path.o(.text) referenced from audio_path.o(.text)
 <LI><a href="#[ab]">audio_path_ipc_event_handler</a> from audio_path.o(.text) referenced from audio_path.o(.text)
 <LI><a href="#[af]">audio_path_msg_handler</a> from audio_path.o(.text) referenced from audio_path.o(.text)
 <LI><a href="#[b7]">audio_path_notification_wait_path_ready2running</a> from audio_path.o(.text) referenced from audio_path.o(.text)
 <LI><a href="#[b0]">audio_path_ready_stop_cback</a> from audio_path.o(.text) referenced from audio_path.o(.text)
 <LI><a href="#[183]">audio_path_record_stop</a> from audio_path.o(.text) referenced from audio_path.o(.constdata)
 <LI><a href="#[185]">audio_path_tone_stop</a> from audio_path.o(.text) referenced from audio_path.o(.constdata)
 <LI><a href="#[a3]">audio_path_voice_prompt_cback</a> from notification.o(.text) referenced from notification.o(.text)
 <LI><a href="#[182]">audio_path_voice_stop</a> from audio_path.o(.text) referenced from audio_path.o(.constdata)
 <LI><a href="#[186]">audio_path_vp_stop</a> from audio_path.o(.text) referenced from audio_path.o(.constdata)
 <LI><a href="#[7a]">audio_probe_dsp_event_cback</a> from audio_probe.o(.text) referenced from audio_probe.o(.text)
 <LI><a href="#[79]">audio_probe_dsp_ipc_cback</a> from audio_probe.o(.text) referenced from audio_probe.o(.text)
 <LI><a href="#[a3a]">audio_sys_ipc_cback</a> from audio_mgr.o(.text) referenced from audio_mgr.o(.text)
 <LI><a href="#[7c]">audio_track_effect_cback</a> from audio_track.o(.text) referenced from audio_track.o(.text)
 <LI><a href="#[7b]">audio_track_path_cback</a> from audio_track.o(.text) referenced from audio_track.o(.text)
 <LI><a href="#[a7]">audio_wait_running_handler</a> from audio_path.o(.text) referenced from audio_path.o(.text)
 <LI><a href="#[db1]">avrcp_tout_callback</a> from avrcp.o(.text) referenced from avrcp.o(.text)
 <LI><a href="#[95]">bap_dm_cback</a> from bap.o(.text) referenced from bap.o(.text)
 <LI><a href="#[108]">bas_attr_read_cb</a> from bas.o(.text) referenced from bas.o(.constdata)
 <LI><a href="#[109]">bas_cccd_update_cb</a> from bas.o(.text) referenced from bas.o(.constdata)
 <LI><a href="#[166]">bass_attr_read_cb</a> from bass_mgr.o(.text) referenced from bass_mgr.o(.constdata)
 <LI><a href="#[167]">bass_attr_write_cb</a> from bass_mgr.o(.text) referenced from bass_mgr.o(.constdata)
 <LI><a href="#[c3e]">bass_audio_sync_cb</a> from bass_mgr.o(.text) referenced from bass_mgr.o(.text)
 <LI><a href="#[172]">bass_big_check_info_proc</a> from bass_brs_mgr.o(.text) referenced from bass_brs_mgr.o(.constdata)
 <LI><a href="#[173]">bass_big_sync_failed_proc</a> from bass_brs_mgr.o(.text) referenced from bass_brs_mgr.o(.constdata)
 <LI><a href="#[170]">bass_big_synchronized_proc</a> from bass_brs_mgr.o(.text) referenced from bass_brs_mgr.o(.constdata)
 <LI><a href="#[16f]">bass_big_terminate_req_proc</a> from bass_brs_mgr.o(.text) referenced from bass_brs_mgr.o(.constdata)
 <LI><a href="#[171]">bass_big_terminated_proc</a> from bass_brs_mgr.o(.text) referenced from bass_brs_mgr.o(.constdata)
 <LI><a href="#[168]">bass_cccd_update_cb</a> from bass_mgr.o(.text) referenced from bass_mgr.o(.constdata)
 <LI><a href="#[96]">bass_dm_cback</a> from bass_mgr.o(.text) referenced from bass_mgr.o(.text)
 <LI><a href="#[16e]">bass_pa_sync_no_past_proc</a> from bass_brs_mgr.o(.text) referenced from bass_brs_mgr.o(.constdata)
 <LI><a href="#[16d]">bass_pa_sync_past_proc</a> from bass_brs_mgr.o(.text) referenced from bass_brs_mgr.o(.constdata)
 <LI><a href="#[16c]">bass_pa_terminate_proc</a> from bass_brs_mgr.o(.text) referenced from bass_brs_mgr.o(.constdata)
 <LI><a href="#[c68]">bass_past_timer_callback</a> from bass_brs_mgr.o(.text) referenced from bass_brs_mgr.o(.text)
 <LI><a href="#[f2]">bin_loader_driver_cb_check_finish</a> from bin_loader.o(.ram_text) referenced from bin_loader.o(.text)
 <LI><a href="#[f0]">bin_loader_driver_cb_err</a> from bin_loader.o(.ram_text) referenced from bin_loader.o(.text)
 <LI><a href="#[f1]">bin_loader_driver_cb_finish</a> from bin_loader.o(.ram_text) referenced from bin_loader.o(.text)
 <LI><a href="#[91]">ble_adv_data_callback</a> from ble_adv_data.o(.text) referenced from ble_adv_data.o(.text)
 <LI><a href="#[b42]">ble_adv_data_del</a> from ble_adv_data.o(.text) referenced from ble_adv_data.o(.text)
 <LI><a href="#[94]">ble_audio_big_sync_receiver_cb</a> from ble_audio_sync.o(.text) referenced from bap.o(.text)
 <LI><a href="#[110]">ble_audio_bond_check</a> from ble_audio_bond.o(.text) referenced from ble_audio_bond.o(.constdata)
 <LI><a href="#[115]">ble_audio_bond_clear_cccd_flag</a> from ble_audio_bond.o(.text) referenced from ble_audio_bond.o(.constdata)
 <LI><a href="#[113]">ble_audio_bond_get_addr</a> from ble_audio_bond.o(.text) referenced from ble_audio_bond.o(.constdata)
 <LI><a href="#[111]">ble_audio_bond_get_key</a> from ble_audio_bond.o(.text) referenced from ble_audio_bond.o(.constdata)
 <LI><a href="#[112]">ble_audio_bond_get_max_num</a> from ble_audio_bond.o(.text) referenced from ble_audio_bond.o(.constdata)
 <LI><a href="#[116]">ble_audio_bond_le_resolve_rpa</a> from ble_audio_bond.o(.text) referenced from ble_audio_bond.o(.constdata)
 <LI><a href="#[114]">ble_audio_bond_set_cccd_flag</a> from ble_audio_bond.o(.text) referenced from ble_audio_bond.o(.constdata)
 <LI><a href="#[8f1]">ble_audio_bt_bond_cb</a> from ble_audio_bond.o(.text) referenced from ble_audio_bond.o(.text)
 <LI><a href="#[157]">ble_audio_svc_cccd_update_cb</a> from bt_gatt_svc.o(.text) referenced from bt_gatt_svc.o(.constdata)
 <LI><a href="#[155]">ble_audio_svc_read_cb</a> from bt_gatt_svc.o(.text) referenced from bt_gatt_svc.o(.constdata)
 <LI><a href="#[156]">ble_audio_svc_write_cb</a> from bt_gatt_svc.o(.text) referenced from bt_gatt_svc.o(.constdata)
 <LI><a href="#[92]">ble_audio_svc_write_post</a> from bt_gatt_svc.o(.text) referenced from bt_gatt_svc.o(.text)
 <LI><a href="#[9bd]">bt_a2dp_cback</a> from bt_a2dp.o(.text) referenced from bt_a2dp.o(.text)
 <LI><a href="#[995]">bt_a2dp_pm_cback</a> from bt_mgr.o(.text) referenced 2 times from bt_mgr.o(.text)
 <LI><a href="#[9eb]">bt_avrcp_cback</a> from bt_avrcp.o(.text) referenced from bt_avrcp.o(.text)
 <LI><a href="#[10b]">bt_ext_ftl_partition_init</a> from bt_ext_ftl.o(.text) referenced from bt_ext_ftl.o(.constdata)
 <LI><a href="#[10c]">bt_ext_ftl_partition_read</a> from bt_ext_ftl.o(.text) referenced from bt_ext_ftl.o(.constdata)
 <LI><a href="#[10d]">bt_ext_ftl_partition_write</a> from bt_ext_ftl.o(.text) referenced from bt_ext_ftl.o(.constdata)
 <LI><a href="#[cae]">bt_gfps_cback</a> from bt_gfps.o(.text) referenced from bt_gfps.o(.text)
 <LI><a href="#[9c9]">bt_hfp_cback</a> from bt_hfp.o(.text) referenced from bt_hfp.o(.text)
 <LI><a href="#[78]">bt_hfp_pm_cback</a> from bt_mgr.o(.text) referenced 3 times from bt_mgr.o(.text)
 <LI><a href="#[160]">bt_legacy_adjust_dev_priority</a> from bt_bond_legacy.o(.text) referenced from bt_bond_legacy.o(.constdata)
 <LI><a href="#[162]">bt_legacy_clear_all_keys</a> from bt_bond_legacy.o(.text) referenced from bt_bond_legacy.o(.constdata)
 <LI><a href="#[161]">bt_legacy_delete_bond</a> from bt_bond_legacy.o(.text) referenced from bt_bond_legacy.o(.constdata)
 <LI><a href="#[15a]">bt_legacy_get_addr_by_priority</a> from bt_bond_legacy.o(.text) referenced from bt_bond_legacy.o(.constdata)
 <LI><a href="#[15e]">bt_legacy_get_bond</a> from bt_bond_legacy.o(.text) referenced from bt_bond_legacy.o(.constdata)
 <LI><a href="#[15c]">bt_legacy_get_bond_flag</a> from bt_bond_legacy.o(.text) referenced from bt_bond_legacy.o(.constdata)
 <LI><a href="#[159]">bt_legacy_get_bond_num</a> from bt_bond_legacy.o(.text) referenced from bt_bond_legacy.o(.constdata)
 <LI><a href="#[158]">bt_legacy_get_max_bond_num</a> from bt_bond_legacy.o(.text) referenced from bt_bond_legacy.o(.constdata)
 <LI><a href="#[15b]">bt_legacy_get_paired_idx</a> from bt_bond_legacy.o(.text) referenced from bt_bond_legacy.o(.constdata)
 <LI><a href="#[15f]">bt_legacy_save_bond</a> from bt_bond_legacy.o(.text) referenced from bt_bond_legacy.o(.constdata)
 <LI><a href="#[15d]">bt_legacy_set_bond_flag</a> from bt_bond_legacy.o(.text) referenced from bt_bond_legacy.o(.constdata)
 <LI><a href="#[994]">bt_mgr_pm_cback</a> from bt_mgr.o(.text) referenced from bt_mgr.o(.text)
 <LI><a href="#[9b6]">bt_pm_timeout_cback</a> from bt_pm.o(.text) referenced from bt_pm.o(.text)
 <LI><a href="#[9f9]">bt_rfc_cback</a> from bt_rfc.o(.text) referenced from bt_rfc.o(.text)
 <LI><a href="#[9e1]">bt_spp_cback</a> from bt_spp.o(.text) referenced from bt_spp.o(.text)
 <LI><a href="#[9c]">cap_cas_callback</a> from cap.o(.text) referenced from cap.o(.text)
 <LI><a href="#[9d]">cap_dm_cback</a> from cap.o(.text) referenced from cap.o(.text)
 <LI><a href="#[18e]">codec_drv_active_state</a> from codec_driver.o(.text) referenced from codec_driver.o(.constdata)
 <LI><a href="#[d9]">codec_drv_ad_depop_halt_timer_cb</a> from codec_driver.o(.text) referenced from codec_driver.o(.text)
 <LI><a href="#[18c]">codec_drv_ad_depop_state</a> from codec_driver.o(.text) referenced from codec_driver.o(.constdata)
 <LI><a href="#[e2]">codec_drv_adc_digital_config</a> from codec_driver.o(.text) referenced from codec_driver.o(.text)
 <LI><a href="#[18b]">codec_drv_close_state</a> from codec_driver.o(.text) referenced from codec_driver.o(.constdata)
 <LI><a href="#[dc]">codec_drv_dac_analog_config</a> from codec_driver.o(.text) referenced 2 times from codec_driver.o(.text)
 <LI><a href="#[da]">codec_drv_dac_depop_halt_timer_cb</a> from codec_driver.o(.text) referenced from codec_driver.o(.text)
 <LI><a href="#[de]">codec_drv_halt_adc_config</a> from codec_driver.o(.text) referenced 3 times from codec_driver.o(.text)
 <LI><a href="#[dd]">codec_drv_halt_dac_config</a> from codec_driver.o(.text) referenced 2 times from codec_driver.o(.text)
 <LI><a href="#[df]">codec_drv_i2s_config</a> from codec_driver.o(.text) referenced 2 times from codec_driver.o(.text)
 <LI><a href="#[e1]">codec_drv_micbias_parser</a> from codec_driver.o(.text) referenced from codec_driver.o(.text)
 <LI><a href="#[18d]">codec_drv_mute_state</a> from codec_driver.o(.text) referenced from codec_driver.o(.constdata)
 <LI><a href="#[db]">codec_drv_sidetone_config</a> from codec_driver.o(.text) referenced from codec_driver.o(.text)
 <LI><a href="#[e0]">codec_drv_sidetone_timer_cb</a> from codec_driver.o(.text) referenced from codec_driver.o(.text)
 <LI><a href="#[ed]">codec_mgr_adc_gain_mute_action</a> from codec_mgr.o(.text) referenced from codec_mgr.o(.text)
 <LI><a href="#[ee]">codec_mgr_adc_gain_set_action</a> from codec_mgr.o(.text) referenced 2 times from codec_mgr.o(.text)
 <LI><a href="#[ef]">codec_mgr_cback</a> from codec_mgr.o(.text) referenced from codec_mgr.o(.text)
 <LI><a href="#[1a3]">codec_mgr_enter_disabled</a> from codec_mgr.o(.text) referenced from codec_mgr.o(.constdata)
 <LI><a href="#[1a2]">codec_mgr_enter_disabling</a> from codec_mgr.o(.text) referenced from codec_mgr.o(.constdata)
 <LI><a href="#[19f]">codec_mgr_enter_enabled</a> from codec_mgr.o(.text) referenced from codec_mgr.o(.constdata)
 <LI><a href="#[19e]">codec_mgr_enter_enabling</a> from codec_mgr.o(.text) referenced 4 times from codec_mgr.o(.constdata)
 <LI><a href="#[1a1]">codec_mgr_enter_muted</a> from codec_mgr.o(.text) referenced from codec_mgr.o(.constdata)
 <LI><a href="#[1a0]">codec_mgr_enter_muting</a> from codec_mgr.o(.text) referenced from codec_mgr.o(.constdata)
 <LI><a href="#[19b]">codec_mgr_op_enter_busy</a> from codec_mgr.o(.text) referenced from codec_mgr.o(.constdata)
 <LI><a href="#[19d]">codec_mgr_op_enter_idle</a> from codec_mgr.o(.text) referenced from codec_mgr.o(.constdata)
 <LI><a href="#[19a]">codec_mgr_op_start_action</a> from codec_mgr.o(.text) referenced from codec_mgr.o(.constdata)
 <LI><a href="#[19c]">codec_mgr_op_stop_action</a> from codec_mgr.o(.text) referenced from codec_mgr.o(.constdata)
 <LI><a href="#[1a6]">codec_mgr_session_cfg_clear</a> from codec_mgr.o(.text) referenced 2 times from codec_mgr.o(.constdata)
 <LI><a href="#[1a4]">codec_mgr_session_cfg_set</a> from codec_mgr.o(.text) referenced 2 times from codec_mgr.o(.constdata)
 <LI><a href="#[1ab]">codec_mgr_session_enter_disabled</a> from codec_mgr.o(.text) referenced from codec_mgr.o(.constdata)
 <LI><a href="#[1aa]">codec_mgr_session_enter_disabling</a> from codec_mgr.o(.text) referenced from codec_mgr.o(.constdata)
 <LI><a href="#[1a8]">codec_mgr_session_enter_enabled</a> from codec_mgr.o(.text) referenced from codec_mgr.o(.constdata)
 <LI><a href="#[1a5]">codec_mgr_session_enter_enabling</a> from codec_mgr.o(.text) referenced 2 times from codec_mgr.o(.constdata)
 <LI><a href="#[1a9]">codec_mgr_session_enter_fading_out</a> from codec_mgr.o(.text) referenced from codec_mgr.o(.constdata)
 <LI><a href="#[1a7]">codec_mgr_session_nop</a> from codec_mgr.o(.text) referenced from codec_mgr.o(.constdata)
 <LI><a href="#[e3]">codec_msg_handler</a> from codec_driver.o(.text) referenced from codec_driver.o(.text)
 <LI><a href="#[117]">cpu_dlps_enter</a> from io_dlps.o(.text) referenced from io_dlps.o(.constdata)
 <LI><a href="#[118]">cpu_dlps_exit</a> from io_dlps.o(.text) referenced from io_dlps.o(.constdata)
 <LI><a href="#[10a]">dis_attr_read_cb</a> from dis.o(.text) referenced from dis.o(.constdata)
 <LI><a href="#[ad4]">dlps_io_enter_cb</a> from io_dlps.o(.text) referenced from io_dlps.o(.text)
 <LI><a href="#[ad6]">dlps_io_exit_cb</a> from io_dlps.o(.text) referenced from io_dlps.o(.text)
 <LI><a href="#[ad2]">dlps_io_restore_check</a> from io_dlps.o(.text) referenced from io_dlps.o(.text)
 <LI><a href="#[18f]">double_jacobian_default</a> from uecc.o(.text) referenced 2 times from uecc.o(.constdata)
 <LI><a href="#[c0]">dsp_anc_fw_load_code_driver</a> from bin_loader_driver.o(.text) referenced from dsp_loader.o(.text)
 <LI><a href="#[187]">dsp_audio_cfg_setting</a> from dsp_mgr.o(.text) referenced from dsp_mgr.o(.constdata)
 <LI><a href="#[bf]">dsp_fw_cb_check_finish</a> from dsp_loader.o(.text) referenced from dsp_loader.o(.text)
 <LI><a href="#[be]">dsp_fw_cb_finish</a> from dsp_loader.o(.text) referenced from dsp_loader.o(.text)
 <LI><a href="#[f4]">dsp_fw_dma_handler</a> from bin_loader_driver.o(.ram_text) referenced from bin_loader_driver.o(.text)
 <LI><a href="#[f5]">dsp_fw_dsp_aes_done_cb</a> from bin_loader_driver.o(.text) referenced 2 times from bin_loader_driver.o(.text)
 <LI><a href="#[f3]">dsp_fw_load_image</a> from bin_loader_driver.o(.text) referenced from bin_loader_driver.o(.text)
 <LI><a href="#[c5]">dsp_ipc_decoder_action</a> from dsp_ipc.o(.text) referenced from dsp_mgr.o(.text)
 <LI><a href="#[c7]">dsp_ipc_encoder_action</a> from dsp_ipc.o(.text) referenced from dsp_mgr.o(.text)
 <LI><a href="#[cc]">dsp_ipc_event_handler</a> from dsp_mgr.o(.text) referenced from dsp_mgr.o(.text)
 <LI><a href="#[bd]">dsp_ipc_hal_cback</a> from dsp_ipc.o(.text) referenced from dsp_ipc.o(.text)
 <LI><a href="#[d1]">dsp_ipc_set_action_control</a> from dsp_ipc.o(.text) referenced from dsp_mgr.o(.text)
 <LI><a href="#[d0]">dsp_ipc_voice_prompt_end</a> from dsp_ipc.o(.text) referenced from dsp_mgr.o(.text)
 <LI><a href="#[c9]">dsp_lps_check</a> from dsp_mgr.o(.ram_text) referenced from dsp_mgr.o(.text)
 <LI><a href="#[ce]">dsp_mgr_gate_stop_post_cback</a> from dsp_mgr.o(.text) referenced from dsp_mgr.o(.text)
 <LI><a href="#[cb]">dsp_mgr_hal_cback</a> from dsp_mgr.o(.text) referenced from dsp_mgr.o(.text)
 <LI><a href="#[ca]">dsp_mgr_hal_data_cb</a> from dsp_mgr.o(.text) referenced from dsp_mgr.o(.text)
 <LI><a href="#[c8]">dsp_mgr_io_fliter_rx</a> from dsp_mgr.o(.text) referenced from dsp_mgr.o(.text)
 <LI><a href="#[c6]">dsp_mgr_io_fliter_tx</a> from dsp_mgr.o(.text) referenced from dsp_mgr.o(.text)
 <LI><a href="#[d3]">dsp_mgr_sport_set</a> from dsp_mgr.o(.text) referenced from dsp_mgr.o(.text)
 <LI><a href="#[d2]">dsp_mgr_sport_set_post_cback</a> from dsp_mgr.o(.text) referenced from dsp_mgr.o(.text)
 <LI><a href="#[d5]">dsp_mgr_sport_start</a> from dsp_mgr.o(.text) referenced from dsp_mgr.o(.text)
 <LI><a href="#[d4]">dsp_mgr_sport_start_post_cback</a> from dsp_mgr.o(.text) referenced from dsp_mgr.o(.text)
 <LI><a href="#[cf]">dsp_mgr_sport_stop</a> from dsp_mgr.o(.text) referenced from dsp_mgr.o(.text)
 <LI><a href="#[c4]">dsp_mgr_wait_fade_out_finish_cback</a> from dsp_mgr.o(.text) referenced from dsp_mgr.o(.text)
 <LI><a href="#[c1]">dsp_mgr_wait_fw_ready_handler</a> from dsp_mgr.o(.text) referenced from dsp_mgr.o(.text)
 <LI><a href="#[c3]">dsp_mgr_wait_fw_stop_handler</a> from dsp_mgr.o(.text) referenced from dsp_mgr.o(.text)
 <LI><a href="#[c2]">dsp_mgr_wait_load_handler</a> from dsp_mgr.o(.text) referenced from dsp_mgr.o(.text)
 <LI><a href="#[fb]">dsp_msg_handler</a> from dsp_driver.o(.text) referenced from dsp_driver.o(.text)
 <LI><a href="#[18a]">dsp_notification_cfg_setting</a> from dsp_mgr.o(.text) referenced 2 times from dsp_mgr.o(.constdata)
 <LI><a href="#[fc]">dsp_pm_lps_enter</a> from dsp_driver.o(.text) referenced from dsp_driver.o(.text)
 <LI><a href="#[fd]">dsp_pm_lps_exit</a> from dsp_driver.o(.text) referenced from dsp_driver.o(.text)
 <LI><a href="#[fa]">dsp_pm_timer_cback</a> from dsp_driver.o(.isr.text) referenced from dsp_driver.o(.text)
 <LI><a href="#[189]">dsp_record_cfg_setting</a> from dsp_mgr.o(.text) referenced from dsp_mgr.o(.constdata)
 <LI><a href="#[f6]">dsp_shm_cb_cmd_event</a> from dsp_driver.o(.ram_text) referenced from dsp_driver.o(.text)
 <LI><a href="#[f9]">dsp_shm_cb_mailbox</a> from dsp_driver.o(.ram_text) referenced from dsp_driver.o(.text)
 <LI><a href="#[f7]">dsp_shm_cb_rx_req</a> from dsp_driver.o(.ram_text) referenced from dsp_driver.o(.text)
 <LI><a href="#[f8]">dsp_shm_cb_tx_ack</a> from dsp_driver.o(.ram_text) referenced from dsp_driver.o(.text)
 <LI><a href="#[188]">dsp_voice_cfg_setting</a> from dsp_mgr.o(.text) referenced from dsp_mgr.o(.constdata)
 <LI><a href="#[10e]">dult_attr_write_cb</a> from app_dult_svc.o(.text) referenced from app_dult_svc.o(.constdata)
 <LI><a href="#[10f]">dult_cccd_update_cb</a> from app_dult_svc.o(.text) referenced from app_dult_svc.o(.constdata)
 <LI><a href="#[45]">dut_audio_cback</a> from single_tone.o(.text) referenced from single_tone.o(.text)
 <LI><a href="#[46]">dut_timeout_cb</a> from single_tone.o(.text) referenced from single_tone.o(.text)
 <LI><a href="#[7d]">eq_effect_disable</a> from eq.o(.text) referenced from eq.o(.text)
 <LI><a href="#[7e]">eq_effect_enable</a> from eq.o(.text) referenced from eq.o(.text)
 <LI><a href="#[b19]">ftl_cache_disable</a> from ftl.o(.text) referenced from ftl.o(.text)
 <LI><a href="#[90]">ftl_gc_check_in_idle</a> from ftl.o(.ram_text) referenced from ftl.o(.text)
 <LI><a href="#[b22]">ftl_gc_in_flash_task</a> from ftl.o(.text) referenced from ftl.o(.text)
 <LI><a href="#[104]">ftl_init</a> from ftl.o(.text) referenced from system_rtl87x3.o(.constdata)
 <LI><a href="#[b26]">ftl_load_from_storage_imp</a> from ftl.o(.text) referenced from ftl.o(.text)
 <LI><a href="#[b25]">ftl_save_to_storage_imp</a> from ftl.o(.text) referenced from ftl.o(.text)
 <LI><a href="#[193]">gap_bond_check</a> from bt_bond_gap.o(.text) referenced from bt_bond_gap.o(.constdata)
 <LI><a href="#[198]">gap_bond_clear_cccd_flag</a> from bt_bond_gap.o(.text) referenced from bt_bond_gap.o(.constdata)
 <LI><a href="#[196]">gap_bond_get_addr</a> from bt_bond_gap.o(.text) referenced from bt_bond_gap.o(.constdata)
 <LI><a href="#[194]">gap_bond_get_key</a> from bt_bond_gap.o(.text) referenced from bt_bond_gap.o(.constdata)
 <LI><a href="#[195]">gap_bond_get_max_num</a> from bt_bond_gap.o(.text) referenced from bt_bond_gap.o(.constdata)
 <LI><a href="#[199]">gap_bond_le_resolve_rpa</a> from bt_bond_gap.o(.text) referenced from bt_bond_gap.o(.constdata)
 <LI><a href="#[197]">gap_bond_set_cccd_flag</a> from bt_bond_gap.o(.text) referenced from bt_bond_gap.o(.constdata)
 <LI><a href="#[d92]">gap_lib_handle_btif_msg</a> from gap_lib.o(.text) referenced from gap_lib.o(.text)
 <LI><a href="#[2cf]">gaps_gatt_client_cbs</a> from gaps_gatt_client.o(.text) referenced from gaps_gatt_client.o(.text)
 <LI><a href="#[e7]">gatt_client_cbs</a> from gatt_service_client.o(.text) referenced from gatt_service_client.o(.text)
 <LI><a href="#[14c]">gatt_client_discover_result_cb</a> from bt_gatt_client.o(.text) referenced from bt_gatt_client.o(.constdata)
 <LI><a href="#[151]">gatt_client_discover_result_ext_cb</a> from bt_gatt_client.o(.text) referenced from bt_gatt_client.o(.constdata)
 <LI><a href="#[14b]">gatt_client_discover_state_cb</a> from bt_gatt_client.o(.text) referenced from bt_gatt_client.o(.constdata)
 <LI><a href="#[150]">gatt_client_discover_state_ext_cb</a> from bt_gatt_client.o(.text) referenced from bt_gatt_client.o(.constdata)
 <LI><a href="#[14f]">gatt_client_notify_ind_cb</a> from bt_gatt_client.o(.text) referenced from bt_gatt_client.o(.constdata)
 <LI><a href="#[154]">gatt_client_notify_ind_ext_cb</a> from bt_gatt_client.o(.text) referenced from bt_gatt_client.o(.constdata)
 <LI><a href="#[14d]">gatt_client_read_result_cb</a> from bt_gatt_client.o(.text) referenced from bt_gatt_client.o(.constdata)
 <LI><a href="#[152]">gatt_client_read_result_ext_cb</a> from bt_gatt_client.o(.text) referenced from bt_gatt_client.o(.constdata)
 <LI><a href="#[14e]">gatt_client_write_result_cb</a> from bt_gatt_client.o(.text) referenced from bt_gatt_client.o(.constdata)
 <LI><a href="#[153]">gatt_client_write_result_ext_cb</a> from bt_gatt_client.o(.text) referenced from bt_gatt_client.o(.constdata)
 <LI><a href="#[bb8]">gatt_svc_ext_general_cb</a> from bt_gatt_svc.o(.text) referenced from bt_gatt_svc.o(.text)
 <LI><a href="#[bb7]">gatt_svc_general_cb</a> from bt_gatt_svc.o(.text) referenced from bt_gatt_svc.o(.text)
 <LI><a href="#[e6]">gattc_cccd_timeout</a> from bt_gattc_storage.o(.text) referenced from bt_gattc_storage.o(.text)
 <LI><a href="#[2c1]">gattc_tbl_storage_bond_cb</a> from gattc_tbl_storage.o(.text) referenced from gattc_tbl_storage.o(.text)
 <LI><a href="#[2c0]">gattc_tbl_storage_cb</a> from gattc_tbl_storage.o(.text) referenced from gattc_tbl_storage.o(.text)
 <LI><a href="#[145]">gdma_dlps_enter</a> from io_dlps.o(.text) referenced from io_dlps.o(.constdata)
 <LI><a href="#[146]">gdma_dlps_exit</a> from io_dlps.o(.text) referenced from io_dlps.o(.constdata)
 <LI><a href="#[147]">gdma_need_restore</a> from io_dlps.o(.text) referenced from io_dlps.o(.constdata)
 <LI><a href="#[179]">gfps_attr_write_cb</a> from gfps.o(.text) referenced from gfps.o(.constdata)
 <LI><a href="#[17a]">gfps_cccd_update_cb</a> from gfps.o(.text) referenced from gfps.o(.constdata)
 <LI><a href="#[4d]">gfps_finder_adv_callback</a> from app_gfps_finder_adv.o(.text) referenced from app_gfps_finder_adv.o(.text)
 <LI><a href="#[178]">gfps_read_cb</a> from gfps.o(.text) referenced from gfps.o(.constdata)
 <LI><a href="#[99]">gmcs_client_cback</a> from mcp_client.o(.text) referenced from mcp_client.o(.text)
 <LI><a href="#[123]">gpio_a_need_restore</a> from io_dlps.o(.text) referenced from io_dlps.o(.constdata)
 <LI><a href="#[124]">gpio_b_need_restore</a> from io_dlps.o(.text) referenced from io_dlps.o(.constdata)
 <LI><a href="#[122]">gpio_dlps_restore_input_mode</a> from io_dlps.o(.text) referenced 2 times from io_dlps.o(.constdata)
 <LI><a href="#[121]">gpio_dlps_restore_output_mode</a> from io_dlps.o(.text) referenced 2 times from io_dlps.o(.constdata)
 <LI><a href="#[120]">gpio_dlps_store_item</a> from io_dlps.o(.text) referenced 2 times from io_dlps.o(.constdata)
 <LI><a href="#[9e]">gtbs_client_callback</a> from ccp_client.o(.text) referenced from ccp_client.o(.text)
 <LI><a href="#[d8]">hal_timer_handler</a> from hw_tim_internal.o(.ram_text) referenced from hw_tim.o(.text)
 <LI><a href="#[aaa]">heap_and_timer_monitor_timer_handler</a> from os_ext.o(.text) referenced from os_ext.o(.text)
 <LI><a href="#[d7]">hw_timer_pm_check</a> from hw_tim.o(.text) referenced from hw_tim.o(.text)
 <LI><a href="#[135]">i2c0_need_restore</a> from io_dlps.o(.text) referenced from io_dlps.o(.constdata)
 <LI><a href="#[136]">i2c1_need_restore</a> from io_dlps.o(.text) referenced from io_dlps.o(.constdata)
 <LI><a href="#[137]">i2c2_need_restore</a> from io_dlps.o(.text) referenced from io_dlps.o(.constdata)
 <LI><a href="#[133]">i2c_dlps_enter</a> from io_dlps.o(.text) referenced 3 times from io_dlps.o(.constdata)
 <LI><a href="#[134]">i2c_dlps_exit</a> from io_dlps.o(.text) referenced 3 times from io_dlps.o(.constdata)
 <LI><a href="#[119]">io_dlps_always_restore</a> from io_dlps.o(.text) referenced 6 times from io_dlps.o(.constdata)
 <LI><a href="#[142]">ir_dlps_enter</a> from io_dlps.o(.text) referenced from io_dlps.o(.constdata)
 <LI><a href="#[143]">ir_dlps_exit</a> from io_dlps.o(.text) referenced from io_dlps.o(.constdata)
 <LI><a href="#[144]">ir_need_restore</a> from io_dlps.o(.text) referenced from io_dlps.o(.constdata)
 <LI><a href="#[d6]">isr_wrapper</a> from vector_table_ext.o(.ram_text) referenced from vector_table_ext.o(.text)
 <LI><a href="#[103]">isspace</a> from isspace.o(.text) referenced from scanf_char.o(.text)
 <LI><a href="#[b9]">jitter_buffer_timeout_cback</a> from jitter_buffer.o(.text) referenced from jitter_buffer.o(.text)
 <LI><a href="#[b]">key_gpio_intr_cb</a> from app_key_gpio.o(.isr.text) referenced from app_key_gpio.o(.text)
 <LI><a href="#[9]">key_gpio_mfb_level_change_cb</a> from app_key_gpio.o(.isr.text) referenced from app_key_gpio.o(.text)
 <LI><a href="#[a]">key_gpio_timeout_cb</a> from app_key_gpio.o(.text) referenced from app_key_gpio.o(.text)
 <LI><a href="#[125]">keyscan_dlps_enter</a> from io_dlps.o(.text) referenced from io_dlps.o(.constdata)
 <LI><a href="#[126]">keyscan_dlps_exit</a> from io_dlps.o(.text) referenced from io_dlps.o(.constdata)
 <LI><a href="#[127]">keyscan_need_restore</a> from io_dlps.o(.text) referenced from io_dlps.o(.constdata)
 <LI><a href="#[4]">main</a> from app_main.o(.text) referenced from startup_rtl87x3e.o(RESET)
 <LI><a href="#[9a]">mcs_client_cback</a> from mcp_client.o(.text) referenced from mcp_client.o(.text)
 <LI><a href="#[9b]">mcs_client_dm_cback</a> from mcp_client.o(.text) referenced from mcp_client.o(.text)
 <LI><a href="#[8f]">mfb_handler</a> from mfb_api.o(.isr.text) referenced from mfb_api.o(.text)
 <LI><a href="#[44]">mp_hci_test_dm_cback</a> from single_tone.o(.text) referenced 2 times from single_tone.o(.text)
 <LI><a href="#[47]">mp_hci_test_task</a> from single_tone.o(.text) referenced from single_tone.o(.text)
 <LI><a href="#[43]">mp_test_handle_hci_cb</a> from single_tone.o(.text) referenced from single_tone.o(.text)
 <LI><a href="#[90a]">mtc_legacy_bt_cback</a> from multitopology_ctrl.o(.text) referenced from multitopology_ctrl.o(.text)
 <LI><a href="#[6d]">mtc_timeout_cb</a> from multitopology_ctrl.o(.text) referenced from multitopology_ctrl.o(.text)
 <LI><a href="#[ec]">notification_buffer_stream_write</a> from notification_buffer.o(.ram_text) referenced from notification_buffer.o(.text)
 <LI><a href="#[a1]">notification_buffer_vp_cback</a> from notification.o(.text) referenced from notification.o(.text)
 <LI><a href="#[b5]">notification_dsp_mgr_session_cb</a> from audio_path.o(.text) referenced from audio_path.o(.text)
 <LI><a href="#[cd]">notification_wait_finish</a> from dsp_mgr.o(.text) referenced from dsp_mgr.o(.text)
 <LI><a href="#[a9]">notification_wait_running_handler</a> from audio_path.o(.text) referenced from audio_path.o(.text)
 <LI><a href="#[7f]">nrec_effect_disable</a> from nrec.o(.text) referenced from nrec.o(.text)
 <LI><a href="#[80]">nrec_effect_enable</a> from nrec.o(.text) referenced from nrec.o(.text)
 <LI><a href="#[169]">pacs_attr_read_cb</a> from pacs_mgr.o(.text) referenced from pacs_mgr.o(.constdata)
 <LI><a href="#[16a]">pacs_attr_write_cb</a> from pacs_mgr.o(.text) referenced from pacs_mgr.o(.constdata)
 <LI><a href="#[16b]">pacs_cccd_update_cb</a> from pacs_mgr.o(.text) referenced from pacs_mgr.o(.constdata)
 <LI><a href="#[97]">pacs_dm_cback</a> from pacs_mgr.o(.text) referenced from pacs_mgr.o(.text)
 <LI><a href="#[c5c]">pacs_write_sink_audio_location_post_proc</a> from pacs_mgr.o(.text) referenced from pacs_mgr.o(.text)
 <LI><a href="#[c5d]">pacs_write_source_audio_location_post_proc</a> from pacs_mgr.o(.text) referenced from pacs_mgr.o(.text)
 <LI><a href="#[11f]">pad_restore</a> from io_dlps.o(.text) referenced from io_dlps.o(.constdata)
 <LI><a href="#[11e]">pad_store</a> from io_dlps.o(.text) referenced from io_dlps.o(.constdata)
 <LI><a href="#[b8]">path_wait_codec_enable_handler</a> from audio_path.o(.text) referenced from audio_path.o(.text)
 <LI><a href="#[11a]">peri_on_enter</a> from io_dlps.o(.text) referenced from io_dlps.o(.constdata)
 <LI><a href="#[11b]">peri_on_exit</a> from io_dlps.o(.text) referenced from io_dlps.o(.constdata)
 <LI><a href="#[11d]">pinmux_restore</a> from io_dlps.o(.text) referenced from io_dlps.o(.constdata)
 <LI><a href="#[11c]">pinmux_store</a> from io_dlps.o(.text) referenced from io_dlps.o(.constdata)
 <LI><a href="#[a6]">playback_buffer_interval_eval_evt_cback</a> from media_buffer.o(.text) referenced from media_buffer.o(.text)
 <LI><a href="#[a4]">playback_buffer_jb_evt_cback</a> from media_buffer.o(.text) referenced from media_buffer.o(.text)
 <LI><a href="#[a5]">playback_buffer_lat_evt_cback</a> from media_buffer.o(.text) referenced from media_buffer.o(.text)
 <LI><a href="#[128]">qdec_dlps_enter</a> from io_dlps.o(.text) referenced from io_dlps.o(.constdata)
 <LI><a href="#[129]">qdec_dlps_exit</a> from io_dlps.o(.text) referenced from io_dlps.o(.constdata)
 <LI><a href="#[12a]">qdec_need_restore</a> from io_dlps.o(.text) referenced from io_dlps.o(.constdata)
 <LI><a href="#[b4]">record_dsp_mgr_session_cb</a> from audio_path.o(.text) referenced from audio_path.o(.text)
 <LI><a href="#[a8]">record_wait_running_handler</a> from audio_path.o(.text) referenced from audio_path.o(.text)
 <LI><a href="#[3c]">rtk_charger_charge_state_cb</a> from rtk_charger.o(.text) referenced from rtk_charger.o(.text)
 <LI><a href="#[3d]">rtk_charger_soc_cb</a> from rtk_charger.o(.text) referenced from rtk_charger.o(.text)
 <LI><a href="#[148]">sdio_dlps_enter</a> from io_dlps.o(.text) referenced from io_dlps.o(.constdata)
 <LI><a href="#[149]">sdio_dlps_exit</a> from io_dlps.o(.text) referenced from io_dlps.o(.constdata)
 <LI><a href="#[14a]">sdio_need_restore</a> from io_dlps.o(.text) referenced from io_dlps.o(.constdata)
 <LI><a href="#[e4]">shm_dsp_handler</a> from dsp_shm.o(.ram_text) referenced from dsp_shm.o(.text)
 <LI><a href="#[e5]">shm_state_get</a> from dsp_shm.o(.ram_text) referenced from dsp_shm.o(.text)
 <LI><a href="#[81]">sidetone_effect_disable</a> from sidetone.o(.text) referenced from sidetone.o(.text)
 <LI><a href="#[82]">sidetone_effect_enable</a> from sidetone.o(.text) referenced from sidetone.o(.text)
 <LI><a href="#[48]">single_tone_exit_timeout_cb</a> from single_tone.o(.text) referenced from single_tone.o(.text)
 <LI><a href="#[12d]">spi0_need_restore</a> from io_dlps.o(.text) referenced from io_dlps.o(.constdata)
 <LI><a href="#[12e]">spi1_need_restore</a> from io_dlps.o(.text) referenced from io_dlps.o(.constdata)
 <LI><a href="#[12f]">spi2_need_restore</a> from io_dlps.o(.text) referenced from io_dlps.o(.constdata)
 <LI><a href="#[130]">spi2w_dlps_enter</a> from io_dlps.o(.text) referenced from io_dlps.o(.constdata)
 <LI><a href="#[131]">spi2w_dlps_exit</a> from io_dlps.o(.text) referenced from io_dlps.o(.constdata)
 <LI><a href="#[132]">spi2w_need_restore</a> from io_dlps.o(.text) referenced from io_dlps.o(.constdata)
 <LI><a href="#[12b]">spi_dlps_enter</a> from io_dlps.o(.text) referenced 3 times from io_dlps.o(.constdata)
 <LI><a href="#[12c]">spi_dlps_exit</a> from io_dlps.o(.text) referenced 3 times from io_dlps.o(.constdata)
 <LI><a href="#[ba]">stable_dejitter_timer_cback</a> from audio_interval_eval.o(.text) referenced from audio_interval_eval.o(.text)
 <LI><a href="#[ea]">sys_hp_timer_pm_check</a> from sys_timer.o(.ram_text) referenced from sys_timer.o(.text)
 <LI><a href="#[e8]">sys_hw_timer_handler</a> from sys_timer.o(.isr.text) referenced from sys_timer.o(.text)
 <LI><a href="#[e9]">sys_msg_handler</a> from sys_timer.o(.text) referenced from sys_timer.o(.text)
 <LI><a href="#[eb]">sys_sw_timer_handler</a> from sys_timer.o(.isr.text) referenced from sys_timer.o(.text)
 <LI><a href="#[3]">system_init</a> from system_rtl87x3.o(.text) referenced from startup_rtl87x3e.o(RESET)
 <LI><a href="#[9f]">tbs_client_callback</a> from ccp_client.o(.text) referenced from ccp_client.o(.text)
 <LI><a href="#[a0]">tbs_client_dm_cback</a> from ccp_client.o(.text) referenced from ccp_client.o(.text)
 <LI><a href="#[138]">tim_dlps_enter</a> from io_dlps.o(.text) referenced from io_dlps.o(.constdata)
 <LI><a href="#[139]">tim_dlps_exit</a> from io_dlps.o(.text) referenced from io_dlps.o(.constdata)
 <LI><a href="#[13a]">tim_need_restore</a> from io_dlps.o(.text) referenced from io_dlps.o(.constdata)
 <LI><a href="#[177]">tmas_attr_read_cb</a> from tmas_mgr.o(.text) referenced from tmas_mgr.o(.constdata)
 <LI><a href="#[107]">transmit_cccd_update_cb</a> from transmit_service.o(.text) referenced from transmit_service.o(.constdata)
 <LI><a href="#[105]">transmit_srv_read_cb</a> from transmit_service.o(.text) referenced from transmit_service.o(.constdata)
 <LI><a href="#[106]">transmit_srv_write_cb</a> from transmit_service.o(.text) referenced from transmit_service.o(.constdata)
 <LI><a href="#[297]">transmit_write_post_callback</a> from transmit_service.o(.text) referenced from transmit_service.o(.text)
 <LI><a href="#[24b]">uEcc_rng_function</a> from uecc.o(.text) referenced from uecc.o(.data)
 <LI><a href="#[13d]">uart0_need_restore</a> from io_dlps.o(.text) referenced from io_dlps.o(.constdata)
 <LI><a href="#[13e]">uart2_need_restore</a> from io_dlps.o(.text) referenced from io_dlps.o(.constdata)
 <LI><a href="#[13b]">uart_dlps_enter</a> from io_dlps.o(.text) referenced 2 times from io_dlps.o(.constdata)
 <LI><a href="#[13c]">uart_dlps_exit</a> from io_dlps.o(.text) referenced 2 times from io_dlps.o(.constdata)
 <LI><a href="#[bb]">variance_check_timer_cback</a> from audio_interval_eval.o(.text) referenced from audio_interval_eval.o(.text)
 <LI><a href="#[174]">vcs_attr_read_cb</a> from vcs_mgr.o(.text) referenced from vcs_mgr.o(.constdata)
 <LI><a href="#[175]">vcs_attr_write_cb</a> from vcs_mgr.o(.text) referenced from vcs_mgr.o(.constdata)
 <LI><a href="#[176]">vcs_cccd_update_cb</a> from vcs_mgr.o(.text) referenced from vcs_mgr.o(.constdata)
 <LI><a href="#[98]">vcs_write_post_proc</a> from vcs_mgr.o(.text) referenced from vcs_mgr.o(.text)
 <LI><a href="#[70]">vendor_harman_cmd_timer_callback</a> from app_harman_vendor_cmd.o(.text) referenced from app_harman_vendor_cmd.o(.text)
 <LI><a href="#[191]">vli_mmod_fast_secp160r1</a> from uecc.o(.text) referenced from uecc.o(.constdata)
 <LI><a href="#[192]">vli_mmod_fast_secp256r1</a> from uecc.o(.text) referenced from uecc.o(.constdata)
 <LI><a href="#[b3]">voice_dsp_mgr_session_cb</a> from audio_path.o(.text) referenced from audio_path.o(.text)
 <LI><a href="#[b1]">voice_wait_running_handler</a> from audio_path.o(.text) referenced from audio_path.o(.text)
 <LI><a href="#[190]">x_side_default</a> from uecc.o(.text) referenced 2 times from uecc.o(.constdata)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[10fe]"></a>irq_lock_imp</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[10f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_nor_erase_suspend_check
<LI><a href="#[10f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_nor_erase_resume_check
</UL>

<P><STRONG><a name="[10ff]"></a>irq_unlock_imp</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[10f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_nor_erase_suspend_check
<LI><a href="#[10f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_nor_erase_resume_check
</UL>

<P><STRONG><a name="[10fb]"></a>is_overlapped</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[fc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_nor_lock_set_bp_tb_operation
</UL>

<P><STRONG><a name="[265]"></a>log_buffer</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_hall_upperstack_ini (via Veneer)
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_set_rom_mudule_size (via Veneer)
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_init (via Veneer)
<LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main (via Veneer)
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_hall_get_reset_status (via Veneer)
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pm_cpu_freq_set (via Veneer)
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pm_cpu_freq_init (via Veneer)
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mp_hci_test_init (via Veneer)
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_lib_init (via Veneer)
<LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_mgr_init (via Veneer)
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_mgr_init (via Veneer)
<LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_handle_msg (via Veneer)
<LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_spp_init (via Veneer)
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_init_timer (via Veneer)
<LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_set_cpu_clk (via Veneer)
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_cpu_clk_improve (via Veneer)
<LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ext_charger_init (via Veneer)
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_client_init (via Veneer)
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pinmux_Config (via Veneer)
<LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_task (via Veneer)
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_write (via Veneer)
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_spec_register (via Veneer)
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_read (via Veneer)
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_find_char_handle (via Veneer)
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gaps_gatt_client_cbs (via Veneer)
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gaps_client_write_appearance (via Veneer)
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gaps_client_write_device_name (via Veneer)
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_init_module (via Veneer)
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_save_to_module (via Veneer)
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_load_from_module (via Veneer)
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_le_resolve_random_address (via Veneer)
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_le_find_key_entry (via Veneer)
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_ext_ftl_init (via Veneer)
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_tbl_storage_bond_cb (via Veneer)
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_tbl_storage_set_gatt_data (via Veneer)
<LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_tbl_storage_get_gatt_data (via Veneer)
<LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_tbl_storage_set_cccd (via Veneer)
<LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_tbl_storage_get_cccd (via Veneer)
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_tbl_storage_add_dev (via Veneer)
<LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_tbl_storage_get_dev (via Veneer)
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_tbl_storage_get_header (via Veneer)
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_tbl_storage_remove (via Veneer)
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_tbl_storage_clear (via Veneer)
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_tbl_read_data (via Veneer)
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_tbl_write_data (via Veneer)
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_tbl_bitmap_free (via Veneer)
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_tbl_get_identity_addr (via Veneer)
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dis_add_service (via Veneer)
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dis_attr_read_cb (via Veneer)
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dis_set_parameter (via Veneer)
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bas_add_service (via Veneer)
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bas_cccd_update_cb (via Veneer)
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bas_attr_read_cb (via Veneer)
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bas_set_parameter (via Veneer)
<LI><a href="#[53f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_reg_le_link_disc_cb (via Veneer)
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_wait_ota_report (via Veneer)
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;transmit_srv_add (via Veneer)
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;transmit_cccd_update_cb (via Veneer)
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;transmit_srv_read_cb (via Veneer)
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;transmit_srv_write_cb (via Veneer)
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;transmit_write_post_callback (via Veneer)
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;transmit_srv_tx_data (via Veneer)
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;transmit_set_parameter (via Veneer)
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_gap_timeout_cb (via Veneer)
<LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_gap_cb (via Veneer)
<LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_gap_handle_new_conn_state_evt (via Veneer)
<LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_gap_handle_dev_state_change_evt (via Veneer)
<LI><a href="#[3b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_handle_bt_user_confirm (via Veneer)
<LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_report_event (via Veneer)
<LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_transfer_push_data_queue (via Veneer)
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_transfer_pop_data_queue (via Veneer)
<LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_adc_io_read (via Veneer)
<LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_charger_harman_low_bat_warning_vp (via Veneer)
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_charger_timeout_cb (via Veneer)
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_charger_handle_soc (via Veneer)
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_charger_smooth_bat_discharge (via Veneer)
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mp_hci_test_mmi_handle_action (via Veneer)
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_handle_action (via Veneer)
<LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_discharger_ntc_check_valid (via Veneer)
<LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_force_enter_pairing_mode (via Veneer)
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_auto_power_off_enable (via Veneer)
<LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_auto_power_off_disable (via Veneer)
<LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_tone_type_play (via Veneer)
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_key_check_vol_mmi (via Veneer)
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_key_execute_action (via Veneer)
<LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_key_bt_cback (via Veneer)
<LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_key_check_press (via Veneer)
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_key_timeout_cb (via Veneer)
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_key_hybrid_click (via Veneer)
<LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_key_handle_key_tone_play (via Veneer)
<LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_key_multi_click_match (via Veneer)
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_gpio_intr_cb (via Veneer)
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_gpio_mfb_intr_handler (via Veneer)
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_gpio_key0_debounce_handler (via Veneer)
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_reg_cb (via Veneer)
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_stop_timer (via Veneer)
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_start_timer (via Veneer)
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dlps_enable
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dlps_disable
<LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_led_change_mode (via Veneer)
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_led_load_table (via Veneer)
<LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_led_timeout_cb (via Veneer)
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_led_reset_mode (via Veneer)
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_led_set_mode (via Veneer)
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_usb_connector_adc_update (via Veneer)
<LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_gap_handle_gap_msg (via Veneer)
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_io_msg_send
<LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sass_policy_reset (via Veneer)
<LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_vp_data_header_get (via Veneer)
<LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_cfg_reset (via Veneer)
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_cfg_store (via Veneer)
<LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_cfg_load (via Veneer)
<LI><a href="#[4d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_reboot_handle (via Veneer)
<LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_is_test_equipment (via Veneer)
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_bt_cback (via Veneer)
<LI><a href="#[4c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_bt_and_ble_ready_check (via Veneer)
<LI><a href="#[4c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_power_on_check (via Veneer)
<LI><a href="#[4c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_boot_up_directly (via Veneer)
<LI><a href="#[4c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_auto_power_on_before_factory_reset (via Veneer)
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_dm_cback (via Veneer)
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_timerout_cb (via Veneer)
<LI><a href="#[4a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_req_bt_remote_name (via Veneer)
<LI><a href="#[49b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sniff_mode_b2s_enable_all (via Veneer)
<LI><a href="#[499]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sniff_mode_b2s_disable_all (via Veneer)
<LI><a href="#[49c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_a2dp_set_active_idx (via Veneer)
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_a2dp_bt_cback (via Veneer)
<LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_volume_out_set (via Veneer)
<LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_iphone_abs_vol_sync_abs_vol (via Veneer)
<LI><a href="#[48b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_iphone_abs_vol_lv_handle (via Veneer)
<LI><a href="#[486]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_lr_balance_set (via Veneer)
<LI><a href="#[490]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_avrcp_set_vol_is_changed (via Veneer)
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_avrcp_bt_cback (via Veneer)
<LI><a href="#[47a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sidetone_release (via Veneer)
<LI><a href="#[479]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sidetone_disable (via Veneer)
<LI><a href="#[478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;harman_sidetone_set_dsp (via Veneer)
<LI><a href="#[454]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_sco_link_switch (via Veneer)
<LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_hfp_batt_level_report (via Veneer)
<LI><a href="#[45e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_volume_in_unmute (via Veneer)
<LI><a href="#[484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_volume_in_mute (via Veneer)
<LI><a href="#[446]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_volume_out_unmute (via Veneer)
<LI><a href="#[453]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_start (via Veneer)
<LI><a href="#[457]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multilink_sco_preemptive (via Veneer)
<LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_resume_a2dp_link_stream (via Veneer)
<LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_pause_inactive_a2dp_link_stream (via Veneer)
<LI><a href="#[470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_handle_sniffing_link_disconnect_event (via Veneer)
<LI><a href="#[45a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_connect_idle_to_power_off (via Veneer)
<LI><a href="#[452]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_aling_active_hfp_idx_set (via Veneer)
<LI><a href="#[481]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_src_conn_ind_check (via Veneer)
<LI><a href="#[450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bond_get_pair_idx_mapping (via Veneer)
<LI><a href="#[44d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_vol_set (via Veneer)
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_track_spk_unmute (via Veneer)
<LI><a href="#[45f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_tone_type_cancel (via Veneer)
<LI><a href="#[46c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_set_bud_stream_state (via Veneer)
<LI><a href="#[480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_adjust_sco_window (via Veneer)
<LI><a href="#[471]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_timeout_cb (via Veneer)
<LI><a href="#[466]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_set_vol_is_changed (via Veneer)
<LI><a href="#[455]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_update_call_status (via Veneer)
<LI><a href="#[44f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_set_call_status (via Veneer)
<LI><a href="#[44b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_always_playing_outband_tone (via Veneer)
<LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_get_call_in_tone_type (via Veneer)
<LI><a href="#[445]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_inband_tone_mute_ctrl (via Veneer)
<LI><a href="#[47e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_set_mic_mute (via Veneer)
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_audio_cback (via Veneer)
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_bt_cback (via Veneer)
<LI><a href="#[437]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_set_scan_response_data (via Veneer)
<LI><a href="#[42f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_set_random (via Veneer)
<LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_set_adv_data (via Veneer)
<LI><a href="#[43e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_register_callback (via Veneer)
<LI><a href="#[435]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_enable (via Veneer)
<LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_disable (via Veneer)
<LI><a href="#[434]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_common_adv_start (via Veneer)
<LI><a href="#[433]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_common_adv_sec_stop_adv_and_link (via Veneer)
<LI><a href="#[42d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_adv_data_update (via Veneer)
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_common_adv_rand_addr_cb (via Veneer)
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_common_adv_callback (via Veneer)
<LI><a href="#[42c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_svc_init (via Veneer)
<LI><a href="#[427]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_svc_handle_profile_data_cmpl (via Veneer)
<LI><a href="#[428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_parser_process (via Veneer)
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_service_bas_srv_cb (via Veneer)
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_service_transmit_srv_cb (via Veneer)
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_service_general_srv_cb (via Veneer)
<LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_remote_device_name_crc_set (via Veneer)
<LI><a href="#[426]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_le_common_adv_update (via Veneer)
<LI><a href="#[422]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gaps_gatt_client_callback (via Veneer)
<LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;harman_le_common_disc (via Veneer)
<LI><a href="#[40a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_adv_update_rpa (via Veneer)
<LI><a href="#[408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_le_set_local_irk (via Veneer)
<LI><a href="#[403]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_le_clear_all_keys (via Veneer)
<LI><a href="#[40c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_print_info (via Veneer)
<LI><a href="#[40d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_adv_data_enable (via Veneer)
<LI><a href="#[411]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_adv_data_disable (via Veneer)
<LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_update_rpa (via Veneer)
<LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_le_device_adv_start (via Veneer)
<LI><a href="#[41f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_handle_b2s_connected (via Veneer)
<LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_device_handle_radio_mode (via Veneer)
<LI><a href="#[40e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_device_handle_power_on (via Veneer)
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_device_handle_power_off (via Veneer)
<LI><a href="#[41d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_rand_addr_handle_role_decieded (via Veneer)
<LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_common_adv_stop (via Veneer)
<LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_common_adv_handle_engage_role_decided (via Veneer)
<LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_device_handle_b2s_bt_disconnected (via Veneer)
<LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_device_handle_engage_role_decided (via Veneer)
<LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_device_handle_enter_pair_mode (via Veneer)
<LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_device_handle_radio_mode (via Veneer)
<LI><a href="#[410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_device_handle_power_off (via Veneer)
<LI><a href="#[40b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_device_handle_power_on (via Veneer)
<LI><a href="#[402]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_device_handle_factory_reset (via Veneer)
<LI><a href="#[41a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_device_rpa_handle_engage_role_decided (via Veneer)
<LI><a href="#[407]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_device_irk_handle_power_on (via Veneer)
<LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_start_discovery_all (via Veneer)
<LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_mgr_handle_gap_msg (via Veneer)
<LI><a href="#[3d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_set_prefer_conn_param (via Veneer)
<LI><a href="#[3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_handle_gap_cb (via Veneer)
<LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sass_handle_le_dm (via Veneer)
<LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_link_sm (via Veneer)
<LI><a href="#[3c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_adv_check_restart_adv (via Veneer)
<LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_ota_exit (via Veneer)
<LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_eq_reset_unsaved (via Veneer)
<LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_handle_ble_user_confirm (via Veneer)
<LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_handle_additional_ble_user_confirm (via Veneer)
<LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_device_handle_b2s_ble_bonded (via Veneer)
<LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_ble_conn_info_handle (via Veneer)
<LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_update_cpu_freq (via Veneer)
<LI><a href="#[3de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_point_link_tone_set (via Veneer)
<LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_point_link_permission_check (via Veneer)
<LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_point_link_num_changed (via Veneer)
<LI><a href="#[3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_rtk_adv_start (via Veneer)
<LI><a href="#[3fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_rand_addr_init (via Veneer)
<LI><a href="#[3fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_key_derive_init (via Veneer)
<LI><a href="#[3f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_common_adv_init (via Veneer)
<LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_gap_vendor_callback (via Veneer)
<LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_gap_handle_justwork_bond_cfm (via Veneer)
<LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_gap_handle_authen_state_evt (via Veneer)
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_gap_disconnect (via Veneer)
<LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_gap_client_discov_cb (via Veneer)
<LI><a href="#[607]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_disconnect_all_event_handle (via Veneer)
<LI><a href="#[5ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_engage_sched (via Veneer)
<LI><a href="#[604]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_conn_sniff_event_handle (via Veneer)
<LI><a href="#[609]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_connected (via Veneer)
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_cback (via Veneer)
<LI><a href="#[60a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_state_afe_linkback_event_handle (via Veneer)
<LI><a href="#[5f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_bt_event_pre_handle (via Veneer)
<LI><a href="#[5ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_shutdown_step_handle (via Veneer)
<LI><a href="#[5e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_startup_event_handle (via Veneer)
<LI><a href="#[5e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_roleswitch_handle (via Veneer)
<LI><a href="#[5e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_linkback_sched (via Veneer)
<LI><a href="#[5e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_judge_dedicated_enter_pairing_mode (via Veneer)
<LI><a href="#[5dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_prepare_for_dedicated_enter_pairing_mode (via Veneer)
<LI><a href="#[5d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_enter_state (via Veneer)
<LI><a href="#[5d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_linkback_run (via Veneer)
<LI><a href="#[5ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_stable_sched (via Veneer)
<LI><a href="#[5ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_enable_b2s_disconnect_enter_pairing (via Veneer)
<LI><a href="#[5c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_event_ind (via Veneer)
<LI><a href="#[5aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_if_fm_ml_handle (via Veneer)
<LI><a href="#[5a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_a2dp_active_link_set (via Veneer)
<LI><a href="#[5b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_stop (via Veneer)
<LI><a href="#[5ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sass_preempt_policy (via Veneer)
<LI><a href="#[5a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_preemptive_judge (via Veneer)
<LI><a href="#[5ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_get_inactive_index (via Veneer)
<LI><a href="#[59d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_msg_notify_multipoint_switch (via Veneer)
<LI><a href="#[5a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_qos_param_update (via Veneer)
<LI><a href="#[59a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_a2dp_play_status_update (via Veneer)
<LI><a href="#[5be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_mtc_if_handle (via Veneer)
<LI><a href="#[5b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_reconnect_inactive_link (via Veneer)
<LI><a href="#[5af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_roleswap_disconnect_inactive_link (via Veneer)
<LI><a href="#[5ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_disconnect_inactive_link (via Veneer)
<LI><a href="#[5a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_judge_active_a2dp_idx_and_qos (via Veneer)
<LI><a href="#[59b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_set_active_idx (via Veneer)
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_timeout_cb (via Veneer)
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_bt_cback (via Veneer)
<LI><a href="#[56f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_spp_connect_req (via Veneer)
<LI><a href="#[592]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkback_load_bond_list (via Veneer)
<LI><a href="#[58f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkback_active_node_remain_profs_sub (via Veneer)
<LI><a href="#[58d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkback_active_node_remain_profs_add (via Veneer)
<LI><a href="#[58c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkback_active_node_src_conn_fail_adjust_remain_profs (via Veneer)
<LI><a href="#[58b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkback_active_node_step_fail_adjust_remain_profs (via Veneer)
<LI><a href="#[58a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkback_active_node_step_suc_adjust_remain_profs (via Veneer)
<LI><a href="#[586]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkback_todo_queue_delete_group_member (via Veneer)
<LI><a href="#[582]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkback_todo_queue_take_first_node (via Veneer)
<LI><a href="#[581]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkback_todo_queue_insert_force_node (via Veneer)
<LI><a href="#[57f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkback_todo_queue_insert_normal_node (via Veneer)
<LI><a href="#[57d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkback_todo_queue_all_node (via Veneer)
<LI><a href="#[57c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkback_todo_queue_init (via Veneer)
<LI><a href="#[572]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkback_profile_disconnect_start (via Veneer)
<LI><a href="#[56b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkback_profile_connect_start (via Veneer)
<LI><a href="#[568]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkback_profile_search_start (via Veneer)
<LI><a href="#[567]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkback_print_active_node (via Veneer)
<LI><a href="#[54d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;power_mode_get
<LI><a href="#[792]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_finder_rtc_wakeup_save_info (via Veneer)
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dlps_check_callback
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dlps_timeout_cb (via Veneer)
<LI><a href="#[53e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eq_release (via Veneer)
<LI><a href="#[53d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_release (via Veneer)
<LI><a href="#[547]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_get_encryption_device_num (via Veneer)
<LI><a href="#[542]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_is_b2s_link_num_full (via Veneer)
<LI><a href="#[520]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_mgr_power_on (via Veneer)
<LI><a href="#[525]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_mgr_power_off (via Veneer)
<LI><a href="#[539]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_topology_dm (via Veneer)
<LI><a href="#[4fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;harman_push_max_tone_when_not_playing (via Veneer)
<LI><a href="#[52f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_disable_all (via Veneer)
<LI><a href="#[4f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_volume_out_mute (via Veneer)
<LI><a href="#[521]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sniff_mode_disable_all (via Veneer)
<LI><a href="#[50b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_mgr_mmi_handle (via Veneer)
<LI><a href="#[53a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_mgr_find_call_device_by_priority (via Veneer)
<LI><a href="#[4fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_iphone_abs_vol_wrap_audio_track_volume_out_set (via Veneer)
<LI><a href="#[4f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_aling_active_hfp_idx_get (via Veneer)
<LI><a href="#[504]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_msg_handle_ring_event (via Veneer)
<LI><a href="#[505]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_finder_send_ring_rsp (via Veneer)
<LI><a href="#[533]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_finder_adv_handle_mmi_action (via Veneer)
<LI><a href="#[52c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_eq_index_set (via Veneer)
<LI><a href="#[534]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dult_id_read_state_enable (via Veneer)
<LI><a href="#[536]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_tone_type_stop (via Veneer)
<LI><a href="#[52a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_enable_play_mic_unmute_tone (via Veneer)
<LI><a href="#[529]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_enable_play_mic_mute_tone (via Veneer)
<LI><a href="#[4fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_volume_down (via Veneer)
<LI><a href="#[4f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_volume_up (via Veneer)
<LI><a href="#[4f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_harman_get_active_hf_idx (via Veneer)
<LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_spk_mute_set (via Veneer)
<LI><a href="#[4bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;power_mode_set (via Veneer)
<LI><a href="#[4e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sass_policy_profile_conn_handle (via Veneer)
<LI><a href="#[4b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_total_power_on_time_update (via Veneer)
<LI><a href="#[4eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_total_playback_time_update (via Veneer)
<LI><a href="#[4ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_recon_a2dp (via Veneer)
<LI><a href="#[4bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_license_product_info_dump (via Veneer)
<LI><a href="#[4e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_dump_link_information (via Veneer)
<LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_finder_update_clock_value (via Veneer)
<LI><a href="#[4c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_finder_init (via Veneer)
<LI><a href="#[4e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_device_handle_b2s_link_disconnected (via Veneer)
<LI><a href="#[4c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_adv_init (via Veneer)
<LI><a href="#[4e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_cmd_update_eq_ctrl (via Veneer)
<LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bond_clear_sec_diff_link_record (via Veneer)
<LI><a href="#[4e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_set_avrcp_status (via Veneer)
<LI><a href="#[4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_state_change (via Veneer)
<LI><a href="#[4ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_factory_reset (via Veneer)
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_link_policy_ind (via Veneer)
<LI><a href="#[6fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_usb_connector_adp_out_handle (via Veneer)
<LI><a href="#[6ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_adc_update_cur_ntc_value (via Veneer)
<LI><a href="#[6f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ext_charger_check_status (via Veneer)
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ext_charger_charging_finish_handler (via Veneer)
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ext_charger_charging_handler (via Veneer)
<LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ext_charger_no_charge_handler (via Veneer)
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ext_charger_update_charger_state (via Veneer)
<LI><a href="#[6eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ext_charger_disable (via Veneer)
<LI><a href="#[6ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ext_charger_enable (via Veneer)
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ext_charger_dlps_check_cb (via Veneer)
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ext_charger_plug_status_cb (via Veneer)
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ext_charger_timeout_cb (via Veneer)
<LI><a href="#[6f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ext_charger_state_machine (via Veneer)
<LI><a href="#[6e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ext_charger_check_ntc_threshold (via Veneer)
<LI><a href="#[6e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ext_charger_current_speed_set (via Veneer)
<LI><a href="#[6dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ext_charger_cfg_load (via Veneer)
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ext_charger_status_det_gpio_intr_handler (via Veneer)
<LI><a href="#[6db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrec_release (via Veneer)
<LI><a href="#[6d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrec_enable (via Veneer)
<LI><a href="#[6da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrec_disable (via Veneer)
<LI><a href="#[6d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrec_create (via Veneer)
<LI><a href="#[6d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sidetone_enable (via Veneer)
<LI><a href="#[6d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sidetone_create (via Veneer)
<LI><a href="#[6d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_effect_detach (via Veneer)
<LI><a href="#[6d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_scan_resume (via Veneer)
<LI><a href="#[6d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_scan_pause (via Veneer)
<LI><a href="#[73f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_change_adv_interval (via Veneer)
<LI><a href="#[6ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_route_gain_register (via Veneer)
<LI><a href="#[6c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_route_harman_audio_dac_gain_get (via Veneer)
<LI><a href="#[6c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_swift_pair_adv_init (via Veneer)
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_swift_pair_timeout_cb (via Veneer)
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_swift_pair_adv_callback (via Veneer)
<LI><a href="#[6c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eq_utils_param_get (via Veneer)
<LI><a href="#[6c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eq_utils_stage_num_get (via Veneer)
<LI><a href="#[6c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eq_utils_get_mic_capacity (via Veneer)
<LI><a href="#[6c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eq_utils_get_spk_capacity (via Veneer)
<LI><a href="#[6c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eq_utils_map_init (via Veneer)
<LI><a href="#[6c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eq_utils_dsp_param_get (via Veneer)
<LI><a href="#[7a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_adv_state_change (via Veneer)
<LI><a href="#[785]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_uecc_compute_public_key (via Veneer)
<LI><a href="#[79b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_set_owner_key_valid (via Veneer)
<LI><a href="#[79a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_get_owner_key_valid (via Veneer)
<LI><a href="#[79e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_rsp_ring_state (via Veneer)
<LI><a href="#[794]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_rsp_ring_request (via Veneer)
<LI><a href="#[7a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_init (via Veneer)
<LI><a href="#[784]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_encrypted_beacon_data (via Veneer)
<LI><a href="#[797]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_adv_update_hash (via Veneer)
<LI><a href="#[78d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_adv_update_adv_ei_hash (via Veneer)
<LI><a href="#[791]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_adv_stop (via Veneer)
<LI><a href="#[78f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_adv_start (via Veneer)
<LI><a href="#[7a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_adv_init (via Veneer)
<LI><a href="#[790]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_adv_get_adv_state (via Veneer)
<LI><a href="#[79f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dult_handle_none_owner_state (via Veneer)
<LI><a href="#[7a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_finder_ftl_init (via Veneer)
<LI><a href="#[799]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_finder_cb (via Veneer)
<LI><a href="#[798]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_finder_update_battery (via Veneer)
<LI><a href="#[796]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_finder_update_hash (via Veneer)
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_finder_beacon_le_disconnect_cb (via Veneer)
<LI><a href="#[793]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_finder_beacon_set_conn_id (via Veneer)
<LI><a href="#[78c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_finder_timeout_cb (via Veneer)
<LI><a href="#[78b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_finder_upt_enable_stop_rpa_timer (via Veneer)
<LI><a href="#[78a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_finder_upt_enable_start_update_rpa_timer (via Veneer)
<LI><a href="#[789]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_finder_stop_update_random_window_timer (via Veneer)
<LI><a href="#[788]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_finder_start_update_random_window_timer (via Veneer)
<LI><a href="#[787]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_finder_stop_update_adv_ei_timer (via Veneer)
<LI><a href="#[786]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_finder_start_update_adv_ei_timer (via Veneer)
<LI><a href="#[783]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_finder_generate_adv_ei_and_hash (via Veneer)
<LI><a href="#[781]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_finder_generate_hash_flag (via Veneer)
<LI><a href="#[77c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_set_battery_info (via Veneer)
<LI><a href="#[77f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_battery_le_l2cap_update (via Veneer)
<LI><a href="#[77d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_battery_rfc_update (via Veneer)
<LI><a href="#[77b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_battery_set_info (via Veneer)
<LI><a href="#[779]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ecc_sub_proc (via Veneer)
<LI><a href="#[773]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_msg_report_session_nonce (via Veneer)
<LI><a href="#[778]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_msg_loop_check_data_complete (via Veneer)
<LI><a href="#[774]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_finder_send_eddystone_capability (via Veneer)
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_rfc_cback (via Veneer)
<LI><a href="#[76c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_send_personalized_name (via Veneer)
<LI><a href="#[76b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_personalized_name_read (via Veneer)
<LI><a href="#[765]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_set_identity_address (via Veneer)
<LI><a href="#[764]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_adv_update_adv_interval (via Veneer)
<LI><a href="#[761]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_finder_handle_power_off (via Veneer)
<LI><a href="#[769]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_finder_handle_factory_reset (via Veneer)
<LI><a href="#[75d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_gfps_generate_mac (via Veneer)
<LI><a href="#[75f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_account_key_save_ownerkey_valid (via Veneer)
<LI><a href="#[75e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_account_key_find_inuse_account_key (via Veneer)
<LI><a href="#[75b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_account_key_verify_mac (via Veneer)
<LI><a href="#[75a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_account_key_clear (via Veneer)
<LI><a href="#[755]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_get_active_idx (via Veneer)
<LI><a href="#[756]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_set_most_recently_inuse_account_key_index (via Veneer)
<LI><a href="#[757]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_set_inuse_account_key_index (via Veneer)
<LI><a href="#[734]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_set_finder_enable (via Veneer)
<LI><a href="#[727]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_send_passkey (via Veneer)
<LI><a href="#[cc4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_send_additional_passkey_response (via Veneer)
<LI><a href="#[750]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_sass_set_conn_status (via Veneer)
<LI><a href="#[74f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_sass_get_conn_status (via Veneer)
<LI><a href="#[741]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_reset_aeskey_and_pairing_status (via Veneer)
<LI><a href="#[715]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_gen_adv_data (via Veneer)
<LI><a href="#[739]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_ecc_manager_malloc (via Veneer)
<LI><a href="#[738]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_add_service (via Veneer)
<LI><a href="#[717]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_set_multi_param (via Veneer)
<LI><a href="#[716]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_change_own_address_type (via Veneer)
<LI><a href="#[74b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sass_policy_get_connection_state (via Veneer)
<LI><a href="#[74d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sass_policy_get_conn_bit_map (via Veneer)
<LI><a href="#[74c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sass_get_available_connection_num (via Veneer)
<LI><a href="#[720]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_adv_start (via Veneer)
<LI><a href="#[713]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_timer_stop_update_rpa (via Veneer)
<LI><a href="#[714]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_timer_start_update_rpa (via Veneer)
<LI><a href="#[73c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_psm_init (via Veneer)
<LI><a href="#[710]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_personalized_name_store (via Veneer)
<LI><a href="#[72f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_personalized_name_send (via Veneer)
<LI><a href="#[711]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_personalized_name_remote_sync (via Veneer)
<LI><a href="#[732]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_personalized_name_init (via Veneer)
<LI><a href="#[719]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_msg_update_ble_addr (via Veneer)
<LI><a href="#[758]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_msg_notify_connection_status (via Veneer)
<LI><a href="#[71b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_link_find_gfps_link (via Veneer)
<LI><a href="#[71c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_link_disconnect_all_gfps_link (via Veneer)
<LI><a href="#[742]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_link_delete_link_from_priority_queue (via Veneer)
<LI><a href="#[72c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_link_add_link_into_priority_queue (via Veneer)
<LI><a href="#[740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_finder_reset_conn (via Veneer)
<LI><a href="#[760]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_finder_enter_beacon_state (via Veneer)
<LI><a href="#[743]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_device_handle_ble_link_disconnected (via Veneer)
<LI><a href="#[724]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_device_check_state (via Veneer)
<LI><a href="#[762]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_battery_show_ui (via Veneer)
<LI><a href="#[71d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_battery_info_report (via Veneer)
<LI><a href="#[722]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_account_key_store (via Veneer)
<LI><a href="#[723]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_account_key_remote_add (via Veneer)
<LI><a href="#[730]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_account_key_init (via Veneer)
<LI><a href="#[752]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_check_inuse_account_key (via Veneer)
<LI><a href="#[74e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_adv_check_sass_conn_status (via Veneer)
<LI><a href="#[749]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_gen_conn_status (via Veneer)
<LI><a href="#[747]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_enter_nondiscoverable_mode (via Veneer)
<LI><a href="#[746]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_set_ble_conn_param (via Veneer)
<LI><a href="#[745]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_sec_handle_additional_io_cap (via Veneer)
<LI><a href="#[73e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_adv_update_adv_interval (via Veneer)
<LI><a href="#[72d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_cb_handle_kbp_write_req (via Veneer)
<LI><a href="#[72a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_cb_handle_action_req (via Veneer)
<LI><a href="#[729]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_cb_handle_passkey (via Veneer)
<LI><a href="#[721]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_cb_handle_accountkey (via Veneer)
<LI><a href="#[71a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_next_action (via Veneer)
<LI><a href="#[712]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_adv_start (via Veneer)
<LI><a href="#[70f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_cb_handle_additional_data (via Veneer)
<LI><a href="#[70e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_cb_handle_additional_passkey (via Veneer)
<LI><a href="#[70d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_update_announcement (via Veneer)
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_adv_callback (via Veneer)
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_le_disconnect_cb (via Veneer)
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_cb (via Veneer)
<LI><a href="#[708]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mp_hci_handle_msg (via Veneer)
<LI><a href="#[70c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;single_tone_test_init (via Veneer)
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mp_hci_test_dm_cback (via Veneer)
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mp_hci_test_task (via Veneer)
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mp_test_handle_hci_cb (via Veneer)
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dut_audio_cback (via Veneer)
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dut_test_handle_hci_evt_data_ind (via Veneer)
<LI><a href="#[6ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_count_num (via Veneer)
<LI><a href="#[667]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eq_utils_init (via Veneer)
<LI><a href="#[66b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eq_set (via Veneer)
<LI><a href="#[671]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eq_create (via Veneer)
<LI><a href="#[673]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_get_eq_data (via Veneer)
<LI><a href="#[672]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_eq_info_load_from_ftl (via Veneer)
<LI><a href="#[668]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_haraman_eq_init (via Veneer)
<LI><a href="#[66f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_eq_sample_rate_get (via Veneer)
<LI><a href="#[669]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_eq_media_eq_set (via Veneer)
<LI><a href="#[675]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_eq_param_set (via Veneer)
<LI><a href="#[664]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_eq_dsp_param_get (via Veneer)
<LI><a href="#[61c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;voice_prompt_play (via Veneer)
<LI><a href="#[61a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ringtone_play (via Veneer)
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eq_enable (via Veneer)
<LI><a href="#[62b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_sco_data_send (via Veneer)
<LI><a href="#[7b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_volume_out_unmute (via Veneer)
<LI><a href="#[65a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_volume_out_set (via Veneer)
<LI><a href="#[7af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_volume_out_mute (via Veneer)
<LI><a href="#[659]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_volume_in_set (via Veneer)
<LI><a href="#[63c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_write (via Veneer)
<LI><a href="#[62a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_read (via Veneer)
<LI><a href="#[630]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_latency_set (via Veneer)
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_effect_attach (via Veneer)
<LI><a href="#[63e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_data_in_is_silent (via Veneer)
<LI><a href="#[62f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_create (via Veneer)
<LI><a href="#[650]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_probe_dsp_send (via Veneer)
<LI><a href="#[663]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_set_sidetone_instance (via Veneer)
<LI><a href="#[63f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_silent_check (via Veneer)
<LI><a href="#[624]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_set_stream_track_started (via Veneer)
<LI><a href="#[625]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_set_eq_boost_gain (via Veneer)
<LI><a href="#[65f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_eq_mode_get (via Veneer)
<LI><a href="#[660]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_eq_enable_info_get (via Veneer)
<LI><a href="#[661]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_eq_enable_effect (via Veneer)
<LI><a href="#[634]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_eq_create (via Veneer)
<LI><a href="#[662]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_eq_cmd_operate (via Veneer)
<LI><a href="#[632]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_eq_change_audio_eq_mode (via Veneer)
<LI><a href="#[652]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_mp_dual_mic_switch_action (via Veneer)
<LI><a href="#[651]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_mp_dual_mic_setting_check (via Veneer)
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_mtc_if_handle (via Veneer)
<LI><a href="#[641]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_probe_cback (via Veneer)
<LI><a href="#[63a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_speaker_channel_set (via Veneer)
<LI><a href="#[631]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_set_voice_gain_when_sco_conn_cmpl (via Veneer)
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_policy_timeout_cb (via Veneer)
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_bt_cback (via Veneer)
<LI><a href="#[637]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_a2dp_stream_start_handle (via Veneer)
<LI><a href="#[62e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_sco_conn_cmpl_handle (via Veneer)
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_policy_cback (via Veneer)
<LI><a href="#[5c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pm_cpu_freq_req (via Veneer)
<LI><a href="#[5c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pm_cpu_freq_clear (via Veneer)
<LI><a href="#[603]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_if_fm_ap_handle (via Veneer)
<LI><a href="#[5e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_link_role_switch (via Veneer)
<LI><a href="#[600]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_flag_add (via Veneer)
<LI><a href="#[5db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_swift_pair_adv_start (via Veneer)
<LI><a href="#[5e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sniff_mode_b2s_enable (via Veneer)
<LI><a href="#[60f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sniff_mode_b2s_disable (via Veneer)
<LI><a href="#[5fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sniff_mode_b2s_check_left_flag_when_disconnect (via Veneer)
<LI><a href="#[5f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_mgr_disc_inactive_le_link (via Veneer)
<LI><a href="#[5dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_adv_update (via Veneer)
<LI><a href="#[5d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_adv_linkbacking (via Veneer)
<LI><a href="#[5cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_power_on_link_back_flag_get (via Veneer)
<LI><a href="#[5f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bond_pop_sec_diff_link_record (via Veneer)
<LI><a href="#[608]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_state_machine (via Veneer)
<LI><a href="#[5f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_update_pair_idx_mapping (via Veneer)
<LI><a href="#[6c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dsp_cfg_extensible_param_load (via Veneer)
<LI><a href="#[6bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dsp_cfg_eq_param_load (via Veneer)
<LI><a href="#[6be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dsp_cfg_gain_table_load (via Veneer)
<LI><a href="#[6bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sass_policy_switch_back (via Veneer)
<LI><a href="#[6ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sass_policy_switch_active_audio_source (via Veneer)
<LI><a href="#[6b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sass_policy_set_switch_preference (via Veneer)
<LI><a href="#[6bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sass_policy_set_multipoint_state (via Veneer)
<LI><a href="#[6bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_spp_cmd_set_handle (via Veneer)
<LI><a href="#[6b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_cmd_customized_cmd_handle (via Veneer)
<LI><a href="#[6a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_cmd_general_cmd_handle (via Veneer)
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_cmd_bt_cback (via Veneer)
<LI><a href="#[697]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_spp_credits_give (via Veneer)
<LI><a href="#[699]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_spp_connect_cfm (via Veneer)
<LI><a href="#[698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_cmd_handler (via Veneer)
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_spp_bt_cback (via Veneer)
<LI><a href="#[690]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adp_wake_up_enable (via Veneer)
<LI><a href="#[696]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adp_update_isr_cb (via Veneer)
<LI><a href="#[691]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_adp_smart_box_charger_control (via Veneer)
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_adp_stage_change_cb (via Veneer)
<LI><a href="#[693]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_adp_plug_in_out_handle (via Veneer)
<LI><a href="#[68b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_init (via Veneer)
<LI><a href="#[67b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_valid_b2s_bond_bum (via Veneer)
<LI><a href="#[839]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pacs_pac_add (via Veneer)
<LI><a href="#[83a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pacs_init (via Veneer)
<LI><a href="#[838]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_pacs_init (via Veneer)
<LI><a href="#[837]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_pacs_set_sink_available_contexts (via Veneer)
<LI><a href="#[834]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_pacs_frame_len_setting (via Veneer)
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_pacs_ble_audio_cback (via Veneer)
<LI><a href="#[82f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_mcp_set_active_conn_handle (via Veneer)
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_mcp_ble_audio_cback (via Veneer)
<LI><a href="#[82a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_ccp_accept_hold_or_wait_call (via Veneer)
<LI><a href="#[827]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_ccp_release_active_call (via Veneer)
<LI><a href="#[81f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_ccp_update_call_status (via Veneer)
<LI><a href="#[81e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_ccp_set_active_conn_handle (via Veneer)
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_ccp_ble_audio_cback (via Veneer)
<LI><a href="#[824]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_ccp_parse_payload (via Veneer)
<LI><a href="#[823]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_ccp_set_active_call_uri (via Veneer)
<LI><a href="#[820]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_ccp_update_link_call_status (via Veneer)
<LI><a href="#[81d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_ccp_trigger_call_ringtone (via Veneer)
<LI><a href="#[816]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_if_fm_lcis_handle (via Veneer)
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_ascs_ble_audio_cback (via Veneer)
<LI><a href="#[811]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_change_adv_phy (via Veneer)
<LI><a href="#[805]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_mgr_lea_bond_num (via Veneer)
<LI><a href="#[804]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_adv_linkback_check (via Veneer)
<LI><a href="#[803]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_adv_linkback_set (via Veneer)
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_adv_callback (via Veneer)
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_adv_timeout_cb (via Veneer)
<LI><a href="#[807]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_adv_is_discoverable (via Veneer)
<LI><a href="#[801]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_svc_send_data (via Veneer)
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dult_cccd_update_cb (via Veneer)
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dult_attr_write_cb (via Veneer)
<LI><a href="#[7ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dult_ring_duration_timer_stop (via Veneer)
<LI><a href="#[7fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dult_ring_duration_timer_start (via Veneer)
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dult_timer_cb (via Veneer)
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dult_audio_cback (via Veneer)
<LI><a href="#[7fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_hmac_sha256 (via Veneer)
<LI><a href="#[7fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_get_recovery_key (via Veneer)
<LI><a href="#[7f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dult_send_indication (via Veneer)
<LI><a href="#[7f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dult_report_cmd_rsp (via Veneer)
<LI><a href="#[7fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dult_add_service (via Veneer)
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dult_cb (via Veneer)
<LI><a href="#[7f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dult_handle_ctrl_opcode (via Veneer)
<LI><a href="#[7f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dult_handle_info_opcode (via Veneer)
<LI><a href="#[7f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_timer_timeout_cb (via Veneer)
<LI><a href="#[7e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_mcp_play_pause (via Veneer)
<LI><a href="#[7ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_ascs_get_enable_ase_num (via Veneer)
<LI><a href="#[7f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sass_policy_get_disc_link (via Veneer)
<LI><a href="#[7f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sass_policy_is_target_drop_device (via Veneer)
<LI><a href="#[7ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sass_policy_is_sass_device (via Veneer)
<LI><a href="#[7e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sass_pause_inactive_link (via Veneer)
<LI><a href="#[7e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sass_policy_reset_prev_disc_device (via Veneer)
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sass_policy_timeout_cb (via Veneer)
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sass_policy_bt_cback (via Veneer)
<LI><a href="#[7db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_psm_msg_coc_conn_callback (via Veneer)
<LI><a href="#[7c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_sass_compare_account_key_by_idx (via Veneer)
<LI><a href="#[7c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_gfps_notify_connection_status (via Veneer)
<LI><a href="#[7d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sass_policy_set_capability (via Veneer)
<LI><a href="#[7d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sass_policy_initiated_connection (via Veneer)
<LI><a href="#[7c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sass_policy_context_to_conn_state (via Veneer)
<LI><a href="#[7d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_msg_le_loop_check_data_complete (via Veneer)
<LI><a href="#[7d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_msg_handle_data_transfer (via Veneer)
<LI><a href="#[7cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_msg_update_inuse_account_key_index (via Veneer)
<LI><a href="#[7b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_msg_report_sass_cap (via Veneer)
<LI><a href="#[7ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_msg_update_ring_status (via Veneer)
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_msg_timeout_cb (via Veneer)
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_msg_rfc_audio_cback (via Veneer)
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_msg_rfc_bt_cback (via Veneer)
<LI><a href="#[7b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_msg_all_ring_state (via Veneer)
<LI><a href="#[7b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_msg_left_ring_state (via Veneer)
<LI><a href="#[7b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_msg_right_ring_state (via Veneer)
<LI><a href="#[7b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_msg_ring_stop_state (via Veneer)
<LI><a href="#[7ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_link_print_link_priority (via Veneer)
<LI><a href="#[7a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_adv_set_key_stop_tracking_flag (via Veneer)
<LI><a href="#[7a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_adv_get_key_stop_tracking_flag (via Veneer)
<LI><a href="#[8f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_mgr_dispatch (via Veneer)
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_timeout_cb (via Veneer)
<LI><a href="#[8f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_handle_cccd_pending (via Veneer)
<LI><a href="#[8f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_bt_bond_cb (via Veneer)
<LI><a href="#[8d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_bis_setup_data_path (via Veneer)
<LI><a href="#[8ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_cfg_prefer_bis_sync (via Veneer)
<LI><a href="#[8e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_reset_active (via Veneer)
<LI><a href="#[8e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_sd_set_active (via Veneer)
<LI><a href="#[8e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_find_db_by_sync_handle (via Veneer)
<LI><a href="#[8e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_find_db_by_handle (via Veneer)
<LI><a href="#[8e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_bs_handle_pa_info_sync (via Veneer)
<LI><a href="#[8df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_sink_add_device (via Veneer)
<LI><a href="#[8de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_db_add_sink (via Veneer)
<LI><a href="#[8dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_sd_find_bs (via Veneer)
<LI><a href="#[8db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_find_sd_db (via Veneer)
<LI><a href="#[8da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_bs_set_active (via Veneer)
<LI><a href="#[8d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_tgt (via Veneer)
<LI><a href="#[8d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_state_idle (via Veneer)
<LI><a href="#[8d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_state_starting (via Veneer)
<LI><a href="#[8d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_pa_sync (via Veneer)
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_sync_cb (via Veneer)
<LI><a href="#[8cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_remap_bis (via Veneer)
<LI><a href="#[8cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_audio_cap (via Veneer)
<LI><a href="#[8ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_set_cap (via Veneer)
<LI><a href="#[8c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_big_establish (via Veneer)
<LI><a href="#[8c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_apply_sync_pera (via Veneer)
<LI><a href="#[8c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_track (via Veneer)
<LI><a href="#[8bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_used (via Veneer)
<LI><a href="#[8bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_state_bass_add_source (via Veneer)
<LI><a href="#[8bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_state_scan (via Veneer)
<LI><a href="#[8b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_state_streaming (via Veneer)
<LI><a href="#[8b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_tgt_active (via Veneer)
<LI><a href="#[8b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_terminate (via Veneer)
<LI><a href="#[8b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_bs_clear_device (via Veneer)
<LI><a href="#[8b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_bs_reset (via Veneer)
<LI><a href="#[8b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_state_change (via Veneer)
<LI><a href="#[8eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_handle_cccd_msg (via Veneer)
<LI><a href="#[8d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_state_wait_retry (via Veneer)
<LI><a href="#[8ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_check_combination_iso_data (via Veneer)
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_audio_cback (via Veneer)
<LI><a href="#[8e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_handle_bass_msg (via Veneer)
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_le_disconnect_cb (via Veneer)
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_timeout_cb (via Veneer)
<LI><a href="#[8ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_volume_out_get (via Veneer)
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_vol_ble_audio_cback (via Veneer)
<LI><a href="#[87a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_restart (via Veneer)
<LI><a href="#[891]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ascs_get_ase_prefer_qos (via Veneer)
<LI><a href="#[892]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ascs_cfg_ase_prefer_qos (via Veneer)
<LI><a href="#[87f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ascs_action_release_by_cig (via Veneer)
<LI><a href="#[8a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ascs_action_release (via Veneer)
<LI><a href="#[8a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_enable_mic (via Veneer)
<LI><a href="#[89d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_handle_pending_mcp_cmd (via Veneer)
<LI><a href="#[875]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_check_enable_mic (via Veneer)
<LI><a href="#[8a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_handle_mcp_msg (via Veneer)
<LI><a href="#[8a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_handle_cccd_msg (via Veneer)
<LI><a href="#[88b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_track_set_format_info (via Veneer)
<LI><a href="#[882]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_link_state_change (via Veneer)
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_audio_cback (via Veneer)
<LI><a href="#[8a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_check_combination_iso_data (via Veneer)
<LI><a href="#[8a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_handle_ccp_msg (via Veneer)
<LI><a href="#[89f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_handle_ascs_msg (via Veneer)
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_le_disconnect_cb (via Veneer)
<LI><a href="#[89b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_link_idle (via Veneer)
<LI><a href="#[899]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_link_connected (via Veneer)
<LI><a href="#[898]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_link_streaming (via Veneer)
<LI><a href="#[88e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_setup_data_path (via Veneer)
<LI><a href="#[886]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_track_create (via Veneer)
<LI><a href="#[884]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_remove_data_path (via Veneer)
<LI><a href="#[883]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_ase_ctrl (via Veneer)
<LI><a href="#[877]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_stop_inactive_stream (via Veneer)
<LI><a href="#[873]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_send_iso_data (via Veneer)
<LI><a href="#[871]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_bond_action (via Veneer)
<LI><a href="#[86e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmas_init (via Veneer)
<LI><a href="#[86d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cap_init (via Veneer)
<LI><a href="#[870]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bap_role_init (via Veneer)
<LI><a href="#[859]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_stream_switch (via Veneer)
<LI><a href="#[85a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_set_beep (via Veneer)
<LI><a href="#[857]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_if_fm_lbis_handle (via Veneer)
<LI><a href="#[856]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_get_beep (via Veneer)
<LI><a href="#[868]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_init (via Veneer)
<LI><a href="#[85d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_vol_update_track_volume (via Veneer)
<LI><a href="#[85c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_vol_local_volume_change (via Veneer)
<LI><a href="#[85e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_set_mic_mute (via Veneer)
<LI><a href="#[861]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_handle_iso_data (via Veneer)
<LI><a href="#[858]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_sm (via Veneer)
<LI><a href="#[862]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_handle_iso_data (via Veneer)
<LI><a href="#[851]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_mgr_find_iso_elem (via Veneer)
<LI><a href="#[84f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_mgr_enqueue_iso_data (via Veneer)
<LI><a href="#[849]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_mgr_update_current_mcp_state (via Veneer)
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_mgr_probe_cback (via Veneer)
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_mgr_direct_cback (via Veneer)
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_mgr_timeout_cb (via Veneer)
<LI><a href="#[853]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_mgr_bca_mmi_handle (via Veneer)
<LI><a href="#[847]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vcs_set_param (via Veneer)
<LI><a href="#[846]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_vc_mic_init (via Veneer)
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_vcs_ble_audio_cback (via Veneer)
<LI><a href="#[843]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_scan_stop (via Veneer)
<LI><a href="#[841]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_scan_start (via Veneer)
<LI><a href="#[842]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_scan_stop (via Veneer)
<LI><a href="#[840]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_scan_start (via Veneer)
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_scan_cb (via Veneer)
<LI><a href="#[83e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_scan_report (via Veneer)
<LI><a href="#[83d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_scan_filter_service_data (via Veneer)
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_adc_timeout_cb (via Veneer)
<LI><a href="#[96b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_default_dsp_eq_set (via Veneer)
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_dsp_event_cback (via Veneer)
<LI><a href="#[967]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_eq_dsp_set (via Veneer)
<LI><a href="#[966]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_eq_info_save_to_ftl (via Veneer)
<LI><a href="#[956]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_license_gfps_info_dump (via Veneer)
<LI><a href="#[954]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_send_license_to_dsp (via Veneer)
<LI><a href="#[953]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_send_bd_addr_to_dsp (via Veneer)
<LI><a href="#[952]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_send_device_name_to_dsp (via Veneer)
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_audio_probe_dsp_cback (via Veneer)
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_audio_probe_dsp_event_cback (via Veneer)
<LI><a href="#[944]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sidetone_gain_set (via Veneer)
<LI><a href="#[941]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_volume_balance_set (via Veneer)
<LI><a href="#[948]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_set_a2dp_disc_reason (via Veneer)
<LI><a href="#[947]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_refine_a2dp_bitrate (via Veneer)
<LI><a href="#[93e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_recon_profile (via Veneer)
<LI><a href="#[93d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_set_lea_mode (via Veneer)
<LI><a href="#[94d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_reconnect_avdtp_profile (via Veneer)
<LI><a href="#[94c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_devinfo_set (via Veneer)
<LI><a href="#[949]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_devinfo_get (via Veneer)
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vendor_harman_cmd_timer_callback (via Veneer)
<LI><a href="#[942]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_devinfo_feature_report (via Veneer)
<LI><a href="#[93a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_vendor_cmd_process (via Veneer)
<LI><a href="#[939]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_cmd_support_check (via Veneer)
<LI><a href="#[91c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;harman_get_active_mobile_cmd_link (via Veneer)
<LI><a href="#[919]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_report_le_event (via Veneer)
<LI><a href="#[932]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_ble_ota_handle (via Veneer)
<LI><a href="#[935]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_check_sha256 (via Veneer)
<LI><a href="#[931]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_ota_package_ver_check (via Veneer)
<LI><a href="#[930]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_ble_ota_payload_handle (via Veneer)
<LI><a href="#[92f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_ble_ota_write_to_flash (via Veneer)
<LI><a href="#[92d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_ble_ota_end_check (via Veneer)
<LI><a href="#[92a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_ota_copy_vp (via Veneer)
<LI><a href="#[928]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_ota_clear_notready_flag (via Veneer)
<LI><a href="#[922]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_ota_write_to_flash (via Veneer)
<LI><a href="#[921]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_ota_active_bank_check (via Veneer)
<LI><a href="#[920]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_ota_sub_image_control_header_check (via Veneer)
<LI><a href="#[91f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_ota_fw_table_dump (via Veneer)
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_ble_ota_timeout_cb (via Veneer)
<LI><a href="#[91a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;harman_ble_ota_state_reset (via Veneer)
<LI><a href="#[918]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_ota_notification_report (via Veneer)
<LI><a href="#[915]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_ble_process (via Veneer)
<LI><a href="#[914]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_ble_generate_bt_mac_crc (via Veneer)
<LI><a href="#[912]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_devinfo_notify (via Veneer)
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_timeout_cb (via Veneer)
<LI><a href="#[90a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_legacy_bt_cback (via Veneer)
<LI><a href="#[909]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_resume_sniffing (via Veneer)
<LI><a href="#[906]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_check_sniff (via Veneer)
<LI><a href="#[904]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_stream_pause (via Veneer)
<LI><a href="#[8fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_streaming_exist (via Veneer)
<LI><a href="#[8f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_set_resume_dev (via Veneer)
<LI><a href="#[8f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_set_btmode (via Veneer)
<LI><a href="#[9e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spp_send_data (via Veneer)
<LI><a href="#[9e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spp_send_credit (via Veneer)
<LI><a href="#[9e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spp_init (via Veneer)
<LI><a href="#[9e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spp_disconnect_req (via Veneer)
<LI><a href="#[9e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spp_connect_req (via Veneer)
<LI><a href="#[9e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spp_connect_cfm (via Veneer)
<LI><a href="#[9c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_try_general_at_cmd (via Veneer)
<LI><a href="#[9e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_init (via Veneer)
<LI><a href="#[9d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_connect_req (via Veneer)
<LI><a href="#[9c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_hfp_cback (via Veneer)
<LI><a href="#[9c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;a2dp_signal_connect_req (via Veneer)
<LI><a href="#[9c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;a2dp_init (via Veneer)
<LI><a href="#[9bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_a2dp_cback (via Veneer)
<LI><a href="#[9b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_stop (via Veneer)
<LI><a href="#[9b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_start (via Veneer)
<LI><a href="#[9b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_restart (via Veneer)
<LI><a href="#[9b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_create (via Veneer)
<LI><a href="#[9b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_pm_timeout_cback (via Veneer)
<LI><a href="#[9b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_sniff_mode_enter (via Veneer)
<LI><a href="#[977]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_delete (via Veneer)
<LI><a href="#[97c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_sniff_mode_exit (via Veneer)
<LI><a href="#[983]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_roleswap_get_piconet_id (via Veneer)
<LI><a href="#[981]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_roleswap_get_piconet_clk (via Veneer)
<LI><a href="#[99d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_pm_sm (via Veneer)
<LI><a href="#[99b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_handle_del_sdp_rsp (via Veneer)
<LI><a href="#[99a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_handle_add_sdp_rsp (via Veneer)
<LI><a href="#[9ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_mgr_dispatch (via Veneer)
<LI><a href="#[97e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_device_mode_sm (via Veneer)
<LI><a href="#[974]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_mgr_event_post (via Veneer)
<LI><a href="#[971]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_usb_adc_io_read (via Veneer)
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_usb_adc_timeout_cb (via Veneer)
<LI><a href="#[96d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_discharger_adc_update (via Veneer)
<LI><a href="#[a40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notification_init (via Veneer)
<LI><a href="#[a15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;media_buffer_set_status (via Veneer)
<LI><a href="#[a12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;media_buffer_level_get (via Veneer)
<LI><a href="#[a48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;media_buffer_init (via Veneer)
<LI><a href="#[a39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;media_buffer_handle_plc_event (via Veneer)
<LI><a href="#[a0d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;media_buffer_downstream_dsp (via Veneer)
<LI><a href="#[a1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;media_buffer_cacu_playtime (via Veneer)
<LI><a href="#[a16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jitter_buffer_asrc_pid_init (via Veneer)
<LI><a href="#[a38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jitter_buffer_asrc_pid_controller (via Veneer)
<LI><a href="#[a42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jb_init (via Veneer)
<LI><a href="#[a3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_volume_init (via Veneer)
<LI><a href="#[a3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_power_off (via Veneer)
<LI><a href="#[a3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_init (via Veneer)
<LI><a href="#[a43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_latency_mgr_init (via Veneer)
<LI><a href="#[a44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_interval_eval_init (via Veneer)
<LI><a href="#[a25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_mgr_dispatch (via Veneer)
<LI><a href="#[a20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_mgr_exception (via Veneer)
<LI><a href="#[a18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_buffer_prequeue_state (via Veneer)
<LI><a href="#[a13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_buffer_uninit_state (via Veneer)
<LI><a href="#[a10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_mgr_event_post (via Veneer)
<LI><a href="#[a01]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_reg_cb (via Veneer)
<LI><a href="#[a08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_disconn_req (via Veneer)
<LI><a href="#[a05]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_data_req (via Veneer)
<LI><a href="#[a06]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_data_cfm (via Veneer)
<LI><a href="#[a0b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_conn_req (via Veneer)
<LI><a href="#[a03]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_conn_cfm (via Veneer)
<LI><a href="#[9f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avrcp_volume_change_register_rsp (via Veneer)
<LI><a href="#[9f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avrcp_send_vendor_rsp (via Veneer)
<LI><a href="#[9f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avrcp_notify_volume_change (via Veneer)
<LI><a href="#[9f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avrcp_init (via Veneer)
<LI><a href="#[9ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avrcp_disconnect_req (via Veneer)
<LI><a href="#[9f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avrcp_connect_req (via Veneer)
<LI><a href="#[9eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_avrcp_cback (via Veneer)
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sidetone_effect_disable (via Veneer)
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sidetone_effect_enable (via Veneer)
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrec_effect_disable (via Veneer)
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrec_effect_enable (via Veneer)
<LI><a href="#[a8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_ipc_voice_eq_set (via Veneer)
<LI><a href="#[a8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_ipc_record_eq_set (via Veneer)
<LI><a href="#[a8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_ipc_audio_eq_set (via Veneer)
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eq_effect_enable (via Veneer)
<LI><a href="#[a85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notification_stop (via Veneer)
<LI><a href="#[a84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notification_push (via Veneer)
<LI><a href="#[a87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notification_flush (via Veneer)
<LI><a href="#[a86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notification_cancel (via Veneer)
<LI><a href="#[a5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;media_buffer_us_write (via Veneer)
<LI><a href="#[a74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;media_buffer_us_read (via Veneer)
<LI><a href="#[a72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;media_buffer_latency_set2 (via Veneer)
<LI><a href="#[a73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;media_buffer_ds_write (via Veneer)
<LI><a href="#[a6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_stop (via Veneer)
<LI><a href="#[a65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_start (via Veneer)
<LI><a href="#[a66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_destory (via Veneer)
<LI><a href="#[a51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_dac_level_set (via Veneer)
<LI><a href="#[a60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_create (via Veneer)
<LI><a href="#[a53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_adc_level_set (via Veneer)
<LI><a href="#[a6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_volume_in_set (via Veneer)
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_effect_cback (via Veneer)
<LI><a href="#[a56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_session_state_set (via Veneer)
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_path_cback (via Veneer)
<LI><a href="#[a4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;media_buffer_put (via Veneer)
<LI><a href="#[a4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;media_buffer_get (via Veneer)
<LI><a href="#[aaa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;heap_and_timer_monitor_timer_handler (via Veneer)
<LI><a href="#[aa6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_route_init (via Veneer)
<LI><a href="#[ad8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;power_stage_cb_register (via Veneer)
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cpu_dlps_exit (via Veneer)
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;imp_gpio_handler (via Veneer)
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adp_io_init_isr (via Veneer)
<LI><a href="#[ac1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adp_io_out_handler (via Veneer)
<LI><a href="#[ac0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adp_io_in_handler (via Veneer)
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adp_5v_init_plug (via Veneer)
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adp_5v_init_isr (via Veneer)
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adp_io_handler (via Veneer)
<LI><a href="#[ab5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_monitor_save_site (via Veneer)
<LI><a href="#[afa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_cb (via Veneer)
<LI><a href="#[af8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pre_ext_image_entry (via Veneer)
<LI><a href="#[af2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pm_dsp1_freq_set (via Veneer)
<LI><a href="#[ae9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dvfs_set_mode_func (via Veneer)
<LI><a href="#[b4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_conn_update_init (via Veneer)
<LI><a href="#[b49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_handle_conn_state_evt (via Veneer)
<LI><a href="#[b48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_handle_conn_update_info (via Veneer)
<LI><a href="#[b45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_check_conn_update_param (via Veneer)
<LI><a href="#[b43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_adv_data_init (via Veneer)
<LI><a href="#[b42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_adv_data_del (via Veneer)
<LI><a href="#[b41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_adv_data_check_state (via Veneer)
<LI><a href="#[b3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adv_data_timer_create (via Veneer)
<LI><a href="#[b3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adv_data_timer_callback (via Veneer)
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_adv_data_callback (via Veneer)
<LI><a href="#[b3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uECC_compute_public_key (via Veneer)
<LI><a href="#[b29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;partition_init (via Veneer)
<LI><a href="#[b23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_save_to_module_imp (via Veneer)
<LI><a href="#[b21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_pool_init (via Veneer)
<LI><a href="#[b20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mapping_table_init (via Veneer)
<LI><a href="#[b1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_mapping_table_size_update (via Veneer)
<LI><a href="#[b1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mapping_table_malloc (via Veneer)
<LI><a href="#[b1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_page_list_init (via Veneer)
<LI><a href="#[b17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_cache_to_flash (via Veneer)
<LI><a href="#[b0f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_write (via Veneer)
<LI><a href="#[b15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_write_skip (via Veneer)
<LI><a href="#[b14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_read (via Veneer)
<LI><a href="#[b11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_data_is_vaild (via Veneer)
<LI><a href="#[b0d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_garbage_collect (via Veneer)
<LI><a href="#[b08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_nor_set_bp_lv_locked (via Veneer)
<LI><a href="#[bec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_storage_common_init (via Veneer)
<LI><a href="#[be9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_save_le_remote_ltk (via Veneer)
<LI><a href="#[bf2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_save_le_remote_irk (via Veneer)
<LI><a href="#[be7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_save_le_remote_bd (via Veneer)
<LI><a href="#[be8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_save_le_local_ltk (via Veneer)
<LI><a href="#[ffe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_read_cccd_length (via Veneer)
<LI><a href="#[be4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_load_le_remote_ltk (via Veneer)
<LI><a href="#[be5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_load_le_remote_irk (via Veneer)
<LI><a href="#[be1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_load_le_remote_bd (via Veneer)
<LI><a href="#[be3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_load_le_local_ltk (via Veneer)
<LI><a href="#[beb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_le_storage_init (via Veneer)
<LI><a href="#[bea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_clear_le_remote_irk (via Veneer)
<LI><a href="#[bf1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_set_high_priority (via Veneer)
<LI><a href="#[bed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_priority_queue_init (via Veneer)
<LI><a href="#[bf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_priority_queue_delete (via Veneer)
<LI><a href="#[bf3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_priority_queue_add (via Veneer)
<LI><a href="#[bf9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_get_index_by_priority (via Veneer)
<LI><a href="#[bef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_le_resolve_local_rpa (via Veneer)
<LI><a href="#[be6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_le_delete_key_entry (via Veneer)
<LI><a href="#[be0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_le_key_entry_init (via Veneer)
<LI><a href="#[bdc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_save_cccd (via Veneer)
<LI><a href="#[bdf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_add_cccd (via Veneer)
<LI><a href="#[bda]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_legacy_key_init (via Veneer)
<LI><a href="#[bdb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_remove (via Veneer)
<LI><a href="#[bc2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_le_set_bond_state (via Veneer)
<LI><a href="#[bc5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_le_save_key (via Veneer)
<LI><a href="#[bc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_le_get_key (via Veneer)
<LI><a href="#[bc7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_le_find_entry_by_aes (via Veneer)
<LI><a href="#[bc1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_le_allocate_key_entry (via Veneer)
<LI><a href="#[bd5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_set_cccd_pending (via Veneer)
<LI><a href="#[bcb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_get_info_from_addr (via Veneer)
<LI><a href="#[bd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_handle_acl_status_info (via Veneer)
<LI><a href="#[bca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_handle_gatt_server_store_ind (via Veneer)
<LI><a href="#[bc6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_handle_authen_key_req_ind (via Veneer)
<LI><a href="#[bbe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_handle_authen_result_ind (via Veneer)
<LI><a href="#[bbb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_svc_find_char_uuid_by_index (via Veneer)
<LI><a href="#[bb8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_svc_ext_general_cb (via Veneer)
<LI><a href="#[bb7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_svc_general_cb (via Veneer)
<LI><a href="#[b9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_storage_write (via Veneer)
<LI><a href="#[b9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_storage_srv_list_gen (via Veneer)
<LI><a href="#[b8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_storage_print (via Veneer)
<LI><a href="#[b8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_storage_load (via Veneer)
<LI><a href="#[b80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_storage_find_srv_by_handle (via Veneer)
<LI><a href="#[b81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_storage_find_char_desc (via Veneer)
<LI><a href="#[b93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_storage_check_prop (via Veneer)
<LI><a href="#[b98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_storage_add_secondary_service (via Veneer)
<LI><a href="#[b9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_storage_add_primary_service (via Veneer)
<LI><a href="#[b9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_storage_add_include (via Veneer)
<LI><a href="#[ba0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_storage_add_char (via Veneer)
<LI><a href="#[ba1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_set_cccd_data (via Veneer)
<LI><a href="#[baa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_find_include_srv_by_primary (via Veneer)
<LI><a href="#[ba3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_init (via Veneer)
<LI><a href="#[b91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_check_cccd_enabled (via Veneer)
<LI><a href="#[b8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_enable_char_cccd (via Veneer)
<LI><a href="#[b76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_check_link_int (via Veneer)
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_write_result_ext_cb (via Veneer)
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_read_result_ext_cb (via Veneer)
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_discover_state_ext_cb (via Veneer)
<LI><a href="#[b99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_dis_next_desc (via Veneer)
<LI><a href="#[b88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_send_dis_result (via Veneer)
<LI><a href="#[b7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_execute_req (via Veneer)
<LI><a href="#[b78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_find_wait_rsp (via Veneer)
<LI><a href="#[b71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_scan_check_state (via Veneer)
<LI><a href="#[b6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_scan_hdl_check_int (via Veneer)
<LI><a href="#[b6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_handle_conn_state_evt (via Veneer)
<LI><a href="#[b6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_scan_handle_state (via Veneer)
<LI><a href="#[b69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_handle_gap_cb (via Veneer)
<LI><a href="#[b67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_handle_conn_state (via Veneer)
<LI><a href="#[b66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_handle_adv_state (via Veneer)
<LI><a href="#[b65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_check_next_step (via Veneer)
<LI><a href="#[b64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_delete_pending_actions (via Veneer)
<LI><a href="#[b63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_check_state (via Veneer)
<LI><a href="#[b62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_set_adv_param (via Veneer)
<LI><a href="#[b60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_start_set_adv_param (via Veneer)
<LI><a href="#[b5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_find_pending_adv_action (via Veneer)
<LI><a href="#[b59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_init_adv_params_all (via Veneer)
<LI><a href="#[b58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_allocate_adv_handle (via Veneer)
<LI><a href="#[b56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_init (via Veneer)
<LI><a href="#[b54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_action_update (via Veneer)
<LI><a href="#[b52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_action_stop (via Veneer)
<LI><a href="#[b4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_action_start (via Veneer)
<LI><a href="#[b4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_send_msg (via Veneer)
<LI><a href="#[b4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_find_by_handle (via Veneer)
<LI><a href="#[b4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_queue_init (via Veneer)
<LI><a href="#[c62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pacs_add_service (via Veneer)
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pacs_cccd_update_cb (via Veneer)
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pacs_attr_write_cb (via Veneer)
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pacs_attr_read_cb (via Veneer)
<LI><a href="#[c5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pacs_handle_pending_cccd (via Veneer)
<LI><a href="#[c5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pacs_send_notify (via Veneer)
<LI><a href="#[c59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pac_print_info (via Veneer)
<LI><a href="#[c58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pac_check_record (via Veneer)
<LI><a href="#[c57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pac_find_by_codec_data (via Veneer)
<LI><a href="#[c46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_sync_release_int (via Veneer)
<LI><a href="#[c4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_sync_create_int (via Veneer)
<LI><a href="#[c44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_pa_proc_sm_execute (via Veneer)
<LI><a href="#[c3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_brs_gen_char_data (via Veneer)
<LI><a href="#[c42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_brs_delete (via Veneer)
<LI><a href="#[c41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_brs_add (via Veneer)
<LI><a href="#[c40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_big_proc_sm_execute (via Veneer)
<LI><a href="#[c53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_add_service (via Veneer)
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_cccd_update_cb (via Veneer)
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_attr_write_cb (via Veneer)
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_attr_read_cb (via Veneer)
<LI><a href="#[c52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_get_source_id (via Veneer)
<LI><a href="#[c51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_cp_prase_data (via Veneer)
<LI><a href="#[c50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_cp_check_msg_len (via Veneer)
<LI><a href="#[c4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_handle_cp_data (via Veneer)
<LI><a href="#[c4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_handle_update_bis_info (via Veneer)
<LI><a href="#[c45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_delete_source_int (via Veneer)
<LI><a href="#[c3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_audio_sync_cb (via Veneer)
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_big_sync_receiver_cb (via Veneer)
<LI><a href="#[c38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_init (via Veneer)
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bap_dm_cback (via Veneer)
<LI><a href="#[c0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_cfg_parse (via Veneer)
<LI><a href="#[c27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_srv_find_by_srv_id (via Veneer)
<LI><a href="#[c21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_ual_set_pending_link_cccd (via Veneer)
<LI><a href="#[c25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_ual_clear_pending_cccd (via Veneer)
<LI><a href="#[c2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_mgr_send_server_cccd_info (via Veneer)
<LI><a href="#[c1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_mgr_dispatch (via Veneer)
<LI><a href="#[c0a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ase_switch_to_streaming (via Veneer)
<LI><a href="#[c1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ase_switch_to_qos_cfg (via Veneer)
<LI><a href="#[c28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ase_sm_link_init (via Veneer)
<LI><a href="#[c23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ase_gen_char_data (via Veneer)
<LI><a href="#[c19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ase_find_by_cig_cis (via Veneer)
<LI><a href="#[c09]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ase_cp_check_sm_state (via Veneer)
<LI><a href="#[c2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ase_check_cp_data (via Veneer)
<LI><a href="#[c12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ase_action_update_metadata (via Veneer)
<LI><a href="#[c07]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ase_action_released (via Veneer)
<LI><a href="#[bff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ase_action_release (via Veneer)
<LI><a href="#[c14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ase_action_rec_stop_ready (via Veneer)
<LI><a href="#[c13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ase_action_rec_start_ready (via Veneer)
<LI><a href="#[c11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ase_action_enable (via Veneer)
<LI><a href="#[c15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ase_action_disable (via Veneer)
<LI><a href="#[c10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ase_action_cfg_qos (via Veneer)
<LI><a href="#[c0f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ase_action_cfg_codec (via Veneer)
<LI><a href="#[c32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ascs_add_service (via Veneer)
<LI><a href="#[c2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ascs_init (via Veneer)
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ascs_cccd_update_cb (via Veneer)
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ascs_attr_write_cb (via Veneer)
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ascs_attr_read_cb (via Veneer)
<LI><a href="#[c22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ascs_handle_pending_cccd (via Veneer)
<LI><a href="#[c1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ascs_check_ase_state_when_disconnect (via Veneer)
<LI><a href="#[c16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ascs_handle_cig_mgr_msg (via Veneer)
<LI><a href="#[c0b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ase_handle_remote_cp (via Veneer)
<LI><a href="#[c08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ase_sm_check_iosch_status (via Veneer)
<LI><a href="#[c06]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ascs_check_current_state (via Veneer)
<LI><a href="#[c04]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ascs_setup_data_path (via Veneer)
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ascs_dm_cback (via Veneer)
<LI><a href="#[bf6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_save_legacy_remote_bd (via Veneer)
<LI><a href="#[bfb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_save_legacy_link_key (via Veneer)
<LI><a href="#[bf8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_load_legacy_remote_bd (via Veneer)
<LI><a href="#[bfc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_load_legacy_link_key (via Veneer)
<LI><a href="#[cb1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_sass_malloc_key_for_filter (via Veneer)
<LI><a href="#[cc1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_gen_aes_key (via Veneer)
<LI><a href="#[cb4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_gen_account_key_filter (via Veneer)
<LI><a href="#[cc9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_set_random_nonce (via Veneer)
<LI><a href="#[cc7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_handle_beacon_action (via Veneer)
<LI><a href="#[cb7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_ase_ctr_concat (via Veneer)
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_read_cb (via Veneer)
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_cccd_update_cb (via Veneer)
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_attr_write_cb (via Veneer)
<LI><a href="#[cc6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_handle_char_additional_data (via Veneer)
<LI><a href="#[cc5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_handle_char_account_key (via Veneer)
<LI><a href="#[cc3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_handle_char_additional_passkey (via Veneer)
<LI><a href="#[cc2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_handle_char_passkey (via Veneer)
<LI><a href="#[cc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_handle_char_kbp (via Veneer)
<LI><a href="#[cbf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_handle_action_request (via Veneer)
<LI><a href="#[cbe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_handle_kbp_request (via Veneer)
<LI><a href="#[cbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_decrypt_kbp_request (via Veneer)
<LI><a href="#[cbb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_send_kbp_response_le (via Veneer)
<LI><a href="#[cb9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_send_kbp_response (via Veneer)
<LI><a href="#[cb8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_decode_additional_packet (via Veneer)
<LI><a href="#[caf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_gen_battery_info (via Veneer)
<LI><a href="#[cab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_sass_get_account_key_by_index (via Veneer)
<LI><a href="#[cad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_ctr_concat (via Veneer)
<LI><a href="#[ca4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_gfps_send_data (via Veneer)
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmas_attr_read_cb (via Veneer)
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tbs_client_dm_cback (via Veneer)
<LI><a href="#[c9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tbs_client_handle_callback (via Veneer)
<LI><a href="#[c9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cap_check_disc_done (via Veneer)
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cap_dm_cback (via Veneer)
<LI><a href="#[c98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcs_check_link_int (via Veneer)
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcs_client_dm_cback (via Veneer)
<LI><a href="#[c99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcs_client_handle_cback (via Veneer)
<LI><a href="#[c97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcs_handle_charac_notify (via Veneer)
<LI><a href="#[c8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;base_data_parse_data (via Veneer)
<LI><a href="#[c95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_sync_handle_big_dev_state_evt (via Veneer)
<LI><a href="#[c91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_send_big_sync_state (via Veneer)
<LI><a href="#[c8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_sync_handle_pa_info (via Veneer)
<LI><a href="#[c8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_sync_cmp_pa_mapping (via Veneer)
<LI><a href="#[c89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_sync_handle_pa_dev_state_evt (via Veneer)
<LI><a href="#[c84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_send_pa_sync_state (via Veneer)
<LI><a href="#[c81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bc_sync_handle_check_int (via Veneer)
<LI><a href="#[c90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_sync_find_by_adv_info (via Veneer)
<LI><a href="#[c79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_dm_event_post (via Veneer)
<LI><a href="#[c7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_sync_handle_gap_cb (via Veneer)
<LI><a href="#[c77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vcs_add_service (via Veneer)
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vcs_cccd_update_cb (via Veneer)
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vcs_attr_write_cb (via Veneer)
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vcs_attr_read_cb (via Veneer)
<LI><a href="#[c75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vcs_handle_volume_cp (via Veneer)
<LI><a href="#[c71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_big_sync_establish_int (via Veneer)
<LI><a href="#[c6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_big_update_bis_state (via Veneer)
<LI><a href="#[c69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_start_past_timer (via Veneer)
<LI><a href="#[c68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_past_timer_callback (via Veneer)
<LI><a href="#[c67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_pa_update_state (via Veneer)
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_big_check_info_proc (via Veneer)
<LI><a href="#[df9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spp_handle_rfc_msg (via Veneer)
<LI><a href="#[df7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spp_handle_data_rsp (via Veneer)
<LI><a href="#[df6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spp_handle_data_ind (via Veneer)
<LI><a href="#[df3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spp_handle_disconn_cmpl (via Veneer)
<LI><a href="#[df2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spp_handle_conn_cmpl (via Veneer)
<LI><a href="#[df0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spp_handle_conn_ind (via Veneer)
<LI><a href="#[dec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_handle_rfc_msg (via Veneer)
<LI><a href="#[dea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_handle_rfc_conn_cmpl (via Veneer)
<LI><a href="#[de6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_handle_at_rsp (via Veneer)
<LI><a href="#[dc9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_send_general_at_cmd (via Veneer)
<LI><a href="#[dad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avctp_send_data2buf (via Veneer)
<LI><a href="#[dc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avctp_init (via Veneer)
<LI><a href="#[dbf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avctp_connect_req (via Veneer)
<LI><a href="#[dc6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avrcp_handle_disconn_ind (via Veneer)
<LI><a href="#[dc4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avrcp_handle_conn_cmpl_ind (via Veneer)
<LI><a href="#[dc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avrcp_handle_conn_ind (via Veneer)
<LI><a href="#[dba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avrcp_handle_vendor_BT_SIG_cmd (via Veneer)
<LI><a href="#[db7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avrcp_handle_vendor_BT_SIG_rsp (via Veneer)
<LI><a href="#[db6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avrcp_send_vendor_BT_SIG_rsp (via Veneer)
<LI><a href="#[db5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avrcp_cmd_enqueue (via Veneer)
<LI><a href="#[db3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avrcp_free_link (via Veneer)
<LI><a href="#[db1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avrcp_tout_callback (via Veneer)
<LI><a href="#[db0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avrcp_cmd_process (via Veneer)
<LI><a href="#[daf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avrcp_send_vendor_BT_SIG_cmd (via Veneer)
<LI><a href="#[dae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avrcp_send_cmd_pass_through (via Veneer)
<LI><a href="#[dac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avrcp_send_generic_cmd (via Veneer)
<LI><a href="#[da3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdtp_stream_disconnect_req (via Veneer)
<LI><a href="#[d9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdtp_stream_connect_req (via Veneer)
<LI><a href="#[1037]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdtp_signal_set_cfg_req (via Veneer)
<LI><a href="#[1038]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdtp_signal_open_req (via Veneer)
<LI><a href="#[1036]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdtp_signal_get_capability_req (via Veneer)
<LI><a href="#[d9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdtp_signal_discover_req (via Veneer)
<LI><a href="#[da2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdtp_signal_disconnect_req (via Veneer)
<LI><a href="#[da6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdtp_signal_delay_report_req (via Veneer)
<LI><a href="#[da4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdtp_signal_connect_req (via Veneer)
<LI><a href="#[da5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdtp_signal_close_req (via Veneer)
<LI><a href="#[1030]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdtp_signal_abort_req (via Veneer)
<LI><a href="#[dab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdtp_init (via Veneer)
<LI><a href="#[da0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;a2dp_callback (via Veneer)
<LI><a href="#[d9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;a2dp_stream_connect_req (via Veneer)
<LI><a href="#[d99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;a2dp_free_link (via Veneer)
<LI><a href="#[d98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;a2dp_alloc_link (via Veneer)
<LI><a href="#[cfd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_init (via Veneer)
<LI><a href="#[cfa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_mgr_event_post (via Veneer)
<LI><a href="#[cf9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_sass_get_inuse_accountkey (via Veneer)
<LI><a href="#[cf8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_handle_beacon_utp_request (via Veneer)
<LI><a href="#[cf7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_handle_active_utp_request (via Veneer)
<LI><a href="#[cf6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_handle_deactive_utp_request (via Veneer)
<LI><a href="#[cf5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_handle_beacon_ring_request (via Veneer)
<LI><a href="#[cf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_handle_beacon_key_recovery_request (via Veneer)
<LI><a href="#[cf3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_handle_beacon_provision_request (via Veneer)
<LI><a href="#[cf2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_handle_clear_eik_request (via Veneer)
<LI><a href="#[cf1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_handle_set_eik_request (via Veneer)
<LI><a href="#[cf0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_rsp_utp_request (via Veneer)
<LI><a href="#[cef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_rsp_key_recovery (via Veneer)
<LI><a href="#[cee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_rsp_clear_eik (via Veneer)
<LI><a href="#[ced]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_rsp_set_eik (via Veneer)
<LI><a href="#[cec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_rsp_beacon_provision_state (via Veneer)
<LI><a href="#[ceb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_rsp_beacon_param (via Veneer)
<LI><a href="#[cea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_send_rsp (via Veneer)
<LI><a href="#[ce8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_encrypted_eik (via Veneer)
<LI><a href="#[ce7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_decrypted_eik (via Veneer)
<LI><a href="#[ce6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_verify_eik_authkey (via Veneer)
<LI><a href="#[ce5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_rsp_generate_authkey (via Veneer)
<LI><a href="#[ce4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_verify_authkey (via Veneer)
<LI><a href="#[ce3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_get_utp_key (via Veneer)
<LI><a href="#[ce2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_get_ring_key (via Veneer)
<LI><a href="#[ce1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_get_owner_accountkey (via Veneer)
<LI><a href="#[ce0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_get_random_nonce (via Veneer)
<LI><a href="#[ccd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ecdh_shared_secret_enhanced (via Veneer)
<LI><a href="#[ccc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_gen_ecdh_key (via Veneer)
<LI><a href="#[ccb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_add_key_into_account_based_key_list (via Veneer)
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_dsp_cback (via Veneer)
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_ipc_event_handler (via Veneer)
<LI><a href="#[e71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_state_set (via Veneer)
<LI><a href="#[e6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_codec_event_handler (via Veneer)
<LI><a href="#[ec7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_plugin_msg_handle (via Veneer)
<LI><a href="#[e62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jitter_buffer_asrc_ratio_adjust (via Veneer)
<LI><a href="#[e5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_latency_lat_dynamic_increase (via Veneer)
<LI><a href="#[e60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_latency_lat_dynamic_decrease (via Veneer)
<LI><a href="#[e67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_inteval_evaluator_update (via Veneer)
<LI><a href="#[e4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;media_buffer_construct (via Veneer)
<LI><a href="#[e4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;media_buffer_backup_downstream (via Veneer)
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;playback_buffer_lat_evt_cback (via Veneer)
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;playback_buffer_jb_evt_cback (via Veneer)
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;playback_buffer_interval_eval_evt_cback (via Veneer)
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__buffer_reset (via Veneer)
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__buffer_flush (via Veneer)
<LI><a href="#[e3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notification_buffer_prequeue (via Veneer)
<LI><a href="#[e47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notification_buffer_init (via Veneer)
<LI><a href="#[e41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notification_buffer_config (via Veneer)
<LI><a href="#[e39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_data_send (via Veneer)
<LI><a href="#[e44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notification_play (via Veneer)
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_composite_cback (via Veneer)
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_voice_prompt_cback (via Veneer)
<LI><a href="#[e3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notification_start_vp (via Veneer)
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notification_buffer_vp_cback (via Veneer)
<LI><a href="#[e36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_gap_cback (via Veneer)
<LI><a href="#[e34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_handle_acl_status_info (via Veneer)
<LI><a href="#[e2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_init (via Veneer)
<LI><a href="#[e2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_handle_authen_rsp (via Veneer)
<LI><a href="#[e2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_handle_l2c_msg (via Veneer)
<LI><a href="#[e27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_handle_l2c_data_ind (via Veneer)
<LI><a href="#[e26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_handle_l2c_disconn_rsp (via Veneer)
<LI><a href="#[e24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_handle_l2c_disconn_ind (via Veneer)
<LI><a href="#[e23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_handle_l2c_conn_cmpl (via Veneer)
<LI><a href="#[e22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_handle_l2c_conn_rsp (via Veneer)
<LI><a href="#[e1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_handle_disc (via Veneer)
<LI><a href="#[e1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_handle_dm (via Veneer)
<LI><a href="#[e1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_handle_ua (via Veneer)
<LI><a href="#[e1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_handle_sabm (via Veneer)
<LI><a href="#[e1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_handle_uih (via Veneer)
<LI><a href="#[e18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_handle_msc (via Veneer)
<LI><a href="#[e15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_handle_pn (via Veneer)
<LI><a href="#[e14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_change_ctrl_chann (via Veneer)
<LI><a href="#[e13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_check_l2c_collision (via Veneer)
<LI><a href="#[e12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_check_block (via Veneer)
<LI><a href="#[e11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_decode_pn (via Veneer)
<LI><a href="#[e09]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_wait_rsp_timeout (via Veneer)
<LI><a href="#[e05]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_send_frame (via Veneer)
<LI><a href="#[e00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_check_send_credits (via Veneer)
<LI><a href="#[dff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_wait_msc_timeout (via Veneer)
<LI><a href="#[dfa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_msg_to_profile (via Veneer)
<LI><a href="#[f26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_param_init (via Veneer)
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_ipc_event_handler (via Veneer)
<LI><a href="#[f0e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bin_loader_token_issue (via Veneer)
<LI><a href="#[f13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bin_loader_session_create (via Veneer)
<LI><a href="#[f10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bin_loader_driver_check_image_correct (via Veneer)
<LI><a href="#[f12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_load_initial (via Veneer)
<LI><a href="#[f0f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_load_next_bin (via Veneer)
<LI><a href="#[f0d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_load_algorithm_code (via Veneer)
<LI><a href="#[f0a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_loader_matched_scenario_get (via Veneer)
<LI><a href="#[f08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_load_init (via Veneer)
<LI><a href="#[efa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_send_msg
<LI><a href="#[efd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_ipc_init (via Veneer)
<LI><a href="#[ef7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_ipc_sport_set (via Veneer)
<LI><a href="#[ee9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_ipc_set_lc3_encoder (via Veneer)
<LI><a href="#[ee8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_ipc_set_lc3_decoder (via Veneer)
<LI><a href="#[ee7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_ipc_set_encoder (via Veneer)
<LI><a href="#[ee6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_ipc_set_decoder (via Veneer)
<LI><a href="#[f05]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dipc_gate_stop_core (via Veneer)
<LI><a href="#[f02]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dipc2_cmd_send (via Veneer)
<LI><a href="#[f00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_ipc_action_send (via Veneer)
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_ipc_hal_cback (via Veneer)
<LI><a href="#[ef8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_ipc_event_parser (via Veneer)
<LI><a href="#[eed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_ipc_set_audio_sport_action (via Veneer)
<LI><a href="#[ede]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_latency_handle_plc_event (via Veneer)
<LI><a href="#[edd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_latency_adjust_check (via Veneer)
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_latency_timeout_cback (via Veneer)
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;variance_check_timer_cback (via Veneer)
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stable_dejitter_timer_cback (via Veneer)
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jitter_buffer_timeout_cback (via Veneer)
<LI><a href="#[e88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_event_flag_wait (via Veneer)
<LI><a href="#[e6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_event_flag_post (via Veneer)
<LI><a href="#[ec4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_mgr_session_create (via Veneer)
<LI><a href="#[ecd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_mgr_enable (via Veneer)
<LI><a href="#[ec9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_mgr_disable (via Veneer)
<LI><a href="#[e69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_mgr_session_enable (via Veneer)
<LI><a href="#[e7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_mgr_session_disable (via Veneer)
<LI><a href="#[ec5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_mgr_session_create (via Veneer)
<LI><a href="#[e80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_mgr_is_stable (via Veneer)
<LI><a href="#[e8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_mgr_init (via Veneer)
<LI><a href="#[eba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_mgr_fade_out_start (via Veneer)
<LI><a href="#[eb9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_sidetone_set (via Veneer)
<LI><a href="#[ec3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_session_create (via Veneer)
<LI><a href="#[ec1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_power_off (via Veneer)
<LI><a href="#[e8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_init (via Veneer)
<LI><a href="#[e8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bin_loader_init (via Veneer)
<LI><a href="#[fab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shm_data_recv (via Veneer)
<LI><a href="#[faa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shm_data_send (via Veneer)
<LI><a href="#[fa9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shm_cmd_recv (via Veneer)
<LI><a href="#[fa8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shm_cmd_send (via Veneer)
<LI><a href="#[f88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_pad_init (via Veneer)
<LI><a href="#[f5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_hal_action (via Veneer)
<LI><a href="#[f8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_config_init (via Veneer)
<LI><a href="#[f87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_init (via Veneer)
<LI><a href="#[f7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_eq_data_clear (via Veneer)
<LI><a href="#[f7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_eq_band_write (via Veneer)
<LI><a href="#[f4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_event_process (via Veneer)
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_msg_handler (via Veneer)
<LI><a href="#[f76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_sidetone_timer_ctrl (via Veneer)
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_halt_dac_config (via Veneer)
<LI><a href="#[f71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_set_sample_rate (via Veneer)
<LI><a href="#[f4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_halt_adc_depop (via Veneer)
<LI><a href="#[f46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_dump_cur_setting (via Veneer)
<LI><a href="#[f37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hw_timer_pool_free (via Veneer)
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hw_timer_pm_check (via Veneer)
<LI><a href="#[f1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_hal_shut_down (via Veneer)
<LI><a href="#[f1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_hal_reset (via Veneer)
<LI><a href="#[f25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_hal_init (via Veneer)
<LI><a href="#[f20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_hal_boot (via Veneer)
<LI><a href="#[f21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_remote_init (via Veneer)
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_mgr_sport_stop (via Veneer)
<LI><a href="#[f1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_state_machine (via Veneer)
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_mgr_sport_start (via Veneer)
<LI><a href="#[f14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_algo_param_load (via Veneer)
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_cbs (via Veneer)
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_cccd_timeout (via Veneer)
<LI><a href="#[fb4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shm_enable (via Veneer)
<LI><a href="#[1053]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_loopback_disable (via Veneer)
<LI><a href="#[1052]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_loopback_enable (via Veneer)
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_cback (via Veneer)
<LI><a href="#[1072]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_eq_load (via Veneer)
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_adc_gain_set_action (via Veneer)
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_adc_gain_mute_action (via Veneer)
<LI><a href="#[1060]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_eq_set (via Veneer)
<LI><a href="#[105a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_session_route (via Veneer)
<LI><a href="#[104d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notification_buffer_stream_peek (via Veneer)
<LI><a href="#[104b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notification_buffer_stream_push (via Veneer)
<LI><a href="#[1049]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notification_buffer_frame_push (via Veneer)
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notification_buffer_stream_write
<LI><a href="#[1046]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdtp_handle_disconn_rsp (via Veneer)
<LI><a href="#[1045]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdtp_handle_disconn_ind (via Veneer)
<LI><a href="#[1044]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdtp_handle_conn_cmpl (via Veneer)
<LI><a href="#[1043]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdtp_handle_conn_rsp (via Veneer)
<LI><a href="#[1042]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdtp_handle_conn_req (via Veneer)
<LI><a href="#[103c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdtp_rx_rsp_proc (via Veneer)
<LI><a href="#[103b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdtp_rx_cmd_proc (via Veneer)
<LI><a href="#[103a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdtp_cmd_error_check_proc (via Veneer)
<LI><a href="#[1039]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdtp_cmd_bad_state_proc (via Veneer)
<LI><a href="#[1033]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdtp_free_link (via Veneer)
<LI><a href="#[1032]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdtp_alloc_link (via Veneer)
<LI><a href="#[1031]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdtp_tout_cback (via Veneer)
<LI><a href="#[102e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avctp_callback (via Veneer)
<LI><a href="#[1013]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cas_add_service (via Veneer)
<LI><a href="#[100c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_cfg_check_cap (via Veneer)
<LI><a href="#[100b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_cap_parse (via Veneer)
<LI><a href="#[1009]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pacs_create_table (via Veneer)
<LI><a href="#[1008]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ltv_util_check_format_int (via Veneer)
<LI><a href="#[1007]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;base_data_check_data (via Veneer)
<LI><a href="#[1006]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;metadata_check_format (via Veneer)
<LI><a href="#[1005]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ase_check_cfg_qos_param (via Veneer)
<LI><a href="#[1004]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ase_check_cfg_codec_param (via Veneer)
<LI><a href="#[1003]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ase_cp_check_msg_len (via Veneer)
<LI><a href="#[1002]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ascs_send_ase_cp_notify (via Veneer)
<LI><a href="#[1001]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_ascs_table (via Veneer)
<LI><a href="#[1000]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_priority_queue_find (via Veneer)
<LI><a href="#[fff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_priority_sort_get_int (via Veneer)
<LI><a href="#[ffc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_load_bond_priority (via Veneer)
<LI><a href="#[ffa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_save_bond_priority (via Veneer)
<LI><a href="#[108a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bin_loader_driver_load_next_bin (via Veneer)
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_fw_load_image (via Veneer)
<LI><a href="#[1087]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_image_header (via Veneer)
<LI><a href="#[1084]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bin_loader_driver_reg_cb (via Veneer)
<LI><a href="#[1086]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bin_loader_msg_handler (via Veneer)
<LI><a href="#[10f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bin_loader_send_msg
<LI><a href="#[10f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bin_loader_send_isr_msg
<LI><a href="#[1079]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_drv_trx_config_set (via Veneer)
<LI><a href="#[107a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_drv_dump_setting (via Veneer)
<LI><a href="#[107b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_mgr_param_init (via Veneer)
<LI><a href="#[1077]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_mgr_param_set (via Veneer)
<LI><a href="#[106e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_phy_path_disable (via Veneer)
<LI><a href="#[106c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_phy_path_enable (via Veneer)
<LI><a href="#[105c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_session_control (via Veneer)
<LI><a href="#[1055]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fsm_init (via Veneer)
<LI><a href="#[1054]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fsm_run (via Veneer)
</UL>

<P><STRONG><a name="[adb]"></a>Pinmux_Config_rom</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pinmux_Config (via Veneer)
</UL>

<P><STRONG><a name="[1126]"></a>Pinmux_Deinit</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE), UNUSED)
<BR><BR>[Called By]<UL></UL>

<P><STRONG><a name="[10ec]"></a>Pad_Config_rom</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pad_Config
</UL>

<P><STRONG><a name="[ad5]"></a>Pad_ClearAllWakeupINT</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[ad4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dlps_io_enter_cb (via Veneer)
</UL>

<P><STRONG><a name="[ae1]"></a>Pad_PullEnableValue_Dir</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_init_pin (via Veneer)
</UL>

<P><STRONG><a name="[2ed]"></a>Pad_WakeupInterruptValue</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_wakeup_reason_check (via Veneer)
<LI><a href="#[55f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dlps_restore_pad (via Veneer)
<LI><a href="#[555]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dlps_exit_callback (via Veneer)
</UL>

<P><STRONG><a name="[358]"></a>Pad_FunctionConfig</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_led_reset_pad_config (via Veneer)
<LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_led_pad_config (via Veneer)
<LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_led_timeout_cb (via Veneer)
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_led_set_mode (via Veneer)
</UL>

<P><STRONG><a name="[1096]"></a>UART_StructInit</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1095]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_log_uart_driver_init (via Veneer)
</UL>

<P><STRONG><a name="[2b7]"></a>btxfcs</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_tbl_storage_set_cccd (via Veneer)
<LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_tbl_storage_get_cccd (via Veneer)
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_tbl_storage_add_dev (via Veneer)
<LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_tbl_storage_get_dev (via Veneer)
</UL>

<P><STRONG><a name="[f35]"></a>RamVectorTableUpdate_rom</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[ab4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RamVectorTableUpdate (via Veneer)
<LI><a href="#[f3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hw_timer_update_isr (via Veneer)
</UL>

<P><STRONG><a name="[12bf]"></a>spic_set_max_retry</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE), UNUSED)
<BR><BR>[Called By]<UL></UL>

<P><STRONG><a name="[12be]"></a>spic_set_device</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE), UNUSED)
<BR><BR>[Called By]<UL></UL>

<P><STRONG><a name="[12ca]"></a>spic_enable</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE), UNUSED)
<BR><BR>[Called By]<UL></UL>

<P><STRONG><a name="[12c0]"></a>spic_disable_interrupt</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE), UNUSED)
<BR><BR>[Called By]<UL></UL>

<P><STRONG><a name="[12c1]"></a>spic_set_sipol</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE), UNUSED)
<BR><BR>[Called By]<UL></UL>

<P><STRONG><a name="[12bb]"></a>spic_set_auto_mode</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE), UNUSED)
<BR><BR>[Called By]<UL></UL>

<P><STRONG><a name="[12cb]"></a>spic_set_auto_addr_len</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE), UNUSED)
<BR><BR>[Called By]<UL></UL>

<P><STRONG><a name="[12d0]"></a>spic_set_delay_len</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE), UNUSED)
<BR><BR>[Called By]<UL></UL>

<P><STRONG><a name="[12cd]"></a>spic_set_auto_dummy_len</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE), UNUSED)
<BR><BR>[Called By]<UL></UL>

<P><STRONG><a name="[12c2]"></a>spic_set_baud</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE), UNUSED)
<BR><BR>[Called By]<UL></UL>

<P><STRONG><a name="[12b7]"></a>spic_get_baud</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE), UNUSED)
<BR><BR>[Called By]<UL></UL>

<P><STRONG><a name="[12ba]"></a>spic_set_multi_ch</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE), UNUSED)
<BR><BR>[Called By]<UL></UL>

<P><STRONG><a name="[12d2]"></a>spic_set_seq_trans</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE), UNUSED)
<BR><BR>[Called By]<UL></UL>

<P><STRONG><a name="[12b8]"></a>spic_enable_dum_byte</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE), UNUSED)
<BR><BR>[Called By]<UL></UL>

<P><STRONG><a name="[12c4]"></a>spic_backup_reg</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE), UNUSED)
<BR><BR>[Called By]<UL></UL>

<P><STRONG><a name="[12c6]"></a>spic_restore_reg</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE), UNUSED)
<BR><BR>[Called By]<UL></UL>

<P><STRONG><a name="[fbd]"></a>flash_nor_get_flash_size</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[b08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_nor_set_bp_lv_locked (via Veneer)
</UL>

<P><STRONG><a name="[fbf]"></a>flash_nor_get_tb_bit</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[b08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_nor_set_bp_lv_locked (via Veneer)
</UL>

<P><STRONG><a name="[1246]"></a>flash_nor_set_tb_bit</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE), UNUSED)
<BR><BR>[Called By]<UL></UL>

<P><STRONG><a name="[fbe]"></a>flash_nor_get_bp_all_lv</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[b08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_nor_set_bp_lv_locked (via Veneer)
</UL>

<P><STRONG><a name="[b07]"></a>flash_nor_get_idx_by_addr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[924]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_flash_nor_set_bp_lv (via Veneer)
<LI><a href="#[923]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_flash_nor_get_bp_lv (via Veneer)
</UL>

<P><STRONG><a name="[f40]"></a>TIM_TimeBaseInit</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[f39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hw_timer_driver_init_int (via Veneer)
</UL>

<P><STRONG><a name="[f3f]"></a>TIM_StructInit</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[f39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hw_timer_driver_init_int (via Veneer)
</UL>

<P><STRONG><a name="[10f4]"></a>TIM_Cmd</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[109d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hw_timer_start
<LI><a href="#[1019]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hw_timer_restart
<LI><a href="#[10f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hw_timer_safe_stop
<LI><a href="#[10f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hw_timer_handler_imp
</UL>

<P><STRONG><a name="[10f7]"></a>TIM_ChangePeriod</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1019]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hw_timer_restart
</UL>

<P><STRONG><a name="[f43]"></a>TIM_INTConfig</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[109d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hw_timer_start
<LI><a href="#[1019]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hw_timer_restart
<LI><a href="#[10f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hw_timer_safe_stop
<LI><a href="#[f39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hw_timer_driver_init_int (via Veneer)
</UL>

<P><STRONG><a name="[ac9]"></a>btaon_fast_read</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pad_store (via Veneer)
</UL>

<P><STRONG><a name="[27a]"></a>btaon_fast_read_safe</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_hall_get_reset_status (via Veneer)
<LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;power_down_check_wake_up_reason (via Veneer)
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pad_Config
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mfb_get_level (via Veneer)
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pad_TableConfig (via Veneer)
<LI><a href="#[4c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_SetMFBWakeUpFunction (via Veneer)
<LI><a href="#[6a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_cmd_general_cmd_handle (via Veneer)
<LI><a href="#[ac6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_SetAdpWakeUpFunction (via Veneer)
<LI><a href="#[abe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adp_high_to_low_wake_up_trigger_isr (via Veneer)
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adp_5v_get_level
<LI><a href="#[af7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_hall_set_rglx_auxadc (via Veneer)
<LI><a href="#[fa2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_pad_spk_set (via Veneer)
<LI><a href="#[f51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_pad_bias_set (via Veneer)
<LI><a href="#[f50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_pad_bias_enable (via Veneer)
<LI><a href="#[f60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_pad_aux_set (via Veneer)
<LI><a href="#[10a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_pad_func_enable (via Veneer)
<LI><a href="#[10a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_pad_amic_set (via Veneer)
<LI><a href="#[10a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_pad_amic2_aux_set (via Veneer)
</UL>

<P><STRONG><a name="[6ad]"></a>btaon_fast_read_safe_8b</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[6a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_cmd_general_cmd_handle (via Veneer)
</UL>

<P><STRONG><a name="[aca]"></a>btaon_fast_write</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pad_store (via Veneer)
</UL>

<P><STRONG><a name="[6af]"></a>btaon_fast_write_safe</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pad_Config
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pad_TableConfig (via Veneer)
<LI><a href="#[4c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_SetMFBWakeUpFunction (via Veneer)
<LI><a href="#[6a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_cmd_general_cmd_handle (via Veneer)
<LI><a href="#[ac6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_SetAdpWakeUpFunction (via Veneer)
<LI><a href="#[af7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_hall_set_rglx_auxadc (via Veneer)
<LI><a href="#[fac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_ram_power_ctrl (via Veneer)
<LI><a href="#[fa2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_pad_spk_set (via Veneer)
<LI><a href="#[f51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_pad_bias_set (via Veneer)
<LI><a href="#[f50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_pad_bias_enable (via Veneer)
<LI><a href="#[f60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_pad_aux_set (via Veneer)
<LI><a href="#[10a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_pad_func_enable (via Veneer)
<LI><a href="#[10a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_pad_amic_set (via Veneer)
<LI><a href="#[10a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_pad_amic2_aux_set (via Veneer)
</UL>

<P><STRONG><a name="[6ae]"></a>btaon_fast_write_safe_8b</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[6a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_cmd_general_cmd_handle (via Veneer)
</UL>

<P><STRONG><a name="[acb]"></a>btaon_fast_update_safe</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[69d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_hall_set_hci_download_mode (via Veneer)
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pad_restore (via Veneer)
<LI><a href="#[fac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_ram_power_ctrl (via Veneer)
<LI><a href="#[f85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_audio_pin_init (via Veneer)
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_pm_power_on (via Veneer)
<LI><a href="#[1098]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_hal_codec_close (via Veneer)
<LI><a href="#[1097]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_hal_codec_open (via Veneer)
<LI><a href="#[109f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_pm_power_off (via Veneer)
</UL>

<P><STRONG><a name="[10aa]"></a>pmu_handle_avcc_drv</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1093]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_hal_dsp_action (via Veneer)
</UL>

<P><STRONG><a name="[1088]"></a>check_image_crc16</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1087]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_image_header (via Veneer)
</UL>

<P><STRONG><a name="[1150]"></a>check_header_valid</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE), UNUSED)
<BR><BR>[Called By]<UL></UL>

<P><STRONG><a name="[b06]"></a>get_img_header_format_size</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_cur_bank_img_payload_addr_get (via Veneer)
<LI><a href="#[e3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notification_start_vp (via Veneer)
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_anc_fw_load_code_driver (via Veneer)
</UL>

<P><STRONG><a name="[934]"></a>get_header_addr_by_img_id</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_image_release_version (via Veneer)
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_image_feature_info (via Veneer)
<LI><a href="#[6aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_cur_bank_img_header_addr_get (via Veneer)
<LI><a href="#[949]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_devinfo_get (via Veneer)
<LI><a href="#[931]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_ota_package_ver_check (via Veneer)
<LI><a href="#[912]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_devinfo_notify (via Veneer)
<LI><a href="#[1089]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_fw_get_flash_header (via Veneer)
</UL>

<P><STRONG><a name="[2ae]"></a>memcmp</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_hall_upperstack_ini (via Veneer)
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_save_to_module (via Veneer)
<LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_le_find_key_entry_num (via Veneer)
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_le_find_key_entry (via Veneer)
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_tbl_storage_set_gatt_data (via Veneer)
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_tbl_storage_find_dev (via Veneer)
<LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_gap_cb (via Veneer)
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gap_bt_cback (via Veneer)
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_find_br_link (via Veneer)
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_led_set_mode (via Veneer)
<LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_is_test_equipment (via Veneer)
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_bt_cback (via Veneer)
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_a2dp_bt_cback (via Veneer)
<LI><a href="#[490]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_avrcp_set_vol_is_changed (via Veneer)
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_avrcp_bt_cback (via Veneer)
<LI><a href="#[46d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_find_le_link_by_addr (via Veneer)
<LI><a href="#[481]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_src_conn_ind_check (via Veneer)
<LI><a href="#[46b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bond_set_priority (via Veneer)
<LI><a href="#[480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_adjust_sco_window (via Veneer)
<LI><a href="#[466]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_set_vol_is_changed (via Veneer)
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_bt_cback (via Veneer)
<LI><a href="#[422]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gaps_gatt_client_callback (via Veneer)
<LI><a href="#[408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_le_set_local_irk (via Veneer)
<LI><a href="#[41f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_handle_b2s_connected (via Veneer)
<LI><a href="#[41a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_device_rpa_handle_engage_role_decided (via Veneer)
<LI><a href="#[407]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_device_irk_handle_power_on (via Veneer)
<LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sass_handle_le_dm (via Veneer)
<LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_ble_conn_info_handle (via Veneer)
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_rand_addr_get (via Veneer)
<LI><a href="#[60a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_state_afe_linkback_event_handle (via Veneer)
<LI><a href="#[5f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_bt_event_pre_handle (via Veneer)
<LI><a href="#[5dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_prepare_for_dedicated_enter_pairing_mode (via Veneer)
<LI><a href="#[5c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_src_conn_ind_add (via Veneer)
<LI><a href="#[5af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_roleswap_disconnect_inactive_link (via Veneer)
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_bt_cback (via Veneer)
<LI><a href="#[5a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_find_new_active_a2dp_link_by_priority (via Veneer)
<LI><a href="#[597]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkback_check_bond_flag (via Veneer)
<LI><a href="#[590]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkback_active_node_judge_cur_conn_addr (via Veneer)
<LI><a href="#[584]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkback_todo_queue_remove_plan_profs (via Veneer)
<LI><a href="#[57e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkback_todo_queue_find_node_item (via Veneer)
<LI><a href="#[539]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_topology_dm (via Veneer)
<LI><a href="#[4e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sass_policy_profile_conn_handle (via Veneer)
<LI><a href="#[4e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_dump_link_information (via Veneer)
<LI><a href="#[4d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_finder_handle_event_wakeup_by_rtc (via Veneer)
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_link_policy_ind (via Veneer)
<LI><a href="#[4dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_disconn_need_play (via Veneer)
<LI><a href="#[6c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eq_utils_dsp_param_get (via Veneer)
<LI><a href="#[799]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_finder_cb (via Veneer)
<LI><a href="#[78c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_finder_timeout_cb (via Veneer)
<LI><a href="#[77b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_battery_set_info (via Veneer)
<LI><a href="#[75e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_account_key_find_inuse_account_key (via Veneer)
<LI><a href="#[75b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_account_key_verify_mac (via Veneer)
<LI><a href="#[750]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_sass_set_conn_status (via Veneer)
<LI><a href="#[710]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_personalized_name_store (via Veneer)
<LI><a href="#[760]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_finder_enter_beacon_state (via Veneer)
<LI><a href="#[722]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_account_key_store (via Veneer)
<LI><a href="#[6fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_point_search (via Veneer)
<LI><a href="#[66b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eq_set (via Veneer)
<LI><a href="#[668]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_haraman_eq_init (via Veneer)
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_bt_cback (via Veneer)
<LI><a href="#[637]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_a2dp_stream_start_handle (via Veneer)
<LI><a href="#[62e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_sco_conn_cmpl_handle (via Veneer)
<LI><a href="#[60c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_spp_registered_uuid_check (via Veneer)
<LI><a href="#[5d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_ever_link_information (via Veneer)
<LI><a href="#[5f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bond_pop_sec_diff_link_record (via Veneer)
<LI><a href="#[6bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sass_policy_switch_back (via Veneer)
<LI><a href="#[823]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_ccp_set_active_call_uri (via Veneer)
<LI><a href="#[7f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sass_policy_is_target_drop_device (via Veneer)
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sass_policy_bt_cback (via Veneer)
<LI><a href="#[7c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_sass_compare_account_key_by_idx (via Veneer)
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_msg_rfc_bt_cback (via Veneer)
<LI><a href="#[8df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_sink_add_device (via Veneer)
<LI><a href="#[8dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_bs_find_index_by_bdaddr (via Veneer)
<LI><a href="#[8dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_sd_find_bs (via Veneer)
<LI><a href="#[8c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_apply_sync_pera (via Veneer)
<LI><a href="#[8e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_handle_bass_msg (via Veneer)
<LI><a href="#[83f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_scan_info (via Veneer)
<LI><a href="#[83e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_scan_report (via Veneer)
<LI><a href="#[959]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_license_pid_idx_get (via Veneer)
<LI><a href="#[958]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_license_load_from_ftl (via Veneer)
<LI><a href="#[922]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_ota_write_to_flash (via Veneer)
<LI><a href="#[915]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_ble_process (via Veneer)
<LI><a href="#[9e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spp_disconnect_all (via Veneer)
<LI><a href="#[975]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_find_br_link (via Veneer)
<LI><a href="#[9f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_rfc_find_chann_by_server_chann (via Veneer)
<LI><a href="#[9f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_rfc_find_chann_by_dlci (via Veneer)
<LI><a href="#[b15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_write_skip (via Veneer)
<LI><a href="#[b0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_page_erase (via Veneer)
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_legacy_get_paired_idx (via Veneer)
<LI><a href="#[bc7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_le_find_entry_by_aes (via Veneer)
<LI><a href="#[bcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_set_cccd_data (via Veneer)
<LI><a href="#[bd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_handle_acl_status_info (via Veneer)
<LI><a href="#[b89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_storage_get_srv_num (via Veneer)
<LI><a href="#[b8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_storage_find_srv_by_uuid (via Veneer)
<LI><a href="#[ba9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_storage_find_char_by_uuid (via Veneer)
<LI><a href="#[b98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_storage_add_secondary_service (via Veneer)
<LI><a href="#[baa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_find_include_srv_by_primary (via Veneer)
<LI><a href="#[b91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_check_cccd_enabled (via Veneer)
<LI><a href="#[b8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_enable_char_cccd (via Veneer)
<LI><a href="#[b79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_spec_client_find_by_uuid (via Veneer)
<LI><a href="#[b73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_scan_param_update (via Veneer)
<LI><a href="#[b74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;match_filter (via Veneer)
<LI><a href="#[c55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pac_find_record (via Veneer)
<LI><a href="#[c43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_sync_update_addr (via Veneer)
<LI><a href="#[c4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_sync_find (via Veneer)
<LI><a href="#[c4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_handle_update_bis_info (via Veneer)
<LI><a href="#[cb1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_sass_malloc_key_for_filter (via Veneer)
<LI><a href="#[cb8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_decode_additional_packet (via Veneer)
<LI><a href="#[c8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;base_data_cmp (via Veneer)
<LI><a href="#[c8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_sync_handle_pa_info (via Veneer)
<LI><a href="#[c90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_sync_find_by_adv_info (via Veneer)
<LI><a href="#[c63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_brs_find_by_src_info (via Veneer)
<LI><a href="#[def]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spp_find_link_by_local_server_chann (via Veneer)
<LI><a href="#[dee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spp_find_link_by_dlci (via Veneer)
<LI><a href="#[dd2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_find_link_by_addr (via Veneer)
<LI><a href="#[db4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avrcp_find_link_by_addr (via Veneer)
<LI><a href="#[d9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;a2dp_find_link_by_addr (via Veneer)
<LI><a href="#[ce6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_verify_eik_authkey (via Veneer)
<LI><a href="#[ce4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_verify_authkey (via Veneer)
<LI><a href="#[cca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_key_already_in_account_based_key_list (via Veneer)
<LI><a href="#[e36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_gap_cback (via Veneer)
<LI><a href="#[e13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_check_l2c_collision (via Veneer)
<LI><a href="#[dfb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_find_chann_by_addr (via Veneer)
<LI><a href="#[ff1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_storage_get_char_instance_id (via Veneer)
<LI><a href="#[ff0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_storage_get_srv_instance_id (via Veneer)
<LI><a href="#[102f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdtp_find_link_by_addr (via Veneer)
<LI><a href="#[102a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avctp_find_link_by_addr (via Veneer)
<LI><a href="#[100a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_link_find_by_addr (via Veneer)
<LI><a href="#[1004]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ase_check_cfg_codec_param (via Veneer)
</UL>

<P><STRONG><a name="[2a1]"></a>__aeabi_memcpy</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_write (via Veneer)
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_spec_register (via Veneer)
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_tbl_storage_set_gatt_data (via Veneer)
<LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_tbl_storage_get_gatt_data (via Veneer)
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dis_set_parameter (via Veneer)
<LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_report_spp_iap_event (via Veneer)
<LI><a href="#[3ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_report_le_event (via Veneer)
<LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_report_uart_event (via Veneer)
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_led_load_table (via Veneer)
<LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_cfg_load (via Veneer)
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_bt_cback (via Veneer)
<LI><a href="#[42d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_adv_data_update (via Veneer)
<LI><a href="#[428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_parser_process (via Veneer)
<LI><a href="#[408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_le_set_local_irk (via Veneer)
<LI><a href="#[3f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_common_adv_init (via Veneer)
<LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_gap_gen_scan_rsp_data (via Veneer)
<LI><a href="#[588]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkback_active_node_load (via Veneer)
<LI><a href="#[582]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkback_todo_queue_take_first_node (via Veneer)
<LI><a href="#[6c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_swift_pair_adv_init (via Veneer)
<LI><a href="#[6c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eq_utils_dsp_param_get (via Veneer)
<LI><a href="#[785]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_uecc_compute_public_key (via Veneer)
<LI><a href="#[78d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_adv_update_adv_ei_hash (via Veneer)
<LI><a href="#[7a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_adv_init (via Veneer)
<LI><a href="#[7a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_get_ei (via Veneer)
<LI><a href="#[799]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_finder_cb (via Veneer)
<LI><a href="#[783]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_finder_generate_adv_ei_and_hash (via Veneer)
<LI><a href="#[778]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_msg_loop_check_data_complete (via Veneer)
<LI><a href="#[76b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_personalized_name_read (via Veneer)
<LI><a href="#[75d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_gfps_generate_mac (via Veneer)
<LI><a href="#[733]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_init (via Veneer)
<LI><a href="#[748]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_get_subsequent_pairing_account_key (via Veneer)
<LI><a href="#[715]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_gen_adv_data (via Veneer)
<LI><a href="#[710]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_personalized_name_store (via Veneer)
<LI><a href="#[740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_finder_reset_conn (via Veneer)
<LI><a href="#[722]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_account_key_store (via Veneer)
<LI><a href="#[723]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_account_key_remote_add (via Veneer)
<LI><a href="#[703]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dut_hci_cmd_write_local_name (via Veneer)
<LI><a href="#[66b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eq_set (via Veneer)
<LI><a href="#[671]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eq_create (via Veneer)
<LI><a href="#[673]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_get_eq_data (via Veneer)
<LI><a href="#[62b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_sco_data_send (via Veneer)
<LI><a href="#[662]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_eq_cmd_operate (via Veneer)
<LI><a href="#[657]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_cmd_handle (via Veneer)
<LI><a href="#[6bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_spp_cmd_set_handle (via Veneer)
<LI><a href="#[6a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_cmd_legacy_name_set (via Veneer)
<LI><a href="#[6a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_cmd_get_fw_version (via Veneer)
<LI><a href="#[6a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_cmd_general_cmd_handle (via Veneer)
<LI><a href="#[6a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_cmd_le_name_set (via Veneer)
<LI><a href="#[69b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_spp_service_register (via Veneer)
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_spp_bt_cback (via Veneer)
<LI><a href="#[829]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ccp_client_write_call_cp (via Veneer)
<LI><a href="#[824]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_ccp_parse_payload (via Veneer)
<LI><a href="#[823]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_ccp_set_active_call_uri (via Veneer)
<LI><a href="#[809]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_adv_set_ext_data (via Veneer)
<LI><a href="#[7fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_hmac_sha256 (via Veneer)
<LI><a href="#[7f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dult_handle_info_opcode (via Veneer)
<LI><a href="#[7c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_gfps_send_nak (via Veneer)
<LI><a href="#[7d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_gfps_send_ack (via Veneer)
<LI><a href="#[7d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_msg_le_loop_check_data_complete (via Veneer)
<LI><a href="#[8ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_le_get_dev_ltk (via Veneer)
<LI><a href="#[8cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_get_bis_sync_info (via Veneer)
<LI><a href="#[8c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_apply_sync_pera (via Veneer)
<LI><a href="#[8e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_handle_bass_msg (via Veneer)
<LI><a href="#[8d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_db_init (via Veneer)
<LI><a href="#[87e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ascs_get_ase_data (via Veneer)
<LI><a href="#[873]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_send_iso_data (via Veneer)
<LI><a href="#[861]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_handle_iso_data (via Veneer)
<LI><a href="#[862]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_handle_iso_data (via Veneer)
<LI><a href="#[84f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_mgr_enqueue_iso_data (via Veneer)
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_mgr_probe_cback (via Veneer)
<LI><a href="#[841]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_scan_start (via Veneer)
<LI><a href="#[83e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_scan_report (via Veneer)
<LI><a href="#[96b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_default_dsp_eq_set (via Veneer)
<LI><a href="#[95a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_hall_get_ic_euid (via Veneer)
<LI><a href="#[958]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_license_load_from_ftl (via Veneer)
<LI><a href="#[957]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_license_save_to_ftl (via Veneer)
<LI><a href="#[954]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_send_license_to_dsp (via Veneer)
<LI><a href="#[952]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_send_device_name_to_dsp (via Veneer)
<LI><a href="#[94f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_eq_info_handle (via Veneer)
<LI><a href="#[94c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_devinfo_set (via Veneer)
<LI><a href="#[942]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_devinfo_feature_report (via Veneer)
<LI><a href="#[919]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_report_le_event (via Veneer)
<LI><a href="#[936]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_devinfo_feature_pack (via Veneer)
<LI><a href="#[930]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_ble_ota_payload_handle (via Veneer)
<LI><a href="#[918]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_ota_notification_report (via Veneer)
<LI><a href="#[915]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_ble_process (via Veneer)
<LI><a href="#[9c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_try_general_at_cmd (via Veneer)
<LI><a href="#[9c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_hfp_cback (via Veneer)
<LI><a href="#[9a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_mgr_handle_hfp_msg (via Veneer)
<LI><a href="#[99c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_mgr_handle_acl_msg (via Veneer)
<LI><a href="#[996]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_mgr_handle_gap_msg (via Veneer)
<LI><a href="#[a05]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_data_req (via Veneer)
<LI><a href="#[a8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_ipc_voice_eq_set (via Veneer)
<LI><a href="#[a8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_ipc_record_eq_set (via Veneer)
<LI><a href="#[a8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_ipc_audio_eq_set (via Veneer)
<LI><a href="#[a74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;media_buffer_us_read (via Veneer)
<LI><a href="#[aba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcpy_s (via Veneer)
<LI><a href="#[b0f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_write (via Veneer)
<LI><a href="#[b14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_read (via Veneer)
<LI><a href="#[b13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_cache_load (via Veneer)
<LI><a href="#[b10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_cache_save (via Veneer)
<LI><a href="#[bc5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_le_save_key (via Veneer)
<LI><a href="#[bc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_le_get_key (via Veneer)
<LI><a href="#[bcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_set_cccd_data (via Veneer)
<LI><a href="#[bc6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_handle_authen_key_req_ind (via Veneer)
<LI><a href="#[bbb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_svc_find_char_uuid_by_index (via Veneer)
<LI><a href="#[bb5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_svc_send_data_in_queue (via Veneer)
<LI><a href="#[b9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_storage_srv_list_gen (via Veneer)
<LI><a href="#[b8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_storage_load (via Veneer)
<LI><a href="#[b81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_storage_find_char_desc (via Veneer)
<LI><a href="#[ba9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_storage_find_char_by_uuid (via Veneer)
<LI><a href="#[b98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_storage_add_secondary_service (via Veneer)
<LI><a href="#[b9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_storage_add_primary_service (via Veneer)
<LI><a href="#[b9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_storage_add_include (via Veneer)
<LI><a href="#[ba0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_storage_add_char (via Veneer)
<LI><a href="#[b82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;att_data_covert_to_uuid (via Veneer)
<LI><a href="#[c3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_brs_gen_char_data (via Veneer)
<LI><a href="#[c51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_cp_prase_data (via Veneer)
<LI><a href="#[c4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_handle_cp_data (via Veneer)
<LI><a href="#[c4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_handle_update_bis_info (via Veneer)
<LI><a href="#[c3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_handle_base_data (via Veneer)
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_big_sync_receiver_cb (via Veneer)
<LI><a href="#[c23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ase_gen_char_data (via Veneer)
<LI><a href="#[c2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ase_check_cp_data (via Veneer)
<LI><a href="#[c12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ase_action_update_metadata (via Veneer)
<LI><a href="#[c11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ase_action_enable (via Veneer)
<LI><a href="#[c10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ase_action_cfg_qos (via Veneer)
<LI><a href="#[c0f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ase_action_cfg_codec (via Veneer)
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_legacy_save_bond (via Veneer)
<LI><a href="#[cb1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_sass_malloc_key_for_filter (via Veneer)
<LI><a href="#[cc1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_gen_aes_key (via Veneer)
<LI><a href="#[cb4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_gen_account_key_filter (via Veneer)
<LI><a href="#[cb7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_ase_ctr_concat (via Veneer)
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_attr_write_cb (via Veneer)
<LI><a href="#[cc3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_handle_char_additional_passkey (via Veneer)
<LI><a href="#[cc2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_handle_char_passkey (via Veneer)
<LI><a href="#[cc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_handle_char_kbp (via Veneer)
<LI><a href="#[cbf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_handle_action_request (via Veneer)
<LI><a href="#[cac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sha256_hkdf (via Veneer)
<LI><a href="#[cab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_sass_get_account_key_by_index (via Veneer)
<LI><a href="#[cad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_ctr_concat (via Veneer)
<LI><a href="#[ca4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_gfps_send_data (via Veneer)
<LI><a href="#[c8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;base_data_parse_data (via Veneer)
<LI><a href="#[c8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_sync_handle_pa_info (via Veneer)
<LI><a href="#[c8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_sync_cmp_pa_mapping (via Veneer)
<LI><a href="#[c6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_pa_sync_establish_int (via Veneer)
<LI><a href="#[c71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_big_sync_establish_int (via Veneer)
<LI><a href="#[c6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_big_get_sync_info (via Veneer)
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_big_terminated_proc (via Veneer)
<LI><a href="#[deb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_handle_rfc_data_ind (via Veneer)
<LI><a href="#[dad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avctp_send_data2buf (via Veneer)
<LI><a href="#[db7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avrcp_handle_vendor_BT_SIG_rsp (via Veneer)
<LI><a href="#[db5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avrcp_cmd_enqueue (via Veneer)
<LI><a href="#[d87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;patch_le_bond_handle_auth_key_req_ind (via Veneer)
<LI><a href="#[d91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_vendor_ext_adv_handle_priority_set (via Veneer)
<LI><a href="#[d89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_bond_get_local_irk (via Veneer)
<LI><a href="#[d52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_br_send_fix_chann_data (via Veneer)
<LI><a href="#[cf9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_sass_get_inuse_accountkey (via Veneer)
<LI><a href="#[ce9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aes256_ecb_encrypt (via Veneer)
<LI><a href="#[cf3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_handle_beacon_provision_request (via Veneer)
<LI><a href="#[cf1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_handle_set_eik_request (via Veneer)
<LI><a href="#[cec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_rsp_beacon_provision_state (via Veneer)
<LI><a href="#[cea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_send_rsp (via Veneer)
<LI><a href="#[ce8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_encrypted_eik (via Veneer)
<LI><a href="#[ce7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_decrypted_eik (via Veneer)
<LI><a href="#[ce6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_verify_eik_authkey (via Veneer)
<LI><a href="#[ce5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_rsp_generate_authkey (via Veneer)
<LI><a href="#[ce4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_verify_authkey (via Veneer)
<LI><a href="#[ce1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_get_owner_accountkey (via Veneer)
<LI><a href="#[ccb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_add_key_into_account_based_key_list (via Veneer)
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__buffer_write (via Veneer)
<LI><a href="#[e36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_gap_cback (via Veneer)
<LI><a href="#[e1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_handle_rpn (via Veneer)
<LI><a href="#[e0e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_send_uih (via Veneer)
<LI><a href="#[e05]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_send_frame (via Veneer)
<LI><a href="#[eff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_ipc_voice_prompt_send (via Veneer)
<LI><a href="#[efb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_ipc_composite_data_send (via Veneer)
<LI><a href="#[f00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_ipc_action_send (via Veneer)
<LI><a href="#[fa7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wr_queue_send (via Veneer)
<LI><a href="#[fa6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wr_queue_rcv (via Veneer)
<LI><a href="#[f44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aes256_key_swap (via Veneer)
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_cbs (via Veneer)
<LI><a href="#[1048]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notification_buffer_frame_write (via Veneer)
<LI><a href="#[103e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdtp_handle_signal_ind (via Veneer)
<LI><a href="#[103b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdtp_rx_cmd_proc (via Veneer)
<LI><a href="#[1035]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdtp_capability_check (via Veneer)
<LI><a href="#[102c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avctp_handle_l2c_data_ind (via Veneer)
<LI><a href="#[1021]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_set_local_ltk (via Veneer)
<LI><a href="#[10a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbedtls_sha256_update_ret (via Veneer)
<LI><a href="#[1094]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_hal_codec_action (via Veneer)
<LI><a href="#[1074]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_mgr_sport_path_take (via Veneer)
</UL>

<P><STRONG><a name="[336]"></a>__aeabi_memset</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_cfg_reset (via Veneer)
<LI><a href="#[783]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_finder_generate_adv_ei_and_hash (via Veneer)
<LI><a href="#[75d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_gfps_generate_mac (via Veneer)
<LI><a href="#[7fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_hmac_sha256 (via Veneer)
<LI><a href="#[e36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_gap_cback (via Veneer)
<LI><a href="#[f8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_config_init (via Veneer)
<LI><a href="#[fe9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hmac_sha256_starts (via Veneer)
<LI><a href="#[1056]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fsm_create_trans_index_table (via Veneer)
<LI><a href="#[1034]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdtp_remote_capability_parse (via Veneer)
</UL>

<P><STRONG><a name="[2b3]"></a>__aeabi_memclr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_gpio_initial (via Veneer)
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_tbl_storage_add_dev (via Veneer)
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_tbl_storage_remove_dev (via Veneer)
<LI><a href="#[454]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_sco_link_switch (via Veneer)
<LI><a href="#[5e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_startup_event_handle (via Veneer)
<LI><a href="#[783]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_finder_generate_adv_ei_and_hash (via Veneer)
<LI><a href="#[75a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_account_key_clear (via Veneer)
<LI><a href="#[730]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_account_key_init (via Veneer)
<LI><a href="#[673]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_get_eq_data (via Veneer)
<LI><a href="#[969]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_get_default_eq_info (via Veneer)
<LI><a href="#[932]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_ble_ota_handle (via Veneer)
<LI><a href="#[98b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_handle_sco_disconnect (via Veneer)
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pad_store (via Veneer)
<LI><a href="#[b49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_handle_conn_state_evt (via Veneer)
<LI><a href="#[b17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_cache_to_flash (via Veneer)
<LI><a href="#[b10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_cache_save (via Veneer)
<LI><a href="#[c1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ascs_change_state (via Veneer)
<LI><a href="#[cb2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_sass_set_iv (via Veneer)
<LI><a href="#[cb1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_sass_malloc_key_for_filter (via Veneer)
<LI><a href="#[cac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sha256_hkdf (via Veneer)
<LI><a href="#[de5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_handle_cnum (via Veneer)
<LI><a href="#[dde]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_handle_ccwa (via Veneer)
<LI><a href="#[ddc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_handle_clip (via Veneer)
<LI><a href="#[dda]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_handle_clcc (via Veneer)
<LI><a href="#[d99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;a2dp_free_link (via Veneer)
<LI><a href="#[e36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_gap_cback (via Veneer)
<LI><a href="#[ff9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;imp_ftl_load (via Veneer)
<LI><a href="#[10a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbedtls_sha256_finish_ret (via Veneer)
<LI><a href="#[999]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncpy (via Veneer)
</UL>

<P><STRONG><a name="[2b1]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_mgr_init (via Veneer)
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_profile_init (via Veneer)
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ipc_init (via Veneer)
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_point_init (via Veneer)
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gaps_client_init (via Veneer)
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_tbl_storage_add_dev (via Veneer)
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_tbl_storage_clear (via Veneer)
<LI><a href="#[3c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_free_le_link (via Veneer)
<LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_eq_reset_unsaved (via Veneer)
<LI><a href="#[3e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_msg_le_auth (via Veneer)
<LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_point_link_num_changed (via Veneer)
<LI><a href="#[3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_gap_ble_mgr_init (via Veneer)
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_cback (via Veneer)
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_timer_cback (via Veneer)
<LI><a href="#[5c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_event_ind (via Veneer)
<LI><a href="#[588]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkback_active_node_load (via Veneer)
<LI><a href="#[587]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkback_active_node_init (via Veneer)
<LI><a href="#[57c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkback_todo_queue_init (via Veneer)
<LI><a href="#[53c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_free_br_link (via Veneer)
<LI><a href="#[518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_default_connect (via Veneer)
<LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_startup (via Veneer)
<LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_enter_pairing_mode (via Veneer)
<LI><a href="#[4ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_disconnect (via Veneer)
<LI><a href="#[6c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eq_utils_dsp_param_get (via Veneer)
<LI><a href="#[785]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_uecc_compute_public_key (via Veneer)
<LI><a href="#[7a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_finder_ftl_init (via Veneer)
<LI><a href="#[799]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_finder_cb (via Veneer)
<LI><a href="#[783]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_finder_generate_adv_ei_and_hash (via Veneer)
<LI><a href="#[781]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_finder_generate_hash_flag (via Veneer)
<LI><a href="#[769]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_finder_handle_factory_reset (via Veneer)
<LI><a href="#[75d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_gfps_generate_mac (via Veneer)
<LI><a href="#[715]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_gen_adv_data (via Veneer)
<LI><a href="#[72f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_personalized_name_send (via Veneer)
<LI><a href="#[723]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_account_key_remote_add (via Veneer)
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_le_disconnect_cb (via Veneer)
<LI><a href="#[665]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eq_utils_map_get (via Veneer)
<LI><a href="#[673]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_get_eq_data (via Veneer)
<LI><a href="#[668]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_haraman_eq_init (via Veneer)
<LI><a href="#[634]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_eq_create (via Veneer)
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_bt_cback (via Veneer)
<LI><a href="#[637]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_a2dp_stream_start_handle (via Veneer)
<LI><a href="#[62e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_sco_conn_cmpl_handle (via Veneer)
<LI><a href="#[608]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_state_machine (via Veneer)
<LI><a href="#[67a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_msg_prof_disconn (via Veneer)
<LI><a href="#[679]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_msg_prof_conn (via Veneer)
<LI><a href="#[838]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_pacs_init (via Veneer)
<LI><a href="#[833]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_pacs_set_pac (via Veneer)
<LI><a href="#[817]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_ascs_free_ase_entry (via Veneer)
<LI><a href="#[7fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_hmac_sha256 (via Veneer)
<LI><a href="#[7fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_get_recovery_key (via Veneer)
<LI><a href="#[7f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dult_handle_ctrl_opcode (via Veneer)
<LI><a href="#[7f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dult_handle_info_opcode (via Veneer)
<LI><a href="#[8b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_bs_clear_device (via Veneer)
<LI><a href="#[8e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_handle_bass_msg (via Veneer)
<LI><a href="#[8d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_db_init (via Veneer)
<LI><a href="#[87e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ascs_get_ase_data (via Veneer)
<LI><a href="#[897]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_free_link (via Veneer)
<LI><a href="#[886]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_track_create (via Veneer)
<LI><a href="#[871]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_bond_action (via Veneer)
<LI><a href="#[86d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cap_init (via Veneer)
<LI><a href="#[845]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_vcs_init (via Veneer)
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_dsp_event_cback (via Veneer)
<LI><a href="#[969]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_get_default_eq_info (via Veneer)
<LI><a href="#[959]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_license_pid_idx_get (via Veneer)
<LI><a href="#[958]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_license_load_from_ftl (via Veneer)
<LI><a href="#[957]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_license_save_to_ftl (via Veneer)
<LI><a href="#[94f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_eq_info_handle (via Veneer)
<LI><a href="#[94c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_devinfo_set (via Veneer)
<LI><a href="#[91a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;harman_ble_ota_state_reset (via Veneer)
<LI><a href="#[915]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_ble_process (via Veneer)
<LI><a href="#[9c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_hfp_cback (via Veneer)
<LI><a href="#[9bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_a2dp_cback (via Veneer)
<LI><a href="#[976]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_free_br_link (via Veneer)
<LI><a href="#[be6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_le_delete_key_entry (via Veneer)
<LI><a href="#[bc5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_le_save_key (via Veneer)
<LI><a href="#[bc6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_handle_authen_key_req_ind (via Veneer)
<LI><a href="#[bbb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_svc_find_char_uuid_by_index (via Veneer)
<LI><a href="#[ba8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_service_add (via Veneer)
<LI><a href="#[b85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_send_cccd_cfg_result (via Veneer)
<LI><a href="#[b83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_handle_read_uuid_result (via Veneer)
<LI><a href="#[c42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_brs_delete (via Veneer)
<LI><a href="#[c1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ascs_change_state (via Veneer)
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_legacy_delete_bond (via Veneer)
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_legacy_clear_all_keys (via Veneer)
<LI><a href="#[cc1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_gen_aes_key (via Veneer)
<LI><a href="#[cb4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_gen_account_key_filter (via Veneer)
<LI><a href="#[cc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_handle_char_kbp (via Veneer)
<LI><a href="#[cac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sha256_hkdf (via Veneer)
<LI><a href="#[ca2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tbs_client_init (via Veneer)
<LI><a href="#[c9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tbs_client_handle_callback (via Veneer)
<LI><a href="#[c9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcs_client_init (via Veneer)
<LI><a href="#[c7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_sync_handle_gap_cb (via Veneer)
<LI><a href="#[c7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_link_free (via Veneer)
<LI><a href="#[ded]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spp_free_link (via Veneer)
<LI><a href="#[de4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_handle_cops (via Veneer)
<LI><a href="#[dd1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_free_link (via Veneer)
<LI><a href="#[db3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avrcp_free_link (via Veneer)
<LI><a href="#[db0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avrcp_cmd_process (via Veneer)
<LI><a href="#[d87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;patch_le_bond_handle_auth_key_req_ind (via Veneer)
<LI><a href="#[d8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_vendor_set_priority (via Veneer)
<LI><a href="#[cfc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_ipc_init (via Veneer)
<LI><a href="#[cf3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_handle_beacon_provision_request (via Veneer)
<LI><a href="#[cef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_rsp_key_recovery (via Veneer)
<LI><a href="#[cec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_rsp_beacon_provision_state (via Veneer)
<LI><a href="#[ce6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_verify_eik_authkey (via Veneer)
<LI><a href="#[ce5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_rsp_generate_authkey (via Veneer)
<LI><a href="#[ce4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_verify_authkey (via Veneer)
<LI><a href="#[ce3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_get_utp_key (via Veneer)
<LI><a href="#[ce2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_get_ring_key (via Veneer)
<LI><a href="#[ccd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ecdh_shared_secret_enhanced (via Veneer)
<LI><a href="#[ccc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_gen_ecdh_key (via Veneer)
<LI><a href="#[e0a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_alloc_chann (via Veneer)
<LI><a href="#[eec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_ipc_get_algo_status (via Veneer)
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_ipc_hal_cback (via Veneer)
<LI><a href="#[ed8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_interval_evaluator_reset (via Veneer)
<LI><a href="#[e8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_mgr_init (via Veneer)
<LI><a href="#[ea6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_ipc_set_volume_level (via Veneer)
<LI><a href="#[f8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_config_init (via Veneer)
<LI><a href="#[f86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_config_default (via Veneer)
<LI><a href="#[f71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_set_sample_rate (via Veneer)
<LI><a href="#[fef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hmac_sha256_crypt (via Veneer)
<LI><a href="#[fe9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hmac_sha256_starts (via Veneer)
<LI><a href="#[fe8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hmac_sha256_init (via Veneer)
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;x_side_default (via Veneer)
<LI><a href="#[1033]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdtp_free_link (via Veneer)
<LI><a href="#[102e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avctp_callback (via Veneer)
<LI><a href="#[1029]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avctp_free_link (via Veneer)
<LI><a href="#[10a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbedtls_sha256_finish_ret (via Veneer)
</UL>

<P><STRONG><a name="[330]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_license_get (via Veneer)
<LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_cfg_reset (via Veneer)
<LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_is_test_equipment (via Veneer)
<LI><a href="#[4d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_finder_handle_event_wakeup_by_rtc (via Veneer)
<LI><a href="#[799]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_finder_cb (via Veneer)
<LI><a href="#[78c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_finder_timeout_cb (via Veneer)
<LI><a href="#[760]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_finder_enter_beacon_state (via Veneer)
<LI><a href="#[62f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_create (via Veneer)
<LI><a href="#[5f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bond_pop_sec_diff_link_record (via Veneer)
<LI><a href="#[6be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dsp_cfg_gain_table_load (via Veneer)
<LI><a href="#[6bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_spp_cmd_set_handle (via Veneer)
<LI><a href="#[7fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_get_recovery_key (via Veneer)
<LI><a href="#[8ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_le_get_dev_ltk (via Veneer)
<LI><a href="#[8e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_sync_get_info (via Veneer)
<LI><a href="#[87e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ascs_get_ase_data (via Veneer)
<LI><a href="#[954]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_send_license_to_dsp (via Veneer)
<LI><a href="#[90a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_legacy_bt_cback (via Veneer)
<LI><a href="#[996]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_mgr_handle_gap_msg (via Veneer)
<LI><a href="#[a0d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;media_buffer_downstream_dsp (via Veneer)
<LI><a href="#[a59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;media_buffer_attach (via Veneer)
<LI><a href="#[b37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uecc_key_parameter_init (via Veneer)
<LI><a href="#[b56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_init (via Veneer)
<LI><a href="#[c7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_sync_handle_gap_cb (via Veneer)
<LI><a href="#[c77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vcs_add_service (via Veneer)
<LI><a href="#[ce3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_get_utp_key (via Veneer)
<LI><a href="#[ce2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_get_ring_key (via Veneer)
<LI><a href="#[e4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;media_buffer_construct (via Veneer)
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__buffer_write (via Veneer)
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_record_cfg_setting (via Veneer)
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_voice_cfg_setting (via Veneer)
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_audio_cfg_setting (via Veneer)
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_notification_cfg_setting (via Veneer)
<LI><a href="#[ee9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_ipc_set_lc3_encoder (via Veneer)
<LI><a href="#[ee8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_ipc_set_lc3_decoder (via Veneer)
<LI><a href="#[1013]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cas_add_service (via Veneer)
<LI><a href="#[1009]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pacs_create_table (via Veneer)
<LI><a href="#[1001]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_ascs_table (via Veneer)
</UL>

<P><STRONG><a name="[ac5]"></a>vAssertHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[696]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adp_update_isr_cb (via Veneer)
<LI><a href="#[aba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcpy_s (via Veneer)
<LI><a href="#[afa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_cb (via Veneer)
<LI><a href="#[10f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_nor_erase_suspend_check
<LI><a href="#[10f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_nor_erase_resume_check
<LI><a href="#[10fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_nor_check_is_erasing
<LI><a href="#[1079]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_drv_trx_config_set (via Veneer)
<LI><a href="#[1081]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_drv_reset (via Veneer)
<LI><a href="#[1083]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_drv_misc_config_set (via Veneer)
<LI><a href="#[107e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_drv_enable_module (via Veneer)
<LI><a href="#[1080]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_drv_codec_sel (via Veneer)
<LI><a href="#[107f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_drv_clock_src_sel (via Veneer)
</UL>

<P><STRONG><a name="[aee]"></a>count_clk_by_div</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[aed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_dsp1_freq (via Veneer)
</UL>

<P><STRONG><a name="[286]"></a>platform_random</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_init (via Veneer)
<LI><a href="#[41a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_device_rpa_handle_engage_role_decided (via Veneer)
<LI><a href="#[407]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_device_irk_handle_power_on (via Veneer)
<LI><a href="#[788]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_finder_start_update_random_window_timer (via Veneer)
<LI><a href="#[76c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_send_personalized_name (via Veneer)
<LI><a href="#[727]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_send_passkey (via Veneer)
<LI><a href="#[cc4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_send_additional_passkey_response (via Veneer)
<LI><a href="#[715]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_gen_adv_data (via Veneer)
<LI><a href="#[7b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_gen_random_nonce (via Veneer)
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_read_cb (via Veneer)
<LI><a href="#[cbb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_send_kbp_response_le (via Veneer)
<LI><a href="#[cb9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_send_kbp_response (via Veneer)
<LI><a href="#[cf3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_handle_beacon_provision_request (via Veneer)
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uEcc_rng_function (via Veneer)
</UL>

<P><STRONG><a name="[929]"></a>get_temp_ota_bank_addr_by_img_id</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[928]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_ota_clear_notready_flag (via Veneer)
</UL>

<P><STRONG><a name="[1266]"></a>sys_timestamp_get_from_hw_timer_us</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE), UNUSED)
<BR><BR>[Called By]<UL></UL>

<P><STRONG><a name="[294]"></a>trace_string</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main (via Veneer)
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_load_from_module (via Veneer)
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_le_resolve_random_address (via Veneer)
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_le_find_key_entry (via Veneer)
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_tbl_storage_remove (via Veneer)
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_tbl_get_identity_addr (via Veneer)
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_wait_ota_report (via Veneer)
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;transmit_srv_write_cb (via Veneer)
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;transmit_srv_tx_data (via Veneer)
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;transmit_set_parameter (via Veneer)
<LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_transfer_push_data_queue (via Veneer)
<LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_charger_harman_low_bat_warning_vp (via Veneer)
<LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_vp_data_header_get (via Veneer)
<LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_is_test_equipment (via Veneer)
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_bt_cback (via Veneer)
<LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_iphone_abs_vol_sync_abs_vol (via Veneer)
<LI><a href="#[486]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_lr_balance_set (via Veneer)
<LI><a href="#[490]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_avrcp_set_vol_is_changed (via Veneer)
<LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_hfp_batt_level_report (via Veneer)
<LI><a href="#[480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_adjust_sco_window (via Veneer)
<LI><a href="#[466]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_set_vol_is_changed (via Veneer)
<LI><a href="#[455]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_update_call_status (via Veneer)
<LI><a href="#[42f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_set_random (via Veneer)
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_common_adv_callback (via Veneer)
<LI><a href="#[428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_parser_process (via Veneer)
<LI><a href="#[426]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_le_common_adv_update (via Veneer)
<LI><a href="#[422]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gaps_gatt_client_callback (via Veneer)
<LI><a href="#[40a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_adv_update_rpa (via Veneer)
<LI><a href="#[408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_le_set_local_irk (via Veneer)
<LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_update_rpa (via Veneer)
<LI><a href="#[41f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_handle_b2s_connected (via Veneer)
<LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_common_adv_handle_engage_role_decided (via Veneer)
<LI><a href="#[41a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_device_rpa_handle_engage_role_decided (via Veneer)
<LI><a href="#[407]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_device_irk_handle_power_on (via Veneer)
<LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_mgr_handle_gap_msg (via Veneer)
<LI><a href="#[3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_handle_gap_cb (via Veneer)
<LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sass_handle_le_dm (via Veneer)
<LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_device_handle_b2s_ble_bonded (via Veneer)
<LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_point_link_permission_check (via Veneer)
<LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_point_link_num_changed (via Veneer)
<LI><a href="#[3fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_rand_addr_init (via Veneer)
<LI><a href="#[3f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_common_adv_init (via Veneer)
<LI><a href="#[609]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_connected (via Veneer)
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_cback (via Veneer)
<LI><a href="#[5e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_startup_event_handle (via Veneer)
<LI><a href="#[59d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_msg_notify_multipoint_switch (via Veneer)
<LI><a href="#[5b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_reconnect_inactive_link (via Veneer)
<LI><a href="#[5af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_roleswap_disconnect_inactive_link (via Veneer)
<LI><a href="#[5a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_judge_active_a2dp_idx_and_qos (via Veneer)
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_bt_cback (via Veneer)
<LI><a href="#[582]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkback_todo_queue_take_first_node (via Veneer)
<LI><a href="#[57d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkback_todo_queue_all_node (via Veneer)
<LI><a href="#[572]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkback_profile_disconnect_start (via Veneer)
<LI><a href="#[56b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkback_profile_connect_start (via Veneer)
<LI><a href="#[568]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkback_profile_search_start (via Veneer)
<LI><a href="#[567]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkback_print_active_node (via Veneer)
<LI><a href="#[792]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_finder_rtc_wakeup_save_info (via Veneer)
<LI><a href="#[4f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_harman_get_active_hf_idx (via Veneer)
<LI><a href="#[4e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sass_policy_profile_conn_handle (via Veneer)
<LI><a href="#[4bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_license_product_info_dump (via Veneer)
<LI><a href="#[4e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_dump_link_information (via Veneer)
<LI><a href="#[4c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_adv_init (via Veneer)
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_link_policy_ind (via Veneer)
<LI><a href="#[6c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_swift_pair_adv_init (via Veneer)
<LI><a href="#[6c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eq_utils_dsp_param_get (via Veneer)
<LI><a href="#[784]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_encrypted_beacon_data (via Veneer)
<LI><a href="#[78d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_adv_update_adv_ei_hash (via Veneer)
<LI><a href="#[7a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_finder_ftl_init (via Veneer)
<LI><a href="#[799]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_finder_cb (via Veneer)
<LI><a href="#[783]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_finder_generate_adv_ei_and_hash (via Veneer)
<LI><a href="#[781]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_finder_generate_hash_flag (via Veneer)
<LI><a href="#[773]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_msg_report_session_nonce (via Veneer)
<LI><a href="#[76c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_send_personalized_name (via Veneer)
<LI><a href="#[76b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_personalized_name_read (via Veneer)
<LI><a href="#[765]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_set_identity_address (via Veneer)
<LI><a href="#[761]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_finder_handle_power_off (via Veneer)
<LI><a href="#[769]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_finder_handle_factory_reset (via Veneer)
<LI><a href="#[75d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_gfps_generate_mac (via Veneer)
<LI><a href="#[75e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_account_key_find_inuse_account_key (via Veneer)
<LI><a href="#[75b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_account_key_verify_mac (via Veneer)
<LI><a href="#[727]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_send_passkey (via Veneer)
<LI><a href="#[cc4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_send_additional_passkey_response (via Veneer)
<LI><a href="#[750]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_sass_set_conn_status (via Veneer)
<LI><a href="#[74f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_sass_get_conn_status (via Veneer)
<LI><a href="#[741]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_reset_aeskey_and_pairing_status (via Veneer)
<LI><a href="#[715]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_gen_adv_data (via Veneer)
<LI><a href="#[710]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_personalized_name_store (via Veneer)
<LI><a href="#[732]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_personalized_name_init (via Veneer)
<LI><a href="#[758]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_msg_notify_connection_status (via Veneer)
<LI><a href="#[730]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_account_key_init (via Veneer)
<LI><a href="#[72d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_cb_handle_kbp_write_req (via Veneer)
<LI><a href="#[72a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_cb_handle_action_req (via Veneer)
<LI><a href="#[712]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_adv_start (via Veneer)
<LI><a href="#[70f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_cb_handle_additional_data (via Veneer)
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_adv_callback (via Veneer)
<LI><a href="#[6ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_count_num (via Veneer)
<LI><a href="#[673]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_get_eq_data (via Veneer)
<LI><a href="#[62e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_sco_conn_cmpl_handle (via Veneer)
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_policy_cback (via Veneer)
<LI><a href="#[5e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_link_role_switch (via Veneer)
<LI><a href="#[6bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sass_policy_switch_back (via Veneer)
<LI><a href="#[6ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sass_policy_switch_active_audio_source (via Veneer)
<LI><a href="#[6bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_spp_cmd_set_handle (via Veneer)
<LI><a href="#[824]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_ccp_parse_payload (via Veneer)
<LI><a href="#[823]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_ccp_set_active_call_uri (via Veneer)
<LI><a href="#[7fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_hmac_sha256 (via Veneer)
<LI><a href="#[7fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_get_recovery_key (via Veneer)
<LI><a href="#[7f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sass_policy_is_target_drop_device (via Veneer)
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sass_policy_bt_cback (via Veneer)
<LI><a href="#[7c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_gfps_notify_connection_status (via Veneer)
<LI><a href="#[7d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sass_policy_set_capability (via Veneer)
<LI><a href="#[7d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sass_policy_initiated_connection (via Veneer)
<LI><a href="#[7d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_msg_le_loop_check_data_complete (via Veneer)
<LI><a href="#[7d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_msg_handle_data_transfer (via Veneer)
<LI><a href="#[7cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_msg_update_inuse_account_key_index (via Veneer)
<LI><a href="#[8e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_bs_handle_pa_info_sync (via Veneer)
<LI><a href="#[8df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_sink_add_device (via Veneer)
<LI><a href="#[8dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_sd_find_bs (via Veneer)
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_sync_cb (via Veneer)
<LI><a href="#[8e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_handle_bass_msg (via Veneer)
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_audio_cback (via Veneer)
<LI><a href="#[89f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_handle_ascs_msg (via Veneer)
<LI><a href="#[88e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_setup_data_path (via Veneer)
<LI><a href="#[871]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_bond_action (via Veneer)
<LI><a href="#[86d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cap_init (via Veneer)
<LI><a href="#[859]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_stream_switch (via Veneer)
<LI><a href="#[83e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_scan_report (via Veneer)
<LI><a href="#[956]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_license_gfps_info_dump (via Veneer)
<LI><a href="#[954]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_send_license_to_dsp (via Veneer)
<LI><a href="#[953]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_send_bd_addr_to_dsp (via Veneer)
<LI><a href="#[952]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_send_device_name_to_dsp (via Veneer)
<LI><a href="#[94c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_devinfo_set (via Veneer)
<LI><a href="#[949]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_devinfo_get (via Veneer)
<LI><a href="#[942]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_devinfo_feature_report (via Veneer)
<LI><a href="#[93a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_vendor_cmd_process (via Veneer)
<LI><a href="#[91c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;harman_get_active_mobile_cmd_link (via Veneer)
<LI><a href="#[919]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_report_le_event (via Veneer)
<LI><a href="#[920]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_ota_sub_image_control_header_check (via Veneer)
<LI><a href="#[915]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_ble_process (via Veneer)
<LI><a href="#[914]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_ble_generate_bt_mac_crc (via Veneer)
<LI><a href="#[904]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_stream_pause (via Veneer)
<LI><a href="#[9e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spp_send_data (via Veneer)
<LI><a href="#[9e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spp_send_credit (via Veneer)
<LI><a href="#[9e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spp_disconnect_req (via Veneer)
<LI><a href="#[9e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spp_connect_req (via Veneer)
<LI><a href="#[9e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spp_connect_cfm (via Veneer)
<LI><a href="#[9c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_hfp_cback (via Veneer)
<LI><a href="#[9c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;a2dp_signal_connect_req (via Veneer)
<LI><a href="#[9bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_a2dp_cback (via Veneer)
<LI><a href="#[9b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_create (via Veneer)
<LI><a href="#[9b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_sniff_mode_enter (via Veneer)
<LI><a href="#[97c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_sniff_mode_exit (via Veneer)
<LI><a href="#[a08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_disconn_req (via Veneer)
<LI><a href="#[a0b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_conn_req (via Veneer)
<LI><a href="#[a03]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_conn_cfm (via Veneer)
<LI><a href="#[9ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avrcp_disconnect_req (via Veneer)
<LI><a href="#[9f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avrcp_connect_req (via Veneer)
<LI><a href="#[b29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;partition_init (via Veneer)
<LI><a href="#[b23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_save_to_module_imp (via Veneer)
<LI><a href="#[bec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_storage_common_init (via Veneer)
<LI><a href="#[be7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_save_le_remote_bd (via Veneer)
<LI><a href="#[beb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_le_storage_init (via Veneer)
<LI><a href="#[bf1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_set_high_priority (via Veneer)
<LI><a href="#[bf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_priority_queue_delete (via Veneer)
<LI><a href="#[bf3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_priority_queue_add (via Veneer)
<LI><a href="#[bef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_le_resolve_local_rpa (via Veneer)
<LI><a href="#[be0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_le_key_entry_init (via Veneer)
<LI><a href="#[bda]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_legacy_key_init (via Veneer)
<LI><a href="#[bcb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_get_info_from_addr (via Veneer)
<LI><a href="#[bd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_handle_acl_status_info (via Veneer)
<LI><a href="#[bc6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_handle_authen_key_req_ind (via Veneer)
<LI><a href="#[bbe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_handle_authen_result_ind (via Veneer)
<LI><a href="#[b8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_storage_print (via Veneer)
<LI><a href="#[b76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_check_link_int (via Veneer)
<LI><a href="#[b6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_scan_hdl_check_int (via Veneer)
<LI><a href="#[b67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_handle_conn_state (via Veneer)
<LI><a href="#[c59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pac_print_info (via Veneer)
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_attr_write_cb (via Veneer)
<LI><a href="#[c51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_cp_prase_data (via Veneer)
<LI><a href="#[c0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_cfg_parse (via Veneer)
<LI><a href="#[c12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ase_action_update_metadata (via Veneer)
<LI><a href="#[c11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ase_action_enable (via Veneer)
<LI><a href="#[c0f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ase_action_cfg_codec (via Veneer)
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ascs_attr_write_cb (via Veneer)
<LI><a href="#[bf6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_save_legacy_remote_bd (via Veneer)
<LI><a href="#[cb1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_sass_malloc_key_for_filter (via Veneer)
<LI><a href="#[cc1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_gen_aes_key (via Veneer)
<LI><a href="#[cb4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_gen_account_key_filter (via Veneer)
<LI><a href="#[cc9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_set_random_nonce (via Veneer)
<LI><a href="#[cc7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_handle_beacon_action (via Veneer)
<LI><a href="#[cb7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_ase_ctr_concat (via Veneer)
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_read_cb (via Veneer)
<LI><a href="#[cc6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_handle_char_additional_data (via Veneer)
<LI><a href="#[cc5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_handle_char_account_key (via Veneer)
<LI><a href="#[cc3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_handle_char_additional_passkey (via Veneer)
<LI><a href="#[cc2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_handle_char_passkey (via Veneer)
<LI><a href="#[cbf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_handle_action_request (via Veneer)
<LI><a href="#[cbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_decrypt_kbp_request (via Veneer)
<LI><a href="#[cbb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_send_kbp_response_le (via Veneer)
<LI><a href="#[cb9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_send_kbp_response (via Veneer)
<LI><a href="#[cb8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_decode_additional_packet (via Veneer)
<LI><a href="#[caf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_gen_battery_info (via Veneer)
<LI><a href="#[cab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_sass_get_account_key_by_index (via Veneer)
<LI><a href="#[cad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_ctr_concat (via Veneer)
<LI><a href="#[c81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bc_sync_handle_check_int (via Veneer)
<LI><a href="#[df7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spp_handle_data_rsp (via Veneer)
<LI><a href="#[df6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spp_handle_data_ind (via Veneer)
<LI><a href="#[df3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spp_handle_disconn_cmpl (via Veneer)
<LI><a href="#[df2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spp_handle_conn_cmpl (via Veneer)
<LI><a href="#[df0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spp_handle_conn_ind (via Veneer)
<LI><a href="#[dea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_handle_rfc_conn_cmpl (via Veneer)
<LI><a href="#[de6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_handle_at_rsp (via Veneer)
<LI><a href="#[dad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avctp_send_data2buf (via Veneer)
<LI><a href="#[dbf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avctp_connect_req (via Veneer)
<LI><a href="#[dc6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avrcp_handle_disconn_ind (via Veneer)
<LI><a href="#[dc4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avrcp_handle_conn_cmpl_ind (via Veneer)
<LI><a href="#[dc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avrcp_handle_conn_ind (via Veneer)
<LI><a href="#[db3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avrcp_free_link (via Veneer)
<LI><a href="#[db1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avrcp_tout_callback (via Veneer)
<LI><a href="#[da3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdtp_stream_disconnect_req (via Veneer)
<LI><a href="#[d9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdtp_stream_connect_req (via Veneer)
<LI><a href="#[1037]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdtp_signal_set_cfg_req (via Veneer)
<LI><a href="#[1038]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdtp_signal_open_req (via Veneer)
<LI><a href="#[1036]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdtp_signal_get_capability_req (via Veneer)
<LI><a href="#[d9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdtp_signal_discover_req (via Veneer)
<LI><a href="#[da2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdtp_signal_disconnect_req (via Veneer)
<LI><a href="#[da6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdtp_signal_delay_report_req (via Veneer)
<LI><a href="#[da4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdtp_signal_connect_req (via Veneer)
<LI><a href="#[da5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdtp_signal_close_req (via Veneer)
<LI><a href="#[1030]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdtp_signal_abort_req (via Veneer)
<LI><a href="#[d9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;a2dp_stream_connect_req (via Veneer)
<LI><a href="#[d98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;a2dp_alloc_link (via Veneer)
<LI><a href="#[cf9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_sass_get_inuse_accountkey (via Veneer)
<LI><a href="#[cf3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_handle_beacon_provision_request (via Veneer)
<LI><a href="#[cf1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_handle_set_eik_request (via Veneer)
<LI><a href="#[cea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_send_rsp (via Veneer)
<LI><a href="#[ce8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_encrypted_eik (via Veneer)
<LI><a href="#[ce7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_decrypted_eik (via Veneer)
<LI><a href="#[ce3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_get_utp_key (via Veneer)
<LI><a href="#[ce2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_get_ring_key (via Veneer)
<LI><a href="#[ce1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_get_owner_accountkey (via Veneer)
<LI><a href="#[ce0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_get_random_nonce (via Veneer)
<LI><a href="#[ccc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_gen_ecdh_key (via Veneer)
<LI><a href="#[e36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_gap_cback (via Veneer)
<LI><a href="#[e34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_handle_acl_status_info (via Veneer)
<LI><a href="#[e22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_handle_l2c_conn_rsp (via Veneer)
<LI><a href="#[f37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hw_timer_pool_free (via Veneer)
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hw_timer_pm_check (via Veneer)
<LI><a href="#[1042]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdtp_handle_conn_req (via Veneer)
<LI><a href="#[1039]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdtp_cmd_bad_state_proc (via Veneer)
<LI><a href="#[1032]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdtp_alloc_link (via Veneer)
<LI><a href="#[1031]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdtp_tout_cback (via Veneer)
<LI><a href="#[1008]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ltv_util_check_format_int (via Veneer)
<LI><a href="#[fff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_priority_sort_get_int (via Veneer)
<LI><a href="#[1054]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fsm_run (via Veneer)
</UL>

<P><STRONG><a name="[2f0]"></a>log_module_trace_set</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main (via Veneer)
<LI><a href="#[4c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_bt_and_ble_ready_check (via Veneer)
</UL>

<P><STRONG><a name="[fb8]"></a>dsp_module_register_log</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[fb4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shm_enable (via Veneer)
</UL>

<P><STRONG><a name="[fbc]"></a>flash_nor_get_addr_base</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[b08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_nor_set_bp_lv_locked (via Veneer)
</UL>

<P><STRONG><a name="[273]"></a>adc_mgr_read_data_req</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_adc_interrupt_handler (via Veneer)
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_usb_adc_interrupt_handler (via Veneer)
</UL>

<P><STRONG><a name="[b05]"></a>flash_nor_get_bank_addr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[678]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_partition_addr_get (via Veneer)
</UL>

<P><STRONG><a name="[1248]"></a>flash_nor_get_bank_size</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE), UNUSED)
<BR><BR>[Called By]<UL></UL>

<P><STRONG><a name="[108e]"></a>flash_nor_is_request_blocking</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[108d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bin_loader_driver_flash_to_memory (via Veneer)
</UL>

<P><STRONG><a name="[69e]"></a>set_hci_mode_flag</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_cmd_timeout_cb (via Veneer)
</UL>

<P><STRONG><a name="[2ff]"></a>is_single_tone_test_mode</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main (via Veneer)
<LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_cfg_load (via Veneer)
</UL>

<P><STRONG><a name="[4a6]"></a>switch_into_single_tone_test_mode</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_handle_action (via Veneer)
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_timerout_cb (via Veneer)
</UL>

<P><STRONG><a name="[300]"></a>reset_single_tone_test_mode</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main (via Veneer)
</UL>

<P><STRONG><a name="[12b0]"></a>power_manager_suspend_all</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE), UNUSED)
<BR><BR>[Called By]<UL></UL>

<P><STRONG><a name="[12b2]"></a>power_manager_resume_all</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE), UNUSED)
<BR><BR>[Called By]<UL></UL>

<P><STRONG><a name="[ae4]"></a>platform_pm_set_power_mode</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[4bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;power_mode_set (via Veneer)
</UL>

<P><STRONG><a name="[10ed]"></a>platform_pm_get_power_mode</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[54d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;power_mode_get
</UL>

<P><STRONG><a name="[ae6]"></a>platform_pm_get_error_code</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[55c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;power_get_error_code (via Veneer)
<LI><a href="#[55b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dlps_util_get_platform_error_code (via Veneer)
</UL>

<P><STRONG><a name="[b03]"></a>platform_pm_get_refuse_reason</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[55a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dlps_utils_get_platform_refuse_reason (via Veneer)
</UL>

<P><STRONG><a name="[ae8]"></a>platform_pm_get_statistics</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[557]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;power_get_statistics (via Veneer)
</UL>

<P><STRONG><a name="[abf]"></a>platform_pm_get_hw_wakeup_reason</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;power_down_check_wake_up_reason (via Veneer)
<LI><a href="#[abe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adp_high_to_low_wake_up_trigger_isr (via Veneer)
</UL>

<P><STRONG><a name="[afe]"></a>platform_pm_get_wakeup_reason</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[ad7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dlps_check_os_timer (via Veneer)
</UL>

<P><STRONG><a name="[ae3]"></a>platform_pm_register_callback_func</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[563]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;power_check_cb_register (via Veneer)
<LI><a href="#[ad8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;power_stage_cb_register (via Veneer)
</UL>

<P><STRONG><a name="[aad]"></a>platform_pm_register_excluded_handle</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;monitor_memory_and_timer (via Veneer)
<LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_register_pm_excluded (via Veneer)
</UL>

<P><STRONG><a name="[1191]"></a>platform_pm_unregister_excluded_handle</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE), UNUSED)
<BR><BR>[Called By]<UL></UL>

<P><STRONG><a name="[ae7]"></a>platform_pm_stop_all_non_excluded_timer</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[55d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;power_stop_all_non_excluded_timer (via Veneer)
</UL>

<P><STRONG><a name="[12ac]"></a>dvfs_register_check_func</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE), UNUSED)
<BR><BR>[Called By]<UL></UL>

<P><STRONG><a name="[1261]"></a>get_thermal_meter_celsius</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE), UNUSED)
<BR><BR>[Called By]<UL></UL>

<P><STRONG><a name="[10ef]"></a>xTaskGetFlashTaskHandle</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_gc_check_in_idle
</UL>

<P><STRONG><a name="[ab3]"></a>GDMA_channel_request_rom</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[ab2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GDMA_channel_request_in_hal (via Veneer)
</UL>

<P><STRONG><a name="[108f]"></a>GDMA_channel_release</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_fw_dsp_aes_done_cb (via Veneer)
</UL>

<P><STRONG><a name="[1239]"></a>GDMA_channel_get_active_mask</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE), UNUSED)
<BR><BR>[Called By]<UL></UL>

<P><STRONG><a name="[123a]"></a>dma_channel_cfg</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE), UNUSED)
<BR><BR>[Called By]<UL></UL>

<P><STRONG><a name="[129c]"></a>xQueueGenericSend</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE), UNUSED)
<BR><BR>[Called By]<UL></UL>

<P><STRONG><a name="[129d]"></a>xQueueGenericSendFromISR</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE), UNUSED)
<BR><BR>[Called By]<UL></UL>

<P><STRONG><a name="[10fc]"></a>uxTaskPriorityGet</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[fc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_nor_lock_set_bp_tb_operation
</UL>

<P><STRONG><a name="[aff]"></a>xTaskGetTickCount</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[ad7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dlps_check_os_timer (via Veneer)
</UL>

<P><STRONG><a name="[b24]"></a>xTaskGetSchedulerState</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[b23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_save_to_module_imp (via Veneer)
</UL>

<P><STRONG><a name="[10f0]"></a>xTaskGenericNotify</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_gc_check_in_idle
</UL>

<P><STRONG><a name="[aac]"></a>vTaskStackDump</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[aaa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;heap_and_timer_monitor_timer_handler (via Veneer)
</UL>

<P><STRONG><a name="[b00]"></a>pcTimerGetName</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[ad7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dlps_check_os_timer (via Veneer)
</UL>

<P><STRONG><a name="[aa9]"></a>ucTimerGetTimerNumber</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[aa8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_timer_index_get (via Veneer)
</UL>

<P><STRONG><a name="[ab0]"></a>xTimerIsTimerActive</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[aae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_timer_state_get (via Veneer)
</UL>

<P><STRONG><a name="[ab1]"></a>xTimerIsTimerActiveFromISR</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[aae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_timer_state_get (via Veneer)
</UL>

<P><STRONG><a name="[aab]"></a>xPortGetMinimumEverFreeHeapSize</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[aaa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;heap_and_timer_monitor_timer_handler (via Veneer)
</UL>

<P><STRONG><a name="[f45]"></a>hw_aes_encrypt256</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[ce9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aes256_ecb_encrypt (via Veneer)
</UL>

<P><STRONG><a name="[112a]"></a>hw_aes_decrypt256</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE), UNUSED)
<BR><BR>[Called By]<UL></UL>

<P><STRONG><a name="[112c]"></a>swap_buf</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE), UNUSED)
<BR><BR>[Called By]<UL></UL>

<P><STRONG><a name="[bf0]"></a>aes128_ecb_encrypt</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[727]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_send_passkey (via Veneer)
<LI><a href="#[cc4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_send_additional_passkey_response (via Veneer)
<LI><a href="#[bef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_le_resolve_local_rpa (via Veneer)
<LI><a href="#[bc7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_le_find_entry_by_aes (via Veneer)
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_read_cb (via Veneer)
<LI><a href="#[cbb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_send_kbp_response_le (via Veneer)
<LI><a href="#[cb9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_send_kbp_response (via Veneer)
<LI><a href="#[ceb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_rsp_beacon_param (via Veneer)
<LI><a href="#[ce8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_encrypted_eik (via Veneer)
<LI><a href="#[cd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_aes_ctr (via Veneer)
<LI><a href="#[cce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_ctr (via Veneer)
</UL>

<P><STRONG><a name="[cbd]"></a>aes128_ecb_decrypt</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[cc5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_handle_char_account_key (via Veneer)
<LI><a href="#[cc3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_handle_char_additional_passkey (via Veneer)
<LI><a href="#[cc2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_handle_char_passkey (via Veneer)
<LI><a href="#[cbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_decrypt_kbp_request (via Veneer)
<LI><a href="#[ce7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_decrypted_eik (via Veneer)
</UL>

<P><STRONG><a name="[1151]"></a>SHA256_Init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE), UNUSED)
<BR><BR>[Called By]<UL></UL>

<P><STRONG><a name="[1152]"></a>SHA256_Update</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE), UNUSED)
<BR><BR>[Called By]<UL></UL>

<P><STRONG><a name="[1153]"></a>SHA256_Final</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE), UNUSED)
<BR><BR>[Called By]<UL></UL>

<P><STRONG><a name="[782]"></a>SHA256</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[781]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_finder_generate_hash_flag (via Veneer)
<LI><a href="#[75d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_gfps_generate_mac (via Veneer)
<LI><a href="#[7fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_hmac_sha256 (via Veneer)
<LI><a href="#[7fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_get_recovery_key (via Veneer)
<LI><a href="#[cc1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_gen_aes_key (via Veneer)
<LI><a href="#[cb4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_gen_account_key_filter (via Veneer)
<LI><a href="#[ce6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_verify_eik_authkey (via Veneer)
<LI><a href="#[ce3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_get_utp_key (via Veneer)
<LI><a href="#[ce2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_get_ring_key (via Veneer)
<LI><a href="#[1091]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_hal_dsp_generate_aes_key (via Veneer)
</UL>

<P><STRONG><a name="[54e]"></a>__aeabi_uldivmod</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[54c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dlps_enter_callback (via Veneer)
</UL>

<P><STRONG><a name="[280]"></a>setlocale</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_init (via Veneer)
</UL>

<P><STRONG><a name="[3b6]"></a>strlen</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_is_test_equipment (via Veneer)
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_bt_cback (via Veneer)
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_bt_cback (via Veneer)
<LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_gap_gen_scan_rsp_data (via Veneer)
<LI><a href="#[50b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_mgr_mmi_handle (via Veneer)
<LI><a href="#[6c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_swift_pair_adv_init (via Veneer)
<LI><a href="#[6a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_cmd_general_cmd_handle (via Veneer)
<LI><a href="#[823]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_ccp_set_active_call_uri (via Veneer)
<LI><a href="#[809]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_adv_set_ext_data (via Veneer)
<LI><a href="#[915]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_ble_process (via Veneer)
<LI><a href="#[914]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_ble_generate_bt_mac_crc (via Veneer)
<LI><a href="#[9c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_try_general_at_cmd (via Veneer)
<LI><a href="#[9a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_mgr_handle_hfp_msg (via Veneer)
<LI><a href="#[dcd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_srv_level_step (via Veneer)
</UL>

<P><STRONG><a name="[10bc]"></a>_printf_char_common</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[9c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2snprintf (via Veneer)
</UL>

<P><STRONG><a name="[10bd]"></a>_sputc</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[9c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2snprintf (via Veneer)
</UL>

<P><STRONG><a name="[ff]"></a>_snputc</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> noretval__2snprintf.o(.text)
</UL>
<P><STRONG><a name="[254]"></a>__rt_locale</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_lc_common (via Veneer)
</UL>

<P><STRONG><a name="[10c5]"></a>__rt_ctype_table</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isspace (via Veneer)
</UL>

<P><STRONG><a name="[6cd]"></a>strcmp</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ipc_subscribe (via Veneer)
<LI><a href="#[4b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ipc_publish (via Veneer)
<LI><a href="#[a41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_ipc_subscribe (via Veneer)
<LI><a href="#[dd3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_get_indicator_type_by_name (via Veneer)
<LI><a href="#[cfb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_ipc_publish (via Veneer)
</UL>

<P><STRONG><a name="[10d3]"></a>__ARM_fpclassify</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[95e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pow (via Veneer)
</UL>

<P><STRONG><a name="[258]"></a>_get_lc_numeric</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_lc_numeric_1 (via Veneer)
</UL>

<P><STRONG><a name="[256]"></a>_get_lc_ctype</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_lc_ctype_1 (via Veneer)
</UL>

<P><STRONG><a name="[961]"></a>__aeabi_dadd</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[95c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Double2FixPoint (via Veneer)
<LI><a href="#[cb4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_gen_account_key_filter (via Veneer)
<LI><a href="#[10c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly (via Veneer)
<LI><a href="#[10cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log (via Veneer)
<LI><a href="#[10cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan2 (via Veneer)
<LI><a href="#[95e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pow (via Veneer)
<LI><a href="#[ea2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log10 (via Veneer)
</UL>

<P><STRONG><a name="[10d9]"></a>__fpl_dcmp_Inf</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[10d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dcmpeq (via Veneer)
</UL>

<P><STRONG><a name="[4ce]"></a>__aeabi_ddiv</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[4c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_bt_and_ble_ready_check (via Veneer)
<LI><a href="#[10cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log (via Veneer)
<LI><a href="#[10cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_invalid (via Veneer)
<LI><a href="#[10c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_divzero (via Veneer)
<LI><a href="#[95e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pow (via Veneer)
</UL>

<P><STRONG><a name="[963]"></a>__aeabi_d2iz</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[673]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_get_eq_data (via Veneer)
<LI><a href="#[95c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Double2FixPoint (via Veneer)
<LI><a href="#[ea0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_gain_scale (via Veneer)
<LI><a href="#[f77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_dc_diff_calculate (via Veneer)
</UL>

<P><STRONG><a name="[4cf]"></a>__aeabi_d2uiz</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[4c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_bt_and_ble_ready_check (via Veneer)
<LI><a href="#[673]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_get_eq_data (via Veneer)
<LI><a href="#[a20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_mgr_exception (via Veneer)
<LI><a href="#[cb4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_gen_account_key_filter (via Veneer)
</UL>

<P><STRONG><a name="[95d]"></a>__aeabi_i2d</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[969]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_get_default_eq_info (via Veneer)
<LI><a href="#[968]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FixPoint2Double (via Veneer)
<LI><a href="#[95c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Double2FixPoint (via Veneer)
<LI><a href="#[f77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_dc_diff_calculate (via Veneer)
<LI><a href="#[10cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log (via Veneer)
<LI><a href="#[95e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pow (via Veneer)
<LI><a href="#[ea2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log10 (via Veneer)
</UL>

<P><STRONG><a name="[4cd]"></a>__aeabi_ui2d</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[4c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_bt_and_ble_ready_check (via Veneer)
<LI><a href="#[969]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_get_default_eq_info (via Veneer)
<LI><a href="#[a20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_mgr_exception (via Veneer)
<LI><a href="#[cb4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_gen_account_key_filter (via Veneer)
</UL>

<P><STRONG><a name="[110c]"></a>__aeabi_cdcmple</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE), UNUSED)
<BR><BR>[Called By]<UL></UL>

<P><STRONG><a name="[960]"></a>__aeabi_dmul</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[968]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FixPoint2Double (via Veneer)
<LI><a href="#[95c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Double2FixPoint (via Veneer)
<LI><a href="#[a20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_mgr_exception (via Veneer)
<LI><a href="#[cb4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_gen_account_key_filter (via Veneer)
<LI><a href="#[ea0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_gain_scale (via Veneer)
<LI><a href="#[f77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_dc_diff_calculate (via Veneer)
<LI><a href="#[10c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly (via Veneer)
<LI><a href="#[10cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log (via Veneer)
<LI><a href="#[95e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pow (via Veneer)
<LI><a href="#[ea2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log10 (via Veneer)
</UL>

<P><STRONG><a name="[10d7]"></a>__fpl_dnaninf</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[10d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsqrt (via Veneer)
<LI><a href="#[10d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dcmpeq (via Veneer)
<LI><a href="#[10d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_d2f (via Veneer)
</UL>

<P><STRONG><a name="[10dc]"></a>__fpl_dretinf</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[10da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_f2d (via Veneer)
</UL>

<P><STRONG><a name="[95f]"></a>__aeabi_cdrcmple</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[95c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Double2FixPoint (via Veneer)
<LI><a href="#[95e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pow (via Veneer)
</UL>

<P><STRONG><a name="[10d1]"></a>__aeabi_drsub</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[10cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log (via Veneer)
<LI><a href="#[95e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pow (via Veneer)
</UL>

<P><STRONG><a name="[962]"></a>__aeabi_dsub</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[95c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Double2FixPoint (via Veneer)
<LI><a href="#[10cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log (via Veneer)
<LI><a href="#[95e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pow (via Veneer)
</UL>

<P><STRONG><a name="[10e0]"></a>__fpl_return_NaN</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[10df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fcheck_NaN1 (via Veneer)
</UL>

<P><STRONG><a name="[ea3]"></a>__ARM_scalbn</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[ea0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_gain_scale (via Veneer)
<LI><a href="#[10cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log (via Veneer)
<LI><a href="#[10ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_underflow (via Veneer)
<LI><a href="#[10cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_overflow (via Veneer)
<LI><a href="#[10ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan (via Veneer)
<LI><a href="#[95e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pow (via Veneer)
<LI><a href="#[ea2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log10 (via Veneer)
</UL>

<P><STRONG><a name="[ae5]"></a>btmac_pm_set_power_mode</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[561]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_power_mode_set (via Veneer)
</UL>

<P><STRONG><a name="[1218]"></a>btmac_pm_get_power_mode</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE), UNUSED)
<BR><BR>[Called By]<UL></UL>

<P><STRONG><a name="[b02]"></a>btmac_pm_get_error_code</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[559]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dlps_util_get_btmac_error_code (via Veneer)
</UL>

<P><STRONG><a name="[b01]"></a>btmac_pm_get_statistics</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[558]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dlps_utils_get_btmac_lpm_statics (via Veneer)
</UL>

<P><STRONG><a name="[267]"></a>app_io_msg_send</STRONG> (Thumb, 80 bytes, Stack size 32 bytes, app_io_msg.o(.ram_text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = app_io_msg_send
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer
</UL>
<BR>[Called By]<UL><LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_charger_soc_cb (via Veneer)
<LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_charger_state_cb (via Veneer)
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_gpio_intr_cb (via Veneer)
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_gpio_mfb_intr_handler (via Veneer)
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_gpio_key0_debounce_handler (via Veneer)
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ext_charger_bt_cback (via Veneer)
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ext_charger_status_det_gpio_intr_handler (via Veneer)
<LI><a href="#[693]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_adp_plug_in_out_handle (via Veneer)
<LI><a href="#[861]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_handle_iso_data (via Veneer)
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_adc_interrupt_handler (via Veneer)
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_usb_adc_interrupt_handler (via Veneer)
</UL>

<P><STRONG><a name="[26c]"></a>app_dlps_enable</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, app_dlps.o(.ram_text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = app_dlps_enable
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer
</UL>
<BR>[Called By]<UL><LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_key_check_press (via Veneer)
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_gpio_intr_cb (via Veneer)
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_gpio_key0_debounce_handler (via Veneer)
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_led_timer_stop (via Veneer)
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_led_disable_non_repeat_mode (via Veneer)
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_led_set_mode (via Veneer)
<LI><a href="#[4c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_bt_and_ble_ready_check (via Veneer)
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_dm_cback (via Veneer)
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dlps_timeout_cb (via Veneer)
<LI><a href="#[4f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_reboot (via Veneer)
<LI><a href="#[6ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ext_charger_handle_adp_out (via Veneer)
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ext_charger_plug_status_cb (via Veneer)
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ext_charger_status_det_gpio_intr_handler (via Veneer)
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mp_hci_test_dm_cback (via Veneer)
<LI><a href="#[6b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_cmd_other_cmd_handle (via Veneer)
<LI><a href="#[96d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_discharger_adc_update (via Veneer)
</UL>

<P><STRONG><a name="[266]"></a>app_dlps_disable</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, app_dlps.o(.ram_text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = app_dlps_disable
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer
</UL>
<BR>[Called By]<UL><LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_handle_action (via Veneer)
<LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_key_check_press (via Veneer)
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_gpio_intr_cb (via Veneer)
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_gpio_mfb_intr_handler (via Veneer)
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_led_set_mode (via Veneer)
<LI><a href="#[4c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_bt_and_ble_ready_check (via Veneer)
<LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ext_charger_no_charge_handler (via Veneer)
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ext_charger_plug_status_cb (via Veneer)
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ext_charger_status_det_gpio_intr_handler (via Veneer)
<LI><a href="#[6b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_cmd_other_cmd_handle (via Veneer)
</UL>

<P><STRONG><a name="[26]"></a>app_dlps_check_callback</STRONG> (Thumb, 94 bytes, Stack size 24 bytes, app_dlps.o(.ram_text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = app_dlps_check_callback &rArr; power_mode_get
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer
<LI><a href="#[54d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;power_mode_get
<LI><a href="#[792]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_finder_rtc_wakeup_save_info (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_dlps.o(.text)
</UL>
<P><STRONG><a name="[6f6]"></a>app_dlps_get_dlps_bitmap</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, app_dlps.o(.ram_text))
<BR><BR>[Called By]<UL><LI><a href="#[6f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ext_charger_check_status (via Veneer)
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ext_charger_dlps_check_cb (via Veneer)
</UL>

<P><STRONG><a name="[ab8]"></a>syncclk_drv_latch_get_base_addr</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, syncclk_driver.o(.ram_text))
<BR><BR>[Called By]<UL><LI><a href="#[88c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;syncclk_drv_timer_start (via Veneer)
<LI><a href="#[860]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;synclk_drv_time_get (via Veneer)
</UL>

<P><STRONG><a name="[ab9]"></a>syncclk_drv_compare_get_base_addr</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, syncclk_driver.o(.ram_text))
<BR><BR>[Called By]<UL><LI><a href="#[880]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;syncclk_drv_timer_stop (via Veneer)
</UL>

<P><STRONG><a name="[83]"></a>adp_5v_handler</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, hal_adp.o(.ram_text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = adp_5v_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hal_adp.o(.text)
</UL>
<P><STRONG><a name="[243]"></a>adp_5v_get_level</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, hal_adp.o(.ram_text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = adp_5v_get_level
</UL>
<BR>[Calls]<UL><LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btaon_fast_read_safe
</UL>
<BR>[Called By]<UL><LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adp_io_init_isr (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hal_adp.o(.data)
</UL>
<P><STRONG><a name="[248]"></a>adp_io_get_level</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, hal_adp.o(.ram_text))
<BR>[Address Reference Count : 1]<UL><LI> hal_adp.o(.data)
</UL>
<P><STRONG><a name="[694]"></a>adp_get_level</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, hal_adp.o(.ram_text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = adp_get_level
</UL>
<BR>[Calls]<UL><LI><a href="#[ac4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adp_get_handle_and_ops_by_type
</UL>
<BR>[Called By]<UL><LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_adp_init (via Veneer)
</UL>

<P><STRONG><a name="[2d7]"></a>Pad_Config</STRONG> (Thumb, 122 bytes, Stack size 24 bytes, rtl876x_pinmux.o(.ram_text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Pad_Config &rArr; flash_cur_bank_img_payload_addr_get
</UL>
<BR>[Calls]<UL><LI><a href="#[6af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btaon_fast_write_safe
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btaon_fast_read_safe
<LI><a href="#[10ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pad_Config_rom
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_cur_bank_img_payload_addr_get (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ext_charger_init (via Veneer)
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;board_init (via Veneer)
<LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_adc_io_read (via Veneer)
<LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_led_set_pad_config (via Veneer)
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_usb_connector_adc_update (via Veneer)
<LI><a href="#[6e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ext_charger_current_speed_set (via Veneer)
<LI><a href="#[6e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ext_charger_enable_ctrl_gpio_set (via Veneer)
<LI><a href="#[6b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_cmd_customized_cmd_handle (via Veneer)
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_cmd_timeout_cb (via Veneer)
<LI><a href="#[971]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_usb_adc_io_read (via Veneer)
<LI><a href="#[973]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_usb_connector_mosfet_close (via Veneer)
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adp_io_init_isr (via Veneer)
<LI><a href="#[ec9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_mgr_disable (via Veneer)
<LI><a href="#[10a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_pad_dmic_set (via Veneer)
<LI><a href="#[10a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_pad_dmic_pad_cfg (via Veneer)
<LI><a href="#[107b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_mgr_param_init (via Veneer)
</UL>

<P><STRONG><a name="[54d]"></a>power_mode_get</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, pm.o(.ram_text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = power_mode_get
</UL>
<BR>[Calls]<UL><LI><a href="#[10ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_pm_get_power_mode
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer
</UL>
<BR>[Called By]<UL><LI><a href="#[55e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dlps_power_mode_set (via Veneer)
<LI><a href="#[555]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dlps_exit_callback (via Veneer)
<LI><a href="#[54c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dlps_enter_callback (via Veneer)
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dlps_check_callback
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dlps_timeout_cb (via Veneer)
<LI><a href="#[ad4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dlps_io_enter_cb (via Veneer)
</UL>

<P><STRONG><a name="[10ee]"></a>ftl_cache_is_empty</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, ftl.o(.ram_text))
<BR><BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_gc_check_in_idle
</UL>

<P><STRONG><a name="[90]"></a>ftl_gc_check_in_idle</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, ftl.o(.ram_text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ftl_gc_check_in_idle
</UL>
<BR>[Calls]<UL><LI><a href="#[10f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGenericNotify
<LI><a href="#[10ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetFlashTaskHandle
<LI><a href="#[10ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_cache_is_empty
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ftl.o(.text)
</UL>
<P><STRONG><a name="[c9]"></a>dsp_lps_check</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, dsp_mgr.o(.ram_text))
<BR>[Address Reference Count : 1]<UL><LI> dsp_mgr.o(.text)
</UL>
<P><STRONG><a name="[d6]"></a>isr_wrapper</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, vector_table_ext.o(.ram_text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = isr_wrapper &rArr; flash_nor_erase_suspend_check &rArr; flash_nor_check_is_erasing
</UL>
<BR>[Calls]<UL><LI><a href="#[10f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_nor_erase_suspend_check
<LI><a href="#[10f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_nor_erase_resume_check
</UL>
<BR>[Address Reference Count : 1]<UL><LI> vector_table_ext.o(.text)
</UL>
<P><STRONG><a name="[10f3]"></a>hw_timer_handler_imp</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, hw_tim.o(.ram_text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = hw_timer_handler_imp
</UL>
<BR>[Calls]<UL><LI><a href="#[10f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_timer_handler
</UL>

<P><STRONG><a name="[10f5]"></a>hw_timer_safe_stop</STRONG> (Thumb, 144 bytes, Stack size 24 bytes, hw_tim.o(.ram_text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = hw_timer_safe_stop &rArr; hw_timer_set_div
</UL>
<BR>[Calls]<UL><LI><a href="#[f43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_INTConfig
<LI><a href="#[10f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Cmd
<LI><a href="#[10f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hw_timer_set_div
</UL>
<BR>[Called By]<UL><LI><a href="#[1019]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hw_timer_restart
<LI><a href="#[f3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hw_timer_stop
</UL>

<P><STRONG><a name="[f3c]"></a>hw_timer_stop</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, hw_tim.o(.ram_text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = hw_timer_stop &rArr; hw_timer_safe_stop &rArr; hw_timer_set_div
</UL>
<BR>[Calls]<UL><LI><a href="#[10f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hw_timer_safe_stop
</UL>
<BR>[Called By]<UL><LI><a href="#[f3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hw_timer_delete (via Veneer)
<LI><a href="#[101a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_hp_timer_list_remove (via Veneer)
<LI><a href="#[1017]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_hp_timer_list_insert (via Veneer)
<LI><a href="#[1020]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_hp_timer_expire (via Veneer)
<LI><a href="#[1097]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_hal_codec_open (via Veneer)
<LI><a href="#[109f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_pm_power_off (via Veneer)
</UL>

<P><STRONG><a name="[109d]"></a>hw_timer_start</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, hw_tim.o(.ram_text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = hw_timer_start
</UL>
<BR>[Calls]<UL><LI><a href="#[f43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_INTConfig
<LI><a href="#[10f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_pm_power_on (via Veneer)
</UL>

<P><STRONG><a name="[1019]"></a>hw_timer_restart</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, hw_tim.o(.ram_text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = hw_timer_restart &rArr; hw_timer_safe_stop &rArr; hw_timer_set_div
</UL>
<BR>[Calls]<UL><LI><a href="#[f43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_INTConfig
<LI><a href="#[10f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ChangePeriod
<LI><a href="#[10f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Cmd
<LI><a href="#[10f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hw_timer_safe_stop
</UL>
<BR>[Called By]<UL><LI><a href="#[101a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_hp_timer_list_remove (via Veneer)
<LI><a href="#[1017]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_hp_timer_list_insert (via Veneer)
<LI><a href="#[1020]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_hp_timer_expire (via Veneer)
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_pm_power_on (via Veneer)
</UL>

<P><STRONG><a name="[e4]"></a>shm_dsp_handler</STRONG> (Thumb, 190 bytes, Stack size 32 bytes, dsp_shm.o(.ram_text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = shm_dsp_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dsp_shm.o(.text)
</UL>
<P><STRONG><a name="[e5]"></a>shm_state_get</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dsp_shm.o(.ram_text))
<BR><BR>[Called By]<UL><LI><a href="#[f1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_hal_reset (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dsp_shm.o(.text)
</UL>
<P><STRONG><a name="[ea]"></a>sys_hp_timer_pm_check</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, sys_timer.o(.ram_text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = sys_hp_timer_pm_check
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sys_timer.o(.text)
</UL>
<P><STRONG><a name="[10f8]"></a>bin_loader_send_isr_msg</STRONG> (Thumb, 84 bytes, Stack size 24 bytes, bin_loader.o(.ram_text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = bin_loader_send_isr_msg
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer
</UL>
<BR>[Called By]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bin_loader_driver_cb_check_finish
</UL>

<P><STRONG><a name="[10f9]"></a>bin_loader_send_msg</STRONG> (Thumb, 90 bytes, Stack size 24 bytes, bin_loader.o(.ram_text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = bin_loader_send_msg
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer
</UL>
<BR>[Called By]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bin_loader_driver_cb_err
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bin_loader_driver_cb_finish
</UL>

<P><STRONG><a name="[f2]"></a>bin_loader_driver_cb_check_finish</STRONG> (Thumb, 10 bytes, Stack size 16 bytes, bin_loader.o(.ram_text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = bin_loader_driver_cb_check_finish &rArr; bin_loader_send_isr_msg
</UL>
<BR>[Calls]<UL><LI><a href="#[10f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bin_loader_send_isr_msg
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bin_loader.o(.text)
</UL>
<P><STRONG><a name="[f1]"></a>bin_loader_driver_cb_finish</STRONG> (Thumb, 10 bytes, Stack size 16 bytes, bin_loader.o(.ram_text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = bin_loader_driver_cb_finish &rArr; bin_loader_send_msg
</UL>
<BR>[Calls]<UL><LI><a href="#[10f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bin_loader_send_msg
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bin_loader.o(.text)
</UL>
<P><STRONG><a name="[f0]"></a>bin_loader_driver_cb_err</STRONG> (Thumb, 10 bytes, Stack size 16 bytes, bin_loader.o(.ram_text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = bin_loader_driver_cb_err &rArr; bin_loader_send_msg
</UL>
<BR>[Calls]<UL><LI><a href="#[10f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bin_loader_send_msg
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bin_loader.o(.text)
</UL>
<P><STRONG><a name="[f4]"></a>dsp_fw_dma_handler</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, bin_loader_driver.o(.ram_text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = dsp_fw_dma_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bin_loader_driver.o(.text)
</UL>
<P><STRONG><a name="[d8]"></a>hal_timer_handler</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, hw_tim_internal.o(.ram_text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = hal_timer_handler &rArr; hw_timer_handler_imp
</UL>
<BR>[Calls]<UL><LI><a href="#[10f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hw_timer_handler_imp
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hw_tim.o(.text)
</UL>
<P><STRONG><a name="[efa]"></a>dsp_send_msg</STRONG> (Thumb, 160 bytes, Stack size 56 bytes, dsp_driver.o(.ram_text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = dsp_send_msg
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer
</UL>
<BR>[Called By]<UL><LI><a href="#[f2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_mgr_notification_stop (via Veneer)
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_mgr_wait_load_handler (via Veneer)
<LI><a href="#[f0d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_load_algorithm_code (via Veneer)
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_fw_cb_finish (via Veneer)
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_fw_cb_check_finish (via Veneer)
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_ipc_hal_cback (via Veneer)
<LI><a href="#[e69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_mgr_session_enable (via Veneer)
<LI><a href="#[eba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_mgr_fade_out_start (via Veneer)
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_mgr_gate_stop_post_cback (via Veneer)
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_mgr_sport_start_post_cback (via Veneer)
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_session_enter_disabled (via Veneer)
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_session_enter_enabled (via Veneer)
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_enter_disabled (via Veneer)
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_shm_cb_mailbox
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_shm_cb_tx_ack
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_shm_cb_rx_req
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_shm_cb_cmd_event
</UL>

<P><STRONG><a name="[f6]"></a>dsp_shm_cb_cmd_event</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, dsp_driver.o(.ram_text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = dsp_shm_cb_cmd_event &rArr; dsp_send_msg
</UL>
<BR>[Calls]<UL><LI><a href="#[efa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_send_msg
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dsp_driver.o(.text)
</UL>
<P><STRONG><a name="[f7]"></a>dsp_shm_cb_rx_req</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, dsp_driver.o(.ram_text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = dsp_shm_cb_rx_req &rArr; dsp_send_msg
</UL>
<BR>[Calls]<UL><LI><a href="#[efa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_send_msg
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dsp_driver.o(.text)
</UL>
<P><STRONG><a name="[f8]"></a>dsp_shm_cb_tx_ack</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, dsp_driver.o(.ram_text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = dsp_shm_cb_tx_ack &rArr; dsp_send_msg
</UL>
<BR>[Calls]<UL><LI><a href="#[efa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_send_msg
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dsp_driver.o(.text)
</UL>
<P><STRONG><a name="[f9]"></a>dsp_shm_cb_mailbox</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, dsp_driver.o(.ram_text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = dsp_shm_cb_mailbox &rArr; dsp_send_msg
</UL>
<BR>[Calls]<UL><LI><a href="#[efa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_send_msg
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dsp_driver.o(.text)
</UL>
<P><STRONG><a name="[10fa]"></a>flash_nor_suspend_all_busy_nodes</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, flash_nor_adv_driver.o(.ram_text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = flash_nor_suspend_all_busy_nodes
</UL>
<BR>[Called By]<UL><LI><a href="#[fc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_nor_lock_set_bp_tb_operation
</UL>

<P><STRONG><a name="[fc0]"></a>flash_nor_lock_set_bp_tb_operation</STRONG> (Thumb, 216 bytes, Stack size 56 bytes, flash_nor_adv_driver.o(.ram_text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = flash_nor_lock_set_bp_tb_operation &rArr; flash_nor_suspend_all_busy_nodes
</UL>
<BR>[Calls]<UL><LI><a href="#[10fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxTaskPriorityGet
<LI><a href="#[10fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_overlapped
<LI><a href="#[10fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_nor_suspend_all_busy_nodes
</UL>
<BR>[Called By]<UL><LI><a href="#[b08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_nor_set_bp_lv_locked (via Veneer)
</UL>

<P><STRONG><a name="[10fd]"></a>flash_nor_check_is_erasing</STRONG> (Thumb, 96 bytes, Stack size 8 bytes, flash_nor_adv_driver.o(.ram_text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = flash_nor_check_is_erasing
</UL>
<BR>[Calls]<UL><LI><a href="#[ac5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vAssertHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[10f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_nor_erase_suspend_check
</UL>

<P><STRONG><a name="[10f1]"></a>flash_nor_erase_suspend_check</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, flash_nor_adv_driver.o(.ram_text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = flash_nor_erase_suspend_check &rArr; flash_nor_check_is_erasing
</UL>
<BR>[Calls]<UL><LI><a href="#[ac5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vAssertHandler
<LI><a href="#[10ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;irq_unlock_imp
<LI><a href="#[10fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;irq_lock_imp
<LI><a href="#[10fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_nor_check_is_erasing
</UL>
<BR>[Called By]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isr_wrapper
</UL>

<P><STRONG><a name="[10f2]"></a>flash_nor_erase_resume_check</STRONG> (Thumb, 76 bytes, Stack size 32 bytes, flash_nor_adv_driver.o(.ram_text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = flash_nor_erase_resume_check
</UL>
<BR>[Calls]<UL><LI><a href="#[ac5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vAssertHandler
<LI><a href="#[10ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;irq_unlock_imp
<LI><a href="#[10fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;irq_lock_imp
</UL>
<BR>[Called By]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isr_wrapper
</UL>

<P><STRONG><a name="[af9]"></a>bte_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_hall_upperstack_ini
</UL>

<P><STRONG><a name="[709]"></a>hci_if_open</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mp_hci_test_task
</UL>

<P><STRONG><a name="[701]"></a>hci_if_write</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[708]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mp_hci_handle_msg
<LI><a href="#[705]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dut_hci_cmd_write_inquiry_scan_activity
<LI><a href="#[703]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dut_hci_cmd_write_local_name
<LI><a href="#[704]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dut_hci_cmd_write_page_scan_activity
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dut_test_handle_hci_evt_data_ind
<LI><a href="#[700]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dut_hci_cmd_reset
</UL>

<P><STRONG><a name="[707]"></a>hci_if_confirm</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mp_test_handle_hci_cb
</UL>

<P><STRONG><a name="[867]"></a>gap_register_direct_cb</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[866]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_mgr_init
</UL>

<P><STRONG><a name="[874]"></a>gap_iso_send_data</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[873]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_send_iso_data
</UL>

<P><STRONG><a name="[85f]"></a>gap_iso_data_cfm</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_mgr_direct_cback
</UL>

<P><STRONG><a name="[d8a]"></a>sm_find_link_by_handle</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[688]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_get_conn_local_addr
<LI><a href="#[1026]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_bond_get_pair_procedure_type
</UL>

<P><STRONG><a name="[d8e]"></a>att_send_mtu_req</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[d8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;client_send_exchange_mtu_req
</UL>

<P><STRONG><a name="[d8d]"></a>gatt_find_chann_by_handle</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[d8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;client_send_exchange_mtu_req
</UL>

<P><STRONG><a name="[d55]"></a>btif_buffer_put</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[d52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_br_send_fix_chann_data
</UL>

<P><STRONG><a name="[d61]"></a>btif_vendor_cmd_req</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[532]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_vendor_cmd_req
<LI><a href="#[993]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_br_vendor_remote_tpoll_set
<LI><a href="#[d97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_vendor_dump_tx_gain_idx
<LI><a href="#[d91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_vendor_ext_adv_handle_priority_set
<LI><a href="#[d8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_vendor_set_priority
<LI><a href="#[d83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_br_link_preferred_data_rate_set
<LI><a href="#[d74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_br_remote_oob_extended_data_req_reply
<LI><a href="#[d73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_br_local_oob_extended_data_read
<LI><a href="#[d64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_br_set_idle_zone
<LI><a href="#[d63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_br_periodic_traffic_set
<LI><a href="#[d62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_br_vendor_htpoll_set
</UL>

<P><STRONG><a name="[1025]"></a>btif_authen_key_req_cfm</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[d87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;patch_le_bond_handle_auth_key_req_ind
</UL>

<P><STRONG><a name="[d54]"></a>btif_l2c_fix_chann_data_req</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[d52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_br_send_fix_chann_data
</UL>

<P><STRONG><a name="[d53]"></a>btif_get_l2c_buf</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[d52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_br_send_fix_chann_data
</UL>

<P><STRONG><a name="[cd5]"></a>vli_test_bit</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[779]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ecc_sub_proc
</UL>

<P><STRONG><a name="[cd2]"></a>vli_num_bits</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[779]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ecc_sub_proc
</UL>

<P><STRONG><a name="[cd3]"></a>vli_set</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[779]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ecc_sub_proc
</UL>

<P><STRONG><a name="[cd8]"></a>vli_mod_sub</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[779]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ecc_sub_proc
</UL>

<P><STRONG><a name="[cd9]"></a>vli_mod_mult_fast</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[779]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ecc_sub_proc
</UL>

<P><STRONG><a name="[cda]"></a>vli_mod_inv</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[779]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ecc_sub_proc
</UL>

<P><STRONG><a name="[cdc]"></a>ecc_point_is_zero</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[779]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ecc_sub_proc
</UL>

<P><STRONG><a name="[cdb]"></a>apply_z</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[779]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ecc_sub_proc
</UL>

<P><STRONG><a name="[cd4]"></a>xycz_initial_double</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[779]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ecc_sub_proc
</UL>

<P><STRONG><a name="[cd7]"></a>xycz_add</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[779]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ecc_sub_proc
</UL>

<P><STRONG><a name="[cd6]"></a>xycz_add_c</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[779]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ecc_sub_proc
</UL>

<P><STRONG><a name="[cdf]"></a>ecc_bytes2native</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[ccd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ecdh_shared_secret_enhanced
</UL>

<P><STRONG><a name="[cde]"></a>ecc_native2bytes</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[ccd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ecdh_shared_secret_enhanced
</UL>

<P><STRONG><a name="[d94]"></a>gap_register_extend_cb</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_lib_init
</UL>

<P><STRONG><a name="[2e4]"></a>gap_start_bt_stack</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_task
</UL>

<P><STRONG><a name="[725]"></a>gap_set_pairable_mode</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[745]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_sec_handle_additional_io_cap
<LI><a href="#[72d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_cb_handle_kbp_write_req
<LI><a href="#[729]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_cb_handle_passkey
<LI><a href="#[721]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_cb_handle_accountkey
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_le_disconnect_cb
</UL>

<P><STRONG><a name="[2e7]"></a>gap_handle_msg</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_task
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mp_hci_test_task
</UL>

<P><STRONG><a name="[2de]"></a>gap_set_param</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_gap_init
<LI><a href="#[3fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_key_derive_init
<LI><a href="#[745]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_sec_handle_additional_io_cap
<LI><a href="#[72d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_cb_handle_kbp_write_req
<LI><a href="#[729]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_cb_handle_passkey
<LI><a href="#[721]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_cb_handle_accountkey
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_le_disconnect_cb
</UL>

<P><STRONG><a name="[3b1]"></a>gap_get_param</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gap_bt_cback
<LI><a href="#[72d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_cb_handle_kbp_write_req
<LI><a href="#[68b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_init
<LI><a href="#[949]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_devinfo_get
<LI><a href="#[914]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_ble_generate_bt_mac_crc
<LI><a href="#[912]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_devinfo_notify
<LI><a href="#[bbe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_handle_authen_result_ind
<LI><a href="#[cb9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_send_kbp_response
<LI><a href="#[e36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_gap_cback
</UL>

<P><STRONG><a name="[3b2]"></a>gap_set_bd_addr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gap_bt_cback
<LI><a href="#[5e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_startup_event_handle
</UL>

<P><STRONG><a name="[d6b]"></a>legacy_bond_pair</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[72e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_br_pairing_req
</UL>

<P><STRONG><a name="[d6d]"></a>legacy_bond_input_passkey</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[d6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_br_input_passkey
</UL>

<P><STRONG><a name="[d6f]"></a>legacy_bond_input_remote_oob</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[d6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_br_input_remote_oob
</UL>

<P><STRONG><a name="[d70]"></a>legacy_bond_user_cfm</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_br_user_cfm_req_cfm
</UL>

<P><STRONG><a name="[d72]"></a>legacy_bond_read_local_oob</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[d71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_br_local_oob_read
</UL>

<P><STRONG><a name="[d75]"></a>legacy_bond_link_key_cfm</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[988]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_br_link_key_cfm
</UL>

<P><STRONG><a name="[d76]"></a>legacy_pin_code_req_cfm</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[989]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_br_pin_code_req_cfm
</UL>

<P><STRONG><a name="[d03]"></a>legacy_check_callback</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[d05]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_lib_br_handle_btif_msg
<LI><a href="#[d04]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_lib_br_handle_vendor_evt
<LI><a href="#[d02]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_lib_br_handle_vendor_cmd_rsp
</UL>

<P><STRONG><a name="[d0b]"></a>legacy_set_gap_param</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_br_set_param
</UL>

<P><STRONG><a name="[d0d]"></a>legacy_get_gap_param</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[d0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_br_get_param
</UL>

<P><STRONG><a name="[d0a]"></a>legacy_gap_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[d09]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_br_init
</UL>

<P><STRONG><a name="[d68]"></a>legacy_get_max_sdp_record_num</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[9ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_br_get_max_sdp_record_num
</UL>

<P><STRONG><a name="[d18]"></a>legacy_set_dev_name</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[978]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_br_set_dev_name
</UL>

<P><STRONG><a name="[d1a]"></a>legacy_set_dev_cod</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[d19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_br_set_dev_cod
</UL>

<P><STRONG><a name="[d0f]"></a>legacy_start_inquiry</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[d0e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_br_start_inquiry
</UL>

<P><STRONG><a name="[d11]"></a>legacy_stop_inquiry</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[d10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_br_stop_inquiry
</UL>

<P><STRONG><a name="[d13]"></a>legacy_start_periodic_inquiry</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[d12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_br_start_periodic_inquiry
</UL>

<P><STRONG><a name="[d14]"></a>legacy_stop_periodic_inquiry</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[979]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_br_stop_periodic_inquiry
</UL>

<P><STRONG><a name="[d15]"></a>legacy_start_sdp_discov</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[56a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_br_start_sdp_discov
</UL>

<P><STRONG><a name="[d16]"></a>legacy_stop_sdp_discov</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[5ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_br_stop_sdp_discov
</UL>

<P><STRONG><a name="[d17]"></a>legacy_start_did_discov</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[569]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_br_start_did_discov
</UL>

<P><STRONG><a name="[d08]"></a>legacy_register_cb</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[d09]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_br_init
<LI><a href="#[d07]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_br_register_cb
</UL>

<P><STRONG><a name="[d1b]"></a>legacy_set_radio_mode</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[97f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_br_set_radio_mode
</UL>

<P><STRONG><a name="[d41]"></a>legacy_set_did_eir</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[d40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_br_set_did_eir
</UL>

<P><STRONG><a name="[d43]"></a>legacy_set_ext_eir</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[d42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_br_set_ext_eir
</UL>

<P><STRONG><a name="[d65]"></a>legacy_reg_sdp_record</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[9bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_br_reg_sdp_record
</UL>

<P><STRONG><a name="[d67]"></a>legacy_del_sdp_record</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[d66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_br_del_sdp_record
</UL>

<P><STRONG><a name="[d37]"></a>legacy_send_sco_conn_req</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[9dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_br_send_sco_conn_req
</UL>

<P><STRONG><a name="[d38]"></a>legacy_send_sco_conn_cfm</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[9de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_br_send_sco_conn_cfm
</UL>

<P><STRONG><a name="[d39]"></a>legacy_send_sco_disconn_req</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[5ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_br_send_sco_disconn_req
</UL>

<P><STRONG><a name="[d3b]"></a>legacy_send_sco_disconn_cfm</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[d3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_br_send_sco_disconn_cfm
</UL>

<P><STRONG><a name="[d3d]"></a>legacy_send_sco_param_change_req</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[d3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_br_send_sco_param_change_req
</UL>

<P><STRONG><a name="[d3e]"></a>legacy_get_sco_buffer</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[986]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_br_get_sco_buffer
</UL>

<P><STRONG><a name="[d3f]"></a>legacy_send_sco_data</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[987]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_br_send_sco_data
</UL>

<P><STRONG><a name="[d1c]"></a>legacy_get_remote_name</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[4d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_br_get_remote_name
</UL>

<P><STRONG><a name="[d1d]"></a>legacy_enter_sniff_mode</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[9b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_br_enter_sniff_mode
</UL>

<P><STRONG><a name="[d1e]"></a>legacy_exit_sniff_mode</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[9b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_br_exit_sniff_mode
</UL>

<P><STRONG><a name="[d20]"></a>legacy_cfg_default_link_policy</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[d1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_br_cfg_default_link_policy
</UL>

<P><STRONG><a name="[d22]"></a>legacy_cfg_page_scan_param</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[d21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_br_cfg_page_scan_param
</UL>

<P><STRONG><a name="[d24]"></a>legacy_cfg_inquiry_scan_param</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[d23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_br_cfg_inquiry_scan_param
</UL>

<P><STRONG><a name="[d25]"></a>legacy_cfg_acl_link_policy</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[97b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_br_cfg_acl_link_policy
</UL>

<P><STRONG><a name="[d27]"></a>legacy_cfg_acl_link_supv_tout</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[d26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_br_cfg_acl_link_supv_tout
</UL>

<P><STRONG><a name="[d28]"></a>legacy_cfg_acl_link_role</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[97d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_br_cfg_acl_link_role
</UL>

<P><STRONG><a name="[d29]"></a>legacy_cfg_acl_pkt_type</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[98c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_br_cfg_acl_pkt_type
</UL>

<P><STRONG><a name="[d2b]"></a>legacy_cfg_acl_link_flush_tout</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[d2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_br_cfg_acl_link_flush_tout
</UL>

<P><STRONG><a name="[d2c]"></a>legacy_cfg_accept_role</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_br_cfg_accept_role
</UL>

<P><STRONG><a name="[d2e]"></a>legacy_cfg_ssp_debug_mode</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[d2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_br_cfg_ssp_debug_mode
</UL>

<P><STRONG><a name="[d30]"></a>legacy_cfg_acl_disconn_tout</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[d2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_br_cfg_acl_disconn_tout
</UL>

<P><STRONG><a name="[d31]"></a>legacy_send_acl_disconn_req</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[57b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_br_send_acl_disconn_req
</UL>

<P><STRONG><a name="[d32]"></a>legacy_accept_acl_conn</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[984]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_br_accept_acl_conn
</UL>

<P><STRONG><a name="[d33]"></a>legacy_reject_acl_conn</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[985]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_br_reject_acl_conn
</UL>

<P><STRONG><a name="[d34]"></a>legacy_send_setup_qos_req</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[98d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_br_send_setup_qos_req
</UL>

<P><STRONG><a name="[d36]"></a>legacy_set_page_with_scan</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[d35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_br_set_page_with_scan
</UL>

<P><STRONG><a name="[d45]"></a>legacy_read_rssi</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[d44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_br_read_rssi
</UL>

<P><STRONG><a name="[d47]"></a>legacy_find_sdp_attr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[d46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_br_find_sdp_attr
</UL>

<P><STRONG><a name="[d49]"></a>legacy_get_sdp_value</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[d48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_br_get_sdp_value
</UL>

<P><STRONG><a name="[d4b]"></a>legacy_get_sdp_uuid_value</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[d4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_br_get_sdp_uuid_value
</UL>

<P><STRONG><a name="[d4d]"></a>legacy_access_sdp_elem</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[d4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_br_access_sdp_elem
</UL>

<P><STRONG><a name="[d56]"></a>legacy_vendor_set_active_sco</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[7ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_br_vendor_set_active_sco
</UL>

<P><STRONG><a name="[d58]"></a>legacy_vendor_cont_tx_begin</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[d57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_br_vendor_cont_tx_begin
</UL>

<P><STRONG><a name="[d5a]"></a>legacy_vendor_cont_tx_stop</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[d59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_br_vendor_cont_tx_stop
</UL>

<P><STRONG><a name="[d5c]"></a>legacy_set_conn_encryption</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[d5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_br_set_conn_encryption
</UL>

<P><STRONG><a name="[d5d]"></a>legacy_vendor_set_monitor</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[98f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_br_vendor_set_monitor
</UL>

<P><STRONG><a name="[d5e]"></a>legacy_vendor_data_rate_set</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[5e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_br_vendor_data_rate_set
</UL>

<P><STRONG><a name="[d5f]"></a>legacy_vendor_tx_power_set</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[991]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_br_vendor_tx_power_set
</UL>

<P><STRONG><a name="[d60]"></a>legacy_vendor_rssi_golden_range_set</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[992]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_br_vendor_rssi_golden_range_set
</UL>

<P><STRONG><a name="[d06]"></a>legacy_set_sco_retrans_window</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[98a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_br_set_sco_retrans_window
</UL>

<P><STRONG><a name="[d51]"></a>legacy_reg_fix_chann</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[d50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_br_reg_fix_chann
</UL>

<P><STRONG><a name="[d4f]"></a>legacy_reg_fix_chann_cb</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[d4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_br_reg_fix_chann_cb
</UL>

<P><STRONG><a name="[d6a]"></a>legacy_init_radio_mode</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[d69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_br_init_radio_mode
</UL>

<P><STRONG><a name="[e30]"></a>mpa_reg_rfc_authen_cb</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[e2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_init
</UL>

<P><STRONG><a name="[e2f]"></a>mpa_reg_l2c_proto</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[dc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avctp_init
<LI><a href="#[dab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdtp_init
<LI><a href="#[e2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_init
</UL>

<P><STRONG><a name="[12e0]"></a>mpa_send_l2c_sec_reg_req</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE), UNUSED)
<BR><BR>[Called By]<UL></UL>

<P><STRONG><a name="[dfe]"></a>mpa_send_rfc_authen_req</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[dfd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_send_authen_req
</UL>

<P><STRONG><a name="[e32]"></a>mpa_send_l2c_conn_req</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[a0b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_conn_req
<LI><a href="#[dbf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avctp_connect_req
<LI><a href="#[d9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdtp_stream_connect_req
<LI><a href="#[da4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdtp_signal_connect_req
</UL>

<P><STRONG><a name="[e08]"></a>mpa_send_l2c_disconn_req</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[dc5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avctp_disconnect_req
<LI><a href="#[da3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdtp_stream_disconnect_req
<LI><a href="#[da2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdtp_signal_disconnect_req
<LI><a href="#[e23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_handle_l2c_conn_cmpl
<LI><a href="#[e22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_handle_l2c_conn_rsp
<LI><a href="#[e1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_handle_disc
<LI><a href="#[e1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_handle_dm
<LI><a href="#[e1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_handle_ua
<LI><a href="#[e1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_handle_uih
<LI><a href="#[e09]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_wait_rsp_timeout
<LI><a href="#[e07]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_check_disconn_ctrl_chann
<LI><a href="#[1045]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdtp_handle_disconn_ind
<LI><a href="#[1044]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdtp_handle_conn_cmpl
</UL>

<P><STRONG><a name="[e25]"></a>mpa_send_l2c_disconn_cfm</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[e24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_handle_l2c_disconn_ind
<LI><a href="#[1045]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdtp_handle_disconn_ind
<LI><a href="#[102e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avctp_callback
</UL>

<P><STRONG><a name="[e21]"></a>mpa_send_l2c_conn_cfm</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[dc1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avctp_connect_cfm
<LI><a href="#[d9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdtp_signal_connect_cfm
<LI><a href="#[e20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_handle_l2c_conn_ind
<LI><a href="#[1042]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdtp_handle_conn_req
<LI><a href="#[102e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avctp_callback
</UL>

<P><STRONG><a name="[e03]"></a>mpa_send_l2c_data_req</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[a05]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_data_req
<LI><a href="#[dad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avctp_send_data2buf
<LI><a href="#[da7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdtp_signal_start_cfm
<LI><a href="#[1037]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdtp_signal_set_cfg_req
<LI><a href="#[1038]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdtp_signal_open_req
<LI><a href="#[1036]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdtp_signal_get_capability_req
<LI><a href="#[d9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdtp_signal_discover_req
<LI><a href="#[da6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdtp_signal_delay_report_req
<LI><a href="#[da5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdtp_signal_close_req
<LI><a href="#[1030]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdtp_signal_abort_req
<LI><a href="#[e05]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_send_frame
<LI><a href="#[e00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_check_send_credits
<LI><a href="#[103b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdtp_rx_cmd_proc
<LI><a href="#[103a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdtp_cmd_error_check_proc
<LI><a href="#[1039]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdtp_cmd_bad_state_proc
<LI><a href="#[102c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avctp_handle_l2c_data_ind
</UL>

<P><STRONG><a name="[e01]"></a>mpa_get_l2c_buf</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[a05]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_data_req
<LI><a href="#[dad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avctp_send_data2buf
<LI><a href="#[da7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdtp_signal_start_cfm
<LI><a href="#[1037]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdtp_signal_set_cfg_req
<LI><a href="#[1038]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdtp_signal_open_req
<LI><a href="#[1036]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdtp_signal_get_capability_req
<LI><a href="#[d9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdtp_signal_discover_req
<LI><a href="#[da6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdtp_signal_delay_report_req
<LI><a href="#[da5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdtp_signal_close_req
<LI><a href="#[1030]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdtp_signal_abort_req
<LI><a href="#[e05]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_send_frame
<LI><a href="#[e00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_check_send_credits
<LI><a href="#[103b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdtp_rx_cmd_proc
<LI><a href="#[103a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdtp_cmd_error_check_proc
<LI><a href="#[1039]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdtp_cmd_bad_state_proc
<LI><a href="#[102c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avctp_handle_l2c_data_ind
</UL>

<P><STRONG><a name="[3fe]"></a>le_bond_set_param</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_gap_param_init
<LI><a href="#[41a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_device_rpa_handle_engage_role_decided
<LI><a href="#[407]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_device_irk_handle_power_on
<LI><a href="#[68b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_init
</UL>

<P><STRONG><a name="[744]"></a>le_bond_get_display_key</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_handle_ble_user_confirm
<LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_handle_additional_ble_user_confirm
</UL>

<P><STRONG><a name="[3e8]"></a>le_bond_user_confirm</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_handle_ble_user_confirm
<LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_handle_additional_ble_user_confirm
<LI><a href="#[3e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_gap_handle_numerical_comparison_bond_cfm
<LI><a href="#[728]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_send_le_bond_confirm
</UL>

<P><STRONG><a name="[3e4]"></a>le_bond_just_work_confirm</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_gap_handle_justwork_bond_cfm
</UL>

<P><STRONG><a name="[6ce]"></a>le_bond_cfg_local_key_distribute</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[40e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_device_handle_power_on
<LI><a href="#[3fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_key_derive_init
<LI><a href="#[b56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_init
<LI><a href="#[cbb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_send_kbp_response_le
</UL>

<P><STRONG><a name="[bbf]"></a>le_bond_authen_result_confirm</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[bbe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_handle_authen_result_ind
</UL>

<P><STRONG><a name="[bc9]"></a>le_bond_authen_key_req_confirm</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[bc6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_handle_authen_key_req_ind
</UL>

<P><STRONG><a name="[1027]"></a>le_bond_handle_auth_result_ind</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[d96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_handle_authen_result_ind
</UL>

<P><STRONG><a name="[3ff]"></a>le_gap_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_gap_param_init
</UL>

<P><STRONG><a name="[3f6]"></a>le_get_max_link_num</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_gap_param_init
<LI><a href="#[3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_gap_ble_mgr_init
<LI><a href="#[866]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_mgr_init
</UL>

<P><STRONG><a name="[3f9]"></a>le_register_app_cb</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_gap_init
</UL>

<P><STRONG><a name="[333]"></a>le_set_gap_param</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_gap_param_init
<LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_cfg_reset
<LI><a href="#[6a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_cmd_le_name_set
<LI><a href="#[870]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bap_role_init
<LI><a href="#[b56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_init
</UL>

<P><STRONG><a name="[b61]"></a>le_get_gap_param</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[427]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_svc_handle_profile_data_cmpl
<LI><a href="#[801]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_svc_send_data
<LI><a href="#[b70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_scan_get_cur_state
<LI><a href="#[b60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_start_set_adv_param
</UL>

<P><STRONG><a name="[c4a]"></a>le_check_supported_features</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[c48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_handle_pa_sync
</UL>

<P><STRONG><a name="[6d1]"></a>le_modify_white_list</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[6cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_whitelist_modify
</UL>

<P><STRONG><a name="[6cc]"></a>le_gen_rand_addr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[40a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_adv_update_rpa
<LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_update_rpa
<LI><a href="#[3fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_rand_addr_init
<LI><a href="#[4c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_adv_init
<LI><a href="#[7a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_adv_init
<LI><a href="#[712]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_adv_start
</UL>

<P><STRONG><a name="[3cf]"></a>le_set_data_len</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_gap_handle_new_conn_state_evt
</UL>

<P><STRONG><a name="[bce]"></a>le_get_conn_id</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[bd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_handle_acl_status_info
<LI><a href="#[bca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_handle_gatt_server_store_ind
</UL>

<P><STRONG><a name="[844]"></a>le_get_conn_id_by_handle</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[427]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_svc_handle_profile_data_cmpl
<LI><a href="#[801]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_svc_send_data
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_sync_cb
<LI><a href="#[8b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_terminate
<LI><a href="#[8eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_handle_cccd_msg
<LI><a href="#[8a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_handle_cccd_msg
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_vcs_ble_audio_cback
<LI><a href="#[baf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_svc_read_confirm
<LI><a href="#[bb6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_svc_check_ind_prop
<LI><a href="#[c4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_set_past_recipient_param
<LI><a href="#[c2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_srv_alloc_by_srv_id
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_cccd_update_cb
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_attr_write_cb
<LI><a href="#[cc6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_handle_char_additional_data
<LI><a href="#[cc5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_handle_char_account_key
<LI><a href="#[cc3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_handle_char_additional_passkey
<LI><a href="#[cc2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_handle_char_passkey
<LI><a href="#[cc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_handle_char_kbp
</UL>

<P><STRONG><a name="[d8c]"></a>le_link_check_conn_id_internal</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[d8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;client_send_exchange_mtu_req
</UL>

<P><STRONG><a name="[3d0]"></a>le_get_conn_param</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_gap_handle_new_conn_state_evt
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_timeout_cb
<LI><a href="#[b49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_handle_conn_state_evt
<LI><a href="#[b48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_handle_conn_update_info
<LI><a href="#[bd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_handle_acl_status_info
<LI><a href="#[bca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_handle_gatt_server_store_ind
<LI><a href="#[c78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_handle_conn_state_evt
<LI><a href="#[d8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_vendor_set_priority
</UL>

<P><STRONG><a name="[3ce]"></a>le_get_conn_handle</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_gap_handle_new_conn_state_evt
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_service_general_srv_cb
<LI><a href="#[76c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_send_personalized_name
<LI><a href="#[727]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_send_passkey
<LI><a href="#[cc4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_send_additional_passkey_response
<LI><a href="#[bb7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_svc_general_cb
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_svc_cccd_update_cb
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_svc_write_cb
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_svc_write_post
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_svc_read_cb
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_write_result_cb
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_read_result_cb
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_notify_ind_cb
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_discover_state_cb
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_discover_result_cb
<LI><a href="#[b6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_svc_handle_conn_state_evt
<LI><a href="#[b6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_handle_conn_state_evt
<LI><a href="#[b67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_handle_conn_state
<LI><a href="#[c16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ascs_handle_cig_mgr_msg
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ascs_dm_cback
<LI><a href="#[cbb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_send_kbp_response_le
<LI><a href="#[cb9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_send_kbp_response
<LI><a href="#[c78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_handle_conn_state_evt
<LI><a href="#[d8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;client_send_exchange_mtu_req
<LI><a href="#[cea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_send_rsp
<LI><a href="#[1026]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_bond_get_pair_procedure_type
</UL>

<P><STRONG><a name="[3da]"></a>le_get_conn_addr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_gap_handle_authen_state_evt
<LI><a href="#[687]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bond_le_set_bond_flag
<LI><a href="#[c78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_handle_conn_state_evt
</UL>

<P><STRONG><a name="[3d8]"></a>le_disconnect</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_gap_disconnect
</UL>

<P><STRONG><a name="[b47]"></a>le_update_conn_param</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[b45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_check_conn_update_param
</UL>

<P><STRONG><a name="[100d]"></a>le_find_key_entry</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[d87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;patch_le_bond_handle_auth_key_req_ind
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_bond_get_key
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_bond_check
</UL>

<P><STRONG><a name="[1010]"></a>le_find_key_entry_by_idx</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_bond_get_addr
</UL>

<P><STRONG><a name="[1022]"></a>le_get_key</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[d87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;patch_le_bond_handle_auth_key_req_ind
<LI><a href="#[1021]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_set_local_ltk
</UL>

<P><STRONG><a name="[1023]"></a>le_save_key</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1021]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_set_local_ltk
</UL>

<P><STRONG><a name="[1024]"></a>le_find_entry_by_aes</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[d87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;patch_le_bond_handle_auth_key_req_ind
</UL>

<P><STRONG><a name="[1012]"></a>le_resolve_random_address</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_bond_le_resolve_rpa
</UL>

<P><STRONG><a name="[100f]"></a>le_get_max_le_paired_device_num</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_bond_get_max_num
</UL>

<P><STRONG><a name="[100e]"></a>le_get_dev_ltk</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_bond_get_key
</UL>

<P><STRONG><a name="[11ef]"></a>legacy_key_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE), UNUSED)
<BR><BR>[Called By]<UL></UL>

<P><STRONG><a name="[d7a]"></a>legacy_clear_all_keys</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[b33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_br_clear_all_keys
</UL>

<P><STRONG><a name="[d7b]"></a>legacy_get_paired_idx</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[b2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_br_get_paired_idx
</UL>

<P><STRONG><a name="[d81]"></a>legacy_get_addr_by_priority</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[b2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_br_get_addr_by_priority
</UL>

<P><STRONG><a name="[d7e]"></a>legacy_get_bond_num</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[b2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_br_get_bond_num
</UL>

<P><STRONG><a name="[d82]"></a>legacy_adjust_dev_priority</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[b31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_br_adjust_dev_priority
</UL>

<P><STRONG><a name="[d7c]"></a>legacy_set_bond_flag</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[b2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_br_set_bond_flag
</UL>

<P><STRONG><a name="[d7d]"></a>legacy_get_bond_flag</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[b2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_br_get_bond_flag
</UL>

<P><STRONG><a name="[d78]"></a>legacy_save_bond</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[b30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_br_save_bond
</UL>

<P><STRONG><a name="[d77]"></a>legacy_get_bond</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[b2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_br_get_bond
</UL>

<P><STRONG><a name="[d79]"></a>legacy_delete_bond</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[b32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_br_delete_bond
</UL>

<P><STRONG><a name="[d80]"></a>legacy_get_max_bond_num</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[d7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_br_get_max_bond_num
</UL>

<P><STRONG><a name="[7de]"></a>le_coc_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[7dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_psm_msg_coc_init
</UL>

<P><STRONG><a name="[7df]"></a>le_coc_register_app_cb</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[7dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_psm_msg_coc_init
</UL>

<P><STRONG><a name="[7e1]"></a>le_coc_set_param</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[7dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_psm_msg_coc_init
</UL>

<P><STRONG><a name="[ca5]"></a>le_coc_send_data</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[7c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_gfps_send_nak
<LI><a href="#[7d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_gfps_send_ack
<LI><a href="#[7c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_gfps_notify_connection_status
<LI><a href="#[ca4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_gfps_send_data
</UL>

<P><STRONG><a name="[7e0]"></a>le_coc_reg_psm</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[7dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_psm_msg_coc_init
</UL>

<P><STRONG><a name="[7dc]"></a>le_coc_get_chann_param</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[7db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_psm_msg_coc_conn_callback
</UL>

<P><STRONG><a name="[c37]"></a>le_ext_adv_gap_msg_info_way</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[870]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bap_role_init
</UL>

<P><STRONG><a name="[b57]"></a>le_ext_adv_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[b56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_init
</UL>

<P><STRONG><a name="[1028]"></a>le_ext_adv_find_by_conn_handle</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[d88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_ext_adv_handle_acl_disconnect
</UL>

<P><STRONG><a name="[b5a]"></a>le_ext_adv_create_adv_handle</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[b59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_init_adv_params_all
</UL>

<P><STRONG><a name="[b68]"></a>le_ext_adv_get_adv_handle_by_conn_id</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[b67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_handle_conn_state
</UL>

<P><STRONG><a name="[b5b]"></a>le_ext_adv_set_adv_param</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[717]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_set_multi_param
<LI><a href="#[b62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_set_adv_param
<LI><a href="#[b59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_init_adv_params_all
</UL>

<P><STRONG><a name="[b5d]"></a>le_ext_adv_set_adv_data</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_set_adv_data
<LI><a href="#[717]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_set_multi_param
<LI><a href="#[b59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_init_adv_params_all
</UL>

<P><STRONG><a name="[b5c]"></a>le_ext_adv_set_random</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[42f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_set_random
<LI><a href="#[717]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_set_multi_param
<LI><a href="#[b59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_init_adv_params_all
</UL>

<P><STRONG><a name="[b4f]"></a>le_ext_adv_set_adv_enable_param</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[b4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_action_start
</UL>

<P><STRONG><a name="[b50]"></a>le_ext_adv_enable</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[b4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_action_start
</UL>

<P><STRONG><a name="[b53]"></a>le_ext_adv_disable</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[b52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_action_stop
</UL>

<P><STRONG><a name="[b5e]"></a>le_ext_adv_set_scan_response_data</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[437]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_set_scan_response_data
<LI><a href="#[717]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_set_multi_param
<LI><a href="#[b59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_init_adv_params_all
</UL>

<P><STRONG><a name="[b55]"></a>le_ext_adv_start_setting</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[b54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_action_update
</UL>

<P><STRONG><a name="[400]"></a>le_ext_scan_set_param</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_gap_param_init
<LI><a href="#[b72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scan_start
</UL>

<P><STRONG><a name="[401]"></a>le_ext_scan_set_phy_param</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_gap_param_init
<LI><a href="#[b72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scan_start
</UL>

<P><STRONG><a name="[b75]"></a>le_ext_scan_start</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[b72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scan_start
</UL>

<P><STRONG><a name="[52e]"></a>le_ext_scan_stop</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_handle_action
<LI><a href="#[b71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_scan_check_state
</UL>

<P><STRONG><a name="[c34]"></a>le_pa_sync_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[870]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bap_role_init
</UL>

<P><STRONG><a name="[c85]"></a>le_pa_sync_get_param</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[c84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_send_pa_sync_state
</UL>

<P><STRONG><a name="[c87]"></a>le_pa_sync_terminate_sync</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[c7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_sync_handle_gap_cb
<LI><a href="#[c6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_pa_terminate_int
</UL>

<P><STRONG><a name="[c86]"></a>le_pa_sync_create_sync</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[c6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_pa_sync_establish_int
</UL>

<P><STRONG><a name="[c88]"></a>le_past_recipient_set_periodic_adv_sync_transfer_params</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[c4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_set_past_recipient_param
</UL>

<P><STRONG><a name="[c17]"></a>cig_mgr_get_conn_id</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[c16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ascs_handle_cig_mgr_msg
</UL>

<P><STRONG><a name="[c18]"></a>cig_mgr_get_cis_info</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[c16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ascs_handle_cig_mgr_msg
</UL>

<P><STRONG><a name="[bfe]"></a>cig_mgr_get_isoch_info</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[87f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ascs_action_release_by_cig
<LI><a href="#[8a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ascs_action_release
<LI><a href="#[c16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ascs_handle_cig_mgr_msg
<LI><a href="#[c08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ase_sm_check_iosch_status
<LI><a href="#[c06]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ascs_check_current_state
</UL>

<P><STRONG><a name="[c05]"></a>cig_mgr_setup_data_path</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[c04]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ascs_setup_data_path
</UL>

<P><STRONG><a name="[c03]"></a>cig_mgr_remove_data_path</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[c02]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ascs_remove_data_path
</UL>

<P><STRONG><a name="[c00]"></a>cig_mgr_disconnect</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[87f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ascs_action_release_by_cig
<LI><a href="#[8a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ascs_action_release
</UL>

<P><STRONG><a name="[c36]"></a>cig_mgr_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[870]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bap_role_init
</UL>

<P><STRONG><a name="[c30]"></a>cig_mgr_reg_acceptor_cb</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[c2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ascs_init
</UL>

<P><STRONG><a name="[1199]"></a>cig_mgr_acceptor_accept_cis</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE), UNUSED)
<BR><BR>[Called By]<UL></UL>

<P><STRONG><a name="[119a]"></a>cig_mgr_acceptor_reject_cis</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE), UNUSED)
<BR><BR>[Called By]<UL></UL>

<P><STRONG><a name="[c33]"></a>gap_big_mgr_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[870]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bap_role_init
</UL>

<P><STRONG><a name="[c35]"></a>gap_big_mgr_sync_receiver_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[870]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bap_role_init
</UL>

<P><STRONG><a name="[c92]"></a>gap_big_mgr_sync_receiver_big_create_sync</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[c71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_big_sync_establish_int
</UL>

<P><STRONG><a name="[c93]"></a>gap_big_mgr_sync_receiver_big_terminate_sync</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[c6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_big_terminate_int
</UL>

<P><STRONG><a name="[c94]"></a>gap_big_mgr_setup_data_path</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[8d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_bis_setup_data_path
</UL>

<P><STRONG><a name="[11ce]"></a>gap_big_mgr_remove_data_path</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE), UNUSED)
<BR><BR>[Called By]<UL></UL>

<P><STRONG><a name="[bd6]"></a>gap_set_cccd_data_pending</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[8f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_handle_cccd_pending
</UL>

<P><STRONG><a name="[1011]"></a>gap_bond_set_cccd_data_pending</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_bond_clear_cccd_flag
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_bond_set_cccd_flag
</UL>

<P><STRONG><a name="[bcf]"></a>gap_update_cccd_info</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[bca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_handle_gatt_server_store_ind
</UL>

<P><STRONG><a name="[d00]"></a>gap_chann_find_by_type</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[cff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_lib_mpa_handle_l2c_disconn_ind
</UL>

<P><STRONG><a name="[ff2]"></a>gap_chann_get_addr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[b9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_storage_write
<LI><a href="#[b8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_storage_load
<LI><a href="#[ff4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_service_save_data
<LI><a href="#[ff5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_service_load_data
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_cccd_timeout
</UL>

<P><STRONG><a name="[bc0]"></a>gap_chann_get_handle</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[bca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_handle_gatt_server_store_ind
<LI><a href="#[bc6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_handle_authen_key_req_ind
<LI><a href="#[bbe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_handle_authen_result_ind
</UL>

<P><STRONG><a name="[d01]"></a>gap_chann_del</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[cff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_lib_mpa_handle_l2c_disconn_ind
</UL>

<P><STRONG><a name="[7e2]"></a>gap_ecfc_set_param</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[73c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_psm_init
</UL>

<P><STRONG><a name="[7e3]"></a>gap_ecfc_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[73c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_psm_init
</UL>

<P><STRONG><a name="[ba5]"></a>client_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[ba3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_init
</UL>

<P><STRONG><a name="[ba7]"></a>client_register_spec_client_cb</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[ba3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_init
</UL>

<P><STRONG><a name="[ba6]"></a>client_ext_register_spec_client_cb</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[ba3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_init
</UL>

<P><STRONG><a name="[ba4]"></a>client_cfg_use_ext_api</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[ba3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_init
</UL>

<P><STRONG><a name="[b8d]"></a>client_ext_all_primary_srv_discovery</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_start_discovery_all
</UL>

<P><STRONG><a name="[b97]"></a>client_ext_relationship_discovery</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[b96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_dis_next_service
</UL>

<P><STRONG><a name="[b95]"></a>client_ext_all_char_discovery</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_discover_state_ext_cb
<LI><a href="#[b94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_dis_next_secondary_service
</UL>

<P><STRONG><a name="[b9a]"></a>client_ext_all_char_descriptor_discovery</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[b99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_dis_next_desc
</UL>

<P><STRONG><a name="[b7c]"></a>client_ext_attr_read</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[b7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_execute_req
</UL>

<P><STRONG><a name="[b7d]"></a>client_ext_attr_read_using_uuid</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[b7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_execute_req
</UL>

<P><STRONG><a name="[b7e]"></a>client_ext_attr_write</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_write
<LI><a href="#[b7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_execute_req
</UL>

<P><STRONG><a name="[1254]"></a>client_ext_attr_ind_confirm</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE), UNUSED)
<BR><BR>[Called By]<UL></UL>

<P><STRONG><a name="[42b]"></a>server_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_service_init
<LI><a href="#[42c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_svc_init
</UL>

<P><STRONG><a name="[42a]"></a>server_register_app_cb</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_service_init
<LI><a href="#[42c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_svc_init
</UL>

<P><STRONG><a name="[29a]"></a>server_add_service</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dis_add_service
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bas_add_service
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;transmit_srv_add
<LI><a href="#[802]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_svc_add
</UL>

<P><STRONG><a name="[bae]"></a>server_ext_add_service</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[802]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_svc_add
</UL>

<P><STRONG><a name="[bba]"></a>server_ext_register_app_cb</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[42c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_svc_init
</UL>

<P><STRONG><a name="[bb9]"></a>server_cfg_use_ext_api</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[42c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_svc_init
</UL>

<P><STRONG><a name="[bb0]"></a>server_ext_attr_read_confirm</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[baf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_svc_read_confirm
</UL>

<P><STRONG><a name="[cc8]"></a>server_ext_attr_write_confirm</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[77a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_handle_pending_char_kbp
</UL>

<P><STRONG><a name="[bb4]"></a>server_ext_send_data</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[427]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_svc_handle_profile_data_cmpl
<LI><a href="#[801]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_svc_send_data
</UL>

<P><STRONG><a name="[29e]"></a>server_attr_read_confirm</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bas_battery_level_value_read_confirm
<LI><a href="#[baf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_svc_read_confirm
</UL>

<P><STRONG><a name="[1258]"></a>server_attr_write_confirm</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE), UNUSED)
<BR><BR>[Called By]<UL></UL>

<P><STRONG><a name="[296]"></a>server_send_data</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bas_battery_level_value_notify
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;transmit_srv_tx_data
<LI><a href="#[427]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_svc_handle_profile_data_cmpl
<LI><a href="#[801]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_svc_send_data
</UL>

<P><STRONG><a name="[c20]"></a>server_get_start_handle</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[c5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pacs_handle_pending_cccd
<LI><a href="#[c5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pacs_send_all_notify
<LI><a href="#[c3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_send_all_notify
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_dm_cback
<LI><a href="#[c22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ascs_handle_pending_cccd
<LI><a href="#[c1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ascs_check_ase_state_when_disconnect
</UL>

<P><STRONG><a name="[bbd]"></a>server_ext_get_cccd_info</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[bb6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_svc_check_ind_prop
</UL>

<P><STRONG><a name="[bbc]"></a>server_get_cccd_info</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[bb6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_svc_check_ind_prop
</UL>

<P><STRONG><a name="[c80]"></a>gap_get_gap_bond_manager</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, upperstack.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[868]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_init
</UL>

<P><STRONG><a name="[1ac]"></a>Reset_Handler</STRONG> (Thumb, 108 bytes, Stack size 0 bytes, startup_rtl87x3e.o(RESET))
<BR>[Address Reference Count : 2]<UL><LI> startup_rtl87x3e.o(VECTOR)
<LI> vector_table_ext.o(.data)
</UL>
<P><STRONG><a name="[24c]"></a>__main</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, __main.o(!!!main))
<BR><BR>[Calls]<UL><LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[24d]"></a>__scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter))
<BR><BR>[Called By]<UL><LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[24f]"></a>__scatterload_rt2</STRONG> (Thumb, 44 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[1311]"></a>__scatterload_rt2_thumb_only</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[1312]"></a>__scatterload_null</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[250]"></a>__scatterload_copy</STRONG> (Thumb, 26 bytes, Stack size unknown bytes, __scatter_copy.o(!!handler_copy), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>
<BR>[Called By]<UL><LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>

<P><STRONG><a name="[1313]"></a>__scatterload_zeroinit</STRONG> (Thumb, 28 bytes, Stack size unknown bytes, __scatter_zi.o(!!handler_zi), UNUSED)

<P><STRONG><a name="[25c]"></a>__rt_lib_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit.o(.ARM.Collect$$libinit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_li
</UL>

<P><STRONG><a name="[1314]"></a>__rt_lib_init_fp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000002))

<P><STRONG><a name="[1315]"></a>__rt_lib_init_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000A))

<P><STRONG><a name="[1316]"></a>__rt_lib_init_preinit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000004))

<P><STRONG><a name="[251]"></a>__rt_lib_init_rand_2</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000D))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_lib_init_rand_2 &rArr; _rand_init &rArr; srand
</UL>
<BR>[Calls]<UL><LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_rand_init
</UL>

<P><STRONG><a name="[1317]"></a>__rt_lib_init_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000C))

<P><STRONG><a name="[253]"></a>__rt_lib_init_lc_common</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000F))
<BR><BR>[Calls]<UL><LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_locale (via Veneer)
</UL>

<P><STRONG><a name="[1318]"></a>__rt_lib_init_rand_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000E))

<P><STRONG><a name="[1319]"></a>__rt_lib_init_lc_collate_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000011))

<P><STRONG><a name="[255]"></a>__rt_lib_init_lc_ctype_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000012))
<BR><BR>[Calls]<UL><LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_lc_ctype (via Veneer)
</UL>

<P><STRONG><a name="[131a]"></a>__rt_lib_init_lc_monetary_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000015))

<P><STRONG><a name="[257]"></a>__rt_lib_init_lc_numeric_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000016))
<BR><BR>[Calls]<UL><LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_lc_numeric (via Veneer)
</UL>

<P><STRONG><a name="[131b]"></a>__rt_lib_init_alloca_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002E))

<P><STRONG><a name="[131c]"></a>__rt_lib_init_argv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002C))

<P><STRONG><a name="[131d]"></a>__rt_lib_init_atexit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001B))

<P><STRONG><a name="[131e]"></a>__rt_lib_init_clock_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000021))

<P><STRONG><a name="[131f]"></a>__rt_lib_init_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000032))

<P><STRONG><a name="[1320]"></a>__rt_lib_init_exceptions_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000030))

<P><STRONG><a name="[1321]"></a>__rt_lib_init_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001F))

<P><STRONG><a name="[1322]"></a>__rt_lib_init_getenv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000023))

<P><STRONG><a name="[1323]"></a>__rt_lib_init_lc_time_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000019))

<P><STRONG><a name="[1324]"></a>__rt_lib_init_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000033))

<P><STRONG><a name="[1325]"></a>__rt_lib_init_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001D))

<P><STRONG><a name="[1326]"></a>__rt_lib_init_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000025))

<P><STRONG><a name="[260]"></a>__rt_lib_shutdown</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown.o(.ARM.Collect$$libshutdown$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_ls
</UL>

<P><STRONG><a name="[1327]"></a>__rt_lib_shutdown_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000004))

<P><STRONG><a name="[1328]"></a>__rt_lib_shutdown_fini_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000002))

<P><STRONG><a name="[1329]"></a>__rt_lib_shutdown_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000009))

<P><STRONG><a name="[132a]"></a>__rt_lib_shutdown_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000011))

<P><STRONG><a name="[132b]"></a>__rt_lib_shutdown_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000012))

<P><STRONG><a name="[132c]"></a>__rt_lib_shutdown_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C))

<P><STRONG><a name="[132d]"></a>__rt_lib_shutdown_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000006))

<P><STRONG><a name="[132e]"></a>__rt_lib_shutdown_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000E))

<P><STRONG><a name="[24e]"></a>__rt_entry</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry.o(.ARM.Collect$$rtentry$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_rt2
</UL>

<P><STRONG><a name="[132f]"></a>__rt_entry_presh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000002))

<P><STRONG><a name="[259]"></a>__rt_entry_sh</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry4.o(.ARM.Collect$$rtentry$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[25b]"></a>__rt_entry_li</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000A))
<BR><BR>[Calls]<UL><LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init
</UL>

<P><STRONG><a name="[1330]"></a>__rt_entry_postsh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000009))

<P><STRONG><a name="[25d]"></a>__rt_entry_main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000D))
<BR><BR>[Stack]<UL><LI>Max Depth = 1132 + Unknown Stack Size
<LI>Call Chain = __rt_entry_main &rArr; main &rArr; app_third_party_srv_init &rArr; app_gfps_init &rArr; app_gfps_battery_info_init &rArr; app_gfps_battery_set_info &rArr; gfps_gen_adv_data &rArr; gfps_sass_get_encrypt_conn_status &rArr; sha256_hkdf &rArr; hmac_sha256_crypt &rArr; hmac_sha256_finish &rArr; mbedtls_sha256_update &rArr; mbedtls_sha256_update_ret &rArr; mbedtls_internal_sha256_process
</UL>
<BR>[Calls]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[1331]"></a>__rt_entry_postli_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000C))

<P><STRONG><a name="[10c7]"></a>__rt_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit.o(.ARM.Collect$$rtexit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[25f]"></a>__rt_exit_ls</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000003))
<BR><BR>[Calls]<UL><LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown
</UL>

<P><STRONG><a name="[1332]"></a>__rt_exit_prels_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000002))

<P><STRONG><a name="[261]"></a>__rt_exit_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>

<P><STRONG><a name="[263]"></a>key_gpio_mfb_intr_handler</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, app_key_gpio.o(.isr.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = key_gpio_mfb_intr_handler &rArr; app_io_msg_send
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mfb_get_level
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dlps_disable (via Veneer)
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_io_msg_send (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_gpio_mfb_level_change_cb
</UL>

<P><STRONG><a name="[b]"></a>key_gpio_intr_cb</STRONG> (Thumb, 200 bytes, Stack size 56 bytes, app_key_gpio.o(.isr.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = key_gpio_intr_cb &rArr; app_io_msg_send
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_irq_enable
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_irq_disable
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_irq_change_polarity
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_get_input_level
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dlps_pad_wake_up_polarity_invert
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dlps_enable (via Veneer)
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dlps_disable (via Veneer)
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_io_msg_send (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[555]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dlps_exit_callback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_key_gpio.o(.text)
</UL>
<P><STRONG><a name="[2ee]"></a>app_key_is_combinekey_power_on_off</STRONG> (Thumb, 46 bytes, Stack size 12 bytes, app_key_process.o(.isr.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = app_key_is_combinekey_power_on_off
</UL>
<BR>[Called By]<UL><LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_wakeup_reason_check
<LI><a href="#[54c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dlps_enter_callback
</UL>

<P><STRONG><a name="[26e]"></a>app_dlps_pad_wake_up_enable</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, app_dlps.o(.isr.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = app_dlps_pad_wake_up_enable &rArr; Pad_TableConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pad_TableConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[54c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dlps_enter_callback
</UL>

<P><STRONG><a name="[270]"></a>app_dlps_set_pad_wake_up</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, app_dlps.o(.isr.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = app_dlps_set_pad_wake_up &rArr; Pad_TableConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pad_TableConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[554]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ext_charger_handle_enter_dlps
</UL>

<P><STRONG><a name="[268]"></a>app_dlps_pad_wake_up_polarity_invert</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, app_dlps.o(.isr.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = app_dlps_pad_wake_up_polarity_invert &rArr; hal_gpio_get_input_level
</UL>
<BR>[Calls]<UL><LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_get_input_level
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pad_TableConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_gpio_intr_cb
</UL>

<P><STRONG><a name="[271]"></a>app_ext_charger_is_pin_status_det_pin</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, app_ext_charger.o(.isr.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_GetNum
</UL>

<P><STRONG><a name="[2e2]"></a>app_ext_charger_check_support</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, app_ext_charger.o(.isr.text))
<BR><BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_task
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_charger_get_charge_state
<LI><a href="#[555]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dlps_exit_callback
<LI><a href="#[54c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dlps_enter_callback
<LI><a href="#[6f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ext_charger_check_status
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ext_charger_dlps_check_cb
</UL>

<P><STRONG><a name="[84]"></a>adp_io_handler</STRONG> (Thumb, 122 bytes, Stack size 24 bytes, hal_adp.o(.isr.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = adp_io_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOx_MaskINTConfig
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOx_IntPolaritySet
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOx_ClearINTPendingBit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hal_adp.o(.text)
</UL>
<P><STRONG><a name="[8f]"></a>mfb_handler</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, mfb_api.o(.isr.text))
<BR>[Address Reference Count : 1]<UL><LI> mfb_api.o(.text)
</UL>
<P><STRONG><a name="[264]"></a>mfb_get_level</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, mfb_api.o(.isr.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = mfb_get_level
</UL>
<BR>[Calls]<UL><LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btaon_fast_read_safe (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_gpio_mfb_intr_handler
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_gpio_key0_debounce_handler
</UL>

<P><STRONG><a name="[ada]"></a>mfb_irq_enable</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, mfb_api.o(.isr.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = mfb_irq_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mfb_init
</UL>

<P><STRONG><a name="[27b]"></a>get_gpio</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, hal_gpio.o(.isr.text))
<BR><BR>[Called By]<UL><LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_set_up_irq
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_irq_enable
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_irq_disable
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_irq_change_polarity
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_init_pin
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_get_input_level
<LI><a href="#[ae2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_change_direction
</UL>

<P><STRONG><a name="[269]"></a>hal_gpio_get_input_level</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, hal_gpio.o(.isr.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = hal_gpio_get_input_level
</UL>
<BR>[Calls]<UL><LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_GetNum
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_GetPin
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_gpio
</UL>
<BR>[Called By]<UL><LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dlps_pad_wake_up_polarity_invert
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_gpio_intr_cb
<LI><a href="#[554]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ext_charger_handle_enter_dlps
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ext_charger_charging_handler
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ext_charger_status_det_gpio_intr_handler
</UL>

<P><STRONG><a name="[26b]"></a>hal_gpio_irq_change_polarity</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, hal_gpio.o(.isr.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = hal_gpio_irq_change_polarity
</UL>
<BR>[Calls]<UL><LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_GetNum
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_GetPin
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOx_IntPolaritySet
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_gpio
</UL>
<BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_gpio_intr_cb
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_gpio_key0_debounce_handler
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ext_charger_status_det_gpio_intr_handler
</UL>

<P><STRONG><a name="[26d]"></a>hal_gpio_irq_enable</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, hal_gpio.o(.isr.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = hal_gpio_irq_enable
</UL>
<BR>[Calls]<UL><LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_GetNum
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_GetPin
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOx_MaskINTConfig
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOx_INTConfig
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_gpio
</UL>
<BR>[Called By]<UL><LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_gpio_initial
<LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ext_charger_init
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_gpio_intr_cb
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ext_charger_status_det_gpio_intr_handler
</UL>

<P><STRONG><a name="[eb]"></a>sys_sw_timer_handler</STRONG> (Thumb, 76 bytes, Stack size 32 bytes, sys_timer.o(.isr.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = sys_sw_timer_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sys_timer.o(.text)
</UL>
<P><STRONG><a name="[e8]"></a>sys_hw_timer_handler</STRONG> (Thumb, 88 bytes, Stack size 40 bytes, sys_timer.o(.isr.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = sys_hw_timer_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_hp_time_get
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sys_timer.o(.text)
</UL>
<P><STRONG><a name="[1bd]"></a>ADC_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl87x3e.o(.text))
<BR>[Address Reference Count : 2]<UL><LI> startup_rtl87x3e.o(VECTOR)
<LI> vector_table_ext.o(.data)
</UL>
<P><STRONG><a name="[1d0]"></a>ADP_DET_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl87x3e.o(.text))
<BR>[Address Reference Count : 2]<UL><LI> startup_rtl87x3e.o(VECTOR)
<LI> vector_table_ext.o(.data)
</UL>
<P><STRONG><a name="[1fd]"></a>ADP_IN_DET_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl87x3e.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_rtl87x3e.o(VECTOR)
</UL>
<P><STRONG><a name="[1fe]"></a>ADP_OUT_DET_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl87x3e.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_rtl87x3e.o(VECTOR)
</UL>
<P><STRONG><a name="[1f4]"></a>ANC_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl87x3e.o(.text))
<BR>[Address Reference Count : 2]<UL><LI> startup_rtl87x3e.o(VECTOR)
<LI> vector_table_ext.o(.data)
</UL>
<P><STRONG><a name="[1ee]"></a>ASRC0_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl87x3e.o(.text))
<BR>[Address Reference Count : 2]<UL><LI> startup_rtl87x3e.o(VECTOR)
<LI> vector_table_ext.o(.data)
</UL>
<P><STRONG><a name="[1ef]"></a>ASRC1_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl87x3e.o(.text))
<BR>[Address Reference Count : 2]<UL><LI> startup_rtl87x3e.o(VECTOR)
<LI> vector_table_ext.o(.data)
</UL>
<P><STRONG><a name="[1b8]"></a>BTMAC_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl87x3e.o(.text))
<BR>[Address Reference Count : 2]<UL><LI> startup_rtl87x3e.o(VECTOR)
<LI> vector_table_ext.o(.data)
</UL>
<P><STRONG><a name="[1b0]"></a>BusFault_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl87x3e.o(.text))
<BR>[Address Reference Count : 2]<UL><LI> startup_rtl87x3e.o(VECTOR)
<LI> vector_table_ext.o(.data)
</UL>
<P><STRONG><a name="[1b9]"></a>DSP_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl87x3e.o(.text))
<BR>[Address Reference Count : 2]<UL><LI> startup_rtl87x3e.o(VECTOR)
<LI> vector_table_ext.o(.data)
</UL>
<P><STRONG><a name="[1b3]"></a>DebugMon_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl87x3e.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_rtl87x3e.o(VECTOR)
</UL>
<P><STRONG><a name="[5]"></a>Default_Handler</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, startup_rtl87x3e.o(.text))
<BR>[Address Reference Count : 3]<UL><LI> startup_rtl87x3e.o(VECTOR)
<LI> system_rtl87x3.o(.text)
<LI> vector_table_ext.o(.data)
</UL>
<P><STRONG><a name="[1d2]"></a>GDMA0_Channel0_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl87x3e.o(.text))
<BR>[Address Reference Count : 2]<UL><LI> startup_rtl87x3e.o(VECTOR)
<LI> vector_table_ext.o(.data)
</UL>
<P><STRONG><a name="[1d3]"></a>GDMA0_Channel1_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl87x3e.o(.text))
<BR>[Address Reference Count : 2]<UL><LI> startup_rtl87x3e.o(VECTOR)
<LI> vector_table_ext.o(.data)
</UL>
<P><STRONG><a name="[1d4]"></a>GDMA0_Channel2_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl87x3e.o(.text))
<BR>[Address Reference Count : 2]<UL><LI> startup_rtl87x3e.o(VECTOR)
<LI> vector_table_ext.o(.data)
</UL>
<P><STRONG><a name="[1d5]"></a>GDMA0_Channel3_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl87x3e.o(.text))
<BR>[Address Reference Count : 2]<UL><LI> startup_rtl87x3e.o(VECTOR)
<LI> vector_table_ext.o(.data)
</UL>
<P><STRONG><a name="[1d6]"></a>GDMA0_Channel4_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl87x3e.o(.text))
<BR>[Address Reference Count : 2]<UL><LI> startup_rtl87x3e.o(VECTOR)
<LI> vector_table_ext.o(.data)
</UL>
<P><STRONG><a name="[1d7]"></a>GDMA0_Channel5_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl87x3e.o(.text))
<BR>[Address Reference Count : 2]<UL><LI> startup_rtl87x3e.o(VECTOR)
<LI> vector_table_ext.o(.data)
</UL>
<P><STRONG><a name="[1d8]"></a>GDMA0_Channel6_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl87x3e.o(.text))
<BR>[Address Reference Count : 2]<UL><LI> startup_rtl87x3e.o(VECTOR)
<LI> vector_table_ext.o(.data)
</UL>
<P><STRONG><a name="[1d9]"></a>GDMA0_Channel7_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl87x3e.o(.text))
<BR>[Address Reference Count : 2]<UL><LI> startup_rtl87x3e.o(VECTOR)
<LI> vector_table_ext.o(.data)
</UL>
<P><STRONG><a name="[1da]"></a>GDMA0_Channel8_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl87x3e.o(.text))
<BR>[Address Reference Count : 2]<UL><LI> startup_rtl87x3e.o(VECTOR)
<LI> vector_table_ext.o(.data)
</UL>
<P><STRONG><a name="[207]"></a>GPIOA10_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl87x3e.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_rtl87x3e.o(VECTOR)
</UL>
<P><STRONG><a name="[208]"></a>GPIOA11_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl87x3e.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_rtl87x3e.o(VECTOR)
</UL>
<P><STRONG><a name="[209]"></a>GPIOA12_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl87x3e.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_rtl87x3e.o(VECTOR)
</UL>
<P><STRONG><a name="[20a]"></a>GPIOA13_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl87x3e.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_rtl87x3e.o(VECTOR)
</UL>
<P><STRONG><a name="[20b]"></a>GPIOA14_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl87x3e.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_rtl87x3e.o(VECTOR)
</UL>
<P><STRONG><a name="[20c]"></a>GPIOA15_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl87x3e.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_rtl87x3e.o(VECTOR)
</UL>
<P><STRONG><a name="[20d]"></a>GPIOA16_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl87x3e.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_rtl87x3e.o(VECTOR)
</UL>
<P><STRONG><a name="[20e]"></a>GPIOA17_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl87x3e.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_rtl87x3e.o(VECTOR)
</UL>
<P><STRONG><a name="[20f]"></a>GPIOA18_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl87x3e.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_rtl87x3e.o(VECTOR)
</UL>
<P><STRONG><a name="[210]"></a>GPIOA19_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl87x3e.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_rtl87x3e.o(VECTOR)
</UL>
<P><STRONG><a name="[211]"></a>GPIOA20_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl87x3e.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_rtl87x3e.o(VECTOR)
</UL>
<P><STRONG><a name="[212]"></a>GPIOA21_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl87x3e.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_rtl87x3e.o(VECTOR)
</UL>
<P><STRONG><a name="[213]"></a>GPIOA22_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl87x3e.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_rtl87x3e.o(VECTOR)
</UL>
<P><STRONG><a name="[214]"></a>GPIOA23_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl87x3e.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_rtl87x3e.o(VECTOR)
</UL>
<P><STRONG><a name="[215]"></a>GPIOA24_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl87x3e.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_rtl87x3e.o(VECTOR)
</UL>
<P><STRONG><a name="[216]"></a>GPIOA25_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl87x3e.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_rtl87x3e.o(VECTOR)
</UL>
<P><STRONG><a name="[217]"></a>GPIOA26_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl87x3e.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_rtl87x3e.o(VECTOR)
</UL>
<P><STRONG><a name="[218]"></a>GPIOA27_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl87x3e.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_rtl87x3e.o(VECTOR)
</UL>
<P><STRONG><a name="[219]"></a>GPIOA28_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl87x3e.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_rtl87x3e.o(VECTOR)
</UL>
<P><STRONG><a name="[21a]"></a>GPIOA29_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl87x3e.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_rtl87x3e.o(VECTOR)
</UL>
<P><STRONG><a name="[1ff]"></a>GPIOA2_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl87x3e.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_rtl87x3e.o(VECTOR)
</UL>
<P><STRONG><a name="[21b]"></a>GPIOA30_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl87x3e.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_rtl87x3e.o(VECTOR)
</UL>
<P><STRONG><a name="[21c]"></a>GPIOA31_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl87x3e.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_rtl87x3e.o(VECTOR)
</UL>
<P><STRONG><a name="[200]"></a>GPIOA3_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl87x3e.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_rtl87x3e.o(VECTOR)
</UL>
<P><STRONG><a name="[201]"></a>GPIOA4_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl87x3e.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_rtl87x3e.o(VECTOR)
</UL>
<P><STRONG><a name="[202]"></a>GPIOA5_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl87x3e.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_rtl87x3e.o(VECTOR)
</UL>
<P><STRONG><a name="[203]"></a>GPIOA6_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl87x3e.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_rtl87x3e.o(VECTOR)
</UL>
<P><STRONG><a name="[204]"></a>GPIOA7_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl87x3e.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_rtl87x3e.o(VECTOR)
</UL>
<P><STRONG><a name="[205]"></a>GPIOA8_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl87x3e.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_rtl87x3e.o(VECTOR)
</UL>
<P><STRONG><a name="[206]"></a>GPIOA9_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl87x3e.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_rtl87x3e.o(VECTOR)
</UL>
<P><STRONG><a name="[21d]"></a>GPIOB0_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl87x3e.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_rtl87x3e.o(VECTOR)
</UL>
<P><STRONG><a name="[227]"></a>GPIOB10_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl87x3e.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_rtl87x3e.o(VECTOR)
</UL>
<P><STRONG><a name="[228]"></a>GPIOB11_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl87x3e.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_rtl87x3e.o(VECTOR)
</UL>
<P><STRONG><a name="[229]"></a>GPIOB12_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl87x3e.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_rtl87x3e.o(VECTOR)
</UL>
<P><STRONG><a name="[22a]"></a>GPIOB13_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl87x3e.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_rtl87x3e.o(VECTOR)
</UL>
<P><STRONG><a name="[22b]"></a>GPIOB14_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl87x3e.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_rtl87x3e.o(VECTOR)
</UL>
<P><STRONG><a name="[22c]"></a>GPIOB15_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl87x3e.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_rtl87x3e.o(VECTOR)
</UL>
<P><STRONG><a name="[22d]"></a>GPIOB16_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl87x3e.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_rtl87x3e.o(VECTOR)
</UL>
<P><STRONG><a name="[22e]"></a>GPIOB17_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl87x3e.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_rtl87x3e.o(VECTOR)
</UL>
<P><STRONG><a name="[22f]"></a>GPIOB18_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl87x3e.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_rtl87x3e.o(VECTOR)
</UL>
<P><STRONG><a name="[230]"></a>GPIOB19_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl87x3e.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_rtl87x3e.o(VECTOR)
</UL>
<P><STRONG><a name="[21e]"></a>GPIOB1_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl87x3e.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_rtl87x3e.o(VECTOR)
</UL>
<P><STRONG><a name="[231]"></a>GPIOB20_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl87x3e.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_rtl87x3e.o(VECTOR)
</UL>
<P><STRONG><a name="[232]"></a>GPIOB21_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl87x3e.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_rtl87x3e.o(VECTOR)
</UL>
<P><STRONG><a name="[233]"></a>GPIOB22_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl87x3e.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_rtl87x3e.o(VECTOR)
</UL>
<P><STRONG><a name="[234]"></a>GPIOB23_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl87x3e.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_rtl87x3e.o(VECTOR)
</UL>
<P><STRONG><a name="[235]"></a>GPIOB24_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl87x3e.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_rtl87x3e.o(VECTOR)
</UL>
<P><STRONG><a name="[236]"></a>GPIOB25_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl87x3e.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_rtl87x3e.o(VECTOR)
</UL>
<P><STRONG><a name="[237]"></a>GPIOB26_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl87x3e.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_rtl87x3e.o(VECTOR)
</UL>
<P><STRONG><a name="[238]"></a>GPIOB27_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl87x3e.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_rtl87x3e.o(VECTOR)
</UL>
<P><STRONG><a name="[239]"></a>GPIOB28_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl87x3e.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_rtl87x3e.o(VECTOR)
</UL>
<P><STRONG><a name="[23a]"></a>GPIOB29_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl87x3e.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_rtl87x3e.o(VECTOR)
</UL>
<P><STRONG><a name="[21f]"></a>GPIOB2_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl87x3e.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_rtl87x3e.o(VECTOR)
</UL>
<P><STRONG><a name="[23b]"></a>GPIOB30_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl87x3e.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_rtl87x3e.o(VECTOR)
</UL>
<P><STRONG><a name="[23c]"></a>GPIOB31_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl87x3e.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_rtl87x3e.o(VECTOR)
</UL>
<P><STRONG><a name="[220]"></a>GPIOB3_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl87x3e.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_rtl87x3e.o(VECTOR)
</UL>
<P><STRONG><a name="[221]"></a>GPIOB4_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl87x3e.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_rtl87x3e.o(VECTOR)
</UL>
<P><STRONG><a name="[222]"></a>GPIOB5_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl87x3e.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_rtl87x3e.o(VECTOR)
</UL>
<P><STRONG><a name="[223]"></a>GPIOB6_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl87x3e.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_rtl87x3e.o(VECTOR)
</UL>
<P><STRONG><a name="[224]"></a>GPIOB7_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl87x3e.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_rtl87x3e.o(VECTOR)
</UL>
<P><STRONG><a name="[225]"></a>GPIOB8_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl87x3e.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_rtl87x3e.o(VECTOR)
</UL>
<P><STRONG><a name="[226]"></a>GPIOB9_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl87x3e.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_rtl87x3e.o(VECTOR)
</UL>
<P><STRONG><a name="[1c8]"></a>GPIO_A0_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl87x3e.o(.text))
<BR>[Address Reference Count : 2]<UL><LI> startup_rtl87x3e.o(VECTOR)
<LI> vector_table_ext.o(.data)
</UL>
<P><STRONG><a name="[1c9]"></a>GPIO_A1_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl87x3e.o(.text))
<BR>[Address Reference Count : 2]<UL><LI> startup_rtl87x3e.o(VECTOR)
<LI> vector_table_ext.o(.data)
</UL>
<P><STRONG><a name="[1cc]"></a>GPIO_A_16_23_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl87x3e.o(.text))
<BR>[Address Reference Count : 2]<UL><LI> startup_rtl87x3e.o(VECTOR)
<LI> vector_table_ext.o(.data)
</UL>
<P><STRONG><a name="[1cd]"></a>GPIO_A_24_31_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl87x3e.o(.text))
<BR>[Address Reference Count : 2]<UL><LI> startup_rtl87x3e.o(VECTOR)
<LI> vector_table_ext.o(.data)
</UL>
<P><STRONG><a name="[1ca]"></a>GPIO_A_2_7_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl87x3e.o(.text))
<BR>[Address Reference Count : 2]<UL><LI> startup_rtl87x3e.o(VECTOR)
<LI> vector_table_ext.o(.data)
</UL>
<P><STRONG><a name="[1cb]"></a>GPIO_A_8_15_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl87x3e.o(.text))
<BR>[Address Reference Count : 2]<UL><LI> startup_rtl87x3e.o(VECTOR)
<LI> vector_table_ext.o(.data)
</UL>
<P><STRONG><a name="[1db]"></a>GPIO_B_0_7_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl87x3e.o(.text))
<BR>[Address Reference Count : 2]<UL><LI> startup_rtl87x3e.o(VECTOR)
<LI> vector_table_ext.o(.data)
</UL>
<P><STRONG><a name="[1dd]"></a>GPIO_B_16_23_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl87x3e.o(.text))
<BR>[Address Reference Count : 2]<UL><LI> startup_rtl87x3e.o(VECTOR)
<LI> vector_table_ext.o(.data)
</UL>
<P><STRONG><a name="[1de]"></a>GPIO_B_24_31_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl87x3e.o(.text))
<BR>[Address Reference Count : 2]<UL><LI> startup_rtl87x3e.o(VECTOR)
<LI> vector_table_ext.o(.data)
</UL>
<P><STRONG><a name="[1dc]"></a>GPIO_B_8_15_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl87x3e.o(.text))
<BR>[Address Reference Count : 2]<UL><LI> startup_rtl87x3e.o(VECTOR)
<LI> vector_table_ext.o(.data)
</UL>
<P><STRONG><a name="[1ae]"></a>HardFault_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl87x3e.o(.text))
<BR>[Address Reference Count : 2]<UL><LI> startup_rtl87x3e.o(VECTOR)
<LI> vector_table_ext.o(.data)
</UL>
<P><STRONG><a name="[1bc]"></a>I2C0_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl87x3e.o(.text))
<BR>[Address Reference Count : 2]<UL><LI> startup_rtl87x3e.o(VECTOR)
<LI> vector_table_ext.o(.data)
</UL>
<P><STRONG><a name="[1e1]"></a>I2C1_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl87x3e.o(.text))
<BR>[Address Reference Count : 2]<UL><LI> startup_rtl87x3e.o(VECTOR)
<LI> vector_table_ext.o(.data)
</UL>
<P><STRONG><a name="[1e2]"></a>I2C2_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl87x3e.o(.text))
<BR>[Address Reference Count : 2]<UL><LI> startup_rtl87x3e.o(VECTOR)
<LI> vector_table_ext.o(.data)
</UL>
<P><STRONG><a name="[1f0]"></a>I8080_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl87x3e.o(.text))
<BR>[Address Reference Count : 2]<UL><LI> startup_rtl87x3e.o(VECTOR)
<LI> vector_table_ext.o(.data)
</UL>
<P><STRONG><a name="[1f9]"></a>IR_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl87x3e.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_rtl87x3e.o(VECTOR)
</UL>
<P><STRONG><a name="[1f1]"></a>ISO7816_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl87x3e.o(.text))
<BR>[Address Reference Count : 2]<UL><LI> startup_rtl87x3e.o(VECTOR)
<LI> vector_table_ext.o(.data)
</UL>
<P><STRONG><a name="[1e3]"></a>KeyScan_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl87x3e.o(.text))
<BR>[Address Reference Count : 2]<UL><LI> startup_rtl87x3e.o(VECTOR)
<LI> vector_table_ext.o(.data)
</UL>
<P><STRONG><a name="[1fc]"></a>LPCOMP_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl87x3e.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_rtl87x3e.o(VECTOR)
</UL>
<P><STRONG><a name="[1f6]"></a>MFB_DET_L_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl87x3e.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_rtl87x3e.o(VECTOR)
</UL>
<P><STRONG><a name="[1af]"></a>MemManage_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl87x3e.o(.text))
<BR>[Address Reference Count : 2]<UL><LI> startup_rtl87x3e.o(VECTOR)
<LI> vector_table_ext.o(.data)
</UL>
<P><STRONG><a name="[1ad]"></a>NMI_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl87x3e.o(.text))
<BR>[Address Reference Count : 2]<UL><LI> startup_rtl87x3e.o(VECTOR)
<LI> vector_table_ext.o(.data)
</UL>
<P><STRONG><a name="[1fb]"></a>PSRAMC_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl87x3e.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_rtl87x3e.o(VECTOR)
</UL>
<P><STRONG><a name="[1f7]"></a>PTA_Mailbox_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl87x3e.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_rtl87x3e.o(VECTOR)
</UL>
<P><STRONG><a name="[1b4]"></a>PendSV_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl87x3e.o(.text))
<BR>[Address Reference Count : 2]<UL><LI> startup_rtl87x3e.o(VECTOR)
<LI> vector_table_ext.o(.data)
</UL>
<P><STRONG><a name="[1c7]"></a>Peri_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl87x3e.o(.text))
<BR>[Address Reference Count : 2]<UL><LI> startup_rtl87x3e.o(VECTOR)
<LI> vector_table_ext.o(.data)
</UL>
<P><STRONG><a name="[1e4]"></a>QDEC_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl87x3e.o(.text))
<BR>[Address Reference Count : 2]<UL><LI> startup_rtl87x3e.o(VECTOR)
<LI> vector_table_ext.o(.data)
</UL>
<P><STRONG><a name="[1c3]"></a>RTC_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl87x3e.o(.text))
<BR>[Address Reference Count : 2]<UL><LI> startup_rtl87x3e.o(VECTOR)
<LI> vector_table_ext.o(.data)
</UL>
<P><STRONG><a name="[1ba]"></a>RXI300_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl87x3e.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_rtl87x3e.o(VECTOR)
</UL>
<P><STRONG><a name="[1f2]"></a>SDIO0_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl87x3e.o(.text))
<BR>[Address Reference Count : 2]<UL><LI> startup_rtl87x3e.o(VECTOR)
<LI> vector_table_ext.o(.data)
</UL>
<P><STRONG><a name="[1bb]"></a>SPI0_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl87x3e.o(.text))
<BR>[Address Reference Count : 2]<UL><LI> startup_rtl87x3e.o(VECTOR)
<LI> vector_table_ext.o(.data)
</UL>
<P><STRONG><a name="[1df]"></a>SPI1_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl87x3e.o(.text))
<BR>[Address Reference Count : 2]<UL><LI> startup_rtl87x3e.o(VECTOR)
<LI> vector_table_ext.o(.data)
</UL>
<P><STRONG><a name="[1e0]"></a>SPI2_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl87x3e.o(.text))
<BR>[Address Reference Count : 2]<UL><LI> startup_rtl87x3e.o(VECTOR)
<LI> vector_table_ext.o(.data)
</UL>
<P><STRONG><a name="[1e7]"></a>SPIC0_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl87x3e.o(.text))
<BR>[Address Reference Count : 2]<UL><LI> startup_rtl87x3e.o(VECTOR)
<LI> vector_table_ext.o(.data)
</UL>
<P><STRONG><a name="[1e8]"></a>SPIC1_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl87x3e.o(.text))
<BR>[Address Reference Count : 2]<UL><LI> startup_rtl87x3e.o(VECTOR)
<LI> vector_table_ext.o(.data)
</UL>
<P><STRONG><a name="[1e9]"></a>SPIC2_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl87x3e.o(.text))
<BR>[Address Reference Count : 2]<UL><LI> startup_rtl87x3e.o(VECTOR)
<LI> vector_table_ext.o(.data)
</UL>
<P><STRONG><a name="[1ea]"></a>SPIC3_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl87x3e.o(.text))
<BR>[Address Reference Count : 2]<UL><LI> startup_rtl87x3e.o(VECTOR)
<LI> vector_table_ext.o(.data)
</UL>
<P><STRONG><a name="[1bf]"></a>SPORT0_RX_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl87x3e.o(.text))
<BR>[Address Reference Count : 2]<UL><LI> startup_rtl87x3e.o(VECTOR)
<LI> vector_table_ext.o(.data)
</UL>
<P><STRONG><a name="[1be]"></a>SPORT0_TX_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl87x3e.o(.text))
<BR>[Address Reference Count : 2]<UL><LI> startup_rtl87x3e.o(VECTOR)
<LI> vector_table_ext.o(.data)
</UL>
<P><STRONG><a name="[1ce]"></a>SPORT1_RX_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl87x3e.o(.text))
<BR>[Address Reference Count : 2]<UL><LI> startup_rtl87x3e.o(VECTOR)
<LI> vector_table_ext.o(.data)
</UL>
<P><STRONG><a name="[1cf]"></a>SPORT1_TX_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl87x3e.o(.text))
<BR>[Address Reference Count : 2]<UL><LI> startup_rtl87x3e.o(VECTOR)
<LI> vector_table_ext.o(.data)
</UL>
<P><STRONG><a name="[1f3]"></a>SPORT2_RX_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl87x3e.o(.text))
<BR>[Address Reference Count : 2]<UL><LI> startup_rtl87x3e.o(VECTOR)
<LI> vector_table_ext.o(.data)
</UL>
<P><STRONG><a name="[1b2]"></a>SVC_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl87x3e.o(.text))
<BR>[Address Reference Count : 2]<UL><LI> startup_rtl87x3e.o(VECTOR)
<LI> vector_table_ext.o(.data)
</UL>
<P><STRONG><a name="[1b5]"></a>SysTick_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl87x3e.o(.text))
<BR>[Address Reference Count : 2]<UL><LI> startup_rtl87x3e.o(VECTOR)
<LI> vector_table_ext.o(.data)
</UL>
<P><STRONG><a name="[1b6]"></a>System_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl87x3e.o(.text))
<BR>[Address Reference Count : 2]<UL><LI> startup_rtl87x3e.o(VECTOR)
<LI> vector_table_ext.o(.data)
</UL>
<P><STRONG><a name="[1c0]"></a>TIM2_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl87x3e.o(.text))
<BR>[Address Reference Count : 2]<UL><LI> startup_rtl87x3e.o(VECTOR)
<LI> vector_table_ext.o(.data)
</UL>
<P><STRONG><a name="[1c1]"></a>TIM3_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl87x3e.o(.text))
<BR>[Address Reference Count : 2]<UL><LI> startup_rtl87x3e.o(VECTOR)
<LI> vector_table_ext.o(.data)
</UL>
<P><STRONG><a name="[1c2]"></a>TIM4_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl87x3e.o(.text))
<BR>[Address Reference Count : 2]<UL><LI> startup_rtl87x3e.o(VECTOR)
<LI> vector_table_ext.o(.data)
</UL>
<P><STRONG><a name="[1eb]"></a>TIM5_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl87x3e.o(.text))
<BR>[Address Reference Count : 2]<UL><LI> startup_rtl87x3e.o(VECTOR)
<LI> vector_table_ext.o(.data)
</UL>
<P><STRONG><a name="[1ec]"></a>TIM6_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl87x3e.o(.text))
<BR>[Address Reference Count : 2]<UL><LI> startup_rtl87x3e.o(VECTOR)
<LI> vector_table_ext.o(.data)
</UL>
<P><STRONG><a name="[1ed]"></a>TIM7_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl87x3e.o(.text))
<BR>[Address Reference Count : 2]<UL><LI> startup_rtl87x3e.o(VECTOR)
<LI> vector_table_ext.o(.data)
</UL>
<P><STRONG><a name="[1f5]"></a>TOUCH_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl87x3e.o(.text))
<BR>[Address Reference Count : 2]<UL><LI> startup_rtl87x3e.o(VECTOR)
<LI> vector_table_ext.o(.data)
</UL>
<P><STRONG><a name="[1fa]"></a>TRNG_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl87x3e.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_rtl87x3e.o(VECTOR)
</UL>
<P><STRONG><a name="[1c4]"></a>UART0_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl87x3e.o(.text))
<BR>[Address Reference Count : 2]<UL><LI> startup_rtl87x3e.o(VECTOR)
<LI> vector_table_ext.o(.data)
</UL>
<P><STRONG><a name="[1c5]"></a>UART1_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl87x3e.o(.text))
<BR>[Address Reference Count : 2]<UL><LI> startup_rtl87x3e.o(VECTOR)
<LI> vector_table_ext.o(.data)
</UL>
<P><STRONG><a name="[1c6]"></a>UART2_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl87x3e.o(.text))
<BR>[Address Reference Count : 2]<UL><LI> startup_rtl87x3e.o(VECTOR)
<LI> vector_table_ext.o(.data)
</UL>
<P><STRONG><a name="[1e5]"></a>USB_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl87x3e.o(.text))
<BR>[Address Reference Count : 2]<UL><LI> startup_rtl87x3e.o(VECTOR)
<LI> vector_table_ext.o(.data)
</UL>
<P><STRONG><a name="[1e6]"></a>USB_ISOC_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl87x3e.o(.text))
<BR>[Address Reference Count : 2]<UL><LI> startup_rtl87x3e.o(VECTOR)
<LI> vector_table_ext.o(.data)
</UL>
<P><STRONG><a name="[1b1]"></a>UsageFault_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl87x3e.o(.text))
<BR>[Address Reference Count : 2]<UL><LI> startup_rtl87x3e.o(VECTOR)
<LI> vector_table_ext.o(.data)
</UL>
<P><STRONG><a name="[1f8]"></a>Utmi_Suspend_N_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl87x3e.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_rtl87x3e.o(VECTOR)
</UL>
<P><STRONG><a name="[1d1]"></a>VBAT_DET_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl87x3e.o(.text))
<BR>[Address Reference Count : 2]<UL><LI> startup_rtl87x3e.o(VECTOR)
<LI> vector_table_ext.o(.data)
</UL>
<P><STRONG><a name="[1b7]"></a>WDT_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl87x3e.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_rtl87x3e.o(VECTOR)
</UL>
<P><STRONG><a name="[25a]"></a>__user_setup_stackheap</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_rtl87x3e.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_sh
</UL>

<P><STRONG><a name="[3]"></a>system_init</STRONG> (Thumb, 70 bytes, Stack size 24 bytes, system_rtl87x3.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = system_init &rArr; sys_hall_upperstack_ini &rArr; storage_partition_get &rArr; strncmp
</UL>
<BR>[Calls]<UL><LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setlocale (via Veneer)
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_random (via Veneer)
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vector_table_update
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_hall_upperstack_ini
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;storage_partition_init
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_set_rom_mudule_size
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_cache_init
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srand
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_rtl87x3e.o(RESET)
</UL>
<P><STRONG><a name="[288]"></a>led_set_active_polarity</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, led_module.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = led_set_active_polarity
</UL>
<BR>[Calls]<UL><LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log2_u32
</UL>
<BR>[Called By]<UL><LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_led_pad_config
</UL>

<P><STRONG><a name="[28a]"></a>led_cmd</STRONG> (Thumb, 50 bytes, Stack size 24 bytes, led_module.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = led_cmd
</UL>
<BR>[Calls]<UL><LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepLed_Cmd
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log2_u32
</UL>
<BR>[Called By]<UL><LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_led_set_designate_led_off
<LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_led_timeout_cb
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_led_reset_mode
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_led_set_mode
</UL>

<P><STRONG><a name="[28c]"></a>led_reset_sleep_led</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, led_module.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = led_reset_sleep_led &rArr; SleepLed_Reset
</UL>
<BR>[Calls]<UL><LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepLed_Reset
</UL>
<BR>[Called By]<UL><LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_led_pad_config
</UL>

<P><STRONG><a name="[28e]"></a>led_deinit</STRONG> (Thumb, 72 bytes, Stack size 80 bytes, led_module.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = led_deinit &rArr; SleepLed_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepLed_StructInit
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepLed_Init
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepLed_DeInit
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepLed_Cmd
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log2_u32
</UL>
<BR>[Called By]<UL><LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_led_set_mode
</UL>

<P><STRONG><a name="[292]"></a>led_config</STRONG> (Thumb, 390 bytes, Stack size 128 bytes, led_module.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = led_config &rArr; SleepLed_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepLed_StructInit
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepLed_Init
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepLed_DeInit
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepLed_Cmd
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log2_u32
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_led_timeout_cb
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_led_set_mode
</UL>

<P><STRONG><a name="[357]"></a>led_is_sleep_pinmux</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, led_module.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = led_is_sleep_pinmux
</UL>
<BR>[Called By]<UL><LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_led_pad_config
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_led_set_mode
</UL>

<P><STRONG><a name="[293]"></a>transmit_set_parameter</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, transmit_service.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = transmit_set_parameter
</UL>
<BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_service_transmit_srv_cb
</UL>

<P><STRONG><a name="[295]"></a>transmit_srv_tx_data</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, transmit_service.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = transmit_srv_tx_data
</UL>
<BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;server_send_data
</UL>
<BR>[Called By]<UL><LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_transfer_pop_data_queue
</UL>

<P><STRONG><a name="[297]"></a>transmit_write_post_callback</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, transmit_service.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = transmit_write_post_callback &rArr; app_harman_wait_ota_report &rArr; app_transfer_push_data_queue &rArr; app_transfer_pop_data_queue &rArr;  app_transfer_pop_data_queue (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_wait_ota_report
</UL>
<BR>[Address Reference Count : 1]<UL><LI> transmit_service.o(.text)
</UL>
<P><STRONG><a name="[106]"></a>transmit_srv_write_cb</STRONG> (Thumb, 126 bytes, Stack size 56 bytes, transmit_service.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = transmit_srv_write_cb
</UL>
<BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> transmit_service.o(.constdata)
</UL>
<P><STRONG><a name="[105]"></a>transmit_srv_read_cb</STRONG> (Thumb, 100 bytes, Stack size 40 bytes, transmit_service.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = transmit_srv_read_cb
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> transmit_service.o(.constdata)
</UL>
<P><STRONG><a name="[107]"></a>transmit_cccd_update_cb</STRONG> (Thumb, 80 bytes, Stack size 40 bytes, transmit_service.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = transmit_cccd_update_cb
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> transmit_service.o(.constdata)
</UL>
<P><STRONG><a name="[299]"></a>transmit_srv_add</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, transmit_service.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = transmit_srv_add
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;server_add_service
</UL>
<BR>[Called By]<UL><LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_service_init
</UL>

<P><STRONG><a name="[29b]"></a>bas_set_parameter</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, bas.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = bas_set_parameter
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_service_bas_srv_cb
</UL>

<P><STRONG><a name="[29c]"></a>bas_battery_level_value_notify</STRONG> (Thumb, 24 bytes, Stack size 24 bytes, bas.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = bas_battery_level_value_notify
</UL>
<BR>[Calls]<UL><LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;server_send_data
</UL>
<BR>[Called By]<UL><LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bas_batt_level_report
</UL>

<P><STRONG><a name="[29d]"></a>bas_battery_level_value_read_confirm</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, bas.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;server_attr_read_confirm
</UL>

<P><STRONG><a name="[108]"></a>bas_attr_read_cb</STRONG> (Thumb, 102 bytes, Stack size 32 bytes, bas.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = bas_attr_read_cb
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bas.o(.constdata)
</UL>
<P><STRONG><a name="[109]"></a>bas_cccd_update_cb</STRONG> (Thumb, 86 bytes, Stack size 32 bytes, bas.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = bas_cccd_update_cb
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bas.o(.constdata)
</UL>
<P><STRONG><a name="[29f]"></a>bas_add_service</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, bas.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = bas_add_service
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;server_add_service
</UL>
<BR>[Called By]<UL><LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_service_init
</UL>

<P><STRONG><a name="[2a0]"></a>dis_set_parameter</STRONG> (Thumb, 204 bytes, Stack size 16 bytes, dis.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = dis_set_parameter
</UL>
<BR>[Calls]<UL><LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_service_dis_srv_cb
</UL>

<P><STRONG><a name="[10a]"></a>dis_attr_read_cb</STRONG> (Thumb, 354 bytes, Stack size 40 bytes, dis.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = dis_attr_read_cb
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dis.o(.constdata)
</UL>
<P><STRONG><a name="[2a2]"></a>dis_add_service</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, dis.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = dis_add_service
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;server_add_service
</UL>
<BR>[Called By]<UL><LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_service_init
</UL>

<P><STRONG><a name="[2a3]"></a>gattc_tbl_get_identity_addr</STRONG> (Thumb, 126 bytes, Stack size 32 bytes, gattc_tbl_storage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = gattc_tbl_get_identity_addr &rArr; bt_le_resolve_random_address &rArr; bt_le_find_entry_by_aes &rArr; bt_le_resolve_local_rpa
</UL>
<BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_le_resolve_random_address
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_le_find_key_entry
</UL>
<BR>[Called By]<UL><LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_tbl_storage_set_gatt_data
<LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_tbl_storage_get_gatt_data
<LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_tbl_storage_set_cccd
<LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_tbl_storage_get_cccd
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_tbl_storage_add_dev
<LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_tbl_storage_get_dev
</UL>

<P><STRONG><a name="[2b9]"></a>gattc_tbl_bitmap_init</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, gattc_tbl_storage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gattc_tbl_bitmap_init
</UL>
<BR>[Called By]<UL><LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_tbl_storage_add_dev
</UL>

<P><STRONG><a name="[2a6]"></a>gattc_tbl_bitmap_free</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, gattc_tbl_storage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = gattc_tbl_bitmap_free
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_tbl_storage_add_dev
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_tbl_storage_remove_dev
</UL>

<P><STRONG><a name="[2bb]"></a>gattc_tbl_bitmap_assign</STRONG> (Thumb, 128 bytes, Stack size 32 bytes, gattc_tbl_storage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = gattc_tbl_bitmap_assign
</UL>
<BR>[Called By]<UL><LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_tbl_storage_add_dev
</UL>

<P><STRONG><a name="[2a7]"></a>gattc_tbl_write_data</STRONG> (Thumb, 142 bytes, Stack size 56 bytes, gattc_tbl_storage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 528<LI>Call Chain = gattc_tbl_write_data &rArr; ftl_save_to_module &rArr; ftl_save_to_module_imp &rArr; ftl_write &rArr; ftl_write_skip &rArr; ftl_read &rArr; ftl_data_is_vaild &rArr; ftl_crc8
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_save_to_module
</UL>
<BR>[Called By]<UL><LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_tbl_storage_set_cccd
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_tbl_storage_add_dev
</UL>

<P><STRONG><a name="[2a9]"></a>gattc_tbl_read_data</STRONG> (Thumb, 198 bytes, Stack size 48 bytes, gattc_tbl_storage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = gattc_tbl_read_data &rArr; ftl_load_from_module &rArr; ftl_read &rArr; ftl_data_is_vaild &rArr; ftl_crc8
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_load_from_module
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calloc
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>
<BR>[Called By]<UL><LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_tbl_storage_get_cccd
<LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_tbl_storage_get_dev
</UL>

<P><STRONG><a name="[2ad]"></a>gattc_tbl_storage_find_dev</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, gattc_tbl_storage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = gattc_tbl_storage_find_dev
</UL>
<BR>[Calls]<UL><LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_tbl_storage_set_gatt_data
<LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_tbl_storage_get_gatt_data
<LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_tbl_storage_set_cccd
<LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_tbl_storage_get_cccd
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_tbl_storage_add_dev
<LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_tbl_storage_get_dev
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_tbl_storage_remove
</UL>

<P><STRONG><a name="[2ba]"></a>gattc_tbl_storage_find_unused_dev</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, gattc_tbl_storage.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_tbl_storage_add_dev
</UL>

<P><STRONG><a name="[2af]"></a>gattc_tbl_storage_save_header</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, gattc_tbl_storage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 480<LI>Call Chain = gattc_tbl_storage_save_header &rArr; ftl_save_to_module &rArr; ftl_save_to_module_imp &rArr; ftl_write &rArr; ftl_write_skip &rArr; ftl_read &rArr; ftl_data_is_vaild &rArr; ftl_crc8
</UL>
<BR>[Calls]<UL><LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_save_to_module
</UL>
<BR>[Called By]<UL><LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_tbl_storage_set_gatt_data
<LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_tbl_storage_set_cccd
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_tbl_storage_add_dev
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_tbl_storage_remove_dev
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_tbl_storage_clear
</UL>

<P><STRONG><a name="[2b0]"></a>gattc_tbl_storage_clear</STRONG> (Thumb, 36 bytes, Stack size 136 bytes, gattc_tbl_storage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 616<LI>Call Chain = gattc_tbl_storage_clear &rArr; gattc_tbl_storage_save_header &rArr; ftl_save_to_module &rArr; ftl_save_to_module_imp &rArr; ftl_write &rArr; ftl_write_skip &rArr; ftl_read &rArr; ftl_data_is_vaild &rArr; ftl_crc8
</UL>
<BR>[Calls]<UL><LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_tbl_storage_save_header
</UL>
<BR>[Called By]<UL><LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_tbl_storage_bond_cb
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_tbl_storage_get_header
</UL>

<P><STRONG><a name="[2b2]"></a>gattc_tbl_storage_remove_dev</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, gattc_tbl_storage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 496<LI>Call Chain = gattc_tbl_storage_remove_dev &rArr; gattc_tbl_storage_save_header &rArr; ftl_save_to_module &rArr; ftl_save_to_module_imp &rArr; ftl_write &rArr; ftl_write_skip &rArr; ftl_read &rArr; ftl_data_is_vaild &rArr; ftl_crc8
</UL>
<BR>[Calls]<UL><LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr (via Veneer)
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_tbl_storage_save_header
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_tbl_bitmap_free
</UL>
<BR>[Called By]<UL><LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_tbl_storage_get_dev
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_tbl_storage_remove
</UL>

<P><STRONG><a name="[2b4]"></a>gattc_tbl_storage_remove</STRONG> (Thumb, 82 bytes, Stack size 144 bytes, gattc_tbl_storage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 640<LI>Call Chain = gattc_tbl_storage_remove &rArr; gattc_tbl_storage_remove_dev &rArr; gattc_tbl_storage_save_header &rArr; ftl_save_to_module &rArr; ftl_save_to_module_imp &rArr; ftl_write &rArr; ftl_write_skip &rArr; ftl_read &rArr; ftl_data_is_vaild &rArr; ftl_crc8
</UL>
<BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_load_from_module
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_tbl_storage_remove_dev
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_tbl_storage_find_dev
</UL>
<BR>[Called By]<UL><LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_tbl_storage_bond_cb
</UL>

<P><STRONG><a name="[2b5]"></a>gattc_tbl_storage_get_header</STRONG> (Thumb, 138 bytes, Stack size 24 bytes, gattc_tbl_storage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 640<LI>Call Chain = gattc_tbl_storage_get_header &rArr; gattc_tbl_storage_clear &rArr; gattc_tbl_storage_save_header &rArr; ftl_save_to_module &rArr; ftl_save_to_module_imp &rArr; ftl_write &rArr; ftl_write_skip &rArr; ftl_read &rArr; ftl_data_is_vaild &rArr; ftl_crc8
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_load_from_module
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calloc
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_tbl_storage_clear
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>
<BR>[Called By]<UL><LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_tbl_storage_set_gatt_data
<LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_tbl_storage_get_gatt_data
<LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_tbl_storage_set_cccd
<LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_tbl_storage_get_cccd
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_tbl_storage_add_dev
<LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_tbl_storage_get_dev
</UL>

<P><STRONG><a name="[2b6]"></a>gattc_tbl_storage_get_dev</STRONG> (Thumb, 152 bytes, Stack size 40 bytes, gattc_tbl_storage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 680<LI>Call Chain = gattc_tbl_storage_get_dev &rArr; gattc_tbl_storage_get_header &rArr; gattc_tbl_storage_clear &rArr; gattc_tbl_storage_save_header &rArr; ftl_save_to_module &rArr; ftl_save_to_module_imp &rArr; ftl_write &rArr; ftl_write_skip &rArr; ftl_read &rArr; ftl_data_is_vaild &rArr; ftl_crc8
</UL>
<BR>[Calls]<UL><LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btxfcs (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_tbl_storage_get_header
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_tbl_storage_remove_dev
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_tbl_storage_find_dev
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_tbl_read_data
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_tbl_get_identity_addr
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>
<BR>[Called By]<UL><LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_tbl_storage_cb
</UL>

<P><STRONG><a name="[2b8]"></a>gattc_tbl_storage_add_dev</STRONG> (Thumb, 322 bytes, Stack size 32 bytes, gattc_tbl_storage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 672<LI>Call Chain = gattc_tbl_storage_add_dev &rArr; gattc_tbl_storage_get_header &rArr; gattc_tbl_storage_clear &rArr; gattc_tbl_storage_save_header &rArr; ftl_save_to_module &rArr; ftl_save_to_module_imp &rArr; ftl_write &rArr; ftl_write_skip &rArr; ftl_read &rArr; ftl_data_is_vaild &rArr; ftl_crc8
</UL>
<BR>[Calls]<UL><LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr (via Veneer)
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btxfcs (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_tbl_storage_get_header
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_tbl_storage_save_header
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_tbl_storage_find_unused_dev
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_tbl_storage_find_dev
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_tbl_write_data
<LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_tbl_bitmap_assign
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_tbl_bitmap_free
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_tbl_bitmap_init
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_tbl_get_identity_addr
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>
<BR>[Called By]<UL><LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_tbl_storage_cb
</UL>

<P><STRONG><a name="[2bc]"></a>gattc_tbl_storage_get_cccd</STRONG> (Thumb, 152 bytes, Stack size 40 bytes, gattc_tbl_storage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 680<LI>Call Chain = gattc_tbl_storage_get_cccd &rArr; gattc_tbl_storage_get_header &rArr; gattc_tbl_storage_clear &rArr; gattc_tbl_storage_save_header &rArr; ftl_save_to_module &rArr; ftl_save_to_module_imp &rArr; ftl_write &rArr; ftl_write_skip &rArr; ftl_read &rArr; ftl_data_is_vaild &rArr; ftl_crc8
</UL>
<BR>[Calls]<UL><LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btxfcs (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_tbl_storage_get_header
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_tbl_storage_find_dev
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_tbl_read_data
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_tbl_get_identity_addr
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>
<BR>[Called By]<UL><LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_tbl_storage_cb
</UL>

<P><STRONG><a name="[2bd]"></a>gattc_tbl_storage_set_cccd</STRONG> (Thumb, 150 bytes, Stack size 32 bytes, gattc_tbl_storage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 672<LI>Call Chain = gattc_tbl_storage_set_cccd &rArr; gattc_tbl_storage_get_header &rArr; gattc_tbl_storage_clear &rArr; gattc_tbl_storage_save_header &rArr; ftl_save_to_module &rArr; ftl_save_to_module_imp &rArr; ftl_write &rArr; ftl_write_skip &rArr; ftl_read &rArr; ftl_data_is_vaild &rArr; ftl_crc8
</UL>
<BR>[Calls]<UL><LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btxfcs (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_tbl_storage_get_header
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_tbl_storage_save_header
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_tbl_storage_find_dev
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_tbl_write_data
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_tbl_get_identity_addr
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>
<BR>[Called By]<UL><LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_tbl_storage_cb
</UL>

<P><STRONG><a name="[2be]"></a>gattc_tbl_storage_get_gatt_data</STRONG> (Thumb, 98 bytes, Stack size 24 bytes, gattc_tbl_storage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 664<LI>Call Chain = gattc_tbl_storage_get_gatt_data &rArr; gattc_tbl_storage_get_header &rArr; gattc_tbl_storage_clear &rArr; gattc_tbl_storage_save_header &rArr; ftl_save_to_module &rArr; ftl_save_to_module_imp &rArr; ftl_write &rArr; ftl_write_skip &rArr; ftl_read &rArr; ftl_data_is_vaild &rArr; ftl_crc8
</UL>
<BR>[Calls]<UL><LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_tbl_storage_get_header
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_tbl_storage_find_dev
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_tbl_get_identity_addr
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>
<BR>[Called By]<UL><LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_tbl_storage_cb
</UL>

<P><STRONG><a name="[2bf]"></a>gattc_tbl_storage_set_gatt_data</STRONG> (Thumb, 148 bytes, Stack size 32 bytes, gattc_tbl_storage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 672<LI>Call Chain = gattc_tbl_storage_set_gatt_data &rArr; gattc_tbl_storage_get_header &rArr; gattc_tbl_storage_clear &rArr; gattc_tbl_storage_save_header &rArr; ftl_save_to_module &rArr; ftl_save_to_module_imp &rArr; ftl_write &rArr; ftl_write_skip &rArr; ftl_read &rArr; ftl_data_is_vaild &rArr; ftl_crc8
</UL>
<BR>[Calls]<UL><LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_tbl_storage_get_header
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_tbl_storage_save_header
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_tbl_storage_find_dev
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_tbl_get_identity_addr
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>
<BR>[Called By]<UL><LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_tbl_storage_cb
</UL>

<P><STRONG><a name="[2c0]"></a>gattc_tbl_storage_cb</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, gattc_tbl_storage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 688<LI>Call Chain = gattc_tbl_storage_cb &rArr; gattc_tbl_storage_get_cccd &rArr; gattc_tbl_storage_get_header &rArr; gattc_tbl_storage_clear &rArr; gattc_tbl_storage_save_header &rArr; ftl_save_to_module &rArr; ftl_save_to_module_imp &rArr; ftl_write &rArr; ftl_write_skip &rArr; ftl_read &rArr; ftl_data_is_vaild &rArr; ftl_crc8
</UL>
<BR>[Calls]<UL><LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_tbl_storage_set_gatt_data
<LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_tbl_storage_get_gatt_data
<LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_tbl_storage_set_cccd
<LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_tbl_storage_get_cccd
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_tbl_storage_add_dev
<LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_tbl_storage_get_dev
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gattc_tbl_storage.o(.text)
</UL>
<P><STRONG><a name="[2c1]"></a>gattc_tbl_storage_bond_cb</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, gattc_tbl_storage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 656<LI>Call Chain = gattc_tbl_storage_bond_cb &rArr; gattc_tbl_storage_remove &rArr; gattc_tbl_storage_remove_dev &rArr; gattc_tbl_storage_save_header &rArr; ftl_save_to_module &rArr; ftl_save_to_module_imp &rArr; ftl_write &rArr; ftl_write_skip &rArr; ftl_read &rArr; ftl_data_is_vaild &rArr; ftl_crc8
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_le_find_key_entry_num
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_tbl_storage_remove
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_tbl_storage_clear
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gattc_tbl_storage.o(.text)
</UL>
<P><STRONG><a name="[2c3]"></a>gattc_tbl_storage_init</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, gattc_tbl_storage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = gattc_tbl_storage_init &rArr; bt_ext_ftl_init &rArr; storage_partition_init &rArr; partition_init
</UL>
<BR>[Calls]<UL><LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_storage_register
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_ext_ftl_init
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_register_app_cb
</UL>
<BR>[Called By]<UL><LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_gap_init
</UL>

<P><STRONG><a name="[10b]"></a>bt_ext_ftl_partition_init</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, bt_ext_ftl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 488<LI>Call Chain = bt_ext_ftl_partition_init &rArr; ftl_init_module &rArr; ftl_save_to_module_imp &rArr; ftl_write &rArr; ftl_write_skip &rArr; ftl_read &rArr; ftl_data_is_vaild &rArr; ftl_crc8
</UL>
<BR>[Calls]<UL><LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_init_module
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bt_ext_ftl.o(.constdata)
</UL>
<P><STRONG><a name="[10d]"></a>bt_ext_ftl_partition_write</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, bt_ext_ftl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 472<LI>Call Chain = bt_ext_ftl_partition_write &rArr; ftl_save_to_module &rArr; ftl_save_to_module_imp &rArr; ftl_write &rArr; ftl_write_skip &rArr; ftl_read &rArr; ftl_data_is_vaild &rArr; ftl_crc8
</UL>
<BR>[Calls]<UL><LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_save_to_module
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bt_ext_ftl.o(.constdata)
</UL>
<P><STRONG><a name="[10c]"></a>bt_ext_ftl_partition_read</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, bt_ext_ftl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = bt_ext_ftl_partition_read &rArr; ftl_load_from_module &rArr; ftl_read &rArr; ftl_data_is_vaild &rArr; ftl_crc8
</UL>
<BR>[Calls]<UL><LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_load_from_module
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bt_ext_ftl.o(.constdata)
</UL>
<P><STRONG><a name="[2c4]"></a>bt_ext_ftl_init</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, bt_ext_ftl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = bt_ext_ftl_init &rArr; storage_partition_init &rArr; partition_init
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;storage_partition_init
</UL>
<BR>[Called By]<UL><LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_tbl_storage_init
</UL>

<P><STRONG><a name="[2c8]"></a>gaps_client_read_char</STRONG> (Thumb, 80 bytes, Stack size 56 bytes, gaps_gatt_client.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = gaps_client_read_char &rArr; gatt_client_read &rArr; gattc_storage_check_prop &rArr; gattc_storage_find_char_desc
</UL>
<BR>[Calls]<UL><LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_read
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_find_char_handle
</UL>
<BR>[Called By]<UL><LI><a href="#[422]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gaps_gatt_client_callback
</UL>

<P><STRONG><a name="[2cb]"></a>gaps_client_write_device_name</STRONG> (Thumb, 132 bytes, Stack size 80 bytes, gaps_gatt_client.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_write
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_get_char_prop
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_find_char_handle
</UL>

<P><STRONG><a name="[2ce]"></a>gaps_client_write_appearance</STRONG> (Thumb, 132 bytes, Stack size 80 bytes, gaps_gatt_client.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_write
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_get_char_prop
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_find_char_handle
</UL>

<P><STRONG><a name="[2cf]"></a>gaps_gatt_client_cbs</STRONG> (Thumb, 490 bytes, Stack size 88 bytes, gaps_gatt_client.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = gaps_gatt_client_cbs &rArr; gatt_client_find_char_handle &rArr; gatt_client_check_link_int &rArr; gatt_client_find
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_get_char_prop
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_find_char_handle
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gaps_gatt_client.o(.text)
</UL>
<P><STRONG><a name="[2d0]"></a>gaps_client_init</STRONG> (Thumb, 54 bytes, Stack size 32 bytes, gaps_gatt_client.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = gaps_client_init &rArr; gatt_client_spec_register &rArr; gatt_spec_client_find_by_uuid
</UL>
<BR>[Calls]<UL><LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_spec_register
</UL>
<BR>[Called By]<UL><LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_client_init
</UL>

<P><STRONG><a name="[4]"></a>main</STRONG> (Thumb, 712 bytes, Stack size 80 bytes, app_main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1132<LI>Call Chain = main &rArr; app_third_party_srv_init &rArr; app_gfps_init &rArr; app_gfps_battery_info_init &rArr; app_gfps_battery_set_info &rArr; gfps_gen_adv_data &rArr; gfps_sass_get_encrypt_conn_status &rArr; sha256_hkdf &rArr; hmac_sha256_crypt &rArr; hmac_sha256_finish &rArr; mbedtls_sha256_update &rArr; mbedtls_sha256_update_ret &rArr; mbedtls_internal_sha256_process
</UL>
<BR>[Calls]<UL><LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reset_single_tone_test_mode (via Veneer)
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_single_tone_test_mode (via Veneer)
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_module_trace_set (via Veneer)
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_hall_get_reset_status
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pm_cpu_freq_set
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pm_cpu_freq_init
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mp_hci_test_init
<LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;monitor_memory_and_timer
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_image_release_version
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_image_feature_info
<LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_transfer_init
<LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_third_party_srv_init
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_swift_pair_init
<LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_spp_init
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sdp_init
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sass_policy_init
<LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_init
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_init
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_profile_init
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ipc_init
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_init_timer
<LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_init
<LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_vendor_cmd_init
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_license_init
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_license_get
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_ble_ota_init
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_behaviors_init
<LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_adc_init
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gap_init
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dlps_init
<LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_init
<LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_cmd_init
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_cfg_init
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_init
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_point_init
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bond_init
<LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_service_init
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_gap_init
<LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_device_init
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_client_init
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_avrcp_init
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_auto_power_off_init
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_init
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_a2dp_init
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;framework_init
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;driver_init
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_wakeup_reason_check
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_gap_init
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;board_init
</UL>
<BR>[Called By]<UL><LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_rtl87x3e.o(RESET)
</UL>
<P><STRONG><a name="[3b0]"></a>app_util_calc_checksum</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, app_util.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_report_uart_event
</UL>

<P><STRONG><a name="[32f]"></a>app_cfg_reset</STRONG> (Thumb, 874 bytes, Stack size 160 bytes, app_cfg.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = app_cfg_reset &rArr; app_harman_vp_data_header_get &rArr; storage_partition_get &rArr; strncmp
</UL>
<BR>[Calls]<UL><LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_set_gap_param
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4 (via Veneer)
<LI><a href="#[336]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset (via Veneer)
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eq_utils_get_default_idx
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_local_name_set
<LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sass_policy_reset
<LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_is_on_by_mmi
<LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_vp_data_header_get
<LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_cfg_reset
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_charger_get_soc
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_adp_get_plug_state
</UL>
<BR>[Called By]<UL><LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_cfg_load
<LI><a href="#[4ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_factory_reset
</UL>

<P><STRONG><a name="[340]"></a>app_cfg_load_led_table</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, app_cfg.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = app_cfg_load_led_table &rArr; fmc_flash_nor_read
</UL>
<BR>[Calls]<UL><LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_flash_nor_read
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_cur_bank_img_payload_addr_get
</UL>
<BR>[Called By]<UL><LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_led_load_table
</UL>

<P><STRONG><a name="[4b2]"></a>app_cfg_store_all</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, app_cfg.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_dm_cback
<LI><a href="#[4ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_factory_reset
</UL>

<P><STRONG><a name="[341]"></a>app_cfg_store</STRONG> (Thumb, 88 bytes, Stack size 24 bytes, app_cfg.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = app_cfg_store
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_adp_detect
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_handle_action
<LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_unlock_vbat_disallow_power_on
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_key_check_vol_mmi
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_usb_connector_adc_update
<LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sass_policy_reset
<LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_vp_data_header_get
<LI><a href="#[4d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_reboot_handle
<LI><a href="#[4c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_bt_and_ble_ready_check
<LI><a href="#[4c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_boot_up_directly
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_dm_cback
<LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_iphone_abs_vol_sync_abs_vol
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_device_handle_power_off
<LI><a href="#[41d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_rand_addr_handle_role_decieded
<LI><a href="#[41a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_device_rpa_handle_engage_role_decided
<LI><a href="#[407]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_device_irk_handle_power_on
<LI><a href="#[3fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_rand_addr_init
<LI><a href="#[509]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_find_my_buds_ring_stop
<LI><a href="#[4f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_reboot
<LI><a href="#[4b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_total_power_on_time_update
<LI><a href="#[4eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_total_playback_time_update
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mp_hci_test_dm_cback
<LI><a href="#[6bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_spp_cmd_set_handle
<LI><a href="#[6a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_cmd_legacy_name_set
<LI><a href="#[6a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_cmd_general_cmd_handle
<LI><a href="#[6a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_cmd_le_name_set
<LI><a href="#[8de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_db_add_sink
<LI><a href="#[8e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_handle_bass_msg
<LI><a href="#[94f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_eq_info_handle
<LI><a href="#[93d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_set_lea_mode
<LI><a href="#[94c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_devinfo_set
<LI><a href="#[933]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_ble_ota_start_para_set
<LI><a href="#[931]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_ota_package_ver_check
<LI><a href="#[92e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_ota_breakpoint_clear
<LI><a href="#[92f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_ble_ota_write_to_flash
<LI><a href="#[92d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_ble_ota_end_check
<LI><a href="#[972]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_usb_connector_protect_nv_clear
</UL>

<P><STRONG><a name="[2f7]"></a>app_cfg_init</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, app_cfg.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = app_cfg_init &rArr; app_cfg_load &rArr; app_cfg_reset &rArr; app_harman_vp_data_header_get &rArr; storage_partition_get &rArr; strncmp
</UL>
<BR>[Calls]<UL><LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt_reset
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_flash_nor_read
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_cur_bank_img_payload_addr_get
<LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_vp_data_header_get
<LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_cfg_load
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2e5]"></a>app_io_msg_handler</STRONG> (Thumb, 130 bytes, Stack size 16 bytes, app_io_msg.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 2036<LI>Call Chain = app_io_msg_handler &rArr; app_ble_gap_handle_gap_msg &rArr; app_ble_gap_handle_authen_state_evt &rArr; app_bt_policy_msg_le_auth &rArr; app_bt_policy_state_machine &rArr; app_bt_policy_event_handle &rArr;  app_bt_policy_roleswitch_handle (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_gpio_key0_debounce_start
<LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_msg_handle
<LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_key_handle_msg
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_usb_connector_adc_update
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_adc_msg_handle
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ext_charger_handle_io_msg
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ecc_handle_msg
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_charger_handle_msg
<LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_gap_handle_gap_msg
<LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_adp_msg_handler
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_task
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mp_hci_test_task
</UL>

<P><STRONG><a name="[34c]"></a>app_led_set_designate_led_off</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, app_led.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = app_led_set_designate_led_off &rArr; led_cmd
</UL>
<BR>[Calls]<UL><LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_led_set_mode
</UL>

<P><STRONG><a name="[353]"></a>app_led_check_set_mode_available</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, app_led.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_handle_action
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_led_set_mode
</UL>

<P><STRONG><a name="[34d]"></a>app_led_disable_non_repeat_mode</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, app_led.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = app_led_disable_non_repeat_mode &rArr; app_led_reset_mode &rArr;  app_led_change_mode (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_stop_timer
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dlps_enable (via Veneer)
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_led_reset_mode
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_led_timeout_cb
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_led_set_mode
</UL>

<P><STRONG><a name="[35b]"></a>app_led_change_mode</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, app_led.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 228<LI>Call Chain = app_led_change_mode &rArr; app_led_set_mode &rArr; led_config &rArr; SleepLed_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_led_set_mode
</UL>
<BR>[Called By]<UL><LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_led_check_repeat_mode
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_charger_timeout_cb
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_charger_handle_soc
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_handle_action
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_key_timeout_cb
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_led_set_charging_mode
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_led_reset_mode
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_dm_cback
<LI><a href="#[522]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_power_off
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_link_policy_ind
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mp_hci_test_dm_cback
<LI><a href="#[61d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_handle_vol_change
<LI><a href="#[6b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_cmd_customized_cmd_handle
</UL>

<P><STRONG><a name="[2ea]"></a>app_led_check_repeat_mode</STRONG> (Thumb, 276 bytes, Stack size 24 bytes, app_led.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + In Cycle
<LI>Call Chain = app_led_check_repeat_mode &rArr;  app_led_change_mode (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_get_connected_src_num
<LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_mgr_is_media_streaming
<LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_key_is_enter_pairing
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_get_state
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_get_call_status
<LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_is_mic_mute
<LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_led_change_mode
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_led_is_charging_mode
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_task
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_led_reset_mode
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_charger_handle_msg
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mp_hci_test_task
</UL>

<P><STRONG><a name="[2e9]"></a>app_led_check_charging_mode</STRONG> (Thumb, 116 bytes, Stack size 16 bytes, app_led.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = app_led_check_charging_mode &rArr; app_charger_get_charge_state
</UL>
<BR>[Calls]<UL><LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_charger_get_charge_state
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_led_set_charging_mode
<LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_led_reset_charging_led_type
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_task
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_led_reset_mode
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_charger_handle_msg
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mp_hci_test_task
</UL>

<P><STRONG><a name="[364]"></a>app_led_reset_pad_config</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, app_led.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = app_led_reset_pad_config
</UL>
<BR>[Calls]<UL><LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pad_FunctionConfig (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[54c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dlps_enter_callback
</UL>

<P><STRONG><a name="[538]"></a>app_led_get_led_stop_check_state</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, app_led.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_reboot_check
</UL>

<P><STRONG><a name="[366]"></a>app_led_timer_stop</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, app_led.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = app_led_timer_stop &rArr; app_stop_timer &rArr; remove_timeout_msg_from_list
</UL>
<BR>[Calls]<UL><LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_stop_timer
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dlps_enable (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_handle_action
<LI><a href="#[522]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_power_off
</UL>

<P><STRONG><a name="[326]"></a>app_led_init</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, app_led.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = app_led_init &rArr; app_led_pad_config &rArr; app_led_set_pad_config &rArr; Pad_Config &rArr; flash_cur_bank_img_payload_addr_get
</UL>
<BR>[Calls]<UL><LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_mgr_cback_register
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_reg_cb
<LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_led_pad_config
</UL>
<BR>[Called By]<UL><LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;driver_init
</UL>

<P><STRONG><a name="[4d4]"></a>key_gpio_get_press_state</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, app_key_gpio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_bt_and_ble_ready_check
</UL>

<P><STRONG><a name="[347]"></a>key_gpio_key0_debounce_start</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, app_key_gpio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = key_gpio_key0_debounce_start &rArr; app_start_timer &rArr; remove_timeout_msg_from_list
</UL>
<BR>[Calls]<UL><LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_start_timer
</UL>
<BR>[Called By]<UL><LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_io_msg_handler
</UL>

<P><STRONG><a name="[323]"></a>key_gpio_mfb_init</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, app_key_gpio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = key_gpio_mfb_init &rArr; mfb_init &rArr; mfb_irq_enable
</UL>
<BR>[Calls]<UL><LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mfb_init
</UL>
<BR>[Called By]<UL><LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;driver_init
</UL>

<P><STRONG><a name="[321]"></a>key_gpio_initial</STRONG> (Thumb, 300 bytes, Stack size 24 bytes, app_key_gpio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = key_gpio_initial &rArr; hal_gpio_register_isr_callback &rArr; hal_gpio_register_isr_by_gpio &rArr; RamVectorTableUpdate &rArr; RamVectorTableUpdate_for_xip_isr
</UL>
<BR>[Calls]<UL><LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr (via Veneer)
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calloc
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_set_up_irq
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_register_isr_callback
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_irq_enable
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_init_pin
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pad_TableConfig
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_reg_cb
</UL>
<BR>[Called By]<UL><LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;driver_init
</UL>

<P><STRONG><a name="[37d]"></a>app_key_search_index</STRONG> (Thumb, 68 bytes, Stack size 0 bytes, app_key_process.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_key_single_click
</UL>

<P><STRONG><a name="[620]"></a>app_key_set_sync_play_vol_changed_tone_disallow</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, app_key_process.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[61d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_handle_vol_change
</UL>

<P><STRONG><a name="[36e]"></a>app_key_execute_action</STRONG> (Thumb, 236 bytes, Stack size 32 bytes, app_key_process.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1660<LI>Call Chain = app_key_execute_action &rArr; app_mmi_handle_action &rArr; app_multi_active_hfp_transfer &rArr; app_multi_handle_sniffing_link_disconnect_event &rArr; app_multi_judge_active_a2dp_idx_and_qos &rArr;  app_multi_handle_sniffing_link_disconnect_event (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mp_hci_test_mode_is_running
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mp_hci_test_mmi_handle_action
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_roleswap_ctrl_get_status
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_is_allow_factory_reset
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_handle_action
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_get_call_status
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_key_clear
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_key_is_out_ear_disallow_mmi
</UL>
<BR>[Called By]<UL><LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_key_single_click
<LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_key_check_press
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_key_hybrid_click
</UL>

<P><STRONG><a name="[37a]"></a>app_key_single_click</STRONG> (Thumb, 124 bytes, Stack size 24 bytes, app_key_process.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1684<LI>Call Chain = app_key_single_click &rArr; app_key_execute_action &rArr; app_mmi_handle_action &rArr; app_multi_active_hfp_transfer &rArr; app_multi_handle_sniffing_link_disconnect_event &rArr; app_multi_judge_active_a2dp_idx_and_qos &rArr;  app_multi_handle_sniffing_link_disconnect_event (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_get_btmode
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_ccp_get_call_status
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_get_call_status
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_key_execute_action
<LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_key_search_index
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_key_clear
<LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_key_handle_key_tone_play
</UL>
<BR>[Called By]<UL><LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_key_check_press
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_key_timeout_cb
</UL>

<P><STRONG><a name="[537]"></a>app_key_long_key_power_off_pressed_get</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, app_key_process.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_reboot_check
</UL>

<P><STRONG><a name="[4df]"></a>app_key_reset_enter_pairing</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, app_key_process.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_link_policy_ind
</UL>

<P><STRONG><a name="[386]"></a>app_key_stop_timer</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, app_key_process.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = app_key_stop_timer &rArr; app_stop_timer &rArr; remove_timeout_msg_from_list
</UL>
<BR>[Calls]<UL><LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_stop_timer
</UL>
<BR>[Called By]<UL><LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_key_check_press
</UL>

<P><STRONG><a name="[322]"></a>app_key_init</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, app_key_process.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = app_key_init &rArr; app_ipc_subscribe
</UL>
<BR>[Calls]<UL><LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ipc_subscribe
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_mgr_cback_register
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_reg_cb
</UL>
<BR>[Called By]<UL><LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;driver_init
</UL>

<P><STRONG><a name="[35c]"></a>app_key_is_enter_pairing</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, app_key_process.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_led_check_repeat_mode
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_handle_action
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_dm_cback
<LI><a href="#[40b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_device_handle_power_on
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_link_policy_ind
</UL>

<P><STRONG><a name="[4f9]"></a>app_key_set_volume_status</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, app_key_process.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_handle_action
<LI><a href="#[44d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_vol_set
<LI><a href="#[4fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;harman_push_max_tone_when_not_playing
<LI><a href="#[4fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_volume_down
<LI><a href="#[4f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_volume_up
<LI><a href="#[61d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_handle_vol_change
</UL>

<P><STRONG><a name="[61e]"></a>app_key_is_set_volume</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, app_key_process.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;harman_push_max_tone_when_not_playing
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_policy_cback
<LI><a href="#[61d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_handle_vol_change
</UL>

<P><STRONG><a name="[61f]"></a>app_key_is_sync_play_vol_changed_tone_disallow</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, app_key_process.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[61d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_handle_vol_change
</UL>

<P><STRONG><a name="[345]"></a>app_key_handle_msg</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, app_key_process.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1756<LI>Call Chain = app_key_handle_msg &rArr; app_key_check_press &rArr; app_key_hybrid_click &rArr; app_key_execute_action &rArr; app_mmi_handle_action &rArr; app_multi_active_hfp_transfer &rArr; app_multi_handle_sniffing_link_disconnect_event &rArr; app_multi_judge_active_a2dp_idx_and_qos &rArr;  app_multi_handle_sniffing_link_disconnect_event (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_key_check_press
</UL>
<BR>[Called By]<UL><LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_io_msg_handler
</UL>

<P><STRONG><a name="[38c]"></a>app_key_check_vol_mmi</STRONG> (Thumb, 194 bytes, Stack size 24 bytes, app_key_process.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = app_key_check_vol_mmi &rArr; app_cfg_store
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_cfg_store
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_dm_cback
</UL>

<P><STRONG><a name="[351]"></a>app_charger_get_charge_state</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, app_charger.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = app_charger_get_charge_state
</UL>
<BR>[Calls]<UL><LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ext_charger_check_support
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtk_charger_get_charge_state
<LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_charger_state_convert
</UL>
<BR>[Called By]<UL><LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_led_check_charging_mode
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_charger_timeout_cb
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_charger_handle_soc
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_charger_smooth_bat_discharge
<LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_key_check_press
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_led_set_mode
<LI><a href="#[71d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_battery_info_report
</UL>

<P><STRONG><a name="[391]"></a>app_charger_state_cb</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, app_charger.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = app_charger_state_cb &rArr; app_io_msg_send
</UL>
<BR>[Calls]<UL><LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_charger_state_convert
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_io_msg_send (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ext_charger_update_charger_state
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_charger.o(.text)
</UL>
<P><STRONG><a name="[392]"></a>app_charger_soc_cb</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, app_charger.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = app_charger_soc_cb &rArr; app_io_msg_send
</UL>
<BR>[Calls]<UL><LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_io_msg_send (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_charger.o(.text)
</UL>
<P><STRONG><a name="[393]"></a>app_charger_harman_low_bat_warning_vp</STRONG> (Thumb, 78 bytes, Stack size 24 bytes, app_charger.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 600<LI>Call Chain = app_charger_harman_low_bat_warning_vp &rArr; app_audio_tone_type_play &rArr; voice_prompt_play &rArr; notification_push &rArr; notification_play &rArr; notification_path_start &rArr; notification_start_vp &rArr; audio_path_start &rArr; audio_path_schedule &rArr; audio_path_voice_start &rArr; dsp_mgr_session_enable &rArr; dsp_state_machine &rArr; dsp_power_on &rArr; dsp_hal_reset &rArr; shm_enable &rArr; h2d_cmd_send &rArr; shm_cmd_send &rArr; wr_queue_send
</UL>
<BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_tone_type_play
</UL>
<BR>[Called By]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_charger_timeout_cb
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_charger_handle_soc
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_link_policy_ind
</UL>

<P><STRONG><a name="[331]"></a>app_charger_get_soc</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, app_charger.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtk_charger_get_soc
</UL>
<BR>[Called By]<UL><LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_charger_update
<LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_key_check_press
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_led_set_mode
<LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_cfg_reset
<LI><a href="#[4c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_bt_and_ble_ready_check
<LI><a href="#[4c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_power_on_check
<LI><a href="#[4c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_boot_up_directly
<LI><a href="#[4c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_auto_power_on_before_factory_reset
<LI><a href="#[54c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dlps_enter_callback
</UL>

<P><STRONG><a name="[39c]"></a>app_charger_update</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, app_charger.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1692<LI>Call Chain = app_charger_update &rArr; app_charger_handle_soc &rArr; app_mmi_handle_action &rArr; app_multi_active_hfp_transfer &rArr; app_multi_handle_sniffing_link_disconnect_event &rArr; app_multi_judge_active_a2dp_idx_and_qos &rArr;  app_multi_handle_sniffing_link_disconnect_event (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_charger_handle_soc
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_charger_get_soc
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_dm_cback
</UL>

<P><STRONG><a name="[355]"></a>app_charger_local_battery_status_is_low</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, app_charger.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_led_set_mode
</UL>

<P><STRONG><a name="[39d]"></a>app_discharger_init</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, app_charger.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = app_discharger_init &rArr; sys_mgr_cback_register
</UL>
<BR>[Calls]<UL><LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_mgr_cback_register
<LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtk_charger_init
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_reg_cb
</UL>
<BR>[Called By]<UL><LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ext_charger_init
</UL>

<P><STRONG><a name="[325]"></a>app_charger_init</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, app_charger.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = app_charger_init &rArr; sys_mgr_cback_register
</UL>
<BR>[Calls]<UL><LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_mgr_cback_register
<LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtk_charger_init
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_reg_cb
</UL>
<BR>[Called By]<UL><LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;driver_init
</UL>

<P><STRONG><a name="[346]"></a>app_charger_handle_msg</STRONG> (Thumb, 128 bytes, Stack size 16 bytes, app_charger.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1700<LI>Call Chain = app_charger_handle_msg &rArr; app_charger_handle_soc &rArr; app_mmi_handle_action &rArr; app_multi_active_hfp_transfer &rArr; app_multi_handle_sniffing_link_disconnect_event &rArr; app_multi_judge_active_a2dp_idx_and_qos &rArr;  app_multi_handle_sniffing_link_disconnect_event (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_led_check_repeat_mode
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_led_check_charging_mode
<LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_discharger_ntc_timer_start
<LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_adc_ntc_check_timer_start
<LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_adc_io_read
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_charger_handle_soc
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_charger_smooth_bat_discharge
<LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_unlock_vbat_disallow_power_on
</UL>
<BR>[Called By]<UL><LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_io_msg_handler
</UL>

<P><STRONG><a name="[3a3]"></a>app_transfer_pop_data_queue</STRONG> (Thumb, 640 bytes, Stack size 72 bytes, app_transfer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 256 + In Cycle
<LI>Call Chain = app_transfer_pop_data_queue &rArr;  app_transfer_pop_data_queue (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;transmit_srv_tx_data
<LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_spp_data_send
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_transfer_pop_data_queue
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_stop_timer
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_start_timer
</UL>
<BR>[Called By]<UL><LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_transfer_push_data_queue
<LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_transfer_queue_recv_ack_check
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_transfer_pop_data_queue
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_service_general_srv_cb
<LI><a href="#[698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_cmd_handler
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_spp_bt_cback
</UL>

<P><STRONG><a name="[3a5]"></a>app_transfer_queue_recv_ack_check</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, app_transfer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = app_transfer_queue_recv_ack_check &rArr; app_transfer_pop_data_queue &rArr;  app_transfer_pop_data_queue (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_transfer_pop_data_queue
</UL>
<BR>[Called By]<UL><LI><a href="#[698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_cmd_handler
</UL>

<P><STRONG><a name="[3a6]"></a>app_transfer_queue_reset</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, app_transfer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = app_transfer_queue_reset &rArr; app_stop_timer &rArr; remove_timeout_msg_from_list
</UL>
<BR>[Calls]<UL><LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_stop_timer
</UL>
<BR>[Called By]<UL><LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_gap_handle_new_conn_state_evt
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_spp_bt_cback
</UL>

<P><STRONG><a name="[3a7]"></a>app_transfer_push_data_queue</STRONG> (Thumb, 144 bytes, Stack size 40 bytes, app_transfer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = app_transfer_push_data_queue &rArr; app_transfer_pop_data_queue &rArr;  app_transfer_pop_data_queue (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_transfer_pop_data_queue
</UL>
<BR>[Called By]<UL><LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_wait_ota_report
<LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_report_spp_iap_event
<LI><a href="#[3ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_report_le_event
<LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_report_uart_event
<LI><a href="#[919]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_report_le_event
</UL>

<P><STRONG><a name="[312]"></a>app_transfer_init</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, app_transfer.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[3a8]"></a>app_report_event</STRONG> (Thumb, 136 bytes, Stack size 40 bytes, app_report.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = app_report_event &rArr; app_report_spp_iap_event &rArr; app_transfer_push_data_queue &rArr; app_transfer_pop_data_queue &rArr;  app_transfer_pop_data_queue (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_report_spp_iap_event
<LI><a href="#[3ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_report_le_event
<LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_report_uart_event
</UL>
<BR>[Called By]<UL><LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_gap_handle_new_conn_state_evt
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_report_event_broadcast
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_bt_cback
<LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_gap_handle_authen_state_evt
<LI><a href="#[4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_state_change
<LI><a href="#[657]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_cmd_handle
<LI><a href="#[641]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_probe_cback
<LI><a href="#[6bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_spp_cmd_set_handle
<LI><a href="#[6a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_cmd_bt_cmd_handle
<LI><a href="#[6b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_cmd_customized_cmd_handle
<LI><a href="#[6b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_cmd_other_cmd_handle
<LI><a href="#[6a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_cmd_general_cmd_handle
<LI><a href="#[698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_cmd_handler
</UL>

<P><STRONG><a name="[3ac]"></a>app_report_event_broadcast</STRONG> (Thumb, 152 bytes, Stack size 32 bytes, app_report.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 400<LI>Call Chain = app_report_event_broadcast &rArr; app_report_event &rArr; app_report_spp_iap_event &rArr; app_transfer_push_data_queue &rArr; app_transfer_pop_data_queue &rArr;  app_transfer_pop_data_queue (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_report_event
</UL>
<BR>[Called By]<UL><LI><a href="#[3ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_report_eq_idx
<LI><a href="#[39a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_report_rws_bud_info
</UL>

<P><STRONG><a name="[3ad]"></a>app_report_eq_idx</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, app_report.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 408<LI>Call Chain = app_report_eq_idx &rArr; app_report_event_broadcast &rArr; app_report_event &rArr; app_report_spp_iap_event &rArr; app_transfer_push_data_queue &rArr; app_transfer_pop_data_queue &rArr;  app_transfer_pop_data_queue (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_report_event_broadcast
</UL>
<BR>[Called By]<UL><LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_handle_action
<LI><a href="#[632]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_eq_change_audio_eq_mode
<LI><a href="#[637]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_a2dp_stream_start_handle
<LI><a href="#[8a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_playback_eq_setting
</UL>

<P><STRONG><a name="[3ae]"></a>app_report_get_bud_info</STRONG> (Thumb, 180 bytes, Stack size 28 bytes, app_report.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = app_report_get_bud_info
</UL>
<BR>[Called By]<UL><LI><a href="#[39a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_report_rws_bud_info
<LI><a href="#[6a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_cmd_general_cmd_handle
</UL>

<P><STRONG><a name="[39a]"></a>app_report_rws_bud_info</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, app_report.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 416<LI>Call Chain = app_report_rws_bud_info &rArr; app_report_event_broadcast &rArr; app_report_event &rArr; app_report_spp_iap_event &rArr; app_transfer_push_data_queue &rArr; app_transfer_pop_data_queue &rArr;  app_transfer_pop_data_queue (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_report_get_bud_info
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_report_event_broadcast
</UL>
<BR>[Called By]<UL><LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_charger_handle_soc
</UL>

<P><STRONG><a name="[302]"></a>app_gap_init</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, app_gap.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = app_gap_init &rArr; bt_mgr_cback_register
</UL>
<BR>[Calls]<UL><LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_mgr_cback_register
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[3b5]"></a>app_ble_gap_gen_scan_rsp_data</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, app_ble_gap.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = app_ble_gap_gen_scan_rsp_data
</UL>
<BR>[Calls]<UL><LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen (via Veneer)
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[436]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_common_adv_update_scan_rsp_data
<LI><a href="#[3f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_common_adv_init
<LI><a href="#[3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_gap_ble_mgr_init
</UL>

<P><STRONG><a name="[3d6]"></a>app_ble_gap_client_discov_cb</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, app_ble_gap.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = app_ble_gap_client_discov_cb
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_ble_gap.o(.text)
</UL>
<P><STRONG><a name="[3d7]"></a>app_ble_gap_disconnect</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, app_ble_gap.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = app_ble_gap_disconnect
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_disconnect
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[433]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_common_adv_sec_stop_adv_and_link
<LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;harman_le_common_disc
<LI><a href="#[3f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_gap_disconnect_all
<LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_gap_handle_authen_state_evt
<LI><a href="#[5dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_prepare_for_dedicated_enter_pairing_mode
<LI><a href="#[761]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_finder_handle_power_off
<LI><a href="#[71c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_link_disconnect_all_gfps_link
<LI><a href="#[5f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_mgr_disc_inactive_le_link
<LI><a href="#[6ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sass_policy_switch_active_audio_source
<LI><a href="#[896]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_handle_le_disconnect
</UL>

<P><STRONG><a name="[3d9]"></a>app_ble_gap_handle_authen_state_evt</STRONG> (Thumb, 572 bytes, Stack size 56 bytes, app_ble_gap.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 2004<LI>Call Chain = app_ble_gap_handle_authen_state_evt &rArr; app_bt_policy_msg_le_auth &rArr; app_bt_policy_state_machine &rArr; app_bt_policy_event_handle &rArr;  app_bt_policy_roleswitch_handle (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_get_conn_addr
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_le_resolve_random_address
<LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_report_event
<LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_tone_type_play
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_stop_timer
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_start_timer
<LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_start_discovery_all
<LI><a href="#[3d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_set_prefer_conn_param
<LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sass_handle_le_dm
<LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_find_le_link_by_conn_id
<LI><a href="#[3df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_notify_device_info_timer_start
<LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_device_handle_b2s_ble_bonded
<LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_sniffing_param_update
<LI><a href="#[3e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_msg_le_auth
<LI><a href="#[3de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_point_link_tone_set
<LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_point_link_tone_get
<LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_point_link_permission_check
<LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_point_link_num_changed
<LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_common_adv_get_conn_id
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_gap_disconnect
</UL>
<BR>[Called By]<UL><LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_gap_handle_gap_msg
</UL>

<P><STRONG><a name="[5e0]"></a>app_ble_gap_last_src_conn_handle</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, app_ble_gap.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_prepare_for_dedicated_enter_pairing_mode
</UL>

<P><STRONG><a name="[3e2]"></a>app_ble_gap_handle_mtu_info</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, app_ble_gap.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = app_ble_gap_handle_mtu_info &rArr; gatt_client_start_discovery_all &rArr; gattc_storage_load &rArr; gatt_spec_client_find_by_uuid
</UL>
<BR>[Calls]<UL><LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_start_discovery_all
<LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_find_le_link_by_conn_id
</UL>
<BR>[Called By]<UL><LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_gap_handle_gap_msg
</UL>

<P><STRONG><a name="[3e3]"></a>app_ble_gap_handle_justwork_bond_cfm</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, app_ble_gap.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = app_ble_gap_handle_justwork_bond_cfm
</UL>
<BR>[Calls]<UL><LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_bond_just_work_confirm
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_gap_handle_gap_msg
</UL>

<P><STRONG><a name="[3e5]"></a>app_ble_gap_handle_numerical_comparison_bond_cfm</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, app_ble_gap.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = app_ble_gap_handle_numerical_comparison_bond_cfm &rArr; app_gfps_handle_ble_user_confirm &rArr; app_gfps_send_le_bond_confirm &rArr; gfps_send_passkey &rArr; gatt_svc_send_data &rArr; gatt_svc_send_data_in_queue &rArr; calloc
</UL>
<BR>[Calls]<UL><LI><a href="#[3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_bond_user_confirm
<LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_handle_ble_user_confirm
<LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_handle_additional_ble_user_confirm
</UL>
<BR>[Called By]<UL><LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_gap_handle_gap_msg
</UL>

<P><STRONG><a name="[3e9]"></a>app_ble_gap_update_sniffing_param</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, app_ble_gap.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_sniffing_param_update
</UL>
<BR>[Called By]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_gap_cb
<LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_gap_handle_gap_msg
</UL>

<P><STRONG><a name="[34a]"></a>app_ble_gap_handle_gap_msg</STRONG> (Thumb, 158 bytes, Stack size 16 bytes, app_ble_gap.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 2020<LI>Call Chain = app_ble_gap_handle_gap_msg &rArr; app_ble_gap_handle_authen_state_evt &rArr; app_bt_policy_msg_le_auth &rArr; app_bt_policy_state_machine &rArr; app_bt_policy_event_handle &rArr;  app_bt_policy_roleswitch_handle (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_gap_handle_new_conn_state_evt
<LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_gap_handle_dev_state_change_evt
<LI><a href="#[3eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_mgr_handle_gap_msg
<LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_handle_gap_msg
<LI><a href="#[3e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_gap_update_sniffing_param
<LI><a href="#[3e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_gap_handle_numerical_comparison_bond_cfm
<LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_gap_handle_justwork_bond_cfm
<LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_gap_handle_mtu_info
<LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_gap_handle_authen_state_evt
</UL>
<BR>[Called By]<UL><LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_io_msg_handler
</UL>

<P><STRONG><a name="[3f2]"></a>app_ble_gap_disconnect_all</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, app_ble_gap.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = app_ble_gap_disconnect_all &rArr; app_ble_gap_disconnect
</UL>
<BR>[Calls]<UL><LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_find_le_link_by_conn_id
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_gap_disconnect
</UL>
<BR>[Called By]<UL><LI><a href="#[410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_device_handle_power_off
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_ble_ota_timeout_cb
</UL>

<P><STRONG><a name="[3f4]"></a>app_ble_gap_ble_mgr_init</STRONG> (Thumb, 118 bytes, Stack size 48 bytes, app_ble_gap.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = app_ble_gap_ble_mgr_init &rArr; ble_mgr_init &rArr; ble_adv_data_init &rArr; ble_ext_adv_mgr_init_adv_params &rArr; ble_ext_adv_mgr_init_adv_params_all &rArr; ble_ext_adv_mgr_allocate_adv_handle
</UL>
<BR>[Calls]<UL><LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_get_max_link_num
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
<LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_gap_get_ext_adv_num
<LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_mgr_init
<LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_gap_gen_scan_rsp_data
</UL>
<BR>[Called By]<UL><LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_gap_init
</UL>

<P><STRONG><a name="[3f8]"></a>app_ble_gap_vendor_callback</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, app_ble_gap.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = app_ble_gap_vendor_callback
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_ble_gap.o(.text)
</UL>
<P><STRONG><a name="[303]"></a>app_ble_gap_init</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, app_ble_gap.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = app_ble_gap_init &rArr; app_ble_gap_ble_mgr_init &rArr; ble_mgr_init &rArr; ble_adv_data_init &rArr; ble_ext_adv_mgr_init_adv_params &rArr; ble_ext_adv_mgr_init_adv_params_all &rArr; ble_ext_adv_mgr_allocate_adv_handle
</UL>
<BR>[Calls]<UL><LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_register_app_cb
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_tbl_storage_init
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_mgr_cback_register
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_reg_cb
<LI><a href="#[3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_vendor_register_cb
<LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_whitelist_init
<LI><a href="#[3fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_rand_addr_init
<LI><a href="#[3fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_key_derive_init
<LI><a href="#[3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_gap_ble_mgr_init
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2e0]"></a>app_ble_gap_param_init</STRONG> (Thumb, 334 bytes, Stack size 88 bytes, app_ble_gap.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = app_ble_gap_param_init
</UL>
<BR>[Calls]<UL><LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_set_gap_param
<LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_get_max_link_num
<LI><a href="#[3ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_gap_init
<LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_bond_set_param
<LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_ext_scan_set_phy_param
<LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_ext_scan_set_param
</UL>
<BR>[Called By]<UL><LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_gap_init
</UL>

<P><STRONG><a name="[402]"></a>app_ble_device_handle_factory_reset</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, app_ble_device.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = app_ble_device_handle_factory_reset &rArr; bt_le_clear_all_keys &rArr; bt_le_delete_key_entry &rArr; bt_bond_remove &rArr; ftl_save_cccd &rArr; ftl_get_common_block_offset
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[403]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_le_clear_all_keys
<LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_device_handle_factory_reset
</UL>
<BR>[Called By]<UL><LI><a href="#[4ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_factory_reset
</UL>

<P><STRONG><a name="[3c8]"></a>app_ble_rtk_adv_start</STRONG> (Thumb, 108 bytes, Stack size 16 bytes, app_ble_device.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = app_ble_rtk_adv_start &rArr; app_ble_common_adv_start_rws &rArr; app_ble_common_adv_start &rArr; ble_ext_adv_mgr_enable &rArr; ble_ext_adv_mgr_start_set_adv_param &rArr; ble_ext_adv_mgr_send_msg &rArr; ble_ext_adv_mgr_find_by_handle
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_get_b2s_link_num
<LI><a href="#[406]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_req_remote_device_name_timer_start
<LI><a href="#[405]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_common_adv_start_rws
<LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_find_le_link_by_conn_id
<LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_common_adv_get_conn_id
</UL>
<BR>[Called By]<UL><LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_gap_handle_new_conn_state_evt
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_bt_cback
<LI><a href="#[422]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gaps_gatt_client_callback
<LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_common_adv_handle_engage_role_decided
<LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_device_handle_enter_pair_mode
<LI><a href="#[40b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_device_handle_power_on
<LI><a href="#[915]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_ble_process
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_timeout_cb
</UL>

<P><STRONG><a name="[40b]"></a>app_ble_device_handle_power_on</STRONG> (Thumb, 100 bytes, Stack size 16 bytes, app_ble_device.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1140<LI>Call Chain = app_ble_device_handle_power_on &rArr; app_gfps_device_handle_power_on &rArr; app_gfps_device_check_state &rArr; app_gfps_enter_nondiscoverable_mode &rArr; app_gfps_next_action &rArr; app_gfps_battery_info_report &rArr; app_gfps_battery_set_info &rArr; gfps_gen_adv_data &rArr; gfps_sass_get_encrypt_conn_status &rArr; sha256_hkdf &rArr; hmac_sha256_crypt &rArr; hmac_sha256_finish &rArr; mbedtls_sha256_update &rArr; mbedtls_sha256_update_ret &rArr; mbedtls_internal_sha256_process
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_get_connected_src_num
<LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_key_is_enter_pairing
<LI><a href="#[40c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_print_info
<LI><a href="#[40d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_adv_data_enable
<LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_swift_pair_handle_power_on
<LI><a href="#[40e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_device_handle_power_on
<LI><a href="#[407]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_device_irk_handle_power_on
<LI><a href="#[3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_rtk_adv_start
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_dm_cback
</UL>

<P><STRONG><a name="[410]"></a>app_ble_device_handle_power_off</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, app_ble_device.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1092<LI>Call Chain = app_ble_device_handle_power_off &rArr; app_gfps_device_handle_power_off &rArr; app_gfps_next_action &rArr; app_gfps_battery_info_report &rArr; app_gfps_battery_set_info &rArr; gfps_gen_adv_data &rArr; gfps_sass_get_encrypt_conn_status &rArr; sha256_hkdf &rArr; hmac_sha256_crypt &rArr; hmac_sha256_finish &rArr; mbedtls_sha256_update &rArr; mbedtls_sha256_update_ret &rArr; mbedtls_internal_sha256_process
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[411]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_adv_data_disable
<LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_swift_pair_handle_power_off
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_device_handle_power_off
<LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_common_adv_stop
<LI><a href="#[412]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_common_adv_get_state
<LI><a href="#[3f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_gap_disconnect_all
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_dm_cback
</UL>

<P><STRONG><a name="[416]"></a>app_ble_device_handle_radio_mode</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, app_ble_device.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1124<LI>Call Chain = app_ble_device_handle_radio_mode &rArr; app_gfps_device_handle_radio_mode &rArr; app_gfps_device_check_state &rArr; app_gfps_enter_nondiscoverable_mode &rArr; app_gfps_next_action &rArr; app_gfps_battery_info_report &rArr; app_gfps_battery_set_info &rArr; gfps_gen_adv_data &rArr; gfps_sass_get_encrypt_conn_status &rArr; sha256_hkdf &rArr; hmac_sha256_crypt &rArr; hmac_sha256_finish &rArr; mbedtls_sha256_update &rArr; mbedtls_sha256_update_ret &rArr; mbedtls_internal_sha256_process
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_device_handle_radio_mode
</UL>
<BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_link_policy_ind
</UL>

<P><STRONG><a name="[418]"></a>app_ble_device_handle_enter_pair_mode</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, app_ble_device.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1100<LI>Call Chain = app_ble_device_handle_enter_pair_mode &rArr; app_gfps_le_device_adv_start &rArr; app_gfps_next_action &rArr; app_gfps_battery_info_report &rArr; app_gfps_battery_set_info &rArr; gfps_gen_adv_data &rArr; gfps_sass_get_encrypt_conn_status &rArr; sha256_hkdf &rArr; hmac_sha256_crypt &rArr; hmac_sha256_finish &rArr; mbedtls_sha256_update &rArr; mbedtls_sha256_update_ret &rArr; mbedtls_internal_sha256_process
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_get_connected_src_num
<LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_le_device_adv_start
<LI><a href="#[3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_rtk_adv_start
</UL>
<BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_link_policy_ind
</UL>

<P><STRONG><a name="[41b]"></a>app_ble_device_handle_engage_role_decided</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, app_ble_device.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = app_ble_device_handle_engage_role_decided &rArr; app_ble_common_adv_handle_engage_role_decided &rArr; app_ble_rtk_adv_start &rArr; app_ble_common_adv_start_rws &rArr; app_ble_common_adv_start &rArr; ble_ext_adv_mgr_enable &rArr; ble_ext_adv_mgr_start_set_adv_param &rArr; ble_ext_adv_mgr_send_msg &rArr; ble_ext_adv_mgr_find_by_handle
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[41d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_rand_addr_handle_role_decieded
<LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_common_adv_handle_engage_role_decided
<LI><a href="#[41a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_device_rpa_handle_engage_role_decided
</UL>
<BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_link_policy_ind
</UL>

<P><STRONG><a name="[41e]"></a>app_ble_device_handle_b2s_bt_connected</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, app_ble_device.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = app_ble_device_handle_b2s_bt_connected &rArr; app_gfps_handle_b2s_connected &rArr; app_gfps_account_key_store
</UL>
<BR>[Calls]<UL><LI><a href="#[41f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_handle_b2s_connected
</UL>
<BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_link_policy_ind
</UL>

<P><STRONG><a name="[420]"></a>app_ble_device_handle_b2s_bt_disconnected</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, app_ble_device.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = app_ble_device_handle_b2s_bt_disconnected &rArr; app_link_get_connected_src_num &rArr; app_link_find_br_link
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_get_connected_src_num
<LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;harman_le_common_disc
</UL>
<BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_link_policy_ind
</UL>

<P><STRONG><a name="[311]"></a>app_ble_device_init</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, app_ble_device.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[422]"></a>app_gaps_gatt_client_callback</STRONG> (Thumb, 476 bytes, Stack size 40 bytes, app_ble_client.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = app_gaps_gatt_client_callback &rArr; gaps_client_read_char &rArr; gatt_client_read &rArr; gattc_storage_check_prop &rArr; gattc_storage_find_char_desc
</UL>
<BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gaps_client_read_char
<LI><a href="#[424]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;harman_crc16_ibm
<LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_find_le_link_by_conn_handle
<LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_remote_device_name_crc_set
<LI><a href="#[426]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_le_common_adv_update
<LI><a href="#[3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_rtk_adv_start
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_ble_client.o(.text)
</UL>
<P><STRONG><a name="[304]"></a>app_ble_client_init</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, app_ble_client.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = app_ble_client_init &rArr; gaps_client_init &rArr; gatt_client_spec_register &rArr; gatt_spec_client_find_by_uuid
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gaps_client_init
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[307]"></a>app_ble_service_init</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, app_ble_service.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = app_ble_service_init &rArr; dis_add_service
</UL>
<BR>[Calls]<UL><LI><a href="#[42a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;server_register_app_cb
<LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;server_init
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dis_add_service
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bas_add_service
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;transmit_srv_add
<LI><a href="#[42c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_svc_init
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[42d]"></a>app_harman_adv_data_update</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, app_ble_common_adv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = app_harman_adv_data_update &rArr; ble_ext_adv_mgr_set_adv_data &rArr; ble_ext_adv_mgr_start_set_adv_param &rArr; ble_ext_adv_mgr_send_msg &rArr; ble_ext_adv_mgr_find_by_handle
</UL>
<BR>[Calls]<UL><LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_set_adv_data
</UL>
<BR>[Called By]<UL><LI><a href="#[426]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_le_common_adv_update
</UL>

<P><STRONG><a name="[3d2]"></a>app_ble_common_adv_set_random</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, app_ble_common_adv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = app_ble_common_adv_set_random &rArr; ble_ext_adv_mgr_set_random &rArr; ble_ext_adv_mgr_disable &rArr; ble_ext_adv_mgr_send_msg &rArr; ble_ext_adv_mgr_find_by_handle
</UL>
<BR>[Calls]<UL><LI><a href="#[42f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_set_random
</UL>
<BR>[Called By]<UL><LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_gap_handle_new_conn_state_evt
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_common_adv_rand_addr_cb
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_common_adv_callback
</UL>

<P><STRONG><a name="[430]"></a>app_ble_common_adv_bud_role_update</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, app_ble_common_adv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = app_ble_common_adv_bud_role_update &rArr; ble_ext_adv_mgr_set_adv_data &rArr; ble_ext_adv_mgr_start_set_adv_param &rArr; ble_ext_adv_mgr_send_msg &rArr; ble_ext_adv_mgr_find_by_handle
</UL>
<BR>[Calls]<UL><LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_set_adv_data
</UL>
<BR>[Called By]<UL><LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_common_adv_handle_engage_role_decided
</UL>

<P><STRONG><a name="[413]"></a>app_ble_common_adv_stop</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, app_ble_common_adv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = app_ble_common_adv_stop &rArr; ble_ext_adv_mgr_disable &rArr; ble_ext_adv_mgr_send_msg &rArr; ble_ext_adv_mgr_find_by_handle
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[433]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_common_adv_sec_stop_adv_and_link
<LI><a href="#[410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_device_handle_power_off
<LI><a href="#[916]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_ble_adv_stop
</UL>

<P><STRONG><a name="[412]"></a>app_ble_common_adv_get_state</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, app_ble_common_adv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = app_ble_common_adv_get_state &rArr; ble_ext_adv_mgr_get_adv_state &rArr; ble_ext_adv_mgr_find_by_handle
</UL>
<BR>[Calls]<UL><LI><a href="#[432]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_get_adv_state
</UL>
<BR>[Called By]<UL><LI><a href="#[433]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_common_adv_sec_stop_adv_and_link
<LI><a href="#[410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_device_handle_power_off
<LI><a href="#[916]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_ble_adv_stop
</UL>

<P><STRONG><a name="[433]"></a>app_ble_common_adv_sec_stop_adv_and_link</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, app_ble_common_adv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = app_ble_common_adv_sec_stop_adv_and_link &rArr; app_ble_common_adv_stop &rArr; ble_ext_adv_mgr_disable &rArr; ble_ext_adv_mgr_send_msg &rArr; ble_ext_adv_mgr_find_by_handle
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_common_adv_stop
<LI><a href="#[412]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_common_adv_get_state
<LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_find_le_link_by_conn_id
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_gap_disconnect
</UL>
<BR>[Called By]<UL><LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_common_adv_handle_engage_role_decided
</UL>

<P><STRONG><a name="[434]"></a>app_ble_common_adv_start</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, app_ble_common_adv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = app_ble_common_adv_start &rArr; ble_ext_adv_mgr_enable &rArr; ble_ext_adv_mgr_start_set_adv_param &rArr; ble_ext_adv_mgr_send_msg &rArr; ble_ext_adv_mgr_find_by_handle
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[435]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[405]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_common_adv_start_rws
</UL>

<P><STRONG><a name="[405]"></a>app_ble_common_adv_start_rws</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, app_ble_common_adv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = app_ble_common_adv_start_rws &rArr; app_ble_common_adv_start &rArr; ble_ext_adv_mgr_enable &rArr; ble_ext_adv_mgr_start_set_adv_param &rArr; ble_ext_adv_mgr_send_msg &rArr; ble_ext_adv_mgr_find_by_handle
</UL>
<BR>[Calls]<UL><LI><a href="#[434]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_common_adv_start
</UL>
<BR>[Called By]<UL><LI><a href="#[3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_rtk_adv_start
</UL>

<P><STRONG><a name="[41c]"></a>app_ble_common_adv_handle_engage_role_decided</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, app_ble_common_adv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = app_ble_common_adv_handle_engage_role_decided &rArr; app_ble_rtk_adv_start &rArr; app_ble_common_adv_start_rws &rArr; app_ble_common_adv_start &rArr; ble_ext_adv_mgr_enable &rArr; ble_ext_adv_mgr_start_set_adv_param &rArr; ble_ext_adv_mgr_send_msg &rArr; ble_ext_adv_mgr_find_by_handle
</UL>
<BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[433]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_common_adv_sec_stop_adv_and_link
<LI><a href="#[430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_common_adv_bud_role_update
<LI><a href="#[3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_rtk_adv_start
</UL>
<BR>[Called By]<UL><LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_device_handle_engage_role_decided
</UL>

<P><STRONG><a name="[3bb]"></a>app_ble_common_adv_get_conn_id</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, app_ble_common_adv.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_gap_handle_new_conn_state_evt
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_bt_cback
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_timerout_cb
<LI><a href="#[3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_rtk_adv_start
<LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_gap_handle_authen_state_evt
<LI><a href="#[912]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_devinfo_notify
<LI><a href="#[911]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_ble_heartbeat_notify
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_timeout_cb
</UL>

<P><STRONG><a name="[3bc]"></a>app_ble_common_adv_reset_conn_id</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, app_ble_common_adv.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_gap_handle_new_conn_state_evt
</UL>

<P><STRONG><a name="[436]"></a>app_ble_common_adv_update_scan_rsp_data</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, app_ble_common_adv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = app_ble_common_adv_update_scan_rsp_data &rArr; ble_ext_adv_mgr_set_scan_response_data &rArr; ble_ext_adv_mgr_start_set_adv_param &rArr; ble_ext_adv_mgr_send_msg &rArr; ble_ext_adv_mgr_find_by_handle
</UL>
<BR>[Calls]<UL><LI><a href="#[437]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_set_scan_response_data
<LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_gap_gen_scan_rsp_data
</UL>
<BR>[Called By]<UL><LI><a href="#[6a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_cmd_le_name_set
</UL>

<P><STRONG><a name="[3f3]"></a>app_ble_common_adv_init</STRONG> (Thumb, 302 bytes, Stack size 88 bytes, app_ble_common_adv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = app_ble_common_adv_init &rArr; ble_ext_adv_mgr_init_adv_params &rArr; ble_ext_adv_mgr_init_adv_params_all &rArr; ble_ext_adv_mgr_allocate_adv_handle
</UL>
<BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[43e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_register_callback
<LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_init_adv_params
<LI><a href="#[43a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_license_pid_get
<LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_license_cid_get
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_ble_data_len_get
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_ble_data_get
<LI><a href="#[43c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_ble_bt_mac_crc_get
<LI><a href="#[43f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_rand_addr_cb_reg
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_rand_addr_get
<LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_gap_gen_scan_rsp_data
</UL>
<BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_gap_bt_cback
</UL>

<P><STRONG><a name="[429]"></a>app_ble_common_adv_set_conn_id</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, app_ble_common_adv.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_service_transmit_srv_cb
</UL>

<P><STRONG><a name="[30b]"></a>app_sdp_init</STRONG> (Thumb, 176 bytes, Stack size 16 bytes, app_sdp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = app_sdp_init &rArr; bt_sdp_record_add &rArr; bt_sdp_record_register
</UL>
<BR>[Calls]<UL><LI><a href="#[440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_sdp_record_add
<LI><a href="#[441]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_avrcp_get_supported_features
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[507]"></a>app_hfp_hfp_ring_timer_check</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, app_hfp.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_handle_action
</UL>

<P><STRONG><a name="[370]"></a>app_hfp_get_call_status</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, app_hfp.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_handle_action
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_key_single_click
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_key_execute_action
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_get_call_status
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_a2dp_bt_cback
<LI><a href="#[45b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_legacy_update_call_status
<LI><a href="#[44d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_vol_set
<LI><a href="#[5d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_enter_state
<LI><a href="#[5ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_stable_sched
<LI><a href="#[5bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_sco_handle
<LI><a href="#[5a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_a2dp_stop_handle
<LI><a href="#[5a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_judge_active_a2dp_idx_and_qos
<LI><a href="#[59e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_allow_a2dp_sniffing
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_bt_cback
<LI><a href="#[539]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_topology_dm
<LI><a href="#[4fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_volume_down
<LI><a href="#[4f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_volume_up
<LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_spk_mute_set
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_link_policy_ind
<LI><a href="#[72d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_cb_handle_kbp_write_req
<LI><a href="#[657]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_cmd_handle
<LI><a href="#[631]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_set_voice_gain_when_sco_conn_cmpl
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_bt_cback
<LI><a href="#[62e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_sco_conn_cmpl_handle
<LI><a href="#[6a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_cmd_general_cmd_handle
<LI><a href="#[816]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_if_fm_lcis_handle
<LI><a href="#[810]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_adv_update_interval_hfp
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_timeout_cb
<LI><a href="#[8e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_check_call_sate
<LI><a href="#[899]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_link_connected
<LI><a href="#[898]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_link_streaming
<LI><a href="#[879]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_handle_mcp_state
<LI><a href="#[853]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_mgr_bca_mmi_handle
<LI><a href="#[94c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_devinfo_set
<LI><a href="#[949]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_devinfo_get
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_timeout_cb
<LI><a href="#[90a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_legacy_bt_cback
<LI><a href="#[8fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_terminate_hfp_call
</UL>

<P><STRONG><a name="[442]"></a>app_hfp_voice_nr_enable</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, app_hfp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = app_hfp_voice_nr_enable &rArr; audio_probe_dsp_ipc_send_call_status &rArr; h2d_cmd_send &rArr; shm_cmd_send &rArr; wr_queue_send
</UL>
<BR>[Calls]<UL><LI><a href="#[444]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_probe_dsp_ipc_send_call_status
<LI><a href="#[443]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_relay_sync_single_with_raw_msg
</UL>
<BR>[Called By]<UL><LI><a href="#[455]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_update_call_status
</UL>

<P><STRONG><a name="[445]"></a>app_hfp_inband_tone_mute_ctrl</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, app_hfp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 568<LI>Call Chain = app_hfp_inband_tone_mute_ctrl &rArr; audio_track_volume_out_unmute &rArr; audio_mgr_dispatch &rArr; audio_mgr_buffer_event_handle &rArr; audio_buffer_playing_state &rArr; audio_track_restart &rArr; audio_session_state_set &rArr;  audio_mgr_dispatch (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[446]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_volume_out_unmute
</UL>
<BR>[Called By]<UL><LI><a href="#[44d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_vol_set
<LI><a href="#[44b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_always_playing_outband_tone
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_bt_cback
<LI><a href="#[4fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_volume_down
<LI><a href="#[4f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_volume_up
</UL>

<P><STRONG><a name="[447]"></a>app_hfp_get_call_in_tone_type</STRONG> (Thumb, 116 bytes, Stack size 8 bytes, app_hfp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = app_hfp_get_call_in_tone_type
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_handle_action
<LI><a href="#[455]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_update_call_status
<LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_ring_alert
<LI><a href="#[4fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_hf_reject_call
</UL>

<P><STRONG><a name="[44b]"></a>app_hfp_always_playing_outband_tone</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, app_hfp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 632<LI>Call Chain = app_hfp_always_playing_outband_tone &rArr; app_hfp_ring_alert &rArr; app_audio_tone_type_play &rArr; voice_prompt_play &rArr; notification_push &rArr; notification_play &rArr; notification_path_start &rArr; notification_start_vp &rArr; audio_path_start &rArr; audio_path_schedule &rArr; audio_path_voice_start &rArr; dsp_mgr_session_enable &rArr; dsp_state_machine &rArr; dsp_power_on &rArr; dsp_hal_reset &rArr; shm_enable &rArr; h2d_cmd_send &rArr; shm_cmd_send &rArr; wr_queue_send
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[445]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_inband_tone_mute_ctrl
<LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_ring_alert
</UL>
<BR>[Called By]<UL><LI><a href="#[455]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_update_call_status
</UL>

<P><STRONG><a name="[458]"></a>app_hfp_sco_is_connected</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, app_hfp.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_handle_action
<LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_sco_status_notify
<LI><a href="#[480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_adjust_sco_window
<LI><a href="#[471]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_timeout_cb
<LI><a href="#[455]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_update_call_status
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_audio_cback
<LI><a href="#[5e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_roleswitch_b2s_check
<LI><a href="#[5bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_sco_handle
<LI><a href="#[5a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_a2dp_stop_handle
<LI><a href="#[5a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_qos_param_update
<LI><a href="#[4f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_harman_get_active_hf_idx
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_link_policy_ind
<LI><a href="#[676]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_eq_judge_audio_eq_mode
<LI><a href="#[65f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_eq_mode_get
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_timeout_cb
<LI><a href="#[94c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_devinfo_set
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_timeout_cb
</UL>

<P><STRONG><a name="[44c]"></a>app_hfp_set_link_voice_gain</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, app_hfp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 736<LI>Call Chain = app_hfp_set_link_voice_gain &rArr; app_audio_vol_set &rArr; app_iphone_abs_vol_wrap_audio_track_volume_out_set &rArr; app_harman_lr_balance_set &rArr; audio_volume_balance_set &rArr; audio_mgr_dispatch &rArr; audio_mgr_buffer_event_handle &rArr; audio_buffer_playing_state &rArr; audio_track_restart &rArr; audio_session_state_set &rArr;  audio_mgr_dispatch (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_find_br_link
<LI><a href="#[44d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_vol_set
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_track_spk_unmute
</UL>
<BR>[Called By]<UL><LI><a href="#[44f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_set_call_status
</UL>

<P><STRONG><a name="[44f]"></a>app_hfp_set_call_status</STRONG> (Thumb, 142 bytes, Stack size 32 bytes, app_hfp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 768<LI>Call Chain = app_hfp_set_call_status &rArr; app_hfp_set_link_voice_gain &rArr; app_audio_vol_set &rArr; app_iphone_abs_vol_wrap_audio_track_volume_out_set &rArr; app_harman_lr_balance_set &rArr; audio_volume_balance_set &rArr; audio_mgr_dispatch &rArr; audio_mgr_buffer_event_handle &rArr; audio_buffer_playing_state &rArr; audio_track_restart &rArr; audio_session_state_set &rArr;  audio_mgr_dispatch (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_roleswap_ctrl_check
<LI><a href="#[450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bond_get_pair_idx_mapping
<LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_set_link_voice_gain
</UL>
<BR>[Called By]<UL><LI><a href="#[455]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_update_call_status
</UL>

<P><STRONG><a name="[451]"></a>app_hfp_set_active_idx</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, app_hfp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 456<LI>Call Chain = app_hfp_set_active_idx &rArr; audio_track_start &rArr; audio_session_state_set &rArr;  audio_mgr_dispatch (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_find_br_link
<LI><a href="#[454]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_sco_link_switch
<LI><a href="#[453]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_start
<LI><a href="#[452]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_aling_active_hfp_idx_set
</UL>
<BR>[Called By]<UL><LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_handle_action
<LI><a href="#[470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_handle_sniffing_link_disconnect_event
<LI><a href="#[455]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_update_call_status
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_bt_cback
<LI><a href="#[62e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_sco_conn_cmpl_handle
</UL>

<P><STRONG><a name="[455]"></a>app_hfp_update_call_status</STRONG> (Thumb, 672 bytes, Stack size 56 bytes, app_hfp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1436<LI>Call Chain = app_hfp_update_call_status &rArr; mtc_legacy_update_call_status &rArr; app_lea_uca_link_sm &rArr; app_lea_uca_link_connected &rArr; app_lea_uca_remove_data_path &rArr; mtc_topology_dm &rArr;  app_lea_uca_link_sm (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_get_b2s_link_num
<LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_is_mic_mute
<LI><a href="#[45b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_legacy_update_call_status
<LI><a href="#[45e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_volume_in_unmute
<LI><a href="#[453]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_start
<LI><a href="#[457]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multilink_sco_preemptive
<LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_resume_a2dp_link_stream
<LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_get_sco_conn_num
<LI><a href="#[45a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_connect_idle_to_power_off
<LI><a href="#[45f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_tone_type_cancel
<LI><a href="#[45d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_set_mic_mute_status
<LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_a2dp_get_active_idx
<LI><a href="#[451]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_set_active_idx
<LI><a href="#[44f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_set_call_status
<LI><a href="#[458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_sco_is_connected
<LI><a href="#[44b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_always_playing_outband_tone
<LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_get_call_in_tone_type
<LI><a href="#[442]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_voice_nr_enable
<LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_ota_exit
<LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_ble_ota_get_upgrate_status
</UL>
<BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_bt_cback
</UL>

<P><STRONG><a name="[460]"></a>app_hfp_set_no_service_timer</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, app_hfp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = app_hfp_set_no_service_timer &rArr; app_start_timer &rArr; remove_timeout_msg_from_list
</UL>
<BR>[Calls]<UL><LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_stop_timer
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_start_timer
</UL>
<BR>[Called By]<UL><LI><a href="#[461]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_check_service_status
</UL>

<P><STRONG><a name="[398]"></a>app_hfp_batt_level_report</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, app_hfp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = app_hfp_batt_level_report &rArr; bt_hfp_batt_level_report &rArr; hfp_try_general_at_cmd &rArr; hfp_flush_cmd &rArr; hfp_send_general_at_cmd &rArr; rfc_data_req &rArr; rfc_check_send_credits &rArr; crc8EtsGen
</UL>
<BR>[Calls]<UL><LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_roleswap_ctrl_get_status
<LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_hfp_batt_level_report
</UL>
<BR>[Called By]<UL><LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_charger_handle_soc
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_bt_cback
</UL>

<P><STRONG><a name="[466]"></a>app_hfp_set_vol_is_changed</STRONG> (Thumb, 114 bytes, Stack size 40 bytes, app_hfp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 816<LI>Call Chain = app_hfp_set_vol_is_changed &rArr; app_hfp_spk_vol_set &rArr; app_audio_vol_set &rArr; app_iphone_abs_vol_wrap_audio_track_volume_out_set &rArr; app_harman_lr_balance_set &rArr; audio_volume_balance_set &rArr; audio_mgr_dispatch &rArr; audio_mgr_buffer_event_handle &rArr; audio_buffer_playing_state &rArr; audio_track_restart &rArr; audio_session_state_set &rArr;  audio_mgr_dispatch (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[465]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_spk_vol_set
</UL>
<BR>[Called By]<UL><LI><a href="#[471]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_timeout_cb
</UL>

<P><STRONG><a name="[4ef]"></a>app_hfp_get_active_idx</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, app_hfp.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_handle_action
<LI><a href="#[478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;harman_sidetone_set_dsp
<LI><a href="#[470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_handle_sniffing_link_disconnect_event
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_track_spk_unmute
<LI><a href="#[5e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_roleswitch_b2s_check
<LI><a href="#[5ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sass_preempt_policy
<LI><a href="#[5b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_check_voice_dial
<LI><a href="#[5af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_roleswap_disconnect_inactive_link
<LI><a href="#[5ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_disconnect_inactive_link
<LI><a href="#[5a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_judge_active_a2dp_idx_and_qos
<LI><a href="#[59e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_allow_a2dp_sniffing
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_bt_cback
<LI><a href="#[539]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_topology_dm
<LI><a href="#[51d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_active_hfp_transfer
<LI><a href="#[501]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_hf_end_active_call
<LI><a href="#[500]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_hf_end_outgoing_call
<LI><a href="#[4ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_hf_cancel_voice_dial
<LI><a href="#[4fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_hf_reject_call
<LI><a href="#[4fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_volume_down
<LI><a href="#[4f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_volume_up
<LI><a href="#[4f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_harman_get_active_hf_idx
<LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_spk_mute_set
<LI><a href="#[660]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_eq_enable_info_get
<LI><a href="#[661]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_eq_enable_effect
<LI><a href="#[657]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_cmd_handle
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_bt_cback
<LI><a href="#[62e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_sco_conn_cmpl_handle
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_policy_cback
<LI><a href="#[67e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_set_idle_tpoll
<LI><a href="#[94c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_devinfo_set
</UL>

<P><STRONG><a name="[471]"></a>app_hfp_timeout_cb</STRONG> (Thumb, 520 bytes, Stack size 24 bytes, app_hfp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 2084<LI>Call Chain = app_hfp_timeout_cb &rArr; app_bt_policy_roleswitch_when_sco &rArr; app_bt_policy_roleswitch_handle &rArr; app_multi_roleswap_disconnect_inactive_link &rArr; app_bt_policy_disconnect &rArr; app_bt_policy_state_machine &rArr; app_bt_policy_event_handle &rArr;  app_bt_policy_roleswitch_handle (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_tone_type_play
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_stop_timer
<LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_is_mic_mute
<LI><a href="#[474]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_hfp_voice_recognition_disable_req
<LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_hfp_call_answer_req
<LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_sco_status_notify
<LI><a href="#[473]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_sniffing_hfp_connect
<LI><a href="#[475]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_roleswitch_when_sco
<LI><a href="#[466]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_set_vol_is_changed
<LI><a href="#[458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_sco_is_connected
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_hfp.o(.text)
</UL>
<P><STRONG><a name="[308]"></a>app_hfp_init</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, app_hfp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = app_hfp_init &rArr; bt_hfp_init &rArr; hfp_init &rArr; rfc_reg_cb &rArr; rfc_init
</UL>
<BR>[Calls]<UL><LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_mgr_cback_register
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_reg_cb
<LI><a href="#[47b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_hfp_init
<LI><a href="#[47c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_mgr_cback_register
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[47d]"></a>app_hfp_mute_ctrl</STRONG> (Thumb, 134 bytes, Stack size 8 bytes, app_hfp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 584<LI>Call Chain = app_hfp_mute_ctrl &rArr; app_hfp_set_mic_mute &rArr; audio_volume_in_unmute &rArr; audio_mgr_dispatch &rArr; audio_mgr_buffer_event_handle &rArr; audio_buffer_playing_state &rArr; audio_track_restart &rArr; audio_session_state_set &rArr;  audio_mgr_dispatch (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_is_mic_mute
<LI><a href="#[47e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_set_mic_mute
</UL>
<BR>[Called By]<UL><LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_handle_action
</UL>

<P><STRONG><a name="[47f]"></a>app_hfp_stop_ring_alert_timer</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, app_hfp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 424<LI>Call Chain = app_hfp_stop_ring_alert_timer &rArr; app_harman_sco_status_notify &rArr; app_harman_devinfo_feature_report &rArr; app_harman_report_le_event &rArr; app_transfer_push_data_queue &rArr; app_transfer_pop_data_queue &rArr;  app_transfer_pop_data_queue (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_stop_timer
<LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_sco_status_notify
</UL>
<BR>[Called By]<UL><LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_handle_action
<LI><a href="#[4fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_hf_reject_call
</UL>

<P><STRONG><a name="[480]"></a>app_hfp_adjust_sco_window</STRONG> (Thumb, 186 bytes, Stack size 48 bytes, app_hfp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = app_hfp_adjust_sco_window &rArr; bt_sco_link_retrans_window_set &rArr; bt_find_br_link
</UL>
<BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_get_state
<LI><a href="#[482]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_sco_link_retrans_window_set
<LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_get_sco_conn_num
<LI><a href="#[481]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_src_conn_ind_check
<LI><a href="#[458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_sco_is_connected
</UL>
<BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_cback
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_timer_cback
<LI><a href="#[5d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_linkback_run
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_bt_cback
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_link_policy_ind
</UL>

<P><STRONG><a name="[483]"></a>app_hfp_stop_delay_role_switch</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, app_hfp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = app_hfp_stop_delay_role_switch &rArr; app_stop_timer &rArr; remove_timeout_msg_from_list
</UL>
<BR>[Calls]<UL><LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_stop_timer
</UL>
<BR>[Called By]<UL><LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_handle_action
</UL>

<P><STRONG><a name="[485]"></a>app_avrcp_stop_abs_vol_check_timer</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, app_avrcp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = app_avrcp_stop_abs_vol_check_timer &rArr; app_stop_timer &rArr; remove_timeout_msg_from_list
</UL>
<BR>[Calls]<UL><LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_roleswap_ctrl_check
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_stop_timer
</UL>
<BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_avrcp_bt_cback
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_avrcp_timeout_cb
</UL>

<P><STRONG><a name="[5a0]"></a>app_avrcp_sync_status</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, app_avrcp.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[59f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_a2dp_active_link_set
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_bt_cback
</UL>

<P><STRONG><a name="[490]"></a>app_avrcp_set_vol_is_changed</STRONG> (Thumb, 110 bytes, Stack size 40 bytes, app_avrcp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 824<LI>Call Chain = app_avrcp_set_vol_is_changed &rArr; app_avrcp_abs_vol_set &rArr; app_audio_vol_set &rArr; app_iphone_abs_vol_wrap_audio_track_volume_out_set &rArr; app_harman_lr_balance_set &rArr; audio_volume_balance_set &rArr; audio_mgr_dispatch &rArr; audio_mgr_buffer_event_handle &rArr; audio_buffer_playing_state &rArr; audio_track_restart &rArr; audio_session_state_set &rArr;  audio_mgr_dispatch (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_avrcp_abs_vol_set
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_policy_cback
</UL>

<P><STRONG><a name="[441]"></a>app_avrcp_get_supported_features</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, app_avrcp.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sdp_init
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_avrcp_init
</UL>

<P><STRONG><a name="[309]"></a>app_avrcp_init</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, app_avrcp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = app_avrcp_init &rArr; bt_avrcp_init &rArr; avrcp_init &rArr; avctp_init
</UL>
<BR>[Calls]<UL><LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_mgr_cback_register
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_reg_cb
<LI><a href="#[496]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_avrcp_supported_features_set
<LI><a href="#[495]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_avrcp_init
<LI><a href="#[441]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_avrcp_get_supported_features
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[49c]"></a>app_a2dp_set_active_idx</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, app_a2dp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = app_a2dp_set_active_idx &rArr; app_harman_aling_active_hfp_idx_set &rArr; app_link_get_connected_src_num &rArr; app_link_find_br_link
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_get_connected_src_num
<LI><a href="#[452]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_aling_active_hfp_idx_set
</UL>
<BR>[Called By]<UL><LI><a href="#[5a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_stream_avrcp_set
<LI><a href="#[59f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_a2dp_active_link_set
</UL>

<P><STRONG><a name="[459]"></a>app_a2dp_get_active_idx</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, app_a2dp.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_handle_action
<LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_resume_a2dp_link_stream
<LI><a href="#[470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_handle_sniffing_link_disconnect_event
<LI><a href="#[44d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_vol_set
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_track_spk_unmute
<LI><a href="#[455]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_update_call_status
<LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_eq_reset_unsaved
<LI><a href="#[5dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_prepare_for_dedicated_enter_pairing_mode
<LI><a href="#[5d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_enter_state
<LI><a href="#[5ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_stable_sched
<LI><a href="#[5ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sass_preempt_policy
<LI><a href="#[5a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_preemptive_judge
<LI><a href="#[5bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_sco_handle
<LI><a href="#[5a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_a2dp_stop_handle
<LI><a href="#[5a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_qos_param_update
<LI><a href="#[5b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_check_pend
<LI><a href="#[5af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_roleswap_disconnect_inactive_link
<LI><a href="#[5ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_disconnect_inactive_link
<LI><a href="#[5a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_judge_active_a2dp_idx_and_qos
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_bt_cback
<LI><a href="#[539]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_topology_dm
<LI><a href="#[4fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_iphone_abs_vol_wrap_audio_track_volume_out_set
<LI><a href="#[4fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_volume_down
<LI><a href="#[4f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_volume_up
<LI><a href="#[4f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_harman_get_active_hf_idx
<LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_spk_mute_set
<LI><a href="#[4eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_total_playback_time_update
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_link_policy_ind
<LI><a href="#[66f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_eq_sample_rate_get
<LI><a href="#[625]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_set_eq_boost_gain
<LI><a href="#[660]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_eq_enable_info_get
<LI><a href="#[661]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_eq_enable_effect
<LI><a href="#[657]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_cmd_handle
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_bt_cback
<LI><a href="#[637]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_a2dp_stream_start_handle
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_policy_cback
<LI><a href="#[682]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_set_enlarge_tpoll_state
<LI><a href="#[67e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_set_idle_tpoll
<LI><a href="#[884]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_remove_data_path
<LI><a href="#[883]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_ase_ctrl
<LI><a href="#[859]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_stream_switch
<LI><a href="#[94f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_eq_info_handle
<LI><a href="#[94c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_devinfo_set
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_timeout_cb
<LI><a href="#[90a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_legacy_bt_cback
<LI><a href="#[909]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_resume_sniffing
<LI><a href="#[904]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_stream_pause
<LI><a href="#[8fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_streaming_exist
</UL>

<P><STRONG><a name="[49d]"></a>app_a2dp_get_inactive_idx</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, app_a2dp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = app_a2dp_get_inactive_idx
</UL>
<BR>[Calls]<UL><LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_check_b2s_link_by_id
</UL>
<BR>[Called By]<UL><LI><a href="#[5a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_qos_param_update
<LI><a href="#[67e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_set_idle_tpoll
</UL>

<P><STRONG><a name="[30a]"></a>app_a2dp_init</STRONG> (Thumb, 248 bytes, Stack size 24 bytes, app_a2dp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = app_a2dp_init &rArr; bt_a2dp_init &rArr; a2dp_init &rArr; avdtp_init
</UL>
<BR>[Calls]<UL><LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_mgr_cback_register
<LI><a href="#[4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_a2dp_stream_endpoint_delete
<LI><a href="#[4a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_a2dp_stream_endpoint_add
<LI><a href="#[49f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_a2dp_role_set
<LI><a href="#[49e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_a2dp_init
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[5c6]"></a>app_a2dp_is_streaming</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, app_a2dp.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_update_cpu_freq
</UL>

<P><STRONG><a name="[463]"></a>app_relay_async_single_with_raw_msg</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, app_relay.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_msg_handle
<LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_iphone_abs_vol_sync_abs_vol
<LI><a href="#[461]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_check_service_status
<LI><a href="#[5f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_bt_event_pre_handle
<LI><a href="#[4e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_cmd_update_eq_ctrl
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_rfc_cback
<LI><a href="#[711]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_personalized_name_remote_sync
<LI><a href="#[723]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_account_key_remote_add
<LI><a href="#[729]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_cb_handle_passkey
<LI><a href="#[70e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_cb_handle_additional_passkey
<LI><a href="#[662]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_eq_cmd_operate
<LI><a href="#[6a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_cmd_general_cmd_handle
<LI><a href="#[7b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_msg_all_ring_state
<LI><a href="#[7b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_msg_left_ring_state
<LI><a href="#[7b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_msg_right_ring_state
<LI><a href="#[7b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_msg_ring_stop_state
<LI><a href="#[89b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_link_idle
<LI><a href="#[871]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_bond_action
</UL>

<P><STRONG><a name="[4aa]"></a>app_relay_async_single</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, app_relay.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_bt_cback
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_timerout_cb
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_link_policy_ind
<LI><a href="#[651]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_mp_dual_mic_setting_check
<LI><a href="#[6a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_cmd_general_cmd_handle
<LI><a href="#[89b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_link_idle
</UL>

<P><STRONG><a name="[443]"></a>app_relay_sync_single_with_raw_msg</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, app_relay.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_avrcp_bt_cback
<LI><a href="#[488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_avrcp_abs_vol_set
<LI><a href="#[442]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_voice_nr_enable
<LI><a href="#[465]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_spk_vol_set
<LI><a href="#[7b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_msg_all_ring_state
<LI><a href="#[7b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_msg_ring_stop_state
</UL>

<P><STRONG><a name="[6a6]"></a>app_relay_sync_single</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, app_relay.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_cmd_general_cmd_handle
</UL>

<P><STRONG><a name="[406]"></a>app_harman_req_remote_device_name_timer_start</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, app_device.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = app_harman_req_remote_device_name_timer_start &rArr; app_start_timer &rArr; remove_timeout_msg_from_list
</UL>
<BR>[Calls]<UL><LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_start_timer
<LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_register_pm_excluded
</UL>
<BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_bt_cback
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_timerout_cb
<LI><a href="#[3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_rtk_adv_start
</UL>

<P><STRONG><a name="[4ab]"></a>app_device_reboot</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, app_device.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = app_device_reboot &rArr; app_start_timer &rArr; remove_timeout_msg_from_list
</UL>
<BR>[Calls]<UL><LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_start_timer
<LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_register_pm_excluded
</UL>
<BR>[Called By]<UL><LI><a href="#[93d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_set_lea_mode
</UL>

<P><STRONG><a name="[4ac]"></a>app_device_factory_reset</STRONG> (Thumb, 284 bytes, Stack size 32 bytes, app_device.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = app_device_factory_reset &rArr; voice_prompt_volume_set &rArr; notification_volume_set &rArr; audio_path_dac_level_set &rArr; codec_mgr_dac_gain_set &rArr; codec_drv_dac_config_set &rArr; codec_drv_event_process &rArr; codec_drv_set_sample_rate
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[4b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_cfg_store_all
<LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_cfg_reset
<LI><a href="#[402]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_device_handle_factory_reset
<LI><a href="#[4b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;voice_prompt_volume_set
<LI><a href="#[4b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ringtone_volume_set
<LI><a href="#[4af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;harman_set_vp_ringtone_balance
<LI><a href="#[4ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_clear
<LI><a href="#[4b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ipc_publish
<LI><a href="#[4ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bond_clear_non_rws_keys
</UL>
<BR>[Called By]<UL><LI><a href="#[4f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_reboot
</UL>

<P><STRONG><a name="[4b4]"></a>app_device_state_change</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, app_device.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 392<LI>Call Chain = app_device_state_change &rArr; app_report_event &rArr; app_report_spp_iap_event &rArr; app_transfer_push_data_queue &rArr; app_transfer_pop_data_queue &rArr;  app_transfer_pop_data_queue (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_report_event
</UL>
<BR>[Called By]<UL><LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_handle_action
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_dm_cback
<LI><a href="#[4f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_reboot
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mp_hci_test_dm_cback
</UL>

<P><STRONG><a name="[37f]"></a>app_device_is_in_the_box</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, app_device.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = app_device_is_in_the_box
</UL>
<BR>[Calls]<UL><LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_adp_get_plug_state
</UL>
<BR>[Called By]<UL><LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_is_allow_factory_reset
<LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_key_check_press
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_key_hybrid_click
<LI><a href="#[4c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_power_on_check
<LI><a href="#[4c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_boot_up_directly
<LI><a href="#[4c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_auto_power_on_before_factory_reset
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_dm_cback
<LI><a href="#[5ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_enable_b2s_disconnect_enter_pairing
<LI><a href="#[55e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dlps_power_mode_set
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mp_hci_test_dm_cback
</UL>

<P><STRONG><a name="[380]"></a>app_device_unlock_vbat_disallow_power_on</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, app_device.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = app_device_unlock_vbat_disallow_power_on &rArr; app_cfg_store
</UL>
<BR>[Calls]<UL><LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_cfg_store
</UL>
<BR>[Called By]<UL><LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_key_check_press
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_key_timeout_cb
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_charger_handle_msg
<LI><a href="#[4c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_bt_and_ble_ready_check
</UL>

<P><STRONG><a name="[4da]"></a>app_device_enter_dut_mode</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, app_device.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = app_device_enter_dut_mode &rArr; app_start_timer &rArr; remove_timeout_msg_from_list
</UL>
<BR>[Calls]<UL><LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_start_timer
<LI><a href="#[4a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_disconnect_all_link
</UL>
<BR>[Called By]<UL><LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_handle_action
</UL>

<P><STRONG><a name="[310]"></a>app_device_init</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, app_device.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = app_device_init &rArr; ble_mgr_msg_cback_register &rArr; calloc
</UL>
<BR>[Calls]<UL><LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_mgr_cback_register
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_mgr_cback_register
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_reg_cb
<LI><a href="#[4db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_mgr_msg_cback_register
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[4f2]"></a>app_mmi_reboot_check_timer_start</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, app_mmi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = app_mmi_reboot_check_timer_start &rArr; app_start_timer &rArr; remove_timeout_msg_from_list
</UL>
<BR>[Calls]<UL><LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_start_timer
</UL>
<BR>[Called By]<UL><LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_handle_action
<LI><a href="#[4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_reboot_check
</UL>

<P><STRONG><a name="[51f]"></a>app_mmi_modify_reboot_check_times</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, app_mmi.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_handle_action
</UL>

<P><STRONG><a name="[2fe]"></a>app_mmi_init</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, app_mmi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = app_mmi_init &rArr; app_timer_reg_cb
</UL>
<BR>[Calls]<UL><LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_reg_cb
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[373]"></a>app_mmi_is_allow_factory_reset</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, app_mmi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = app_mmi_is_allow_factory_reset &rArr; app_device_is_in_the_box
</UL>
<BR>[Calls]<UL><LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_is_in_the_box
</UL>
<BR>[Called By]<UL><LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_key_execute_action
</UL>

<P><STRONG><a name="[4fd]"></a>app_mmi_hf_reject_call</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, app_mmi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 440<LI>Call Chain = app_mmi_hf_reject_call &rArr; app_hfp_stop_ring_alert_timer &rArr; app_harman_sco_status_notify &rArr; app_harman_devinfo_feature_report &rArr; app_harman_report_le_event &rArr; app_transfer_push_data_queue &rArr; app_transfer_pop_data_queue &rArr;  app_transfer_pop_data_queue (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[45f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_tone_type_cancel
<LI><a href="#[47f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_stop_ring_alert_timer
<LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_get_active_idx
<LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_get_call_in_tone_type
<LI><a href="#[4fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_hfp_call_terminate_req
</UL>
<BR>[Called By]<UL><LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_handle_action
<LI><a href="#[8fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_terminate_hfp_call
</UL>

<P><STRONG><a name="[4ff]"></a>app_mmi_hf_cancel_voice_dial</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, app_mmi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = app_mmi_hf_cancel_voice_dial &rArr; bt_hfp_voice_recognition_disable_req &rArr; hfp_set_voice_recognition &rArr; hfp_try_general_at_cmd &rArr; hfp_flush_cmd &rArr; hfp_send_general_at_cmd &rArr; rfc_data_req &rArr; rfc_check_send_credits &rArr; crc8EtsGen
</UL>
<BR>[Calls]<UL><LI><a href="#[474]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_hfp_voice_recognition_disable_req
<LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_get_active_idx
</UL>
<BR>[Called By]<UL><LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_handle_action
<LI><a href="#[8fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_terminate_hfp_call
</UL>

<P><STRONG><a name="[500]"></a>app_mmi_hf_end_outgoing_call</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, app_mmi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = app_mmi_hf_end_outgoing_call &rArr; bt_hfp_call_terminate_req &rArr; hfp_reject_phone_call &rArr; hfp_try_general_at_cmd &rArr; hfp_flush_cmd &rArr; hfp_send_general_at_cmd &rArr; rfc_data_req &rArr; rfc_check_send_credits &rArr; crc8EtsGen
</UL>
<BR>[Calls]<UL><LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_get_active_idx
<LI><a href="#[4fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_hfp_call_terminate_req
</UL>
<BR>[Called By]<UL><LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_handle_action
<LI><a href="#[8fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_terminate_hfp_call
</UL>

<P><STRONG><a name="[501]"></a>app_mmi_hf_end_active_call</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, app_mmi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = app_mmi_hf_end_active_call &rArr; bt_hfp_call_terminate_req &rArr; hfp_reject_phone_call &rArr; hfp_try_general_at_cmd &rArr; hfp_flush_cmd &rArr; hfp_send_general_at_cmd &rArr; rfc_data_req &rArr; rfc_check_send_credits &rArr; crc8EtsGen
</UL>
<BR>[Calls]<UL><LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_get_active_idx
<LI><a href="#[4fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_hfp_call_terminate_req
</UL>
<BR>[Called By]<UL><LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_handle_action
<LI><a href="#[8fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_terminate_hfp_call
</UL>

<P><STRONG><a name="[376]"></a>app_mmi_handle_action</STRONG> (Thumb, 2746 bytes, Stack size 48 bytes, app_mmi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1628<LI>Call Chain = app_mmi_handle_action &rArr; app_multi_active_hfp_transfer &rArr; app_multi_handle_sniffing_link_disconnect_event &rArr; app_multi_judge_active_a2dp_idx_and_qos &rArr;  app_multi_handle_sniffing_link_disconnect_event (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switch_into_single_tone_test_mode (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[52e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_ext_scan_stop
<LI><a href="#[3ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_report_eq_idx
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mp_hci_test_mode_is_running
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mp_hci_test_mmi_handle_action
<LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_get_b2s_link_num
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_get_call_status
<LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_discharger_ntc_check_valid
<LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_force_enter_pairing_mode
<LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_auto_power_off_disable
<LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_tone_type_play
<LI><a href="#[4f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_key_set_volume_status
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_stop_timer
<LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_get_connected_src_num
<LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_key_is_enter_pairing
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dlps_disable (via Veneer)
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_get_state
<LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_is_mic_mute
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_led_timer_stop
<LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_led_change_mode
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_led_check_set_mode_available
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_cfg_store
<LI><a href="#[499]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sniff_mode_b2s_disable_all
<LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_hfp_call_answer_req
<LI><a href="#[46a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_get_b2s_link_num_with_profile
<LI><a href="#[473]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_sniffing_hfp_connect
<LI><a href="#[46b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bond_set_priority
<LI><a href="#[45f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_tone_type_cancel
<LI><a href="#[45d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_set_mic_mute_status
<LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_a2dp_get_active_idx
<LI><a href="#[483]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_stop_delay_role_switch
<LI><a href="#[47f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_stop_ring_alert_timer
<LI><a href="#[47d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_mute_ctrl
<LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_get_active_idx
<LI><a href="#[451]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_set_active_idx
<LI><a href="#[458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_sco_is_connected
<LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_get_call_in_tone_type
<LI><a href="#[507]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_hfp_ring_timer_check
<LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_le_device_adv_start
<LI><a href="#[520]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_mgr_power_on
<LI><a href="#[525]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_mgr_power_off
<LI><a href="#[530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mp_hci_test_auto_enter_dut_init
<LI><a href="#[526]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_debug_memory_dump
<LI><a href="#[532]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_vendor_cmd_req
<LI><a href="#[50c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eq_utils_num_get
<LI><a href="#[531]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dut_test_start_auto_power_off_timer
<LI><a href="#[51e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_hfp_voice_recognition_enable_req
<LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_hfp_release_held_or_waiting_call_req
<LI><a href="#[51a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_hfp_release_active_call_accept_held_or_waiting_call_req
<LI><a href="#[519]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_hfp_join_two_calls_req
<LI><a href="#[51c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_hfp_hold_active_call_accept_held_or_waiting_call_req
<LI><a href="#[516]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_hfp_dial_last_number_req
<LI><a href="#[4fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_hfp_call_terminate_req
<LI><a href="#[515]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_hfp_audio_disconnect_req
<LI><a href="#[512]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_avrcp_stop
<LI><a href="#[50f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_avrcp_play
<LI><a href="#[511]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_avrcp_pause
<LI><a href="#[513]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_avrcp_forward
<LI><a href="#[514]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_avrcp_backward
<LI><a href="#[52f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_disable_all
<LI><a href="#[528]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_volume_in_is_muted
<LI><a href="#[521]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sniff_mode_disable_all
<LI><a href="#[524]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_switch_by_mmi
<LI><a href="#[51d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_active_hfp_transfer
<LI><a href="#[50b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_mgr_mmi_handle
<LI><a href="#[510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_is_record_a2dp_active_ever_set
<LI><a href="#[523]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_is_already_connect_one_set
<LI><a href="#[509]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_find_my_buds_ring_stop
<LI><a href="#[4f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_aling_active_hfp_idx_get
<LI><a href="#[50a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_adc_ntc_check_timer_stop
<LI><a href="#[504]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_msg_handle_ring_event
<LI><a href="#[502]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_msg_get_ring_state
<LI><a href="#[505]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_finder_send_ring_rsp
<LI><a href="#[533]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_finder_adv_handle_mmi_action
<LI><a href="#[50d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_eq_sync_idx_accord_eq_mode
<LI><a href="#[52b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_eq_play_audio_eq_tone
<LI><a href="#[52c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_eq_index_set
<LI><a href="#[534]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dult_id_read_state_enable
<LI><a href="#[506]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dult_device_sound_stop
<LI><a href="#[503]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dult_device_get_ring_state
<LI><a href="#[52d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_enter_dut_test_mode
<LI><a href="#[518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_default_connect
<LI><a href="#[517]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bond_b2s_addr_get
<LI><a href="#[4f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_get_bud_stream_state
<LI><a href="#[52a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_enable_play_mic_unmute_tone
<LI><a href="#[529]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_enable_play_mic_mute_tone
<LI><a href="#[527]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_check_mic_mute_enable
<LI><a href="#[501]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_hf_end_active_call
<LI><a href="#[500]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_hf_end_outgoing_call
<LI><a href="#[4ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_hf_cancel_voice_dial
<LI><a href="#[4fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_hf_reject_call
<LI><a href="#[51f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_modify_reboot_check_times
<LI><a href="#[4f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_reboot_check_timer_start
<LI><a href="#[508]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_check_lea_action
<LI><a href="#[50e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_check_factory_reset_behavior
<LI><a href="#[522]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_power_off
<LI><a href="#[4fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_volume_down
<LI><a href="#[4f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_volume_up
<LI><a href="#[4f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_harman_get_active_hf_idx
<LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_spk_mute_set
<LI><a href="#[4b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mp_hci_test_set_mode
<LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_register_pm_excluded
<LI><a href="#[4b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_stop_a2dp_and_sco
<LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_get_radio_mode
<LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_enter_pairing_mode
<LI><a href="#[4a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_disconnect_all_link
<LI><a href="#[4da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_enter_dut_mode
<LI><a href="#[4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_state_change
</UL>
<BR>[Called By]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_charger_timeout_cb
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_charger_handle_soc
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_key_execute_action
<LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_key_check_press
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_key_timeout_cb
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_key_hybrid_click
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_bt_cback
<LI><a href="#[4c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_bt_and_ble_ready_check
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_bt_cback
<LI><a href="#[5ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_stable_sched
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dut_timeout_cb
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mp_hci_test_task
<LI><a href="#[657]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_cmd_handle
<LI><a href="#[652]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_mp_dual_mic_switch_action
<LI><a href="#[631]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_set_voice_gain_when_sco_conn_cmpl
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_auto_power_off_timeout_cb
<LI><a href="#[6bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sass_policy_set_multipoint_state
<LI><a href="#[6bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_spp_cmd_set_handle
<LI><a href="#[6b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_cmd_other_cmd_handle
<LI><a href="#[6a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_cmd_general_cmd_handle
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_cmd_timeout_cb
<LI><a href="#[7ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_set_anc_state
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_timeout_cb
<LI><a href="#[8f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_cis_ase_release
<LI><a href="#[8ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_poweroff_check
<LI><a href="#[89b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_link_idle
<LI><a href="#[94c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_devinfo_set
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_timeout_cb
<LI><a href="#[96d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_discharger_adc_update
</UL>

<P><STRONG><a name="[4e7]"></a>app_link_conn_profiles</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, app_link_util.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_link_policy_ind
</UL>

<P><STRONG><a name="[456]"></a>app_link_get_sco_conn_num</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, app_link_util.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[53b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_point_br_link_sco_num_get
</UL>
<BR>[Called By]<UL><LI><a href="#[480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_adjust_sco_window
<LI><a href="#[455]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_update_call_status
<LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_update_cpu_freq
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_cback
<LI><a href="#[59e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_allow_a2dp_sniffing
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_bt_cback
<LI><a href="#[657]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_cmd_handle
<LI><a href="#[62e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_sco_conn_cmpl_handle
</UL>

<P><STRONG><a name="[49a]"></a>app_link_get_a2dp_start_num</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, app_link_util.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = app_link_get_a2dp_start_num
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_a2dp_bt_cback
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_link_policy_ind
</UL>

<P><STRONG><a name="[397]"></a>app_link_find_br_link</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, app_link_util.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = app_link_find_br_link
</UL>
<BR>[Calls]<UL><LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_charger_handle_soc
<LI><a href="#[383]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_mgr_dev_ctrl
<LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_get_connected_src_num
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_a2dp_bt_cback
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_avrcp_bt_cback
<LI><a href="#[488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_avrcp_abs_vol_set
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_avrcp_timeout_cb
<LI><a href="#[478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;harman_sidetone_set_dsp
<LI><a href="#[45a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_connect_idle_to_power_off
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_track_spk_unmute
<LI><a href="#[451]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_set_active_idx
<LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_set_link_voice_gain
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_audio_cback
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_bt_cback
<LI><a href="#[465]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_spk_vol_set
<LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_remote_device_name_crc_set
<LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_point_link_num_changed
<LI><a href="#[606]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_dedicated_disconnect_event_handle
<LI><a href="#[604]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_conn_sniff_event_handle
<LI><a href="#[5fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_connected_node_is_authed
<LI><a href="#[5fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_b2s_connected_vp_played
<LI><a href="#[5de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_b2s_connected_is_first_src
<LI><a href="#[5d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_b2s_connected_find_node
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_cback
<LI><a href="#[602]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_event_handle
<LI><a href="#[601]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_dedicated_connect_event_handle
<LI><a href="#[5f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_bt_event_pre_handle
<LI><a href="#[5e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_roleswitch_handle
<LI><a href="#[5dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_prepare_for_dedicated_enter_pairing_mode
<LI><a href="#[5d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_linkback_run
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_b2s_connected_del_node
<LI><a href="#[5a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_qos_param_update
<LI><a href="#[59f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_a2dp_active_link_set
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_bt_cback
<LI><a href="#[5ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_a2dp_stop
<LI><a href="#[572]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkback_profile_disconnect_start
<LI><a href="#[547]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_get_encryption_device_num
<LI><a href="#[4fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_volume_down
<LI><a href="#[4f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_volume_up
<LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_spk_mute_set
<LI><a href="#[4d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_find_b2s_link
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_link_policy_ind
<LI><a href="#[773]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_msg_report_session_nonce
<LI><a href="#[778]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_msg_loop_check_data_complete
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_rfc_cback
<LI><a href="#[75e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_account_key_find_inuse_account_key
<LI><a href="#[75b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_account_key_verify_mac
<LI><a href="#[74b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sass_policy_get_connection_state
<LI><a href="#[625]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_set_eq_boost_gain
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_bt_cback
<LI><a href="#[637]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_a2dp_stream_start_handle
<LI><a href="#[62e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_sco_conn_cmpl_handle
<LI><a href="#[62d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_a2dp_track_release
<LI><a href="#[62c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_save_a2dp_config
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_policy_cback
<LI><a href="#[5e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sniff_mode_b2s_enable
<LI><a href="#[60f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sniff_mode_b2s_disable
<LI><a href="#[5fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sniff_mode_b2s_check_left_flag_when_disconnect
<LI><a href="#[6ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sass_policy_switch_active_audio_source
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_spp_bt_cback
<LI><a href="#[7f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sass_policy_get_disc_link
<LI><a href="#[7d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sass_policy_set_capability
<LI><a href="#[7d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sass_policy_initiated_connection
<LI><a href="#[7cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_msg_update_inuse_account_key_index
<LI><a href="#[94c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_devinfo_set
<LI><a href="#[90a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_legacy_bt_cback
<LI><a href="#[909]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_resume_sniffing
<LI><a href="#[906]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_check_sniff
</UL>

<P><STRONG><a name="[5f2]"></a>app_link_alloc_br_link</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, app_link_util.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = app_link_alloc_br_link
</UL>
<BR>[Called By]<UL><LI><a href="#[5f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_bt_event_pre_handle
</UL>

<P><STRONG><a name="[53c]"></a>app_link_free_br_link</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, app_link_util.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 448<LI>Call Chain = app_link_free_br_link &rArr; audio_track_release &rArr; audio_session_state_set &rArr;  audio_mgr_dispatch (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[53e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eq_release
<LI><a href="#[53d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_release
</UL>
<BR>[Called By]<UL><LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_b2s_connected_del_node
</UL>

<P><STRONG><a name="[3ba]"></a>app_link_find_le_link_by_conn_id</STRONG> (Thumb, 58 bytes, Stack size 12 bytes, app_link_util.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = app_link_find_le_link_by_conn_id
</UL>
<BR>[Called By]<UL><LI><a href="#[53f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_reg_le_link_disc_cb
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_gap_timeout_cb
<LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_gap_handle_new_conn_state_evt
<LI><a href="#[3b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_handle_bt_user_confirm
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_bt_cback
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_timerout_cb
<LI><a href="#[433]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_common_adv_sec_stop_adv_and_link
<LI><a href="#[428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_parser_process
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_service_transmit_srv_cb
<LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_remote_device_name_crc_set
<LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;harman_le_common_disc
<LI><a href="#[41f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_handle_b2s_connected
<LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sass_handle_le_dm
<LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_handle_ble_user_confirm
<LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_device_handle_b2s_ble_bonded
<LI><a href="#[3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_rtk_adv_start
<LI><a href="#[3f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_gap_disconnect_all
<LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_gap_handle_mtu_info
<LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_gap_handle_authen_state_evt
<LI><a href="#[5a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_preemptive_judge
<LI><a href="#[773]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_msg_report_session_nonce
<LI><a href="#[761]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_finder_handle_power_off
<LI><a href="#[75e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_account_key_find_inuse_account_key
<LI><a href="#[75b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_account_key_verify_mac
<LI><a href="#[72d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_cb_handle_kbp_write_req
<LI><a href="#[72b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_ble_conn_info_init
<LI><a href="#[729]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_cb_handle_passkey
<LI><a href="#[728]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_send_le_bond_confirm
<LI><a href="#[726]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_send_legacy_bond_confirm
<LI><a href="#[721]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_cb_handle_accountkey
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_le_disconnect_cb
<LI><a href="#[6ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sass_policy_switch_active_audio_source
<LI><a href="#[821]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_ccp_find_call_entry_by_idx
<LI><a href="#[822]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_ccp_alloc_call_entry
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_adv_callback
<LI><a href="#[7db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_psm_msg_coc_conn_callback
<LI><a href="#[7d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sass_policy_set_capability
<LI><a href="#[7d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sass_policy_initiated_connection
<LI><a href="#[7d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_msg_le_loop_check_data_complete
<LI><a href="#[7cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_msg_update_target_drop_device
<LI><a href="#[7cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_msg_update_inuse_account_key_index
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_sync_cb
<LI><a href="#[8b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_terminate
<LI><a href="#[8eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_handle_cccd_msg
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_le_disconnect_cb
<LI><a href="#[8a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_handle_cccd_msg
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_le_disconnect_cb
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_vcs_ble_audio_cback
</UL>

<P><STRONG><a name="[423]"></a>app_link_find_le_link_by_conn_handle</STRONG> (Thumb, 58 bytes, Stack size 12 bytes, app_link_util.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = app_link_find_le_link_by_conn_handle
</UL>
<BR>[Called By]<UL><LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bas_batt_level_report
<LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_mgr_is_media_streaming
<LI><a href="#[422]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gaps_gatt_client_callback
<LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_link_sm
<LI><a href="#[3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_pacs_init_available_context
<LI><a href="#[5dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_prepare_for_dedicated_enter_pairing_mode
<LI><a href="#[539]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_topology_dm
<LI><a href="#[50b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_mgr_mmi_handle
<LI><a href="#[53a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_mgr_find_call_device_by_priority
<LI><a href="#[837]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_pacs_set_sink_available_contexts
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_pacs_ble_audio_cback
<LI><a href="#[82f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_mcp_set_active_conn_handle
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_mcp_ble_audio_cback
<LI><a href="#[81f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_ccp_update_call_status
<LI><a href="#[81e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_ccp_set_active_conn_handle
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_ccp_ble_audio_cback
<LI><a href="#[814]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_ascs_find_ase_entry
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_ascs_ble_audio_cback
<LI><a href="#[7e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_mcp_play_pause
<LI><a href="#[7c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_get_active_link
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_timeout_cb
<LI><a href="#[89d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_handle_pending_mcp_cmd
<LI><a href="#[8a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_handle_mcp_msg
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_audio_cback
<LI><a href="#[8a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_handle_ccp_msg
<LI><a href="#[89f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_handle_ascs_msg
<LI><a href="#[893]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_adjust_active_handle_by_connection
<LI><a href="#[85d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_vol_update_track_volume
<LI><a href="#[861]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_handle_iso_data
<LI><a href="#[94c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_devinfo_set
</UL>

<P><STRONG><a name="[46d]"></a>app_link_find_le_link_by_addr</STRONG> (Thumb, 72 bytes, Stack size 24 bytes, app_link_util.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = app_link_find_le_link_by_addr
</UL>
<BR>[Calls]<UL><LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_bt_cback
<LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_remote_device_name_crc_set
<LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_point_link_num_changed
<LI><a href="#[5dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_prepare_for_dedicated_enter_pairing_mode
</UL>

<P><STRONG><a name="[3cc]"></a>app_link_alloc_le_link_by_conn_id</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, app_link_util.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = app_link_alloc_le_link_by_conn_id
</UL>
<BR>[Called By]<UL><LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_gap_handle_new_conn_state_evt
</UL>

<P><STRONG><a name="[3c2]"></a>app_link_free_le_link</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, app_link_util.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = app_link_free_le_link
</UL>
<BR>[Calls]<UL><LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>
<BR>[Called By]<UL><LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_gap_handle_new_conn_state_evt
</UL>

<P><STRONG><a name="[53f]"></a>app_link_reg_le_link_disc_cb</STRONG> (Thumb, 110 bytes, Stack size 32 bytes, app_link_util.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = app_link_reg_le_link_disc_cb &rArr; app_link_find_le_link_by_conn_id
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calloc
<LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_find_le_link_by_conn_id
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_adv_callback
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_adv_callback
<LI><a href="#[8eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_handle_cccd_msg
<LI><a href="#[8a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_handle_cccd_msg
</UL>

<P><STRONG><a name="[3c9]"></a>app_link_get_le_link_num</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, app_link_util.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_point_le_link_num_get
</UL>
<BR>[Called By]<UL><LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_gap_handle_new_conn_state_evt
<LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_update_cpu_freq
<LI><a href="#[5ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_stable_sched
<LI><a href="#[755]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_get_active_idx
<LI><a href="#[74b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sass_policy_get_connection_state
<LI><a href="#[752]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_check_inuse_account_key
</UL>

<P><STRONG><a name="[3ca]"></a>app_link_get_lea_link_num</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, app_link_util.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[540]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_point_lea_link_num_get
</UL>
<BR>[Called By]<UL><LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_gap_handle_new_conn_state_evt
<LI><a href="#[5ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_stable_sched
<LI><a href="#[752]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_check_inuse_account_key
<LI><a href="#[6bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sass_policy_switch_back
<LI><a href="#[804]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_adv_linkback_check
<LI><a href="#[8ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_poweroff_check
<LI><a href="#[893]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_adjust_active_handle_by_connection
<LI><a href="#[85b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_bmr_terminate
</UL>

<P><STRONG><a name="[4d6]"></a>app_link_check_b2s_link</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, app_link_util.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_bt_cback
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_cback
</UL>

<P><STRONG><a name="[462]"></a>app_link_check_b2s_link_by_id</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, app_link_util.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[49b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sniff_mode_b2s_enable_all
<LI><a href="#[49d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_a2dp_get_inactive_idx
<LI><a href="#[45a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_connect_idle_to_power_off
<LI><a href="#[452]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_aling_active_hfp_idx_set
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_bt_cback
<LI><a href="#[461]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_check_service_status
<LI><a href="#[607]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_disconnect_all_event_handle
<LI><a href="#[604]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_conn_sniff_event_handle
<LI><a href="#[609]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_connected
<LI><a href="#[5ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_shutdown_step_handle
<LI><a href="#[5dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_prepare_for_dedicated_enter_pairing_mode
<LI><a href="#[5a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_qos_param_update
<LI><a href="#[5c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_find_inacitve
<LI><a href="#[5af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_roleswap_disconnect_inactive_link
<LI><a href="#[5ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_disconnect_inactive_link
<LI><a href="#[5a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_judge_active_a2dp_idx_and_qos
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_bt_cback
<LI><a href="#[4f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_harman_get_active_hf_idx
<LI><a href="#[4b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_stop_a2dp_and_sco
<LI><a href="#[752]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_check_inuse_account_key
<LI><a href="#[6bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sass_policy_switch_back
<LI><a href="#[681]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_set_active_tpoll_only
<LI><a href="#[67e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_set_idle_tpoll
</UL>

<P><STRONG><a name="[4d9]"></a>app_link_find_b2s_link</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, app_link_util.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = app_link_find_b2s_link &rArr; app_link_find_br_link
</UL>
<BR>[Calls]<UL><LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_find_br_link
</UL>
<BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_bt_cback
<LI><a href="#[60a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_state_afe_linkback_event_handle
<LI><a href="#[5a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_find_new_active_a2dp_link_by_priority
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_bt_cback
</UL>

<P><STRONG><a name="[388]"></a>app_link_get_b2s_link_num</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, app_link_util.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[541]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_point_br_link_num_get
</UL>
<BR>[Called By]<UL><LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_handle_action
<LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_key_check_press
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_bt_cback
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_timerout_cb
<LI><a href="#[4a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_req_bt_remote_name
<LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_sco_status_notify
<LI><a href="#[455]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_update_call_status
<LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_ring_alert
<LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_remote_device_name_crc_set
<LI><a href="#[3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_rtk_adv_start
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_cback
<LI><a href="#[5e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_roleswitch_b2s_check
<LI><a href="#[5ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_stable_sched
<LI><a href="#[5a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_preemptive_judge
<LI><a href="#[5a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_qos_param_update
<LI><a href="#[5c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_find_inacitve
<LI><a href="#[5b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_reconnect_inactive_link
<LI><a href="#[5af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_roleswap_disconnect_inactive_link
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_bt_cback
<LI><a href="#[539]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_topology_dm
<LI><a href="#[4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_reboot_check
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_link_policy_ind
<LI><a href="#[755]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_get_active_idx
<LI><a href="#[74b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sass_policy_get_connection_state
<LI><a href="#[74c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sass_get_available_connection_num
<LI><a href="#[724]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_device_check_state
<LI><a href="#[752]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_check_inuse_account_key
<LI><a href="#[72d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_cb_handle_kbp_write_req
<LI><a href="#[66f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_eq_sample_rate_get
<LI><a href="#[62e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_sco_conn_cmpl_handle
<LI><a href="#[6bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sass_policy_switch_back
<LI><a href="#[682]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_set_enlarge_tpoll_state
<LI><a href="#[8d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_state_idle
<LI><a href="#[8ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_poweroff_check
<LI><a href="#[949]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_devinfo_get
<LI><a href="#[915]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_ble_process
<LI><a href="#[909]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_resume_sniffing
</UL>

<P><STRONG><a name="[542]"></a>app_link_is_b2s_link_num_full</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, app_link_util.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[544]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_point_lea_link_is_full
<LI><a href="#[543]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_point_is_full
<LI><a href="#[541]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_point_br_link_num_get
</UL>

<P><STRONG><a name="[545]"></a>app_link_set_b2s_link_num</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, app_link_util.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[546]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_point_br_link_num_set
</UL>

<P><STRONG><a name="[46a]"></a>app_link_get_b2s_link_num_with_profile</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, app_link_util.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = app_link_get_b2s_link_num_with_profile
</UL>
<BR>[Called By]<UL><LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_handle_action
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_bt_cback
<LI><a href="#[5a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_judge_active_a2dp_idx_and_qos
</UL>

<P><STRONG><a name="[360]"></a>app_link_get_connected_src_num</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, app_link_util.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = app_link_get_connected_src_num &rArr; app_link_find_br_link
</UL>
<BR>[Calls]<UL><LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_find_br_link
<LI><a href="#[541]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_point_br_link_num_get
</UL>
<BR>[Called By]<UL><LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_led_check_repeat_mode
<LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_gap_handle_new_conn_state_evt
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_handle_action
<LI><a href="#[49c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_a2dp_set_active_idx
<LI><a href="#[452]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_aling_active_hfp_idx_set
<LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_device_handle_b2s_bt_disconnected
<LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_device_handle_enter_pair_mode
<LI><a href="#[40b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_device_handle_power_on
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_cback
</UL>

<P><STRONG><a name="[547]"></a>app_link_get_encryption_device_num</STRONG> (Thumb, 150 bytes, Stack size 24 bytes, app_link_util.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = app_link_get_encryption_device_num &rArr; app_link_find_br_link
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_find_br_link
</UL>
<BR>[Called By]<UL><LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sass_handle_le_dm
<LI><a href="#[5f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_bt_event_pre_handle
<LI><a href="#[74c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sass_get_available_connection_num
</UL>

<P><STRONG><a name="[548]"></a>app_link_disallow_legacy_stream</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, app_link_util.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[549]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_set_sniffing
</UL>
<BR>[Called By]<UL><LI><a href="#[539]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_topology_dm
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_timeout_cb
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_sync_cb
<LI><a href="#[8bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_state_scan
<LI><a href="#[8d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_state_wait_retry
<LI><a href="#[884]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_remove_data_path
<LI><a href="#[909]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_resume_sniffing
<LI><a href="#[900]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_terminate_cis
<LI><a href="#[8fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_streaming_exist
</UL>

<P><STRONG><a name="[2d3]"></a>app_dlps_system_wakeup_clear_rtc_int</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, app_dlps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = app_dlps_system_wakeup_clear_rtc_int &rArr; RTC_ClearINTStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[54a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetINTStatus
<LI><a href="#[54b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_ClearINTStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;board_init
</UL>

<P><STRONG><a name="[54c]"></a>app_dlps_enter_callback</STRONG> (Thumb, 420 bytes, Stack size 40 bytes, app_dlps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = app_dlps_enter_callback &rArr; app_ext_charger_handle_enter_dlps &rArr; app_dlps_set_pad_wake_up &rArr; Pad_TableConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[54e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod (via Veneer)
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_key_is_combinekey_power_on_off
<LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ext_charger_check_support
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_led_reset_pad_config
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_charger_get_soc
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_adp_get_plug_state
<LI><a href="#[54d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;power_mode_get (via Veneer)
<LI><a href="#[554]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ext_charger_handle_enter_dlps
<LI><a href="#[552]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SystemWakeupConfig
<LI><a href="#[550]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetPrescaler
<LI><a href="#[553]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetComp
<LI><a href="#[54f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_DeInit
<LI><a href="#[551]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_CompINTConfig
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dlps_pad_wake_up_enable
<LI><a href="#[4bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;power_mode_set
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_RunCmd
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_dlps.o(.text)
</UL>
<P><STRONG><a name="[555]"></a>app_dlps_exit_callback</STRONG> (Thumb, 98 bytes, Stack size 24 bytes, app_dlps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = app_dlps_exit_callback &rArr; key_gpio_intr_cb &rArr; app_io_msg_send
</UL>
<BR>[Calls]<UL><LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pad_WakeupInterruptValue (via Veneer)
<LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ext_charger_check_support
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pad_TableConfig
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_gpio_intr_cb
<LI><a href="#[54d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;power_mode_get (via Veneer)
<LI><a href="#[556]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ext_charger_handle_exit_dlps
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_dlps.o(.text)
</UL>
<P><STRONG><a name="[55e]"></a>app_dlps_power_mode_set</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, app_dlps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = app_dlps_power_mode_set &rArr; app_device_is_in_the_box
</UL>
<BR>[Calls]<UL><LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_is_in_the_box
<LI><a href="#[54d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;power_mode_get (via Veneer)
<LI><a href="#[4bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;power_mode_set
</UL>
<BR>[Called By]<UL><LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_adp_detect
<LI><a href="#[4ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dlps_power_off
</UL>

<P><STRONG><a name="[4ba]"></a>app_dlps_power_off</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, app_dlps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = app_dlps_power_off &rArr; app_auto_power_off_disable &rArr; app_stop_timer &rArr; remove_timeout_msg_from_list
</UL>
<BR>[Calls]<UL><LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_auto_power_off_disable
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_start_timer
<LI><a href="#[55e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dlps_power_mode_set
<LI><a href="#[4bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;power_mode_set
<LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_register_pm_excluded
</UL>
<BR>[Called By]<UL><LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dlps_init
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_dm_cback
<LI><a href="#[4f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_reboot
</UL>

<P><STRONG><a name="[4be]"></a>app_dlps_enable_auto_poweroff_stop_wdg_timer</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, app_dlps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = app_dlps_enable_auto_poweroff_stop_wdg_timer &rArr; app_auto_power_off_enable &rArr; app_start_timer &rArr; remove_timeout_msg_from_list
</UL>
<BR>[Calls]<UL><LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_auto_power_off_enable
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_stop_timer
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_dm_cback
</UL>

<P><STRONG><a name="[381]"></a>app_dlps_stop_power_down_wdg_timer</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, app_dlps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = app_dlps_stop_power_down_wdg_timer &rArr; app_stop_timer &rArr; remove_timeout_msg_from_list
</UL>
<BR>[Calls]<UL><LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_stop_timer
</UL>
<BR>[Called By]<UL><LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_key_timeout_cb
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mp_hci_test_dm_cback
</UL>

<P><STRONG><a name="[55f]"></a>app_dlps_restore_pad</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, app_dlps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = app_dlps_restore_pad &rArr; Pad_TableConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pad_WakeupInterruptValue (via Veneer)
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pad_TableConfig
<LI><a href="#[560]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_get_isr_callback
</UL>
<BR>[Called By]<UL><LI><a href="#[556]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ext_charger_handle_exit_dlps
</UL>

<P><STRONG><a name="[2fc]"></a>app_dlps_init</STRONG> (Thumb, 326 bytes, Stack size 16 bytes, app_dlps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = app_dlps_init &rArr; app_dlps_power_off &rArr; app_auto_power_off_disable &rArr; app_stop_timer &rArr; remove_timeout_msg_from_list
</UL>
<BR>[Calls]<UL><LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_reg_cb
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_start_timer
<LI><a href="#[563]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;power_check_cb_register
<LI><a href="#[565]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;io_dlps_register_exit_cb
<LI><a href="#[564]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;io_dlps_register_enter_cb
<LI><a href="#[562]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;io_dlps_register
<LI><a href="#[561]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_power_mode_set
<LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_register_pm_excluded
<LI><a href="#[4ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dlps_power_off
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[566]"></a>app_dlps_start_power_down_wdg_timer</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, app_dlps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = app_dlps_start_power_down_wdg_timer &rArr; app_start_timer &rArr; remove_timeout_msg_from_list
</UL>
<BR>[Calls]<UL><LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_start_timer
</UL>
<BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_finder_beacon_le_disconnect_cb
</UL>

<P><STRONG><a name="[5d7]"></a>linkback_profile_is_need_search</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, app_linkback.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_linkback_run
</UL>

<P><STRONG><a name="[568]"></a>linkback_profile_search_start</STRONG> (Thumb, 208 bytes, Stack size 64 bytes, app_linkback.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = linkback_profile_search_start &rArr; gap_br_start_sdp_discov
</UL>
<BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[56a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_br_start_sdp_discov
<LI><a href="#[569]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_br_start_did_discov
</UL>
<BR>[Called By]<UL><LI><a href="#[5d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_linkback_run
</UL>

<P><STRONG><a name="[56b]"></a>linkback_profile_connect_start</STRONG> (Thumb, 160 bytes, Stack size 24 bytes, app_linkback.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = linkback_profile_connect_start &rArr; bt_spp_connect_req &rArr; spp_connect_req &rArr; rfc_conn_req &rArr; rfc_alloc_chann &rArr; sys_timer_delete &rArr; sys_hp_timer_list_remove &rArr; hw_timer_restart &rArr; hw_timer_safe_stop &rArr; hw_timer_set_div
</UL>
<BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[56f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_spp_connect_req
<LI><a href="#[571]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_pbap_connect_req
<LI><a href="#[570]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_iap_connect_req
<LI><a href="#[56e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_hfp_connect_req
<LI><a href="#[56d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_avrcp_connect_req
<LI><a href="#[56c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_a2dp_connect_req
</UL>
<BR>[Called By]<UL><LI><a href="#[60a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_state_afe_linkback_event_handle
<LI><a href="#[601]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_dedicated_connect_event_handle
<LI><a href="#[5d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_linkback_run
</UL>

<P><STRONG><a name="[572]"></a>linkback_profile_disconnect_start</STRONG> (Thumb, 150 bytes, Stack size 16 bytes, app_linkback.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = linkback_profile_disconnect_start &rArr; bt_spp_disconnect_all_req &rArr; spp_disconnect_all &rArr; rfc_disconn_req &rArr; rfc_check_disconn_ctrl_chann &rArr; sys_timer_start &rArr; sys_hp_timer_list_insert &rArr; hw_timer_restart &rArr; hw_timer_safe_stop &rArr; hw_timer_set_div
</UL>
<BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_find_br_link
<LI><a href="#[57b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_br_send_acl_disconn_req
<LI><a href="#[576]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_spp_disconnect_all_req
<LI><a href="#[579]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_rdtp_disconnect_req
<LI><a href="#[578]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_pbap_disconnect_req
<LI><a href="#[577]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_iap_disconnect_req
<LI><a href="#[575]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_hfp_disconnect_req
<LI><a href="#[57a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_gfps_disconnect_req
<LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_avrcp_disconnect_req
<LI><a href="#[573]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_a2dp_disconnect_req
</UL>
<BR>[Called By]<UL><LI><a href="#[606]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_dedicated_disconnect_event_handle
<LI><a href="#[5ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_shutdown_step_handle
<LI><a href="#[94d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_reconnect_avdtp_profile
</UL>

<P><STRONG><a name="[57c]"></a>linkback_todo_queue_init</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, app_linkback.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = linkback_todo_queue_init &rArr; calloc
</UL>
<BR>[Calls]<UL><LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calloc
</UL>
<BR>[Called By]<UL><LI><a href="#[605]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_dedicated_enter_pairing_mode_event_handle
<LI><a href="#[602]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_event_handle
<LI><a href="#[5e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_startup_event_handle
</UL>

<P><STRONG><a name="[580]"></a>linkback_todo_queue_malloc_node_item</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, app_linkback.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[581]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkback_todo_queue_insert_force_node
<LI><a href="#[57f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkback_todo_queue_insert_normal_node
</UL>

<P><STRONG><a name="[583]"></a>linkback_todo_queue_free_node_item</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, app_linkback.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[585]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkback_todo_queue_delete_all_node
<LI><a href="#[582]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkback_todo_queue_take_first_node
</UL>

<P><STRONG><a name="[57d]"></a>linkback_todo_queue_all_node</STRONG> (Thumb, 74 bytes, Stack size 40 bytes, app_linkback.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = linkback_todo_queue_all_node
</UL>
<BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[586]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkback_todo_queue_delete_group_member
<LI><a href="#[582]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkback_todo_queue_take_first_node
<LI><a href="#[581]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkback_todo_queue_insert_force_node
<LI><a href="#[57f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkback_todo_queue_insert_normal_node
</UL>

<P><STRONG><a name="[57e]"></a>linkback_todo_queue_find_node_item</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, app_linkback.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = linkback_todo_queue_find_node_item
</UL>
<BR>[Calls]<UL><LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[581]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkback_todo_queue_insert_force_node
<LI><a href="#[57f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkback_todo_queue_insert_normal_node
</UL>

<P><STRONG><a name="[57f]"></a>linkback_todo_queue_insert_normal_node</STRONG> (Thumb, 116 bytes, Stack size 24 bytes, app_linkback.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = linkback_todo_queue_insert_normal_node &rArr; linkback_todo_queue_all_node
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[57e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkback_todo_queue_find_node_item
<LI><a href="#[57d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkback_todo_queue_all_node
<LI><a href="#[580]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkback_todo_queue_malloc_node_item
</UL>
<BR>[Called By]<UL><LI><a href="#[5f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_bt_event_pre_handle
<LI><a href="#[598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkback_active_node_use_left_time_insert_to_queue_again
<LI><a href="#[592]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkback_load_bond_list
</UL>

<P><STRONG><a name="[581]"></a>linkback_todo_queue_insert_force_node</STRONG> (Thumb, 204 bytes, Stack size 40 bytes, app_linkback.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = linkback_todo_queue_insert_force_node &rArr; linkback_todo_queue_all_node
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[57e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkback_todo_queue_find_node_item
<LI><a href="#[57d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkback_todo_queue_all_node
<LI><a href="#[580]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkback_todo_queue_malloc_node_item
</UL>
<BR>[Called By]<UL><LI><a href="#[601]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_dedicated_connect_event_handle
<LI><a href="#[598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkback_active_node_use_left_time_insert_to_queue_again
</UL>

<P><STRONG><a name="[582]"></a>linkback_todo_queue_take_first_node</STRONG> (Thumb, 90 bytes, Stack size 24 bytes, app_linkback.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = linkback_todo_queue_take_first_node &rArr; linkback_todo_queue_all_node
</UL>
<BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[57d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkback_todo_queue_all_node
<LI><a href="#[583]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkback_todo_queue_free_node_item
</UL>
<BR>[Called By]<UL><LI><a href="#[5d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_linkback_run
</UL>

<P><STRONG><a name="[584]"></a>linkback_todo_queue_remove_plan_profs</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, app_linkback.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = linkback_todo_queue_remove_plan_profs
</UL>
<BR>[Calls]<UL><LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[606]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_dedicated_disconnect_event_handle
</UL>

<P><STRONG><a name="[585]"></a>linkback_todo_queue_delete_all_node</STRONG> (Thumb, 28 bytes, Stack size 4 bytes, app_linkback.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = linkback_todo_queue_delete_all_node
</UL>
<BR>[Calls]<UL><LI><a href="#[583]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkback_todo_queue_free_node_item
</UL>
<BR>[Called By]<UL><LI><a href="#[60a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_state_afe_linkback_event_handle
<LI><a href="#[592]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkback_load_bond_list
</UL>

<P><STRONG><a name="[586]"></a>linkback_todo_queue_delete_group_member</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, app_linkback.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = linkback_todo_queue_delete_group_member &rArr; linkback_todo_queue_all_node
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[57d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkback_todo_queue_all_node
</UL>
<BR>[Called By]<UL><LI><a href="#[5f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_bt_event_pre_handle
<LI><a href="#[598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkback_active_node_use_left_time_insert_to_queue_again
</UL>

<P><STRONG><a name="[596]"></a>linkback_todo_queue_set_group_member_retry_timeout</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, app_linkback.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkback_active_node_use_left_time_insert_to_queue_again
<LI><a href="#[592]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkback_load_bond_list
</UL>

<P><STRONG><a name="[58e]"></a>linkback_todo_queue_node_num</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, app_linkback.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[60a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_state_afe_linkback_event_handle
<LI><a href="#[5e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_linkback_sched
<LI><a href="#[58d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkback_active_node_remain_profs_add
<LI><a href="#[74b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sass_policy_get_connection_state
</UL>

<P><STRONG><a name="[587]"></a>linkback_active_node_init</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, app_linkback.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[605]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_dedicated_enter_pairing_mode_event_handle
<LI><a href="#[602]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_event_handle
<LI><a href="#[5e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_startup_event_handle
</UL>

<P><STRONG><a name="[589]"></a>linkback_active_node_load_doing_prof</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, app_linkback.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = linkback_active_node_load_doing_prof
</UL>
<BR>[Called By]<UL><LI><a href="#[58c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkback_active_node_src_conn_fail_adjust_remain_profs
<LI><a href="#[58b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkback_active_node_step_fail_adjust_remain_profs
<LI><a href="#[58a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkback_active_node_step_suc_adjust_remain_profs
<LI><a href="#[588]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkback_active_node_load
</UL>

<P><STRONG><a name="[588]"></a>linkback_active_node_load</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, app_linkback.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = linkback_active_node_load &rArr; linkback_print_active_node
</UL>
<BR>[Calls]<UL><LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[589]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkback_active_node_load_doing_prof
<LI><a href="#[567]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkback_print_active_node
</UL>
<BR>[Called By]<UL><LI><a href="#[5d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_linkback_run
</UL>

<P><STRONG><a name="[58a]"></a>linkback_active_node_step_suc_adjust_remain_profs</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, app_linkback.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = linkback_active_node_step_suc_adjust_remain_profs &rArr; linkback_print_active_node
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[589]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkback_active_node_load_doing_prof
<LI><a href="#[567]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkback_print_active_node
</UL>
<BR>[Called By]<UL><LI><a href="#[60a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_state_afe_linkback_event_handle
<LI><a href="#[5d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_linkback_run
</UL>

<P><STRONG><a name="[58b]"></a>linkback_active_node_step_fail_adjust_remain_profs</STRONG> (Thumb, 102 bytes, Stack size 16 bytes, app_linkback.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = linkback_active_node_step_fail_adjust_remain_profs &rArr; linkback_print_active_node
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[589]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkback_active_node_load_doing_prof
<LI><a href="#[567]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkback_print_active_node
</UL>
<BR>[Called By]<UL><LI><a href="#[60a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_state_afe_linkback_event_handle
<LI><a href="#[5d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_linkback_run
</UL>

<P><STRONG><a name="[58c]"></a>linkback_active_node_src_conn_fail_adjust_remain_profs</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, app_linkback.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = linkback_active_node_src_conn_fail_adjust_remain_profs &rArr; linkback_print_active_node
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[589]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkback_active_node_load_doing_prof
<LI><a href="#[567]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkback_print_active_node
</UL>
<BR>[Called By]<UL><LI><a href="#[60a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_state_afe_linkback_event_handle
</UL>

<P><STRONG><a name="[58d]"></a>linkback_active_node_remain_profs_add</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, app_linkback.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = linkback_active_node_remain_profs_add &rArr; linkback_print_active_node
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[58e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkback_todo_queue_node_num
<LI><a href="#[567]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkback_print_active_node
</UL>
<BR>[Called By]<UL><LI><a href="#[601]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_dedicated_connect_event_handle
</UL>

<P><STRONG><a name="[58f]"></a>linkback_active_node_remain_profs_sub</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, app_linkback.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = linkback_active_node_remain_profs_sub &rArr; linkback_print_active_node
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[567]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkback_print_active_node
</UL>
<BR>[Called By]<UL><LI><a href="#[606]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_dedicated_disconnect_event_handle
</UL>

<P><STRONG><a name="[590]"></a>linkback_active_node_judge_cur_conn_addr</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, app_linkback.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = linkback_active_node_judge_cur_conn_addr
</UL>
<BR>[Calls]<UL><LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[606]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_dedicated_disconnect_event_handle
<LI><a href="#[60a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_state_afe_linkback_event_handle
<LI><a href="#[601]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_dedicated_connect_event_handle
<LI><a href="#[591]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkback_active_node_judge_cur_conn_prof
</UL>

<P><STRONG><a name="[591]"></a>linkback_active_node_judge_cur_conn_prof</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, app_linkback.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = linkback_active_node_judge_cur_conn_prof &rArr; linkback_active_node_judge_cur_conn_addr
</UL>
<BR>[Calls]<UL><LI><a href="#[590]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkback_active_node_judge_cur_conn_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[60a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_state_afe_linkback_event_handle
</UL>

<P><STRONG><a name="[592]"></a>linkback_load_bond_list</STRONG> (Thumb, 184 bytes, Stack size 64 bytes, app_linkback.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = linkback_load_bond_list &rArr; app_harman_dump_link_information &rArr; app_bond_b2s_addr_get
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[595]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_get_profs_by_bond_flag
<LI><a href="#[593]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bond_b2s_num_get
<LI><a href="#[596]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkback_todo_queue_set_group_member_retry_timeout
<LI><a href="#[585]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkback_todo_queue_delete_all_node
<LI><a href="#[57f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkback_todo_queue_insert_normal_node
<LI><a href="#[594]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_flag_get
<LI><a href="#[517]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bond_b2s_addr_get
<LI><a href="#[4e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_dump_link_information
</UL>
<BR>[Called By]<UL><LI><a href="#[5e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_linkback_sched
</UL>

<P><STRONG><a name="[597]"></a>linkback_check_bond_flag</STRONG> (Thumb, 114 bytes, Stack size 40 bytes, app_linkback.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = linkback_check_bond_flag &rArr; app_bond_b2s_addr_get
</UL>
<BR>[Calls]<UL><LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp (via Veneer)
<LI><a href="#[595]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_get_profs_by_bond_flag
<LI><a href="#[593]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bond_b2s_num_get
<LI><a href="#[594]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_flag_get
<LI><a href="#[517]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bond_b2s_addr_get
</UL>
<BR>[Called By]<UL><LI><a href="#[5d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_linkback_run
</UL>

<P><STRONG><a name="[598]"></a>linkback_active_node_use_left_time_insert_to_queue_again</STRONG> (Thumb, 90 bytes, Stack size 32 bytes, app_linkback.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = linkback_active_node_use_left_time_insert_to_queue_again &rArr; linkback_todo_queue_insert_force_node &rArr; linkback_todo_queue_all_node
</UL>
<BR>[Calls]<UL><LI><a href="#[596]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkback_todo_queue_set_group_member_retry_timeout
<LI><a href="#[586]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkback_todo_queue_delete_group_member
<LI><a href="#[581]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkback_todo_queue_insert_force_node
<LI><a href="#[57f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkback_todo_queue_insert_normal_node
</UL>
<BR>[Called By]<UL><LI><a href="#[60a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_state_afe_linkback_event_handle
<LI><a href="#[5ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_stop_all_active_action
<LI><a href="#[5e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_linkback_sched
</UL>

<P><STRONG><a name="[7eb]"></a>app_multi_get_pending_id</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, app_multilink.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sass_preempt_policy
</UL>

<P><STRONG><a name="[599]"></a>app_multi_update_a2dp_play_status</STRONG> (Thumb, 104 bytes, Stack size 16 bytes, app_multilink.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = app_multi_update_a2dp_play_status &rArr; app_auto_power_off_enable &rArr; app_start_timer &rArr; remove_timeout_msg_from_list
</UL>
<BR>[Calls]<UL><LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_auto_power_off_enable
<LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_auto_power_off_disable
<LI><a href="#[59a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_a2dp_play_status_update
</UL>
<BR>[Called By]<UL><LI><a href="#[5a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_judge_active_a2dp_idx_and_qos
</UL>

<P><STRONG><a name="[59b]"></a>app_multi_set_active_idx</STRONG> (Thumb, 120 bytes, Stack size 24 bytes, app_multilink.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1140<LI>Call Chain = app_multi_set_active_idx &rArr; app_gfps_notify_conn_status &rArr; app_gfps_adv_update_conn_status &rArr; app_gfps_device_check_state &rArr; app_gfps_enter_nondiscoverable_mode &rArr; app_gfps_next_action &rArr; app_gfps_battery_info_report &rArr; app_gfps_battery_set_info &rArr; gfps_gen_adv_data &rArr; gfps_sass_get_encrypt_conn_status &rArr; sha256_hkdf &rArr; hmac_sha256_crypt &rArr; hmac_sha256_finish &rArr; mbedtls_sha256_update &rArr; mbedtls_sha256_update_ret &rArr; mbedtls_internal_sha256_process
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_get_btmode
<LI><a href="#[59c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_notify_conn_status
<LI><a href="#[59d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_msg_notify_multipoint_switch
</UL>
<BR>[Called By]<UL><LI><a href="#[470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_handle_sniffing_link_disconnect_event
<LI><a href="#[5a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_preemptive_judge
<LI><a href="#[5a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_judge_active_a2dp_idx_and_qos
<LI><a href="#[5a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_stream_avrcp_set
<LI><a href="#[59f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_a2dp_active_link_set
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_timeout_cb
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_bt_cback
</UL>

<P><STRONG><a name="[59e]"></a>app_multi_allow_a2dp_sniffing</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, app_multilink.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = app_multi_allow_a2dp_sniffing
</UL>
<BR>[Calls]<UL><LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_get_call_status
<LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_get_sco_conn_num
<LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_get_active_idx
</UL>
<BR>[Called By]<UL><LI><a href="#[5a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_judge_active_a2dp_idx_and_qos
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_bt_cback
</UL>

<P><STRONG><a name="[59f]"></a>app_multi_a2dp_active_link_set</STRONG> (Thumb, 114 bytes, Stack size 24 bytes, app_multilink.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1172<LI>Call Chain = app_multi_a2dp_active_link_set &rArr; app_audio_set_avrcp_status &rArr; app_gfps_notify_conn_status &rArr; app_gfps_adv_update_conn_status &rArr; app_gfps_device_check_state &rArr; app_gfps_enter_nondiscoverable_mode &rArr; app_gfps_next_action &rArr; app_gfps_battery_info_report &rArr; app_gfps_battery_set_info &rArr; gfps_gen_adv_data &rArr; gfps_sass_get_encrypt_conn_status &rArr; sha256_hkdf &rArr; hmac_sha256_crypt &rArr; hmac_sha256_finish &rArr; mbedtls_sha256_update &rArr; mbedtls_sha256_update_ret &rArr; mbedtls_internal_sha256_process
</UL>
<BR>[Calls]<UL><LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_find_br_link
<LI><a href="#[49c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_a2dp_set_active_idx
<LI><a href="#[5a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_avrcp_sync_status
<LI><a href="#[453]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_start
<LI><a href="#[450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bond_get_pair_idx_mapping
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_track_spk_unmute
<LI><a href="#[5a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_a2dp_active_link_set
<LI><a href="#[59b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_set_active_idx
<LI><a href="#[4fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_iphone_abs_vol_wrap_audio_track_volume_out_set
<LI><a href="#[4e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_set_avrcp_status
</UL>
<BR>[Called By]<UL><LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_resume_a2dp_link_stream
<LI><a href="#[5a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_preemptive_judge
<LI><a href="#[5a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_judge_active_a2dp_idx_and_qos
<LI><a href="#[5a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_stream_avrcp_set
</UL>

<P><STRONG><a name="[5a2]"></a>app_multi_stream_avrcp_set</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, app_multilink.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1180<LI>Call Chain = app_multi_stream_avrcp_set &rArr; app_multi_a2dp_active_link_set &rArr; app_audio_set_avrcp_status &rArr; app_gfps_notify_conn_status &rArr; app_gfps_adv_update_conn_status &rArr; app_gfps_device_check_state &rArr; app_gfps_enter_nondiscoverable_mode &rArr; app_gfps_next_action &rArr; app_gfps_battery_info_report &rArr; app_gfps_battery_set_info &rArr; gfps_gen_adv_data &rArr; gfps_sass_get_encrypt_conn_status &rArr; sha256_hkdf &rArr; hmac_sha256_crypt &rArr; hmac_sha256_finish &rArr; mbedtls_sha256_update &rArr; mbedtls_sha256_update_ret &rArr; mbedtls_internal_sha256_process
</UL>
<BR>[Calls]<UL><LI><a href="#[49c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_a2dp_set_active_idx
<LI><a href="#[59f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_a2dp_active_link_set
<LI><a href="#[59b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_set_active_idx
</UL>
<BR>[Called By]<UL><LI><a href="#[5a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_preemptive_judge
<LI><a href="#[5a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_judge_active_a2dp_idx_and_qos
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_timeout_cb
</UL>

<P><STRONG><a name="[46f]"></a>app_multi_check_in_sniffing</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, app_multilink.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_bt_cback
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_cback
<LI><a href="#[5be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_mtc_if_handle
<LI><a href="#[5a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_judge_active_a2dp_idx_and_qos
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_bt_cback
<LI><a href="#[5ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_a2dp_stop
<LI><a href="#[51d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_active_hfp_transfer
</UL>

<P><STRONG><a name="[5a4]"></a>app_multi_judge_active_a2dp_idx_and_qos</STRONG> (Thumb, 1036 bytes, Stack size 64 bytes, app_multilink.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1484 + In Cycle
<LI>Call Chain = app_multi_judge_active_a2dp_idx_and_qos &rArr;  app_multi_handle_sniffing_link_disconnect_event (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_get_call_status
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_stop_timer
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_start_timer
<LI><a href="#[498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_sniffing_start
<LI><a href="#[470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_handle_sniffing_link_disconnect_event
<LI><a href="#[46f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_check_in_sniffing
<LI><a href="#[46a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_get_b2s_link_num_with_profile
<LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_check_b2s_link_by_id
<LI><a href="#[45a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_connect_idle_to_power_off
<LI><a href="#[46b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bond_set_priority
<LI><a href="#[46c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_set_bud_stream_state
<LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_a2dp_get_active_idx
<LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_get_active_idx
<LI><a href="#[5aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_if_fm_ml_handle
<LI><a href="#[5a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_preemptive_judge
<LI><a href="#[5a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_is_record_a2dp_active_ever_get
<LI><a href="#[5a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_a2dp_stop_handle
<LI><a href="#[5a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_sniffing_stop
<LI><a href="#[5a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_qos_param_update
<LI><a href="#[5a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_stream_avrcp_set
<LI><a href="#[59f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_a2dp_active_link_set
<LI><a href="#[59e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_allow_a2dp_sniffing
<LI><a href="#[59b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_set_active_idx
<LI><a href="#[599]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_update_a2dp_play_status
<LI><a href="#[5a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_find_new_active_a2dp_link_by_priority
<LI><a href="#[510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_is_record_a2dp_active_ever_set
</UL>
<BR>[Called By]<UL><LI><a href="#[470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_handle_sniffing_link_disconnect_event
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_bt_cback
<LI><a href="#[5ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_a2dp_stop
</UL>

<P><STRONG><a name="[470]"></a>app_multi_handle_sniffing_link_disconnect_event</STRONG> (Thumb, 702 bytes, Stack size 56 bytes, app_multilink.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1540<LI>Call Chain = app_multi_handle_sniffing_link_disconnect_event &rArr; app_multi_judge_active_a2dp_idx_and_qos &rArr;  app_multi_handle_sniffing_link_disconnect_event (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_sniffing_start
<LI><a href="#[473]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_sniffing_hfp_connect
<LI><a href="#[46c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_set_bud_stream_state
<LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_a2dp_get_active_idx
<LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_get_active_idx
<LI><a href="#[451]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_set_active_idx
<LI><a href="#[5ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_hfp_audio_connect_cfm
<LI><a href="#[59c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_notify_conn_status
<LI><a href="#[5a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_judge_active_a2dp_idx_and_qos
<LI><a href="#[59b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_set_active_idx
</UL>
<BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_bt_cback
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_cback
<LI><a href="#[5be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_mtc_if_handle
<LI><a href="#[5a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_judge_active_a2dp_idx_and_qos
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_bt_cback
<LI><a href="#[5ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_a2dp_stop
<LI><a href="#[51d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_active_hfp_transfer
</UL>

<P><STRONG><a name="[51d]"></a>app_multi_active_hfp_transfer</STRONG> (Thumb, 162 bytes, Stack size 40 bytes, app_multilink.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1580<LI>Call Chain = app_multi_active_hfp_transfer &rArr; app_multi_handle_sniffing_link_disconnect_event &rArr; app_multi_judge_active_a2dp_idx_and_qos &rArr;  app_multi_handle_sniffing_link_disconnect_event (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_handle_sniffing_link_disconnect_event
<LI><a href="#[46f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_check_in_sniffing
<LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_get_active_idx
<LI><a href="#[5a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_sniffing_stop
<LI><a href="#[515]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_hfp_audio_disconnect_req
</UL>
<BR>[Called By]<UL><LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_handle_action
<LI><a href="#[5a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_preemptive_judge
</UL>

<P><STRONG><a name="[5ad]"></a>app_multi_disconnect_inactive_link</STRONG> (Thumb, 272 bytes, Stack size 48 bytes, app_multilink.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 200 + In Cycle
<LI>Call Chain = app_multi_disconnect_inactive_link &rArr;  app_bt_policy_disconnect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_check_b2s_link_by_id
<LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_a2dp_get_active_idx
<LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_get_active_idx
<LI><a href="#[5ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_get_inactive_index
<LI><a href="#[4ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_disconnect
</UL>
<BR>[Called By]<UL><LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sass_handle_le_dm
<LI><a href="#[5f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_bt_event_pre_handle
<LI><a href="#[6bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sass_policy_set_multipoint_state
</UL>

<P><STRONG><a name="[5af]"></a>app_multi_roleswap_disconnect_inactive_link</STRONG> (Thumb, 352 bytes, Stack size 64 bytes, app_multilink.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 2020<LI>Call Chain = app_multi_roleswap_disconnect_inactive_link &rArr; app_bt_policy_disconnect &rArr; app_bt_policy_state_machine &rArr; app_bt_policy_event_handle &rArr;  app_bt_policy_roleswitch_handle (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_get_b2s_link_num
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_start_timer
<LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_check_b2s_link_by_id
<LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_a2dp_get_active_idx
<LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_get_active_idx
<LI><a href="#[5b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_set_connected_tone_need
<LI><a href="#[4ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_disconnect
</UL>
<BR>[Called By]<UL><LI><a href="#[5e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_roleswitch_handle
</UL>

<P><STRONG><a name="[5b1]"></a>app_multi_reconnect_inactive_link</STRONG> (Thumb, 196 bytes, Stack size 24 bytes, app_multilink.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = app_multi_reconnect_inactive_link &rArr; app_bt_policy_default_connect &rArr;  app_bt_policy_state_machine (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_get_b2s_link_num
<LI><a href="#[595]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_get_profs_by_bond_flag
<LI><a href="#[594]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_flag_get
<LI><a href="#[518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_default_connect
</UL>
<BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_timer_cback
</UL>

<P><STRONG><a name="[5b2]"></a>app_multi_stop_acl_disconn_timer</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, app_multilink.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = app_multi_stop_acl_disconn_timer &rArr; app_stop_timer &rArr; remove_timeout_msg_from_list
</UL>
<BR>[Calls]<UL><LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_stop_timer
</UL>
<BR>[Called By]<UL><LI><a href="#[5f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_bt_event_pre_handle
</UL>

<P><STRONG><a name="[524]"></a>app_multi_switch_by_mmi</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, app_multilink.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_handle_action
</UL>

<P><STRONG><a name="[33a]"></a>app_multi_is_on_by_mmi</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, app_multilink.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_cfg_reset
</UL>

<P><STRONG><a name="[449]"></a>app_multi_pause_inactive_a2dp_link_stream</STRONG> (Thumb, 180 bytes, Stack size 48 bytes, app_multilink.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = app_multi_pause_inactive_a2dp_link_stream &rArr; bt_avrcp_pause &rArr; avrcp_send_pass_through &rArr; avrcp_cmd_enqueue &rArr; avrcp_cmd_process &rArr; avrcp_send_cmd_pass_through &rArr; avrcp_send_generic_cmd &rArr; sys_timer_start &rArr; sys_hp_timer_list_insert &rArr; hw_timer_restart &rArr; hw_timer_safe_stop &rArr; hw_timer_set_div
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[5b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_stop
<LI><a href="#[5a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_sniffing_stop
<LI><a href="#[511]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_avrcp_pause
</UL>
<BR>[Called By]<UL><LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_ring_alert
<LI><a href="#[5a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_preemptive_judge
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_timeout_cb
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_bt_cback
</UL>

<P><STRONG><a name="[45c]"></a>app_multi_resume_a2dp_link_stream</STRONG> (Thumb, 126 bytes, Stack size 32 bytes, app_multilink.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1204<LI>Call Chain = app_multi_resume_a2dp_link_stream &rArr; app_multi_a2dp_active_link_set &rArr; app_audio_set_avrcp_status &rArr; app_gfps_notify_conn_status &rArr; app_gfps_adv_update_conn_status &rArr; app_gfps_device_check_state &rArr; app_gfps_enter_nondiscoverable_mode &rArr; app_gfps_next_action &rArr; app_gfps_battery_info_report &rArr; app_gfps_battery_set_info &rArr; gfps_gen_adv_data &rArr; gfps_sass_get_encrypt_conn_status &rArr; sha256_hkdf &rArr; hmac_sha256_crypt &rArr; hmac_sha256_finish &rArr; mbedtls_sha256_update &rArr; mbedtls_sha256_update_ret &rArr; mbedtls_internal_sha256_process
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_a2dp_get_active_idx
<LI><a href="#[59f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_a2dp_active_link_set
<LI><a href="#[50f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_avrcp_play
</UL>
<BR>[Called By]<UL><LI><a href="#[455]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_update_call_status
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_bt_cback
</UL>

<P><STRONG><a name="[5b4]"></a>app_multi_check_pend</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, app_multilink.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = app_multi_check_pend
</UL>
<BR>[Calls]<UL><LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_a2dp_get_active_idx
</UL>
<BR>[Called By]<UL><LI><a href="#[5ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sass_preempt_policy
<LI><a href="#[5a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_preemptive_judge
</UL>

<P><STRONG><a name="[5b6]"></a>app_multi_voice_ongoing_preemptive</STRONG> (Thumb, 68 bytes, Stack size 32 bytes, app_multilink.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = app_multi_voice_ongoing_preemptive &rArr; bt_hfp_voice_recognition_disable_req &rArr; hfp_set_voice_recognition &rArr; hfp_try_general_at_cmd &rArr; hfp_flush_cmd &rArr; hfp_send_general_at_cmd &rArr; rfc_data_req &rArr; rfc_check_send_credits &rArr; crc8EtsGen
</UL>
<BR>[Calls]<UL><LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_stop_timer
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_start_timer
<LI><a href="#[474]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_hfp_voice_recognition_disable_req
</UL>
<BR>[Called By]<UL><LI><a href="#[5a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_preemptive_judge
<LI><a href="#[5b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_check_voice_dial
</UL>

<P><STRONG><a name="[5b7]"></a>app_check_voice_dial</STRONG> (Thumb, 124 bytes, Stack size 24 bytes, app_multilink.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = app_check_voice_dial &rArr; app_multi_voice_ongoing_preemptive &rArr; bt_hfp_voice_recognition_disable_req &rArr; hfp_set_voice_recognition &rArr; hfp_try_general_at_cmd &rArr; hfp_flush_cmd &rArr; hfp_send_general_at_cmd &rArr; rfc_data_req &rArr; rfc_check_send_credits &rArr; crc8EtsGen
</UL>
<BR>[Calls]<UL><LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_get_active_idx
<LI><a href="#[5b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_voice_ongoing_preemptive
<LI><a href="#[515]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_hfp_audio_disconnect_req
</UL>
<BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_bt_cback
</UL>

<P><STRONG><a name="[74a]"></a>app_multi_get_active_idx</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, app_multilink.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sass_preempt_policy
<LI><a href="#[5ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_get_inactive_index
<LI><a href="#[755]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_get_active_idx
<LI><a href="#[74b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sass_policy_get_connection_state
<LI><a href="#[758]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_msg_notify_connection_status
<LI><a href="#[749]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_gen_conn_status
<LI><a href="#[63f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_silent_check
<LI><a href="#[6bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sass_policy_switch_back
<LI><a href="#[6ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sass_policy_switch_active_audio_source
<LI><a href="#[7f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sass_policy_get_disc_link
<LI><a href="#[7ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sass_policy_is_sass_device
<LI><a href="#[7e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sass_pause_inactive_link
</UL>

<P><STRONG><a name="[7ea]"></a>app_multi_checking_silence_pkts</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, app_multilink.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sass_preempt_policy
</UL>

<P><STRONG><a name="[5bd]"></a>app_multi_stop_silence_check_timer</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, app_multilink.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = app_multi_stop_silence_check_timer &rArr; app_stop_timer &rArr; remove_timeout_msg_from_list
</UL>
<BR>[Calls]<UL><LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_stop_timer
</UL>
<BR>[Called By]<UL><LI><a href="#[5a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_preemptive_judge
</UL>

<P><STRONG><a name="[5be]"></a>app_multi_mtc_if_handle</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, app_multilink.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1556<LI>Call Chain = app_multi_mtc_if_handle &rArr; app_multi_handle_sniffing_link_disconnect_event &rArr; app_multi_judge_active_a2dp_idx_and_qos &rArr;  app_multi_handle_sniffing_link_disconnect_event (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_handle_sniffing_link_disconnect_event
<LI><a href="#[46f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_check_in_sniffing
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_multilink.o(.text)
</UL>
<P><STRONG><a name="[30e]"></a>app_multi_init</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, app_multilink.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = app_multi_init &rArr; bt_mgr_cback_register
</UL>
<BR>[Calls]<UL><LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_mgr_cback_register
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_reg_cb
<LI><a href="#[5bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_cback_register
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[457]"></a>app_multilink_sco_preemptive</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, app_multilink.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = app_multilink_sco_preemptive &rArr; bt_hfp_audio_disconnect_req &rArr; hfp_hsp_button_press &rArr; hfp_try_general_at_cmd &rArr; hfp_flush_cmd &rArr; hfp_send_general_at_cmd &rArr; rfc_data_req &rArr; rfc_check_send_credits &rArr; crc8EtsGen
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[515]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_hfp_audio_disconnect_req
</UL>
<BR>[Called By]<UL><LI><a href="#[455]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_update_call_status
</UL>

<P><STRONG><a name="[5c0]"></a>app_multi_find_inacitve</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, app_multilink.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = app_multi_find_inacitve
</UL>
<BR>[Calls]<UL><LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_get_b2s_link_num
<LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_check_b2s_link_by_id
</UL>
<BR>[Called By]<UL><LI><a href="#[5e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_roleswitch_b2s_check
<LI><a href="#[752]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_check_inuse_account_key
</UL>

<P><STRONG><a name="[7bf]"></a>app_multi_get_stream_only</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, app_multilink.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[74b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sass_policy_get_connection_state
<LI><a href="#[7be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_msg_get_conn_state
</UL>

<P><STRONG><a name="[7ed]"></a>app_multi_set_stream_only</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, app_multilink.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_preemptive_judge
</UL>

<P><STRONG><a name="[4e2]"></a>app_bt_policy_b2s_conn_start_timer</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, app_bt_policy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = app_bt_policy_b2s_conn_start_timer &rArr; app_start_timer &rArr; remove_timeout_msg_from_list
</UL>
<BR>[Calls]<UL><LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_start_timer
</UL>
<BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_link_policy_ind
</UL>

<P><STRONG><a name="[595]"></a>app_bt_policy_get_profs_by_bond_flag</STRONG> (Thumb, 82 bytes, Stack size 0 bytes, app_bt_policy.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_bt_event_pre_handle
<LI><a href="#[5b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_reconnect_inactive_link
<LI><a href="#[597]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkback_check_bond_flag
<LI><a href="#[592]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkback_load_bond_list
</UL>

<P><STRONG><a name="[481]"></a>app_bt_policy_src_conn_ind_check</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, app_bt_policy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = app_bt_policy_src_conn_ind_check
</UL>
<BR>[Calls]<UL><LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_adjust_sco_window
<LI><a href="#[5d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_linkback_run
</UL>

<P><STRONG><a name="[5c2]"></a>app_bt_policy_b2s_connected_is_over</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, app_bt_policy.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_point_num_get
</UL>

<P><STRONG><a name="[3cb]"></a>app_bt_policy_update_cpu_freq</STRONG> (Thumb, 190 bytes, Stack size 40 bytes, app_bt_policy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = app_bt_policy_update_cpu_freq &rArr; pm_cpu_freq_req &rArr; pm_cpu_freq_set &rArr; set_cpu_freq &rArr; dvfs_control &rArr; dvfs_set_mode_func
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_start_timer
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_get_state
<LI><a href="#[5c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_a2dp_is_streaming
<LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_get_sco_conn_num
<LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_get_le_link_num
<LI><a href="#[5c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pm_cpu_freq_req
<LI><a href="#[5c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pm_cpu_freq_clear
<LI><a href="#[5c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_state
</UL>
<BR>[Called By]<UL><LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_gap_handle_new_conn_state_evt
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_cback
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_timer_cback
<LI><a href="#[5d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_linkback_run
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_bt_cback
<LI><a href="#[8d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_state_starting
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_sync_cb
<LI><a href="#[8c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_release_all
<LI><a href="#[8bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_state_scan
<LI><a href="#[8d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_state_wait_retry
</UL>

<P><STRONG><a name="[4ec]"></a>app_bt_policy_primary_engage_action_adjust</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, app_bt_policy.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_bt_cback
<LI><a href="#[5ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_a2dp_stop
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_link_policy_ind
</UL>

<P><STRONG><a name="[475]"></a>app_bt_policy_roleswitch_when_sco</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, app_bt_policy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 2060<LI>Call Chain = app_bt_policy_roleswitch_when_sco &rArr; app_bt_policy_roleswitch_handle &rArr; app_multi_roleswap_disconnect_inactive_link &rArr; app_bt_policy_disconnect &rArr; app_bt_policy_state_machine &rArr; app_bt_policy_event_handle &rArr;  app_bt_policy_roleswitch_handle (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[5e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_roleswitch_handle
</UL>
<BR>[Called By]<UL><LI><a href="#[471]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_timeout_cb
</UL>

<P><STRONG><a name="[5eb]"></a>app_bt_policy_enter_dut_test_mode_event_handle</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, app_bt_policy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 432<LI>Call Chain = app_bt_policy_enter_dut_test_mode_event_handle &rArr; app_bt_policy_enter_state &rArr; app_bt_policy_linkback_run &rArr;  app_bt_policy_stable_sched (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[5d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_enter_state
</UL>
<BR>[Called By]<UL><LI><a href="#[602]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_event_handle
</UL>

<P><STRONG><a name="[5f0]"></a>app_bt_policy_update_pair_idx_mapping</STRONG> (Thumb, 386 bytes, Stack size 56 bytes, app_bt_policy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = app_bt_policy_update_pair_idx_mapping &rArr; app_bond_b2s_addr_get
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[5bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_index_get
<LI><a href="#[593]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bond_b2s_num_get
<LI><a href="#[517]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bond_b2s_addr_get
</UL>
<BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_device_event_cback
<LI><a href="#[5f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_bt_event_pre_handle
</UL>

<P><STRONG><a name="[608]"></a>app_bt_policy_state_machine</STRONG> (Thumb, 306 bytes, Stack size 80 bytes, app_bt_policy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1884<LI>Call Chain = app_bt_policy_state_machine &rArr; app_bt_policy_event_handle &rArr;  app_bt_policy_roleswitch_handle (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[5cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_b2s_connected_is_empty
<LI><a href="#[609]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_connected
<LI><a href="#[60a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_state_afe_linkback_event_handle
<LI><a href="#[602]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_event_handle
<LI><a href="#[5f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_bt_event_pre_handle
<LI><a href="#[5ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_shutdown_step_handle
<LI><a href="#[5d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_enter_state
<LI><a href="#[5ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_stable_sched
</UL>
<BR>[Called By]<UL><LI><a href="#[3e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_msg_le_auth
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_cback
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_timer_cback
<LI><a href="#[52d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_enter_dut_test_mode
<LI><a href="#[518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_default_connect
<LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_startup
<LI><a href="#[4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_shutdown
<LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_enter_pairing_mode
<LI><a href="#[4a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_disconnect_all_link
<LI><a href="#[4ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_disconnect
<LI><a href="#[613]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_exit_pairing_mode
<LI><a href="#[67a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_msg_prof_disconn
<LI><a href="#[679]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_msg_prof_conn
</UL>

<P><STRONG><a name="[4b7]"></a>app_bt_policy_stop_a2dp_and_sco</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, app_bt_policy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = app_bt_policy_stop_a2dp_and_sco &rArr; audio_track_stop &rArr;  audio_session_state_set (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_check_b2s_link_by_id
<LI><a href="#[5b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_stop
</UL>
<BR>[Called By]<UL><LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_handle_action
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_dm_cback
</UL>

<P><STRONG><a name="[615]"></a>app_bt_policy_enter_sched</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, app_bt_policy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1652<LI>Call Chain = app_bt_policy_enter_sched &rArr; app_bt_policy_stable_sched &rArr; app_mmi_handle_action &rArr; app_multi_active_hfp_transfer &rArr; app_multi_handle_sniffing_link_disconnect_event &rArr; app_multi_judge_active_a2dp_idx_and_qos &rArr;  app_multi_handle_sniffing_link_disconnect_event (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[5ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_stable_sched
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_adv_timeout_cb
</UL>

<P><STRONG><a name="[8af]"></a>app_bt_policy_is_pairing</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, app_bt_policy.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[8ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_poweroff_check
</UL>

<P><STRONG><a name="[8ae]"></a>app_bt_policy_listening_allow_poweroff</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, app_bt_policy.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[8ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_poweroff_check
</UL>

<P><STRONG><a name="[35d]"></a>app_bt_policy_get_call_status</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, app_bt_policy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = app_bt_policy_get_call_status
</UL>
<BR>[Calls]<UL><LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_get_btmode
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_ccp_get_call_status
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_get_call_status
</UL>
<BR>[Called By]<UL><LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_led_check_repeat_mode
<LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_key_check_press
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_key_hybrid_click
<LI><a href="#[539]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_topology_dm
</UL>

<P><STRONG><a name="[305]"></a>app_bt_policy_init</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, app_bt_policy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = app_bt_policy_init &rArr; app_ipc_subscribe
</UL>
<BR>[Calls]<UL><LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ipc_subscribe
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_mgr_cback_register
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_reg_cb
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[618]"></a>app_audio_get_tone_index</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, app_audio_policy.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_tone_type_play
<LI><a href="#[45f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_tone_type_cancel
</UL>

<P><STRONG><a name="[379]"></a>app_audio_tone_type_play</STRONG> (Thumb, 204 bytes, Stack size 56 bytes, app_audio_policy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 576<LI>Call Chain = app_audio_tone_type_play &rArr; voice_prompt_play &rArr; notification_push &rArr; notification_play &rArr; notification_path_start &rArr; notification_start_vp &rArr; audio_path_start &rArr; audio_path_schedule &rArr; audio_path_voice_start &rArr; dsp_mgr_session_enable &rArr; dsp_state_machine &rArr; dsp_power_on &rArr; dsp_hal_reset &rArr; shm_enable &rArr; h2d_cmd_send &rArr; shm_cmd_send &rArr; wr_queue_send
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[4af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;harman_set_vp_ringtone_balance
<LI><a href="#[61c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;voice_prompt_play
<LI><a href="#[61b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;voice_prompt_cancel
<LI><a href="#[61a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ringtone_play
<LI><a href="#[619]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ringtone_cancel
<LI><a href="#[618]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_get_tone_index
</UL>
<BR>[Called By]<UL><LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_charger_harman_low_bat_warning_vp
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mp_hci_test_mmi_handle_action
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_handle_action
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_key_timeout_cb
<LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_key_handle_key_tone_play
<LI><a href="#[471]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_timeout_cb
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_bt_cback
<LI><a href="#[461]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_check_service_status
<LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_ring_alert
<LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_gap_handle_authen_state_evt
<LI><a href="#[50b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_mgr_mmi_handle
<LI><a href="#[52b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_eq_play_audio_eq_tone
<LI><a href="#[522]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_power_off
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_link_policy_ind
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dut_timeout_cb
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mp_hci_test_dm_cback
<LI><a href="#[657]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_cmd_handle
<LI><a href="#[621]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_policy_vol_max_tone_play
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_policy_timeout_cb
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_policy_cback
<LI><a href="#[61d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_handle_vol_change
<LI><a href="#[81d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_ccp_trigger_call_ringtone
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dult_audio_cback
<LI><a href="#[7f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dult_device_sound_start
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_msg_timeout_cb
<LI><a href="#[7ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_msg_ring_play
<LI><a href="#[8d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_state_idle
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_sync_cb
<LI><a href="#[89b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_link_idle
<LI><a href="#[896]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_handle_le_disconnect
<LI><a href="#[853]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_mgr_bca_mmi_handle
<LI><a href="#[945]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_find_my_buds_ring_play
</UL>

<P><STRONG><a name="[5b0]"></a>app_audio_set_connected_tone_need</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, app_audio_policy.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[60a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_state_afe_linkback_event_handle
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_timer_cback
<LI><a href="#[5af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_roleswap_disconnect_inactive_link
</UL>

<P><STRONG><a name="[4f8]"></a>app_audio_get_bud_stream_state</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, app_audio_policy.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_handle_action
<LI><a href="#[4fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_volume_down
<LI><a href="#[4f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_volume_up
</UL>

<P><STRONG><a name="[46c]"></a>app_audio_set_bud_stream_state</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, app_audio_policy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = app_audio_set_bud_stream_state
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_roleswap_ctrl_get_status
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_a2dp_bt_cback
<LI><a href="#[470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_handle_sniffing_link_disconnect_event
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_bt_cback
<LI><a href="#[5a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_judge_active_a2dp_idx_and_qos
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_bt_cback
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_link_policy_ind
</UL>

<P><STRONG><a name="[59a]"></a>app_audio_a2dp_play_status_update</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, app_audio_policy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = app_audio_a2dp_play_status_update
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[599]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_update_a2dp_play_status
<LI><a href="#[4e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_set_avrcp_status
</UL>

<P><STRONG><a name="[4e6]"></a>app_audio_set_avrcp_status</STRONG> (Thumb, 82 bytes, Stack size 32 bytes, app_audio_policy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1148<LI>Call Chain = app_audio_set_avrcp_status &rArr; app_gfps_notify_conn_status &rArr; app_gfps_adv_update_conn_status &rArr; app_gfps_device_check_state &rArr; app_gfps_enter_nondiscoverable_mode &rArr; app_gfps_next_action &rArr; app_gfps_battery_info_report &rArr; app_gfps_battery_set_info &rArr; gfps_gen_adv_data &rArr; gfps_sass_get_encrypt_conn_status &rArr; sha256_hkdf &rArr; hmac_sha256_crypt &rArr; hmac_sha256_finish &rArr; mbedtls_sha256_update &rArr; mbedtls_sha256_update_ret &rArr; mbedtls_internal_sha256_process
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[59c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_notify_conn_status
<LI><a href="#[59a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_a2dp_play_status_update
</UL>
<BR>[Called By]<UL><LI><a href="#[59f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_a2dp_active_link_set
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_link_policy_ind
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_bt_cback
</UL>

<P><STRONG><a name="[623]"></a>app_audio_get_latency_value_by_level</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, app_audio_policy.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[622]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_get_last_used_latency
<LI><a href="#[637]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_a2dp_stream_start_handle
<LI><a href="#[7cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_rfc_report_dynamic_buffer_size
</UL>

<P><STRONG><a name="[622]"></a>app_audio_get_last_used_latency</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, app_audio_policy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = app_audio_get_last_used_latency
</UL>
<BR>[Calls]<UL><LI><a href="#[623]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_get_latency_value_by_level
</UL>
<BR>[Called By]<UL><LI><a href="#[637]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_a2dp_stream_start_handle
<LI><a href="#[7d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_msg_handle_data_transfer
</UL>

<P><STRONG><a name="[45f]"></a>app_audio_tone_type_cancel</STRONG> (Thumb, 140 bytes, Stack size 32 bytes, app_audio_policy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = app_audio_tone_type_cancel &rArr; voice_prompt_cancel &rArr; notification_cancel &rArr; notification_stop &rArr; audio_path_stop &rArr; audio_path_state_set &rArr; sys_event_flag_post &rArr; sys_event_flag_abort
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[61b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;voice_prompt_cancel
<LI><a href="#[619]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ringtone_cancel
<LI><a href="#[618]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_get_tone_index
</UL>
<BR>[Called By]<UL><LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_handle_action
<LI><a href="#[455]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_update_call_status
<LI><a href="#[509]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_find_my_buds_ring_stop
<LI><a href="#[506]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dult_device_sound_stop
<LI><a href="#[4fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_hf_reject_call
<LI><a href="#[775]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_msg_ring_stop
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_policy_cback
</UL>

<P><STRONG><a name="[52a]"></a>app_audio_enable_play_mic_unmute_tone</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, app_audio_policy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = app_audio_enable_play_mic_unmute_tone
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_handle_action
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_policy_cback
<LI><a href="#[8a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_enable_mic
<LI><a href="#[85e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_set_mic_mute
</UL>

<P><STRONG><a name="[529]"></a>app_audio_enable_play_mic_mute_tone</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, app_audio_policy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = app_audio_enable_play_mic_mute_tone
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_handle_action
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_policy_cback
<LI><a href="#[8a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_enable_mic
<LI><a href="#[85e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_set_mic_mute
</UL>

<P><STRONG><a name="[44e]"></a>app_audio_track_spk_unmute</STRONG> (Thumb, 132 bytes, Stack size 32 bytes, app_audio_policy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 592<LI>Call Chain = app_audio_track_spk_unmute &rArr; audio_track_volume_out_unmute &rArr; audio_mgr_dispatch &rArr; audio_mgr_buffer_event_handle &rArr; audio_buffer_playing_state &rArr; audio_track_restart &rArr; audio_session_state_set &rArr;  audio_mgr_dispatch (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_find_br_link
<LI><a href="#[446]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_volume_out_unmute
<LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_a2dp_get_active_idx
<LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_get_active_idx
</UL>
<BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_avrcp_bt_cback
<LI><a href="#[488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_avrcp_abs_vol_set
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_avrcp_timeout_cb
<LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_set_link_voice_gain
<LI><a href="#[465]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_spk_vol_set
<LI><a href="#[59f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_a2dp_active_link_set
<LI><a href="#[4fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_volume_down
<LI><a href="#[4f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_volume_up
<LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_spk_mute_set
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_policy_cback
</UL>

<P><STRONG><a name="[44d]"></a>app_audio_vol_set</STRONG> (Thumb, 152 bytes, Stack size 32 bytes, app_audio_policy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 720<LI>Call Chain = app_audio_vol_set &rArr; app_iphone_abs_vol_wrap_audio_track_volume_out_set &rArr; app_harman_lr_balance_set &rArr; audio_volume_balance_set &rArr; audio_mgr_dispatch &rArr; audio_mgr_buffer_event_handle &rArr; audio_buffer_playing_state &rArr; audio_track_restart &rArr; audio_session_state_set &rArr;  audio_mgr_dispatch (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_get_call_status
<LI><a href="#[4f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_key_set_volume_status
<LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_volume_out_set
<LI><a href="#[486]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_lr_balance_set
<LI><a href="#[476]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_stream_type_get
<LI><a href="#[450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bond_get_pair_idx_mapping
<LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_a2dp_get_active_idx
<LI><a href="#[445]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_inband_tone_mute_ctrl
<LI><a href="#[4fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_iphone_abs_vol_wrap_audio_track_volume_out_set
</UL>
<BR>[Called By]<UL><LI><a href="#[488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_avrcp_abs_vol_set
<LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_set_link_voice_gain
<LI><a href="#[465]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_spk_vol_set
<LI><a href="#[631]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_set_voice_gain_when_sco_conn_cmpl
<LI><a href="#[637]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_a2dp_stream_start_handle
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_policy_cback
</UL>

<P><STRONG><a name="[35e]"></a>app_audio_is_mic_mute</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, app_audio_policy.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_led_check_repeat_mode
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_handle_action
<LI><a href="#[47d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_mute_ctrl
<LI><a href="#[471]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_timeout_cb
<LI><a href="#[455]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_update_call_status
<LI><a href="#[47e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_set_mic_mute
</UL>

<P><STRONG><a name="[63a]"></a>app_audio_speaker_channel_set</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, app_audio_policy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 568<LI>Call Chain = app_audio_speaker_channel_set &rArr; audio_volume_out_channel_set &rArr; audio_mgr_dispatch &rArr; audio_mgr_buffer_event_handle &rArr; audio_buffer_playing_state &rArr; audio_track_restart &rArr; audio_session_state_set &rArr;  audio_mgr_dispatch (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[63b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_volume_out_channel_set
</UL>
<BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_bt_cback
<LI><a href="#[8d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_state_idle
<LI><a href="#[89b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_link_idle
</UL>

<P><STRONG><a name="[641]"></a>app_audio_probe_cback</STRONG> (Thumb, 92 bytes, Stack size 32 bytes, app_audio_policy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 400<LI>Call Chain = app_audio_probe_cback &rArr; app_report_event &rArr; app_report_spp_iap_event &rArr; app_transfer_push_data_queue &rArr; app_transfer_pop_data_queue &rArr;  app_transfer_pop_data_queue (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_report_event
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_audio_policy.o(.text)
</UL>
<P><STRONG><a name="[642]"></a>app_audio_mtc_if_handle</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, app_audio_policy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 840<LI>Call Chain = app_audio_mtc_if_handle &rArr; app_audio_a2dp_stream_start_handle &rArr; app_audio_vol_set &rArr; app_iphone_abs_vol_wrap_audio_track_volume_out_set &rArr; app_harman_lr_balance_set &rArr; audio_volume_balance_set &rArr; audio_mgr_dispatch &rArr; audio_mgr_buffer_event_handle &rArr; audio_buffer_playing_state &rArr; audio_track_restart &rArr; audio_session_state_set &rArr;  audio_mgr_dispatch (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[637]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_a2dp_stream_start_handle
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_audio_policy.o(.text)
</UL>
<P><STRONG><a name="[30d]"></a>app_audio_init</STRONG> (Thumb, 252 bytes, Stack size 16 bytes, app_audio_policy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 672<LI>Call Chain = app_audio_init &rArr; app_eq_init &rArr; app_haraman_eq_init &rArr; app_harman_get_default_eq_info &rArr; FixPoint2Double &rArr; pow &rArr; sqrt &rArr; _dsqrt
</UL>
<BR>[Calls]<UL><LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_mgr_cback_register
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_reg_cb
<LI><a href="#[47c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_mgr_cback_register
<LI><a href="#[5bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_cback_register
<LI><a href="#[4b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;voice_prompt_volume_set
<LI><a href="#[4b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ringtone_volume_set
<LI><a href="#[4af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;harman_set_vp_ringtone_balance
<LI><a href="#[64c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;voice_prompt_volume_min_set
<LI><a href="#[64b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;voice_prompt_volume_max_set
<LI><a href="#[646]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;voice_prompt_language_set
<LI><a href="#[64e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ringtone_volume_min_set
<LI><a href="#[64d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ringtone_volume_max_set
<LI><a href="#[649]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_volume_out_min_set
<LI><a href="#[647]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_volume_out_max_set
<LI><a href="#[64a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_volume_in_min_set
<LI><a href="#[648]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_volume_in_max_set
<LI><a href="#[643]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_probe_dsp_cback_register
<LI><a href="#[645]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_eq_init
<LI><a href="#[644]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_route_gain_init
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[45d]"></a>app_audio_set_mic_mute_status</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, app_audio_policy.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_handle_action
<LI><a href="#[455]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_update_call_status
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_bt_cback
</UL>

<P><STRONG><a name="[64f]"></a>app_audio_mic_switch</STRONG> (Thumb, 84 bytes, Stack size 24 bytes, app_audio_policy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = app_audio_mic_switch &rArr; audio_probe_dsp_send &rArr; h2d_cmd_send &rArr; shm_cmd_send &rArr; wr_queue_send
</UL>
<BR>[Calls]<UL><LI><a href="#[650]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_probe_dsp_send
</UL>
<BR>[Called By]<UL><LI><a href="#[657]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_cmd_handle
<LI><a href="#[652]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_mp_dual_mic_switch_action
</UL>

<P><STRONG><a name="[651]"></a>app_audio_mp_dual_mic_setting_check</STRONG> (Thumb, 144 bytes, Stack size 24 bytes, app_audio_policy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = app_audio_mp_dual_mic_setting_check
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_relay_async_single
</UL>
<BR>[Called By]<UL><LI><a href="#[657]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_cmd_handle
</UL>

<P><STRONG><a name="[652]"></a>app_audio_mp_dual_mic_switch_action</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, app_audio_policy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1644<LI>Call Chain = app_audio_mp_dual_mic_switch_action &rArr; app_mmi_handle_action &rArr; app_multi_active_hfp_transfer &rArr; app_multi_handle_sniffing_link_disconnect_event &rArr; app_multi_judge_active_a2dp_idx_and_qos &rArr;  app_multi_handle_sniffing_link_disconnect_event (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_handle_action
<LI><a href="#[64f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_mic_switch
</UL>
<BR>[Called By]<UL><LI><a href="#[657]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_cmd_handle
</UL>

<P><STRONG><a name="[1333]"></a>app_audio_get_mp_dual_mic_setting</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, app_audio_policy.o(.text), UNUSED)

<P><STRONG><a name="[1334]"></a>app_audio_set_mp_dual_mic_setting</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, app_audio_policy.o(.text), UNUSED)

<P><STRONG><a name="[527]"></a>app_audio_check_mic_mute_enable</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, app_audio_policy.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_handle_action
</UL>

<P><STRONG><a name="[535]"></a>app_audio_tone_flush</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, app_audio_policy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = app_audio_tone_flush &rArr; voice_prompt_flush &rArr; notification_flush
</UL>
<BR>[Calls]<UL><LI><a href="#[654]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;voice_prompt_flush
<LI><a href="#[653]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ringtone_flush
</UL>
<BR>[Called By]<UL><LI><a href="#[522]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_power_off
</UL>

<P><STRONG><a name="[536]"></a>app_audio_tone_type_stop</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, app_audio_policy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = app_audio_tone_type_stop &rArr; voice_prompt_stop &rArr; notification_stop &rArr; audio_path_stop &rArr; audio_path_state_set &rArr; sys_event_flag_post &rArr; sys_event_flag_abort
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[656]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;voice_prompt_stop
<LI><a href="#[655]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ringtone_stop
</UL>
<BR>[Called By]<UL><LI><a href="#[522]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_power_off
</UL>

<P><STRONG><a name="[48f]"></a>app_audio_set_max_min_vol_from_phone_flag</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, app_audio_policy.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_avrcp_abs_vol_set
</UL>

<P><STRONG><a name="[657]"></a>app_audio_cmd_handle</STRONG> (Thumb, 1024 bytes, Stack size 72 bytes, app_audio_policy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1716<LI>Call Chain = app_audio_cmd_handle &rArr; app_audio_mp_dual_mic_switch_action &rArr; app_mmi_handle_action &rArr; app_multi_active_hfp_transfer &rArr; app_multi_handle_sniffing_link_disconnect_event &rArr; app_multi_judge_active_a2dp_idx_and_qos &rArr;  app_multi_handle_sniffing_link_disconnect_event (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calloc
<LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_report_event
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_handle_action
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_ccp_get_call_status
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_get_call_status
<LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_tone_type_play
<LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_get_sco_conn_num
<LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_a2dp_get_active_idx
<LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_get_active_idx
<LI><a href="#[50c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eq_utils_num_get
<LI><a href="#[4f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_route_dac_gain_set
<LI><a href="#[4b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;voice_prompt_volume_set
<LI><a href="#[4af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;harman_set_vp_ringtone_balance
<LI><a href="#[65a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_volume_out_set
<LI><a href="#[65c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_volume_out_min_get
<LI><a href="#[65b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_volume_out_max_get
<LI><a href="#[65d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_volume_out_get
<LI><a href="#[659]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_volume_in_set
<LI><a href="#[650]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_probe_dsp_send
<LI><a href="#[65e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_probe_codec_hw_eq_set
<LI><a href="#[629]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sidetone_detach
<LI><a href="#[627]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sidetone_attach
<LI><a href="#[663]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_set_sidetone_instance
<LI><a href="#[65f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_eq_mode_get
<LI><a href="#[660]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_eq_enable_info_get
<LI><a href="#[661]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_eq_enable_effect
<LI><a href="#[662]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_eq_cmd_operate
<LI><a href="#[658]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_route_adc_gain_set
<LI><a href="#[652]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_mp_dual_mic_switch_action
<LI><a href="#[651]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_mp_dual_mic_setting_check
<LI><a href="#[64f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_mic_switch
</UL>
<BR>[Called By]<UL><LI><a href="#[698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_cmd_handler
</UL>

<P><STRONG><a name="[4fb]"></a>harman_push_max_tone_when_not_playing</STRONG> (Thumb, 92 bytes, Stack size 40 bytes, app_audio_policy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 664<LI>Call Chain = harman_push_max_tone_when_not_playing &rArr; app_audio_handle_vol_change &rArr; app_audio_tone_type_play &rArr; voice_prompt_play &rArr; notification_push &rArr; notification_play &rArr; notification_path_start &rArr; notification_start_vp &rArr; audio_path_start &rArr; audio_path_schedule &rArr; audio_path_voice_start &rArr; dsp_mgr_session_enable &rArr; dsp_state_machine &rArr; dsp_power_on &rArr; dsp_hal_reset &rArr; shm_enable &rArr; h2d_cmd_send &rArr; shm_cmd_send &rArr; wr_queue_send
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[61e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_key_is_set_volume
<LI><a href="#[4f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_key_set_volume_status
<LI><a href="#[61d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_handle_vol_change
</UL>
<BR>[Called By]<UL><LI><a href="#[4f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_volume_up
</UL>

<P><STRONG><a name="[664]"></a>app_eq_dsp_param_get</STRONG> (Thumb, 246 bytes, Stack size 72 bytes, app_eq.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = app_eq_dsp_param_get &rArr; eq_utils_map_get
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[665]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eq_utils_map_get
<LI><a href="#[666]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dsp_cfg_load_param_r_data
</UL>
<BR>[Called By]<UL><LI><a href="#[52c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_eq_index_set
<LI><a href="#[674]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_eq_dsp_param_get
<LI><a href="#[634]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_eq_create
</UL>

<P><STRONG><a name="[633]"></a>app_eq_idx_check_accord_mode</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, app_eq.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = app_eq_idx_check_accord_mode &rArr; eq_utils_num_get
</UL>
<BR>[Calls]<UL><LI><a href="#[50c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eq_utils_num_get
</UL>
<BR>[Called By]<UL><LI><a href="#[645]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_eq_init
<LI><a href="#[632]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_eq_change_audio_eq_mode
<LI><a href="#[637]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_a2dp_stream_start_handle
<LI><a href="#[62e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_sco_conn_cmpl_handle
<LI><a href="#[8a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_playback_eq_setting
</UL>

<P><STRONG><a name="[645]"></a>app_eq_init</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, app_eq.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 656<LI>Call Chain = app_eq_init &rArr; app_haraman_eq_init &rArr; app_harman_get_default_eq_info &rArr; FixPoint2Double &rArr; pow &rArr; sqrt &rArr; _dsqrt
</UL>
<BR>[Calls]<UL><LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ipc_subscribe
<LI><a href="#[667]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eq_utils_init
<LI><a href="#[668]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_haraman_eq_init
<LI><a href="#[633]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_eq_idx_check_accord_mode
</UL>
<BR>[Called By]<UL><LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_init
</UL>

<P><STRONG><a name="[669]"></a>app_eq_media_eq_set</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, app_eq.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = app_eq_media_eq_set &rArr; eq_set &rArr; audio_effect_update
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_get_btmode
<LI><a href="#[66b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eq_set
<LI><a href="#[66a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_get_eq_instance
</UL>
<BR>[Called By]<UL><LI><a href="#[52c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_eq_index_set
<LI><a href="#[675]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_eq_param_set
<LI><a href="#[967]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_eq_dsp_set
</UL>

<P><STRONG><a name="[639]"></a>app_eq_audio_eq_enable</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, app_eq.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = app_eq_audio_eq_enable &rArr; eq_enable &rArr; audio_effect_inheritor_get
</UL>
<BR>[Calls]<UL><LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eq_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[66c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_eq_media_eq_enable
<LI><a href="#[661]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_eq_enable_effect
<LI><a href="#[637]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_a2dp_stream_start_handle
<LI><a href="#[8a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_playback_eq_setting
</UL>

<P><STRONG><a name="[66c]"></a>app_eq_media_eq_enable</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, app_eq.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = app_eq_media_eq_enable &rArr; app_eq_audio_eq_enable &rArr; eq_enable &rArr; audio_effect_inheritor_get
</UL>
<BR>[Calls]<UL><LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_get_btmode
<LI><a href="#[66e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_p_eq_instance
<LI><a href="#[66a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_get_eq_instance
<LI><a href="#[66d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_get_eq_abled
<LI><a href="#[639]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_eq_audio_eq_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[662]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_eq_cmd_operate
</UL>

<P><STRONG><a name="[660]"></a>app_eq_enable_info_get</STRONG> (Thumb, 132 bytes, Stack size 24 bytes, app_eq.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = app_eq_enable_info_get
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_a2dp_get_active_idx
<LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_get_active_idx
</UL>
<BR>[Called By]<UL><LI><a href="#[52c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_eq_index_set
<LI><a href="#[675]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_eq_param_set
<LI><a href="#[662]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_eq_cmd_operate
<LI><a href="#[657]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_cmd_handle
</UL>

<P><STRONG><a name="[52c]"></a>app_eq_index_set</STRONG> (Thumb, 180 bytes, Stack size 56 bytes, app_eq.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = app_eq_index_set &rArr; app_eq_dsp_param_get &rArr; eq_utils_map_get
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calloc
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[50c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eq_utils_num_get
<LI><a href="#[66b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eq_set
<LI><a href="#[669]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_eq_media_eq_set
<LI><a href="#[664]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_eq_dsp_param_get
<LI><a href="#[660]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_eq_enable_info_get
</UL>
<BR>[Called By]<UL><LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_handle_action
<LI><a href="#[632]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_eq_change_audio_eq_mode
</UL>

<P><STRONG><a name="[66f]"></a>app_eq_sample_rate_get</STRONG> (Thumb, 104 bytes, Stack size 16 bytes, app_eq.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_get_btmode
<LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_get_b2s_link_num
<LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_a2dp_get_active_idx
</UL>

<P><STRONG><a name="[50d]"></a>app_eq_sync_idx_accord_eq_mode</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, app_eq.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_handle_action
</UL>

<P><STRONG><a name="[52b]"></a>app_eq_play_audio_eq_tone</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, app_eq.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 584<LI>Call Chain = app_eq_play_audio_eq_tone &rArr; app_audio_tone_type_play &rArr; voice_prompt_play &rArr; notification_push &rArr; notification_play &rArr; notification_path_start &rArr; notification_start_vp &rArr; audio_path_start &rArr; audio_path_schedule &rArr; audio_path_voice_start &rArr; dsp_mgr_session_enable &rArr; dsp_state_machine &rArr; dsp_power_on &rArr; dsp_hal_reset &rArr; shm_enable &rArr; h2d_cmd_send &rArr; shm_cmd_send &rArr; wr_queue_send
</UL>
<BR>[Calls]<UL><LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_tone_type_play
<LI><a href="#[670]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eq_utils_original_eq_index_get
</UL>
<BR>[Called By]<UL><LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_handle_action
<LI><a href="#[662]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_eq_cmd_operate
</UL>

<P><STRONG><a name="[634]"></a>app_eq_create</STRONG> (Thumb, 212 bytes, Stack size 192 bytes, app_eq.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 616<LI>Call Chain = app_eq_create &rArr; app_harman_get_eq_data &rArr; Double2FixPoint &rArr; pow &rArr; sqrt &rArr; _dsqrt
</UL>
<BR>[Calls]<UL><LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calloc
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[671]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eq_create
<LI><a href="#[673]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_get_eq_data
<LI><a href="#[672]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_eq_info_load_from_ftl
<LI><a href="#[674]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_eq_dsp_param_get
<LI><a href="#[664]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_eq_dsp_param_get
<LI><a href="#[625]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_set_eq_boost_gain
</UL>
<BR>[Called By]<UL><LI><a href="#[637]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_a2dp_stream_start_handle
<LI><a href="#[62e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_sco_conn_cmpl_handle
<LI><a href="#[8a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_playback_eq_setting
</UL>

<P><STRONG><a name="[662]"></a>app_eq_cmd_operate</STRONG> (Thumb, 216 bytes, Stack size 64 bytes, app_eq.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 648<LI>Call Chain = app_eq_cmd_operate &rArr; app_eq_play_audio_eq_tone &rArr; app_audio_tone_type_play &rArr; voice_prompt_play &rArr; notification_push &rArr; notification_play &rArr; notification_path_start &rArr; notification_start_vp &rArr; audio_path_start &rArr; audio_path_schedule &rArr; audio_path_voice_start &rArr; dsp_mgr_session_enable &rArr; dsp_state_machine &rArr; dsp_power_on &rArr; dsp_hal_reset &rArr; shm_enable &rArr; h2d_cmd_send &rArr; shm_cmd_send &rArr; wr_queue_send
</UL>
<BR>[Calls]<UL><LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[463]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_relay_async_single_with_raw_msg
<LI><a href="#[52b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_eq_play_audio_eq_tone
<LI><a href="#[66c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_eq_media_eq_enable
<LI><a href="#[675]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_eq_param_set
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eq_enable
<LI><a href="#[660]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_eq_enable_info_get
</UL>
<BR>[Called By]<UL><LI><a href="#[657]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_cmd_handle
</UL>

<P><STRONG><a name="[65f]"></a>app_eq_mode_get</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, app_eq.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = app_eq_mode_get &rArr; app_eq_judge_audio_eq_mode &rArr; eq_utils_num_get
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_sco_is_connected
<LI><a href="#[50c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eq_utils_num_get
<LI><a href="#[676]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_eq_judge_audio_eq_mode
</UL>
<BR>[Called By]<UL><LI><a href="#[657]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_cmd_handle
</UL>

<P><STRONG><a name="[661]"></a>app_eq_enable_effect</STRONG> (Thumb, 192 bytes, Stack size 24 bytes, app_eq.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = app_eq_enable_effect &rArr; eq_create &rArr; audio_effect_inheritor_set
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calloc
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_a2dp_get_active_idx
<LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_get_active_idx
<LI><a href="#[671]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eq_create
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eq_enable
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_effect_attach
<LI><a href="#[639]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_eq_audio_eq_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[657]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_cmd_handle
</UL>

<P><STRONG><a name="[675]"></a>app_eq_param_set</STRONG> (Thumb, 98 bytes, Stack size 40 bytes, app_eq.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = app_eq_param_set &rArr; app_harman_set_eq_boost_gain &rArr; audio_probe_dsp_send &rArr; h2d_cmd_send &rArr; shm_cmd_send &rArr; wr_queue_send
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[66b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eq_set
<LI><a href="#[669]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_eq_media_eq_set
<LI><a href="#[625]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_set_eq_boost_gain
<LI><a href="#[660]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_eq_enable_info_get
</UL>
<BR>[Called By]<UL><LI><a href="#[662]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_eq_cmd_operate
</UL>

<P><STRONG><a name="[676]"></a>app_eq_judge_audio_eq_mode</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, app_eq.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = app_eq_judge_audio_eq_mode &rArr; eq_utils_num_get
</UL>
<BR>[Calls]<UL><LI><a href="#[458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_sco_is_connected
<LI><a href="#[50c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eq_utils_num_get
</UL>
<BR>[Called By]<UL><LI><a href="#[65f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_eq_mode_get
<LI><a href="#[632]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_eq_change_audio_eq_mode
</UL>

<P><STRONG><a name="[632]"></a>app_eq_change_audio_eq_mode</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, app_eq.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 432<LI>Call Chain = app_eq_change_audio_eq_mode &rArr; app_report_eq_idx &rArr; app_report_event_broadcast &rArr; app_report_event &rArr; app_report_spp_iap_event &rArr; app_transfer_push_data_queue &rArr; app_transfer_pop_data_queue &rArr;  app_transfer_pop_data_queue (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[3ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_report_eq_idx
<LI><a href="#[52c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_eq_index_set
<LI><a href="#[676]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_eq_judge_audio_eq_mode
<LI><a href="#[633]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_eq_idx_check_accord_mode
</UL>
<BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_bt_cback
<LI><a href="#[62e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_sco_conn_cmpl_handle
</UL>

<P><STRONG><a name="[677]"></a>app_ota_get_active_bank</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, app_ota.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[678]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_partition_addr_get
</UL>
<BR>[Called By]<UL><LI><a href="#[915]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_ble_process
</UL>

<P><STRONG><a name="[4c0]"></a>app_bt_policy_startup</STRONG> (Thumb, 34 bytes, Stack size 72 bytes, app_bt_policy_api.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1956<LI>Call Chain = app_bt_policy_startup &rArr; app_bt_policy_state_machine &rArr; app_bt_policy_event_handle &rArr;  app_bt_policy_roleswitch_handle (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
<LI><a href="#[608]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_state_machine
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_dm_cback
</UL>

<P><STRONG><a name="[4b8]"></a>app_bt_policy_shutdown</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, app_bt_policy_api.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1884<LI>Call Chain = app_bt_policy_shutdown &rArr; app_bt_policy_state_machine &rArr; app_bt_policy_event_handle &rArr;  app_bt_policy_roleswitch_handle (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[608]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_state_machine
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_dm_cback
</UL>

<P><STRONG><a name="[3e0]"></a>app_bt_policy_msg_le_auth</STRONG> (Thumb, 40 bytes, Stack size 64 bytes, app_bt_policy_api.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1948<LI>Call Chain = app_bt_policy_msg_le_auth &rArr; app_bt_policy_state_machine &rArr; app_bt_policy_event_handle &rArr;  app_bt_policy_roleswitch_handle (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
<LI><a href="#[608]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_state_machine
</UL>
<BR>[Called By]<UL><LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_gap_handle_authen_state_evt
</UL>

<P><STRONG><a name="[679]"></a>app_bt_policy_msg_prof_conn</STRONG> (Thumb, 30 bytes, Stack size 72 bytes, app_bt_policy_api.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + In Cycle
<LI>Call Chain = app_bt_policy_msg_prof_conn &rArr;  app_bt_policy_state_machine (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
<LI><a href="#[608]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_state_machine
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_rfc_cback
<LI><a href="#[89b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_link_idle
</UL>

<P><STRONG><a name="[67a]"></a>app_bt_policy_msg_prof_disconn</STRONG> (Thumb, 38 bytes, Stack size 72 bytes, app_bt_policy_api.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + In Cycle
<LI>Call Chain = app_bt_policy_msg_prof_disconn &rArr;  app_bt_policy_state_machine (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
<LI><a href="#[608]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_state_machine
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_rfc_cback
<LI><a href="#[896]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_handle_le_disconnect
</UL>

<P><STRONG><a name="[4c1]"></a>app_bt_policy_enter_pairing_mode</STRONG> (Thumb, 34 bytes, Stack size 72 bytes, app_bt_policy_api.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + In Cycle
<LI>Call Chain = app_bt_policy_enter_pairing_mode &rArr;  app_bt_policy_state_machine (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
<LI><a href="#[608]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_state_machine
</UL>
<BR>[Called By]<UL><LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_handle_action
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_dm_cback
<LI><a href="#[72d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_cb_handle_kbp_write_req
</UL>

<P><STRONG><a name="[613]"></a>app_bt_policy_exit_pairing_mode</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, app_bt_policy_api.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1884<LI>Call Chain = app_bt_policy_exit_pairing_mode &rArr; app_bt_policy_state_machine &rArr; app_bt_policy_event_handle &rArr;  app_bt_policy_roleswitch_handle (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[608]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_state_machine
</UL>
<BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_cback
</UL>

<P><STRONG><a name="[52d]"></a>app_bt_policy_enter_dut_test_mode</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, app_bt_policy_api.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[608]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_state_machine
</UL>
<BR>[Called By]<UL><LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_handle_action
</UL>

<P><STRONG><a name="[518]"></a>app_bt_policy_default_connect</STRONG> (Thumb, 42 bytes, Stack size 72 bytes, app_bt_policy_api.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + In Cycle
<LI>Call Chain = app_bt_policy_default_connect &rArr;  app_bt_policy_state_machine (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
<LI><a href="#[608]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_state_machine
</UL>
<BR>[Called By]<UL><LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_handle_action
<LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sass_handle_le_dm
<LI><a href="#[5f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_bt_event_pre_handle
<LI><a href="#[5b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_reconnect_inactive_link
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sass_policy_bt_cback
<LI><a href="#[93e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_recon_profile
</UL>

<P><STRONG><a name="[4ea]"></a>app_bt_policy_disconnect</STRONG> (Thumb, 30 bytes, Stack size 72 bytes, app_bt_policy_api.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1956<LI>Call Chain = app_bt_policy_disconnect &rArr; app_bt_policy_state_machine &rArr; app_bt_policy_event_handle &rArr;  app_bt_policy_roleswitch_handle (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
<LI><a href="#[608]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_state_machine
</UL>
<BR>[Called By]<UL><LI><a href="#[5dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_prepare_for_dedicated_enter_pairing_mode
<LI><a href="#[5af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_roleswap_disconnect_inactive_link
<LI><a href="#[5ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_disconnect_inactive_link
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_link_policy_ind
<LI><a href="#[6ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sass_policy_switch_active_audio_source
</UL>

<P><STRONG><a name="[67b]"></a>app_bt_policy_valid_b2s_bond_bum</STRONG> (Thumb, 78 bytes, Stack size 32 bytes, app_bt_policy_api.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = app_bt_policy_valid_b2s_bond_bum
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[594]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_flag_get
<LI><a href="#[67c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_num_get
<LI><a href="#[67d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_addr_get
</UL>
<BR>[Called By]<UL><LI><a href="#[804]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_adv_linkback_check
</UL>

<P><STRONG><a name="[4a5]"></a>app_bt_policy_disconnect_all_link</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, app_bt_policy_api.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[608]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_state_machine
</UL>
<BR>[Called By]<UL><LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_handle_action
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_timerout_cb
<LI><a href="#[4da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_enter_dut_mode
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_ble_ota_timeout_cb
</UL>

<P><STRONG><a name="[352]"></a>app_bt_policy_get_state</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, app_bt_policy_api.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_led_check_repeat_mode
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_handle_action
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_led_set_mode
<LI><a href="#[480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_adjust_sco_window
<LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_update_cpu_freq
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_link_policy_ind
<LI><a href="#[5dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_adv_update
<LI><a href="#[6a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_cmd_general_cmd_handle
<LI><a href="#[804]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_adv_linkback_check
<LI><a href="#[807]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_adv_is_discoverable
<LI><a href="#[83e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_scan_report
</UL>

<P><STRONG><a name="[4de]"></a>app_bt_policy_get_radio_mode</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, app_bt_policy_api.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_handle_action
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_cback
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_link_policy_ind
<LI><a href="#[799]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_finder_cb
<LI><a href="#[724]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_device_check_state
<LI><a href="#[807]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_adv_is_discoverable
</UL>

<P><STRONG><a name="[5f4]"></a>app_bt_policy_sync_b2s_connected</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, app_bt_policy_api.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_bt_event_pre_handle
</UL>

<P><STRONG><a name="[48c]"></a>app_bt_policy_get_first_connect_sync_default_vol_flag</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, app_bt_policy_api.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_avrcp_bt_cback
<LI><a href="#[488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_avrcp_abs_vol_set
</UL>

<P><STRONG><a name="[48e]"></a>app_bt_policy_set_first_connect_sync_default_vol_flag</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, app_bt_policy_api.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_avrcp_abs_vol_set
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_bt_cback
</UL>

<P><STRONG><a name="[67e]"></a>app_bt_policy_set_idle_tpoll</STRONG> (Thumb, 264 bytes, Stack size 32 bytes, app_bt_policy_api.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = app_bt_policy_set_idle_tpoll &rArr; app_bt_policy_bt_link_qos_set &rArr; bt_link_qos_set &rArr; gap_br_send_setup_qos_req
</UL>
<BR>[Calls]<UL><LI><a href="#[49d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_a2dp_get_inactive_idx
<LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_check_b2s_link_by_id
<LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_a2dp_get_active_idx
<LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_get_active_idx
<LI><a href="#[680]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_link_qos_set
<LI><a href="#[67f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_bt_link_qos_set
</UL>
<BR>[Called By]<UL><LI><a href="#[5a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_qos_param_update
</UL>

<P><STRONG><a name="[681]"></a>app_bt_policy_set_active_tpoll_only</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, app_bt_policy_api.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = app_bt_policy_set_active_tpoll_only &rArr; app_bt_policy_bt_link_qos_set &rArr; bt_link_qos_set &rArr; gap_br_send_setup_qos_req
</UL>
<BR>[Calls]<UL><LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_check_b2s_link_by_id
<LI><a href="#[67f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_bt_link_qos_set
</UL>
<BR>[Called By]<UL><LI><a href="#[5a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_qos_param_update
</UL>

<P><STRONG><a name="[682]"></a>app_bt_policy_set_enlarge_tpoll_state</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, app_bt_policy_api.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = app_bt_policy_set_enlarge_tpoll_state
</UL>
<BR>[Calls]<UL><LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_get_b2s_link_num
<LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_a2dp_get_active_idx
</UL>
<BR>[Called By]<UL><LI><a href="#[5a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_qos_param_update
</UL>

<P><STRONG><a name="[5a7]"></a>app_bt_policy_qos_param_update</STRONG> (Thumb, 398 bytes, Stack size 64 bytes, app_bt_policy_api.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = app_bt_policy_qos_param_update &rArr; app_bt_policy_set_idle_tpoll &rArr; app_bt_policy_bt_link_qos_set &rArr; bt_link_qos_set &rArr; gap_br_send_setup_qos_req
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_find_br_link
<LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_get_b2s_link_num
<LI><a href="#[49d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_a2dp_get_inactive_idx
<LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_check_b2s_link_by_id
<LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_a2dp_get_active_idx
<LI><a href="#[458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_sco_is_connected
<LI><a href="#[614]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_link_tpoll_range_set
<LI><a href="#[680]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_link_qos_set
<LI><a href="#[683]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_mgr_is_upstreaming
<LI><a href="#[682]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_set_enlarge_tpoll_state
<LI><a href="#[681]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_set_active_tpoll_only
<LI><a href="#[67e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_set_idle_tpoll
</UL>
<BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_cback
<LI><a href="#[5d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_enter_state
<LI><a href="#[5ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_stable_sched
<LI><a href="#[5a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_judge_active_a2dp_idx_and_qos
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_bt_cback
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_bt_cback
<LI><a href="#[884]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_remove_data_path
</UL>

<P><STRONG><a name="[593]"></a>app_bond_b2s_num_get</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, app_bond.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[67c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_num_get
</UL>
<BR>[Called By]<UL><LI><a href="#[40e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_device_handle_power_on
<LI><a href="#[5a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_find_new_active_a2dp_link_by_priority
<LI><a href="#[597]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkback_check_bond_flag
<LI><a href="#[592]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkback_load_bond_list
<LI><a href="#[4e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_dump_link_information
<LI><a href="#[5d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_ever_link_information
<LI><a href="#[5f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_update_pair_idx_mapping
</UL>

<P><STRONG><a name="[517]"></a>app_bond_b2s_addr_get</STRONG> (Thumb, 60 bytes, Stack size 32 bytes, app_bond.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = app_bond_b2s_addr_get
</UL>
<BR>[Calls]<UL><LI><a href="#[67c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_num_get
<LI><a href="#[67d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_addr_get
</UL>
<BR>[Called By]<UL><LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_handle_action
<LI><a href="#[46b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bond_set_priority
<LI><a href="#[5a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_find_new_active_a2dp_link_by_priority
<LI><a href="#[597]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkback_check_bond_flag
<LI><a href="#[592]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkback_load_bond_list
<LI><a href="#[4e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_dump_link_information
<LI><a href="#[5d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_ever_link_information
<LI><a href="#[5f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_update_pair_idx_mapping
<LI><a href="#[686]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bond_get_b2s_link_record
</UL>

<P><STRONG><a name="[5f5]"></a>app_bond_key_set</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, app_bond.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[684]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_key_set
</UL>
<BR>[Called By]<UL><LI><a href="#[5f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_bt_event_pre_handle
<LI><a href="#[871]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_bond_action
</UL>

<P><STRONG><a name="[450]"></a>app_bond_get_pair_idx_mapping</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, app_bond.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = app_bond_get_pair_idx_mapping
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[5bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_index_get
</UL>
<BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_avrcp_bt_cback
<LI><a href="#[488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_avrcp_abs_vol_set
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_avrcp_timeout_cb
<LI><a href="#[44d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_vol_set
<LI><a href="#[44f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_set_call_status
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_bt_cback
<LI><a href="#[465]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_spk_vol_set
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_cback
<LI><a href="#[5f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_bt_event_pre_handle
<LI><a href="#[59f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_a2dp_active_link_set
<LI><a href="#[4fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_volume_down
<LI><a href="#[4f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_volume_up
<LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_spk_mute_set
<LI><a href="#[637]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_a2dp_stream_start_handle
<LI><a href="#[62e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_sco_conn_cmpl_handle
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_policy_cback
<LI><a href="#[7ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sass_policy_is_sass_device
<LI><a href="#[7e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sass_policy_update_conn_bit_map
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sass_policy_bt_cback
<LI><a href="#[7d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sass_policy_set_capability
<LI><a href="#[94c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_devinfo_set
</UL>

<P><STRONG><a name="[5f9]"></a>app_bond_pop_sec_diff_link_record</STRONG> (Thumb, 140 bytes, Stack size 64 bytes, app_bond.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = app_bond_pop_sec_diff_link_record
</UL>
<BR>[Calls]<UL><LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4 (via Veneer)
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>
<BR>[Called By]<UL><LI><a href="#[5f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_bt_event_pre_handle
</UL>

<P><STRONG><a name="[4b9]"></a>app_bond_clear_sec_diff_link_record</STRONG> (Thumb, 70 bytes, Stack size 48 bytes, app_bond.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = app_bond_clear_sec_diff_link_record
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_dm_cback
</UL>

<P><STRONG><a name="[46b]"></a>app_bond_set_priority</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, app_bond.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = app_bond_set_priority &rArr; app_bond_b2s_addr_get
</UL>
<BR>[Calls]<UL><LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp (via Veneer)
<LI><a href="#[517]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bond_b2s_addr_get
<LI><a href="#[685]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_priority_set
</UL>
<BR>[Called By]<UL><LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_handle_action
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_bt_cback
<LI><a href="#[5a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_preemptive_judge
<LI><a href="#[5a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_judge_active_a2dp_idx_and_qos
<LI><a href="#[871]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_bond_action
</UL>

<P><STRONG><a name="[686]"></a>app_bond_get_b2s_link_record</STRONG> (Thumb, 110 bytes, Stack size 56 bytes, app_bond.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = app_bond_get_b2s_link_record &rArr; app_bond_b2s_addr_get
</UL>
<BR>[Calls]<UL><LI><a href="#[594]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_flag_get
<LI><a href="#[517]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bond_b2s_addr_get
<LI><a href="#[5f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_key_get
</UL>
<BR>[Called By]<UL><LI><a href="#[4ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bond_clear_non_rws_keys
</UL>

<P><STRONG><a name="[4ae]"></a>app_bond_clear_non_rws_keys</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, app_bond.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = app_bond_clear_non_rws_keys &rArr; app_bond_get_b2s_link_record &rArr; app_bond_b2s_addr_get
</UL>
<BR>[Calls]<UL><LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[5fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_delete
<LI><a href="#[686]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bond_get_b2s_link_record
<LI><a href="#[67c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_num_get
</UL>
<BR>[Called By]<UL><LI><a href="#[4ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_factory_reset
<LI><a href="#[93d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_set_lea_mode
</UL>

<P><STRONG><a name="[687]"></a>app_bond_le_set_bond_flag</STRONG> (Thumb, 70 bytes, Stack size 40 bytes, app_bond.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = app_bond_le_set_bond_flag &rArr; bt_le_find_key_entry &rArr; bt_le_resolve_local_rpa
</UL>
<BR>[Calls]<UL><LI><a href="#[3da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_get_conn_addr
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_le_find_key_entry
<LI><a href="#[688]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_get_conn_local_addr
<LI><a href="#[689]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_le_set_bond_flag
</UL>
<BR>[Called By]<UL><LI><a href="#[89b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_link_idle
</UL>

<P><STRONG><a name="[314]"></a>app_bond_init</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, app_bond.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[316]"></a>app_third_party_srv_init</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, app_third_party_srv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1052<LI>Call Chain = app_third_party_srv_init &rArr; app_gfps_init &rArr; app_gfps_battery_info_init &rArr; app_gfps_battery_set_info &rArr; gfps_gen_adv_data &rArr; gfps_sass_get_encrypt_conn_status &rArr; sha256_hkdf &rArr; hmac_sha256_crypt &rArr; hmac_sha256_finish &rArr; mbedtls_sha256_update &rArr; mbedtls_sha256_update_ret &rArr; mbedtls_internal_sha256_process
</UL>
<BR>[Calls]<UL><LI><a href="#[4ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dult_device_init
<LI><a href="#[68a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_msg_rfc_init
<LI><a href="#[68b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_init
<LI><a href="#[68c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dult_svc_init
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[498]"></a>app_bt_sniffing_start</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, app_bt_sniffing.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_a2dp_bt_cback
<LI><a href="#[470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_handle_sniffing_link_disconnect_event
<LI><a href="#[5a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_judge_active_a2dp_idx_and_qos
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_bt_cback
<LI><a href="#[5b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_hfp_audio_connect_confirm
<LI><a href="#[909]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_resume_sniffing
</UL>

<P><STRONG><a name="[5a8]"></a>app_bt_sniffing_stop</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, app_bt_sniffing.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_pause_inactive_a2dp_link_stream
<LI><a href="#[5a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_judge_active_a2dp_idx_and_qos
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_bt_cback
<LI><a href="#[5ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_a2dp_stop
<LI><a href="#[51d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_active_hfp_transfer
</UL>

<P><STRONG><a name="[5e7]"></a>app_bt_sniffing_process</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, app_bt_sniffing.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_cback
<LI><a href="#[5e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_roleswitch_handle
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_bt_cback
<LI><a href="#[909]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_resume_sniffing
</UL>

<P><STRONG><a name="[473]"></a>app_bt_sniffing_hfp_connect</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, app_bt_sniffing.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = app_bt_sniffing_hfp_connect &rArr; bt_hfp_audio_connect_req &rArr; hfp_hsp_button_press &rArr; hfp_try_general_at_cmd &rArr; hfp_flush_cmd &rArr; hfp_send_general_at_cmd &rArr; rfc_data_req &rArr; rfc_check_send_credits &rArr; crc8EtsGen
</UL>
<BR>[Calls]<UL><LI><a href="#[68d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_hfp_audio_connect_req
</UL>
<BR>[Called By]<UL><LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_handle_action
<LI><a href="#[470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_handle_sniffing_link_disconnect_event
<LI><a href="#[471]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_timeout_cb
</UL>

<P><STRONG><a name="[3b8]"></a>app_bt_sniffing_param_update</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, app_bt_sniffing.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_gap_handle_new_conn_state_evt
<LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_gap_handle_dev_state_change_evt
<LI><a href="#[3e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_gap_update_sniffing_param
<LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_gap_handle_authen_state_evt
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_cback
<LI><a href="#[5a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_preemptive_judge
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_bt_cback
<LI><a href="#[617]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_judge_resume_a2dp_param
<LI><a href="#[816]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_if_fm_lcis_handle
<LI><a href="#[89b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_link_idle
<LI><a href="#[90a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_legacy_bt_cback
</UL>

<P><STRONG><a name="[691]"></a>app_adp_smart_box_charger_control</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, app_adp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = app_adp_smart_box_charger_control &rArr; adp_wake_up_enable &rArr; System_SetAdpWakeUpFunction
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[692]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_hall_charger_auto_enable
<LI><a href="#[690]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adp_wake_up_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_adp_msg_handler
</UL>

<P><STRONG><a name="[335]"></a>app_adp_get_plug_state</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, app_adp.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_is_in_the_box
<LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_key_check_press
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_key_timeout_cb
<LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_cfg_reset
<LI><a href="#[4c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_boot_up_directly
<LI><a href="#[54c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dlps_enter_callback
</UL>

<P><STRONG><a name="[2e3]"></a>app_adp_detect</STRONG> (Thumb, 152 bytes, Stack size 8 bytes, app_adp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = app_adp_detect &rArr; app_adp_wakeup_pol_set &rArr; adp_wake_up_enable &rArr; System_SetAdpWakeUpFunction
</UL>
<BR>[Calls]<UL><LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_cfg_store
<LI><a href="#[55e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dlps_power_mode_set
<LI><a href="#[68f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adp_get_current_state
<LI><a href="#[68e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_adp_wakeup_pol_set
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_task
</UL>

<P><STRONG><a name="[343]"></a>app_adp_msg_handler</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, app_adp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = app_adp_msg_handler &rArr; app_adp_smart_box_charger_control &rArr; adp_wake_up_enable &rArr; System_SetAdpWakeUpFunction
</UL>
<BR>[Calls]<UL><LI><a href="#[691]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_adp_smart_box_charger_control
</UL>
<BR>[Called By]<UL><LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_io_msg_handler
</UL>

<P><STRONG><a name="[320]"></a>app_adp_init</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, app_adp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = app_adp_init &rArr; adp_wake_up_enable &rArr; System_SetAdpWakeUpFunction
</UL>
<BR>[Calls]<UL><LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pad_TableConfig
<LI><a href="#[690]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adp_wake_up_enable
<LI><a href="#[696]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adp_update_isr_cb
<LI><a href="#[695]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adp_register_state_change_cb
<LI><a href="#[694]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adp_get_level (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;driver_init
</UL>

<P><STRONG><a name="[30c]"></a>app_spp_init</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, app_spp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = app_spp_init &rArr; bt_spp_service_register &rArr; spp_reg_cb &rArr; rfc_reg_cb &rArr; rfc_init
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_mgr_cback_register
<LI><a href="#[69b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_spp_service_register
<LI><a href="#[69a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_spp_init
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[313]"></a>app_cmd_init</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, app_cmd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = app_cmd_init &rArr; bt_mgr_cback_register
</UL>
<BR>[Calls]<UL><LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_mgr_cback_register
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_reg_cb
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[69f]"></a>app_cmd_get_system_capability</STRONG> (Thumb, 188 bytes, Stack size 32 bytes, app_cmd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = app_cmd_get_system_capability &rArr; eq_utils_num_get
</UL>
<BR>[Calls]<UL><LI><a href="#[50c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eq_utils_num_get
</UL>
<BR>[Called By]<UL><LI><a href="#[6a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_cmd_general_cmd_handle
</UL>

<P><STRONG><a name="[4e8]"></a>app_cmd_get_tool_connect_status</STRONG> (Thumb, 86 bytes, Stack size 8 bytes, app_cmd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = app_cmd_get_tool_connect_status
</UL>
<BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_link_policy_ind
</UL>

<P><STRONG><a name="[4e9]"></a>app_cmd_update_eq_ctrl</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, app_cmd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = app_cmd_update_eq_ctrl
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[463]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_relay_async_single_with_raw_msg
</UL>
<BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_link_policy_ind
<LI><a href="#[6a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_cmd_general_cmd_handle
</UL>

<P><STRONG><a name="[6a1]"></a>app_cmd_get_src_version</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, app_cmd.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_cmd_check_src_eq_spec_version
<LI><a href="#[6a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_cmd_check_src_cmd_version
<LI><a href="#[6a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_cmd_general_cmd_handle
</UL>

<P><STRONG><a name="[6a0]"></a>app_cmd_check_src_cmd_version</STRONG> (Thumb, 28 bytes, Stack size 4 bytes, app_cmd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = app_cmd_check_src_cmd_version
</UL>
<BR>[Calls]<UL><LI><a href="#[6a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_cmd_get_src_version
</UL>
<BR>[Called By]<UL><LI><a href="#[6a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_cmd_general_cmd_handle
</UL>

<P><STRONG><a name="[6a2]"></a>app_cmd_check_src_eq_spec_version</STRONG> (Thumb, 32 bytes, Stack size 4 bytes, app_cmd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = app_cmd_check_src_eq_spec_version
</UL>
<BR>[Calls]<UL><LI><a href="#[6a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_cmd_get_src_version
</UL>
<BR>[Called By]<UL><LI><a href="#[6a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_cmd_general_cmd_handle
</UL>

<P><STRONG><a name="[6a3]"></a>app_cmd_bt_cmd_handle</STRONG> (Thumb, 126 bytes, Stack size 40 bytes, app_cmd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 408<LI>Call Chain = app_cmd_bt_cmd_handle &rArr; app_report_event &rArr; app_report_spp_iap_event &rArr; app_transfer_push_data_queue &rArr; app_transfer_pop_data_queue &rArr;  app_transfer_pop_data_queue (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_report_event
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_rand_addr_get
</UL>
<BR>[Called By]<UL><LI><a href="#[698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_cmd_handler
</UL>

<P><STRONG><a name="[698]"></a>app_cmd_handler</STRONG> (Thumb, 694 bytes, Stack size 56 bytes, app_cmd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 2116<LI>Call Chain = app_cmd_handler &rArr; app_cmd_customized_cmd_handle &rArr; app_sass_policy_switch_active_audio_source &rArr; app_bt_policy_disconnect &rArr; app_bt_policy_state_machine &rArr; app_bt_policy_event_handle &rArr;  app_bt_policy_roleswitch_handle (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_report_event
<LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_transfer_queue_recv_ack_check
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_transfer_pop_data_queue
<LI><a href="#[657]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_cmd_handle
<LI><a href="#[6bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_spp_cmd_set_handle
<LI><a href="#[6a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_cmd_bt_cmd_handle
<LI><a href="#[6b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_cmd_customized_cmd_handle
<LI><a href="#[6b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_cmd_other_cmd_handle
<LI><a href="#[6a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_cmd_general_cmd_handle
</UL>
<BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_spp_bt_cback
</UL>

<P><STRONG><a name="[38a]"></a>app_auto_power_off_enable</STRONG> (Thumb, 74 bytes, Stack size 32 bytes, app_auto_power_off.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = app_auto_power_off_enable &rArr; app_start_timer &rArr; remove_timeout_msg_from_list
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_stop_timer
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_start_timer
</UL>
<BR>[Called By]<UL><LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_gap_handle_new_conn_state_evt
<LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_key_check_press
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_bt_cback
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_dm_cback
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_bt_cback
<LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_ota_exit
<LI><a href="#[599]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_update_a2dp_play_status
<LI><a href="#[4be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dlps_enable_auto_poweroff_stop_wdg_timer
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_link_policy_ind
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mp_hci_test_dm_cback
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_sync_cb
<LI><a href="#[8c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_audio_path_reset
<LI><a href="#[8ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_device_sniff
<LI><a href="#[884]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_remove_data_path
<LI><a href="#[94c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_devinfo_set
<LI><a href="#[905]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_shutdown
</UL>

<P><STRONG><a name="[389]"></a>app_auto_power_off_disable</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, app_auto_power_off.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = app_auto_power_off_disable &rArr; app_stop_timer &rArr; remove_timeout_msg_from_list
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_stop_timer
</UL>
<BR>[Called By]<UL><LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_gap_handle_new_conn_state_evt
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_handle_action
<LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_key_check_press
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_bt_cback
<LI><a href="#[599]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_update_a2dp_play_status
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dlps_timeout_cb
<LI><a href="#[4ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dlps_power_off
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_link_policy_ind
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mp_hci_test_dm_cback
<LI><a href="#[62e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_sco_conn_cmpl_handle
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_sync_cb
<LI><a href="#[88e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_setup_data_path
<LI><a href="#[853]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_mgr_bca_mmi_handle
<LI><a href="#[932]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_ble_ota_handle
</UL>

<P><STRONG><a name="[2fd]"></a>app_auto_power_off_init</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, app_auto_power_off.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = app_auto_power_off_init &rArr; sys_mgr_cback_register
</UL>
<BR>[Calls]<UL><LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_mgr_cback_register
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_reg_cb
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[666]"></a>app_dsp_cfg_load_param_r_data</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, app_dsp_cfg.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = app_dsp_cfg_load_param_r_data &rArr; fmc_flash_nor_read
</UL>
<BR>[Calls]<UL><LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_flash_nor_read
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_cur_bank_img_payload_addr_get
</UL>
<BR>[Called By]<UL><LI><a href="#[6c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eq_utils_dsp_param_get
<LI><a href="#[664]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_eq_dsp_param_get
<LI><a href="#[6be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dsp_cfg_gain_table_load
</UL>

<P><STRONG><a name="[33f]"></a>app_dsp_cfg_init</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, app_dsp_cfg.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = app_dsp_cfg_init &rArr; app_dsp_cfg_gain_table_load &rArr; app_dsp_cfg_load_param_r_data &rArr; fmc_flash_nor_read
</UL>
<BR>[Calls]<UL><LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calloc
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_flash_nor_read
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_cur_bank_img_payload_addr_get
<LI><a href="#[6c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dsp_cfg_extensible_param_load
<LI><a href="#[6bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dsp_cfg_eq_param_load
<LI><a href="#[6be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dsp_cfg_gain_table_load
</UL>
<BR>[Called By]<UL><LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_cfg_load
</UL>

<P><STRONG><a name="[6c1]"></a>eq_utils_stage_num_get</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, eq_utils.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[6c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eq_utils_dsp_param_get
</UL>

<P><STRONG><a name="[50c]"></a>eq_utils_num_get</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, eq_utils.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = eq_utils_num_get
</UL>
<BR>[Called By]<UL><LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_handle_action
<LI><a href="#[52c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_eq_index_set
<LI><a href="#[676]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_eq_judge_audio_eq_mode
<LI><a href="#[65f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_eq_mode_get
<LI><a href="#[633]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_eq_idx_check_accord_mode
<LI><a href="#[657]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_cmd_handle
<LI><a href="#[69f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_cmd_get_system_capability
</UL>

<P><STRONG><a name="[665]"></a>eq_utils_map_get</STRONG> (Thumb, 68 bytes, Stack size 56 bytes, eq_utils.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = eq_utils_map_get
</UL>
<BR>[Calls]<UL><LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[6c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eq_utils_map_init
<LI><a href="#[670]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eq_utils_original_eq_index_get
<LI><a href="#[664]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_eq_dsp_param_get
</UL>

<P><STRONG><a name="[670]"></a>eq_utils_original_eq_index_get</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, eq_utils.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = eq_utils_original_eq_index_get &rArr; eq_utils_map_get
</UL>
<BR>[Calls]<UL><LI><a href="#[665]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eq_utils_map_get
</UL>
<BR>[Called By]<UL><LI><a href="#[52b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_eq_play_audio_eq_tone
<LI><a href="#[6c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eq_utils_param_get
</UL>

<P><STRONG><a name="[6c3]"></a>eq_utils_param_get</STRONG> (Thumb, 102 bytes, Stack size 80 bytes, eq_utils.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[6c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eq_utils_dsp_param_get
<LI><a href="#[670]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eq_utils_original_eq_index_get
</UL>

<P><STRONG><a name="[6c4]"></a>eq_utils_get_capacity</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, eq_utils.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = eq_utils_get_capacity &rArr; eq_utils_get_mic_capacity
</UL>
<BR>[Calls]<UL><LI><a href="#[6c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eq_utils_get_mic_capacity
<LI><a href="#[6c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eq_utils_get_spk_capacity
</UL>
<BR>[Called By]<UL><LI><a href="#[6c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eq_utils_map_init
</UL>

<P><STRONG><a name="[338]"></a>eq_utils_get_default_idx</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, eq_utils.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_cfg_reset
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_dm_cback
</UL>

<P><STRONG><a name="[667]"></a>eq_utils_init</STRONG> (Thumb, 114 bytes, Stack size 8 bytes, eq_utils.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = eq_utils_init &rArr; eq_utils_map_init &rArr; eq_utils_map_get
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calloc
<LI><a href="#[6c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eq_utils_map_init
</UL>
<BR>[Called By]<UL><LI><a href="#[645]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_eq_init
</UL>

<P><STRONG><a name="[5db]"></a>app_swift_pair_adv_start</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, app_ble_swift_pair.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = app_swift_pair_adv_start &rArr; ble_ext_adv_mgr_enable &rArr; ble_ext_adv_mgr_start_set_adv_param &rArr; ble_ext_adv_mgr_send_msg &rArr; ble_ext_adv_mgr_find_by_handle
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[435]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[5d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_enter_state
</UL>

<P><STRONG><a name="[5d9]"></a>app_swift_pair_adv_stop</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, app_ble_swift_pair.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = app_swift_pair_adv_stop &rArr; ble_ext_adv_mgr_disable &rArr; ble_ext_adv_mgr_send_msg &rArr; ble_ext_adv_mgr_find_by_handle
</UL>
<BR>[Calls]<UL><LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_swift_pair_handle_power_off
<LI><a href="#[5d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_enter_state
</UL>

<P><STRONG><a name="[6c8]"></a>app_swift_pair_adv_init</STRONG> (Thumb, 276 bytes, Stack size 88 bytes, app_ble_swift_pair.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = app_swift_pair_adv_init &rArr; ble_ext_adv_mgr_init_adv_params &rArr; ble_ext_adv_mgr_init_adv_params_all &rArr; ble_ext_adv_mgr_allocate_adv_handle
</UL>
<BR>[Calls]<UL><LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen (via Veneer)
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[43e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_register_callback
<LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_init_adv_params
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_rand_addr_get
</UL>
<BR>[Called By]<UL><LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_swift_pair_handle_power_on
</UL>

<P><STRONG><a name="[5da]"></a>app_swift_pair_start_adv_change_timer</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, app_ble_swift_pair.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = app_swift_pair_start_adv_change_timer &rArr; app_start_timer &rArr; remove_timeout_msg_from_list
</UL>
<BR>[Calls]<UL><LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_start_timer
</UL>
<BR>[Called By]<UL><LI><a href="#[5d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_enter_state
</UL>

<P><STRONG><a name="[5d8]"></a>app_swift_pair_stop_adv_change_timer</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, app_ble_swift_pair.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = app_swift_pair_stop_adv_change_timer &rArr; app_stop_timer &rArr; remove_timeout_msg_from_list
</UL>
<BR>[Calls]<UL><LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_stop_timer
</UL>
<BR>[Called By]<UL><LI><a href="#[5d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_enter_state
</UL>

<P><STRONG><a name="[40f]"></a>app_swift_pair_handle_power_on</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, app_ble_swift_pair.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = app_swift_pair_handle_power_on &rArr; app_swift_pair_adv_init &rArr; ble_ext_adv_mgr_init_adv_params &rArr; ble_ext_adv_mgr_init_adv_params_all &rArr; ble_ext_adv_mgr_allocate_adv_handle
</UL>
<BR>[Calls]<UL><LI><a href="#[6c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_swift_pair_adv_init
</UL>
<BR>[Called By]<UL><LI><a href="#[40b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_device_handle_power_on
</UL>

<P><STRONG><a name="[415]"></a>app_swift_pair_handle_power_off</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, app_ble_swift_pair.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = app_swift_pair_handle_power_off &rArr; app_swift_pair_adv_stop &rArr; ble_ext_adv_mgr_disable &rArr; ble_ext_adv_mgr_send_msg &rArr; ble_ext_adv_mgr_find_by_handle
</UL>
<BR>[Calls]<UL><LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_stop_timer
<LI><a href="#[5d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_swift_pair_adv_stop
</UL>
<BR>[Called By]<UL><LI><a href="#[410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_device_handle_power_off
</UL>

<P><STRONG><a name="[317]"></a>app_swift_pair_init</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, app_ble_swift_pair.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = app_swift_pair_init &rArr; app_timer_reg_cb
</UL>
<BR>[Calls]<UL><LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_reg_cb
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[4f1]"></a>app_audio_route_dac_gain_set</STRONG> (Thumb, 136 bytes, Stack size 16 bytes, app_audio_route.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = app_audio_route_dac_gain_set
</UL>
<BR>[Called By]<UL><LI><a href="#[4fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_iphone_abs_vol_wrap_audio_track_volume_out_set
<LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_spk_mute_set
<LI><a href="#[657]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_cmd_handle
</UL>

<P><STRONG><a name="[658]"></a>app_audio_route_adc_gain_set</STRONG> (Thumb, 110 bytes, Stack size 16 bytes, app_audio_route.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = app_audio_route_adc_gain_set
</UL>
<BR>[Called By]<UL><LI><a href="#[657]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_cmd_handle
</UL>

<P><STRONG><a name="[644]"></a>app_audio_route_gain_init</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, app_audio_route.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = app_audio_route_gain_init &rArr; audio_route_gain_register
</UL>
<BR>[Calls]<UL><LI><a href="#[6ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_route_gain_register
</UL>
<BR>[Called By]<UL><LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_init
</UL>

<P><STRONG><a name="[4bd]"></a>app_sniff_mode_startup</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, app_sniff_mode.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_dm_cback
</UL>

<P><STRONG><a name="[521]"></a>app_sniff_mode_disable_all</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, app_sniff_mode.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = app_sniff_mode_disable_all &rArr; bt_sniff_mode_disable &rArr; bt_pm_sm &rArr; bt_sniff_mode_exit &rArr; sys_timer_restart &rArr; sys_hp_timer_list_insert &rArr; hw_timer_restart &rArr; hw_timer_safe_stop &rArr; hw_timer_set_div
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_sniff_mode_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_handle_action
</UL>

<P><STRONG><a name="[60f]"></a>app_sniff_mode_b2s_disable</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, app_sniff_mode.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = app_sniff_mode_b2s_disable &rArr; bt_sniff_mode_disable &rArr; bt_pm_sm &rArr; bt_sniff_mode_exit &rArr; sys_timer_restart &rArr; sys_hp_timer_list_insert &rArr; hw_timer_restart &rArr; hw_timer_safe_stop &rArr; hw_timer_set_div
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_find_br_link
<LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_sniff_mode_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_cback
</UL>

<P><STRONG><a name="[5e6]"></a>app_sniff_mode_b2s_enable</STRONG> (Thumb, 100 bytes, Stack size 32 bytes, app_sniff_mode.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = app_sniff_mode_b2s_enable &rArr; bt_sniff_mode_enable &rArr; bt_pm_sm &rArr; bt_sniff_mode_exit &rArr; sys_timer_restart &rArr; sys_hp_timer_list_insert &rArr; hw_timer_restart &rArr; hw_timer_safe_stop &rArr; hw_timer_set_div
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_find_br_link
<LI><a href="#[6cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_sniff_mode_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[5f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_bt_event_pre_handle
<LI><a href="#[5e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_roleswitch_handle
</UL>

<P><STRONG><a name="[499]"></a>app_sniff_mode_b2s_disable_all</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, app_sniff_mode.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = app_sniff_mode_b2s_disable_all &rArr; bt_sniff_mode_disable &rArr; bt_pm_sm &rArr; bt_sniff_mode_exit &rArr; sys_timer_restart &rArr; sys_hp_timer_list_insert &rArr; hw_timer_restart &rArr; hw_timer_safe_stop &rArr; hw_timer_set_div
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_sniff_mode_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_handle_action
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_a2dp_bt_cback
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_cback
<LI><a href="#[5d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_enter_state
<LI><a href="#[4e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_mgr_update_sniff_mask
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_sync_cb
<LI><a href="#[8ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_device_sniff
<LI><a href="#[8e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_handle_bass_msg
<LI><a href="#[899]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_link_connected
<LI><a href="#[853]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_mgr_bca_mmi_handle
<LI><a href="#[932]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_ble_ota_handle
</UL>

<P><STRONG><a name="[49b]"></a>app_sniff_mode_b2s_enable_all</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, app_sniff_mode.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = app_sniff_mode_b2s_enable_all &rArr; bt_sniff_mode_enable &rArr; bt_pm_sm &rArr; bt_sniff_mode_exit &rArr; sys_timer_restart &rArr; sys_hp_timer_list_insert &rArr; hw_timer_restart &rArr; hw_timer_safe_stop &rArr; hw_timer_set_div
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_check_b2s_link_by_id
<LI><a href="#[6cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_sniff_mode_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_a2dp_bt_cback
<LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_ota_exit
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_cback
<LI><a href="#[5d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_enter_state
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_link_policy_ind
<LI><a href="#[8c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_audio_path_reset
<LI><a href="#[8ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_device_sniff
<LI><a href="#[89b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_link_idle
<LI><a href="#[884]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_remove_data_path
</UL>

<P><STRONG><a name="[5fe]"></a>app_sniff_mode_b2s_check_left_flag_when_disconnect</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, app_sniff_mode.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = app_sniff_mode_b2s_check_left_flag_when_disconnect &rArr; app_link_find_br_link
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_find_br_link
</UL>
<BR>[Called By]<UL><LI><a href="#[5f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_bt_event_pre_handle
</UL>

<P><STRONG><a name="[48b]"></a>app_iphone_abs_vol_lv_handle</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, app_iphone_abs_vol_handle.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = app_iphone_abs_vol_lv_handle
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_avrcp_bt_cback
<LI><a href="#[488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_avrcp_abs_vol_set
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_policy_cback
</UL>

<P><STRONG><a name="[48a]"></a>app_iphone_abs_vol_check_a2dp_total_gain_num_16</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, app_iphone_abs_vol_handle.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = app_iphone_abs_vol_check_a2dp_total_gain_num_16
</UL>
<BR>[Calls]<UL><LI><a href="#[65b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_volume_out_max_get
</UL>
<BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_avrcp_bt_cback
<LI><a href="#[488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_avrcp_abs_vol_set
<LI><a href="#[4fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_iphone_abs_vol_wrap_audio_track_volume_out_set
<LI><a href="#[4fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_volume_down
<LI><a href="#[4f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_volume_up
<LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_spk_mute_set
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_policy_cback
</UL>

<P><STRONG><a name="[4fa]"></a>app_iphone_abs_vol_wrap_audio_track_volume_out_set</STRONG> (Thumb, 140 bytes, Stack size 24 bytes, app_iphone_abs_vol_handle.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 688<LI>Call Chain = app_iphone_abs_vol_wrap_audio_track_volume_out_set &rArr; app_harman_lr_balance_set &rArr; audio_volume_balance_set &rArr; audio_mgr_dispatch &rArr; audio_mgr_buffer_event_handle &rArr; audio_buffer_playing_state &rArr; audio_track_restart &rArr; audio_session_state_set &rArr;  audio_mgr_dispatch (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_volume_out_set
<LI><a href="#[48a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_iphone_abs_vol_check_a2dp_total_gain_num_16
<LI><a href="#[486]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_lr_balance_set
<LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_a2dp_get_active_idx
<LI><a href="#[4f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_route_dac_gain_set
</UL>
<BR>[Called By]<UL><LI><a href="#[44d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_vol_set
<LI><a href="#[59f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_a2dp_active_link_set
<LI><a href="#[4fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_volume_down
<LI><a href="#[4f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_volume_up
</UL>

<P><STRONG><a name="[489]"></a>app_iphone_abs_vol_sync_abs_vol</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, app_iphone_abs_vol_handle.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = app_iphone_abs_vol_sync_abs_vol &rArr; app_cfg_store
</UL>
<BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_cfg_store
<LI><a href="#[463]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_relay_async_single_with_raw_msg
</UL>
<BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_avrcp_bt_cback
<LI><a href="#[488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_avrcp_abs_vol_set
</UL>

<P><STRONG><a name="[39e]"></a>rtk_charger_init</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, rtk_charger.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = rtk_charger_init
</UL>
<BR>[Called By]<UL><LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_charger_init
<LI><a href="#[39d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_discharger_init
</UL>

<P><STRONG><a name="[38d]"></a>rtk_charger_get_charge_state</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, rtk_charger.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_charger_get_charge_state
</UL>

<P><STRONG><a name="[39b]"></a>rtk_charger_get_soc</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, rtk_charger.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_charger_get_soc
</UL>

<P><STRONG><a name="[41d]"></a>app_ble_rand_addr_handle_role_decieded</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, app_ble_rand_addr_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = app_ble_rand_addr_handle_role_decieded &rArr; app_cfg_store
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_cfg_store
</UL>
<BR>[Called By]<UL><LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_device_handle_engage_role_decided
</UL>

<P><STRONG><a name="[3d1]"></a>app_ble_rand_addr_get</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, app_ble_rand_addr_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = app_ble_rand_addr_get
</UL>
<BR>[Calls]<UL><LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_gap_handle_new_conn_state_evt
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_common_adv_callback
<LI><a href="#[3f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_common_adv_init
<LI><a href="#[6c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_swift_pair_adv_init
<LI><a href="#[6a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_cmd_bt_cmd_handle
</UL>

<P><STRONG><a name="[43f]"></a>app_ble_rand_addr_cb_reg</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, app_ble_rand_addr_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = app_ble_rand_addr_cb_reg &rArr; calloc
</UL>
<BR>[Calls]<UL><LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calloc
</UL>
<BR>[Called By]<UL><LI><a href="#[3f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_common_adv_init
</UL>

<P><STRONG><a name="[3fa]"></a>app_ble_rand_addr_init</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, app_ble_rand_addr_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = app_ble_rand_addr_init &rArr; app_cfg_store
</UL>
<BR>[Calls]<UL><LI><a href="#[6cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_gen_rand_addr
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_cfg_store
</UL>
<BR>[Called By]<UL><LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_gap_init
</UL>

<P><STRONG><a name="[36f]"></a>app_roleswap_ctrl_get_status</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, app_roleswap_control.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_batt_level_report
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_key_execute_action
<LI><a href="#[46c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_set_bud_stream_state
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_link_policy_ind
</UL>

<P><STRONG><a name="[396]"></a>app_roleswap_ctrl_check</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, app_roleswap_control.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_gap_handle_new_conn_state_evt
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_charger_handle_soc
<LI><a href="#[485]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_avrcp_stop_abs_vol_check_timer
<LI><a href="#[44f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_set_call_status
<LI><a href="#[89b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_link_idle
</UL>

<P><STRONG><a name="[2f6]"></a>app_ipc_init</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, app_ipc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = app_ipc_init
</UL>
<BR>[Calls]<UL><LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[4b3]"></a>app_ipc_publish</STRONG> (Thumb, 94 bytes, Stack size 24 bytes, app_ipc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = app_ipc_publish
</UL>
<BR>[Calls]<UL><LI><a href="#[6cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[4c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_bt_and_ble_ready_check
<LI><a href="#[4ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_factory_reset
</UL>

<P><STRONG><a name="[38b]"></a>app_ipc_subscribe</STRONG> (Thumb, 156 bytes, Stack size 32 bytes, app_ipc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = app_ipc_subscribe
</UL>
<BR>[Calls]<UL><LI><a href="#[6cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_key_init
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_init
<LI><a href="#[645]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_eq_init
</UL>

<P><STRONG><a name="[3fd]"></a>app_ble_key_derive_init</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, app_ble_sc_key_derive.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = app_ble_key_derive_init
</UL>
<BR>[Calls]<UL><LI><a href="#[6ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_bond_cfg_local_key_distribute
<LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_set_param
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_gap_init
</UL>

<P><STRONG><a name="[3ef]"></a>app_ble_whitelist_set_operation_state</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, app_ble_whitelist.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_gap_cb
</UL>

<P><STRONG><a name="[6cf]"></a>app_ble_whitelist_modify</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, app_ble_whitelist.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = app_ble_whitelist_modify &rArr; ble_scan_resume &rArr; ble_scan_check_state &rArr; scan_start
</UL>
<BR>[Calls]<UL><LI><a href="#[6d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_modify_white_list
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calloc
<LI><a href="#[6d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_scan_resume
<LI><a href="#[6d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_scan_pause
</UL>
<BR>[Called By]<UL><LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_whitelist_handle_pending_operation
</UL>

<P><STRONG><a name="[3f0]"></a>app_ble_whitelist_handle_pending_operation</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, app_ble_whitelist.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = app_ble_whitelist_handle_pending_operation &rArr; app_ble_whitelist_modify &rArr; ble_scan_resume &rArr; ble_scan_check_state &rArr; scan_start
</UL>
<BR>[Calls]<UL><LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[6cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_whitelist_modify
</UL>
<BR>[Called By]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_gap_cb
</UL>

<P><STRONG><a name="[3fb]"></a>app_ble_whitelist_init</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, app_ble_whitelist.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_gap_init
</UL>

<P><STRONG><a name="[6d3]"></a>app_vendor_set_adv_extend_misc</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, app_vendor.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = app_vendor_set_adv_extend_misc &rArr; gap_vendor_cmd_req
</UL>
<BR>[Calls]<UL><LI><a href="#[532]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_vendor_cmd_req
</UL>
<BR>[Called By]<UL><LI><a href="#[720]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_adv_start
</UL>

<P><STRONG><a name="[6d4]"></a>app_vendor_send_psd_policy</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, app_vendor.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = app_vendor_send_psd_policy &rArr; gap_vendor_cmd_req
</UL>
<BR>[Calls]<UL><LI><a href="#[532]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_vendor_cmd_req
</UL>
<BR>[Called By]<UL><LI><a href="#[89b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_link_idle
</UL>

<P><STRONG><a name="[627]"></a>app_sidetone_attach</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, app_sidetone.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = app_sidetone_attach &rArr; sidetone_create &rArr; audio_effect_inheritor_set
</UL>
<BR>[Calls]<UL><LI><a href="#[6d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sidetone_enable
<LI><a href="#[6d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sidetone_create
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_effect_attach
</UL>
<BR>[Called By]<UL><LI><a href="#[663]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_set_sidetone_instance
<LI><a href="#[657]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_cmd_handle
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_policy_cback
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_audio_cback
</UL>

<P><STRONG><a name="[629]"></a>app_sidetone_detach</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, app_sidetone.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = app_sidetone_detach &rArr; audio_track_effect_detach &rArr; audio_effect_owner_set
</UL>
<BR>[Calls]<UL><LI><a href="#[47a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sidetone_release
<LI><a href="#[479]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sidetone_disable
<LI><a href="#[6d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_effect_detach
</UL>
<BR>[Called By]<UL><LI><a href="#[663]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_set_sidetone_instance
<LI><a href="#[657]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_cmd_handle
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_bt_cback
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_policy_cback
<LI><a href="#[897]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_free_link
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_audio_cback
<LI><a href="#[883]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_ase_ctrl
<LI><a href="#[87d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_release_ascs_action
</UL>

<P><STRONG><a name="[626]"></a>app_nrec_attach</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, app_nrec.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = app_nrec_attach &rArr; nrec_create &rArr; audio_effect_inheritor_set
</UL>
<BR>[Calls]<UL><LI><a href="#[6d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrec_enable
<LI><a href="#[6da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrec_disable
<LI><a href="#[6d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrec_create
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_effect_attach
</UL>
<BR>[Called By]<UL><LI><a href="#[62e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_sco_conn_cmpl_handle
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_policy_cback
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_audio_cback
</UL>

<P><STRONG><a name="[628]"></a>app_nrec_detach</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, app_nrec.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = app_nrec_detach &rArr; audio_track_effect_detach &rArr; audio_effect_owner_set
</UL>
<BR>[Calls]<UL><LI><a href="#[6db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrec_release
<LI><a href="#[6da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrec_disable
<LI><a href="#[6d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_effect_detach
</UL>
<BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_bt_cback
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_policy_cback
<LI><a href="#[897]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_free_link
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_audio_cback
<LI><a href="#[883]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_ase_ctrl
<LI><a href="#[87d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_release_ascs_action
</UL>

<P><STRONG><a name="[1335]"></a>app_ext_charger_vbat_is_normal_set</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, app_ext_charger.o(.text), UNUSED)

<P><STRONG><a name="[96c]"></a>app_ext_charger_vbat_is_normal_get</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, app_ext_charger.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_adc_update_cur_ntc_value
</UL>

<P><STRONG><a name="[240]"></a>app_ext_charger_no_charge_handler</STRONG> (Thumb, 118 bytes, Stack size 16 bytes, app_ext_charger.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = app_ext_charger_no_charge_handler &rArr; app_harman_usb_connector_adp_in_handle &rArr; app_harman_usb_adc_io_read &rArr; Pad_Config &rArr; flash_cur_bank_img_payload_addr_get
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_adc_io_read
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dlps_disable (via Veneer)
<LI><a href="#[6ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_usb_connector_adp_in_handle
<LI><a href="#[6ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_adc_adp_in_handle
<LI><a href="#[6ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ext_charger_handle_adp_out
<LI><a href="#[6ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ext_charger_enable
<LI><a href="#[6e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ext_charger_check_ntc_threshold
<LI><a href="#[6e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ext_charger_current_speed_set
<LI><a href="#[68f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adp_get_current_state
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_ext_charger.o(.data)
</UL>
<P><STRONG><a name="[23d]"></a>app_ext_charger_charging_handler</STRONG> (Thumb, 214 bytes, Stack size 40 bytes, app_ext_charger.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = app_ext_charger_charging_handler &rArr; app_ext_charger_handle_adp_out &rArr; app_harman_adc_adp_out_handle &rArr; app_harman_discharger_ntc_timer_start &rArr; app_harman_adc_io_read &rArr; Pad_Config &rArr; flash_cur_bank_img_payload_addr_get
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_adc_ntc_check_timer_start
<LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_adc_io_read
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_get_input_level
<LI><a href="#[6ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ext_charger_handle_adp_out
<LI><a href="#[6eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ext_charger_disable
<LI><a href="#[6e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ext_charger_check_ntc_threshold
<LI><a href="#[6e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ext_charger_current_speed_set
<LI><a href="#[68f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adp_get_current_state
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_ext_charger.o(.data)
</UL>
<P><STRONG><a name="[23e]"></a>app_ext_charger_charging_finish_handler</STRONG> (Thumb, 84 bytes, Stack size 24 bytes, app_ext_charger.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = app_ext_charger_charging_finish_handler &rArr; app_ext_charger_handle_adp_out &rArr; app_harman_adc_adp_out_handle &rArr; app_harman_discharger_ntc_timer_start &rArr; app_harman_adc_io_read &rArr; Pad_Config &rArr; flash_cur_bank_img_payload_addr_get
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_adc_io_read
<LI><a href="#[6f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_adc_voltage_battery_get
<LI><a href="#[6ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ext_charger_handle_adp_out
<LI><a href="#[6ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ext_charger_enable
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_ext_charger.o(.data)
</UL>
<P><STRONG><a name="[23f]"></a>app_ext_charger_charging_error_handler</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, app_ext_charger.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = app_ext_charger_charging_error_handler &rArr; app_ext_charger_handle_adp_out &rArr; app_harman_adc_adp_out_handle &rArr; app_harman_discharger_ntc_timer_start &rArr; app_harman_adc_io_read &rArr; Pad_Config &rArr; flash_cur_bank_img_payload_addr_get
</UL>
<BR>[Calls]<UL><LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_adc_io_read
<LI><a href="#[6ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ext_charger_handle_adp_out
<LI><a href="#[6e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ext_charger_check_ntc_threshold
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_ext_charger.o(.data)
</UL>
<P><STRONG><a name="[6f4]"></a>app_ext_charger_ntc_check_timeout</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, app_ext_charger.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = app_ext_charger_ntc_check_timeout &rArr; app_ext_charger_state_machine &rArr; app_ext_charger_update_charger_state &rArr; app_charger_state_cb &rArr; app_io_msg_send
</UL>
<BR>[Calls]<UL><LI><a href="#[6f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ext_charger_state_machine
</UL>
<BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_adc_timeout_cb
</UL>

<P><STRONG><a name="[554]"></a>app_ext_charger_handle_enter_dlps</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, app_ext_charger.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = app_ext_charger_handle_enter_dlps &rArr; app_dlps_set_pad_wake_up &rArr; Pad_TableConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_get_input_level
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dlps_set_pad_wake_up
</UL>
<BR>[Called By]<UL><LI><a href="#[54c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dlps_enter_callback
</UL>

<P><STRONG><a name="[556]"></a>app_ext_charger_handle_exit_dlps</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, app_ext_charger.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = app_ext_charger_handle_exit_dlps &rArr; app_dlps_restore_pad &rArr; Pad_TableConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[55f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dlps_restore_pad
</UL>
<BR>[Called By]<UL><LI><a href="#[555]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dlps_exit_callback
</UL>

<P><STRONG><a name="[6f5]"></a>app_ext_charger_check_status</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, app_ext_charger.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = app_ext_charger_check_status &rArr; adp_get_current_state
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ext_charger_check_support
<LI><a href="#[6f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dlps_get_dlps_bitmap (via Veneer)
<LI><a href="#[68f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adp_get_current_state
</UL>
<BR>[Called By]<UL><LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_adc_msg_handle
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_adc_timeout_cb
</UL>

<P><STRONG><a name="[6f7]"></a>app_ext_charger_ntc_adc_update</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, app_ext_charger.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = app_ext_charger_ntc_adc_update &rArr; app_ext_charger_state_machine &rArr; app_ext_charger_update_charger_state &rArr; app_charger_state_cb &rArr; app_io_msg_send
</UL>
<BR>[Calls]<UL><LI><a href="#[6f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ext_charger_state_machine
</UL>
<BR>[Called By]<UL><LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_usb_connector_adc_update
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_adc_msg_handle
</UL>

<P><STRONG><a name="[348]"></a>app_ext_charger_handle_io_msg</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, app_ext_charger.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = app_ext_charger_handle_io_msg &rArr; app_ext_charger_state_machine &rArr; app_ext_charger_update_charger_state &rArr; app_charger_state_cb &rArr; app_io_msg_send
</UL>
<BR>[Calls]<UL><LI><a href="#[6f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ext_charger_state_machine
<LI><a href="#[68f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adp_get_current_state
</UL>
<BR>[Called By]<UL><LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_io_msg_handler
</UL>

<P><STRONG><a name="[324]"></a>app_ext_charger_init</STRONG> (Thumb, 188 bytes, Stack size 24 bytes, app_ext_charger.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = app_ext_charger_init &rArr; app_harman_usb_connector_protect_init &rArr; hal_gpio_init_pin &rArr; hal_gpio_init &rArr; hal_gpio_int_init &rArr; RamVectorTableUpdate &rArr; RamVectorTableUpdate_for_xip_isr
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pad_Config (via Veneer)
<LI><a href="#[39d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_discharger_init
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_set_up_irq
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_register_isr_callback
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_irq_enable
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_init_pin
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pad_TableConfig
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_mgr_cback_register
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_reg_cb
<LI><a href="#[563]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;power_check_cb_register
<LI><a href="#[6f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_usb_connector_protect_init
<LI><a href="#[6dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ext_charger_cfg_load
<LI><a href="#[695]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adp_register_state_change_cb
</UL>
<BR>[Called By]<UL><LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;driver_init
</UL>

<P><STRONG><a name="[306]"></a>app_bt_point_init</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, app_bt_point.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[5cf]"></a>app_bt_point_is_empty</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, app_bt_point.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_stable_sched
</UL>

<P><STRONG><a name="[543]"></a>app_bt_point_is_full</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, app_bt_point.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_point_link_permission_check
<LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_point_link_num_changed
<LI><a href="#[5e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_judge_dedicated_enter_pairing_mode
<LI><a href="#[5dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_prepare_for_dedicated_enter_pairing_mode
<LI><a href="#[5ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_stable_sched
<LI><a href="#[542]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_is_b2s_link_num_full
</UL>

<P><STRONG><a name="[5c3]"></a>app_bt_point_num_get</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, app_bt_point.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_b2s_connected_is_empty
<LI><a href="#[5c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_b2s_connected_is_over
</UL>

<P><STRONG><a name="[1336]"></a>app_bt_point_br_link_is_empty</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, app_bt_point.o(.text), UNUSED)

<P><STRONG><a name="[5d2]"></a>app_bt_point_br_link_is_full</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, app_bt_point.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[60a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_state_afe_linkback_event_handle
<LI><a href="#[5e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_judge_dedicated_enter_pairing_mode
<LI><a href="#[5d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_enter_state
<LI><a href="#[5d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_linkback_run
<LI><a href="#[5ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_stable_sched
</UL>

<P><STRONG><a name="[541]"></a>app_bt_point_br_link_num_get</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, app_bt_point.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_get_b2s_link_num
<LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_get_connected_src_num
<LI><a href="#[609]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_connected
<LI><a href="#[602]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_event_handle
<LI><a href="#[5f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_bt_event_pre_handle
<LI><a href="#[5ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_shutdown_step_handle
<LI><a href="#[5d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_enter_state
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_b2s_connected_del_node
<LI><a href="#[542]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_is_b2s_link_num_full
</UL>

<P><STRONG><a name="[546]"></a>app_bt_point_br_link_num_set</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, app_bt_point.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[545]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_set_b2s_link_num
</UL>

<P><STRONG><a name="[53b]"></a>app_bt_point_br_link_sco_num_get</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, app_bt_point.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_get_sco_conn_num
</UL>

<P><STRONG><a name="[1337]"></a>app_bt_point_le_link_is_empty</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, app_bt_point.o(.text), UNUSED)

<P><STRONG><a name="[806]"></a>app_bt_point_le_link_is_full</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, app_bt_point.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[804]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_adv_linkback_check
</UL>

<P><STRONG><a name="[3c4]"></a>app_bt_point_le_link_num_get</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, app_bt_point.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_gap_handle_new_conn_state_evt
<LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_get_le_link_num
</UL>

<P><STRONG><a name="[1338]"></a>app_bt_point_lea_link_is_empty</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, app_bt_point.o(.text), UNUSED)

<P><STRONG><a name="[544]"></a>app_bt_point_lea_link_is_full</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, app_bt_point.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_judge_dedicated_enter_pairing_mode
<LI><a href="#[5ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_stable_sched
<LI><a href="#[542]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_is_b2s_link_num_full
<LI><a href="#[720]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_adv_start
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_adv_timeout_cb
<LI><a href="#[89b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_link_idle
<LI><a href="#[908]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_legacy_link_status
</UL>

<P><STRONG><a name="[540]"></a>app_bt_point_lea_link_num_get</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, app_bt_point.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_get_lea_link_num
<LI><a href="#[804]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_adv_linkback_check
</UL>

<P><STRONG><a name="[6fc]"></a>app_bt_point_search</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, app_bt_point.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = app_bt_point_search
</UL>
<BR>[Calls]<UL><LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[3de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_point_link_tone_set
<LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_point_link_tone_get
<LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_point_link_permission_check
<LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_point_link_num_changed
</UL>

<P><STRONG><a name="[1339]"></a>app_bt_point_br_link_get</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, app_bt_point.o(.text), UNUSED)

<P><STRONG><a name="[133a]"></a>app_bt_point_le_link_get</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, app_bt_point.o(.text), UNUSED)

<P><STRONG><a name="[3dc]"></a>app_bt_point_link_permission_check</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, app_bt_point.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = app_bt_point_link_permission_check &rArr; app_bt_point_search
</UL>
<BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[543]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_point_is_full
<LI><a href="#[6fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_point_search
</UL>
<BR>[Called By]<UL><LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_gap_handle_authen_state_evt
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_cback
</UL>

<P><STRONG><a name="[3de]"></a>app_bt_point_link_tone_set</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, app_bt_point.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = app_bt_point_link_tone_set &rArr; app_bt_point_search
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[6fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_point_search
</UL>
<BR>[Called By]<UL><LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_gap_handle_authen_state_evt
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_b2s_connected_del_node
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_link_policy_ind
<LI><a href="#[89b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_link_idle
<LI><a href="#[896]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_handle_le_disconnect
</UL>

<P><STRONG><a name="[3dd]"></a>app_bt_point_link_tone_get</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, app_bt_point.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = app_bt_point_link_tone_get &rArr; app_bt_point_search
</UL>
<BR>[Calls]<UL><LI><a href="#[6fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_point_search
</UL>
<BR>[Called By]<UL><LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_gap_handle_authen_state_evt
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_link_policy_ind
<LI><a href="#[89b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_link_idle
</UL>

<P><STRONG><a name="[3c3]"></a>app_bt_point_link_num_changed</STRONG> (Thumb, 644 bytes, Stack size 56 bytes, app_bt_point.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = app_bt_point_link_num_changed &rArr; app_link_find_br_link
</UL>
<BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_find_br_link
<LI><a href="#[46d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_find_le_link_by_addr
<LI><a href="#[543]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_point_is_full
<LI><a href="#[6fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_count_num
<LI><a href="#[6ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_count_num
<LI><a href="#[6fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_point_search
<LI><a href="#[6fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_point_alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_gap_handle_new_conn_state_evt
<LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_gap_handle_authen_state_evt
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_cback
<LI><a href="#[5f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_bt_event_pre_handle
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_b2s_connected_del_node
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_sync_cb
<LI><a href="#[89b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_link_idle
<LI><a href="#[896]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_handle_le_disconnect
<LI><a href="#[88e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_setup_data_path
<LI><a href="#[884]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_remove_data_path
</UL>

<P><STRONG><a name="[706]"></a>mp_hci_send_msg</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, single_tone.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = mp_hci_send_msg
</UL>
<BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mp_test_handle_hci_cb
</UL>

<P><STRONG><a name="[531]"></a>dut_test_start_auto_power_off_timer</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, single_tone.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = dut_test_start_auto_power_off_timer &rArr; app_start_timer &rArr; remove_timeout_msg_from_list
</UL>
<BR>[Calls]<UL><LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_start_timer
</UL>
<BR>[Called By]<UL><LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_handle_action
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mp_hci_test_dm_cback
</UL>

<P><STRONG><a name="[708]"></a>mp_hci_handle_msg</STRONG> (Thumb, 140 bytes, Stack size 32 bytes, single_tone.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = mp_hci_handle_msg &rArr; dut_hci_cmd_reset
</UL>
<BR>[Calls]<UL><LI><a href="#[701]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_if_write
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[700]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dut_hci_cmd_reset
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mp_hci_test_task
</UL>

<P><STRONG><a name="[70a]"></a>mp_hci_test_deinit</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, single_tone.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = mp_hci_test_deinit &rArr; sys_mgr_cback_unregister
</UL>
<BR>[Calls]<UL><LI><a href="#[70b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_mgr_cback_unregister
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mp_hci_test_dm_cback
</UL>

<P><STRONG><a name="[375]"></a>mp_hci_test_mmi_handle_action</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, single_tone.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 584<LI>Call Chain = mp_hci_test_mmi_handle_action &rArr; app_audio_tone_type_play &rArr; voice_prompt_play &rArr; notification_push &rArr; notification_play &rArr; notification_path_start &rArr; notification_start_vp &rArr; audio_path_start &rArr; audio_path_schedule &rArr; audio_path_voice_start &rArr; dsp_mgr_session_enable &rArr; dsp_state_machine &rArr; dsp_power_on &rArr; dsp_hal_reset &rArr; shm_enable &rArr; h2d_cmd_send &rArr; shm_cmd_send &rArr; wr_queue_send
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_tone_type_play
<LI><a href="#[520]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_mgr_power_on
<LI><a href="#[525]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_mgr_power_off
</UL>
<BR>[Called By]<UL><LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_handle_action
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_key_execute_action
</UL>

<P><STRONG><a name="[301]"></a>mp_hci_test_init</STRONG> (Thumb, 92 bytes, Stack size 24 bytes, single_tone.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = mp_hci_test_init &rArr; sys_mgr_cback_register
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_mgr_cback_register
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_reg_cb
<LI><a href="#[47c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_mgr_cback_register
<LI><a href="#[4bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;power_mode_set
<LI><a href="#[70c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;single_tone_test_init
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[374]"></a>mp_hci_test_mode_is_running</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, single_tone.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_handle_action
<LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_discharger_ntc_check_valid
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_key_execute_action
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_key_hybrid_click
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_bt_cback
</UL>

<P><STRONG><a name="[4b6]"></a>mp_hci_test_set_mode</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, single_tone.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_handle_action
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_dm_cback
</UL>

<P><STRONG><a name="[530]"></a>mp_hci_test_auto_enter_dut_init</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, single_tone.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = mp_hci_test_auto_enter_dut_init &rArr; audio_mgr_cback_register
</UL>
<BR>[Calls]<UL><LI><a href="#[47c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_mgr_cback_register
</UL>
<BR>[Called By]<UL><LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_handle_action
</UL>

<P><STRONG><a name="[70d]"></a>app_gfps_update_announcement</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, app_gfps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = app_gfps_update_announcement &rArr; ble_ext_adv_mgr_set_scan_response_data &rArr; ble_ext_adv_mgr_start_set_adv_param &rArr; ble_ext_adv_mgr_send_msg &rArr; ble_ext_adv_mgr_find_by_handle
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[437]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_set_scan_response_data
</UL>
<BR>[Called By]<UL><LI><a href="#[809]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_adv_set_ext_data
</UL>

<P><STRONG><a name="[70e]"></a>app_gfps_cb_handle_additional_passkey</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, app_gfps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = app_gfps_cb_handle_additional_passkey
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[463]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_relay_async_single_with_raw_msg
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_cb
</UL>

<P><STRONG><a name="[70f]"></a>app_gfps_cb_handle_additional_data</STRONG> (Thumb, 64 bytes, Stack size 32 bytes, app_gfps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = app_gfps_cb_handle_additional_data &rArr; app_gfps_personalized_name_remote_sync &rArr; app_gfps_personalized_name_read
</UL>
<BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[710]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_personalized_name_store
<LI><a href="#[711]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_personalized_name_remote_sync
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_cb
</UL>

<P><STRONG><a name="[712]"></a>app_gfps_adv_start</STRONG> (Thumb, 230 bytes, Stack size 48 bytes, app_gfps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1020<LI>Call Chain = app_gfps_adv_start &rArr; gfps_gen_adv_data &rArr; gfps_sass_get_encrypt_conn_status &rArr; sha256_hkdf &rArr; hmac_sha256_crypt &rArr; hmac_sha256_finish &rArr; mbedtls_sha256_update &rArr; mbedtls_sha256_update_ret &rArr; mbedtls_internal_sha256_process
</UL>
<BR>[Calls]<UL><LI><a href="#[6cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_gen_rand_addr
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[42f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_set_random
<LI><a href="#[435]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_enable
<LI><a href="#[718]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_get_pairing_status
<LI><a href="#[715]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_gen_adv_data
<LI><a href="#[717]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_set_multi_param
<LI><a href="#[716]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_change_own_address_type
<LI><a href="#[713]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_timer_stop_update_rpa
<LI><a href="#[714]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_timer_start_update_rpa
<LI><a href="#[719]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_msg_update_ble_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[71a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_next_action
</UL>

<P><STRONG><a name="[71a]"></a>app_gfps_next_action</STRONG> (Thumb, 110 bytes, Stack size 32 bytes, app_gfps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1068<LI>Call Chain = app_gfps_next_action &rArr; app_gfps_battery_info_report &rArr; app_gfps_battery_set_info &rArr; gfps_gen_adv_data &rArr; gfps_sass_get_encrypt_conn_status &rArr; sha256_hkdf &rArr; hmac_sha256_crypt &rArr; hmac_sha256_finish &rArr; mbedtls_sha256_update &rArr; mbedtls_sha256_update_ret &rArr; mbedtls_internal_sha256_process
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_disable
<LI><a href="#[71b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_link_find_gfps_link
<LI><a href="#[71c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_link_disconnect_all_gfps_link
<LI><a href="#[71d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_battery_info_report
<LI><a href="#[712]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_adv_start
</UL>
<BR>[Called By]<UL><LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_force_enter_pairing_mode
<LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_le_device_adv_start
<LI><a href="#[40e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_device_handle_power_on
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_device_handle_power_off
<LI><a href="#[724]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_device_check_state
<LI><a href="#[747]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_enter_nondiscoverable_mode
</UL>

<P><STRONG><a name="[419]"></a>app_gfps_le_device_adv_start</STRONG> (Thumb, 130 bytes, Stack size 24 bytes, app_gfps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1092<LI>Call Chain = app_gfps_le_device_adv_start &rArr; app_gfps_next_action &rArr; app_gfps_battery_info_report &rArr; app_gfps_battery_set_info &rArr; gfps_gen_adv_data &rArr; gfps_sass_get_encrypt_conn_status &rArr; sha256_hkdf &rArr; hmac_sha256_crypt &rArr; hmac_sha256_finish &rArr; mbedtls_sha256_update &rArr; mbedtls_sha256_update_ret &rArr; mbedtls_internal_sha256_process
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[71e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_le_get_device_mode
<LI><a href="#[720]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_adv_start
<LI><a href="#[71b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_link_find_gfps_link
<LI><a href="#[71c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_link_disconnect_all_gfps_link
<LI><a href="#[71f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_account_key_get_table
<LI><a href="#[71a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_next_action
</UL>
<BR>[Called By]<UL><LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_handle_action
<LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_force_enter_pairing_mode
<LI><a href="#[40e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_device_handle_power_on
<LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_device_handle_enter_pair_mode
<LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_linkback_info_init
<LI><a href="#[4e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_device_handle_b2s_link_disconnected
<LI><a href="#[743]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_device_handle_ble_link_disconnected
<LI><a href="#[751]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_adv_update_conn_status
<LI><a href="#[729]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_cb_handle_passkey
<LI><a href="#[721]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_cb_handle_accountkey
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_adv_callback
</UL>

<P><STRONG><a name="[721]"></a>app_gfps_cb_handle_accountkey</STRONG> (Thumb, 190 bytes, Stack size 32 bytes, app_gfps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1132<LI>Call Chain = app_gfps_cb_handle_accountkey &rArr; app_gfps_device_check_state &rArr; app_gfps_enter_nondiscoverable_mode &rArr; app_gfps_next_action &rArr; app_gfps_battery_info_report &rArr; app_gfps_battery_set_info &rArr; gfps_gen_adv_data &rArr; gfps_sass_get_encrypt_conn_status &rArr; sha256_hkdf &rArr; hmac_sha256_crypt &rArr; hmac_sha256_finish &rArr; mbedtls_sha256_update &rArr; mbedtls_sha256_update_ret &rArr; mbedtls_internal_sha256_process
</UL>
<BR>[Calls]<UL><LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_set_param
<LI><a href="#[725]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_set_pairable_mode
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_le_device_adv_start
<LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_find_le_link_by_conn_id
<LI><a href="#[71e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_le_get_device_mode
<LI><a href="#[720]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_adv_start
<LI><a href="#[724]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_device_check_state
<LI><a href="#[722]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_account_key_store
<LI><a href="#[723]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_account_key_remote_add
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_cb
</UL>

<P><STRONG><a name="[726]"></a>app_gfps_send_legacy_bond_confirm</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, app_gfps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = app_gfps_send_legacy_bond_confirm &rArr; gfps_send_passkey &rArr; gatt_svc_send_data &rArr; gatt_svc_send_data_in_queue &rArr; calloc
</UL>
<BR>[Calls]<UL><LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_br_user_cfm_req_cfm
<LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_find_le_link_by_conn_id
<LI><a href="#[727]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_send_passkey
</UL>
<BR>[Called By]<UL><LI><a href="#[3b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_handle_bt_user_confirm
<LI><a href="#[729]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_cb_handle_passkey
</UL>

<P><STRONG><a name="[728]"></a>app_gfps_send_le_bond_confirm</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, app_gfps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = app_gfps_send_le_bond_confirm &rArr; gfps_send_passkey &rArr; gatt_svc_send_data &rArr; gatt_svc_send_data_in_queue &rArr; calloc
</UL>
<BR>[Calls]<UL><LI><a href="#[3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_bond_user_confirm
<LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_find_le_link_by_conn_id
<LI><a href="#[727]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_send_passkey
</UL>
<BR>[Called By]<UL><LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_handle_ble_user_confirm
<LI><a href="#[729]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_cb_handle_passkey
</UL>

<P><STRONG><a name="[729]"></a>app_gfps_cb_handle_passkey</STRONG> (Thumb, 288 bytes, Stack size 32 bytes, app_gfps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1124<LI>Call Chain = app_gfps_cb_handle_passkey &rArr; app_gfps_le_device_adv_start &rArr; app_gfps_next_action &rArr; app_gfps_battery_info_report &rArr; app_gfps_battery_set_info &rArr; gfps_gen_adv_data &rArr; gfps_sass_get_encrypt_conn_status &rArr; sha256_hkdf &rArr; hmac_sha256_crypt &rArr; hmac_sha256_finish &rArr; mbedtls_sha256_update &rArr; mbedtls_sha256_update_ret &rArr; mbedtls_internal_sha256_process
</UL>
<BR>[Calls]<UL><LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_set_param
<LI><a href="#[725]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_set_pairable_mode
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[463]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_relay_async_single_with_raw_msg
<LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_le_device_adv_start
<LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_find_le_link_by_conn_id
<LI><a href="#[71e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_le_get_device_mode
<LI><a href="#[718]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_get_pairing_status
<LI><a href="#[728]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_send_le_bond_confirm
<LI><a href="#[726]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_send_legacy_bond_confirm
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_cb
</UL>

<P><STRONG><a name="[72a]"></a>app_gfps_cb_handle_action_req</STRONG> (Thumb, 78 bytes, Stack size 32 bytes, app_gfps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = app_gfps_cb_handle_action_req
</UL>
<BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_cb
</UL>

<P><STRONG><a name="[384]"></a>app_gfps_force_enter_pairing_mode</STRONG> (Thumb, 106 bytes, Stack size 24 bytes, app_gfps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1116<LI>Call Chain = app_gfps_force_enter_pairing_mode &rArr; app_gfps_le_device_adv_start &rArr; app_gfps_next_action &rArr; app_gfps_battery_info_report &rArr; app_gfps_battery_set_info &rArr; gfps_gen_adv_data &rArr; gfps_sass_get_encrypt_conn_status &rArr; sha256_hkdf &rArr; hmac_sha256_crypt &rArr; hmac_sha256_finish &rArr; mbedtls_sha256_update &rArr; mbedtls_sha256_update_ret &rArr; mbedtls_internal_sha256_process
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_le_device_adv_start
<LI><a href="#[71a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_next_action
</UL>
<BR>[Called By]<UL><LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_handle_action
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_key_timeout_cb
<LI><a href="#[743]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_device_handle_ble_link_disconnected
<LI><a href="#[72b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_ble_conn_info_init
</UL>

<P><STRONG><a name="[72b]"></a>app_gfps_ble_conn_info_init</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, app_gfps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1124<LI>Call Chain = app_gfps_ble_conn_info_init &rArr; app_gfps_force_enter_pairing_mode &rArr; app_gfps_le_device_adv_start &rArr; app_gfps_next_action &rArr; app_gfps_battery_info_report &rArr; app_gfps_battery_set_info &rArr; gfps_gen_adv_data &rArr; gfps_sass_get_encrypt_conn_status &rArr; sha256_hkdf &rArr; hmac_sha256_crypt &rArr; hmac_sha256_finish &rArr; mbedtls_sha256_update &rArr; mbedtls_sha256_update_ret &rArr; mbedtls_internal_sha256_process
</UL>
<BR>[Calls]<UL><LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_force_enter_pairing_mode
<LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_find_le_link_by_conn_id
<LI><a href="#[72c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_link_add_link_into_priority_queue
</UL>
<BR>[Called By]<UL><LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_linkback_info_init
<LI><a href="#[72d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_cb_handle_kbp_write_req
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_adv_callback
</UL>

<P><STRONG><a name="[72d]"></a>app_gfps_cb_handle_kbp_write_req</STRONG> (Thumb, 416 bytes, Stack size 72 bytes, app_gfps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1196<LI>Call Chain = app_gfps_cb_handle_kbp_write_req &rArr; app_gfps_ble_conn_info_init &rArr; app_gfps_force_enter_pairing_mode &rArr; app_gfps_le_device_adv_start &rArr; app_gfps_next_action &rArr; app_gfps_battery_info_report &rArr; app_gfps_battery_set_info &rArr; gfps_gen_adv_data &rArr; gfps_sass_get_encrypt_conn_status &rArr; sha256_hkdf &rArr; hmac_sha256_crypt &rArr; hmac_sha256_finish &rArr; mbedtls_sha256_update &rArr; mbedtls_sha256_update_ret &rArr; mbedtls_internal_sha256_process
</UL>
<BR>[Calls]<UL><LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_get_param
<LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_set_param
<LI><a href="#[725]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_set_pairable_mode
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_get_b2s_link_num
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_get_call_status
<LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_find_le_link_by_conn_id
<LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_enter_pairing_mode
<LI><a href="#[72e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_br_pairing_req
<LI><a href="#[72f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_personalized_name_send
<LI><a href="#[72b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_ble_conn_info_init
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_cb
</UL>

<P><STRONG><a name="[68b]"></a>app_gfps_init</STRONG> (Thumb, 282 bytes, Stack size 24 bytes, app_gfps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1044<LI>Call Chain = app_gfps_init &rArr; app_gfps_battery_info_init &rArr; app_gfps_battery_set_info &rArr; gfps_gen_adv_data &rArr; gfps_sass_get_encrypt_conn_status &rArr; sha256_hkdf &rArr; hmac_sha256_crypt &rArr; hmac_sha256_finish &rArr; mbedtls_sha256_update &rArr; mbedtls_sha256_update_ret &rArr; mbedtls_internal_sha256_process
</UL>
<BR>[Calls]<UL><LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_bond_set_param
<LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_get_param
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[736]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_set_tx_power
<LI><a href="#[735]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_set_sass_enable
<LI><a href="#[734]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_set_finder_enable
<LI><a href="#[731]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_sass_conn_status_init
<LI><a href="#[73b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_le_device_init
<LI><a href="#[733]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_init
<LI><a href="#[739]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_ecc_manager_malloc
<LI><a href="#[738]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_add_service
<LI><a href="#[73d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_timer_init
<LI><a href="#[73c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_psm_init
<LI><a href="#[732]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_personalized_name_init
<LI><a href="#[73a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_link_priority_queue_init
<LI><a href="#[737]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_battery_info_init
<LI><a href="#[730]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_account_key_init
</UL>
<BR>[Called By]<UL><LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_third_party_srv_init
</UL>

<P><STRONG><a name="[76f]"></a>app_gfps_get_random_addr</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, app_gfps.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[774]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_finder_send_eddystone_capability
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_rfc_cback
<LI><a href="#[719]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_msg_update_ble_addr
<LI><a href="#[7db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_psm_msg_coc_conn_callback
</UL>

<P><STRONG><a name="[73e]"></a>app_gfps_adv_update_adv_interval</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, app_gfps.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[73f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_change_adv_interval
</UL>

<P><STRONG><a name="[409]"></a>app_gfps_update_rpa</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, app_gfps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = app_gfps_update_rpa &rArr; app_gfps_msg_update_ble_addr &rArr; bt_gfps_send_ble_addr &rArr; bt_gfps_send_data &rArr; bt_rfc_data_send &rArr; rfc_data_req &rArr; rfc_check_send_credits &rArr; crc8EtsGen
</UL>
<BR>[Calls]<UL><LI><a href="#[6cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_gen_rand_addr
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[42f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_set_random
<LI><a href="#[719]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_msg_update_ble_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[407]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_device_irk_handle_power_on
<LI><a href="#[7f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_timer_timeout_cb
</UL>

<P><STRONG><a name="[3f1]"></a>app_gfps_ble_conn_info_handle</STRONG> (Thumb, 132 bytes, Stack size 40 bytes, app_gfps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = app_gfps_ble_conn_info_handle &rArr; bt_le_resolve_random_address &rArr; bt_le_find_entry_by_aes &rArr; bt_le_resolve_local_rpa
</UL>
<BR>[Calls]<UL><LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_le_resolve_random_address
<LI><a href="#[71b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_link_find_gfps_link
<LI><a href="#[71f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_account_key_get_table
</UL>
<BR>[Called By]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_gap_cb
</UL>

<P><STRONG><a name="[3cd]"></a>app_gfps_linkback_info_init</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, app_gfps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1132<LI>Call Chain = app_gfps_linkback_info_init &rArr; app_gfps_ble_conn_info_init &rArr; app_gfps_force_enter_pairing_mode &rArr; app_gfps_le_device_adv_start &rArr; app_gfps_next_action &rArr; app_gfps_battery_info_report &rArr; app_gfps_battery_set_info &rArr; gfps_gen_adv_data &rArr; gfps_sass_get_encrypt_conn_status &rArr; sha256_hkdf &rArr; hmac_sha256_crypt &rArr; hmac_sha256_finish &rArr; mbedtls_sha256_update &rArr; mbedtls_sha256_update_ret &rArr; mbedtls_internal_sha256_process
</UL>
<BR>[Calls]<UL><LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_le_device_adv_start
<LI><a href="#[71f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_account_key_get_table
<LI><a href="#[72b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_ble_conn_info_init
</UL>
<BR>[Called By]<UL><LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_gap_handle_new_conn_state_evt
</UL>

<P><STRONG><a name="[4c8]"></a>app_gfps_adv_init</STRONG> (Thumb, 176 bytes, Stack size 88 bytes, app_gfps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = app_gfps_adv_init &rArr; ble_ext_adv_mgr_init_adv_params &rArr; ble_ext_adv_mgr_init_adv_params_all &rArr; ble_ext_adv_mgr_allocate_adv_handle
</UL>
<BR>[Calls]<UL><LI><a href="#[6cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_gen_rand_addr
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[43e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_register_callback
<LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_init_adv_params
<LI><a href="#[71e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_le_get_device_mode
</UL>
<BR>[Called By]<UL><LI><a href="#[4c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_bt_and_ble_ready_check
</UL>

<P><STRONG><a name="[3b3]"></a>app_gfps_handle_bt_user_confirm</STRONG> (Thumb, 162 bytes, Stack size 32 bytes, app_gfps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = app_gfps_handle_bt_user_confirm &rArr; app_gfps_send_legacy_bond_confirm &rArr; gfps_send_passkey &rArr; gatt_svc_send_data &rArr; gatt_svc_send_data_in_queue &rArr; calloc
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_br_user_cfm_req_cfm
<LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_find_le_link_by_conn_id
<LI><a href="#[726]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_send_legacy_bond_confirm
</UL>
<BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gap_bt_cback
</UL>

<P><STRONG><a name="[3e6]"></a>app_gfps_handle_ble_user_confirm</STRONG> (Thumb, 94 bytes, Stack size 32 bytes, app_gfps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = app_gfps_handle_ble_user_confirm &rArr; app_gfps_send_le_bond_confirm &rArr; gfps_send_passkey &rArr; gatt_svc_send_data &rArr; gatt_svc_send_data_in_queue &rArr; calloc
</UL>
<BR>[Calls]<UL><LI><a href="#[3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_bond_user_confirm
<LI><a href="#[744]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_bond_get_display_key
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_find_le_link_by_conn_id
<LI><a href="#[728]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_send_le_bond_confirm
</UL>
<BR>[Called By]<UL><LI><a href="#[3e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_gap_handle_numerical_comparison_bond_cfm
</UL>

<P><STRONG><a name="[745]"></a>app_gfps_sec_handle_additional_io_cap</STRONG> (Thumb, 138 bytes, Stack size 32 bytes, app_gfps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = app_gfps_sec_handle_additional_io_cap
</UL>
<BR>[Calls]<UL><LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_set_param
<LI><a href="#[725]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_set_pairable_mode
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_handle_additional_ble_user_confirm
</UL>

<P><STRONG><a name="[3e7]"></a>app_gfps_handle_additional_ble_user_confirm</STRONG> (Thumb, 88 bytes, Stack size 24 bytes, app_gfps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = app_gfps_handle_additional_ble_user_confirm &rArr; app_gfps_sec_handle_additional_io_cap
</UL>
<BR>[Calls]<UL><LI><a href="#[3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_bond_user_confirm
<LI><a href="#[744]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_bond_get_display_key
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[745]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_sec_handle_additional_io_cap
</UL>
<BR>[Called By]<UL><LI><a href="#[3e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_gap_handle_numerical_comparison_bond_cfm
</UL>

<P><STRONG><a name="[746]"></a>app_gfps_set_ble_conn_param</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, app_gfps.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[3d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_set_prefer_conn_param
</UL>

<P><STRONG><a name="[747]"></a>app_gfps_enter_nondiscoverable_mode</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, app_gfps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1076<LI>Call Chain = app_gfps_enter_nondiscoverable_mode &rArr; app_gfps_next_action &rArr; app_gfps_battery_info_report &rArr; app_gfps_battery_set_info &rArr; gfps_gen_adv_data &rArr; gfps_sass_get_encrypt_conn_status &rArr; sha256_hkdf &rArr; hmac_sha256_crypt &rArr; hmac_sha256_finish &rArr; mbedtls_sha256_update &rArr; mbedtls_sha256_update_ret &rArr; mbedtls_internal_sha256_process
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[71a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_next_action
</UL>
<BR>[Called By]<UL><LI><a href="#[724]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_device_check_state
</UL>

<P><STRONG><a name="[41f]"></a>app_gfps_handle_b2s_connected</STRONG> (Thumb, 152 bytes, Stack size 48 bytes, app_gfps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = app_gfps_handle_b2s_connected &rArr; app_gfps_account_key_store
</UL>
<BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_find_le_link_by_conn_id
<LI><a href="#[748]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_get_subsequent_pairing_account_key
<LI><a href="#[722]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_account_key_store
<LI><a href="#[723]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_account_key_remote_add
</UL>
<BR>[Called By]<UL><LI><a href="#[41e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_device_handle_b2s_bt_connected
</UL>

<P><STRONG><a name="[749]"></a>app_gfps_gen_conn_status</STRONG> (Thumb, 166 bytes, Stack size 48 bytes, app_gfps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = app_gfps_gen_conn_status &rArr; app_sass_policy_get_connection_state &rArr; app_link_find_br_link
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_get_btmode
<LI><a href="#[74a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_get_active_idx
<LI><a href="#[74b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sass_policy_get_connection_state
<LI><a href="#[74d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sass_policy_get_conn_bit_map
<LI><a href="#[74c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sass_get_available_connection_num
</UL>
<BR>[Called By]<UL><LI><a href="#[758]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_msg_notify_connection_status
<LI><a href="#[74e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_adv_check_sass_conn_status
</UL>

<P><STRONG><a name="[74e]"></a>app_gfps_adv_check_sass_conn_status</STRONG> (Thumb, 104 bytes, Stack size 16 bytes, app_gfps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 988<LI>Call Chain = app_gfps_adv_check_sass_conn_status &rArr; gfps_gen_adv_data &rArr; gfps_sass_get_encrypt_conn_status &rArr; sha256_hkdf &rArr; hmac_sha256_crypt &rArr; hmac_sha256_finish &rArr; mbedtls_sha256_update &rArr; mbedtls_sha256_update_ret &rArr; mbedtls_internal_sha256_process
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_set_adv_data
<LI><a href="#[750]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_sass_set_conn_status
<LI><a href="#[74f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_sass_get_conn_status
<LI><a href="#[715]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_gen_adv_data
<LI><a href="#[749]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_gen_conn_status
</UL>
<BR>[Called By]<UL><LI><a href="#[724]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_device_check_state
<LI><a href="#[751]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_adv_update_conn_status
</UL>

<P><STRONG><a name="[751]"></a>app_gfps_adv_update_conn_status</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, app_gfps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1108<LI>Call Chain = app_gfps_adv_update_conn_status &rArr; app_gfps_device_check_state &rArr; app_gfps_enter_nondiscoverable_mode &rArr; app_gfps_next_action &rArr; app_gfps_battery_info_report &rArr; app_gfps_battery_set_info &rArr; gfps_gen_adv_data &rArr; gfps_sass_get_encrypt_conn_status &rArr; sha256_hkdf &rArr; hmac_sha256_crypt &rArr; hmac_sha256_finish &rArr; mbedtls_sha256_update &rArr; mbedtls_sha256_update_ret &rArr; mbedtls_internal_sha256_process
</UL>
<BR>[Calls]<UL><LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_le_device_adv_start
<LI><a href="#[724]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_device_check_state
<LI><a href="#[74e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_adv_check_sass_conn_status
</UL>
<BR>[Called By]<UL><LI><a href="#[59c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_notify_conn_status
</UL>

<P><STRONG><a name="[752]"></a>app_gfps_check_inuse_account_key</STRONG> (Thumb, 600 bytes, Stack size 56 bytes, app_gfps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = app_gfps_check_inuse_account_key &rArr; mtc_get_active_idx &rArr; app_lea_uca_get_active_link &rArr; app_link_find_le_link_by_conn_handle
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_get_b2s_link_num
<LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_check_b2s_link_by_id
<LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_get_lea_link_num
<LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_get_le_link_num
<LI><a href="#[5c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_find_inacitve
<LI><a href="#[755]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_get_active_idx
<LI><a href="#[756]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_set_most_recently_inuse_account_key_index
<LI><a href="#[757]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_set_inuse_account_key_index
<LI><a href="#[754]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_get_recently_inuse_account_key_index
<LI><a href="#[753]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_get_inuse_account_key_index
</UL>
<BR>[Called By]<UL><LI><a href="#[59c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_notify_conn_status
</UL>

<P><STRONG><a name="[59c]"></a>app_gfps_notify_conn_status</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, app_gfps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1116<LI>Call Chain = app_gfps_notify_conn_status &rArr; app_gfps_adv_update_conn_status &rArr; app_gfps_device_check_state &rArr; app_gfps_enter_nondiscoverable_mode &rArr; app_gfps_next_action &rArr; app_gfps_battery_info_report &rArr; app_gfps_battery_set_info &rArr; gfps_gen_adv_data &rArr; gfps_sass_get_encrypt_conn_status &rArr; sha256_hkdf &rArr; hmac_sha256_crypt &rArr; hmac_sha256_finish &rArr; mbedtls_sha256_update &rArr; mbedtls_sha256_update_ret &rArr; mbedtls_internal_sha256_process
</UL>
<BR>[Calls]<UL><LI><a href="#[758]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_msg_notify_connection_status
<LI><a href="#[752]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_check_inuse_account_key
<LI><a href="#[751]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_adv_update_conn_status
</UL>
<BR>[Called By]<UL><LI><a href="#[470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_handle_sniffing_link_disconnect_event
<LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sass_handle_le_dm
<LI><a href="#[5a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_preemptive_judge
<LI><a href="#[59b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_set_active_idx
<LI><a href="#[4e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_set_avrcp_status
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_rfc_cback
<LI><a href="#[81f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_ccp_update_call_status
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sass_policy_bt_cback
<LI><a href="#[7db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_psm_msg_coc_conn_callback
<LI><a href="#[7d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sass_policy_set_capability
<LI><a href="#[7d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_msg_handle_data_transfer
<LI><a href="#[89f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_handle_ascs_msg
<LI><a href="#[893]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_adjust_active_handle_by_connection
<LI><a href="#[88e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_setup_data_path
<LI><a href="#[879]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_handle_mcp_state
<LI><a href="#[8f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_set_btmode
</UL>

<P><STRONG><a name="[730]"></a>app_gfps_account_key_init</STRONG> (Thumb, 210 bytes, Stack size 40 bytes, app_gfps_account_key.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = app_gfps_account_key_init &rArr; calloc
</UL>
<BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calloc
<LI><a href="#[759]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_account_key_init
</UL>
<BR>[Called By]<UL><LI><a href="#[68b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_init
</UL>

<P><STRONG><a name="[71f]"></a>app_gfps_account_key_get_table</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, app_gfps_account_key.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_le_device_adv_start
<LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_linkback_info_init
<LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_ble_conn_info_handle
</UL>

<P><STRONG><a name="[722]"></a>app_gfps_account_key_store</STRONG> (Thumb, 298 bytes, Stack size 48 bytes, app_gfps_account_key.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = app_gfps_account_key_store
</UL>
<BR>[Calls]<UL><LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[41f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_handle_b2s_connected
<LI><a href="#[721]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_cb_handle_accountkey
</UL>

<P><STRONG><a name="[75a]"></a>app_gfps_account_key_clear</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, app_gfps_account_key.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = app_gfps_account_key_clear
</UL>
<BR>[Calls]<UL><LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_device_handle_factory_reset
</UL>

<P><STRONG><a name="[723]"></a>app_gfps_account_key_remote_add</STRONG> (Thumb, 64 bytes, Stack size 40 bytes, app_gfps_account_key.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = app_gfps_account_key_remote_add
</UL>
<BR>[Calls]<UL><LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[463]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_relay_async_single_with_raw_msg
</UL>
<BR>[Called By]<UL><LI><a href="#[41f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_handle_b2s_connected
<LI><a href="#[721]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_cb_handle_accountkey
</UL>

<P><STRONG><a name="[75b]"></a>app_gfps_account_key_verify_mac</STRONG> (Thumb, 226 bytes, Stack size 72 bytes, app_gfps_account_key.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = app_gfps_account_key_verify_mac &rArr; bt_gfps_generate_mac &rArr; gfps_xor
</UL>
<BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_find_br_link
<LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_find_le_link_by_conn_id
<LI><a href="#[75c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_get_highest_priority_device
<LI><a href="#[75d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_gfps_generate_mac
<LI><a href="#[753]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_get_inuse_account_key_index
</UL>
<BR>[Called By]<UL><LI><a href="#[7d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_msg_handle_data_transfer
</UL>

<P><STRONG><a name="[75e]"></a>app_gfps_account_key_find_inuse_account_key</STRONG> (Thumb, 320 bytes, Stack size 96 bytes, app_gfps_account_key.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 400<LI>Call Chain = app_gfps_account_key_find_inuse_account_key &rArr; bt_gfps_generate_mac &rArr; gfps_xor
</UL>
<BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_find_br_link
<LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_find_le_link_by_conn_id
<LI><a href="#[75d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_gfps_generate_mac
</UL>
<BR>[Called By]<UL><LI><a href="#[7d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_msg_handle_data_transfer
</UL>

<P><STRONG><a name="[75f]"></a>app_gfps_account_key_save_ownerkey_valid</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, app_gfps_account_key.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = app_gfps_account_key_save_ownerkey_valid
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[799]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_finder_cb
</UL>

<P><STRONG><a name="[724]"></a>app_gfps_device_check_state</STRONG> (Thumb, 116 bytes, Stack size 24 bytes, app_gfps_device.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1100<LI>Call Chain = app_gfps_device_check_state &rArr; app_gfps_enter_nondiscoverable_mode &rArr; app_gfps_next_action &rArr; app_gfps_battery_info_report &rArr; app_gfps_battery_set_info &rArr; gfps_gen_adv_data &rArr; gfps_sass_get_encrypt_conn_status &rArr; sha256_hkdf &rArr; hmac_sha256_crypt &rArr; hmac_sha256_finish &rArr; mbedtls_sha256_update &rArr; mbedtls_sha256_update_ret &rArr; mbedtls_internal_sha256_process
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_get_b2s_link_num
<LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_get_radio_mode
<LI><a href="#[71c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_link_disconnect_all_gfps_link
<LI><a href="#[760]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_finder_enter_beacon_state
<LI><a href="#[74e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_adv_check_sass_conn_status
<LI><a href="#[747]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_enter_nondiscoverable_mode
<LI><a href="#[71a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_next_action
</UL>
<BR>[Called By]<UL><LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_device_handle_radio_mode
<LI><a href="#[40e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_device_handle_power_on
<LI><a href="#[4e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_device_handle_b2s_link_disconnected
<LI><a href="#[743]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_device_handle_ble_link_disconnected
<LI><a href="#[751]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_adv_update_conn_status
<LI><a href="#[721]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_cb_handle_accountkey
</UL>

<P><STRONG><a name="[414]"></a>app_gfps_device_handle_power_off</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, app_gfps_device.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1084<LI>Call Chain = app_gfps_device_handle_power_off &rArr; app_gfps_next_action &rArr; app_gfps_battery_info_report &rArr; app_gfps_battery_set_info &rArr; gfps_gen_adv_data &rArr; gfps_sass_get_encrypt_conn_status &rArr; sha256_hkdf &rArr; hmac_sha256_crypt &rArr; hmac_sha256_finish &rArr; mbedtls_sha256_update &rArr; mbedtls_sha256_update_ret &rArr; mbedtls_internal_sha256_process
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_cfg_store
<LI><a href="#[761]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_finder_handle_power_off
<LI><a href="#[754]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_get_recently_inuse_account_key_index
<LI><a href="#[753]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_get_inuse_account_key_index
<LI><a href="#[71c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_link_disconnect_all_gfps_link
<LI><a href="#[71a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_next_action
</UL>
<BR>[Called By]<UL><LI><a href="#[410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_device_handle_power_off
</UL>

<P><STRONG><a name="[40e]"></a>app_gfps_device_handle_power_on</STRONG> (Thumb, 160 bytes, Stack size 24 bytes, app_gfps_device.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1124<LI>Call Chain = app_gfps_device_handle_power_on &rArr; app_gfps_device_check_state &rArr; app_gfps_enter_nondiscoverable_mode &rArr; app_gfps_next_action &rArr; app_gfps_battery_info_report &rArr; app_gfps_battery_set_info &rArr; gfps_gen_adv_data &rArr; gfps_sass_get_encrypt_conn_status &rArr; sha256_hkdf &rArr; hmac_sha256_crypt &rArr; hmac_sha256_finish &rArr; mbedtls_sha256_update &rArr; mbedtls_sha256_update_ret &rArr; mbedtls_internal_sha256_process
</UL>
<BR>[Calls]<UL><LI><a href="#[6ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_bond_cfg_local_key_distribute
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_le_device_adv_start
<LI><a href="#[593]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bond_b2s_num_get
<LI><a href="#[765]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_set_identity_address
<LI><a href="#[766]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_psm_rsp_data_set
<LI><a href="#[764]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_adv_update_adv_interval
<LI><a href="#[763]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_finder_set_ring_param
<LI><a href="#[756]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_set_most_recently_inuse_account_key_index
<LI><a href="#[760]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_finder_enter_beacon_state
<LI><a href="#[724]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_device_check_state
<LI><a href="#[762]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_battery_show_ui
<LI><a href="#[71a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_next_action
</UL>
<BR>[Called By]<UL><LI><a href="#[40b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_device_handle_power_on
</UL>

<P><STRONG><a name="[417]"></a>app_gfps_device_handle_radio_mode</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, app_gfps_device.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1108<LI>Call Chain = app_gfps_device_handle_radio_mode &rArr; app_gfps_device_check_state &rArr; app_gfps_enter_nondiscoverable_mode &rArr; app_gfps_next_action &rArr; app_gfps_battery_info_report &rArr; app_gfps_battery_set_info &rArr; gfps_gen_adv_data &rArr; gfps_sass_get_encrypt_conn_status &rArr; sha256_hkdf &rArr; hmac_sha256_crypt &rArr; hmac_sha256_finish &rArr; mbedtls_sha256_update &rArr; mbedtls_sha256_update_ret &rArr; mbedtls_internal_sha256_process
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[724]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_device_check_state
</UL>
<BR>[Called By]<UL><LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_device_handle_radio_mode
</UL>

<P><STRONG><a name="[4e3]"></a>app_gfps_device_handle_b2s_link_disconnected</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, app_gfps_device.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1108<LI>Call Chain = app_gfps_device_handle_b2s_link_disconnected &rArr; app_gfps_device_check_state &rArr; app_gfps_enter_nondiscoverable_mode &rArr; app_gfps_next_action &rArr; app_gfps_battery_info_report &rArr; app_gfps_battery_set_info &rArr; gfps_gen_adv_data &rArr; gfps_sass_get_encrypt_conn_status &rArr; sha256_hkdf &rArr; hmac_sha256_crypt &rArr; hmac_sha256_finish &rArr; mbedtls_sha256_update &rArr; mbedtls_sha256_update_ret &rArr; mbedtls_internal_sha256_process
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_le_device_adv_start
<LI><a href="#[724]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_device_check_state
</UL>
<BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_link_policy_ind
</UL>

<P><STRONG><a name="[743]"></a>app_gfps_device_handle_ble_link_disconnected</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, app_gfps_device.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1132<LI>Call Chain = app_gfps_device_handle_ble_link_disconnected &rArr; app_gfps_force_enter_pairing_mode &rArr; app_gfps_le_device_adv_start &rArr; app_gfps_next_action &rArr; app_gfps_battery_info_report &rArr; app_gfps_battery_set_info &rArr; gfps_gen_adv_data &rArr; gfps_sass_get_encrypt_conn_status &rArr; sha256_hkdf &rArr; hmac_sha256_crypt &rArr; hmac_sha256_finish &rArr; mbedtls_sha256_update &rArr; mbedtls_sha256_update_ret &rArr; mbedtls_internal_sha256_process
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_force_enter_pairing_mode
<LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_le_device_adv_start
<LI><a href="#[724]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_device_check_state
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_le_disconnect_cb
</UL>

<P><STRONG><a name="[3db]"></a>app_gfps_device_handle_b2s_ble_bonded</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, app_gfps_device.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = app_gfps_device_handle_b2s_ble_bonded &rArr; app_link_find_le_link_by_conn_id
</UL>
<BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_find_le_link_by_conn_id
<LI><a href="#[767]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_set_pairing_status
</UL>
<BR>[Called By]<UL><LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_gap_handle_authen_state_evt
</UL>

<P><STRONG><a name="[404]"></a>app_gfps_device_handle_factory_reset</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, app_gfps_device.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = app_gfps_device_handle_factory_reset &rArr; app_gfps_finder_handle_factory_reset
</UL>
<BR>[Calls]<UL><LI><a href="#[768]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_personalized_name_clear
<LI><a href="#[769]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_finder_handle_factory_reset
<LI><a href="#[75a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_account_key_clear
</UL>
<BR>[Called By]<UL><LI><a href="#[402]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_device_handle_factory_reset
</UL>

<P><STRONG><a name="[76a]"></a>app_gfps_personalized_name_set_default</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, app_gfps_personalized_name.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[768]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_personalized_name_clear
<LI><a href="#[732]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_personalized_name_init
</UL>

<P><STRONG><a name="[732]"></a>app_gfps_personalized_name_init</STRONG> (Thumb, 94 bytes, Stack size 16 bytes, app_gfps_personalized_name.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = app_gfps_personalized_name_init &rArr; calloc
</UL>
<BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calloc
<LI><a href="#[76a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_personalized_name_set_default
</UL>
<BR>[Called By]<UL><LI><a href="#[68b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_init
</UL>

<P><STRONG><a name="[710]"></a>app_gfps_personalized_name_store</STRONG> (Thumb, 166 bytes, Stack size 32 bytes, app_gfps_personalized_name.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = app_gfps_personalized_name_store
</UL>
<BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[70f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_cb_handle_additional_data
</UL>

<P><STRONG><a name="[76b]"></a>app_gfps_personalized_name_read</STRONG> (Thumb, 86 bytes, Stack size 32 bytes, app_gfps_personalized_name.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = app_gfps_personalized_name_read
</UL>
<BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[72f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_personalized_name_send
<LI><a href="#[711]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_personalized_name_remote_sync
</UL>

<P><STRONG><a name="[72f]"></a>app_gfps_personalized_name_send</STRONG> (Thumb, 72 bytes, Stack size 80 bytes, app_gfps_personalized_name.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 440<LI>Call Chain = app_gfps_personalized_name_send &rArr; gfps_send_personalized_name &rArr; gfps_encode_additional_packet &rArr; gfps_hmac_sha256 &rArr; gfps_xor
</UL>
<BR>[Calls]<UL><LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[76c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_send_personalized_name
<LI><a href="#[76b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_personalized_name_read
</UL>
<BR>[Called By]<UL><LI><a href="#[72d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_cb_handle_kbp_write_req
</UL>

<P><STRONG><a name="[768]"></a>app_gfps_personalized_name_clear</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, app_gfps_personalized_name.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[76a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_personalized_name_set_default
</UL>
<BR>[Called By]<UL><LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_device_handle_factory_reset
</UL>

<P><STRONG><a name="[711]"></a>app_gfps_personalized_name_remote_sync</STRONG> (Thumb, 52 bytes, Stack size 72 bytes, app_gfps_personalized_name.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = app_gfps_personalized_name_remote_sync &rArr; app_gfps_personalized_name_read
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[463]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_relay_async_single_with_raw_msg
<LI><a href="#[76b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_personalized_name_read
</UL>
<BR>[Called By]<UL><LI><a href="#[70f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_cb_handle_additional_data
</UL>

<P><STRONG><a name="[4e]"></a>app_gfps_rfc_cback</STRONG> (Thumb, 394 bytes, Stack size 48 bytes, app_gfps_rfc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 2236<LI>Call Chain = app_gfps_rfc_cback &rArr; app_gfps_msg_loop_check_data_complete &rArr;  app_gfps_msg_loop_check_data_complete (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_find_br_link
<LI><a href="#[463]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_relay_async_single_with_raw_msg
<LI><a href="#[59c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_notify_conn_status
<LI><a href="#[777]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_rfc_credits_give
<LI><a href="#[76e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_gfps_send_model_id
<LI><a href="#[772]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_gfps_send_firmware_revision
<LI><a href="#[771]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_gfps_send_ble_addr
<LI><a href="#[76d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_gfps_connect_cfm
<LI><a href="#[776]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_msg_set_ring_state
<LI><a href="#[775]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_msg_ring_stop
<LI><a href="#[770]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_msg_reverse_data
<LI><a href="#[773]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_msg_report_session_nonce
<LI><a href="#[778]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_msg_loop_check_data_complete
<LI><a href="#[774]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_finder_send_eddystone_capability
<LI><a href="#[71d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_battery_info_report
<LI><a href="#[76f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_get_random_addr
<LI><a href="#[67a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_msg_prof_disconn
<LI><a href="#[679]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_msg_prof_conn
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_gfps_msg.o(.text)
</UL>
<P><STRONG><a name="[34b]"></a>app_ecc_handle_msg</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, app_ecc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 560<LI>Call Chain = app_ecc_handle_msg &rArr; gfps_handle_pending_char_kbp &rArr; gfps_handle_char_kbp &rArr; gfps_gen_aes_key &rArr; gfps_gen_ecdh_key &rArr; ecdh_shared_secret_enhanced &rArr; ecc_sub_proc &rArr; ecc_send_io_msg
</UL>
<BR>[Calls]<UL><LI><a href="#[77a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_handle_pending_char_kbp
<LI><a href="#[779]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ecc_sub_proc
</UL>
<BR>[Called By]<UL><LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_io_msg_handler
</UL>

<P><STRONG><a name="[77b]"></a>app_gfps_battery_set_info</STRONG> (Thumb, 136 bytes, Stack size 16 bytes, app_gfps_battery.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 988<LI>Call Chain = app_gfps_battery_set_info &rArr; gfps_gen_adv_data &rArr; gfps_sass_get_encrypt_conn_status &rArr; sha256_hkdf &rArr; hmac_sha256_crypt &rArr; hmac_sha256_finish &rArr; mbedtls_sha256_update &rArr; mbedtls_sha256_update_ret &rArr; mbedtls_internal_sha256_process
</UL>
<BR>[Calls]<UL><LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_set_adv_data
<LI><a href="#[77c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_set_battery_info
<LI><a href="#[715]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_gen_adv_data
</UL>
<BR>[Called By]<UL><LI><a href="#[762]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_battery_show_ui
<LI><a href="#[71d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_battery_info_report
<LI><a href="#[737]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_battery_info_init
</UL>

<P><STRONG><a name="[77d]"></a>app_gfps_battery_rfc_update</STRONG> (Thumb, 78 bytes, Stack size 24 bytes, app_gfps_battery.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = app_gfps_battery_rfc_update &rArr; bt_gfps_updated_battery &rArr; bt_gfps_send_data &rArr; bt_rfc_data_send &rArr; rfc_data_req &rArr; rfc_check_send_credits &rArr; crc8EtsGen
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[77e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_gfps_updated_battery
</UL>
<BR>[Called By]<UL><LI><a href="#[71d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_battery_info_report
</UL>

<P><STRONG><a name="[77f]"></a>app_gfps_battery_le_l2cap_update</STRONG> (Thumb, 98 bytes, Stack size 32 bytes, app_gfps_battery.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = app_gfps_battery_le_l2cap_update &rArr; bt_gfps_updated_battery &rArr; bt_gfps_send_data &rArr; bt_rfc_data_send &rArr; rfc_data_req &rArr; rfc_check_send_credits &rArr; crc8EtsGen
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[77e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_gfps_updated_battery
</UL>
<BR>[Called By]<UL><LI><a href="#[71d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_battery_info_report
</UL>

<P><STRONG><a name="[780]"></a>app_gfps_battery_get_info</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, app_gfps_battery.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[762]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_battery_show_ui
<LI><a href="#[71d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_battery_info_report
<LI><a href="#[737]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_battery_info_init
</UL>

<P><STRONG><a name="[71d]"></a>app_gfps_battery_info_report</STRONG> (Thumb, 372 bytes, Stack size 48 bytes, app_gfps_battery.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1036<LI>Call Chain = app_gfps_battery_info_report &rArr; app_gfps_battery_set_info &rArr; gfps_gen_adv_data &rArr; gfps_sass_get_encrypt_conn_status &rArr; sha256_hkdf &rArr; hmac_sha256_crypt &rArr; hmac_sha256_finish &rArr; mbedtls_sha256_update &rArr; mbedtls_sha256_update_ret &rArr; mbedtls_internal_sha256_process
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_charger_get_charge_state
<LI><a href="#[780]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_battery_get_info
<LI><a href="#[77f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_battery_le_l2cap_update
<LI><a href="#[77d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_battery_rfc_update
<LI><a href="#[77b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_battery_set_info
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_rfc_cback
<LI><a href="#[71a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_next_action
<LI><a href="#[7db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_psm_msg_coc_conn_callback
</UL>

<P><STRONG><a name="[762]"></a>app_gfps_battery_show_ui</STRONG> (Thumb, 48 bytes, Stack size 40 bytes, app_gfps_battery.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1028<LI>Call Chain = app_gfps_battery_show_ui &rArr; app_gfps_battery_set_info &rArr; gfps_gen_adv_data &rArr; gfps_sass_get_encrypt_conn_status &rArr; sha256_hkdf &rArr; hmac_sha256_crypt &rArr; hmac_sha256_finish &rArr; mbedtls_sha256_update &rArr; mbedtls_sha256_update_ret &rArr; mbedtls_internal_sha256_process
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[780]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_battery_get_info
<LI><a href="#[77b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_battery_set_info
</UL>
<BR>[Called By]<UL><LI><a href="#[40e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_device_handle_power_on
</UL>

<P><STRONG><a name="[737]"></a>app_gfps_battery_info_init</STRONG> (Thumb, 86 bytes, Stack size 32 bytes, app_gfps_battery.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1020<LI>Call Chain = app_gfps_battery_info_init &rArr; app_gfps_battery_set_info &rArr; gfps_gen_adv_data &rArr; gfps_sass_get_encrypt_conn_status &rArr; sha256_hkdf &rArr; hmac_sha256_crypt &rArr; hmac_sha256_finish &rArr; mbedtls_sha256_update &rArr; mbedtls_sha256_update_ret &rArr; mbedtls_internal_sha256_process
</UL>
<BR>[Calls]<UL><LI><a href="#[780]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_battery_get_info
<LI><a href="#[77b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_battery_set_info
</UL>
<BR>[Called By]<UL><LI><a href="#[68b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_init
</UL>

<P><STRONG><a name="[7a5]"></a>app_gfps_finder_set_default_value</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, app_gfps_finder.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_finder_init
</UL>

<P><STRONG><a name="[781]"></a>app_gfps_finder_generate_hash_flag</STRONG> (Thumb, 178 bytes, Stack size 72 bytes, app_gfps_finder.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = app_gfps_finder_generate_hash_flag
</UL>
<BR>[Calls]<UL><LI><a href="#[782]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHA256 (via Veneer)
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[783]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_finder_generate_adv_ei_and_hash
</UL>

<P><STRONG><a name="[783]"></a>app_gfps_finder_generate_adv_ei_and_hash</STRONG> (Thumb, 220 bytes, Stack size 136 bytes, app_gfps_finder.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 940<LI>Call Chain = app_gfps_finder_generate_adv_ei_and_hash &rArr; platform_uecc_compute_public_key &rArr; uECC_compute_public_key &rArr; EccPoint_compute_public_key &rArr; EccPoint_mult &rArr; XYcZ_addC &rArr; uECC_vli_modSquare_fast &rArr; uECC_vli_modMult_fast &rArr; uECC_vli_mult &rArr; muladd
</UL>
<BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr (via Veneer)
<LI><a href="#[336]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset (via Veneer)
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_set_cpu_clk
<LI><a href="#[785]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_uecc_compute_public_key
<LI><a href="#[784]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_encrypted_beacon_data
<LI><a href="#[781]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_finder_generate_hash_flag
</UL>
<BR>[Called By]<UL><LI><a href="#[4d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_finder_handle_event_wakeup_by_rtc
<LI><a href="#[7a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_finder_beacon_init
<LI><a href="#[799]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_finder_cb
<LI><a href="#[796]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_finder_update_hash
<LI><a href="#[78c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_finder_timeout_cb
<LI><a href="#[760]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_finder_enter_beacon_state
</UL>

<P><STRONG><a name="[786]"></a>app_gfps_finder_start_update_adv_ei_timer</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, app_gfps_finder.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = app_gfps_finder_start_update_adv_ei_timer &rArr; app_start_timer &rArr; remove_timeout_msg_from_list
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_start_timer
</UL>
<BR>[Called By]<UL><LI><a href="#[4d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_finder_handle_event_wakeup_by_rtc
<LI><a href="#[799]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_finder_cb
<LI><a href="#[78c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_finder_timeout_cb
<LI><a href="#[760]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_finder_enter_beacon_state
</UL>

<P><STRONG><a name="[787]"></a>app_gfps_finder_stop_update_adv_ei_timer</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, app_gfps_finder.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = app_gfps_finder_stop_update_adv_ei_timer &rArr; app_stop_timer &rArr; remove_timeout_msg_from_list
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_stop_timer
</UL>
<BR>[Called By]<UL><LI><a href="#[799]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_finder_cb
</UL>

<P><STRONG><a name="[788]"></a>app_gfps_finder_start_update_random_window_timer</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, app_gfps_finder.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = app_gfps_finder_start_update_random_window_timer &rArr; app_start_timer &rArr; remove_timeout_msg_from_list
</UL>
<BR>[Calls]<UL><LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_random (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_start_timer
</UL>
<BR>[Called By]<UL><LI><a href="#[78c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_finder_timeout_cb
</UL>

<P><STRONG><a name="[789]"></a>app_gfps_finder_stop_update_random_window_timer</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, app_gfps_finder.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = app_gfps_finder_stop_update_random_window_timer &rArr; app_stop_timer &rArr; remove_timeout_msg_from_list
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_stop_timer
</UL>
<BR>[Called By]<UL><LI><a href="#[799]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_finder_cb
</UL>

<P><STRONG><a name="[78a]"></a>app_gfps_finder_upt_enable_start_update_rpa_timer</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, app_gfps_finder.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = app_gfps_finder_upt_enable_start_update_rpa_timer &rArr; app_start_timer &rArr; remove_timeout_msg_from_list
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_start_timer
</UL>
<BR>[Called By]<UL><LI><a href="#[799]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_finder_cb
<LI><a href="#[78c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_finder_timeout_cb
</UL>

<P><STRONG><a name="[78b]"></a>app_gfps_finder_upt_enable_stop_rpa_timer</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, app_gfps_finder.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = app_gfps_finder_upt_enable_stop_rpa_timer &rArr; app_stop_timer &rArr; remove_timeout_msg_from_list
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_stop_timer
</UL>
<BR>[Called By]<UL><LI><a href="#[799]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_finder_cb
</UL>

<P><STRONG><a name="[78e]"></a>app_gfps_finder_get_utp_mode</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, app_gfps_finder.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_finder_handle_event_wakeup_by_rtc
<LI><a href="#[799]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_finder_cb
<LI><a href="#[78c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_finder_timeout_cb
<LI><a href="#[760]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_finder_enter_beacon_state
</UL>

<P><STRONG><a name="[78c]"></a>app_gfps_finder_timeout_cb</STRONG> (Thumb, 290 bytes, Stack size 48 bytes, app_gfps_finder.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 988<LI>Call Chain = app_gfps_finder_timeout_cb &rArr; app_gfps_finder_generate_adv_ei_and_hash &rArr; platform_uecc_compute_public_key &rArr; uECC_compute_public_key &rArr; EccPoint_compute_public_key &rArr; EccPoint_mult &rArr; XYcZ_addC &rArr; uECC_vli_modSquare_fast &rArr; uECC_vli_modMult_fast &rArr; uECC_vli_mult &rArr; muladd
</UL>
<BR>[Calls]<UL><LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4 (via Veneer)
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[40a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_adv_update_rpa
<LI><a href="#[78d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_adv_update_adv_ei_hash
<LI><a href="#[78f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_adv_start
<LI><a href="#[78e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_finder_get_utp_mode
<LI><a href="#[78a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_finder_upt_enable_start_update_rpa_timer
<LI><a href="#[788]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_finder_start_update_random_window_timer
<LI><a href="#[786]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_finder_start_update_adv_ei_timer
<LI><a href="#[783]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_finder_generate_adv_ei_and_hash
<LI><a href="#[764]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_adv_update_adv_interval
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_gfps_finder.o(.text)
</UL>
<P><STRONG><a name="[769]"></a>app_gfps_finder_handle_factory_reset</STRONG> (Thumb, 228 bytes, Stack size 24 bytes, app_gfps_finder.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = app_gfps_finder_handle_factory_reset
</UL>
<BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_device_handle_factory_reset
</UL>

<P><STRONG><a name="[760]"></a>app_gfps_finder_enter_beacon_state</STRONG> (Thumb, 162 bytes, Stack size 40 bytes, app_gfps_finder.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 980<LI>Call Chain = app_gfps_finder_enter_beacon_state &rArr; app_gfps_finder_generate_adv_ei_and_hash &rArr; platform_uecc_compute_public_key &rArr; uECC_compute_public_key &rArr; EccPoint_compute_public_key &rArr; EccPoint_mult &rArr; XYcZ_addC &rArr; uECC_vli_modSquare_fast &rArr; uECC_vli_modMult_fast &rArr; uECC_vli_mult &rArr; muladd
</UL>
<BR>[Calls]<UL><LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4 (via Veneer)
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[40a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_adv_update_rpa
<LI><a href="#[78d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_adv_update_adv_ei_hash
<LI><a href="#[791]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_adv_stop
<LI><a href="#[78f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_adv_start
<LI><a href="#[790]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_adv_get_adv_state
<LI><a href="#[78e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_finder_get_utp_mode
<LI><a href="#[786]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_finder_start_update_adv_ei_timer
<LI><a href="#[783]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_finder_generate_adv_ei_and_hash
</UL>
<BR>[Called By]<UL><LI><a href="#[40e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_device_handle_power_on
<LI><a href="#[761]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_finder_handle_power_off
<LI><a href="#[740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_finder_reset_conn
<LI><a href="#[724]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_device_check_state
</UL>

<P><STRONG><a name="[761]"></a>app_gfps_finder_handle_power_off</STRONG> (Thumb, 106 bytes, Stack size 8 bytes, app_gfps_finder.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 988<LI>Call Chain = app_gfps_finder_handle_power_off &rArr; app_gfps_finder_enter_beacon_state &rArr; app_gfps_finder_generate_adv_ei_and_hash &rArr; platform_uecc_compute_public_key &rArr; uECC_compute_public_key &rArr; EccPoint_compute_public_key &rArr; EccPoint_mult &rArr; XYcZ_addC &rArr; uECC_vli_modSquare_fast &rArr; uECC_vli_modMult_fast &rArr; uECC_vli_mult &rArr; muladd
</UL>
<BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_find_le_link_by_conn_id
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_gap_disconnect
<LI><a href="#[764]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_adv_update_adv_interval
<LI><a href="#[760]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_finder_enter_beacon_state
</UL>
<BR>[Called By]<UL><LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_device_handle_power_off
</UL>

<P><STRONG><a name="[792]"></a>app_gfps_finder_rtc_wakeup_save_info</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, app_gfps_finder.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = app_gfps_finder_rtc_wakeup_save_info
</UL>
<BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dlps_check_callback (via Veneer)
</UL>

<P><STRONG><a name="[793]"></a>app_gfps_finder_beacon_set_conn_id</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, app_gfps_finder.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = app_gfps_finder_beacon_set_conn_id
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_adv_callback
</UL>

<P><STRONG><a name="[4cc]"></a>app_gfps_finder_provisioned</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, app_gfps_finder.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_bt_and_ble_ready_check
<LI><a href="#[533]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_finder_adv_handle_mmi_action
<LI><a href="#[7a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_adv_state_change
<LI><a href="#[740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_finder_reset_conn
</UL>

<P><STRONG><a name="[740]"></a>app_gfps_finder_reset_conn</STRONG> (Thumb, 134 bytes, Stack size 24 bytes, app_gfps_finder.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1004<LI>Call Chain = app_gfps_finder_reset_conn &rArr; app_gfps_finder_enter_beacon_state &rArr; app_gfps_finder_generate_adv_ei_and_hash &rArr; platform_uecc_compute_public_key &rArr; uECC_compute_public_key &rArr; EccPoint_compute_public_key &rArr; EccPoint_mult &rArr; XYcZ_addC &rArr; uECC_vli_modSquare_fast &rArr; uECC_vli_modMult_fast &rArr; uECC_vli_mult &rArr; muladd
</UL>
<BR>[Calls]<UL><LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[4bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;power_mode_set
<LI><a href="#[4cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_finder_provisioned
<LI><a href="#[791]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_adv_stop
<LI><a href="#[760]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_finder_enter_beacon_state
</UL>
<BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_finder_beacon_le_disconnect_cb
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_le_disconnect_cb
</UL>

<P><STRONG><a name="[4c]"></a>app_gfps_finder_beacon_le_disconnect_cb</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, app_gfps_finder.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1028<LI>Call Chain = app_gfps_finder_beacon_le_disconnect_cb &rArr; app_gfps_finder_reset_conn &rArr; app_gfps_finder_enter_beacon_state &rArr; app_gfps_finder_generate_adv_ei_and_hash &rArr; platform_uecc_compute_public_key &rArr; uECC_compute_public_key &rArr; EccPoint_compute_public_key &rArr; EccPoint_mult &rArr; XYcZ_addC &rArr; uECC_vli_modSquare_fast &rArr; uECC_vli_modMult_fast &rArr; uECC_vli_mult &rArr; muladd
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[566]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dlps_start_power_down_wdg_timer
<LI><a href="#[740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_finder_reset_conn
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_gfps_finder_adv.o(.text)
</UL>
<P><STRONG><a name="[505]"></a>app_gfps_finder_send_ring_rsp</STRONG> (Thumb, 78 bytes, Stack size 24 bytes, app_gfps_finder.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 456<LI>Call Chain = app_gfps_finder_send_ring_rsp &rArr; gfps_finder_rsp_ring_request &rArr; gfps_finder_rsp_generate_authkey &rArr; gfps_hmac_sha256 &rArr; gfps_xor
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[502]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_msg_get_ring_state
<LI><a href="#[794]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_rsp_ring_request
</UL>
<BR>[Called By]<UL><LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_handle_action
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_msg_timeout_cb
</UL>

<P><STRONG><a name="[763]"></a>app_gfps_finder_set_ring_param</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, app_gfps_finder.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[40e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_device_handle_power_on
</UL>

<P><STRONG><a name="[7d8]"></a>app_gfps_finder_get_ring_volume_level</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, app_gfps_finder.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_msg_rfc_audio_cback
</UL>

<P><STRONG><a name="[774]"></a>app_gfps_finder_send_eddystone_capability</STRONG> (Thumb, 100 bytes, Stack size 40 bytes, app_gfps_finder.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = app_gfps_finder_send_eddystone_capability &rArr; bt_gfps_send_eddystone_capability &rArr; bt_gfps_send_data &rArr; bt_rfc_data_send &rArr; rfc_data_req &rArr; rfc_check_send_credits &rArr; crc8EtsGen
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[795]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_gfps_send_eddystone_capability
<LI><a href="#[770]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_msg_reverse_data
<LI><a href="#[76f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_get_random_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_rfc_cback
<LI><a href="#[7d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_msg_handle_data_transfer
</UL>

<P><STRONG><a name="[4d1]"></a>app_gfps_finder_update_clock_value</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, app_gfps_finder.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = app_gfps_finder_update_clock_value
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[4c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_bt_and_ble_ready_check
</UL>

<P><STRONG><a name="[4d2]"></a>app_gfps_finder_handle_event_wakeup_by_rtc</STRONG> (Thumb, 202 bytes, Stack size 40 bytes, app_gfps_finder.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 980<LI>Call Chain = app_gfps_finder_handle_event_wakeup_by_rtc &rArr; app_gfps_finder_generate_adv_ei_and_hash &rArr; platform_uecc_compute_public_key &rArr; uECC_compute_public_key &rArr; EccPoint_compute_public_key &rArr; EccPoint_mult &rArr; XYcZ_addC &rArr; uECC_vli_modSquare_fast &rArr; uECC_vli_modMult_fast &rArr; uECC_vli_mult &rArr; muladd
</UL>
<BR>[Calls]<UL><LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4 (via Veneer)
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp (via Veneer)
<LI><a href="#[40a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_adv_update_rpa
<LI><a href="#[78d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_adv_update_adv_ei_hash
<LI><a href="#[78f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_adv_start
<LI><a href="#[790]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_adv_get_adv_state
<LI><a href="#[78e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_finder_get_utp_mode
<LI><a href="#[786]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_finder_start_update_adv_ei_timer
<LI><a href="#[783]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_finder_generate_adv_ei_and_hash
<LI><a href="#[764]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_adv_update_adv_interval
</UL>
<BR>[Called By]<UL><LI><a href="#[4c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_bt_and_ble_ready_check
</UL>

<P><STRONG><a name="[796]"></a>app_gfps_finder_update_hash</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, app_gfps_finder.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 956<LI>Call Chain = app_gfps_finder_update_hash &rArr; app_gfps_finder_generate_adv_ei_and_hash &rArr; platform_uecc_compute_public_key &rArr; uECC_compute_public_key &rArr; EccPoint_compute_public_key &rArr; EccPoint_mult &rArr; XYcZ_addC &rArr; uECC_vli_modSquare_fast &rArr; uECC_vli_modMult_fast &rArr; uECC_vli_mult &rArr; muladd
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[797]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_adv_update_hash
<LI><a href="#[783]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_finder_generate_adv_ei_and_hash
</UL>
<BR>[Called By]<UL><LI><a href="#[799]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_finder_cb
<LI><a href="#[798]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_finder_update_battery
</UL>

<P><STRONG><a name="[798]"></a>app_gfps_finder_update_battery</STRONG> (Thumb, 84 bytes, Stack size 24 bytes, app_gfps_finder.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[796]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_finder_update_hash
</UL>

<P><STRONG><a name="[799]"></a>app_gfps_finder_cb</STRONG> (Thumb, 532 bytes, Stack size 256 bytes, app_gfps_finder.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1212<LI>Call Chain = app_gfps_finder_cb &rArr; app_gfps_finder_update_hash &rArr; app_gfps_finder_generate_adv_ei_and_hash &rArr; platform_uecc_compute_public_key &rArr; uECC_compute_public_key &rArr; EccPoint_compute_public_key &rArr; EccPoint_mult &rArr; XYcZ_addC &rArr; uECC_vli_modSquare_fast &rArr; uECC_vli_modMult_fast &rArr; uECC_vli_mult &rArr; muladd
</UL>
<BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4 (via Veneer)
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[40a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_adv_update_rpa
<LI><a href="#[504]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_msg_handle_ring_event
<LI><a href="#[502]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_msg_get_ring_state
<LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_get_radio_mode
<LI><a href="#[79b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_set_owner_key_valid
<LI><a href="#[79a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_get_owner_key_valid
<LI><a href="#[79e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_rsp_ring_state
<LI><a href="#[794]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_rsp_ring_request
<LI><a href="#[7a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_adv_update_frame_type
<LI><a href="#[78d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_adv_update_adv_ei_hash
<LI><a href="#[791]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_adv_stop
<LI><a href="#[78f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_adv_start
<LI><a href="#[790]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_adv_get_adv_state
<LI><a href="#[79c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_msg_set_ring_timeout
<LI><a href="#[79d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_msg_get_ring_timeout
<LI><a href="#[79f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dult_handle_none_owner_state
<LI><a href="#[796]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_finder_update_hash
<LI><a href="#[78e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_finder_get_utp_mode
<LI><a href="#[78b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_finder_upt_enable_stop_rpa_timer
<LI><a href="#[78a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_finder_upt_enable_start_update_rpa_timer
<LI><a href="#[789]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_finder_stop_update_random_window_timer
<LI><a href="#[787]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_finder_stop_update_adv_ei_timer
<LI><a href="#[786]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_finder_start_update_adv_ei_timer
<LI><a href="#[783]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_finder_generate_adv_ei_and_hash
<LI><a href="#[75f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_account_key_save_ownerkey_valid
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_gfps_finder.o(.text)
</UL>
<P><STRONG><a name="[7a1]"></a>app_gfps_finder_ftl_init</STRONG> (Thumb, 148 bytes, Stack size 40 bytes, app_gfps_finder.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = app_gfps_finder_ftl_init
</UL>
<BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[4c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_finder_init
</UL>

<P><STRONG><a name="[7a2]"></a>app_gfps_get_ei</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, app_gfps_finder.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[7f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dult_handle_ctrl_opcode
</UL>

<P><STRONG><a name="[7a3]"></a>app_gfps_finder_beacon_init</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, app_gfps_finder.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 956<LI>Call Chain = app_gfps_finder_beacon_init &rArr; app_gfps_finder_generate_adv_ei_and_hash &rArr; platform_uecc_compute_public_key &rArr; uECC_compute_public_key &rArr; EccPoint_compute_public_key &rArr; EccPoint_mult &rArr; XYcZ_addC &rArr; uECC_vli_modSquare_fast &rArr; uECC_vli_modMult_fast &rArr; uECC_vli_mult &rArr; muladd
</UL>
<BR>[Calls]<UL><LI><a href="#[7a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_adv_init
<LI><a href="#[783]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_finder_generate_adv_ei_and_hash
</UL>
<BR>[Called By]<UL><LI><a href="#[4c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_finder_init
</UL>

<P><STRONG><a name="[4c9]"></a>app_gfps_finder_init</STRONG> (Thumb, 90 bytes, Stack size 8 bytes, app_gfps_finder.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 964<LI>Call Chain = app_gfps_finder_init &rArr; app_gfps_finder_beacon_init &rArr; app_gfps_finder_generate_adv_ei_and_hash &rArr; platform_uecc_compute_public_key &rArr; uECC_compute_public_key &rArr; EccPoint_compute_public_key &rArr; EccPoint_mult &rArr; XYcZ_addC &rArr; uECC_vli_modSquare_fast &rArr; uECC_vli_modMult_fast &rArr; uECC_vli_mult &rArr; muladd
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calloc
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_reg_cb
<LI><a href="#[7a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_init
<LI><a href="#[7a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_finder_beacon_init
<LI><a href="#[7a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_finder_ftl_init
<LI><a href="#[7a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_finder_set_default_value
</UL>
<BR>[Called By]<UL><LI><a href="#[4c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_bt_and_ble_ready_check
</UL>

<P><STRONG><a name="[7aa]"></a>app_gfps_finder_beacon_get_conn_id</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, app_gfps_finder.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[533]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_finder_adv_handle_mmi_action
</UL>

<P><STRONG><a name="[790]"></a>gfps_finder_adv_get_adv_state</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, app_gfps_finder_adv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = gfps_finder_adv_get_adv_state &rArr; ble_ext_adv_mgr_get_adv_state &rArr; ble_ext_adv_mgr_find_by_handle
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[432]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_get_adv_state
</UL>
<BR>[Called By]<UL><LI><a href="#[4d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_finder_handle_event_wakeup_by_rtc
<LI><a href="#[799]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_finder_cb
<LI><a href="#[760]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_finder_enter_beacon_state
</UL>

<P><STRONG><a name="[40a]"></a>gfps_finder_adv_update_rpa</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, app_gfps_finder_adv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = gfps_finder_adv_update_rpa &rArr; ble_ext_adv_mgr_set_random &rArr; ble_ext_adv_mgr_disable &rArr; ble_ext_adv_mgr_send_msg &rArr; ble_ext_adv_mgr_find_by_handle
</UL>
<BR>[Calls]<UL><LI><a href="#[6cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_gen_rand_addr
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[42f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_set_random
</UL>
<BR>[Called By]<UL><LI><a href="#[407]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_device_irk_handle_power_on
<LI><a href="#[4d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_finder_handle_event_wakeup_by_rtc
<LI><a href="#[799]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_finder_cb
<LI><a href="#[78c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_finder_timeout_cb
<LI><a href="#[760]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_finder_enter_beacon_state
</UL>

<P><STRONG><a name="[7a7]"></a>gfps_finder_adv_get_key_stop_tracking_flag</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, app_gfps_finder_adv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gfps_finder_adv_get_key_stop_tracking_flag
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[78f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_adv_start
</UL>

<P><STRONG><a name="[7a8]"></a>gfps_finder_adv_set_key_stop_tracking_flag</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, app_gfps_finder_adv.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[533]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_finder_adv_handle_mmi_action
</UL>

<P><STRONG><a name="[78f]"></a>gfps_finder_adv_start</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, app_gfps_finder_adv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = gfps_finder_adv_start &rArr; ble_ext_adv_mgr_enable &rArr; ble_ext_adv_mgr_start_set_adv_param &rArr; ble_ext_adv_mgr_send_msg &rArr; ble_ext_adv_mgr_find_by_handle
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[435]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_enable
<LI><a href="#[7a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_adv_get_key_stop_tracking_flag
</UL>
<BR>[Called By]<UL><LI><a href="#[4d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_finder_handle_event_wakeup_by_rtc
<LI><a href="#[799]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_finder_cb
<LI><a href="#[78c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_finder_timeout_cb
<LI><a href="#[760]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_finder_enter_beacon_state
</UL>

<P><STRONG><a name="[791]"></a>gfps_finder_adv_stop</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, app_gfps_finder_adv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = gfps_finder_adv_stop &rArr; ble_ext_adv_mgr_disable &rArr; ble_ext_adv_mgr_send_msg &rArr; ble_ext_adv_mgr_find_by_handle
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[533]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_finder_adv_handle_mmi_action
<LI><a href="#[799]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_finder_cb
<LI><a href="#[740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_finder_reset_conn
<LI><a href="#[760]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_finder_enter_beacon_state
</UL>

<P><STRONG><a name="[7a0]"></a>gfps_finder_adv_update_frame_type</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, app_gfps_finder_adv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = gfps_finder_adv_update_frame_type &rArr; ble_ext_adv_mgr_set_adv_data &rArr; ble_ext_adv_mgr_start_set_adv_param &rArr; ble_ext_adv_mgr_send_msg &rArr; ble_ext_adv_mgr_find_by_handle
</UL>
<BR>[Calls]<UL><LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_set_adv_data
</UL>
<BR>[Called By]<UL><LI><a href="#[799]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_finder_cb
</UL>

<P><STRONG><a name="[764]"></a>gfps_finder_adv_update_adv_interval</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, app_gfps_finder_adv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = gfps_finder_adv_update_adv_interval &rArr; ble_ext_adv_mgr_change_adv_interval &rArr; ble_ext_adv_mgr_set_adv_param &rArr; ble_ext_adv_mgr_disable &rArr; ble_ext_adv_mgr_send_msg &rArr; ble_ext_adv_mgr_find_by_handle
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[73f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_change_adv_interval
</UL>
<BR>[Called By]<UL><LI><a href="#[40e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_device_handle_power_on
<LI><a href="#[4d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_finder_handle_event_wakeup_by_rtc
<LI><a href="#[78c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_finder_timeout_cb
<LI><a href="#[761]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_finder_handle_power_off
</UL>

<P><STRONG><a name="[78d]"></a>gfps_finder_adv_update_adv_ei_hash</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, app_gfps_finder_adv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = gfps_finder_adv_update_adv_ei_hash &rArr; ble_ext_adv_mgr_set_adv_data &rArr; ble_ext_adv_mgr_start_set_adv_param &rArr; ble_ext_adv_mgr_send_msg &rArr; ble_ext_adv_mgr_find_by_handle
</UL>
<BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_set_adv_data
</UL>
<BR>[Called By]<UL><LI><a href="#[4d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_finder_handle_event_wakeup_by_rtc
<LI><a href="#[799]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_finder_cb
<LI><a href="#[78c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_finder_timeout_cb
<LI><a href="#[760]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_finder_enter_beacon_state
</UL>

<P><STRONG><a name="[797]"></a>gfps_finder_adv_update_hash</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, app_gfps_finder_adv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = gfps_finder_adv_update_hash &rArr; ble_ext_adv_mgr_set_adv_data &rArr; ble_ext_adv_mgr_start_set_adv_param &rArr; ble_ext_adv_mgr_send_msg &rArr; ble_ext_adv_mgr_find_by_handle
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_set_adv_data
</UL>
<BR>[Called By]<UL><LI><a href="#[796]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_finder_update_hash
</UL>

<P><STRONG><a name="[533]"></a>app_gfps_finder_adv_handle_mmi_action</STRONG> (Thumb, 78 bytes, Stack size 32 bytes, app_gfps_finder_adv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = app_gfps_finder_adv_handle_mmi_action &rArr; gfps_finder_adv_stop &rArr; ble_ext_adv_mgr_disable &rArr; ble_ext_adv_mgr_send_msg &rArr; ble_ext_adv_mgr_find_by_handle
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[4cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_finder_provisioned
<LI><a href="#[791]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_adv_stop
<LI><a href="#[7aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_finder_beacon_get_conn_id
<LI><a href="#[7a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_adv_set_key_stop_tracking_flag
</UL>
<BR>[Called By]<UL><LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_handle_action
</UL>

<P><STRONG><a name="[7a4]"></a>gfps_finder_adv_init</STRONG> (Thumb, 134 bytes, Stack size 80 bytes, app_gfps_finder_adv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = gfps_finder_adv_init &rArr; ble_ext_adv_mgr_init_adv_params &rArr; ble_ext_adv_mgr_init_adv_params_all &rArr; ble_ext_adv_mgr_allocate_adv_handle
</UL>
<BR>[Calls]<UL><LI><a href="#[6cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_gen_rand_addr
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[43e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_register_callback
<LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_init_adv_params
</UL>
<BR>[Called By]<UL><LI><a href="#[7a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_finder_beacon_init
</UL>

<P><STRONG><a name="[73a]"></a>app_gfps_link_priority_queue_init</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, app_gfps_link.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[68b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_init
</UL>

<P><STRONG><a name="[7ab]"></a>app_gfps_link_print_link_priority</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, app_gfps_link.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = app_gfps_link_print_link_priority
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[742]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_link_delete_link_from_priority_queue
<LI><a href="#[72c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_link_add_link_into_priority_queue
</UL>

<P><STRONG><a name="[72c]"></a>app_gfps_link_add_link_into_priority_queue</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, app_gfps_link.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = app_gfps_link_add_link_into_priority_queue &rArr; app_gfps_link_print_link_priority
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[7ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_link_print_link_priority
</UL>
<BR>[Called By]<UL><LI><a href="#[72b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_ble_conn_info_init
</UL>

<P><STRONG><a name="[742]"></a>app_gfps_link_delete_link_from_priority_queue</STRONG> (Thumb, 92 bytes, Stack size 32 bytes, app_gfps_link.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = app_gfps_link_delete_link_from_priority_queue &rArr; app_gfps_link_print_link_priority
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[7ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_link_print_link_priority
</UL>
<BR>[Called By]<UL><LI><a href="#[71c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_link_disconnect_all_gfps_link
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_le_disconnect_cb
</UL>

<P><STRONG><a name="[71b]"></a>app_gfps_link_find_gfps_link</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, app_gfps_link.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = app_gfps_link_find_gfps_link
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_le_device_adv_start
<LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_ble_conn_info_handle
<LI><a href="#[71a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_next_action
</UL>

<P><STRONG><a name="[71c]"></a>app_gfps_link_disconnect_all_gfps_link</STRONG> (Thumb, 84 bytes, Stack size 24 bytes, app_gfps_link.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = app_gfps_link_disconnect_all_gfps_link &rArr; app_gfps_link_delete_link_from_priority_queue &rArr; app_gfps_link_print_link_priority
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_gap_disconnect
<LI><a href="#[742]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_link_delete_link_from_priority_queue
</UL>
<BR>[Called By]<UL><LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_le_device_adv_start
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_device_handle_power_off
<LI><a href="#[724]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_device_check_state
<LI><a href="#[71a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_next_action
</UL>

<P><STRONG><a name="[770]"></a>app_gfps_msg_reverse_data</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, app_gfps_msg.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[774]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_finder_send_eddystone_capability
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_rfc_cback
<LI><a href="#[719]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_msg_update_ble_addr
<LI><a href="#[7db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_psm_msg_coc_conn_callback
</UL>

<P><STRONG><a name="[79d]"></a>app_gfps_msg_get_ring_timeout</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, app_gfps_msg.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[799]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_finder_cb
</UL>

<P><STRONG><a name="[79c]"></a>app_gfps_msg_set_ring_timeout</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, app_gfps_msg.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[799]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_finder_cb
</UL>

<P><STRONG><a name="[502]"></a>app_gfps_msg_get_ring_state</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, app_gfps_msg.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_handle_action
<LI><a href="#[505]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_finder_send_ring_rsp
<LI><a href="#[799]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_finder_cb
</UL>

<P><STRONG><a name="[776]"></a>app_gfps_msg_set_ring_state</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, app_gfps_msg.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_rfc_cback
<LI><a href="#[7db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_psm_msg_coc_conn_callback
</UL>

<P><STRONG><a name="[7ac]"></a>app_gfps_msg_update_ring_status</STRONG> (Thumb, 156 bytes, Stack size 40 bytes, app_gfps_msg.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = app_gfps_msg_update_ring_status &rArr; bt_gfps_send_ring_status &rArr; bt_gfps_send_data &rArr; bt_rfc_data_send &rArr; rfc_data_req &rArr; rfc_check_send_credits &rArr; crc8EtsGen
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[7ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_gfps_send_ring_status
</UL>
<BR>[Called By]<UL><LI><a href="#[7b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_msg_all_ring_state
<LI><a href="#[7b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_msg_left_ring_state
<LI><a href="#[7b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_msg_right_ring_state
<LI><a href="#[7b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_msg_ring_stop_state
</UL>

<P><STRONG><a name="[775]"></a>app_gfps_msg_ring_stop</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, app_gfps_msg.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 560<LI>Call Chain = app_gfps_msg_ring_stop &rArr; audio_volume_out_unmute &rArr; audio_mgr_dispatch &rArr; audio_mgr_buffer_event_handle &rArr; audio_buffer_playing_state &rArr; audio_track_restart &rArr; audio_session_state_set &rArr;  audio_mgr_dispatch (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_stop_timer
<LI><a href="#[45f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_tone_type_cancel
<LI><a href="#[7b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_volume_out_unmute
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_rfc_cback
<LI><a href="#[7db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_psm_msg_coc_conn_callback
<LI><a href="#[7b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_msg_all_ring_state
<LI><a href="#[7b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_msg_left_ring_state
<LI><a href="#[7b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_msg_right_ring_state
</UL>

<P><STRONG><a name="[504]"></a>app_gfps_msg_handle_ring_event</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, app_gfps_msg.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 648<LI>Call Chain = app_gfps_msg_handle_ring_event &rArr; app_gfps_msg_ring_stop_state &rArr; app_gfps_msg_ring_play &rArr; app_audio_tone_type_play &rArr; voice_prompt_play &rArr; notification_push &rArr; notification_play &rArr; notification_path_start &rArr; notification_start_vp &rArr; audio_path_start &rArr; audio_path_schedule &rArr; audio_path_voice_start &rArr; dsp_mgr_session_enable &rArr; dsp_state_machine &rArr; dsp_power_on &rArr; dsp_hal_reset &rArr; shm_enable &rArr; h2d_cmd_send &rArr; shm_cmd_send &rArr; wr_queue_send
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[7b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_msg_all_ring_state
<LI><a href="#[7b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_msg_left_ring_state
<LI><a href="#[7b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_msg_right_ring_state
<LI><a href="#[7b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_msg_ring_stop_state
</UL>
<BR>[Called By]<UL><LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_handle_action
<LI><a href="#[799]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_finder_cb
<LI><a href="#[7d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_msg_handle_data_transfer
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_msg_timeout_cb
</UL>

<P><STRONG><a name="[773]"></a>app_gfps_msg_report_session_nonce</STRONG> (Thumb, 246 bytes, Stack size 80 bytes, app_gfps_msg.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = app_gfps_msg_report_session_nonce &rArr; bt_gfps_send_session_nonce &rArr; bt_gfps_send_data &rArr; bt_rfc_data_send &rArr; rfc_data_req &rArr; rfc_check_send_credits &rArr; crc8EtsGen
</UL>
<BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_find_br_link
<LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_find_le_link_by_conn_id
<LI><a href="#[7b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_gen_random_nonce
<LI><a href="#[7b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_gfps_send_session_nonce
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_rfc_cback
<LI><a href="#[7db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_psm_msg_coc_conn_callback
</UL>

<P><STRONG><a name="[7b7]"></a>app_gfps_msg_report_sass_cap</STRONG> (Thumb, 184 bytes, Stack size 80 bytes, app_gfps_msg.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = app_gfps_msg_report_sass_cap &rArr; bt_gfps_notify_sass_cap &rArr; bt_gfps_send_data &rArr; bt_rfc_data_send &rArr; rfc_data_req &rArr; rfc_check_send_credits &rArr; crc8EtsGen
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[7b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_gfps_notify_sass_cap
<LI><a href="#[7b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sass_policy_get_original_enable_multi_link
</UL>
<BR>[Called By]<UL><LI><a href="#[7d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_msg_handle_data_transfer
</UL>

<P><STRONG><a name="[7ba]"></a>app_gfps_rfc_report_sass_switch_preference</STRONG> (Thumb, 64 bytes, Stack size 40 bytes, app_gfps_msg.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = app_gfps_rfc_report_sass_switch_preference &rArr; bt_gfps_notify_switch_prefer &rArr; bt_gfps_send_data &rArr; bt_rfc_data_send &rArr; rfc_data_req &rArr; rfc_check_send_credits &rArr; crc8EtsGen
</UL>
<BR>[Calls]<UL><LI><a href="#[6b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sass_policy_get_switch_preference
<LI><a href="#[7bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_gfps_notify_switch_prefer
<LI><a href="#[7bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sass_policy_get_advanced_switching_setting
</UL>
<BR>[Called By]<UL><LI><a href="#[7d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_msg_handle_data_transfer
</UL>

<P><STRONG><a name="[59d]"></a>app_gfps_msg_notify_multipoint_switch</STRONG> (Thumb, 366 bytes, Stack size 64 bytes, app_gfps_msg.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = app_gfps_msg_notify_multipoint_switch &rArr; bt_gfps_notify_multipoint_switch &rArr; bt_gfps_send_data &rArr; bt_rfc_data_send &rArr; rfc_data_req &rArr; rfc_check_send_credits &rArr; crc8EtsGen
</UL>
<BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[7bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_gfps_notify_multipoint_switch
</UL>
<BR>[Called By]<UL><LI><a href="#[59b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_set_active_idx
<LI><a href="#[872]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_set_stream_link
</UL>

<P><STRONG><a name="[7be]"></a>app_gfps_msg_get_conn_state</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, app_gfps_msg.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = app_gfps_msg_get_conn_state
</UL>
<BR>[Calls]<UL><LI><a href="#[7bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_get_stream_only
</UL>
<BR>[Called By]<UL><LI><a href="#[758]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_msg_notify_connection_status
</UL>

<P><STRONG><a name="[758]"></a>app_gfps_msg_notify_connection_status</STRONG> (Thumb, 732 bytes, Stack size 96 bytes, app_gfps_msg.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1036<LI>Call Chain = app_gfps_msg_notify_connection_status &rArr; bt_gfps_notify_connection_status &rArr; sha256_hkdf &rArr; hmac_sha256_crypt &rArr; hmac_sha256_finish &rArr; mbedtls_sha256_update &rArr; mbedtls_sha256_update_ret &rArr; mbedtls_internal_sha256_process
</UL>
<BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_get_btmode
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_ccp_get_call_status
<LI><a href="#[74a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_get_active_idx
<LI><a href="#[750]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_sass_set_conn_status
<LI><a href="#[74f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_sass_get_conn_status
<LI><a href="#[753]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_get_inuse_account_key_index
<LI><a href="#[749]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_gen_conn_status
<LI><a href="#[7c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_sass_compare_account_key_by_idx
<LI><a href="#[7b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_gen_random_nonce
<LI><a href="#[7c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_gfps_notify_connection_status
<LI><a href="#[7c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sass_policy_context_to_conn_state
<LI><a href="#[7c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_get_stream_link
<LI><a href="#[7c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_get_active_link
<LI><a href="#[7be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_msg_get_conn_state
</UL>
<BR>[Called By]<UL><LI><a href="#[59c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_notify_conn_status
<LI><a href="#[7d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_msg_handle_data_transfer
</UL>

<P><STRONG><a name="[7c7]"></a>app_gfps_report_anc_state</STRONG> (Thumb, 34 bytes, Stack size 32 bytes, app_gfps_msg.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = app_gfps_report_anc_state &rArr; bt_gfps_send_anc_state &rArr; bt_gfps_send_data &rArr; bt_rfc_data_send &rArr; rfc_data_req &rArr; rfc_check_send_credits &rArr; crc8EtsGen
</UL>
<BR>[Calls]<UL><LI><a href="#[7c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_gfps_send_anc_state
</UL>
<BR>[Called By]<UL><LI><a href="#[7d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_msg_handle_data_transfer
<LI><a href="#[7c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_notify_anc_state
</UL>

<P><STRONG><a name="[7c9]"></a>app_gfps_notify_anc_state</STRONG> (Thumb, 120 bytes, Stack size 16 bytes, app_gfps_msg.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = app_gfps_notify_anc_state &rArr; app_gfps_report_anc_state &rArr; bt_gfps_send_anc_state &rArr; bt_gfps_send_data &rArr; bt_rfc_data_send &rArr; rfc_data_req &rArr; rfc_check_send_credits &rArr; crc8EtsGen
</UL>
<BR>[Calls]<UL><LI><a href="#[7c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_report_anc_state
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_msg_rfc_audio_cback
</UL>

<P><STRONG><a name="[7ca]"></a>app_gfps_set_anc_state</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, app_gfps_msg.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1636<LI>Call Chain = app_gfps_set_anc_state &rArr; app_mmi_handle_action &rArr; app_multi_active_hfp_transfer &rArr; app_multi_handle_sniffing_link_disconnect_event &rArr; app_multi_judge_active_a2dp_idx_and_qos &rArr;  app_multi_handle_sniffing_link_disconnect_event (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_handle_action
</UL>
<BR>[Called By]<UL><LI><a href="#[7d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_msg_handle_data_transfer
</UL>

<P><STRONG><a name="[7cb]"></a>app_gfps_rfc_report_dynamic_buffer_size</STRONG> (Thumb, 212 bytes, Stack size 64 bytes, app_gfps_msg.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = app_gfps_rfc_report_dynamic_buffer_size &rArr; bt_gfps_send_dynamic_buffer_size &rArr; bt_gfps_send_data &rArr; bt_rfc_data_send &rArr; rfc_data_req &rArr; rfc_check_send_credits &rArr; crc8EtsGen
</UL>
<BR>[Calls]<UL><LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[623]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_get_latency_value_by_level
<LI><a href="#[7cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_gfps_send_dynamic_buffer_size
</UL>
<BR>[Called By]<UL><LI><a href="#[7d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_msg_handle_data_transfer
</UL>

<P><STRONG><a name="[7cd]"></a>app_gfps_msg_update_inuse_account_key_index</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, app_gfps_msg.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = app_gfps_msg_update_inuse_account_key_index &rArr; app_link_find_br_link
</UL>
<BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_find_br_link
<LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_find_le_link_by_conn_id
</UL>
<BR>[Called By]<UL><LI><a href="#[7d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_msg_handle_data_transfer
</UL>

<P><STRONG><a name="[7ce]"></a>app_gfps_msg_update_custom_data</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, app_gfps_msg.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = app_gfps_msg_update_custom_data &rArr; gfps_sass_set_conn_status
</UL>
<BR>[Calls]<UL><LI><a href="#[750]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_sass_set_conn_status
<LI><a href="#[74f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_sass_get_conn_status
</UL>
<BR>[Called By]<UL><LI><a href="#[7d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_msg_handle_data_transfer
</UL>

<P><STRONG><a name="[7cf]"></a>app_gfps_msg_update_target_drop_device</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, app_gfps_msg.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = app_gfps_msg_update_target_drop_device &rArr; app_link_find_le_link_by_conn_id
</UL>
<BR>[Calls]<UL><LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_find_le_link_by_conn_id
</UL>
<BR>[Called By]<UL><LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sass_handle_le_dm
<LI><a href="#[7d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_msg_handle_data_transfer
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_msg_rfc_bt_cback
</UL>

<P><STRONG><a name="[7d0]"></a>app_gfps_msg_handle_data_transfer</STRONG> (Thumb, 2676 bytes, Stack size 120 bytes, app_gfps_msg.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 2124<LI>Call Chain = app_gfps_msg_handle_data_transfer &rArr; app_sass_policy_switch_active_audio_source &rArr; app_bt_policy_disconnect &rArr; app_bt_policy_state_machine &rArr; app_bt_policy_event_handle &rArr;  app_bt_policy_roleswitch_handle (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[59c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_notify_conn_status
<LI><a href="#[504]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_msg_handle_ring_event
<LI><a href="#[772]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_gfps_send_firmware_revision
<LI><a href="#[774]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_finder_send_eddystone_capability
<LI><a href="#[75e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_account_key_find_inuse_account_key
<LI><a href="#[75b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_account_key_verify_mac
<LI><a href="#[758]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_msg_notify_connection_status
<LI><a href="#[622]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_get_last_used_latency
<LI><a href="#[6bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sass_policy_switch_back
<LI><a href="#[6ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sass_policy_switch_active_audio_source
<LI><a href="#[6b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sass_policy_set_switch_preference
<LI><a href="#[6bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sass_policy_set_multipoint_state
<LI><a href="#[7c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_gfps_send_nak
<LI><a href="#[7d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_gfps_send_ack
<LI><a href="#[7d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_gfps_active_components_rsp
<LI><a href="#[7d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sass_policy_set_capability
<LI><a href="#[7d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sass_policy_set_advanced_switching_setting
<LI><a href="#[7d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sass_policy_initiated_connection
<LI><a href="#[7cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_msg_update_target_drop_device
<LI><a href="#[7ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_msg_update_custom_data
<LI><a href="#[7cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_msg_update_inuse_account_key_index
<LI><a href="#[7cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_rfc_report_dynamic_buffer_size
<LI><a href="#[7ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_set_anc_state
<LI><a href="#[7c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_report_anc_state
<LI><a href="#[7ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_rfc_report_sass_switch_preference
<LI><a href="#[7b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_msg_report_sass_cap
<LI><a href="#[7d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_rfc_report_mac_error
<LI><a href="#[7c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_rfc_report_nac
</UL>
<BR>[Called By]<UL><LI><a href="#[778]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_msg_loop_check_data_complete
<LI><a href="#[7d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_msg_le_loop_check_data_complete
</UL>

<P><STRONG><a name="[778]"></a>app_gfps_msg_loop_check_data_complete</STRONG> (Thumb, 322 bytes, Stack size 64 bytes, app_gfps_msg.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 2188 + In Cycle
<LI>Call Chain = app_gfps_msg_loop_check_data_complete &rArr;  app_gfps_msg_loop_check_data_complete (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_find_br_link
<LI><a href="#[778]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_msg_loop_check_data_complete
<LI><a href="#[7d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_msg_handle_data_transfer
</UL>
<BR>[Called By]<UL><LI><a href="#[778]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_msg_loop_check_data_complete
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_rfc_cback
</UL>

<P><STRONG><a name="[7d7]"></a>app_gfps_msg_le_loop_check_data_complete</STRONG> (Thumb, 370 bytes, Stack size 64 bytes, app_gfps_msg.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 2188 + In Cycle
<LI>Call Chain = app_gfps_msg_le_loop_check_data_complete &rArr;  app_gfps_msg_le_loop_check_data_complete (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_find_le_link_by_conn_id
<LI><a href="#[7d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_msg_le_loop_check_data_complete
<LI><a href="#[7d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_msg_handle_data_transfer
</UL>
<BR>[Called By]<UL><LI><a href="#[7db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_psm_msg_coc_conn_callback
<LI><a href="#[7d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_msg_le_loop_check_data_complete
</UL>

<P><STRONG><a name="[719]"></a>app_gfps_msg_update_ble_addr</STRONG> (Thumb, 166 bytes, Stack size 32 bytes, app_gfps_msg.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = app_gfps_msg_update_ble_addr &rArr; bt_gfps_send_ble_addr &rArr; bt_gfps_send_data &rArr; bt_rfc_data_send &rArr; rfc_data_req &rArr; rfc_check_send_credits &rArr; crc8EtsGen
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[771]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_gfps_send_ble_addr
<LI><a href="#[770]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_msg_reverse_data
<LI><a href="#[76f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_get_random_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_update_rpa
<LI><a href="#[712]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_adv_start
</UL>

<P><STRONG><a name="[68a]"></a>app_gfps_msg_rfc_init</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, app_gfps_msg.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = app_gfps_msg_rfc_init &rArr; bt_gfps_rfc_init &rArr; bt_rfc_profile_register &rArr; rfc_reg_cb &rArr; rfc_init
</UL>
<BR>[Calls]<UL><LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_mgr_cback_register
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_reg_cb
<LI><a href="#[47c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_mgr_cback_register
<LI><a href="#[7da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_gfps_rfc_init
</UL>
<BR>[Called By]<UL><LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_third_party_srv_init
</UL>

<P><STRONG><a name="[7db]"></a>app_gfps_psm_msg_coc_conn_callback</STRONG> (Thumb, 332 bytes, Stack size 48 bytes, app_gfps_psm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 2236<LI>Call Chain = app_gfps_psm_msg_coc_conn_callback &rArr; app_gfps_msg_le_loop_check_data_complete &rArr;  app_gfps_msg_le_loop_check_data_complete (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[7dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_coc_get_chann_param
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_find_le_link_by_conn_id
<LI><a href="#[59c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_notify_conn_status
<LI><a href="#[76e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_gfps_send_model_id
<LI><a href="#[772]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_gfps_send_firmware_revision
<LI><a href="#[771]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_gfps_send_ble_addr
<LI><a href="#[776]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_msg_set_ring_state
<LI><a href="#[775]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_msg_ring_stop
<LI><a href="#[770]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_msg_reverse_data
<LI><a href="#[773]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_msg_report_session_nonce
<LI><a href="#[71d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_battery_info_report
<LI><a href="#[76f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_get_random_addr
<LI><a href="#[7d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_msg_le_loop_check_data_complete
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_gfps_psm.o(.text)
</UL>
<P><STRONG><a name="[7dd]"></a>app_gfps_psm_msg_coc_init</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, app_gfps_psm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = app_gfps_psm_msg_coc_init
</UL>
<BR>[Calls]<UL><LI><a href="#[7e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_coc_reg_psm
<LI><a href="#[7e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_coc_set_param
<LI><a href="#[7df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_coc_register_app_cb
<LI><a href="#[7de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_coc_init
<LI><a href="#[766]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_psm_rsp_data_set
</UL>
<BR>[Called By]<UL><LI><a href="#[73c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_psm_init
</UL>

<P><STRONG><a name="[73c]"></a>app_gfps_psm_init</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, app_gfps_psm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = app_gfps_psm_init &rArr; app_gfps_psm_msg_coc_init
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[7e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_ecfc_init
<LI><a href="#[7e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_ecfc_set_param
<LI><a href="#[7dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_psm_msg_coc_init
</UL>
<BR>[Called By]<UL><LI><a href="#[68b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_init
</UL>

<P><STRONG><a name="[7e4]"></a>app_sass_policy_reset_prev_disc_device</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, app_sass_policy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = app_sass_policy_reset_prev_disc_device
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sass_handle_le_dm
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sass_policy_bt_cback
</UL>

<P><STRONG><a name="[74d]"></a>app_sass_policy_get_conn_bit_map</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, app_sass_policy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = app_sass_policy_get_conn_bit_map
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[749]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_gen_conn_status
<LI><a href="#[7f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sass_policy_get_disc_link
</UL>

<P><STRONG><a name="[7e5]"></a>app_sass_policy_update_conn_bit_map</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, app_sass_policy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = app_sass_policy_update_conn_bit_map &rArr; app_bond_get_pair_idx_mapping
</UL>
<BR>[Calls]<UL><LI><a href="#[450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bond_get_pair_idx_mapping
</UL>
<BR>[Called By]<UL><LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sass_handle_le_dm
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sass_policy_bt_cback
</UL>

<P><STRONG><a name="[4e5]"></a>app_sass_policy_profile_conn_handle</STRONG> (Thumb, 142 bytes, Stack size 24 bytes, app_sass_policy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = app_sass_policy_profile_conn_handle &rArr; bt_avrcp_play &rArr; avrcp_send_pass_through &rArr; avrcp_cmd_enqueue &rArr; avrcp_cmd_process &rArr; avrcp_send_cmd_pass_through &rArr; avrcp_send_generic_cmd &rArr; sys_timer_start &rArr; sys_hp_timer_list_insert &rArr; hw_timer_restart &rArr; hw_timer_safe_stop &rArr; hw_timer_set_div
</UL>
<BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[50f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_avrcp_play
<LI><a href="#[7e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_mcp_play_pause
</UL>
<BR>[Called By]<UL><LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sass_handle_le_dm
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_link_policy_ind
</UL>

<P><STRONG><a name="[5d5]"></a>app_sass_policy_link_back_end</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, app_sass_policy.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_linkback_run
</UL>

<P><STRONG><a name="[3c1]"></a>app_sass_handle_le_dm</STRONG> (Thumb, 292 bytes, Stack size 40 bytes, app_sass_policy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1156<LI>Call Chain = app_sass_handle_le_dm &rArr; app_gfps_notify_conn_status &rArr; app_gfps_adv_update_conn_status &rArr; app_gfps_device_check_state &rArr; app_gfps_enter_nondiscoverable_mode &rArr; app_gfps_next_action &rArr; app_gfps_battery_info_report &rArr; app_gfps_battery_set_info &rArr; gfps_gen_adv_data &rArr; gfps_sass_get_encrypt_conn_status &rArr; sha256_hkdf &rArr; hmac_sha256_crypt &rArr; hmac_sha256_finish &rArr; mbedtls_sha256_update &rArr; mbedtls_sha256_update_ret &rArr; mbedtls_internal_sha256_process
</UL>
<BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_stop_timer
<LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_find_le_link_by_conn_id
<LI><a href="#[59c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_notify_conn_status
<LI><a href="#[5ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_disconnect_inactive_link
<LI><a href="#[547]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_get_encryption_device_num
<LI><a href="#[518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_default_connect
<LI><a href="#[4e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sass_policy_profile_conn_handle
<LI><a href="#[720]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_adv_start
<LI><a href="#[5f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_mgr_disc_inactive_le_link
<LI><a href="#[7e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sass_policy_update_conn_bit_map
<LI><a href="#[7e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sass_policy_reset_prev_disc_device
<LI><a href="#[7cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_msg_update_target_drop_device
</UL>
<BR>[Called By]<UL><LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_gap_handle_new_conn_state_evt
<LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_gap_handle_authen_state_evt
<LI><a href="#[8a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_handle_mcp_msg
<LI><a href="#[89b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_link_idle
</UL>

<P><STRONG><a name="[7e8]"></a>app_sass_find_other_idx</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, app_sass_policy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = app_sass_find_other_idx
</UL>
<BR>[Called By]<UL><LI><a href="#[7e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sass_pause_inactive_link
</UL>

<P><STRONG><a name="[7e9]"></a>app_sass_find_other_link</STRONG> (Thumb, 110 bytes, Stack size 12 bytes, app_sass_policy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = app_sass_find_other_link
</UL>
<BR>[Called By]<UL><LI><a href="#[5ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sass_preempt_policy
<LI><a href="#[5a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_preemptive_judge
<LI><a href="#[6bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sass_policy_switch_back
<LI><a href="#[6ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sass_policy_switch_active_audio_source
</UL>

<P><STRONG><a name="[7e7]"></a>app_sass_pause_inactive_link</STRONG> (Thumb, 164 bytes, Stack size 32 bytes, app_sass_policy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = app_sass_pause_inactive_link &rArr; bt_avrcp_pause &rArr; avrcp_send_pass_through &rArr; avrcp_cmd_enqueue &rArr; avrcp_cmd_process &rArr; avrcp_send_cmd_pass_through &rArr; avrcp_send_generic_cmd &rArr; sys_timer_start &rArr; sys_hp_timer_list_insert &rArr; hw_timer_restart &rArr; hw_timer_safe_stop &rArr; hw_timer_set_div
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[74a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_get_active_idx
<LI><a href="#[511]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_avrcp_pause
<LI><a href="#[7e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sass_find_other_idx
</UL>
<BR>[Called By]<UL><LI><a href="#[5a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_preemptive_judge
</UL>

<P><STRONG><a name="[7c4]"></a>app_sass_policy_context_to_conn_state</STRONG> (Thumb, 114 bytes, Stack size 16 bytes, app_sass_policy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = app_sass_policy_context_to_conn_state
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[5ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sass_preempt_policy
<LI><a href="#[74b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sass_policy_get_connection_state
<LI><a href="#[758]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_msg_notify_connection_status
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_ascs_ble_audio_cback
<LI><a href="#[872]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_set_stream_link
<LI><a href="#[89f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_handle_ascs_msg
</UL>

<P><STRONG><a name="[5ba]"></a>app_sass_preempt_policy</STRONG> (Thumb, 1396 bytes, Stack size 72 bytes, app_sass_policy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + In Cycle
<LI>Call Chain = app_sass_preempt_policy &rArr;  app_sass_preempt_policy (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_get_btmode
<LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_a2dp_get_active_idx
<LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_get_active_idx
<LI><a href="#[5ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sass_preempt_policy
<LI><a href="#[7ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_checking_silence_pkts
<LI><a href="#[74a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_get_active_idx
<LI><a href="#[5b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_check_pend
<LI><a href="#[7eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_get_pending_id
<LI><a href="#[7ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_ascs_get_enable_ase_num
<LI><a href="#[7e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sass_find_other_link
<LI><a href="#[7c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sass_policy_context_to_conn_state
<LI><a href="#[7c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_get_stream_link
</UL>
<BR>[Called By]<UL><LI><a href="#[5ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sass_preempt_policy
<LI><a href="#[5a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_preemptive_judge
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_bt_cback
<LI><a href="#[539]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_topology_dm
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_bt_cback
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_ascs_ble_audio_cback
<LI><a href="#[89f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_handle_ascs_msg
<LI><a href="#[879]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_handle_mcp_state
<LI><a href="#[90a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_legacy_bt_cback
</UL>

<P><STRONG><a name="[5a6]"></a>app_multi_preemptive_judge</STRONG> (Thumb, 1058 bytes, Stack size 72 bytes, app_sass_policy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1420 + In Cycle
<LI>Call Chain = app_multi_preemptive_judge &rArr;  app_multi_active_hfp_transfer (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_get_btmode
<LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_get_b2s_link_num
<LI><a href="#[453]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_start
<LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_pause_inactive_a2dp_link_stream
<LI><a href="#[46b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bond_set_priority
<LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_a2dp_get_active_idx
<LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_find_le_link_by_conn_id
<LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_link_sm
<LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_sniffing_param_update
<LI><a href="#[5b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_stop
<LI><a href="#[5ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sass_preempt_policy
<LI><a href="#[59c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_notify_conn_status
<LI><a href="#[7ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_set_stream_only
<LI><a href="#[5bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_stop_silence_check_timer
<LI><a href="#[5b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_voice_ongoing_preemptive
<LI><a href="#[5b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_check_pend
<LI><a href="#[5a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_stream_avrcp_set
<LI><a href="#[59f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_a2dp_active_link_set
<LI><a href="#[59b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_set_active_idx
<LI><a href="#[515]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_hfp_audio_disconnect_req
<LI><a href="#[511]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_avrcp_pause
<LI><a href="#[51d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_active_hfp_transfer
<LI><a href="#[7ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_br_vendor_set_active_sco
<LI><a href="#[7e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_mcp_play_pause
<LI><a href="#[7e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sass_pause_inactive_link
<LI><a href="#[7e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sass_find_other_link
<LI><a href="#[7c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_get_stream_link
</UL>
<BR>[Called By]<UL><LI><a href="#[5a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_judge_active_a2dp_idx_and_qos
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_bt_cback
<LI><a href="#[539]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_topology_dm
<LI><a href="#[6bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sass_policy_switch_back
<LI><a href="#[6ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sass_policy_switch_active_audio_source
<LI><a href="#[7d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sass_policy_initiated_connection
<LI><a href="#[89f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_handle_ascs_msg
<LI><a href="#[879]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_handle_mcp_state
<LI><a href="#[90a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_legacy_bt_cback
</UL>

<P><STRONG><a name="[6ba]"></a>app_sass_policy_switch_active_audio_source</STRONG> (Thumb, 362 bytes, Stack size 48 bytes, app_sass_policy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 2004<LI>Call Chain = app_sass_policy_switch_active_audio_source &rArr; app_bt_policy_disconnect &rArr; app_bt_policy_state_machine &rArr; app_bt_policy_event_handle &rArr;  app_bt_policy_roleswitch_handle (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_find_br_link
<LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_get_btmode
<LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_find_le_link_by_conn_id
<LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_link_sm
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_gap_disconnect
<LI><a href="#[5a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_preemptive_judge
<LI><a href="#[74a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_get_active_idx
<LI><a href="#[515]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_hfp_audio_disconnect_req
<LI><a href="#[50f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_avrcp_play
<LI><a href="#[4ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_disconnect
<LI><a href="#[7e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_mcp_play_pause
<LI><a href="#[7e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sass_find_other_link
<LI><a href="#[7c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_get_stream_link
</UL>
<BR>[Called By]<UL><LI><a href="#[6b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_cmd_customized_cmd_handle
<LI><a href="#[7d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_msg_handle_data_transfer
</UL>

<P><STRONG><a name="[74c]"></a>app_sass_get_available_connection_num</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, app_sass_policy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = app_sass_get_available_connection_num &rArr; app_link_get_encryption_device_num &rArr; app_link_find_br_link
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_get_b2s_link_num
<LI><a href="#[547]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_get_encryption_device_num
</UL>
<BR>[Called By]<UL><LI><a href="#[5ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_get_inactive_index
<LI><a href="#[749]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_gen_conn_status
<LI><a href="#[6bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sass_policy_set_multipoint_state
</UL>

<P><STRONG><a name="[6bc]"></a>app_sass_policy_set_multipoint_state</STRONG> (Thumb, 142 bytes, Stack size 24 bytes, app_sass_policy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1652<LI>Call Chain = app_sass_policy_set_multipoint_state &rArr; app_mmi_handle_action &rArr; app_multi_active_hfp_transfer &rArr; app_multi_handle_sniffing_link_disconnect_event &rArr; app_multi_judge_active_a2dp_idx_and_qos &rArr;  app_multi_handle_sniffing_link_disconnect_event (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_handle_action
<LI><a href="#[5ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_disconnect_inactive_link
<LI><a href="#[74c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sass_get_available_connection_num
<LI><a href="#[5f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_mgr_disc_inactive_le_link
</UL>
<BR>[Called By]<UL><LI><a href="#[6b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_cmd_customized_cmd_handle
<LI><a href="#[7d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_msg_handle_data_transfer
</UL>

<P><STRONG><a name="[7ef]"></a>app_sass_policy_is_sass_device</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, app_sass_policy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = app_sass_policy_is_sass_device &rArr; app_bond_get_pair_idx_mapping
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bond_get_pair_idx_mapping
<LI><a href="#[74a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_get_active_idx
</UL>
<BR>[Called By]<UL><LI><a href="#[7f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sass_policy_get_disc_link
</UL>

<P><STRONG><a name="[7f0]"></a>app_sass_policy_is_target_drop_device</STRONG> (Thumb, 164 bytes, Stack size 32 bytes, app_sass_policy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = app_sass_policy_is_target_drop_device
</UL>
<BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[7f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sass_policy_get_disc_link
</UL>

<P><STRONG><a name="[7f1]"></a>app_sass_policy_get_disc_link</STRONG> (Thumb, 332 bytes, Stack size 56 bytes, app_sass_policy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = app_sass_policy_get_disc_link &rArr; app_sass_policy_is_sass_device &rArr; app_bond_get_pair_idx_mapping
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_find_br_link
<LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_get_btmode
<LI><a href="#[74a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_get_active_idx
<LI><a href="#[74d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sass_policy_get_conn_bit_map
<LI><a href="#[7f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sass_policy_is_target_drop_device
<LI><a href="#[7ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sass_policy_is_sass_device
<LI><a href="#[7c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_get_active_link
</UL>
<BR>[Called By]<UL><LI><a href="#[5ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_get_inactive_index
</UL>

<P><STRONG><a name="[6bb]"></a>app_sass_policy_switch_back</STRONG> (Thumb, 482 bytes, Stack size 48 bytes, app_sass_policy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1468<LI>Call Chain = app_sass_policy_switch_back &rArr; app_multi_preemptive_judge &rArr;  app_multi_active_hfp_transfer (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_get_btmode
<LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_get_b2s_link_num
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_start_timer
<LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_check_b2s_link_by_id
<LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_get_lea_link_num
<LI><a href="#[5a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_preemptive_judge
<LI><a href="#[74a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_get_active_idx
<LI><a href="#[50f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_avrcp_play
<LI><a href="#[7e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_mcp_play_pause
<LI><a href="#[7e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sass_find_other_link
<LI><a href="#[7c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_get_stream_link
</UL>
<BR>[Called By]<UL><LI><a href="#[6b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_cmd_customized_cmd_handle
<LI><a href="#[7d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_msg_handle_data_transfer
</UL>

<P><STRONG><a name="[7d3]"></a>app_sass_policy_set_capability</STRONG> (Thumb, 104 bytes, Stack size 32 bytes, app_sass_policy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1148<LI>Call Chain = app_sass_policy_set_capability &rArr; app_gfps_notify_conn_status &rArr; app_gfps_adv_update_conn_status &rArr; app_gfps_device_check_state &rArr; app_gfps_enter_nondiscoverable_mode &rArr; app_gfps_next_action &rArr; app_gfps_battery_info_report &rArr; app_gfps_battery_set_info &rArr; gfps_gen_adv_data &rArr; gfps_sass_get_encrypt_conn_status &rArr; sha256_hkdf &rArr; hmac_sha256_crypt &rArr; hmac_sha256_finish &rArr; mbedtls_sha256_update &rArr; mbedtls_sha256_update_ret &rArr; mbedtls_internal_sha256_process
</UL>
<BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_find_br_link
<LI><a href="#[450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bond_get_pair_idx_mapping
<LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_find_le_link_by_conn_id
<LI><a href="#[59c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_notify_conn_status
</UL>
<BR>[Called By]<UL><LI><a href="#[7d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_msg_handle_data_transfer
</UL>

<P><STRONG><a name="[7d5]"></a>app_sass_policy_initiated_connection</STRONG> (Thumb, 134 bytes, Stack size 40 bytes, app_sass_policy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1460<LI>Call Chain = app_sass_policy_initiated_connection &rArr; app_multi_preemptive_judge &rArr;  app_multi_active_hfp_transfer (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_find_br_link
<LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_find_le_link_by_conn_id
<LI><a href="#[5a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_preemptive_judge
</UL>
<BR>[Called By]<UL><LI><a href="#[7d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_msg_handle_data_transfer
</UL>

<P><STRONG><a name="[6b8]"></a>app_sass_policy_set_switch_preference</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, app_sass_policy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = app_sass_policy_set_switch_preference
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[6b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_cmd_customized_cmd_handle
<LI><a href="#[7d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_msg_handle_data_transfer
</UL>

<P><STRONG><a name="[6b9]"></a>app_sass_policy_get_switch_preference</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, app_sass_policy.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_cmd_customized_cmd_handle
<LI><a href="#[7ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_rfc_report_sass_switch_preference
</UL>

<P><STRONG><a name="[7d4]"></a>app_sass_policy_set_advanced_switching_setting</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, app_sass_policy.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_msg_handle_data_transfer
</UL>

<P><STRONG><a name="[7bb]"></a>app_sass_policy_get_advanced_switching_setting</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, app_sass_policy.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_rfc_report_sass_switch_preference
</UL>

<P><STRONG><a name="[74b]"></a>app_sass_policy_get_connection_state</STRONG> (Thumb, 320 bytes, Stack size 40 bytes, app_sass_policy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = app_sass_policy_get_connection_state &rArr; app_link_find_br_link
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_find_br_link
<LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_get_btmode
<LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_get_b2s_link_num
<LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_get_le_link_num
<LI><a href="#[7bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_get_stream_only
<LI><a href="#[74a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_get_active_idx
<LI><a href="#[58e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkback_todo_queue_node_num
<LI><a href="#[5c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_state
<LI><a href="#[7c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sass_policy_context_to_conn_state
<LI><a href="#[7c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_get_active_link
</UL>
<BR>[Called By]<UL><LI><a href="#[749]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_gen_conn_status
</UL>

<P><STRONG><a name="[7b8]"></a>app_sass_policy_get_original_enable_multi_link</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, app_sass_policy.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_msg_report_sass_cap
</UL>

<P><STRONG><a name="[5ae]"></a>app_multi_get_inactive_index</STRONG> (Thumb, 222 bytes, Stack size 56 bytes, app_sass_policy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = app_multi_get_inactive_index &rArr; app_sass_policy_get_disc_link &rArr; app_sass_policy_is_sass_device &rArr; app_bond_get_pair_idx_mapping
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_get_btmode
<LI><a href="#[74a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_get_active_idx
<LI><a href="#[74c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sass_get_available_connection_num
<LI><a href="#[7f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sass_policy_get_disc_link
<LI><a href="#[7c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_get_active_link
</UL>
<BR>[Called By]<UL><LI><a href="#[5ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_disconnect_inactive_link
<LI><a href="#[5f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_mgr_disc_inactive_le_link
</UL>

<P><STRONG><a name="[339]"></a>app_sass_policy_reset</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, app_sass_policy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = app_sass_policy_reset &rArr; app_cfg_store
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_cfg_store
</UL>
<BR>[Called By]<UL><LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_cfg_reset
</UL>

<P><STRONG><a name="[31b]"></a>app_sass_policy_init</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, app_sass_policy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = app_sass_policy_init &rArr; bt_mgr_cback_register
</UL>
<BR>[Calls]<UL><LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_mgr_cback_register
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_reg_cb
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[714]"></a>app_gfps_timer_start_update_rpa</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, app_gfps_timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = app_gfps_timer_start_update_rpa &rArr; app_start_timer &rArr; remove_timeout_msg_from_list
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_start_timer
</UL>
<BR>[Called By]<UL><LI><a href="#[712]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_adv_start
</UL>

<P><STRONG><a name="[713]"></a>app_gfps_timer_stop_update_rpa</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, app_gfps_timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = app_gfps_timer_stop_update_rpa &rArr; app_stop_timer &rArr; remove_timeout_msg_from_list
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_stop_timer
</UL>
<BR>[Called By]<UL><LI><a href="#[712]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_adv_start
</UL>

<P><STRONG><a name="[7f2]"></a>app_gfps_timer_timeout_cb</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, app_gfps_timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = app_gfps_timer_timeout_cb &rArr; app_gfps_update_rpa &rArr; app_gfps_msg_update_ble_addr &rArr; bt_gfps_send_ble_addr &rArr; bt_gfps_send_data &rArr; bt_rfc_data_send &rArr; rfc_data_req &rArr; rfc_check_send_credits &rArr; crc8EtsGen
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_update_rpa
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_gfps_timer.o(.text)
</UL>
<P><STRONG><a name="[73d]"></a>app_gfps_timer_init</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, app_gfps_timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = app_gfps_timer_init &rArr; app_timer_reg_cb
</UL>
<BR>[Calls]<UL><LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_reg_cb
</UL>
<BR>[Called By]<UL><LI><a href="#[68b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_init
</UL>

<P><STRONG><a name="[4cb]"></a>app_dult_handle_power_on</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, app_dult.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_bt_and_ble_ready_check
</UL>

<P><STRONG><a name="[133b]"></a>app_dult_get_none_owner_state</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, app_dult.o(.text), UNUSED)

<P><STRONG><a name="[79f]"></a>app_dult_handle_none_owner_state</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, app_dult.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = app_dult_handle_none_owner_state
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[799]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_finder_cb
</UL>

<P><STRONG><a name="[7f3]"></a>app_dult_sound_complete_handle</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, app_dult.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = app_dult_sound_complete_handle &rArr; app_dult_send_indication &rArr; gatt_svc_send_data &rArr; gatt_svc_send_data_in_queue &rArr; calloc
</UL>
<BR>[Calls]<UL><LI><a href="#[7f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dult_send_indication
<LI><a href="#[7f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dult_device_set_ring_state
</UL>
<BR>[Called By]<UL><LI><a href="#[506]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dult_device_sound_stop
</UL>

<P><STRONG><a name="[68c]"></a>app_dult_svc_init</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, app_dult.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = app_dult_svc_init &rArr; app_dult_add_service &rArr; gatt_svc_add &rArr; calloc
</UL>
<BR>[Calls]<UL><LI><a href="#[7fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dult_add_service
</UL>
<BR>[Called By]<UL><LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_third_party_srv_init
</UL>

<P><STRONG><a name="[7fe]"></a>app_dult_ring_duration_timer_start</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, app_dult_device.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = app_dult_ring_duration_timer_start &rArr; app_start_timer &rArr; remove_timeout_msg_from_list
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_start_timer
</UL>
<BR>[Called By]<UL><LI><a href="#[7f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dult_device_sound_start
</UL>

<P><STRONG><a name="[7ff]"></a>app_dult_ring_duration_timer_stop</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, app_dult_device.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = app_dult_ring_duration_timer_stop &rArr; app_stop_timer &rArr; remove_timeout_msg_from_list
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_stop_timer
</UL>
<BR>[Called By]<UL><LI><a href="#[506]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dult_device_sound_stop
</UL>

<P><STRONG><a name="[7f9]"></a>app_dult_device_sound_start</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, app_dult_device.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 600<LI>Call Chain = app_dult_device_sound_start &rArr; app_audio_tone_type_play &rArr; voice_prompt_play &rArr; notification_push &rArr; notification_play &rArr; notification_path_start &rArr; notification_start_vp &rArr; audio_path_start &rArr; audio_path_schedule &rArr; audio_path_voice_start &rArr; dsp_mgr_session_enable &rArr; dsp_state_machine &rArr; dsp_power_on &rArr; dsp_hal_reset &rArr; shm_enable &rArr; h2d_cmd_send &rArr; shm_cmd_send &rArr; wr_queue_send
</UL>
<BR>[Calls]<UL><LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_tone_type_play
<LI><a href="#[7fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dult_ring_duration_timer_start
<LI><a href="#[800]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dult_get_tone_type
<LI><a href="#[7f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dult_report_cmd_rsp
</UL>
<BR>[Called By]<UL><LI><a href="#[7f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dult_handle_ctrl_opcode
</UL>

<P><STRONG><a name="[506]"></a>app_dult_device_sound_stop</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, app_dult_device.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = app_dult_device_sound_stop &rArr; app_audio_tone_type_cancel &rArr; voice_prompt_cancel &rArr; notification_cancel &rArr; notification_stop &rArr; audio_path_stop &rArr; audio_path_state_set &rArr; sys_event_flag_post &rArr; sys_event_flag_abort
</UL>
<BR>[Calls]<UL><LI><a href="#[45f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_tone_type_cancel
<LI><a href="#[7ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dult_ring_duration_timer_stop
<LI><a href="#[800]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dult_get_tone_type
<LI><a href="#[7f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dult_sound_complete_handle
</UL>
<BR>[Called By]<UL><LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_handle_action
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dult_timer_cb
<LI><a href="#[7f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dult_handle_ctrl_opcode
</UL>

<P><STRONG><a name="[7fa]"></a>app_dult_id_read_state_get</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, app_dult_device.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dult_handle_ctrl_opcode
</UL>

<P><STRONG><a name="[534]"></a>app_dult_id_read_state_enable</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, app_dult_device.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = app_dult_id_read_state_enable &rArr; app_start_timer &rArr; remove_timeout_msg_from_list
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_start_timer
</UL>
<BR>[Called By]<UL><LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_handle_action
</UL>

<P><STRONG><a name="[503]"></a>app_dult_device_get_ring_state</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, app_dult_device.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_handle_action
</UL>

<P><STRONG><a name="[7f5]"></a>app_dult_device_set_ring_state</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, app_dult_device.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dult_sound_complete_handle
</UL>

<P><STRONG><a name="[4ca]"></a>app_dult_device_init</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, app_dult_device.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = app_dult_device_init &rArr; app_timer_reg_cb
</UL>
<BR>[Calls]<UL><LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_reg_cb
<LI><a href="#[47c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_mgr_cback_register
</UL>
<BR>[Called By]<UL><LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_third_party_srv_init
<LI><a href="#[4c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_bt_and_ble_ready_check
</UL>

<P><STRONG><a name="[10e]"></a>dult_attr_write_cb</STRONG> (Thumb, 88 bytes, Stack size 32 bytes, app_dult_svc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = dult_attr_write_cb
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_dult_svc.o(.constdata)
</UL>
<P><STRONG><a name="[10f]"></a>dult_cccd_update_cb</STRONG> (Thumb, 86 bytes, Stack size 32 bytes, app_dult_svc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = dult_cccd_update_cb
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_dult_svc.o(.constdata)
</UL>
<P><STRONG><a name="[7f4]"></a>app_dult_send_indication</STRONG> (Thumb, 50 bytes, Stack size 40 bytes, app_dult_svc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = app_dult_send_indication &rArr; gatt_svc_send_data &rArr; gatt_svc_send_data_in_queue &rArr; calloc
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[801]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_svc_send_data
</UL>
<BR>[Called By]<UL><LI><a href="#[7f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dult_report_cmd_rsp
<LI><a href="#[7f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dult_sound_complete_handle
<LI><a href="#[7f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dult_handle_ctrl_opcode
<LI><a href="#[7f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dult_handle_info_opcode
</UL>

<P><STRONG><a name="[7f7]"></a>app_dult_report_cmd_rsp</STRONG> (Thumb, 64 bytes, Stack size 32 bytes, app_dult_svc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = app_dult_report_cmd_rsp &rArr; app_dult_send_indication &rArr; gatt_svc_send_data &rArr; gatt_svc_send_data_in_queue &rArr; calloc
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[7f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dult_send_indication
</UL>
<BR>[Called By]<UL><LI><a href="#[7f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dult_device_sound_start
<LI><a href="#[7f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dult_handle_ctrl_opcode
<LI><a href="#[7f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dult_handle_info_opcode
</UL>

<P><STRONG><a name="[7fd]"></a>app_dult_add_service</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, app_dult_svc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = app_dult_add_service &rArr; gatt_svc_add &rArr; calloc
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[802]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_svc_add
</UL>
<BR>[Called By]<UL><LI><a href="#[68c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dult_svc_init
</UL>

<P><STRONG><a name="[5d0]"></a>app_lea_adv_linkbacking</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, app_lea_adv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = app_lea_adv_linkbacking
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[5ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_stable_sched
</UL>

<P><STRONG><a name="[803]"></a>app_lea_adv_linkback_set</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, app_lea_adv.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[896]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_handle_le_disconnect
</UL>

<P><STRONG><a name="[804]"></a>app_lea_adv_linkback_check</STRONG> (Thumb, 230 bytes, Stack size 48 bytes, app_lea_adv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = app_lea_adv_linkback_check &rArr; app_start_timer &rArr; remove_timeout_msg_from_list
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_stop_timer
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_start_timer
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_get_state
<LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_get_lea_link_num
<LI><a href="#[540]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_point_lea_link_num_get
<LI><a href="#[806]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_point_le_link_is_full
<LI><a href="#[67b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_valid_b2s_bond_bum
<LI><a href="#[805]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_mgr_lea_bond_num
</UL>
<BR>[Called By]<UL><LI><a href="#[5dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_adv_update
</UL>

<P><STRONG><a name="[5dc]"></a>app_lea_adv_update</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, app_lea_adv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = app_lea_adv_update &rArr; app_lea_adv_set_ext_data &rArr; app_gfps_update_announcement &rArr; ble_ext_adv_mgr_set_scan_response_data &rArr; ble_ext_adv_mgr_start_set_adv_param &rArr; ble_ext_adv_mgr_send_msg &rArr; ble_ext_adv_mgr_find_by_handle
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_get_state
<LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_set_adv_data
<LI><a href="#[808]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_state_get
<LI><a href="#[804]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_adv_linkback_check
<LI><a href="#[809]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_adv_set_ext_data
</UL>
<BR>[Called By]<UL><LI><a href="#[5d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_enter_state
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_adv_timeout_cb
<LI><a href="#[896]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_handle_le_disconnect
</UL>

<P><STRONG><a name="[80d]"></a>app_lea_adv_stop</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, app_lea_adv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = app_lea_adv_stop &rArr; ble_ext_adv_mgr_disable &rArr; ble_ext_adv_mgr_send_msg &rArr; ble_ext_adv_mgr_find_by_handle
</UL>
<BR>[Calls]<UL><LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[383]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_mgr_dev_ctrl
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_adv_timeout_cb
<LI><a href="#[89b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_link_idle
<LI><a href="#[908]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_legacy_link_status
<LI><a href="#[905]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_shutdown
<LI><a href="#[900]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_terminate_cis
</UL>

<P><STRONG><a name="[8a7]"></a>app_lea_adv_set_started_flag</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, app_lea_adv.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[8a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_handle_cccd_msg
</UL>

<P><STRONG><a name="[720]"></a>app_lea_adv_start</STRONG> (Thumb, 142 bytes, Stack size 24 bytes, app_lea_adv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = app_lea_adv_start &rArr; ble_ext_adv_mgr_change_adv_interval &rArr; ble_ext_adv_mgr_set_adv_param &rArr; ble_ext_adv_mgr_disable &rArr; ble_ext_adv_mgr_send_msg &rArr; ble_ext_adv_mgr_find_by_handle
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_start_timer
<LI><a href="#[435]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_enable
<LI><a href="#[544]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_point_lea_link_is_full
<LI><a href="#[6d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_vendor_set_adv_extend_misc
<LI><a href="#[73f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_change_adv_interval
</UL>
<BR>[Called By]<UL><LI><a href="#[383]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_mgr_dev_ctrl
<LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_le_device_adv_start
<LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sass_handle_le_dm
<LI><a href="#[3c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_adv_check_restart_adv
<LI><a href="#[721]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_cb_handle_accountkey
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sass_policy_bt_cback
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_le_disconnect_cb
<LI><a href="#[89b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_link_idle
<LI><a href="#[908]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_legacy_link_status
</UL>

<P><STRONG><a name="[3c5]"></a>app_lea_adv_check_restart_adv</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, app_lea_adv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = app_lea_adv_check_restart_adv &rArr; app_lea_adv_start &rArr; ble_ext_adv_mgr_change_adv_interval &rArr; ble_ext_adv_mgr_set_adv_param &rArr; ble_ext_adv_mgr_disable &rArr; ble_ext_adv_mgr_send_msg &rArr; ble_ext_adv_mgr_find_by_handle
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[720]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_adv_start
</UL>
<BR>[Called By]<UL><LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_gap_handle_new_conn_state_evt
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_adv_callback
</UL>

<P><STRONG><a name="[80f]"></a>app_lea_adv_update_interval</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, app_lea_adv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = app_lea_adv_update_interval &rArr; ble_ext_adv_mgr_change_adv_interval &rArr; ble_ext_adv_mgr_set_adv_param &rArr; ble_ext_adv_mgr_disable &rArr; ble_ext_adv_mgr_send_msg &rArr; ble_ext_adv_mgr_find_by_handle
</UL>
<BR>[Calls]<UL><LI><a href="#[73f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_change_adv_interval
</UL>
<BR>[Called By]<UL><LI><a href="#[89b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_link_idle
</UL>

<P><STRONG><a name="[810]"></a>app_lea_adv_update_interval_hfp</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, app_lea_adv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = app_lea_adv_update_interval_hfp &rArr; ble_ext_adv_mgr_change_adv_interval &rArr; ble_ext_adv_mgr_set_adv_param &rArr; ble_ext_adv_mgr_disable &rArr; ble_ext_adv_mgr_send_msg &rArr; ble_ext_adv_mgr_find_by_handle
</UL>
<BR>[Calls]<UL><LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_get_call_status
<LI><a href="#[73f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_change_adv_interval
<LI><a href="#[80e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_get_adv_interval
<LI><a href="#[808]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_state_get
</UL>
<BR>[Called By]<UL><LI><a href="#[45b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_legacy_update_call_status
</UL>

<P><STRONG><a name="[89c]"></a>app_lea_adv_get_state</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, app_lea_adv.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[89b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_link_idle
<LI><a href="#[900]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_terminate_cis
</UL>

<P><STRONG><a name="[4c7]"></a>app_lea_adv_init</STRONG> (Thumb, 144 bytes, Stack size 88 bytes, app_lea_adv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = app_lea_adv_init &rArr; ble_ext_adv_mgr_change_adv_phy &rArr; ble_ext_adv_mgr_set_adv_param &rArr; ble_ext_adv_mgr_disable &rArr; ble_ext_adv_mgr_send_msg &rArr; ble_ext_adv_mgr_find_by_handle
</UL>
<BR>[Calls]<UL><LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_reg_cb
<LI><a href="#[43e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_register_callback
<LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_init_adv_params
<LI><a href="#[811]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_change_adv_phy
<LI><a href="#[805]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_mgr_lea_bond_num
<LI><a href="#[809]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_adv_set_ext_data
</UL>
<BR>[Called By]<UL><LI><a href="#[4c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_bt_and_ble_ready_check
</UL>

<P><STRONG><a name="[814]"></a>app_lea_ascs_find_ase_entry</STRONG> (Thumb, 82 bytes, Stack size 40 bytes, app_lea_ascs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = app_lea_ascs_find_ase_entry &rArr; app_lea_ascs_check_ase_condition &rArr; audio_track_device_get &rArr; audio_track_handle_check
</UL>
<BR>[Calls]<UL><LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_find_le_link_by_conn_handle
<LI><a href="#[812]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_ascs_check_ase_condition
</UL>
<BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_ascs_ble_audio_cback
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_audio_cback
<LI><a href="#[89f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_handle_ascs_msg
<LI><a href="#[899]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_link_connected
<LI><a href="#[898]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_link_streaming
<LI><a href="#[88f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_prefer_qos
<LI><a href="#[88e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_setup_data_path
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_record_read_cb
<LI><a href="#[884]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_remove_data_path
<LI><a href="#[883]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_ase_ctrl
<LI><a href="#[87d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_release_ascs_action
<LI><a href="#[87b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_handle_avrcp_playing
<LI><a href="#[85e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_set_mic_mute
<LI><a href="#[863]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_mgr_cis_mtc_if_handle
<LI><a href="#[94c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_devinfo_set
<LI><a href="#[8f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_ase_release
</UL>

<P><STRONG><a name="[815]"></a>app_lea_ascs_get_context</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, app_lea_ascs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = app_lea_ascs_get_context
</UL>
<BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_ascs_ble_audio_cback
</UL>

<P><STRONG><a name="[817]"></a>app_lea_ascs_free_ase_entry</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, app_lea_ascs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 448<LI>Call Chain = app_lea_ascs_free_ase_entry &rArr; audio_track_release &rArr; audio_session_state_set &rArr;  audio_mgr_dispatch (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
<LI><a href="#[53d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_release
<LI><a href="#[818]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ascs_app_ctl_handshake
</UL>
<BR>[Called By]<UL><LI><a href="#[883]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_ase_ctrl
<LI><a href="#[87d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_release_ascs_action
</UL>

<P><STRONG><a name="[819]"></a>app_lea_ascs_find_ase_entry_by_direction</STRONG> (Thumb, 78 bytes, Stack size 24 bytes, app_lea_ascs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = app_lea_ascs_find_ase_entry_by_direction &rArr; audio_track_state_get &rArr; audio_track_handle_check
</UL>
<BR>[Calls]<UL><LI><a href="#[477]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_state_get
</UL>
<BR>[Called By]<UL><LI><a href="#[683]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_mgr_is_upstreaming
<LI><a href="#[85d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_vol_update_track_volume
<LI><a href="#[861]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_handle_iso_data
<LI><a href="#[848]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_mgr_is_downstreaming
<LI><a href="#[94c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_devinfo_set
</UL>

<P><STRONG><a name="[81a]"></a>app_lea_ascs_find_ase_entry_non_conn</STRONG> (Thumb, 108 bytes, Stack size 40 bytes, app_lea_ascs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = app_lea_ascs_find_ase_entry_non_conn &rArr; app_lea_ascs_check_ase_condition &rArr; audio_track_device_get &rArr; audio_track_handle_check
</UL>
<BR>[Calls]<UL><LI><a href="#[812]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_ascs_check_ase_condition
</UL>
<BR>[Called By]<UL><LI><a href="#[663]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_set_sidetone_instance
<LI><a href="#[8a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_enable_mic
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_audio_cback
<LI><a href="#[878]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_handle_ccp_state
<LI><a href="#[876]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_handle_ccp_term
<LI><a href="#[85e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_set_mic_mute
<LI><a href="#[861]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_handle_iso_data
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_mgr_probe_cback
<LI><a href="#[94c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_devinfo_set
</UL>

<P><STRONG><a name="[7ec]"></a>app_lea_ascs_get_enable_ase_num</STRONG> (Thumb, 84 bytes, Stack size 24 bytes, app_lea_ascs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = app_lea_ascs_get_enable_ase_num
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[5ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sass_preempt_policy
</UL>

<P><STRONG><a name="[81b]"></a>app_lea_ascs_init</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, app_lea_ascs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = app_lea_ascs_init &rArr; ble_audio_cback_register &rArr; calloc
</UL>
<BR>[Calls]<UL><LI><a href="#[81c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_cback_register
</UL>
<BR>[Called By]<UL><LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_profile_init
</UL>

<P><STRONG><a name="[81e]"></a>app_lea_ccp_set_active_conn_handle</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, app_lea_ccp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = app_lea_ccp_set_active_conn_handle &rArr; app_link_find_le_link_by_conn_handle
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_find_le_link_by_conn_handle
</UL>
<BR>[Called By]<UL><LI><a href="#[81f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_ccp_update_call_status
<LI><a href="#[893]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_adjust_active_handle_by_connection
</UL>

<P><STRONG><a name="[852]"></a>app_lea_ccp_get_active_conn_handle</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, app_lea_ccp.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[539]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_topology_dm
<LI><a href="#[50b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_mgr_mmi_handle
<LI><a href="#[53a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_mgr_find_call_device_by_priority
<LI><a href="#[7c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_get_active_link
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_audio_cback
<LI><a href="#[89f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_handle_ascs_msg
<LI><a href="#[899]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_link_connected
<LI><a href="#[893]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_adjust_active_handle_by_connection
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_record_read_cb
<LI><a href="#[85d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_vol_update_track_volume
</UL>

<P><STRONG><a name="[81f]"></a>app_lea_ccp_update_call_status</STRONG> (Thumb, 282 bytes, Stack size 32 bytes, app_lea_ccp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1148<LI>Call Chain = app_lea_ccp_update_call_status &rArr; app_gfps_notify_conn_status &rArr; app_gfps_adv_update_conn_status &rArr; app_gfps_device_check_state &rArr; app_gfps_enter_nondiscoverable_mode &rArr; app_gfps_next_action &rArr; app_gfps_battery_info_report &rArr; app_gfps_battery_set_info &rArr; gfps_gen_adv_data &rArr; gfps_sass_get_encrypt_conn_status &rArr; sha256_hkdf &rArr; hmac_sha256_crypt &rArr; hmac_sha256_finish &rArr; mbedtls_sha256_update &rArr; mbedtls_sha256_update_ret &rArr; mbedtls_internal_sha256_process
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_find_le_link_by_conn_handle
<LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_ota_exit
<LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_ble_ota_get_upgrate_status
<LI><a href="#[59c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_notify_conn_status
<LI><a href="#[81e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_ccp_set_active_conn_handle
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_ccp_ble_audio_cback
<LI><a href="#[896]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_handle_le_disconnect
</UL>

<P><STRONG><a name="[821]"></a>app_lea_ccp_find_call_entry_by_idx</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, app_lea_ccp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = app_lea_ccp_find_call_entry_by_idx &rArr; app_link_find_le_link_by_conn_id
</UL>
<BR>[Calls]<UL><LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_find_le_link_by_conn_id
</UL>
<BR>[Called By]<UL><LI><a href="#[50b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_mgr_mmi_handle
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_ccp_ble_audio_cback
<LI><a href="#[824]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_ccp_parse_payload
</UL>

<P><STRONG><a name="[895]"></a>app_lea_ccp_reset_active_conn_handle</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, app_lea_ccp.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[893]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_adjust_active_handle_by_connection
</UL>

<P><STRONG><a name="[37c]"></a>app_lea_ccp_get_call_status</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, app_lea_ccp.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_key_single_click
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_get_call_status
<LI><a href="#[45b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_legacy_update_call_status
<LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_link_sm
<LI><a href="#[5aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_if_fm_ml_handle
<LI><a href="#[539]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_topology_dm
<LI><a href="#[50b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_mgr_mmi_handle
<LI><a href="#[758]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_msg_notify_connection_status
<LI><a href="#[663]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_set_sidetone_instance
<LI><a href="#[657]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_cmd_handle
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_bt_cback
<LI><a href="#[603]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_if_fm_ap_handle
<LI><a href="#[7c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_get_active_link
<LI><a href="#[90b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_le_connection_update
<LI><a href="#[8f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_cis_ase_release
<LI><a href="#[8e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_check_call_sate
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_audio_cback
<LI><a href="#[89f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_handle_ascs_msg
<LI><a href="#[898]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_link_streaming
<LI><a href="#[88e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_setup_data_path
<LI><a href="#[884]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_remove_data_path
<LI><a href="#[87d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_release_ascs_action
<LI><a href="#[879]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_handle_mcp_state
<LI><a href="#[85d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_vol_update_track_volume
<LI><a href="#[85e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_set_mic_mute
<LI><a href="#[94c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_devinfo_set
<LI><a href="#[907]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_ccp_check
</UL>

<P><STRONG><a name="[827]"></a>app_lea_ccp_release_active_call</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, app_lea_ccp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = app_lea_ccp_release_active_call &rArr; ccp_client_write_call_cp &rArr; tbs_write_char_value &rArr; gatt_client_write &rArr; gattc_storage_check_prop &rArr; gattc_storage_find_char_desc
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[829]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ccp_client_write_call_cp
<LI><a href="#[828]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_cpp_get_active_call_entry
</UL>
<BR>[Called By]<UL><LI><a href="#[50b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_mgr_mmi_handle
</UL>

<P><STRONG><a name="[82a]"></a>app_lea_ccp_accept_hold_or_wait_call</STRONG> (Thumb, 108 bytes, Stack size 32 bytes, app_lea_ccp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = app_lea_ccp_accept_hold_or_wait_call &rArr; ccp_client_write_call_cp &rArr; tbs_write_char_value &rArr; gatt_client_write &rArr; gattc_storage_check_prop &rArr; gattc_storage_find_char_desc
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[829]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ccp_client_write_call_cp
<LI><a href="#[828]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_cpp_get_active_call_entry
</UL>
<BR>[Called By]<UL><LI><a href="#[50b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_mgr_mmi_handle
</UL>

<P><STRONG><a name="[82b]"></a>app_lea_ccp_read_all_links_state</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, app_lea_ccp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = app_lea_ccp_read_all_links_state &rArr; ccp_client_read_char_value &rArr; tbs_read_char_value &rArr; gatt_client_read &rArr; gattc_storage_check_prop &rArr; gattc_storage_find_char_desc
</UL>
<BR>[Calls]<UL><LI><a href="#[826]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ccp_client_read_char_value
</UL>
<BR>[Called By]<UL><LI><a href="#[899]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_link_connected
<LI><a href="#[898]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_link_streaming
</UL>

<P><STRONG><a name="[82c]"></a>app_lea_ccp_init</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, app_lea_ccp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = app_lea_ccp_init &rArr; ble_audio_cback_register &rArr; calloc
</UL>
<BR>[Calls]<UL><LI><a href="#[81c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_cback_register
</UL>
<BR>[Called By]<UL><LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_profile_init
</UL>

<P><STRONG><a name="[5df]"></a>app_lea_mcp_get_active_conn_handle</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, app_lea_mcp.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_mgr_is_media_streaming
<LI><a href="#[45b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_legacy_update_call_status
<LI><a href="#[5dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_prepare_for_dedicated_enter_pairing_mode
<LI><a href="#[539]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_topology_dm
<LI><a href="#[50b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_mgr_mmi_handle
<LI><a href="#[7c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_get_active_link
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_timeout_cb
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_audio_cback
<LI><a href="#[89f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_handle_ascs_msg
<LI><a href="#[899]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_link_connected
<LI><a href="#[893]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_adjust_active_handle_by_connection
<LI><a href="#[85d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_vol_update_track_volume
<LI><a href="#[94c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_devinfo_set
<LI><a href="#[90a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_legacy_bt_cback
<LI><a href="#[8f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_ase_release
</UL>

<P><STRONG><a name="[894]"></a>app_lea_mcp_reset_active_conn_handle</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, app_lea_mcp.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[893]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_adjust_active_handle_by_connection
</UL>

<P><STRONG><a name="[82f]"></a>app_lea_mcp_set_active_conn_handle</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, app_lea_mcp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = app_lea_mcp_set_active_conn_handle &rArr; app_link_find_le_link_by_conn_handle
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_find_le_link_by_conn_handle
</UL>
<BR>[Called By]<UL><LI><a href="#[893]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_adjust_active_handle_by_connection
<LI><a href="#[88e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_setup_data_path
<LI><a href="#[879]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_handle_mcp_state
</UL>

<P><STRONG><a name="[7e6]"></a>app_lea_mcp_play_pause</STRONG> (Thumb, 78 bytes, Stack size 32 bytes, app_lea_mcp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = app_lea_mcp_play_pause &rArr; mcp_client_write_media_cp &rArr; gatt_client_write &rArr; gattc_storage_check_prop &rArr; gattc_storage_find_char_desc
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_find_le_link_by_conn_handle
<LI><a href="#[830]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcp_client_write_media_cp
</UL>
<BR>[Called By]<UL><LI><a href="#[5a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_preemptive_judge
<LI><a href="#[4e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sass_policy_profile_conn_handle
<LI><a href="#[6bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sass_policy_switch_back
<LI><a href="#[6ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sass_policy_switch_active_audio_source
</UL>

<P><STRONG><a name="[831]"></a>app_lea_mcp_init</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, app_lea_mcp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = app_lea_mcp_init &rArr; ble_audio_cback_register &rArr; calloc
</UL>
<BR>[Calls]<UL><LI><a href="#[81c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_cback_register
</UL>
<BR>[Called By]<UL><LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_profile_init
</UL>

<P><STRONG><a name="[3d4]"></a>app_lea_pacs_init_available_context</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, app_lea_pacs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = app_lea_pacs_init_available_context &rArr; pacs_update_available_contexts &rArr; pacs_send_notify &rArr; gatt_svc_send_data &rArr; gatt_svc_send_data_in_queue &rArr; calloc
</UL>
<BR>[Calls]<UL><LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_find_le_link_by_conn_handle
<LI><a href="#[836]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pacs_update_available_contexts
</UL>
<BR>[Called By]<UL><LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_gap_handle_new_conn_state_evt
</UL>

<P><STRONG><a name="[837]"></a>app_lea_pacs_set_sink_available_contexts</STRONG> (Thumb, 86 bytes, Stack size 32 bytes, app_lea_pacs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = app_lea_pacs_set_sink_available_contexts &rArr; pacs_update_available_contexts &rArr; pacs_send_notify &rArr; gatt_svc_send_data &rArr; gatt_svc_send_data_in_queue &rArr; calloc
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_find_le_link_by_conn_handle
<LI><a href="#[836]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pacs_update_available_contexts
</UL>
<BR>[Called By]<UL><LI><a href="#[863]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_mgr_cis_mtc_if_handle
</UL>

<P><STRONG><a name="[80a]"></a>app_lea_pacs_get_sink_available_contexts</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, app_lea_pacs.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[809]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_adv_set_ext_data
<LI><a href="#[863]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_mgr_cis_mtc_if_handle
</UL>

<P><STRONG><a name="[80b]"></a>app_lea_pacs_get_source_available_contexts</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, app_lea_pacs.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[809]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_adv_set_ext_data
</UL>

<P><STRONG><a name="[838]"></a>app_lea_pacs_init</STRONG> (Thumb, 244 bytes, Stack size 48 bytes, app_lea_pacs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = app_lea_pacs_init &rArr; pacs_init &rArr; pacs_add_service &rArr; pacs_create_table &rArr; calloc
</UL>
<BR>[Calls]<UL><LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[839]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pacs_pac_add
<LI><a href="#[83a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pacs_init
<LI><a href="#[833]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_pacs_set_pac
<LI><a href="#[81c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_cback_register
</UL>
<BR>[Called By]<UL><LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_profile_init
</UL>

<P><STRONG><a name="[840]"></a>app_lea_scan_start</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, app_lea_scan.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = app_lea_scan_start &rArr; ble_scan_start &rArr; ble_scan_param_update &rArr; ble_scan_get_cur_state
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[841]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_scan_start
</UL>
<BR>[Called By]<UL><LI><a href="#[8bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_scan_start
</UL>

<P><STRONG><a name="[842]"></a>app_lea_scan_stop</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, app_lea_scan.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = app_lea_scan_stop &rArr; ble_scan_stop &rArr; ble_scan_param_update &rArr; ble_scan_get_cur_state
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[843]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_scan_stop
</UL>
<BR>[Called By]<UL><LI><a href="#[8b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_scan_stop
</UL>

<P><STRONG><a name="[845]"></a>app_lea_vcs_init</STRONG> (Thumb, 86 bytes, Stack size 32 bytes, app_lea_vcs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = app_lea_vcs_init &rArr; vcs_set_param &rArr; vcs_send_volume_state_notify_all &rArr; ble_audio_send_notify_all &rArr; gatt_svc_send_data &rArr; gatt_svc_send_data_in_queue &rArr; calloc
</UL>
<BR>[Calls]<UL><LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
<LI><a href="#[81c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_cback_register
<LI><a href="#[847]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vcs_set_param
<LI><a href="#[846]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_vc_mic_init
</UL>
<BR>[Called By]<UL><LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_profile_init
</UL>

<P><STRONG><a name="[35f]"></a>app_lea_mgr_is_media_streaming</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, app_lea_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = app_lea_mgr_is_media_streaming &rArr; app_link_find_le_link_by_conn_handle
</UL>
<BR>[Calls]<UL><LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_get_btmode
<LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_find_le_link_by_conn_handle
<LI><a href="#[5df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_mcp_get_active_conn_handle
<LI><a href="#[5c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_state
</UL>
<BR>[Called By]<UL><LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_led_check_repeat_mode
</UL>

<P><STRONG><a name="[848]"></a>app_lea_mgr_is_downstreaming</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, app_lea_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = app_lea_mgr_is_downstreaming &rArr; app_lea_ascs_find_ase_entry_by_direction &rArr; audio_track_state_get &rArr; audio_track_handle_check
</UL>
<BR>[Calls]<UL><LI><a href="#[5c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_state
<LI><a href="#[819]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_ascs_find_ase_entry_by_direction
</UL>
<BR>[Called By]<UL><LI><a href="#[4e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_mgr_update_sniff_mask
<LI><a href="#[8ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_poweroff_check
</UL>

<P><STRONG><a name="[683]"></a>app_lea_mgr_is_upstreaming</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, app_lea_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = app_lea_mgr_is_upstreaming &rArr; app_lea_ascs_find_ase_entry_by_direction &rArr; audio_track_state_get &rArr; audio_track_handle_check
</UL>
<BR>[Calls]<UL><LI><a href="#[819]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_ascs_find_ase_entry_by_direction
</UL>
<BR>[Called By]<UL><LI><a href="#[5a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_qos_param_update
</UL>

<P><STRONG><a name="[849]"></a>app_lea_mgr_update_current_mcp_state</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, app_lea_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = app_lea_mgr_update_current_mcp_state
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[8a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_handle_mcp_msg
</UL>

<P><STRONG><a name="[805]"></a>app_lea_mgr_lea_bond_num</STRONG> (Thumb, 72 bytes, Stack size 24 bytes, app_lea_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = app_lea_mgr_lea_bond_num
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[84c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_le_get_max_le_paired_device_num
<LI><a href="#[84b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_le_get_bond_flag
<LI><a href="#[84a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_le_find_key_entry_by_idx
</UL>
<BR>[Called By]<UL><LI><a href="#[4c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_adv_init
<LI><a href="#[804]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_adv_linkback_check
</UL>

<P><STRONG><a name="[84d]"></a>app_lea_mgr_clear_iso_queue</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, app_lea_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = app_lea_mgr_clear_iso_queue &rArr; audio_probe_media_buffer_free &rArr; media_buffer_put
</UL>
<BR>[Calls]<UL><LI><a href="#[84e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_probe_media_buffer_free
</UL>
<BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_sync_cb
<LI><a href="#[884]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_remove_data_path
</UL>

<P><STRONG><a name="[84f]"></a>app_lea_mgr_enqueue_iso_data</STRONG> (Thumb, 140 bytes, Stack size 24 bytes, app_lea_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = app_lea_mgr_enqueue_iso_data &rArr; audio_probe_media_buffer_malloc &rArr; media_buffer_get
</UL>
<BR>[Calls]<UL><LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[850]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_probe_media_buffer_malloc
<LI><a href="#[84e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_probe_media_buffer_free
</UL>
<BR>[Called By]<UL><LI><a href="#[8ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_check_combination_iso_data
<LI><a href="#[8a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_check_combination_iso_data
</UL>

<P><STRONG><a name="[851]"></a>app_lea_mgr_find_iso_elem</STRONG> (Thumb, 162 bytes, Stack size 48 bytes, app_lea_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = app_lea_mgr_find_iso_elem &rArr; audio_probe_media_buffer_free &rArr; media_buffer_put
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[84e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_probe_media_buffer_free
</UL>
<BR>[Called By]<UL><LI><a href="#[8ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_check_combination_iso_data
<LI><a href="#[8a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_check_combination_iso_data
</UL>

<P><STRONG><a name="[383]"></a>app_lea_mgr_dev_ctrl</STRONG> (Thumb, 176 bytes, Stack size 24 bytes, app_lea_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = app_lea_mgr_dev_ctrl &rArr; app_lea_adv_start &rArr; ble_ext_adv_mgr_change_adv_interval &rArr; ble_ext_adv_mgr_set_adv_param &rArr; ble_ext_adv_mgr_disable &rArr; ble_ext_adv_mgr_send_msg &rArr; ble_ext_adv_mgr_find_by_handle
</UL>
<BR>[Calls]<UL><LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_find_br_link
<LI><a href="#[720]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_adv_start
<LI><a href="#[60b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_device_mode_set
<LI><a href="#[80d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_adv_stop
</UL>
<BR>[Called By]<UL><LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_key_timeout_cb
<LI><a href="#[5d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_enter_state
</UL>

<P><STRONG><a name="[885]"></a>app_lea_mgr_set_media_state</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, app_lea_mgr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[8c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_track
<LI><a href="#[8c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_audio_path_reset
<LI><a href="#[886]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_track_create
<LI><a href="#[884]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_remove_data_path
</UL>

<P><STRONG><a name="[53a]"></a>app_lea_mgr_find_call_device_by_priority</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, app_lea_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = app_lea_mgr_find_call_device_by_priority &rArr; app_link_find_le_link_by_conn_handle
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_get_btmode
<LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_find_le_link_by_conn_handle
<LI><a href="#[852]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_ccp_get_active_conn_handle
</UL>
<BR>[Called By]<UL><LI><a href="#[508]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_check_lea_action
</UL>

<P><STRONG><a name="[50b]"></a>app_lea_mgr_mmi_handle</STRONG> (Thumb, 2020 bytes, Stack size 88 bytes, app_lea_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 792<LI>Call Chain = app_lea_mgr_mmi_handle &rArr; app_lea_vol_update_track_volume &rArr; app_harman_lr_balance_set &rArr; audio_volume_balance_set &rArr; audio_mgr_dispatch &rArr; audio_mgr_buffer_event_handle &rArr; audio_buffer_playing_state &rArr; audio_track_restart &rArr; audio_session_state_set &rArr;  audio_mgr_dispatch (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_get_btmode
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_ccp_get_call_status
<LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_tone_type_play
<LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_find_le_link_by_conn_handle
<LI><a href="#[5df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_mcp_get_active_conn_handle
<LI><a href="#[830]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcp_client_write_media_cp
<LI><a href="#[829]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ccp_client_write_call_cp
<LI><a href="#[82a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_ccp_accept_hold_or_wait_call
<LI><a href="#[827]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_ccp_release_active_call
<LI><a href="#[821]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_ccp_find_call_entry_by_idx
<LI><a href="#[852]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_ccp_get_active_conn_handle
<LI><a href="#[816]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_if_fm_lcis_handle
<LI><a href="#[85a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_set_beep
<LI><a href="#[85d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_vol_update_track_volume
<LI><a href="#[85c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_vol_local_volume_change
<LI><a href="#[85e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_set_mic_mute
<LI><a href="#[853]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_mgr_bca_mmi_handle
</UL>
<BR>[Called By]<UL><LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_handle_action
<LI><a href="#[508]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_check_lea_action
<LI><a href="#[90b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_le_connection_update
<LI><a href="#[8fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_terminate_bis
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_sync_cb
<LI><a href="#[8c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_release_all
<LI><a href="#[8e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_handle_bass_msg
<LI><a href="#[8fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_resume_bis
</UL>

<P><STRONG><a name="[4e0]"></a>app_lea_mgr_update_sniff_mask</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, app_lea_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = app_lea_mgr_update_sniff_mask &rArr; app_sniff_mode_b2s_disable_all &rArr; bt_sniff_mode_disable &rArr; bt_pm_sm &rArr; bt_sniff_mode_exit &rArr; sys_timer_restart &rArr; sys_hp_timer_list_insert &rArr; hw_timer_restart &rArr; hw_timer_safe_stop &rArr; hw_timer_set_div
</UL>
<BR>[Calls]<UL><LI><a href="#[499]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sniff_mode_b2s_disable_all
<LI><a href="#[848]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_mgr_is_downstreaming
</UL>
<BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_link_policy_ind
</UL>

<P><STRONG><a name="[5f3]"></a>app_lea_mgr_disc_inactive_le_link</STRONG> (Thumb, 226 bytes, Stack size 48 bytes, app_lea_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = app_lea_mgr_disc_inactive_le_link &rArr; app_multi_get_inactive_index &rArr; app_sass_policy_get_disc_link &rArr; app_sass_policy_is_sass_device &rArr; app_bond_get_pair_idx_mapping
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_gap_disconnect
<LI><a href="#[5ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_get_inactive_index
</UL>
<BR>[Called By]<UL><LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sass_handle_le_dm
<LI><a href="#[5f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_bt_event_pre_handle
<LI><a href="#[6bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sass_policy_set_multipoint_state
</UL>

<P><STRONG><a name="[8fb]"></a>app_lea_mgr_get_media_suspend_by_out_ear</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, app_lea_mgr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[8fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_streaming_exist
</UL>

<P><STRONG><a name="[863]"></a>app_lea_mgr_cis_mtc_if_handle</STRONG> (Thumb, 160 bytes, Stack size 32 bytes, app_lea_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 472<LI>Call Chain = app_lea_mgr_cis_mtc_if_handle &rArr; audio_track_start &rArr; audio_session_state_set &rArr;  audio_mgr_dispatch (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[453]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_start
<LI><a href="#[837]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_pacs_set_sink_available_contexts
<LI><a href="#[814]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_ascs_find_ase_entry
<LI><a href="#[80a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_pacs_get_sink_available_contexts
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_lea_mgr.o(.text)
</UL>
<P><STRONG><a name="[399]"></a>app_lea_bas_batt_level_report</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, app_lea_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = app_lea_bas_batt_level_report &rArr; bas_battery_level_value_notify
</UL>
<BR>[Calls]<UL><LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bas_battery_level_value_notify
<LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_find_le_link_by_conn_handle
</UL>
<BR>[Called By]<UL><LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_charger_handle_soc
</UL>

<P><STRONG><a name="[866]"></a>app_lea_mgr_init</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, app_lea_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = app_lea_mgr_init &rArr; ble_audio_init &rArr; gatt_client_init &rArr; gatt_service_add &rArr; gatt_client_spec_register &rArr; gatt_spec_client_find_by_uuid
</UL>
<BR>[Calls]<UL><LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_get_max_link_num
<LI><a href="#[867]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_register_direct_cb
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_reg_cb
<LI><a href="#[5bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_cback_register
<LI><a href="#[643]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_probe_dsp_cback_register
<LI><a href="#[869]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_init
<LI><a href="#[868]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_init
</UL>
<BR>[Called By]<UL><LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_profile_init
</UL>

<P><STRONG><a name="[315]"></a>app_lea_profile_init</STRONG> (Thumb, 92 bytes, Stack size 40 bytes, app_lea_profile.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = app_lea_profile_init &rArr; app_lea_vcs_init &rArr; vcs_set_param &rArr; vcs_send_volume_state_notify_all &rArr; ble_audio_send_notify_all &rArr; gatt_svc_send_data &rArr; gatt_svc_send_data_in_queue &rArr; calloc
</UL>
<BR>[Calls]<UL><LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
<LI><a href="#[838]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_pacs_init
<LI><a href="#[831]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_mcp_init
<LI><a href="#[82c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_ccp_init
<LI><a href="#[81b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_ascs_init
<LI><a href="#[86e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmas_init
<LI><a href="#[86d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cap_init
<LI><a href="#[86f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_vol_init
<LI><a href="#[86a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_init
<LI><a href="#[86b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_init
<LI><a href="#[86c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_profile_bap_init
<LI><a href="#[866]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_mgr_init
<LI><a href="#[845]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_vcs_init
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[80c]"></a>app_lea_profile_get_tmas_role</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, app_lea_profile.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[809]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_adv_set_ext_data
</UL>

<P><STRONG><a name="[872]"></a>app_lea_uca_set_stream_link</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, app_lea_unicast_audio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = app_lea_uca_set_stream_link &rArr; app_gfps_msg_notify_multipoint_switch &rArr; bt_gfps_notify_multipoint_switch &rArr; bt_gfps_send_data &rArr; bt_rfc_data_send &rArr; rfc_data_req &rArr; rfc_check_send_credits &rArr; crc8EtsGen
</UL>
<BR>[Calls]<UL><LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_get_btmode
<LI><a href="#[59d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_msg_notify_multipoint_switch
<LI><a href="#[7c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sass_policy_context_to_conn_state
</UL>
<BR>[Called By]<UL><LI><a href="#[89f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_handle_ascs_msg
<LI><a href="#[899]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_link_connected
<LI><a href="#[88e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_setup_data_path
<LI><a href="#[884]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_remove_data_path
<LI><a href="#[879]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_handle_mcp_state
</UL>

<P><STRONG><a name="[7c1]"></a>app_lea_uca_get_stream_link</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, app_lea_unicast_audio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sass_preempt_policy
<LI><a href="#[5a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_preemptive_judge
<LI><a href="#[758]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_msg_notify_connection_status
<LI><a href="#[6bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sass_policy_switch_back
<LI><a href="#[6ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sass_policy_switch_active_audio_source
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_mgr_direct_cback
</UL>

<P><STRONG><a name="[7c0]"></a>app_lea_uca_get_active_link</STRONG> (Thumb, 94 bytes, Stack size 8 bytes, app_lea_unicast_audio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = app_lea_uca_get_active_link &rArr; app_link_find_le_link_by_conn_handle
</UL>
<BR>[Calls]<UL><LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_ccp_get_call_status
<LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_find_le_link_by_conn_handle
<LI><a href="#[5df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_mcp_get_active_conn_handle
<LI><a href="#[852]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_ccp_get_active_conn_handle
</UL>
<BR>[Called By]<UL><LI><a href="#[5ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_get_inactive_index
<LI><a href="#[755]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_get_active_idx
<LI><a href="#[74b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sass_policy_get_connection_state
<LI><a href="#[758]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_msg_notify_connection_status
<LI><a href="#[7f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sass_policy_get_disc_link
</UL>

<P><STRONG><a name="[875]"></a>app_lea_uca_check_enable_mic</STRONG> (Thumb, 110 bytes, Stack size 16 bytes, app_lea_unicast_audio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = app_lea_uca_check_enable_mic
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_audio_cback
<LI><a href="#[876]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_handle_ccp_term
</UL>

<P><STRONG><a name="[87c]"></a>app_lea_uca_eq_release</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, app_lea_unicast_audio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = app_lea_uca_eq_release &rArr; eq_release &rArr; audio_effect_release
</UL>
<BR>[Calls]<UL><LI><a href="#[53e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eq_release
</UL>
<BR>[Called By]<UL><LI><a href="#[8c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_audio_path_reset
<LI><a href="#[897]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_free_link
<LI><a href="#[883]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_ase_ctrl
<LI><a href="#[87d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_release_ascs_action
</UL>

<P><STRONG><a name="[3d3]"></a>app_lea_uca_link_sm</STRONG> (Thumb, 280 bytes, Stack size 48 bytes, app_lea_unicast_audio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1348<LI>Call Chain = app_lea_uca_link_sm &rArr; app_lea_uca_link_connected &rArr; app_lea_uca_remove_data_path &rArr; mtc_topology_dm &rArr;  app_lea_uca_link_sm (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_ccp_get_call_status
<LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_find_le_link_by_conn_handle
<LI><a href="#[89b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_link_idle
<LI><a href="#[899]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_link_connected
<LI><a href="#[898]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_link_streaming
</UL>
<BR>[Called By]<UL><LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_gap_handle_new_conn_state_evt
<LI><a href="#[45b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_legacy_update_call_status
<LI><a href="#[5a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_preemptive_judge
<LI><a href="#[539]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_topology_dm
<LI><a href="#[6ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sass_policy_switch_active_audio_source
<LI><a href="#[8eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_handle_cccd_msg
<LI><a href="#[8a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_handle_mcp_msg
<LI><a href="#[8a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_handle_cccd_msg
<LI><a href="#[8a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_handle_ccp_msg
<LI><a href="#[89f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_handle_ascs_msg
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_le_disconnect_cb
<LI><a href="#[90a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_legacy_bt_cback
<LI><a href="#[905]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_shutdown
<LI><a href="#[8f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_ase_release
</UL>

<P><STRONG><a name="[89d]"></a>app_lea_uca_handle_pending_mcp_cmd</STRONG> (Thumb, 90 bytes, Stack size 24 bytes, app_lea_unicast_audio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = app_lea_uca_handle_pending_mcp_cmd &rArr; mcp_client_write_media_cp &rArr; gatt_client_write &rArr; gattc_storage_check_prop &rArr; gattc_storage_find_char_desc
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_find_le_link_by_conn_handle
<LI><a href="#[830]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcp_client_write_media_cp
</UL>
<BR>[Called By]<UL><LI><a href="#[8a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_handle_mcp_msg
</UL>

<P><STRONG><a name="[66a]"></a>app_lea_uca_get_eq_instance</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, app_lea_unicast_audio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[66c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_eq_media_eq_enable
<LI><a href="#[669]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_eq_media_eq_set
</UL>

<P><STRONG><a name="[66e]"></a>app_lea_uca_p_eq_instance</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, app_lea_unicast_audio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[66c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_eq_media_eq_enable
<LI><a href="#[8c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_audio_path_reset
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_audio_cback
</UL>

<P><STRONG><a name="[66d]"></a>app_lea_uca_get_eq_abled</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, app_lea_unicast_audio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[66c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_eq_media_eq_enable
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_audio_cback
</UL>

<P><STRONG><a name="[864]"></a>app_lea_uca_get_diff_path</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, app_lea_unicast_audio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_mgr_probe_cback
<LI><a href="#[94c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_devinfo_set
</UL>

<P><STRONG><a name="[8a3]"></a>app_lea_uca_playback_eq_setting</STRONG> (Thumb, 100 bytes, Stack size 32 bytes, app_lea_unicast_audio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 648<LI>Call Chain = app_lea_uca_playback_eq_setting &rArr; app_eq_create &rArr; app_harman_get_eq_data &rArr; Double2FixPoint &rArr; pow &rArr; sqrt &rArr; _dsqrt
</UL>
<BR>[Calls]<UL><LI><a href="#[3ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_report_eq_idx
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_effect_attach
<LI><a href="#[633]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_eq_idx_check_accord_mode
<LI><a href="#[634]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_eq_create
<LI><a href="#[639]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_eq_audio_eq_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_audio_cback
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_audio_cback
</UL>

<P><STRONG><a name="[8a4]"></a>app_lea_uca_enable_mic</STRONG> (Thumb, 216 bytes, Stack size 24 bytes, app_lea_unicast_audio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 680<LI>Call Chain = app_lea_uca_enable_mic &rArr; app_lea_uca_track_create &rArr; audio_track_volume_out_unmute &rArr; audio_mgr_dispatch &rArr; audio_mgr_buffer_event_handle &rArr; audio_buffer_playing_state &rArr; audio_track_restart &rArr; audio_session_state_set &rArr;  audio_mgr_dispatch (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[45e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_volume_in_unmute
<LI><a href="#[484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_volume_in_mute
<LI><a href="#[53d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_release
<LI><a href="#[52a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_enable_play_mic_unmute_tone
<LI><a href="#[529]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_enable_play_mic_mute_tone
<LI><a href="#[81a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_ascs_find_ase_entry_non_conn
<LI><a href="#[886]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_track_create
</UL>
<BR>[Called By]<UL><LI><a href="#[4e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_check_reopen_mic
</UL>

<P><STRONG><a name="[6fe]"></a>app_lea_uca_count_num</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, app_lea_unicast_audio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = app_lea_uca_count_num
</UL>
<BR>[Called By]<UL><LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_point_link_num_changed
</UL>

<P><STRONG><a name="[861]"></a>app_lea_uca_handle_iso_data</STRONG> (Thumb, 534 bytes, Stack size 64 bytes, app_lea_unicast_audio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 752<LI>Call Chain = app_lea_uca_handle_iso_data &rArr; audio_track_write &rArr; media_buffer_ds_write &rArr; audio_mgr_dispatch &rArr; audio_mgr_buffer_event_handle &rArr; audio_buffer_playing_state &rArr; audio_track_restart &rArr; audio_session_state_set &rArr;  audio_mgr_dispatch (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_io_msg_send (via Veneer)
<LI><a href="#[477]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_state_get
<LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_find_le_link_by_conn_handle
<LI><a href="#[63c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_write
<LI><a href="#[850]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_probe_media_buffer_malloc
<LI><a href="#[84e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_probe_media_buffer_free
<LI><a href="#[81a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_ascs_find_ase_entry_non_conn
<LI><a href="#[819]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_ascs_find_ase_entry_by_direction
<LI><a href="#[8a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_check_combination_iso_data
</UL>
<BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_mgr_direct_cback
</UL>

<P><STRONG><a name="[85e]"></a>app_lea_uca_set_mic_mute</STRONG> (Thumb, 176 bytes, Stack size 32 bytes, app_lea_unicast_audio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 584<LI>Call Chain = app_lea_uca_set_mic_mute &rArr; audio_volume_in_unmute &rArr; audio_mgr_dispatch &rArr; audio_mgr_buffer_event_handle &rArr; audio_buffer_playing_state &rArr; audio_track_restart &rArr; audio_session_state_set &rArr;  audio_mgr_dispatch (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_ccp_get_call_status
<LI><a href="#[45e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_volume_in_unmute
<LI><a href="#[484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_volume_in_mute
<LI><a href="#[476]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_stream_type_get
<LI><a href="#[528]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_volume_in_is_muted
<LI><a href="#[52a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_enable_play_mic_unmute_tone
<LI><a href="#[529]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_enable_play_mic_mute_tone
<LI><a href="#[81a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_ascs_find_ase_entry_non_conn
<LI><a href="#[814]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_ascs_find_ase_entry
</UL>
<BR>[Called By]<UL><LI><a href="#[50b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_mgr_mmi_handle
</UL>

<P><STRONG><a name="[342]"></a>app_lea_uca_msg_handle</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, app_lea_unicast_audio.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[463]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_relay_async_single_with_raw_msg
</UL>
<BR>[Called By]<UL><LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_io_msg_handler
</UL>

<P><STRONG><a name="[86a]"></a>app_lea_uca_init</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, app_lea_unicast_audio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = app_lea_uca_init &rArr; bt_bond_register_app_cb &rArr; calloc
</UL>
<BR>[Calls]<UL><LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_register_app_cb
<LI><a href="#[47c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_mgr_cback_register
<LI><a href="#[81c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_cback_register
</UL>
<BR>[Called By]<UL><LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_profile_init
</UL>

<P><STRONG><a name="[8a8]"></a>app_lea_uca_is_upstreaming_enabled</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, app_lea_unicast_audio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = app_lea_uca_is_upstreaming_enabled
</UL>
<BR>[Calls]<UL><LI><a href="#[888]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_is_input_path_enabled
</UL>
<BR>[Called By]<UL><LI><a href="#[5aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_if_fm_ml_handle
<LI><a href="#[539]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_topology_dm
<LI><a href="#[603]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_if_fm_ap_handle
<LI><a href="#[94c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_devinfo_set
</UL>

<P><STRONG><a name="[663]"></a>app_lea_uca_set_sidetone_instance</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, app_lea_unicast_audio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = app_lea_uca_set_sidetone_instance &rArr; app_lea_ascs_find_ase_entry_non_conn &rArr; app_lea_ascs_check_ase_condition &rArr; audio_track_device_get &rArr; audio_track_handle_check
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_ccp_get_call_status
<LI><a href="#[629]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sidetone_detach
<LI><a href="#[627]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sidetone_attach
<LI><a href="#[81a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_ascs_find_ase_entry_non_conn
</UL>
<BR>[Called By]<UL><LI><a href="#[657]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_cmd_handle
</UL>

<P><STRONG><a name="[887]"></a>app_lea_vol_gain_get</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, app_lea_vol_policy.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[8c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_track
<LI><a href="#[886]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_track_create
</UL>

<P><STRONG><a name="[85c]"></a>app_lea_vol_local_volume_change</STRONG> (Thumb, 258 bytes, Stack size 40 bytes, app_lea_vol_policy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = app_lea_vol_local_volume_change &rArr; vcs_set_param &rArr; vcs_send_volume_state_notify_all &rArr; ble_audio_send_notify_all &rArr; gatt_svc_send_data &rArr; gatt_svc_send_data_in_queue &rArr; calloc
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[8a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vcs_get_param
<LI><a href="#[847]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vcs_set_param
</UL>
<BR>[Called By]<UL><LI><a href="#[50b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_mgr_mmi_handle
</UL>

<P><STRONG><a name="[85d]"></a>app_lea_vol_update_track_volume</STRONG> (Thumb, 212 bytes, Stack size 40 bytes, app_lea_vol_policy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 704<LI>Call Chain = app_lea_vol_update_track_volume &rArr; app_harman_lr_balance_set &rArr; audio_volume_balance_set &rArr; audio_mgr_dispatch &rArr; audio_mgr_buffer_event_handle &rArr; audio_buffer_playing_state &rArr; audio_track_restart &rArr; audio_session_state_set &rArr;  audio_mgr_dispatch (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_get_btmode
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_ccp_get_call_status
<LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_volume_out_set
<LI><a href="#[486]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_lr_balance_set
<LI><a href="#[446]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_volume_out_unmute
<LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_find_le_link_by_conn_handle
<LI><a href="#[4f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_volume_out_mute
<LI><a href="#[5df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_mcp_get_active_conn_handle
<LI><a href="#[852]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_ccp_get_active_conn_handle
<LI><a href="#[819]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_ascs_find_ase_entry_by_direction
<LI><a href="#[8ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_volume_out_get
<LI><a href="#[8aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_get_track_handle
</UL>
<BR>[Called By]<UL><LI><a href="#[50b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_mgr_mmi_handle
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_audio_cback
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_vol_ble_audio_cback
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_audio_cback
</UL>

<P><STRONG><a name="[86f]"></a>app_lea_vol_init</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, app_lea_vol_policy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = app_lea_vol_init &rArr; ble_audio_cback_register &rArr; calloc
</UL>
<BR>[Calls]<UL><LI><a href="#[81c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_cback_register
</UL>
<BR>[Called By]<UL><LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_profile_init
</UL>

<P><STRONG><a name="[5c7]"></a>app_lea_bca_state</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, app_lea_broadcast_audio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_mgr_is_media_streaming
<LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_update_cpu_freq
<LI><a href="#[5ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_stable_sched
<LI><a href="#[539]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_topology_dm
<LI><a href="#[74b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sass_policy_get_connection_state
<LI><a href="#[848]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_mgr_is_downstreaming
<LI><a href="#[853]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_mgr_bca_mmi_handle
<LI><a href="#[83e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_scan_report
<LI><a href="#[8fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_streaming_exist
</UL>

<P><STRONG><a name="[8ac]"></a>app_lea_bca_poweroff_check</STRONG> (Thumb, 122 bytes, Stack size 8 bytes, app_lea_broadcast_audio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1636<LI>Call Chain = app_lea_bca_poweroff_check &rArr; app_mmi_handle_action &rArr; app_multi_active_hfp_transfer &rArr; app_multi_handle_sniffing_link_disconnect_event &rArr; app_multi_judge_active_a2dp_idx_and_qos &rArr;  app_multi_handle_sniffing_link_disconnect_event (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_handle_action
<LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_get_b2s_link_num
<LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_get_lea_link_num
<LI><a href="#[539]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_topology_dm
<LI><a href="#[8ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_listening_allow_poweroff
<LI><a href="#[8af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_is_pairing
<LI><a href="#[8ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_device_sniff
<LI><a href="#[848]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_mgr_is_downstreaming
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_timeout_cb
</UL>

<P><STRONG><a name="[8b0]"></a>app_lea_bca_state_change</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, app_lea_broadcast_audio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = app_lea_bca_state_change
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[8d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_state_idle
<LI><a href="#[8d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_state_starting
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_sync_cb
<LI><a href="#[8c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_release_all
<LI><a href="#[8bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_state_bass_add_source
<LI><a href="#[8bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_state_scan
<LI><a href="#[8b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_terminate
<LI><a href="#[8d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_state_wait_retry
<LI><a href="#[8e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_handle_bass_msg
</UL>

<P><STRONG><a name="[8b1]"></a>app_lea_bca_bs_reset</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, app_lea_broadcast_audio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = app_lea_bca_bs_reset
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[8c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_release_all
<LI><a href="#[8bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_state_scan
<LI><a href="#[8b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_terminate
<LI><a href="#[8d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_state_wait_retry
<LI><a href="#[8e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_handle_bass_msg
</UL>

<P><STRONG><a name="[8b2]"></a>app_lea_bca_bs_clear_device</STRONG> (Thumb, 136 bytes, Stack size 32 bytes, app_lea_broadcast_audio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = app_lea_bca_bs_clear_device
</UL>
<BR>[Calls]<UL><LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[8c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_release_all
<LI><a href="#[8b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_terminate
<LI><a href="#[8e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_handle_bass_msg
</UL>

<P><STRONG><a name="[8b3]"></a>app_lea_bca_terminate</STRONG> (Thumb, 186 bytes, Stack size 24 bytes, app_lea_broadcast_audio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = app_lea_bca_terminate &rArr; ble_audio_sync_release &rArr; ble_audio_sync_release_int &rArr; base_data_free
</UL>
<BR>[Calls]<UL><LI><a href="#[844]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_get_conn_id_by_handle
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_find_le_link_by_conn_id
<LI><a href="#[8b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_sync_release
<LI><a href="#[8b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_pa_terminate
<LI><a href="#[8b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_big_terminate
<LI><a href="#[8b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_bs_clear_device
<LI><a href="#[8b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_bs_reset
<LI><a href="#[8b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_state_change
</UL>
<BR>[Called By]<UL><LI><a href="#[8bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_state_scan
<LI><a href="#[8b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_state_streaming
<LI><a href="#[8d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_state_wait_retry
</UL>

<P><STRONG><a name="[8b7]"></a>app_lea_bca_tgt_active</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, app_lea_broadcast_audio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = app_lea_bca_tgt_active
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[8d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_state_starting
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_sync_cb
<LI><a href="#[8bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_state_scan
<LI><a href="#[8b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_state_streaming
<LI><a href="#[8d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_state_wait_retry
<LI><a href="#[8e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_handle_bass_msg
</UL>

<P><STRONG><a name="[8b8]"></a>app_lea_bca_scan_stop</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, app_lea_broadcast_audio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = app_lea_bca_scan_stop &rArr; app_lea_scan_stop &rArr; ble_scan_stop &rArr; ble_scan_param_update &rArr; ble_scan_get_cur_state
</UL>
<BR>[Calls]<UL><LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_stop_timer
<LI><a href="#[842]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_scan_stop
</UL>
<BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_sync_cb
<LI><a href="#[8c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_release_all
<LI><a href="#[8bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_state_scan
<LI><a href="#[8d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_state_wait_retry
</UL>

<P><STRONG><a name="[8ba]"></a>app_lea_bca_get_sd_source</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, app_lea_broadcast_audio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_sync_cb
<LI><a href="#[8b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_state_streaming
<LI><a href="#[8d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_state_wait_retry
</UL>

<P><STRONG><a name="[8b9]"></a>app_lea_bca_state_streaming</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, app_lea_broadcast_audio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = app_lea_bca_state_streaming &rArr; app_lea_bca_terminate &rArr; ble_audio_sync_release &rArr; ble_audio_sync_release_int &rArr; base_data_free
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[8ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_get_sd_source
<LI><a href="#[8b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_tgt_active
<LI><a href="#[8b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_terminate
</UL>
<BR>[Called By]<UL><LI><a href="#[858]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_sm
</UL>

<P><STRONG><a name="[8bb]"></a>app_lea_bca_state_scan</STRONG> (Thumb, 120 bytes, Stack size 16 bytes, app_lea_broadcast_audio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 200 + In Cycle
<LI>Call Chain = app_lea_bca_state_scan &rArr;  mtc_topology_dm (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_update_cpu_freq
<LI><a href="#[548]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_disallow_legacy_stream
<LI><a href="#[539]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_topology_dm
<LI><a href="#[8b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_scan_stop
<LI><a href="#[8b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_tgt_active
<LI><a href="#[8b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_terminate
<LI><a href="#[8b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_bs_reset
<LI><a href="#[8b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_state_change
</UL>
<BR>[Called By]<UL><LI><a href="#[858]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_sm
</UL>

<P><STRONG><a name="[8bc]"></a>app_lea_bca_state_bass_add_source</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, app_lea_broadcast_audio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32 + In Cycle
<LI>Call Chain = app_lea_bca_state_bass_add_source &rArr;  mtc_topology_dm (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[539]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_topology_dm
<LI><a href="#[8b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_state_change
</UL>
<BR>[Called By]<UL><LI><a href="#[858]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_sm
</UL>

<P><STRONG><a name="[8be]"></a>app_lea_bca_exist_handler</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, app_lea_broadcast_audio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[8bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_scan_start
</UL>

<P><STRONG><a name="[8bd]"></a>app_lea_bca_scan_start</STRONG> (Thumb, 38 bytes, Stack size 24 bytes, app_lea_broadcast_audio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = app_lea_bca_scan_start &rArr; app_lea_scan_start &rArr; ble_scan_start &rArr; ble_scan_param_update &rArr; ble_scan_get_cur_state
</UL>
<BR>[Calls]<UL><LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_start_timer
<LI><a href="#[8be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_exist_handler
<LI><a href="#[840]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_scan_start
</UL>
<BR>[Called By]<UL><LI><a href="#[8d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_state_starting
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_sync_cb
</UL>

<P><STRONG><a name="[8bf]"></a>app_lea_bca_used</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, app_lea_broadcast_audio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = app_lea_bca_used
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[8d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_state_starting
</UL>

<P><STRONG><a name="[8c0]"></a>app_lea_bca_audio_path_reset</STRONG> (Thumb, 124 bytes, Stack size 16 bytes, app_lea_broadcast_audio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 456<LI>Call Chain = app_lea_bca_audio_path_reset &rArr; audio_track_release &rArr; audio_session_state_set &rArr;  audio_mgr_dispatch (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_auto_power_off_enable
<LI><a href="#[49b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sniff_mode_b2s_enable_all
<LI><a href="#[53d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_release
<LI><a href="#[66e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_p_eq_instance
<LI><a href="#[880]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;syncclk_drv_timer_stop
<LI><a href="#[87c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_eq_release
<LI><a href="#[885]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_mgr_set_media_state
</UL>
<BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_sync_cb
</UL>

<P><STRONG><a name="[8c6]"></a>app_lea_bca_find_sec</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, app_lea_broadcast_audio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = app_lea_bca_find_sec
</UL>
<BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_sync_cb
<LI><a href="#[8cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_remap_bis
<LI><a href="#[8c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_apply_sync_pera
</UL>

<P><STRONG><a name="[8c1]"></a>app_lea_bca_track</STRONG> (Thumb, 354 bytes, Stack size 88 bytes, app_lea_broadcast_audio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 648<LI>Call Chain = app_lea_bca_track &rArr; audio_track_volume_out_unmute &rArr; audio_mgr_dispatch &rArr; audio_mgr_buffer_event_handle &rArr; audio_buffer_playing_state &rArr; audio_track_restart &rArr; audio_session_state_set &rArr;  audio_mgr_dispatch (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[446]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_volume_out_unmute
<LI><a href="#[453]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_start
<LI><a href="#[4f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_volume_out_mute
<LI><a href="#[62f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_create
<LI><a href="#[88c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;syncclk_drv_timer_start
<LI><a href="#[887]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_vol_gain_get
<LI><a href="#[88a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_pop
<LI><a href="#[885]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_mgr_set_media_state
</UL>
<BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_sync_cb
</UL>

<P><STRONG><a name="[8c2]"></a>app_lea_bca_release_all</STRONG> (Thumb, 178 bytes, Stack size 24 bytes, app_lea_broadcast_audio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 816<LI>Call Chain = app_lea_bca_release_all &rArr; app_lea_mgr_mmi_handle &rArr; app_lea_vol_update_track_volume &rArr; app_harman_lr_balance_set &rArr; audio_volume_balance_set &rArr; audio_mgr_dispatch &rArr; audio_mgr_buffer_event_handle &rArr; audio_buffer_playing_state &rArr; audio_track_restart &rArr; audio_session_state_set &rArr;  audio_mgr_dispatch (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_update_cpu_freq
<LI><a href="#[50b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_mgr_mmi_handle
<LI><a href="#[8b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_sync_release
<LI><a href="#[8b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_pa_terminate
<LI><a href="#[8b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_big_terminate
<LI><a href="#[8b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_scan_stop
<LI><a href="#[8b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_bs_clear_device
<LI><a href="#[8b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_bs_reset
<LI><a href="#[8b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_state_change
<LI><a href="#[85a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_set_beep
</UL>
<BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_sync_cb
</UL>

<P><STRONG><a name="[8c7]"></a>app_lea_bca_ch_policy</STRONG> (Thumb, 142 bytes, Stack size 8 bytes, app_lea_broadcast_audio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = app_lea_bca_ch_policy
</UL>
<BR>[Called By]<UL><LI><a href="#[8c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_apply_sync_pera
</UL>

<P><STRONG><a name="[8c5]"></a>app_lea_bca_default_bis</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, app_lea_broadcast_audio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[8c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_apply_sync_pera
</UL>

<P><STRONG><a name="[8c4]"></a>app_lea_bca_find_device_by_bs_handle</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, app_lea_broadcast_audio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = app_lea_bca_find_device_by_bs_handle
</UL>
<BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_sync_cb
<LI><a href="#[8cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_remap_bis
<LI><a href="#[8c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_apply_sync_pera
</UL>

<P><STRONG><a name="[8c3]"></a>app_lea_bca_apply_sync_pera</STRONG> (Thumb, 334 bytes, Stack size 48 bytes, app_lea_broadcast_audio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = app_lea_bca_apply_sync_pera &rArr; app_lea_bca_find_device_by_bs_handle
</UL>
<BR>[Calls]<UL><LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[8c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_find_device_by_bs_handle
<LI><a href="#[8c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_default_bis
<LI><a href="#[8c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_ch_policy
<LI><a href="#[8c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_find_sec
<LI><a href="#[88a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_pop
</UL>
<BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_sync_cb
<LI><a href="#[8c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_big_establish
<LI><a href="#[8e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_handle_bass_msg
</UL>

<P><STRONG><a name="[8c8]"></a>app_lea_bca_big_establish</STRONG> (Thumb, 122 bytes, Stack size 56 bytes, app_lea_broadcast_audio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = app_lea_bca_big_establish &rArr; app_lea_bca_apply_sync_pera &rArr; app_lea_bca_find_device_by_bs_handle
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[8c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_big_sync_establish
<LI><a href="#[8c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_apply_sync_pera
</UL>
<BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_sync_cb
</UL>

<P><STRONG><a name="[8cd]"></a>app_lea_bca_set_ch_idx</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, app_lea_broadcast_audio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[8cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_remap_bis
</UL>

<P><STRONG><a name="[8ca]"></a>app_lea_bca_set_cap</STRONG> (Thumb, 104 bytes, Stack size 48 bytes, app_lea_broadcast_audio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = app_lea_bca_set_cap
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[8cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_remap_bis
</UL>

<P><STRONG><a name="[8cb]"></a>app_lea_bca_audio_cap</STRONG> (Thumb, 82 bytes, Stack size 48 bytes, app_lea_broadcast_audio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = app_lea_bca_audio_cap
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[8cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_remap_bis
</UL>

<P><STRONG><a name="[8cc]"></a>app_lea_bca_remap_bis</STRONG> (Thumb, 442 bytes, Stack size 72 bytes, app_lea_broadcast_audio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = app_lea_bca_remap_bis &rArr; app_lea_bca_audio_cap
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[8cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_audio_cap
<LI><a href="#[8ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_set_cap
<LI><a href="#[8cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_set_ch_idx
<LI><a href="#[8c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_find_device_by_bs_handle
<LI><a href="#[8c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_find_sec
</UL>
<BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_sync_cb
<LI><a href="#[8e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_handle_bass_msg
</UL>

<P><STRONG><a name="[68]"></a>app_lea_bca_sync_cb</STRONG> (Thumb, 1452 bytes, Stack size 80 bytes, app_lea_broadcast_audio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1308<LI>Call Chain = app_lea_bca_sync_cb &rArr; mtc_topology_dm &rArr;  app_lea_uca_link_sm (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[844]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_get_conn_id_by_handle
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_auto_power_off_enable
<LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_auto_power_off_disable
<LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_tone_type_play
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_start_timer
<LI><a href="#[499]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sniff_mode_b2s_disable_all
<LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_find_le_link_by_conn_id
<LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_update_cpu_freq
<LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_point_link_num_changed
<LI><a href="#[548]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_disallow_legacy_stream
<LI><a href="#[539]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_topology_dm
<LI><a href="#[50b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_mgr_mmi_handle
<LI><a href="#[8b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_pa_terminate
<LI><a href="#[8cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_get_bis_sync_info
<LI><a href="#[8d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_bis_setup_data_path
<LI><a href="#[8ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_send_broadcast_code_required
<LI><a href="#[8cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_remap_bis
<LI><a href="#[8c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_big_establish
<LI><a href="#[8c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_apply_sync_pera
<LI><a href="#[8c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_find_device_by_bs_handle
<LI><a href="#[8c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_release_all
<LI><a href="#[8c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_track
<LI><a href="#[8c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_find_sec
<LI><a href="#[8c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_audio_path_reset
<LI><a href="#[8bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_scan_start
<LI><a href="#[8ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_get_sd_source
<LI><a href="#[8b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_scan_stop
<LI><a href="#[8b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_tgt_active
<LI><a href="#[8b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_state_change
<LI><a href="#[88a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_pop
<LI><a href="#[85a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_set_beep
<LI><a href="#[858]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_sm
<LI><a href="#[84d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_mgr_clear_iso_queue
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_lea_broadcast_audio.o(.text)
</UL>
<P><STRONG><a name="[8d1]"></a>app_lea_bca_pa_sync</STRONG> (Thumb, 222 bytes, Stack size 40 bytes, app_lea_broadcast_audio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = app_lea_bca_pa_sync &rArr; ble_audio_sync_allocate &rArr; ble_audio_sync_create_int &rArr; ble_audio_sync_find
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[8d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_sync_allocate
<LI><a href="#[8d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_pa_sync_establish
</UL>
<BR>[Called By]<UL><LI><a href="#[8e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_bs_handle_pa_info_sync
<LI><a href="#[8de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_db_add_sink
<LI><a href="#[8dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_sd_find_bs
<LI><a href="#[8d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_state_starting
</UL>

<P><STRONG><a name="[8d4]"></a>app_lea_bca_state_starting</STRONG> (Thumb, 128 bytes, Stack size 24 bytes, app_lea_broadcast_audio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208 + In Cycle
<LI>Call Chain = app_lea_bca_state_starting &rArr;  mtc_topology_dm (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_update_cpu_freq
<LI><a href="#[539]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_topology_dm
<LI><a href="#[8d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_pa_sync
<LI><a href="#[8bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_used
<LI><a href="#[8bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_scan_start
<LI><a href="#[8b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_tgt_active
<LI><a href="#[8b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_state_change
</UL>
<BR>[Called By]<UL><LI><a href="#[858]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_sm
</UL>

<P><STRONG><a name="[8d5]"></a>app_lea_bca_state_idle</STRONG> (Thumb, 114 bytes, Stack size 16 bytes, app_lea_broadcast_audio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 592<LI>Call Chain = app_lea_bca_state_idle &rArr; app_audio_tone_type_play &rArr; voice_prompt_play &rArr; notification_push &rArr; notification_play &rArr; notification_path_start &rArr; notification_start_vp &rArr; audio_path_start &rArr; audio_path_schedule &rArr; audio_path_voice_start &rArr; dsp_mgr_session_enable &rArr; dsp_state_machine &rArr; dsp_power_on &rArr; dsp_hal_reset &rArr; shm_enable &rArr; h2d_cmd_send &rArr; shm_cmd_send &rArr; wr_queue_send
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_get_b2s_link_num
<LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_tone_type_play
<LI><a href="#[63a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_speaker_channel_set
<LI><a href="#[8b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_state_change
<LI><a href="#[85a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_set_beep
<LI><a href="#[856]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_get_beep
</UL>
<BR>[Called By]<UL><LI><a href="#[858]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_sm
</UL>

<P><STRONG><a name="[858]"></a>app_lea_bca_sm</STRONG> (Thumb, 120 bytes, Stack size 24 bytes, app_lea_broadcast_audio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 616<LI>Call Chain = app_lea_bca_sm &rArr; app_lea_bca_state_idle &rArr; app_audio_tone_type_play &rArr; voice_prompt_play &rArr; notification_push &rArr; notification_play &rArr; notification_path_start &rArr; notification_start_vp &rArr; audio_path_start &rArr; audio_path_schedule &rArr; audio_path_voice_start &rArr; dsp_mgr_session_enable &rArr; dsp_state_machine &rArr; dsp_power_on &rArr; dsp_hal_reset &rArr; shm_enable &rArr; h2d_cmd_send &rArr; shm_cmd_send &rArr; wr_queue_send
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[8d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_state_idle
<LI><a href="#[8d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_state_starting
<LI><a href="#[8bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_state_bass_add_source
<LI><a href="#[8bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_state_scan
<LI><a href="#[8b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_state_streaming
<LI><a href="#[8d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_state_wait_retry
</UL>
<BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_sync_cb
<LI><a href="#[8e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_handle_bass_msg
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_timeout_cb
<LI><a href="#[85b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_bmr_terminate
<LI><a href="#[853]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_mgr_bca_mmi_handle
</UL>

<P><STRONG><a name="[8d7]"></a>app_lea_bca_tgt</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, app_lea_broadcast_audio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = app_lea_bca_tgt
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[8df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_sink_add_device
<LI><a href="#[85b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_bmr_terminate
<LI><a href="#[83f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_scan_info
</UL>

<P><STRONG><a name="[8ee]"></a>app_lea_bca_tgt_addr</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, app_lea_broadcast_audio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[85b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_bmr_terminate
<LI><a href="#[83f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_scan_info
</UL>

<P><STRONG><a name="[8d9]"></a>app_lea_mgr_bmr_mtc_if_handle</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, app_lea_broadcast_audio.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> app_lea_broadcast_audio.o(.text)
</UL>
<P><STRONG><a name="[8aa]"></a>app_lea_bca_get_track_handle</STRONG> (Thumb, 66 bytes, Stack size 0 bytes, app_lea_broadcast_audio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[85d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_vol_update_track_volume
</UL>

<P><STRONG><a name="[8da]"></a>app_lea_bca_bs_set_active</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, app_lea_broadcast_audio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = app_lea_bca_bs_set_active
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[8e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_bs_handle_pa_info_sync
<LI><a href="#[8de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_db_add_sink
<LI><a href="#[8dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_sd_find_bs
<LI><a href="#[8e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_handle_bass_msg
</UL>

<P><STRONG><a name="[8db]"></a>app_lea_bca_find_sd_db</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, app_lea_broadcast_audio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = app_lea_bca_find_sd_db
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[8dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_sd_find_bs
<LI><a href="#[8e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_handle_bass_msg
</UL>

<P><STRONG><a name="[8dc]"></a>app_lea_bca_sd_find_bs</STRONG> (Thumb, 208 bytes, Stack size 24 bytes, app_lea_broadcast_audio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = app_lea_bca_sd_find_bs &rArr; app_lea_bca_pa_sync &rArr; ble_audio_sync_allocate &rArr; ble_audio_sync_create_int &rArr; ble_audio_sync_find
</UL>
<BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[8db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_find_sd_db
<LI><a href="#[8da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_bs_set_active
<LI><a href="#[8d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_pa_sync
</UL>
<BR>[Called By]<UL><LI><a href="#[8df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_sink_add_device
</UL>

<P><STRONG><a name="[8dd]"></a>app_lea_bca_bs_find_index_by_bdaddr</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, app_lea_broadcast_audio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = app_lea_bca_bs_find_index_by_bdaddr
</UL>
<BR>[Calls]<UL><LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[8e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_bs_handle_pa_info_sync
</UL>

<P><STRONG><a name="[8de]"></a>app_lea_bca_db_add_sink</STRONG> (Thumb, 218 bytes, Stack size 32 bytes, app_lea_broadcast_audio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = app_lea_bca_db_add_sink &rArr; app_lea_bca_pa_sync &rArr; ble_audio_sync_allocate &rArr; ble_audio_sync_create_int &rArr; ble_audio_sync_find
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_cfg_store
<LI><a href="#[8da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_bs_set_active
<LI><a href="#[8d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_pa_sync
</UL>
<BR>[Called By]<UL><LI><a href="#[8df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_sink_add_device
</UL>

<P><STRONG><a name="[8df]"></a>app_lea_bca_sink_add_device</STRONG> (Thumb, 190 bytes, Stack size 64 bytes, app_lea_broadcast_audio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = app_lea_bca_sink_add_device &rArr; app_lea_bca_db_add_sink &rArr; app_lea_bca_pa_sync &rArr; ble_audio_sync_allocate &rArr; ble_audio_sync_create_int &rArr; ble_audio_sync_find
</UL>
<BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[8de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_db_add_sink
<LI><a href="#[8dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_sd_find_bs
<LI><a href="#[8d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_tgt
</UL>
<BR>[Called By]<UL><LI><a href="#[8e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_bs_handle_pa_info_sync
</UL>

<P><STRONG><a name="[8e0]"></a>app_lea_bca_bs_handle_pa_info_sync</STRONG> (Thumb, 100 bytes, Stack size 32 bytes, app_lea_broadcast_audio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = app_lea_bca_bs_handle_pa_info_sync &rArr; app_lea_bca_sink_add_device &rArr; app_lea_bca_db_add_sink &rArr; app_lea_bca_pa_sync &rArr; ble_audio_sync_allocate &rArr; ble_audio_sync_create_int &rArr; ble_audio_sync_find
</UL>
<BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[8df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_sink_add_device
<LI><a href="#[8dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_bs_find_index_by_bdaddr
<LI><a href="#[8da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_bs_set_active
<LI><a href="#[8d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_pa_sync
</UL>
<BR>[Called By]<UL><LI><a href="#[83f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_scan_info
</UL>

<P><STRONG><a name="[6ff]"></a>app_lea_bca_count_num</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, app_lea_broadcast_audio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = app_lea_bca_count_num
</UL>
<BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_point_link_num_changed
</UL>

<P><STRONG><a name="[8e1]"></a>app_lea_bca_find_db_by_handle</STRONG> (Thumb, 76 bytes, Stack size 32 bytes, app_lea_broadcast_audio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = app_lea_bca_find_db_by_handle
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[8e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_handle_bass_msg
</UL>

<P><STRONG><a name="[8e2]"></a>app_lea_bca_find_db_by_sync_handle</STRONG> (Thumb, 74 bytes, Stack size 32 bytes, app_lea_broadcast_audio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = app_lea_bca_find_db_by_sync_handle
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[8e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_handle_bass_msg
</UL>

<P><STRONG><a name="[8e3]"></a>app_lea_bca_sd_set_active</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, app_lea_broadcast_audio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = app_lea_bca_sd_set_active
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[8e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_handle_bass_msg
</UL>

<P><STRONG><a name="[8e4]"></a>app_lea_bca_reset_active</STRONG> (Thumb, 186 bytes, Stack size 40 bytes, app_lea_broadcast_audio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = app_lea_bca_reset_active
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_le_disconnect_cb
</UL>

<P><STRONG><a name="[8ed]"></a>app_lea_bca_find_con_handle</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, app_lea_broadcast_audio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = app_lea_bca_find_con_handle
</UL>
<BR>[Called By]<UL><LI><a href="#[862]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_handle_iso_data
</UL>

<P><STRONG><a name="[862]"></a>app_lea_bca_handle_iso_data</STRONG> (Thumb, 416 bytes, Stack size 64 bytes, app_lea_broadcast_audio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 752<LI>Call Chain = app_lea_bca_handle_iso_data &rArr; audio_track_write &rArr; media_buffer_ds_write &rArr; audio_mgr_dispatch &rArr; audio_mgr_buffer_event_handle &rArr; audio_buffer_playing_state &rArr; audio_track_restart &rArr; audio_session_state_set &rArr;  audio_mgr_dispatch (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[477]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_state_get
<LI><a href="#[63c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_write
<LI><a href="#[850]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_probe_media_buffer_malloc
<LI><a href="#[84e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_probe_media_buffer_free
<LI><a href="#[8ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_find_con_handle
<LI><a href="#[8ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_check_combination_iso_data
</UL>
<BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_mgr_direct_cback
</UL>

<P><STRONG><a name="[83f]"></a>app_lea_bca_scan_info</STRONG> (Thumb, 116 bytes, Stack size 32 bytes, app_lea_broadcast_audio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = app_lea_bca_scan_info &rArr; app_lea_bca_bs_handle_pa_info_sync &rArr; app_lea_bca_sink_add_device &rArr; app_lea_bca_db_add_sink &rArr; app_lea_bca_pa_sync &rArr; ble_audio_sync_allocate &rArr; ble_audio_sync_create_int &rArr; ble_audio_sync_find
</UL>
<BR>[Calls]<UL><LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp (via Veneer)
<LI><a href="#[8e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_bs_handle_pa_info_sync
<LI><a href="#[8ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_tgt_addr
<LI><a href="#[8d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_tgt
</UL>
<BR>[Called By]<UL><LI><a href="#[83e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_scan_report
</UL>

<P><STRONG><a name="[85b]"></a>app_lea_bca_bmr_terminate</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, app_lea_broadcast_audio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 632<LI>Call Chain = app_lea_bca_bmr_terminate &rArr; app_lea_bca_sm &rArr; app_lea_bca_state_idle &rArr; app_audio_tone_type_play &rArr; voice_prompt_play &rArr; notification_push &rArr; notification_play &rArr; notification_path_start &rArr; notification_start_vp &rArr; audio_path_start &rArr; audio_path_schedule &rArr; audio_path_voice_start &rArr; dsp_mgr_session_enable &rArr; dsp_state_machine &rArr; dsp_power_on &rArr; dsp_hal_reset &rArr; shm_enable &rArr; h2d_cmd_send &rArr; shm_cmd_send &rArr; wr_queue_send
</UL>
<BR>[Calls]<UL><LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_get_lea_link_num
<LI><a href="#[8ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_tgt_addr
<LI><a href="#[8d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_tgt
<LI><a href="#[85a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_set_beep
<LI><a href="#[858]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_sm
</UL>
<BR>[Called By]<UL><LI><a href="#[853]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_mgr_bca_mmi_handle
<LI><a href="#[905]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_shutdown
</UL>

<P><STRONG><a name="[86b]"></a>app_lea_bca_init</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, app_lea_broadcast_audio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = app_lea_bca_init &rArr; app_lea_bca_db_init &rArr; mtc_cback_register &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_reg_cb
<LI><a href="#[47c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_mgr_cback_register
<LI><a href="#[81c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_cback_register
<LI><a href="#[8d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_db_init
</UL>
<BR>[Called By]<UL><LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_profile_init
</UL>

<P><STRONG><a name="[110]"></a>ble_audio_bond_check</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, ble_audio_bond.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = ble_audio_bond_check &rArr; bt_le_find_key_entry &rArr; bt_le_resolve_local_rpa
</UL>
<BR>[Calls]<UL><LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_le_find_key_entry
<LI><a href="#[688]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_get_conn_local_addr
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_audio_bond.o(.constdata)
</UL>
<P><STRONG><a name="[111]"></a>ble_audio_bond_get_key</STRONG> (Thumb, 90 bytes, Stack size 40 bytes, ble_audio_bond.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = ble_audio_bond_get_key &rArr; bt_le_find_key_entry &rArr; bt_le_resolve_local_rpa
</UL>
<BR>[Calls]<UL><LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_le_find_key_entry
<LI><a href="#[688]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_get_conn_local_addr
<LI><a href="#[8ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_le_get_dev_ltk
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_audio_bond.o(.constdata)
</UL>
<P><STRONG><a name="[112]"></a>ble_audio_bond_get_max_num</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, ble_audio_bond.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[84c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_le_get_max_le_paired_device_num
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_legacy_get_max_bond_num
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_audio_bond.o(.constdata)
</UL>
<P><STRONG><a name="[113]"></a>ble_audio_bond_get_addr</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, ble_audio_bond.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ble_audio_bond_get_addr
</UL>
<BR>[Calls]<UL><LI><a href="#[84a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_le_find_key_entry_by_idx
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_audio_bond.o(.constdata)
</UL>
<P><STRONG><a name="[114]"></a>ble_audio_bond_set_cccd_flag</STRONG> (Thumb, 32 bytes, Stack size 32 bytes, ble_audio_bond.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = ble_audio_bond_set_cccd_flag &rArr; bt_bond_handle_cccd_pending &rArr; bt_bond_get_info_from_addr &rArr; bt_le_find_entry_by_aes &rArr; bt_le_resolve_local_rpa
</UL>
<BR>[Calls]<UL><LI><a href="#[8f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_handle_cccd_pending
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_audio_bond.o(.constdata)
</UL>
<P><STRONG><a name="[115]"></a>ble_audio_bond_clear_cccd_flag</STRONG> (Thumb, 56 bytes, Stack size 48 bytes, ble_audio_bond.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = ble_audio_bond_clear_cccd_flag &rArr; bt_bond_handle_cccd_pending &rArr; bt_bond_get_info_from_addr &rArr; bt_le_find_entry_by_aes &rArr; bt_le_resolve_local_rpa
</UL>
<BR>[Calls]<UL><LI><a href="#[688]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_get_conn_local_addr
<LI><a href="#[8f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_handle_cccd_pending
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_audio_bond.o(.constdata)
</UL>
<P><STRONG><a name="[116]"></a>ble_audio_bond_le_resolve_rpa</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ble_audio_bond.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = ble_audio_bond_le_resolve_rpa &rArr; bt_le_resolve_random_address &rArr; bt_le_find_entry_by_aes &rArr; bt_le_resolve_local_rpa
</UL>
<BR>[Calls]<UL><LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_le_resolve_random_address
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_audio_bond.o(.constdata)
</UL>
<P><STRONG><a name="[8f1]"></a>ble_audio_bt_bond_cb</STRONG> (Thumb, 106 bytes, Stack size 24 bytes, ble_audio_bond.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = ble_audio_bt_bond_cb &rArr; ble_audio_bond_modify &rArr; ble_dm_event_post
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[8f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_bond_modify
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_audio_bond.o(.text)
</UL>
<P><STRONG><a name="[2da]"></a>ble_audio_bond_init</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, ble_audio_bond.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ble_audio_bond_init &rArr; bt_bond_register_app_cb &rArr; calloc
</UL>
<BR>[Calls]<UL><LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_register_app_cb
<LI><a href="#[8f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_reg_bond_mgr
</UL>
<BR>[Called By]<UL><LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_gap_init
</UL>

<P><STRONG><a name="[854]"></a>mtc_get_b2d_sniff_status</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, multitopology_ctrl.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[853]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_mgr_bca_mmi_handle
</UL>

<P><STRONG><a name="[855]"></a>mtc_get_b2s_sniff_status</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, multitopology_ctrl.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[853]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_mgr_bca_mmi_handle
</UL>

<P><STRONG><a name="[4e1]"></a>mtc_check_reopen_mic</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, multitopology_ctrl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 680<LI>Call Chain = mtc_check_reopen_mic &rArr; app_lea_uca_enable_mic &rArr; app_lea_uca_track_create &rArr; audio_track_volume_out_unmute &rArr; audio_mgr_dispatch &rArr; audio_mgr_buffer_event_handle &rArr; audio_buffer_playing_state &rArr; audio_track_restart &rArr; audio_session_state_set &rArr;  audio_mgr_dispatch (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[8a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_enable_mic
</UL>
<BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_link_policy_ind
</UL>

<P><STRONG><a name="[85a]"></a>mtc_set_beep</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, multitopology_ctrl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = mtc_set_beep
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[50b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_mgr_mmi_handle
<LI><a href="#[90b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_le_connection_update
<LI><a href="#[8fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_terminate_bis
<LI><a href="#[8d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_state_idle
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_sync_cb
<LI><a href="#[8c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_release_all
<LI><a href="#[85b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_bmr_terminate
<LI><a href="#[853]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_mgr_bca_mmi_handle
</UL>

<P><STRONG><a name="[856]"></a>mtc_get_beep</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, multitopology_ctrl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = mtc_get_beep
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[8d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_state_idle
<LI><a href="#[853]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_mgr_bca_mmi_handle
</UL>

<P><STRONG><a name="[8f4]"></a>mtc_set_btmode</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, multitopology_ctrl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1132<LI>Call Chain = mtc_set_btmode &rArr; app_gfps_notify_conn_status &rArr; app_gfps_adv_update_conn_status &rArr; app_gfps_device_check_state &rArr; app_gfps_enter_nondiscoverable_mode &rArr; app_gfps_next_action &rArr; app_gfps_battery_info_report &rArr; app_gfps_battery_set_info &rArr; gfps_gen_adv_data &rArr; gfps_sass_get_encrypt_conn_status &rArr; sha256_hkdf &rArr; hmac_sha256_crypt &rArr; hmac_sha256_finish &rArr; mbedtls_sha256_update &rArr; mbedtls_sha256_update_ret &rArr; mbedtls_internal_sha256_process
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[59c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_notify_conn_status
</UL>
<BR>[Called By]<UL><LI><a href="#[539]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_topology_dm
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_timeout_cb
<LI><a href="#[8f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_cis_ase_release
<LI><a href="#[905]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_shutdown
<LI><a href="#[8fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_streaming_exist
</UL>

<P><STRONG><a name="[37b]"></a>mtc_get_btmode</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, multitopology_ctrl.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_key_single_click
<LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_mgr_is_media_streaming
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_get_call_status
<LI><a href="#[5dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_prepare_for_dedicated_enter_pairing_mode
<LI><a href="#[5ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sass_preempt_policy
<LI><a href="#[5a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_preemptive_judge
<LI><a href="#[5ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_get_inactive_index
<LI><a href="#[59b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_set_active_idx
<LI><a href="#[50b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_mgr_mmi_handle
<LI><a href="#[53a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_mgr_find_call_device_by_priority
<LI><a href="#[508]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_check_lea_action
<LI><a href="#[74b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sass_policy_get_connection_state
<LI><a href="#[758]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_msg_notify_connection_status
<LI><a href="#[749]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_gen_conn_status
<LI><a href="#[66f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_eq_sample_rate_get
<LI><a href="#[66c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_eq_media_eq_enable
<LI><a href="#[669]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_eq_media_eq_set
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_bt_cback
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_policy_cback
<LI><a href="#[6bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sass_policy_switch_back
<LI><a href="#[6ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sass_policy_switch_active_audio_source
<LI><a href="#[7f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sass_policy_get_disc_link
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_audio_cback
<LI><a href="#[872]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_set_stream_link
<LI><a href="#[879]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_handle_mcp_state
<LI><a href="#[85d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_vol_update_track_volume
</UL>

<P><STRONG><a name="[90c]"></a>mtc_get_sniffing</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, multitopology_ctrl.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_if_fm_ml_handle
</UL>

<P><STRONG><a name="[549]"></a>mtc_set_sniffing</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, multitopology_ctrl.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[548]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_disallow_legacy_stream
</UL>

<P><STRONG><a name="[8f5]"></a>mtc_set_resume_dev</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, multitopology_ctrl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = mtc_set_resume_dev
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[45b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_legacy_update_call_status
<LI><a href="#[539]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_topology_dm
<LI><a href="#[90b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_le_connection_update
<LI><a href="#[859]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_stream_switch
<LI><a href="#[857]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_if_fm_lbis_handle
<LI><a href="#[90a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_legacy_bt_cback
<LI><a href="#[903]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_resume_cis_track
<LI><a href="#[8fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_resume_bis
</UL>

<P><STRONG><a name="[755]"></a>mtc_get_active_idx</STRONG> (Thumb, 114 bytes, Stack size 32 bytes, multitopology_ctrl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = mtc_get_active_idx &rArr; app_lea_uca_get_active_link &rArr; app_link_find_le_link_by_conn_handle
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_get_b2s_link_num
<LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_get_le_link_num
<LI><a href="#[74a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_get_active_idx
<LI><a href="#[7c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_get_active_link
</UL>
<BR>[Called By]<UL><LI><a href="#[752]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_check_inuse_account_key
</UL>

<P><STRONG><a name="[8f6]"></a>mtc_ase_release</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, multitopology_ctrl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + In Cycle
<LI>Call Chain = mtc_ase_release &rArr;  app_lea_uca_link_sm (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_link_sm
<LI><a href="#[5df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_mcp_get_active_conn_handle
<LI><a href="#[814]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_ascs_find_ase_entry
</UL>
<BR>[Called By]<UL><LI><a href="#[90b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_le_connection_update
<LI><a href="#[8f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_cis_ase_release
</UL>

<P><STRONG><a name="[8f7]"></a>mtc_cis_audio_conext_change</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, multitopology_ctrl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = mtc_cis_audio_conext_change &rArr; mtc_mgr_dispatch
</UL>
<BR>[Calls]<UL><LI><a href="#[8f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_mgr_dispatch
</UL>
<BR>[Called By]<UL><LI><a href="#[45b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_legacy_update_call_status
<LI><a href="#[90b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_le_connection_update
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_timeout_cb
<LI><a href="#[8f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_cis_ase_release
</UL>

<P><STRONG><a name="[8fa]"></a>mtc_streaming_exist</STRONG> (Thumb, 208 bytes, Stack size 40 bytes, multitopology_ctrl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1172<LI>Call Chain = mtc_streaming_exist &rArr; mtc_set_btmode &rArr; app_gfps_notify_conn_status &rArr; app_gfps_adv_update_conn_status &rArr; app_gfps_device_check_state &rArr; app_gfps_enter_nondiscoverable_mode &rArr; app_gfps_next_action &rArr; app_gfps_battery_info_report &rArr; app_gfps_battery_set_info &rArr; gfps_gen_adv_data &rArr; gfps_sass_get_encrypt_conn_status &rArr; sha256_hkdf &rArr; hmac_sha256_crypt &rArr; hmac_sha256_finish &rArr; mbedtls_sha256_update &rArr; mbedtls_sha256_update_ret &rArr; mbedtls_internal_sha256_process
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_a2dp_get_active_idx
<LI><a href="#[548]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_disallow_legacy_stream
<LI><a href="#[5c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_state
<LI><a href="#[8fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_mgr_get_media_suspend_by_out_ear
<LI><a href="#[8f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_set_btmode
</UL>
<BR>[Called By]<UL><LI><a href="#[539]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_topology_dm
</UL>

<P><STRONG><a name="[8fc]"></a>mtc_terminate_hfp_call</STRONG> (Thumb, 82 bytes, Stack size 32 bytes, multitopology_ctrl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 472<LI>Call Chain = mtc_terminate_hfp_call &rArr; app_mmi_hf_reject_call &rArr; app_hfp_stop_ring_alert_timer &rArr; app_harman_sco_status_notify &rArr; app_harman_devinfo_feature_report &rArr; app_harman_report_le_event &rArr; app_transfer_push_data_queue &rArr; app_transfer_pop_data_queue &rArr;  app_transfer_pop_data_queue (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_get_call_status
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_start_timer
<LI><a href="#[501]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_hf_end_active_call
<LI><a href="#[500]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_hf_end_outgoing_call
<LI><a href="#[4ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_hf_cancel_voice_dial
<LI><a href="#[4fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_hf_reject_call
</UL>
<BR>[Called By]<UL><LI><a href="#[539]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_topology_dm
<LI><a href="#[603]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_if_fm_ap_handle
<LI><a href="#[816]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_if_fm_lcis_handle
</UL>

<P><STRONG><a name="[8fd]"></a>mtc_resume_bis</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, multitopology_ctrl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 800<LI>Call Chain = mtc_resume_bis &rArr; app_lea_mgr_mmi_handle &rArr; app_lea_vol_update_track_volume &rArr; app_harman_lr_balance_set &rArr; audio_volume_balance_set &rArr; audio_mgr_dispatch &rArr; audio_mgr_buffer_event_handle &rArr; audio_buffer_playing_state &rArr; audio_track_restart &rArr; audio_session_state_set &rArr;  audio_mgr_dispatch (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[50b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_mgr_mmi_handle
<LI><a href="#[8f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_set_resume_dev
</UL>
<BR>[Called By]<UL><LI><a href="#[539]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_topology_dm
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_timeout_cb
</UL>

<P><STRONG><a name="[539]"></a>mtc_topology_dm</STRONG> (Thumb, 882 bytes, Stack size 56 bytes, multitopology_ctrl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1228 + In Cycle
<LI>Call Chain = mtc_topology_dm &rArr;  app_lea_uca_link_sm (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_get_b2s_link_num
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_ccp_get_call_status
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_get_call_status
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_get_call_status
<LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_a2dp_get_active_idx
<LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_get_active_idx
<LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_find_le_link_by_conn_handle
<LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_link_sm
<LI><a href="#[5ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sass_preempt_policy
<LI><a href="#[5a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_preemptive_judge
<LI><a href="#[548]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_disallow_legacy_stream
<LI><a href="#[5df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_mcp_get_active_conn_handle
<LI><a href="#[5c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_state
<LI><a href="#[852]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_ccp_get_active_conn_handle
<LI><a href="#[8fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_terminate_bis
<LI><a href="#[8f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_mgr_dispatch
<LI><a href="#[8f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_cis_ase_release
<LI><a href="#[8ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_check_lea_le_link
<LI><a href="#[8a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_is_upstreaming_enabled
<LI><a href="#[8fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_resume_bis
<LI><a href="#[8fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_terminate_hfp_call
<LI><a href="#[8fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_streaming_exist
<LI><a href="#[8f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_set_resume_dev
<LI><a href="#[8f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_set_btmode
</UL>
<BR>[Called By]<UL><LI><a href="#[508]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_check_lea_action
<LI><a href="#[8d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_state_starting
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_sync_cb
<LI><a href="#[8bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_state_bass_add_source
<LI><a href="#[8bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_state_scan
<LI><a href="#[8ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_poweroff_check
<LI><a href="#[8d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_state_wait_retry
<LI><a href="#[8e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_handle_bass_msg
<LI><a href="#[89b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_link_idle
<LI><a href="#[899]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_link_connected
<LI><a href="#[898]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_link_streaming
<LI><a href="#[896]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_handle_le_disconnect
<LI><a href="#[884]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_remove_data_path
<LI><a href="#[87b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_handle_avrcp_playing
<LI><a href="#[879]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_handle_mcp_state
<LI><a href="#[878]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_handle_ccp_state
<LI><a href="#[876]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_handle_ccp_term
<LI><a href="#[908]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_legacy_link_status
<LI><a href="#[900]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_terminate_cis
</UL>

<P><STRONG><a name="[900]"></a>mtc_terminate_cis</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, multitopology_ctrl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + In Cycle
<LI>Call Chain = mtc_terminate_cis &rArr;  mtc_topology_dm (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[548]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_disallow_legacy_stream
<LI><a href="#[539]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_topology_dm
<LI><a href="#[89c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_adv_get_state
<LI><a href="#[80d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_adv_stop
<LI><a href="#[8ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_check_lea_le_link
</UL>
<BR>[Called By]<UL><LI><a href="#[816]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_if_fm_lcis_handle
<LI><a href="#[90a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_legacy_bt_cback
</UL>

<P><STRONG><a name="[902]"></a>mtc_is_lea_cis_stream</STRONG> (Thumb, 94 bytes, Stack size 12 bytes, multitopology_ctrl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = mtc_is_lea_cis_stream
</UL>
<BR>[Called By]<UL><LI><a href="#[45b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_legacy_update_call_status
<LI><a href="#[5aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_if_fm_ml_handle
<LI><a href="#[90b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_le_connection_update
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_timeout_cb
<LI><a href="#[90a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_legacy_bt_cback
<LI><a href="#[901]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_check_lea_track
</UL>

<P><STRONG><a name="[901]"></a>mtc_check_lea_track</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, multitopology_ctrl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = mtc_check_lea_track &rArr; mtc_mgr_dispatch
</UL>
<BR>[Calls]<UL><LI><a href="#[8f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_mgr_dispatch
<LI><a href="#[902]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_is_lea_cis_stream
</UL>
<BR>[Called By]<UL><LI><a href="#[90a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_legacy_bt_cback
<LI><a href="#[903]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_resume_cis_track
</UL>

<P><STRONG><a name="[903]"></a>mtc_resume_cis_track</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, multitopology_ctrl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = mtc_resume_cis_track &rArr; mtc_check_lea_track &rArr; mtc_mgr_dispatch
</UL>
<BR>[Calls]<UL><LI><a href="#[901]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_check_lea_track
<LI><a href="#[8f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_set_resume_dev
</UL>
<BR>[Called By]<UL><LI><a href="#[5aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_if_fm_ml_handle
</UL>

<P><STRONG><a name="[904]"></a>mtc_stream_pause</STRONG> (Thumb, 120 bytes, Stack size 40 bytes, multitopology_ctrl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = mtc_stream_pause &rArr; bt_avrcp_pause &rArr; avrcp_send_pass_through &rArr; avrcp_cmd_enqueue &rArr; avrcp_cmd_process &rArr; avrcp_send_cmd_pass_through &rArr; avrcp_send_generic_cmd &rArr; sys_timer_start &rArr; sys_hp_timer_list_insert &rArr; hw_timer_restart &rArr; hw_timer_safe_stop &rArr; hw_timer_set_div
</UL>
<BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_a2dp_get_active_idx
<LI><a href="#[511]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_avrcp_pause
<LI><a href="#[8f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_mgr_dispatch
</UL>
<BR>[Called By]<UL><LI><a href="#[859]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_stream_switch
<LI><a href="#[907]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_ccp_check
</UL>

<P><STRONG><a name="[859]"></a>mtc_stream_switch</STRONG> (Thumb, 150 bytes, Stack size 48 bytes, multitopology_ctrl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = mtc_stream_switch &rArr; mtc_stream_pause &rArr; bt_avrcp_pause &rArr; avrcp_send_pass_through &rArr; avrcp_cmd_enqueue &rArr; avrcp_cmd_process &rArr; avrcp_send_cmd_pass_through &rArr; avrcp_send_generic_cmd &rArr; sys_timer_start &rArr; sys_hp_timer_list_insert &rArr; hw_timer_restart &rArr; hw_timer_safe_stop &rArr; hw_timer_set_div
</UL>
<BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_a2dp_get_active_idx
<LI><a href="#[904]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_stream_pause
<LI><a href="#[8f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_set_resume_dev
</UL>
<BR>[Called By]<UL><LI><a href="#[8e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_term_sd_sniffing
<LI><a href="#[899]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_link_connected
<LI><a href="#[879]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_handle_mcp_state
<LI><a href="#[878]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_handle_ccp_state
<LI><a href="#[853]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_mgr_bca_mmi_handle
</UL>

<P><STRONG><a name="[8e7]"></a>mtc_term_sd_sniffing</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, multitopology_ctrl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = mtc_term_sd_sniffing &rArr; mtc_stream_switch &rArr; mtc_stream_pause &rArr; bt_avrcp_pause &rArr; avrcp_send_pass_through &rArr; avrcp_cmd_enqueue &rArr; avrcp_cmd_process &rArr; avrcp_send_cmd_pass_through &rArr; avrcp_send_generic_cmd &rArr; sys_timer_start &rArr; sys_hp_timer_list_insert &rArr; hw_timer_restart &rArr; hw_timer_safe_stop &rArr; hw_timer_set_div
</UL>
<BR>[Calls]<UL><LI><a href="#[859]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_stream_switch
</UL>
<BR>[Called By]<UL><LI><a href="#[8e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_handle_bass_msg
</UL>

<P><STRONG><a name="[8e6]"></a>mtc_check_call_sate</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, multitopology_ctrl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = mtc_check_call_sate
</UL>
<BR>[Calls]<UL><LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_ccp_get_call_status
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_get_call_status
</UL>
<BR>[Called By]<UL><LI><a href="#[8e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_handle_bass_msg
</UL>

<P><STRONG><a name="[905]"></a>mtc_shutdown</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, multitopology_ctrl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1364<LI>Call Chain = mtc_shutdown &rArr; app_lea_uca_link_sm &rArr; app_lea_uca_link_connected &rArr; app_lea_uca_remove_data_path &rArr; mtc_topology_dm &rArr;  app_lea_uca_link_sm (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_auto_power_off_enable
<LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_link_sm
<LI><a href="#[80d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_adv_stop
<LI><a href="#[85b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_bmr_terminate
<LI><a href="#[8f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_set_btmode
</UL>
<BR>[Called By]<UL><LI><a href="#[603]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_if_fm_ap_handle
</UL>

<P><STRONG><a name="[906]"></a>mtc_check_sniff</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, multitopology_ctrl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = mtc_check_sniff &rArr; audio_track_state_get &rArr; audio_track_handle_check
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_find_br_link
<LI><a href="#[477]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_state_get
</UL>
<BR>[Called By]<UL><LI><a href="#[90a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_legacy_bt_cback
</UL>

<P><STRONG><a name="[907]"></a>mtc_ccp_check</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, multitopology_ctrl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = mtc_ccp_check &rArr; mtc_stream_pause &rArr; bt_avrcp_pause &rArr; avrcp_send_pass_through &rArr; avrcp_cmd_enqueue &rArr; avrcp_cmd_process &rArr; avrcp_send_cmd_pass_through &rArr; avrcp_send_generic_cmd &rArr; sys_timer_start &rArr; sys_hp_timer_list_insert &rArr; hw_timer_restart &rArr; hw_timer_safe_stop &rArr; hw_timer_set_div
</UL>
<BR>[Calls]<UL><LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_ccp_get_call_status
<LI><a href="#[904]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_stream_pause
</UL>
<BR>[Called By]<UL><LI><a href="#[90a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_legacy_bt_cback
</UL>

<P><STRONG><a name="[45b]"></a>mtc_legacy_update_call_status</STRONG> (Thumb, 190 bytes, Stack size 32 bytes, multitopology_ctrl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1380<LI>Call Chain = mtc_legacy_update_call_status &rArr; app_lea_uca_link_sm &rArr; app_lea_uca_link_connected &rArr; app_lea_uca_remove_data_path &rArr; mtc_topology_dm &rArr;  app_lea_uca_link_sm (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_ccp_get_call_status
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_get_call_status
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_start_timer
<LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_link_sm
<LI><a href="#[5df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_mcp_get_active_conn_handle
<LI><a href="#[810]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_adv_update_interval_hfp
<LI><a href="#[8fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_terminate_bis
<LI><a href="#[8f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_cis_ase_release
<LI><a href="#[902]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_is_lea_cis_stream
<LI><a href="#[8f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_cis_audio_conext_change
<LI><a href="#[8f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_set_resume_dev
</UL>
<BR>[Called By]<UL><LI><a href="#[455]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_update_call_status
</UL>

<P><STRONG><a name="[908]"></a>mtc_legacy_link_status</STRONG> (Thumb, 126 bytes, Stack size 16 bytes, multitopology_ctrl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1244<LI>Call Chain = mtc_legacy_link_status &rArr; mtc_topology_dm &rArr;  app_lea_uca_link_sm (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[544]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_point_lea_link_is_full
<LI><a href="#[539]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_topology_dm
<LI><a href="#[720]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_adv_start
<LI><a href="#[80d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_adv_stop
</UL>
<BR>[Called By]<UL><LI><a href="#[90a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_legacy_bt_cback
</UL>

<P><STRONG><a name="[909]"></a>mtc_resume_sniffing</STRONG> (Thumb, 118 bytes, Stack size 16 bytes, multitopology_ctrl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = mtc_resume_sniffing &rArr; app_link_find_br_link
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_find_br_link
<LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_get_b2s_link_num
<LI><a href="#[498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_sniffing_start
<LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_a2dp_get_active_idx
<LI><a href="#[548]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_disallow_legacy_stream
<LI><a href="#[5e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_sniffing_process
<LI><a href="#[8f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_mgr_dispatch
</UL>
<BR>[Called By]<UL><LI><a href="#[90a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_legacy_bt_cback
</UL>

<P><STRONG><a name="[90a]"></a>mtc_legacy_bt_cback</STRONG> (Thumb, 670 bytes, Stack size 48 bytes, multitopology_ctrl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1468<LI>Call Chain = mtc_legacy_bt_cback &rArr; app_multi_preemptive_judge &rArr;  app_multi_active_hfp_transfer (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4 (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_find_br_link
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_get_call_status
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_start_timer
<LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_a2dp_get_active_idx
<LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_link_sm
<LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_sniffing_param_update
<LI><a href="#[5ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sass_preempt_policy
<LI><a href="#[5a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_preemptive_judge
<LI><a href="#[5df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_mcp_get_active_conn_handle
<LI><a href="#[90b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_le_connection_update
<LI><a href="#[8fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_terminate_bis
<LI><a href="#[8f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_cis_ase_release
<LI><a href="#[909]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_resume_sniffing
<LI><a href="#[908]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_legacy_link_status
<LI><a href="#[907]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_ccp_check
<LI><a href="#[906]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_check_sniff
<LI><a href="#[901]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_check_lea_track
<LI><a href="#[902]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_is_lea_cis_stream
<LI><a href="#[900]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_terminate_cis
<LI><a href="#[8f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_set_resume_dev
</UL>
<BR>[Address Reference Count : 1]<UL><LI> multitopology_ctrl.o(.text)
</UL>
<P><STRONG><a name="[603]"></a>mtc_if_fm_ap_handle</STRONG> (Thumb, 136 bytes, Stack size 24 bytes, multitopology_ctrl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1388<LI>Call Chain = mtc_if_fm_ap_handle &rArr; mtc_shutdown &rArr; app_lea_uca_link_sm &rArr; app_lea_uca_link_connected &rArr; app_lea_uca_remove_data_path &rArr; mtc_topology_dm &rArr;  app_lea_uca_link_sm (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_ccp_get_call_status
<LI><a href="#[8a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_is_upstreaming_enabled
<LI><a href="#[905]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_shutdown
<LI><a href="#[8fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_terminate_hfp_call
</UL>
<BR>[Called By]<UL><LI><a href="#[602]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_event_handle
<LI><a href="#[62e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_sco_conn_cmpl_handle
</UL>

<P><STRONG><a name="[5aa]"></a>mtc_if_fm_ml_handle</STRONG> (Thumb, 90 bytes, Stack size 24 bytes, multitopology_ctrl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = mtc_if_fm_ml_handle &rArr; mtc_resume_cis_track &rArr; mtc_check_lea_track &rArr; mtc_mgr_dispatch
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_ccp_get_call_status
<LI><a href="#[8a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_is_upstreaming_enabled
<LI><a href="#[903]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_resume_cis_track
<LI><a href="#[902]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_is_lea_cis_stream
<LI><a href="#[90c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_get_sniffing
</UL>
<BR>[Called By]<UL><LI><a href="#[5a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_judge_active_a2dp_idx_and_qos
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_timeout_cb
<LI><a href="#[5b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_hfp_audio_connect_confirm
</UL>

<P><STRONG><a name="[816]"></a>mtc_if_fm_lcis_handle</STRONG> (Thumb, 92 bytes, Stack size 24 bytes, multitopology_ctrl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 496<LI>Call Chain = mtc_if_fm_lcis_handle &rArr; mtc_terminate_hfp_call &rArr; app_mmi_hf_reject_call &rArr; app_hfp_stop_ring_alert_timer &rArr; app_harman_sco_status_notify &rArr; app_harman_devinfo_feature_report &rArr; app_harman_report_le_event &rArr; app_transfer_push_data_queue &rArr; app_transfer_pop_data_queue &rArr;  app_transfer_pop_data_queue (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_get_call_status
<LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_sniffing_param_update
<LI><a href="#[900]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_terminate_cis
<LI><a href="#[8fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_terminate_hfp_call
</UL>
<BR>[Called By]<UL><LI><a href="#[50b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_mgr_mmi_handle
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_ccp_ble_audio_cback
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_ascs_ble_audio_cback
<LI><a href="#[8a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_handle_ccp_msg
<LI><a href="#[89f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_handle_ascs_msg
</UL>

<P><STRONG><a name="[857]"></a>mtc_if_fm_lbis_handle</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, multitopology_ctrl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = mtc_if_fm_lbis_handle &rArr; mtc_set_resume_dev
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[8f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_set_resume_dev
</UL>
<BR>[Called By]<UL><LI><a href="#[853]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_mgr_bca_mmi_handle
</UL>

<P><STRONG><a name="[5bf]"></a>mtc_cback_register</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, multitopology_ctrl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = mtc_cback_register &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_init
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_init
<LI><a href="#[8d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_db_init
<LI><a href="#[866]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_mgr_init
</UL>

<P><STRONG><a name="[869]"></a>mtc_init</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, multitopology_ctrl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = mtc_init &rArr; bt_mgr_cback_register
</UL>
<BR>[Calls]<UL><LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_mgr_cback_register
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_reg_cb
</UL>
<BR>[Called By]<UL><LI><a href="#[866]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_mgr_init
</UL>

<P><STRONG><a name="[2d4]"></a>app_harman_set_cpu_clk</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, app_harman_behaviors.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = app_harman_set_cpu_clk
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;board_init
<LI><a href="#[783]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_finder_generate_adv_ei_and_hash
</UL>

<P><STRONG><a name="[2d5]"></a>app_harman_cpu_clk_improve</STRONG> (Thumb, 82 bytes, Stack size 40 bytes, app_harman_behaviors.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = app_harman_cpu_clk_improve &rArr; pm_cpu_freq_set &rArr; set_cpu_freq &rArr; dvfs_control &rArr; dvfs_set_mode_func
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pm_cpu_freq_set
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pm_cpu_freq_get
</UL>
<BR>[Called By]<UL><LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;board_init
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_policy_cback
</UL>

<P><STRONG><a name="[3c7]"></a>app_harman_heartbeat_check_times_set</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, app_harman_behaviors.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_gap_handle_new_conn_state_evt
<LI><a href="#[94c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_devinfo_set
</UL>

<P><STRONG><a name="[90d]"></a>app_harman_heartbeat_check_timer_start</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, app_harman_behaviors.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = app_harman_heartbeat_check_timer_start &rArr; app_start_timer &rArr; remove_timeout_msg_from_list
</UL>
<BR>[Calls]<UL><LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_start_timer
</UL>
<BR>[Called By]<UL><LI><a href="#[911]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_ble_heartbeat_notify
</UL>

<P><STRONG><a name="[3c6]"></a>app_harman_heartbeat_check_timer_stop</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, app_harman_behaviors.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = app_harman_heartbeat_check_timer_stop &rArr; app_stop_timer &rArr; remove_timeout_msg_from_list
</UL>
<BR>[Calls]<UL><LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_stop_timer
</UL>
<BR>[Called By]<UL><LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_gap_handle_new_conn_state_evt
<LI><a href="#[932]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_ble_ota_handle
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_timeout_cb
</UL>

<P><STRONG><a name="[616]"></a>app_harman_power_off_option_timer_get</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, app_harman_behaviors.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[604]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_conn_sniff_event_handle
<LI><a href="#[94c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_devinfo_set
</UL>

<P><STRONG><a name="[3df]"></a>app_harman_notify_device_info_timer_start</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, app_harman_behaviors.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = app_harman_notify_device_info_timer_start &rArr; app_start_timer &rArr; remove_timeout_msg_from_list
</UL>
<BR>[Calls]<UL><LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_start_timer
</UL>
<BR>[Called By]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_service_transmit_srv_cb
<LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_gap_handle_authen_state_evt
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_timeout_cb
</UL>

<P><STRONG><a name="[3bd]"></a>app_harman_notify_device_info_timer_stop</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, app_harman_behaviors.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = app_harman_notify_device_info_timer_stop &rArr; app_stop_timer &rArr; remove_timeout_msg_from_list
</UL>
<BR>[Calls]<UL><LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_stop_timer
</UL>
<BR>[Called By]<UL><LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_gap_handle_new_conn_state_evt
</UL>

<P><STRONG><a name="[45a]"></a>app_harman_connect_idle_to_power_off</STRONG> (Thumb, 146 bytes, Stack size 32 bytes, app_harman_behaviors.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = app_harman_connect_idle_to_power_off &rArr; app_harman_power_off_option_timer_start &rArr; app_start_timer &rArr; remove_timeout_msg_from_list
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_find_br_link
<LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_check_b2s_link_by_id
<LI><a href="#[90f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_power_off_option_timer_stop
<LI><a href="#[90e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_power_off_option_timer_start
</UL>
<BR>[Called By]<UL><LI><a href="#[455]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_update_call_status
<LI><a href="#[604]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_conn_sniff_event_handle
<LI><a href="#[5bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_sco_handle
<LI><a href="#[5b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_acl_disconn_handle
<LI><a href="#[5a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_a2dp_stop_handle
<LI><a href="#[5a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_judge_active_a2dp_idx_and_qos
<LI><a href="#[94c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_devinfo_set
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_timeout_cb
</UL>

<P><STRONG><a name="[452]"></a>app_harman_aling_active_hfp_idx_set</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, app_harman_behaviors.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = app_harman_aling_active_hfp_idx_set &rArr; app_link_get_connected_src_num &rArr; app_link_find_br_link
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_get_connected_src_num
<LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_check_b2s_link_by_id
</UL>
<BR>[Called By]<UL><LI><a href="#[49c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_a2dp_set_active_idx
<LI><a href="#[451]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_set_active_idx
<LI><a href="#[5b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_acl_disconn_handle
<LI><a href="#[63f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_silent_check
</UL>

<P><STRONG><a name="[4f6]"></a>app_harman_aling_active_hfp_idx_get</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, app_harman_behaviors.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = app_harman_aling_active_hfp_idx_get
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_handle_action
<LI><a href="#[4f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_harman_get_active_hf_idx
</UL>

<P><STRONG><a name="[63f]"></a>app_harman_silent_check</STRONG> (Thumb, 90 bytes, Stack size 24 bytes, app_harman_behaviors.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = app_harman_silent_check &rArr; app_harman_aling_active_hfp_idx_set &rArr; app_link_get_connected_src_num &rArr; app_link_find_br_link
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[452]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_aling_active_hfp_idx_set
<LI><a href="#[74a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_get_active_idx
</UL>
<BR>[Called By]<UL><LI><a href="#[5a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_a2dp_stop_handle
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_bt_cback
</UL>

<P><STRONG><a name="[510]"></a>app_harman_is_record_a2dp_active_ever_set</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, app_harman_behaviors.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_handle_action
<LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_cfg_reset
<LI><a href="#[5a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_judge_active_a2dp_idx_and_qos
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_bt_cback
</UL>

<P><STRONG><a name="[5a5]"></a>app_harman_is_record_a2dp_active_ever_get</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, app_harman_behaviors.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_judge_active_a2dp_idx_and_qos
</UL>

<P><STRONG><a name="[4bc]"></a>app_harman_power_on_link_back_flag_set</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, app_harman_behaviors.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_dm_cback
<LI><a href="#[5ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_stable_sched
</UL>

<P><STRONG><a name="[5cd]"></a>app_harman_power_on_link_back_flag_get</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, app_harman_behaviors.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = app_harman_power_on_link_back_flag_get
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[5ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_stable_sched
<LI><a href="#[5ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_enable_b2s_disconnect_enter_pairing
</UL>

<P><STRONG><a name="[4e4]"></a>app_harman_dump_link_information</STRONG> (Thumb, 226 bytes, Stack size 56 bytes, app_harman_behaviors.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = app_harman_dump_link_information &rArr; app_bond_b2s_addr_get
</UL>
<BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[593]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bond_b2s_num_get
<LI><a href="#[594]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_flag_get
<LI><a href="#[517]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bond_b2s_addr_get
</UL>
<BR>[Called By]<UL><LI><a href="#[592]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkback_load_bond_list
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_link_policy_ind
</UL>

<P><STRONG><a name="[5d3]"></a>app_harman_ever_link_information</STRONG> (Thumb, 94 bytes, Stack size 40 bytes, app_harman_behaviors.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = app_harman_ever_link_information &rArr; app_bond_b2s_addr_get
</UL>
<BR>[Calls]<UL><LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp (via Veneer)
<LI><a href="#[593]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bond_b2s_num_get
<LI><a href="#[594]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_flag_get
<LI><a href="#[517]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bond_b2s_addr_get
</UL>
<BR>[Called By]<UL><LI><a href="#[5ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_stable_sched
</UL>

<P><STRONG><a name="[523]"></a>app_harman_is_already_connect_one_set</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, app_harman_behaviors.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_handle_action
<LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_cfg_reset
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_cback
</UL>

<P><STRONG><a name="[60e]"></a>app_harman_is_already_connect_one_get</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, app_harman_behaviors.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_cback
</UL>

<P><STRONG><a name="[5b9]"></a>app_harman_acl_disconn_handle</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, app_harman_behaviors.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = app_harman_acl_disconn_handle &rArr; app_harman_le_common_adv_update &rArr; app_harman_adv_data_update &rArr; ble_ext_adv_mgr_set_adv_data &rArr; ble_ext_adv_mgr_start_set_adv_param &rArr; ble_ext_adv_mgr_send_msg &rArr; ble_ext_adv_mgr_find_by_handle
</UL>
<BR>[Calls]<UL><LI><a href="#[45a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_connect_idle_to_power_off
<LI><a href="#[452]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_aling_active_hfp_idx_set
<LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_remote_device_name_crc_set
<LI><a href="#[426]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_le_common_adv_update
</UL>
<BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_bt_cback
</UL>

<P><STRONG><a name="[5bb]"></a>app_harman_sco_handle</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, app_harman_behaviors.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 432<LI>Call Chain = app_harman_sco_handle &rArr; app_harman_sco_status_notify &rArr; app_harman_devinfo_feature_report &rArr; app_harman_report_le_event &rArr; app_transfer_push_data_queue &rArr; app_transfer_pop_data_queue &rArr;  app_transfer_pop_data_queue (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_get_call_status
<LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_sco_status_notify
<LI><a href="#[45a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_connect_idle_to_power_off
<LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_a2dp_get_active_idx
<LI><a href="#[458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_sco_is_connected
</UL>
<BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_cback
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_bt_cback
</UL>

<P><STRONG><a name="[5a9]"></a>app_harman_a2dp_stop_handle</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, app_harman_behaviors.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = app_harman_a2dp_stop_handle &rArr; app_harman_connect_idle_to_power_off &rArr; app_harman_power_off_option_timer_start &rArr; app_start_timer &rArr; remove_timeout_msg_from_list
</UL>
<BR>[Calls]<UL><LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_get_call_status
<LI><a href="#[45a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_connect_idle_to_power_off
<LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_a2dp_get_active_idx
<LI><a href="#[458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_sco_is_connected
<LI><a href="#[63f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_silent_check
</UL>
<BR>[Called By]<UL><LI><a href="#[5a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_judge_active_a2dp_idx_and_qos
</UL>

<P><STRONG><a name="[319]"></a>app_harman_behaviors_init</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, app_harman_behaviors.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = app_harman_behaviors_init &rArr; app_timer_reg_cb
</UL>
<BR>[Calls]<UL><LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_reg_cb
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[913]"></a>harman_btxfcs</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, app_harman_ble.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = harman_btxfcs
</UL>
<BR>[Called By]<UL><LI><a href="#[424]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;harman_crc16_ibm
<LI><a href="#[914]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_ble_generate_bt_mac_crc
</UL>

<P><STRONG><a name="[438]"></a>app_harman_ble_data_get</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, app_harman_ble.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_common_adv_init
</UL>

<P><STRONG><a name="[439]"></a>app_harman_ble_data_len_get</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, app_harman_ble.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_common_adv_init
</UL>

<P><STRONG><a name="[421]"></a>harman_le_common_disc</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, app_harman_ble.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = harman_le_common_disc &rArr; app_ble_gap_disconnect
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_find_le_link_by_conn_id
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_gap_disconnect
</UL>
<BR>[Called By]<UL><LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_device_handle_b2s_bt_disconnected
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vendor_harman_cmd_timer_callback
</UL>

<P><STRONG><a name="[426]"></a>app_harman_le_common_adv_update</STRONG> (Thumb, 128 bytes, Stack size 24 bytes, app_harman_ble.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = app_harman_le_common_adv_update &rArr; app_harman_adv_data_update &rArr; ble_ext_adv_mgr_set_adv_data &rArr; ble_ext_adv_mgr_start_set_adv_param &rArr; ble_ext_adv_mgr_send_msg &rArr; ble_ext_adv_mgr_find_by_handle
</UL>
<BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[43a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_license_pid_get
<LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_license_cid_get
<LI><a href="#[42d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_adv_data_update
</UL>
<BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_bt_cback
<LI><a href="#[422]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gaps_gatt_client_callback
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_cback
<LI><a href="#[5b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_acl_disconn_handle
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_le_disconnect_cb
</UL>

<P><STRONG><a name="[425]"></a>app_harman_remote_device_name_crc_set</STRONG> (Thumb, 146 bytes, Stack size 32 bytes, app_harman_ble.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = app_harman_remote_device_name_crc_set &rArr; app_link_find_br_link
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_find_br_link
<LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_get_b2s_link_num
<LI><a href="#[46d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_find_le_link_by_addr
<LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_find_le_link_by_conn_id
</UL>
<BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_bt_cback
<LI><a href="#[422]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gaps_gatt_client_callback
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_cback
<LI><a href="#[5b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_acl_disconn_handle
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_le_disconnect_cb
</UL>

<P><STRONG><a name="[424]"></a>harman_crc16_ibm</STRONG> (Thumb, 54 bytes, Stack size 20 bytes, app_harman_ble.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = harman_crc16_ibm &rArr; harman_btxfcs
</UL>
<BR>[Calls]<UL><LI><a href="#[913]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;harman_btxfcs
</UL>
<BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_bt_cback
<LI><a href="#[422]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gaps_gatt_client_callback
<LI><a href="#[915]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_ble_process
</UL>

<P><STRONG><a name="[43c]"></a>app_harman_ble_bt_mac_crc_get</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, app_harman_ble.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = app_harman_ble_bt_mac_crc_get &rArr; app_harman_ble_generate_bt_mac_crc &rArr; harman_btxfcs
</UL>
<BR>[Calls]<UL><LI><a href="#[914]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_ble_generate_bt_mac_crc
</UL>
<BR>[Called By]<UL><LI><a href="#[3f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_common_adv_init
</UL>

<P><STRONG><a name="[915]"></a>app_harman_ble_process</STRONG> (Thumb, 252 bytes, Stack size 80 bytes, app_harman_ble.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen (via Veneer)
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_get_b2s_link_num
<LI><a href="#[424]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;harman_crc16_ibm
<LI><a href="#[3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_rtk_adv_start
<LI><a href="#[677]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ota_get_active_bank
</UL>

<P><STRONG><a name="[916]"></a>app_harman_ble_adv_stop</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, app_harman_ble.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = app_harman_ble_adv_stop &rArr; app_ble_common_adv_stop &rArr; ble_ext_adv_mgr_disable &rArr; ble_ext_adv_mgr_send_msg &rArr; ble_ext_adv_mgr_find_by_handle
</UL>
<BR>[Calls]<UL><LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_common_adv_stop
<LI><a href="#[412]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_common_adv_get_state
</UL>
<BR>[Called By]<UL><LI><a href="#[93a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_vendor_cmd_process
</UL>

<P><STRONG><a name="[93b]"></a>app_harman_ble_ota_get_notify_direct</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, app_harman_ble_ota.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[919]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_report_le_event
</UL>

<P><STRONG><a name="[3be]"></a>app_harman_ble_ota_get_upgrate_status</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, app_harman_ble_ota.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_gap_handle_new_conn_state_evt
<LI><a href="#[455]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_update_call_status
<LI><a href="#[5dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_prepare_for_dedicated_enter_pairing_mode
<LI><a href="#[81f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_ccp_update_call_status
<LI><a href="#[949]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_devinfo_get
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_timeout_cb
</UL>

<P><STRONG><a name="[133c]"></a>app_harman_ble_ota_set_upgrate_status</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, app_harman_ble_ota.o(.text), UNUSED)

<P><STRONG><a name="[3bf]"></a>app_harman_ota_exit</STRONG> (Thumb, 166 bytes, Stack size 32 bytes, app_harman_ble_ota.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 456<LI>Call Chain = app_harman_ota_exit &rArr; app_harman_ota_notification_report &rArr; app_harman_report_le_event &rArr; app_transfer_push_data_queue &rArr; app_transfer_pop_data_queue &rArr;  app_transfer_pop_data_queue (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_auto_power_off_enable
<LI><a href="#[49b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sniff_mode_b2s_enable_all
<LI><a href="#[91c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;harman_get_active_mobile_cmd_link
<LI><a href="#[91a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;harman_ble_ota_state_reset
<LI><a href="#[918]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_ota_notification_report
<LI><a href="#[911]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_ble_heartbeat_notify
</UL>
<BR>[Called By]<UL><LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_gap_handle_new_conn_state_evt
<LI><a href="#[455]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_update_call_status
<LI><a href="#[81f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_ccp_update_call_status
<LI><a href="#[932]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_ble_ota_handle
<LI><a href="#[930]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_ble_ota_payload_handle
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_ble_ota_timeout_cb
</UL>

<P><STRONG><a name="[932]"></a>app_harman_ble_ota_handle</STRONG> (Thumb, 408 bytes, Stack size 72 bytes, app_harman_ble_ota.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 608<LI>Call Chain = app_harman_ble_ota_handle &rArr; app_harman_ble_ota_payload_handle &rArr; app_harman_ble_ota_end_check &rArr; app_harman_ota_notification_report &rArr; app_harman_report_le_event &rArr; app_transfer_push_data_queue &rArr; app_transfer_pop_data_queue &rArr;  app_transfer_pop_data_queue (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_auto_power_off_disable
<LI><a href="#[499]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sniff_mode_b2s_disable_all
<LI><a href="#[3d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_set_prefer_conn_param
<LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_ota_exit
<LI><a href="#[3c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_heartbeat_check_timer_stop
<LI><a href="#[933]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_ble_ota_start_para_set
<LI><a href="#[91b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_ble_ota_package_check_timer_stop
<LI><a href="#[91d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_ble_ota_package_check_timer_start
<LI><a href="#[930]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_ble_ota_payload_handle
<LI><a href="#[91a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;harman_ble_ota_state_reset
<LI><a href="#[918]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_ota_notification_report
</UL>
<BR>[Called By]<UL><LI><a href="#[93a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_vendor_cmd_process
</UL>

<P><STRONG><a name="[133d]"></a>app_harman_ble_ota_power_on_handle</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, app_harman_ble_ota.o(.text), UNUSED)

<P><STRONG><a name="[31a]"></a>app_harman_ble_ota_init</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, app_harman_ble_ota.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = app_harman_ble_ota_init &rArr; app_timer_reg_cb
</UL>
<BR>[Calls]<UL><LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_reg_cb
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[428]"></a>app_harman_parser_process</STRONG> (Thumb, 326 bytes, Stack size 40 bytes, app_harman_parser.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1972<LI>Call Chain = app_harman_parser_process &rArr; app_harman_cmd_set_handle &rArr; app_harman_vendor_cmd_process &rArr; app_harman_devinfo_set &rArr; app_mmi_handle_action &rArr; app_multi_active_hfp_transfer &rArr; app_multi_handle_sniffing_link_disconnect_event &rArr; app_multi_judge_active_a2dp_idx_and_qos &rArr;  app_multi_handle_sniffing_link_disconnect_event (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_find_le_link_by_conn_id
<LI><a href="#[938]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_cmd_set_handle
</UL>
<BR>[Called By]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_service_transmit_srv_cb
</UL>

<P><STRONG><a name="[919]"></a>app_harman_report_le_event</STRONG> (Thumb, 308 bytes, Stack size 64 bytes, app_harman_report.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 360<LI>Call Chain = app_harman_report_le_event &rArr; app_transfer_push_data_queue &rArr; app_transfer_pop_data_queue &rArr;  app_transfer_pop_data_queue (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_transfer_push_data_queue
<LI><a href="#[93b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_ble_ota_get_notify_direct
</UL>
<BR>[Called By]<UL><LI><a href="#[942]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_devinfo_feature_report
<LI><a href="#[93a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_vendor_cmd_process
<LI><a href="#[937]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_devinfo_notification_report
<LI><a href="#[918]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_ota_notification_report
</UL>

<P><STRONG><a name="[298]"></a>app_harman_wait_ota_report</STRONG> (Thumb, 102 bytes, Stack size 24 bytes, app_harman_report.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = app_harman_wait_ota_report &rArr; app_transfer_push_data_queue &rArr; app_transfer_pop_data_queue &rArr;  app_transfer_pop_data_queue (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_transfer_push_data_queue
</UL>
<BR>[Called By]<UL><LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;transmit_write_post_callback
</UL>

<P><STRONG><a name="[337]"></a>app_harman_vp_data_header_get</STRONG> (Thumb, 256 bytes, Stack size 72 bytes, app_harman_vendor_cmd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = app_harman_vp_data_header_get &rArr; storage_partition_get &rArr; strncmp
</UL>
<BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_flash_nor_read
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_cfg_store
<LI><a href="#[93c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;storage_partition_get
</UL>
<BR>[Called By]<UL><LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_cfg_init
<LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_cfg_reset
</UL>

<P><STRONG><a name="[93d]"></a>app_harman_set_lea_mode</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, app_harman_vendor_cmd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = app_harman_set_lea_mode &rArr; app_bond_clear_non_rws_keys &rArr; app_bond_get_b2s_link_record &rArr; app_bond_b2s_addr_get
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_cfg_store
<LI><a href="#[4ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bond_clear_non_rws_keys
<LI><a href="#[4ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_reboot
</UL>
<BR>[Called By]<UL><LI><a href="#[94c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_devinfo_set
</UL>

<P><STRONG><a name="[94a]"></a>app_harman_get_lea_mode</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, app_harman_vendor_cmd.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[949]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_devinfo_get
</UL>

<P><STRONG><a name="[334]"></a>app_harman_cfg_reset</STRONG> (Thumb, 172 bytes, Stack size 16 bytes, app_harman_vendor_cmd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = app_harman_cfg_reset
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_is_record_a2dp_active_ever_set
<LI><a href="#[523]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_is_already_connect_one_set
</UL>
<BR>[Called By]<UL><LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_cfg_reset
</UL>

<P><STRONG><a name="[91c]"></a>harman_get_active_mobile_cmd_link</STRONG> (Thumb, 120 bytes, Stack size 48 bytes, app_harman_vendor_cmd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = harman_get_active_mobile_cmd_link
</UL>
<BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_battery_status_notify
<LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_sco_status_notify
<LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_ota_exit
<LI><a href="#[93a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_vendor_cmd_process
<LI><a href="#[939]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_cmd_support_check
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_ble_ota_timeout_cb
</UL>

<P><STRONG><a name="[93e]"></a>check_recon_profile</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, app_harman_vendor_cmd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = check_recon_profile &rArr; app_bt_policy_default_connect &rArr;  app_bt_policy_state_machine (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_default_connect
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vendor_harman_cmd_timer_callback
</UL>

<P><STRONG><a name="[486]"></a>app_harman_lr_balance_set</STRONG> (Thumb, 484 bytes, Stack size 72 bytes, app_harman_vendor_cmd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 664<LI>Call Chain = app_harman_lr_balance_set &rArr; audio_volume_balance_set &rArr; audio_mgr_dispatch &rArr; audio_mgr_buffer_event_handle &rArr; audio_buffer_playing_state &rArr; audio_track_restart &rArr; audio_session_state_set &rArr;  audio_mgr_dispatch (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[941]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_volume_balance_set
<LI><a href="#[93f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[940]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
</UL>
<BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_avrcp_bt_cback
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_avrcp_timeout_cb
<LI><a href="#[44d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_vol_set
<LI><a href="#[4fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_iphone_abs_vol_wrap_audio_track_volume_out_set
<LI><a href="#[4fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_volume_down
<LI><a href="#[4f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_volume_up
<LI><a href="#[85d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_vol_update_track_volume
<LI><a href="#[94c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_devinfo_set
</UL>

<P><STRONG><a name="[4af]"></a>harman_set_vp_ringtone_balance</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, app_harman_vendor_cmd.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_init
<LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_tone_type_play
<LI><a href="#[4ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_factory_reset
<LI><a href="#[657]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_cmd_handle
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_msg_rfc_audio_cback
</UL>

<P><STRONG><a name="[395]"></a>app_harman_battery_status_notify</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, app_harman_vendor_cmd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 416<LI>Call Chain = app_harman_battery_status_notify &rArr; app_harman_devinfo_feature_report &rArr; app_harman_report_le_event &rArr; app_transfer_push_data_queue &rArr; app_transfer_pop_data_queue &rArr;  app_transfer_pop_data_queue (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[943]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_get_battery_status
<LI><a href="#[942]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_devinfo_feature_report
<LI><a href="#[91c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;harman_get_active_mobile_cmd_link
</UL>
<BR>[Called By]<UL><LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_charger_handle_soc
</UL>

<P><STRONG><a name="[910]"></a>app_harman_ble_paired_status_notify</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, app_harman_vendor_cmd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 416<LI>Call Chain = app_harman_ble_paired_status_notify &rArr; app_harman_devinfo_feature_report &rArr; app_harman_report_le_event &rArr; app_transfer_push_data_queue &rArr; app_transfer_pop_data_queue &rArr;  app_transfer_pop_data_queue (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[942]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_devinfo_feature_report
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_timeout_cb
</UL>

<P><STRONG><a name="[44a]"></a>app_harman_sco_status_notify</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, app_harman_vendor_cmd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 416<LI>Call Chain = app_harman_sco_status_notify &rArr; app_harman_devinfo_feature_report &rArr; app_harman_report_le_event &rArr; app_transfer_push_data_queue &rArr; app_transfer_pop_data_queue &rArr;  app_transfer_pop_data_queue (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_get_b2s_link_num
<LI><a href="#[458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_sco_is_connected
<LI><a href="#[942]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_devinfo_feature_report
<LI><a href="#[91c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;harman_get_active_mobile_cmd_link
</UL>
<BR>[Called By]<UL><LI><a href="#[47f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_stop_ring_alert_timer
<LI><a href="#[471]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_timeout_cb
<LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_ring_alert
<LI><a href="#[5bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_sco_handle
</UL>

<P><STRONG><a name="[911]"></a>app_harman_ble_heartbeat_notify</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, app_harman_vendor_cmd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 408<LI>Call Chain = app_harman_ble_heartbeat_notify &rArr; app_harman_devinfo_feature_report &rArr; app_harman_report_le_event &rArr; app_transfer_push_data_queue &rArr; app_transfer_pop_data_queue &rArr;  app_transfer_pop_data_queue (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_common_adv_get_conn_id
<LI><a href="#[942]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_devinfo_feature_report
<LI><a href="#[90d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_heartbeat_check_timer_start
</UL>
<BR>[Called By]<UL><LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_ota_exit
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_timeout_cb
</UL>

<P><STRONG><a name="[478]"></a>harman_sidetone_set_dsp</STRONG> (Thumb, 150 bytes, Stack size 16 bytes, app_harman_vendor_cmd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = harman_sidetone_set_dsp &rArr; sidetone_create &rArr; audio_effect_inheritor_set
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_find_br_link
<LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_get_active_idx
<LI><a href="#[6d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sidetone_enable
<LI><a href="#[6d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sidetone_create
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_effect_attach
<LI><a href="#[944]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sidetone_gain_set
</UL>
<BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_audio_cback
<LI><a href="#[94c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_devinfo_set
</UL>

<P><STRONG><a name="[937]"></a>app_harman_devinfo_notification_report</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, app_harman_vendor_cmd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = app_harman_devinfo_notification_report &rArr; app_harman_report_le_event &rArr; app_transfer_push_data_queue &rArr; app_transfer_pop_data_queue &rArr;  app_transfer_pop_data_queue (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[919]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_report_le_event
</UL>
<BR>[Called By]<UL><LI><a href="#[94c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_devinfo_set
<LI><a href="#[933]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_ble_ota_start_para_set
<LI><a href="#[912]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_devinfo_notify
</UL>

<P><STRONG><a name="[936]"></a>app_harman_devinfo_feature_pack</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, app_harman_vendor_cmd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = app_harman_devinfo_feature_pack
</UL>
<BR>[Calls]<UL><LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[94c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_devinfo_set
<LI><a href="#[949]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_devinfo_get
<LI><a href="#[93a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_vendor_cmd_process
<LI><a href="#[933]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_ble_ota_start_para_set
<LI><a href="#[912]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_devinfo_notify
</UL>

<P><STRONG><a name="[912]"></a>app_harman_devinfo_notify</STRONG> (Thumb, 248 bytes, Stack size 40 bytes, app_harman_vendor_cmd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 408<LI>Call Chain = app_harman_devinfo_notify &rArr; app_harman_devinfo_notification_report &rArr; app_harman_report_le_event &rArr; app_transfer_push_data_queue &rArr; app_transfer_pop_data_queue &rArr;  app_transfer_pop_data_queue (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_get_param
<LI><a href="#[934]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_header_addr_by_img_id (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[43a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_license_pid_get
<LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_license_cid_get
<LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_common_adv_get_conn_id
<LI><a href="#[943]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_get_battery_status
<LI><a href="#[937]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_devinfo_notification_report
<LI><a href="#[936]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_devinfo_feature_pack
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_timeout_cb
</UL>

<P><STRONG><a name="[509]"></a>app_harman_find_my_buds_ring_stop</STRONG> (Thumb, 160 bytes, Stack size 16 bytes, app_harman_vendor_cmd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 568<LI>Call Chain = app_harman_find_my_buds_ring_stop &rArr; audio_volume_out_unmute &rArr; audio_mgr_dispatch &rArr; audio_mgr_buffer_event_handle &rArr; audio_buffer_playing_state &rArr; audio_track_restart &rArr; audio_session_state_set &rArr;  audio_mgr_dispatch (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_stop_timer
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_cfg_store
<LI><a href="#[45f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_tone_type_cancel
<LI><a href="#[4b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;voice_prompt_volume_set
<LI><a href="#[7b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_volume_out_unmute
</UL>
<BR>[Called By]<UL><LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_handle_action
<LI><a href="#[94c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_devinfo_set
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vendor_harman_cmd_timer_callback
</UL>

<P><STRONG><a name="[4eb]"></a>app_harman_total_playback_time_update</STRONG> (Thumb, 130 bytes, Stack size 32 bytes, app_harman_vendor_cmd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = app_harman_total_playback_time_update &rArr; app_cfg_store
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_cfg_store
<LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_a2dp_get_active_idx
<LI><a href="#[946]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_get_flag_need_clear_total_time
</UL>
<BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_bt_cback
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_link_policy_ind
<LI><a href="#[6bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_spp_cmd_set_handle
<LI><a href="#[949]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_devinfo_get
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vendor_harman_cmd_timer_callback
</UL>

<P><STRONG><a name="[4b5]"></a>app_harman_total_power_on_time_update</STRONG> (Thumb, 116 bytes, Stack size 32 bytes, app_harman_vendor_cmd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = app_harman_total_power_on_time_update &rArr; app_cfg_store
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_cfg_store
<LI><a href="#[946]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_get_flag_need_clear_total_time
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_dm_cback
<LI><a href="#[6bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_spp_cmd_set_handle
<LI><a href="#[949]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_devinfo_get
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vendor_harman_cmd_timer_callback
</UL>

<P><STRONG><a name="[947]"></a>app_refine_a2dp_bitrate</STRONG> (Thumb, 186 bytes, Stack size 16 bytes, app_harman_vendor_cmd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = app_refine_a2dp_bitrate &rArr; bt_a2dp_stream_endpoint_add &rArr; a2dp_codec_add &rArr; avdtp_codec_add
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[4a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_a2dp_stream_endpoint_add
<LI><a href="#[49f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_a2dp_role_set
</UL>
<BR>[Called By]<UL><LI><a href="#[94c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_devinfo_set
</UL>

<P><STRONG><a name="[948]"></a>app_set_a2dp_disc_reason</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, app_harman_vendor_cmd.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[4ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_recon_a2dp
<LI><a href="#[94d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_reconnect_avdtp_profile
</UL>

<P><STRONG><a name="[4ed]"></a>app_harman_recon_a2dp</STRONG> (Thumb, 124 bytes, Stack size 32 bytes, app_harman_vendor_cmd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = app_harman_recon_a2dp &rArr; app_start_timer &rArr; remove_timeout_msg_from_list
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_start_timer
<LI><a href="#[948]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_set_a2dp_disc_reason
</UL>
<BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_link_policy_ind
</UL>

<P><STRONG><a name="[939]"></a>app_harman_cmd_support_check</STRONG> (Thumb, 106 bytes, Stack size 32 bytes, app_harman_vendor_cmd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = app_harman_cmd_support_check &rArr; harman_get_active_mobile_cmd_link
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[91c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;harman_get_active_mobile_cmd_link
</UL>
<BR>[Called By]<UL><LI><a href="#[938]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_cmd_set_handle
</UL>

<P><STRONG><a name="[93a]"></a>app_harman_vendor_cmd_process</STRONG> (Thumb, 980 bytes, Stack size 64 bytes, app_harman_vendor_cmd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1900<LI>Call Chain = app_harman_vendor_cmd_process &rArr; app_harman_devinfo_set &rArr; app_mmi_handle_action &rArr; app_multi_active_hfp_transfer &rArr; app_multi_handle_sniffing_link_disconnect_event &rArr; app_multi_judge_active_a2dp_idx_and_qos &rArr;  app_multi_handle_sniffing_link_disconnect_event (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[94c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_devinfo_set
<LI><a href="#[949]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_devinfo_get
<LI><a href="#[942]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_devinfo_feature_report
<LI><a href="#[91c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;harman_get_active_mobile_cmd_link
<LI><a href="#[919]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_report_le_event
<LI><a href="#[936]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_devinfo_feature_pack
<LI><a href="#[932]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_ble_ota_handle
<LI><a href="#[916]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_ble_adv_stop
</UL>
<BR>[Called By]<UL><LI><a href="#[938]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_cmd_set_handle
</UL>

<P><STRONG><a name="[318]"></a>app_harman_vendor_cmd_init</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, app_harman_vendor_cmd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = app_harman_vendor_cmd_init &rArr; app_start_timer &rArr; remove_timeout_msg_from_list
</UL>
<BR>[Calls]<UL><LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_reg_cb
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_start_timer
<LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_register_pm_excluded
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[4bb]"></a>app_harman_license_product_info_dump</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, app_harman_license.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = app_harman_license_product_info_dump
</UL>
<BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_dm_cback
</UL>

<P><STRONG><a name="[43a]"></a>app_harman_license_pid_get</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, app_harman_license.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[426]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_le_common_adv_update
<LI><a href="#[3f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_common_adv_init
<LI><a href="#[949]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_devinfo_get
<LI><a href="#[930]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_ble_ota_payload_handle
<LI><a href="#[912]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_devinfo_notify
</UL>

<P><STRONG><a name="[43b]"></a>app_harman_license_cid_get</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, app_harman_license.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[426]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_le_common_adv_update
<LI><a href="#[3f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_common_adv_init
<LI><a href="#[949]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_devinfo_get
<LI><a href="#[912]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_devinfo_notify
</UL>

<P><STRONG><a name="[94b]"></a>app_harman_license_serials_num_get</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, app_harman_license.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[949]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_devinfo_get
</UL>

<P><STRONG><a name="[946]"></a>app_harman_get_flag_need_clear_total_time</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, app_harman_license.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_total_power_on_time_update
<LI><a href="#[4eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_total_playback_time_update
</UL>

<P><STRONG><a name="[2fb]"></a>app_harman_license_init</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, app_harman_license.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = app_harman_license_init &rArr; audio_probe_dsp_evt_cback_register &rArr; dsp_mgr_register_cback &rArr; sys_ipc_subscribe
</UL>
<BR>[Calls]<UL><LI><a href="#[643]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_probe_dsp_cback_register
<LI><a href="#[955]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_probe_dsp_evt_cback_register
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[956]"></a>app_harman_license_gfps_info_dump</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, app_harman_license.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = app_harman_license_gfps_info_dump
</UL>
<BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_license_get
<LI><a href="#[6bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_spp_cmd_set_handle
</UL>

<P><STRONG><a name="[2fa]"></a>app_harman_license_get</STRONG> (Thumb, 122 bytes, Stack size 112 bytes, app_harman_license.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = app_harman_license_get &rArr; app_harman_license_load_from_ftl &rArr; app_harman_license_save_to_ftl
</UL>
<BR>[Calls]<UL><LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4 (via Veneer)
<LI><a href="#[956]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_license_gfps_info_dump
<LI><a href="#[959]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_license_pid_idx_get
<LI><a href="#[958]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_license_load_from_ftl
<LI><a href="#[950]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_license_gfps_info_get
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[6bd]"></a>app_harman_spp_cmd_set_handle</STRONG> (Thumb, 594 bytes, Stack size 152 bytes, app_harman_license.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1780<LI>Call Chain = app_harman_spp_cmd_set_handle &rArr; app_mmi_handle_action &rArr; app_multi_active_hfp_transfer &rArr; app_multi_handle_sniffing_link_disconnect_event &rArr; app_multi_judge_active_a2dp_idx_and_qos &rArr;  app_multi_handle_sniffing_link_disconnect_event (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4 (via Veneer)
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_report_event
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_handle_action
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_cfg_store
<LI><a href="#[4bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;power_mode_set
<LI><a href="#[4b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_total_power_on_time_update
<LI><a href="#[4eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_total_playback_time_update
<LI><a href="#[95a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_hall_get_ic_euid
<LI><a href="#[956]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_license_gfps_info_dump
<LI><a href="#[957]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_license_save_to_ftl
<LI><a href="#[950]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_license_gfps_info_get
</UL>
<BR>[Called By]<UL><LI><a href="#[698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_cmd_handler
</UL>

<P><STRONG><a name="[674]"></a>app_harman_eq_dsp_param_get</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, app_harman_eq.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = app_harman_eq_dsp_param_get &rArr; app_eq_dsp_param_get &rArr; eq_utils_map_get
</UL>
<BR>[Calls]<UL><LI><a href="#[664]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_eq_dsp_param_get
</UL>
<BR>[Called By]<UL><LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_eq_reset_unsaved
<LI><a href="#[673]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_get_eq_data
<LI><a href="#[634]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_eq_create
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_dsp_event_cback
<LI><a href="#[969]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_get_default_eq_info
<LI><a href="#[94f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_eq_info_handle
</UL>

<P><STRONG><a name="[673]"></a>app_harman_get_eq_data</STRONG> (Thumb, 278 bytes, Stack size 224 bytes, app_harman_eq.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 424<LI>Call Chain = app_harman_get_eq_data &rArr; Double2FixPoint &rArr; pow &rArr; sqrt &rArr; _dsqrt
</UL>
<BR>[Calls]<UL><LI><a href="#[4cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz (via Veneer)
<LI><a href="#[963]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz (via Veneer)
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr (via Veneer)
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[674]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_eq_dsp_param_get
<LI><a href="#[965]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_eq_dsp_stage_get
<LI><a href="#[95c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Double2FixPoint
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
<LI><a href="#[964]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
</UL>
<BR>[Called By]<UL><LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_eq_reset_unsaved
<LI><a href="#[634]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_eq_create
<LI><a href="#[94f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_eq_info_handle
</UL>

<P><STRONG><a name="[625]"></a>app_harman_set_eq_boost_gain</STRONG> (Thumb, 178 bytes, Stack size 32 bytes, app_harman_eq.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = app_harman_set_eq_boost_gain &rArr; audio_probe_dsp_send &rArr; h2d_cmd_send &rArr; shm_cmd_send &rArr; wr_queue_send
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_find_br_link
<LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_a2dp_get_active_idx
<LI><a href="#[650]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_probe_dsp_send
</UL>
<BR>[Called By]<UL><LI><a href="#[675]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_eq_param_set
<LI><a href="#[634]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_eq_create
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_policy_cback
<LI><a href="#[967]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_eq_dsp_set
</UL>

<P><STRONG><a name="[672]"></a>app_harman_eq_info_load_from_ftl</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, app_harman_eq.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = app_harman_eq_info_load_from_ftl
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_eq_reset_unsaved
<LI><a href="#[668]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_haraman_eq_init
<LI><a href="#[634]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_eq_create
<LI><a href="#[94c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_devinfo_set
</UL>

<P><STRONG><a name="[3c0]"></a>app_harman_eq_reset_unsaved</STRONG> (Thumb, 108 bytes, Stack size 344 bytes, app_harman_eq.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 768<LI>Call Chain = app_harman_eq_reset_unsaved &rArr; app_harman_get_eq_data &rArr; Double2FixPoint &rArr; pow &rArr; sqrt &rArr; _dsqrt
</UL>
<BR>[Calls]<UL><LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_a2dp_get_active_idx
<LI><a href="#[673]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_get_eq_data
<LI><a href="#[672]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_eq_info_load_from_ftl
<LI><a href="#[674]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_eq_dsp_param_get
<LI><a href="#[967]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_eq_dsp_set
</UL>
<BR>[Called By]<UL><LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_gap_handle_new_conn_state_evt
</UL>

<P><STRONG><a name="[94f]"></a>app_harman_eq_info_handle</STRONG> (Thumb, 186 bytes, Stack size 360 bytes, app_harman_eq.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 784<LI>Call Chain = app_harman_eq_info_handle &rArr; app_harman_get_eq_data &rArr; Double2FixPoint &rArr; pow &rArr; sqrt &rArr; _dsqrt
</UL>
<BR>[Calls]<UL><LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_cfg_store
<LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_a2dp_get_active_idx
<LI><a href="#[673]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_get_eq_data
<LI><a href="#[674]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_eq_dsp_param_get
<LI><a href="#[967]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_eq_dsp_set
<LI><a href="#[966]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_eq_info_save_to_ftl
</UL>
<BR>[Called By]<UL><LI><a href="#[94c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_devinfo_set
</UL>

<P><STRONG><a name="[624]"></a>app_harman_set_stream_track_started</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, app_harman_eq.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_policy_cback
</UL>

<P><STRONG><a name="[668]"></a>app_haraman_eq_init</STRONG> (Thumb, 88 bytes, Stack size 232 bytes, app_harman_eq.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 648<LI>Call Chain = app_haraman_eq_init &rArr; app_harman_get_default_eq_info &rArr; FixPoint2Double &rArr; pow &rArr; sqrt &rArr; _dsqrt
</UL>
<BR>[Calls]<UL><LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[672]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_eq_info_load_from_ftl
<LI><a href="#[969]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_get_default_eq_info
<LI><a href="#[966]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_eq_info_save_to_ftl
<LI><a href="#[955]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_probe_dsp_evt_cback_register
</UL>
<BR>[Called By]<UL><LI><a href="#[645]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_eq_init
</UL>

<P><STRONG><a name="[3a0]"></a>app_harman_adc_io_read</STRONG> (Thumb, 194 bytes, Stack size 120 bytes, app_harman_adc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = app_harman_adc_io_read &rArr; Pad_Config &rArr; flash_cur_bank_img_payload_addr_get
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pad_Config (via Veneer)
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pad_TableConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_discharger_ntc_timer_start
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_charger_handle_msg
<LI><a href="#[6ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_adc_adp_in_handle
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ext_charger_charging_error_handler
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ext_charger_charging_finish_handler
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ext_charger_charging_handler
<LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ext_charger_no_charge_handler
</UL>

<P><STRONG><a name="[6f0]"></a>app_harman_adc_voltage_battery_get</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, app_harman_adc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ext_charger_charging_finish_handler
</UL>

<P><STRONG><a name="[6ea]"></a>app_harman_adc_update_cur_ntc_value</STRONG> (Thumb, 60 bytes, Stack size 32 bytes, app_harman_adc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = app_harman_adc_update_cur_ntc_value
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[96c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ext_charger_vbat_is_normal_get
</UL>
<BR>[Called By]<UL><LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_discharger_ntc_check_valid
<LI><a href="#[6e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ext_charger_check_ntc_threshold
<LI><a href="#[96d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_discharger_adc_update
</UL>

<P><STRONG><a name="[382]"></a>app_harman_discharger_ntc_check_valid</STRONG> (Thumb, 100 bytes, Stack size 32 bytes, app_harman_adc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = app_harman_discharger_ntc_check_valid &rArr; app_harman_adc_update_cur_ntc_value
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mp_hci_test_mode_is_running
<LI><a href="#[6ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_adc_update_cur_ntc_value
</UL>
<BR>[Called By]<UL><LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_handle_action
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_key_timeout_cb
<LI><a href="#[4c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_bt_and_ble_ready_check
<LI><a href="#[96d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_discharger_adc_update
</UL>

<P><STRONG><a name="[96d]"></a>app_harman_discharger_adc_update</STRONG> (Thumb, 134 bytes, Stack size 32 bytes, app_harman_adc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1660<LI>Call Chain = app_harman_discharger_adc_update &rArr; app_mmi_handle_action &rArr; app_multi_active_hfp_transfer &rArr; app_multi_handle_sniffing_link_disconnect_event &rArr; app_multi_judge_active_a2dp_idx_and_qos &rArr;  app_multi_handle_sniffing_link_disconnect_event (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_handle_action
<LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_discharger_ntc_check_valid
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dlps_enable (via Veneer)
<LI><a href="#[6ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_adc_update_cur_ntc_value
</UL>
<BR>[Called By]<UL><LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_adc_msg_handle
</UL>

<P><STRONG><a name="[3a1]"></a>app_harman_adc_ntc_check_timer_start</STRONG> (Thumb, 70 bytes, Stack size 32 bytes, app_harman_adc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = app_harman_adc_ntc_check_timer_start &rArr; app_start_timer &rArr; remove_timeout_msg_from_list
</UL>
<BR>[Calls]<UL><LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_stop_timer
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_start_timer
<LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_register_pm_excluded
</UL>
<BR>[Called By]<UL><LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_discharger_ntc_timer_start
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_charger_handle_msg
<LI><a href="#[6ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_adc_adp_in_handle
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ext_charger_charging_handler
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_adc_timeout_cb
</UL>

<P><STRONG><a name="[3a2]"></a>app_harman_discharger_ntc_timer_start</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, app_harman_adc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = app_harman_discharger_ntc_timer_start &rArr; app_harman_adc_io_read &rArr; Pad_Config &rArr; flash_cur_bank_img_payload_addr_get
</UL>
<BR>[Calls]<UL><LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_adc_ntc_check_timer_start
<LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_adc_io_read
</UL>
<BR>[Called By]<UL><LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_adc_init
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_charger_handle_msg
<LI><a href="#[6fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_adc_adp_out_handle
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_adc_timeout_cb
</UL>

<P><STRONG><a name="[349]"></a>app_harman_adc_msg_handle</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, app_harman_adc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1668<LI>Call Chain = app_harman_adc_msg_handle &rArr; app_harman_discharger_adc_update &rArr; app_mmi_handle_action &rArr; app_multi_active_hfp_transfer &rArr; app_multi_handle_sniffing_link_disconnect_event &rArr; app_multi_judge_active_a2dp_idx_and_qos &rArr;  app_multi_handle_sniffing_link_disconnect_event (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[6f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ext_charger_ntc_adc_update
<LI><a href="#[6f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ext_charger_check_status
<LI><a href="#[96d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_discharger_adc_update
</UL>
<BR>[Called By]<UL><LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_io_msg_handler
</UL>

<P><STRONG><a name="[6f3]"></a>app_harman_adc_ntc_check_timer_started</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, app_harman_adc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ext_charger_bt_cback
</UL>

<P><STRONG><a name="[50a]"></a>app_harman_adc_ntc_check_timer_stop</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, app_harman_adc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = app_harman_adc_ntc_check_timer_stop &rArr; app_stop_timer &rArr; remove_timeout_msg_from_list
</UL>
<BR>[Calls]<UL><LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_stop_timer
</UL>
<BR>[Called By]<UL><LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_handle_action
</UL>

<P><STRONG><a name="[6ed]"></a>app_harman_adc_adp_in_handle</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, app_harman_adc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = app_harman_adc_adp_in_handle &rArr; app_harman_adc_io_read &rArr; Pad_Config &rArr; flash_cur_bank_img_payload_addr_get
</UL>
<BR>[Calls]<UL><LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_adc_ntc_check_timer_start
<LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_adc_io_read
</UL>
<BR>[Called By]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ext_charger_no_charge_handler
</UL>

<P><STRONG><a name="[6fa]"></a>app_harman_adc_adp_out_handle</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, app_harman_adc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = app_harman_adc_adp_out_handle &rArr; app_harman_discharger_ntc_timer_start &rArr; app_harman_adc_io_read &rArr; Pad_Config &rArr; flash_cur_bank_img_payload_addr_get
</UL>
<BR>[Calls]<UL><LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_discharger_ntc_timer_start
</UL>
<BR>[Called By]<UL><LI><a href="#[6ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ext_charger_handle_adp_out
</UL>

<P><STRONG><a name="[30f]"></a>app_harman_adc_init</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, app_harman_adc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = app_harman_adc_init &rArr; app_harman_discharger_ntc_timer_start &rArr; app_harman_adc_io_read &rArr; Pad_Config &rArr; flash_cur_bank_img_payload_addr_get
</UL>
<BR>[Calls]<UL><LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_discharger_ntc_timer_start
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_reg_cb
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[6f8]"></a>app_harman_usb_hiccup_check_timer_started</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, app_harman_usb_connector_protect.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ext_charger_dlps_check_cb
</UL>

<P><STRONG><a name="[96f]"></a>app_harman_usb_adc_ntc_check_timer_stop</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, app_harman_usb_connector_protect.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = app_harman_usb_adc_ntc_check_timer_stop &rArr; app_stop_timer &rArr; remove_timeout_msg_from_list
</UL>
<BR>[Calls]<UL><LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_stop_timer
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_usb_adc_timeout_cb
<LI><a href="#[970]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_usb_adc_ntc_check_timer_start
</UL>

<P><STRONG><a name="[971]"></a>app_harman_usb_adc_io_read</STRONG> (Thumb, 248 bytes, Stack size 128 bytes, app_harman_usb_connector_protect.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = app_harman_usb_adc_io_read &rArr; Pad_Config &rArr; flash_cur_bank_img_payload_addr_get
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pad_Config (via Veneer)
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pad_TableConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[6ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_usb_connector_adp_in_handle
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_usb_adc_timeout_cb
</UL>

<P><STRONG><a name="[972]"></a>app_harman_usb_connector_protect_nv_clear</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, app_harman_usb_connector_protect.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = app_harman_usb_connector_protect_nv_clear &rArr; app_cfg_store
</UL>
<BR>[Calls]<UL><LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_cfg_store
</UL>
<BR>[Called By]<UL><LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_usb_connector_adc_update
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_usb_adc_timeout_cb
</UL>

<P><STRONG><a name="[344]"></a>app_harman_usb_connector_adc_update</STRONG> (Thumb, 210 bytes, Stack size 48 bytes, app_harman_usb_connector_protect.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = app_harman_usb_connector_adc_update &rArr; app_ext_charger_ntc_adc_update &rArr; app_ext_charger_state_machine &rArr; app_ext_charger_update_charger_state &rArr; app_charger_state_cb &rArr; app_io_msg_send
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pad_Config (via Veneer)
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_cfg_store
<LI><a href="#[6f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ext_charger_ntc_adc_update
<LI><a href="#[68f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adp_get_current_state
<LI><a href="#[972]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_usb_connector_protect_nv_clear
<LI><a href="#[973]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_usb_connector_mosfet_close
<LI><a href="#[970]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_usb_adc_ntc_check_timer_start
<LI><a href="#[96e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_usb_hiccup_check_timer_start
</UL>
<BR>[Called By]<UL><LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_io_msg_handler
</UL>

<P><STRONG><a name="[6e9]"></a>app_harman_usb_connector_detect_is_normal</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, app_harman_usb_connector_protect.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ext_charger_check_ntc_threshold
</UL>

<P><STRONG><a name="[6ee]"></a>app_harman_usb_connector_adp_in_handle</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, app_harman_usb_connector_protect.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = app_harman_usb_connector_adp_in_handle &rArr; app_harman_usb_adc_io_read &rArr; Pad_Config &rArr; flash_cur_bank_img_payload_addr_get
</UL>
<BR>[Calls]<UL><LI><a href="#[971]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_usb_adc_io_read
<LI><a href="#[970]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_usb_adc_ntc_check_timer_start
</UL>
<BR>[Called By]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ext_charger_no_charge_handler
</UL>

<P><STRONG><a name="[6fb]"></a>app_harman_usb_connector_adp_out_handle</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, app_harman_usb_connector_protect.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = app_harman_usb_connector_adp_out_handle &rArr; app_harman_usb_hiccup_check_timer_start &rArr; app_start_timer &rArr; remove_timeout_msg_from_list
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[96e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_usb_hiccup_check_timer_start
</UL>
<BR>[Called By]<UL><LI><a href="#[6ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ext_charger_handle_adp_out
</UL>

<P><STRONG><a name="[6f9]"></a>app_harman_usb_connector_protect_init</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, app_harman_usb_connector_protect.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = app_harman_usb_connector_protect_init &rArr; hal_gpio_init_pin &rArr; hal_gpio_init &rArr; hal_gpio_int_init &rArr; RamVectorTableUpdate &rArr; RamVectorTableUpdate_for_xip_isr
</UL>
<BR>[Calls]<UL><LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_init_pin
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_reg_cb
</UL>
<BR>[Called By]<UL><LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ext_charger_init
</UL>

<P><STRONG><a name="[367]"></a>bt_mgr_cback_register</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, bt_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = bt_mgr_cback_register
</UL>
<BR>[Called By]<UL><LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_spp_init
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sass_policy_init
<LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_init
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_led_init
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_key_init
<LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_init
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gap_init
<LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ext_charger_init
<LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_init
<LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_cmd_init
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_init
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_gap_init
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_avrcp_init
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_init
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_a2dp_init
<LI><a href="#[68a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_msg_rfc_init
<LI><a href="#[869]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_init
</UL>

<P><STRONG><a name="[974]"></a>bt_mgr_event_post</STRONG> (Thumb, 50 bytes, Stack size 24 bytes, bt_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = bt_mgr_event_post
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[454]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_sco_link_switch
<LI><a href="#[9ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_mgr_handle_vnd_msg
<LI><a href="#[9aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_mgr_handle_spp_msg
<LI><a href="#[9a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_mgr_handle_hsp_msg
<LI><a href="#[9a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_mgr_handle_hfp_msg
<LI><a href="#[9a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_mgr_handle_avrcp_msg
<LI><a href="#[9a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_mgr_handle_a2dp_msg
<LI><a href="#[9a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_mgr_handle_sco_msg
<LI><a href="#[99c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_mgr_handle_acl_msg
<LI><a href="#[996]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_mgr_handle_gap_msg
<LI><a href="#[97e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_device_mode_sm
</UL>

<P><STRONG><a name="[975]"></a>bt_find_br_link</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, bt_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = bt_find_br_link
</UL>
<BR>[Calls]<UL><LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_spp_data_send
<LI><a href="#[497]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_a2dp_connect_cfm
<LI><a href="#[48d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_avrcp_volume_change_req
<LI><a href="#[494]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_avrcp_volume_change_register_rsp
<LI><a href="#[491]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_avrcp_vendor_rsp_send
<LI><a href="#[492]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_avrcp_connect_cfm
<LI><a href="#[454]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_sco_link_switch
<LI><a href="#[482]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_sco_link_retrans_window_set
<LI><a href="#[474]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_hfp_voice_recognition_disable_req
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_hfp_speaker_gain_level_report
<LI><a href="#[469]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_hfp_microphone_gain_level_report
<LI><a href="#[467]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_hfp_connect_cfm
<LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_hfp_call_answer_req
<LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_hfp_batt_level_report
<LI><a href="#[5ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_hfp_audio_connect_cfm
<LI><a href="#[5b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_a2dp_stream_start_cfm
<LI><a href="#[5a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_a2dp_active_link_set
<LI><a href="#[576]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_spp_disconnect_all_req
<LI><a href="#[56f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_spp_connect_req
<LI><a href="#[575]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_hfp_disconnect_req
<LI><a href="#[56e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_hfp_connect_req
<LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_avrcp_disconnect_req
<LI><a href="#[56d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_avrcp_connect_req
<LI><a href="#[573]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_a2dp_disconnect_req
<LI><a href="#[56c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_a2dp_connect_req
<LI><a href="#[51e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_hfp_voice_recognition_enable_req
<LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_hfp_release_held_or_waiting_call_req
<LI><a href="#[51a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_hfp_release_active_call_accept_held_or_waiting_call_req
<LI><a href="#[519]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_hfp_join_two_calls_req
<LI><a href="#[51c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_hfp_hold_active_call_accept_held_or_waiting_call_req
<LI><a href="#[516]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_hfp_dial_last_number_req
<LI><a href="#[4fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_hfp_call_terminate_req
<LI><a href="#[515]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_hfp_audio_disconnect_req
<LI><a href="#[512]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_avrcp_stop
<LI><a href="#[50f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_avrcp_play
<LI><a href="#[511]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_avrcp_pause
<LI><a href="#[513]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_avrcp_forward
<LI><a href="#[514]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_avrcp_backward
<LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_sniff_mode_disable
<LI><a href="#[6cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_sniff_mode_enable
<LI><a href="#[62b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_sco_data_send
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_link_tx_power_set
<LI><a href="#[638]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_a2dp_stream_delay_report_request
<LI><a href="#[614]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_link_tpoll_range_set
<LI><a href="#[60d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_link_rssi_golden_range_set
<LI><a href="#[5e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_link_role_switch
<LI><a href="#[610]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_acl_pkt_type_set
<LI><a href="#[611]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_acl_conn_reject
<LI><a href="#[612]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_acl_conn_accept
<LI><a href="#[697]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_spp_credits_give
<LI><a href="#[699]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_spp_connect_cfm
<LI><a href="#[68d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_hfp_audio_connect_req
<LI><a href="#[680]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_link_qos_set
<LI><a href="#[9e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_spp_cback
<LI><a href="#[9c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_hfp_cback
<LI><a href="#[9bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_a2dp_cback
<LI><a href="#[9b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_sniff_mode_config
<LI><a href="#[983]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_roleswap_get_piconet_id
<LI><a href="#[981]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_roleswap_get_piconet_clk
<LI><a href="#[9a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_pm_cback_unregister
<LI><a href="#[99e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_pm_cback_register
<LI><a href="#[9aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_mgr_handle_spp_msg
<LI><a href="#[9a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_mgr_handle_hsp_msg
<LI><a href="#[9a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_mgr_handle_hfp_msg
<LI><a href="#[9a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_mgr_handle_avrcp_msg
<LI><a href="#[9a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_mgr_handle_a2dp_msg
<LI><a href="#[9a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_mgr_handle_sco_msg
<LI><a href="#[99c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_mgr_handle_acl_msg
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_hfp_pm_cback
<LI><a href="#[995]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_a2dp_pm_cback
<LI><a href="#[994]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_mgr_pm_cback
<LI><a href="#[990]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_link_rssi_report
<LI><a href="#[98e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_link_per_report
<LI><a href="#[98b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_handle_sco_disconnect
<LI><a href="#[97a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_link_policy_set
<LI><a href="#[9eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_avrcp_cback
<LI><a href="#[e36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_gap_cback
<LI><a href="#[e34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_handle_acl_status_info
</UL>

<P><STRONG><a name="[9ac]"></a>bt_find_br_link_by_handle</STRONG> (Thumb, 78 bytes, Stack size 20 bytes, bt_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = bt_find_br_link_by_handle
</UL>
<BR>[Called By]<UL><LI><a href="#[9ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_mgr_handle_vnd_msg
<LI><a href="#[e36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_gap_cback
<LI><a href="#[e35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_handle_vendor_evt_info
</UL>

<P><STRONG><a name="[9c1]"></a>bt_alloc_br_link</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, bt_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = bt_alloc_br_link
</UL>
<BR>[Called By]<UL><LI><a href="#[56f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_spp_connect_req
<LI><a href="#[56e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_hfp_connect_req
<LI><a href="#[56d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_avrcp_connect_req
<LI><a href="#[56c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_a2dp_connect_req
<LI><a href="#[e36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_gap_cback
<LI><a href="#[e34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_handle_acl_status_info
</UL>

<P><STRONG><a name="[976]"></a>bt_free_br_link</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, bt_mgr.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
<LI><a href="#[977]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_delete
</UL>
<BR>[Called By]<UL><LI><a href="#[e34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_handle_acl_status_info
</UL>

<P><STRONG><a name="[332]"></a>bt_local_name_set</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, bt_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = bt_local_name_set
</UL>
<BR>[Calls]<UL><LI><a href="#[978]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_br_set_dev_name
</UL>
<BR>[Called By]<UL><LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_cfg_reset
<LI><a href="#[6a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_cmd_legacy_name_set
</UL>

<P><STRONG><a name="[69c]"></a>bt_periodic_inquiry_stop</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, bt_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = bt_periodic_inquiry_stop
</UL>
<BR>[Calls]<UL><LI><a href="#[979]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_br_stop_periodic_inquiry
</UL>
<BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_cmd_bt_cback
</UL>

<P><STRONG><a name="[97a]"></a>bt_link_policy_set</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, bt_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = bt_link_policy_set &rArr; bt_find_br_link
</UL>
<BR>[Calls]<UL><LI><a href="#[97b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_br_cfg_acl_link_policy
<LI><a href="#[975]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_find_br_link
</UL>
<BR>[Called By]<UL><LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_sniff_mode_disable
<LI><a href="#[6cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_sniff_mode_enable
<LI><a href="#[99d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_pm_sm
<LI><a href="#[98b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_handle_sco_disconnect
<LI><a href="#[e36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_gap_cback
</UL>

<P><STRONG><a name="[5e4]"></a>bt_link_role_switch</STRONG> (Thumb, 278 bytes, Stack size 32 bytes, bt_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = bt_link_role_switch &rArr; bt_sniff_mode_exit &rArr; sys_timer_restart &rArr; sys_hp_timer_list_insert &rArr; hw_timer_restart &rArr; hw_timer_safe_stop &rArr; hw_timer_set_div
</UL>
<BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[97d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_br_cfg_acl_link_role
<LI><a href="#[97c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_sniff_mode_exit
<LI><a href="#[975]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_find_br_link
</UL>
<BR>[Called By]<UL><LI><a href="#[5e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_roleswitch_b2s_check
<LI><a href="#[98b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_handle_sco_disconnect
<LI><a href="#[e34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_handle_acl_status_info
</UL>

<P><STRONG><a name="[97e]"></a>bt_device_mode_sm</STRONG> (Thumb, 284 bytes, Stack size 88 bytes, bt_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = bt_device_mode_sm &rArr; bt_mgr_event_post
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[97f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_br_set_radio_mode
<LI><a href="#[974]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_mgr_event_post
</UL>
<BR>[Called By]<UL><LI><a href="#[60b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_device_mode_set
<LI><a href="#[996]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_mgr_handle_gap_msg
</UL>

<P><STRONG><a name="[60b]"></a>bt_device_mode_set</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, bt_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = bt_device_mode_set &rArr; bt_device_mode_sm &rArr; bt_mgr_event_post
</UL>
<BR>[Calls]<UL><LI><a href="#[97e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_device_mode_sm
</UL>
<BR>[Called By]<UL><LI><a href="#[383]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_mgr_dev_ctrl
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_timer_cback
</UL>

<P><STRONG><a name="[980]"></a>bt_piconet_clk_get</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, bt_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = bt_piconet_clk_get &rArr; bt_roleswap_get_piconet_clk &rArr; bt_find_br_link
</UL>
<BR>[Calls]<UL><LI><a href="#[981]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_roleswap_get_piconet_clk
</UL>
<BR>[Called By]<UL><LI><a href="#[a18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_buffer_prequeue_state
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;playback_buffer_jb_evt_cback
</UL>

<P><STRONG><a name="[982]"></a>bt_piconet_id_get</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, bt_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = bt_piconet_id_get &rArr; bt_roleswap_get_piconet_id &rArr; bt_find_br_link
</UL>
<BR>[Calls]<UL><LI><a href="#[983]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_roleswap_get_piconet_id
</UL>
<BR>[Called By]<UL><LI><a href="#[f21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_remote_init
</UL>

<P><STRONG><a name="[612]"></a>bt_acl_conn_accept</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, bt_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = bt_acl_conn_accept &rArr; bt_find_br_link
</UL>
<BR>[Calls]<UL><LI><a href="#[984]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_br_accept_acl_conn
<LI><a href="#[975]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_find_br_link
</UL>
<BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_cback
</UL>

<P><STRONG><a name="[611]"></a>bt_acl_conn_reject</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, bt_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = bt_acl_conn_reject &rArr; bt_find_br_link
</UL>
<BR>[Calls]<UL><LI><a href="#[985]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_br_reject_acl_conn
<LI><a href="#[975]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_find_br_link
</UL>
<BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_cback
</UL>

<P><STRONG><a name="[62b]"></a>bt_sco_data_send</STRONG> (Thumb, 418 bytes, Stack size 64 bytes, bt_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = bt_sco_data_send &rArr; bt_find_br_link
</UL>
<BR>[Calls]<UL><LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[987]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_br_send_sco_data
<LI><a href="#[986]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_br_get_sco_buffer
<LI><a href="#[975]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_find_br_link
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_policy_cback
</UL>

<P><STRONG><a name="[5f7]"></a>bt_link_key_cfm</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, bt_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = bt_link_key_cfm
</UL>
<BR>[Calls]<UL><LI><a href="#[988]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_br_link_key_cfm
</UL>
<BR>[Called By]<UL><LI><a href="#[5f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_bt_event_pre_handle
</UL>

<P><STRONG><a name="[5f8]"></a>bt_link_pin_code_cfm</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, bt_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = bt_link_pin_code_cfm
</UL>
<BR>[Calls]<UL><LI><a href="#[989]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_br_pin_code_req_cfm
</UL>
<BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_cback
<LI><a href="#[5f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_bt_event_pre_handle
</UL>

<P><STRONG><a name="[454]"></a>bt_sco_link_switch</STRONG> (Thumb, 138 bytes, Stack size 96 bytes, bt_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = bt_sco_link_switch &rArr; bt_find_br_link
</UL>
<BR>[Calls]<UL><LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[7ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_br_vendor_set_active_sco
<LI><a href="#[975]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_find_br_link
<LI><a href="#[974]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_mgr_event_post
</UL>
<BR>[Called By]<UL><LI><a href="#[451]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_set_active_idx
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_bt_cback
</UL>

<P><STRONG><a name="[482]"></a>bt_sco_link_retrans_window_set</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, bt_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = bt_sco_link_retrans_window_set &rArr; bt_find_br_link
</UL>
<BR>[Calls]<UL><LI><a href="#[98a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_br_set_sco_retrans_window
<LI><a href="#[975]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_find_br_link
</UL>
<BR>[Called By]<UL><LI><a href="#[480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_adjust_sco_window
</UL>

<P><STRONG><a name="[98b]"></a>bt_handle_sco_disconnect</STRONG> (Thumb, 118 bytes, Stack size 16 bytes, bt_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = bt_handle_sco_disconnect &rArr; bt_link_role_switch &rArr; bt_sniff_mode_exit &rArr; sys_timer_restart &rArr; sys_hp_timer_list_insert &rArr; hw_timer_restart &rArr; hw_timer_safe_stop &rArr; hw_timer_set_div
</UL>
<BR>[Calls]<UL><LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr (via Veneer)
<LI><a href="#[5e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_link_role_switch
<LI><a href="#[97a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_link_policy_set
<LI><a href="#[975]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_find_br_link
</UL>
<BR>[Called By]<UL><LI><a href="#[9a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_mgr_handle_sco_msg
</UL>

<P><STRONG><a name="[610]"></a>bt_acl_pkt_type_set</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, bt_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = bt_acl_pkt_type_set &rArr; bt_find_br_link
</UL>
<BR>[Calls]<UL><LI><a href="#[98c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_br_cfg_acl_pkt_type
<LI><a href="#[975]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_find_br_link
</UL>
<BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_cback
</UL>

<P><STRONG><a name="[680]"></a>bt_link_qos_set</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, bt_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = bt_link_qos_set &rArr; gap_br_send_setup_qos_req
</UL>
<BR>[Calls]<UL><LI><a href="#[98d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_br_send_setup_qos_req
<LI><a href="#[975]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_find_br_link
</UL>
<BR>[Called By]<UL><LI><a href="#[5a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_qos_param_update
<LI><a href="#[67e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_set_idle_tpoll
<LI><a href="#[67f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_bt_link_qos_set
</UL>

<P><STRONG><a name="[98e]"></a>bt_link_per_report</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, bt_mgr.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[98f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_br_vendor_set_monitor
<LI><a href="#[975]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_find_br_link
</UL>

<P><STRONG><a name="[990]"></a>bt_link_rssi_report</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, bt_mgr.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[98f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_br_vendor_set_monitor
<LI><a href="#[975]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_find_br_link
</UL>

<P><STRONG><a name="[2df]"></a>bt_pairing_tx_power_set</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, bt_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = bt_pairing_tx_power_set
</UL>
<BR>[Calls]<UL><LI><a href="#[991]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_br_vendor_tx_power_set
</UL>
<BR>[Called By]<UL><LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_gap_init
</UL>

<P><STRONG><a name="[640]"></a>bt_link_tx_power_set</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, bt_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = bt_link_tx_power_set &rArr; bt_find_br_link
</UL>
<BR>[Calls]<UL><LI><a href="#[991]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_br_vendor_tx_power_set
<LI><a href="#[975]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_find_br_link
</UL>
<BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_bt_cback
</UL>

<P><STRONG><a name="[60d]"></a>bt_link_rssi_golden_range_set</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, bt_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = bt_link_rssi_golden_range_set &rArr; bt_find_br_link
</UL>
<BR>[Calls]<UL><LI><a href="#[992]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_br_vendor_rssi_golden_range_set
<LI><a href="#[975]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_find_br_link
</UL>
<BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_cback
</UL>

<P><STRONG><a name="[614]"></a>bt_link_tpoll_range_set</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, bt_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = bt_link_tpoll_range_set &rArr; bt_find_br_link
</UL>
<BR>[Calls]<UL><LI><a href="#[993]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_br_vendor_remote_tpoll_set
<LI><a href="#[975]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_find_br_link
</UL>
<BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_cback
<LI><a href="#[5a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_qos_param_update
</UL>

<P><STRONG><a name="[994]"></a>bt_mgr_pm_cback</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, bt_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = bt_mgr_pm_cback &rArr; bt_find_br_link
</UL>
<BR>[Calls]<UL><LI><a href="#[975]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_find_br_link
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bt_mgr.o(.text)
</UL>
<P><STRONG><a name="[995]"></a>bt_a2dp_pm_cback</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, bt_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = bt_a2dp_pm_cback &rArr; bt_find_br_link
</UL>
<BR>[Calls]<UL><LI><a href="#[975]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_find_br_link
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bt_mgr.o(.text)
</UL>
<P><STRONG><a name="[78]"></a>bt_hfp_pm_cback</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, bt_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = bt_hfp_pm_cback &rArr; bt_find_br_link
</UL>
<BR>[Calls]<UL><LI><a href="#[975]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_find_br_link
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bt_mgr.o(.text)
</UL>
<P><STRONG><a name="[996]"></a>bt_mgr_handle_gap_msg</STRONG> (Thumb, 588 bytes, Stack size 160 bytes, bt_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = bt_mgr_handle_gap_msg &rArr; bt_device_mode_sm &rArr; bt_mgr_event_post
</UL>
<BR>[Calls]<UL><LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4 (via Veneer)
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[998]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_sdp_record_register
<LI><a href="#[997]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_sdp_enable
<LI><a href="#[99b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_handle_del_sdp_rsp
<LI><a href="#[99a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_handle_add_sdp_rsp
<LI><a href="#[97e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_device_mode_sm
<LI><a href="#[974]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_mgr_event_post
<LI><a href="#[999]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncpy
</UL>
<BR>[Called By]<UL><LI><a href="#[9ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_mgr_dispatch
</UL>

<P><STRONG><a name="[99c]"></a>bt_mgr_handle_acl_msg</STRONG> (Thumb, 806 bytes, Stack size 80 bytes, bt_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = bt_mgr_handle_acl_msg &rArr; bt_pm_sm &rArr; bt_sniff_mode_exit &rArr; sys_timer_restart &rArr; sys_hp_timer_list_insert &rArr; hw_timer_restart &rArr; hw_timer_safe_stop &rArr; hw_timer_set_div
</UL>
<BR>[Calls]<UL><LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[99f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_roleswap_handle_link_policy
<LI><a href="#[99d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_pm_sm
<LI><a href="#[99e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_pm_cback_register
<LI><a href="#[975]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_find_br_link
<LI><a href="#[974]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_mgr_event_post
</UL>
<BR>[Called By]<UL><LI><a href="#[9ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_mgr_dispatch
</UL>

<P><STRONG><a name="[9a0]"></a>bt_mgr_handle_sco_msg</STRONG> (Thumb, 454 bytes, Stack size 88 bytes, bt_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = bt_mgr_handle_sco_msg &rArr; bt_handle_sco_disconnect &rArr; bt_link_role_switch &rArr; bt_sniff_mode_exit &rArr; sys_timer_restart &rArr; sys_hp_timer_list_insert &rArr; hw_timer_restart &rArr; hw_timer_safe_stop &rArr; hw_timer_set_div
</UL>
<BR>[Calls]<UL><LI><a href="#[9a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_roleswap_handle_sco_disconn
<LI><a href="#[9a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_roleswap_handle_sco_conn
<LI><a href="#[98b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_handle_sco_disconnect
<LI><a href="#[975]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_find_br_link
<LI><a href="#[974]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_mgr_event_post
</UL>
<BR>[Called By]<UL><LI><a href="#[9ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_mgr_dispatch
</UL>

<P><STRONG><a name="[9a3]"></a>bt_mgr_handle_a2dp_msg</STRONG> (Thumb, 672 bytes, Stack size 104 bytes, bt_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = bt_mgr_handle_a2dp_msg &rArr; bt_pm_cback_unregister &rArr; bt_find_br_link
</UL>
<BR>[Calls]<UL><LI><a href="#[9a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_roleswap_handle_profile_disconn
<LI><a href="#[9a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_roleswap_handle_profile_conn
<LI><a href="#[9a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_pm_cback_unregister
<LI><a href="#[99e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_pm_cback_register
<LI><a href="#[975]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_find_br_link
<LI><a href="#[974]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_mgr_event_post
</UL>
<BR>[Called By]<UL><LI><a href="#[9ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_mgr_dispatch
</UL>

<P><STRONG><a name="[9a7]"></a>bt_mgr_handle_avrcp_msg</STRONG> (Thumb, 1294 bytes, Stack size 96 bytes, bt_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = bt_mgr_handle_avrcp_msg &rArr; bt_find_br_link
</UL>
<BR>[Calls]<UL><LI><a href="#[9a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_roleswap_handle_profile_disconn
<LI><a href="#[9a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_roleswap_handle_profile_conn
<LI><a href="#[975]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_find_br_link
<LI><a href="#[974]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_mgr_event_post
</UL>
<BR>[Called By]<UL><LI><a href="#[9ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_mgr_dispatch
</UL>

<P><STRONG><a name="[9a8]"></a>bt_mgr_handle_hfp_msg</STRONG> (Thumb, 826 bytes, Stack size 96 bytes, bt_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = bt_mgr_handle_hfp_msg &rArr; bt_pm_cback_unregister &rArr; bt_find_br_link
</UL>
<BR>[Calls]<UL><LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen (via Veneer)
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[9a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_roleswap_handle_profile_disconn
<LI><a href="#[9a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_roleswap_handle_profile_conn
<LI><a href="#[9a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_pm_cback_unregister
<LI><a href="#[99e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_pm_cback_register
<LI><a href="#[975]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_find_br_link
<LI><a href="#[974]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_mgr_event_post
</UL>
<BR>[Called By]<UL><LI><a href="#[9ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_mgr_dispatch
</UL>

<P><STRONG><a name="[9a9]"></a>bt_mgr_handle_hsp_msg</STRONG> (Thumb, 188 bytes, Stack size 96 bytes, bt_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = bt_mgr_handle_hsp_msg &rArr; bt_pm_cback_unregister &rArr; bt_find_br_link
</UL>
<BR>[Calls]<UL><LI><a href="#[9a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_roleswap_handle_profile_disconn
<LI><a href="#[9a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_roleswap_handle_profile_conn
<LI><a href="#[9a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_pm_cback_unregister
<LI><a href="#[99e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_pm_cback_register
<LI><a href="#[975]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_find_br_link
<LI><a href="#[974]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_mgr_event_post
</UL>
<BR>[Called By]<UL><LI><a href="#[9ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_mgr_dispatch
</UL>

<P><STRONG><a name="[9aa]"></a>bt_mgr_handle_spp_msg</STRONG> (Thumb, 296 bytes, Stack size 88 bytes, bt_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = bt_mgr_handle_spp_msg &rArr; bt_find_br_link
</UL>
<BR>[Calls]<UL><LI><a href="#[9a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_roleswap_handle_profile_conn
<LI><a href="#[975]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_find_br_link
<LI><a href="#[974]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_mgr_event_post
</UL>
<BR>[Called By]<UL><LI><a href="#[9ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_mgr_dispatch
</UL>

<P><STRONG><a name="[9ab]"></a>bt_mgr_handle_vnd_msg</STRONG> (Thumb, 316 bytes, Stack size 152 bytes, bt_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = bt_mgr_handle_vnd_msg &rArr; bt_mgr_event_post
</UL>
<BR>[Calls]<UL><LI><a href="#[9ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_find_br_link_by_handle
<LI><a href="#[974]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_mgr_event_post
</UL>
<BR>[Called By]<UL><LI><a href="#[9ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_mgr_dispatch
</UL>

<P><STRONG><a name="[9ad]"></a>bt_mgr_dispatch</STRONG> (Thumb, 142 bytes, Stack size 16 bytes, bt_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = bt_mgr_dispatch &rArr; bt_mgr_handle_sco_msg &rArr; bt_handle_sco_disconnect &rArr; bt_link_role_switch &rArr; bt_sniff_mode_exit &rArr; sys_timer_restart &rArr; sys_hp_timer_list_insert &rArr; hw_timer_restart &rArr; hw_timer_safe_stop &rArr; hw_timer_set_div
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[9ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_mgr_handle_vnd_msg
<LI><a href="#[9aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_mgr_handle_spp_msg
<LI><a href="#[9a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_mgr_handle_hsp_msg
<LI><a href="#[9a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_mgr_handle_hfp_msg
<LI><a href="#[9a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_mgr_handle_avrcp_msg
<LI><a href="#[9a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_mgr_handle_a2dp_msg
<LI><a href="#[9a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_mgr_handle_sco_msg
<LI><a href="#[99c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_mgr_handle_acl_msg
<LI><a href="#[996]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_mgr_handle_gap_msg
</UL>
<BR>[Called By]<UL><LI><a href="#[9e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_spp_cback
<LI><a href="#[9c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_hfp_cback
<LI><a href="#[9bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_a2dp_cback
<LI><a href="#[9eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_avrcp_cback
<LI><a href="#[e36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_gap_cback
<LI><a href="#[e35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_handle_vendor_evt_info
<LI><a href="#[e34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_handle_acl_status_info
</UL>

<P><STRONG><a name="[328]"></a>bt_mgr_init</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, bt_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = bt_mgr_init &rArr; bt_sdp_init
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[9af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_sdp_init
<LI><a href="#[9ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_gap_init
</UL>
<BR>[Called By]<UL><LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;framework_init
</UL>

<P><STRONG><a name="[4a3]"></a>bt_remote_name_req</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, bt_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = bt_remote_name_req
</UL>
<BR>[Calls]<UL><LI><a href="#[4d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_br_get_remote_name
</UL>
<BR>[Called By]<UL><LI><a href="#[4a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_req_bt_remote_name
</UL>

<P><STRONG><a name="[97c]"></a>bt_sniff_mode_exit</STRONG> (Thumb, 186 bytes, Stack size 56 bytes, bt_pm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = bt_sniff_mode_exit &rArr; sys_timer_restart &rArr; sys_hp_timer_list_insert &rArr; hw_timer_restart &rArr; hw_timer_safe_stop &rArr; hw_timer_set_div
</UL>
<BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[9b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_restart
<LI><a href="#[9b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_br_exit_sniff_mode
</UL>
<BR>[Called By]<UL><LI><a href="#[497]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_a2dp_connect_cfm
<LI><a href="#[48d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_avrcp_volume_change_req
<LI><a href="#[494]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_avrcp_volume_change_register_rsp
<LI><a href="#[491]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_avrcp_vendor_rsp_send
<LI><a href="#[492]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_avrcp_connect_cfm
<LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_hfp_call_answer_req
<LI><a href="#[5b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_a2dp_stream_start_cfm
<LI><a href="#[576]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_spp_disconnect_all_req
<LI><a href="#[575]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_hfp_disconnect_req
<LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_avrcp_disconnect_req
<LI><a href="#[56d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_avrcp_connect_req
<LI><a href="#[573]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_a2dp_disconnect_req
<LI><a href="#[56c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_a2dp_connect_req
<LI><a href="#[512]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_avrcp_stop
<LI><a href="#[50f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_avrcp_play
<LI><a href="#[511]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_avrcp_pause
<LI><a href="#[513]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_avrcp_forward
<LI><a href="#[514]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_avrcp_backward
<LI><a href="#[638]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_a2dp_stream_delay_report_request
<LI><a href="#[5e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_link_role_switch
<LI><a href="#[68d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_hfp_audio_connect_req
<LI><a href="#[9c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_hfp_cback
<LI><a href="#[99d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_pm_sm
</UL>

<P><STRONG><a name="[9b2]"></a>bt_sniff_mode_enter</STRONG> (Thumb, 206 bytes, Stack size 56 bytes, bt_pm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = bt_sniff_mode_enter &rArr; gap_br_enter_sniff_mode
</UL>
<BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[9b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_br_enter_sniff_mode
</UL>
<BR>[Called By]<UL><LI><a href="#[99d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_pm_sm
</UL>

<P><STRONG><a name="[99d]"></a>bt_pm_sm</STRONG> (Thumb, 356 bytes, Stack size 24 bytes, bt_pm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = bt_pm_sm &rArr; bt_sniff_mode_exit &rArr; sys_timer_restart &rArr; sys_hp_timer_list_insert &rArr; hw_timer_restart &rArr; hw_timer_safe_stop &rArr; hw_timer_set_div
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[9b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_stop
<LI><a href="#[9b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_start
<LI><a href="#[9b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_sniff_mode_enter
<LI><a href="#[97c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_sniff_mode_exit
<LI><a href="#[97a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_link_policy_set
</UL>
<BR>[Called By]<UL><LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_sniff_mode_disable
<LI><a href="#[6cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_sniff_mode_enable
<LI><a href="#[9b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_pm_timeout_cback
<LI><a href="#[99c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_mgr_handle_acl_msg
<LI><a href="#[e34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_handle_acl_status_info
</UL>

<P><STRONG><a name="[9b6]"></a>bt_pm_timeout_cback</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, bt_pm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = bt_pm_timeout_cback &rArr; bt_pm_sm &rArr; bt_sniff_mode_exit &rArr; sys_timer_restart &rArr; sys_hp_timer_list_insert &rArr; hw_timer_restart &rArr; hw_timer_safe_stop &rArr; hw_timer_set_div
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[9b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_id_get
<LI><a href="#[99d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_pm_sm
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bt_pm.o(.text)
</UL>
<P><STRONG><a name="[99e]"></a>bt_pm_cback_register</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, bt_pm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = bt_pm_cback_register &rArr; bt_find_br_link
</UL>
<BR>[Calls]<UL><LI><a href="#[975]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_find_br_link
</UL>
<BR>[Called By]<UL><LI><a href="#[9a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_mgr_handle_hsp_msg
<LI><a href="#[9a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_mgr_handle_hfp_msg
<LI><a href="#[9a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_mgr_handle_a2dp_msg
<LI><a href="#[99c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_mgr_handle_acl_msg
</UL>

<P><STRONG><a name="[9a5]"></a>bt_pm_cback_unregister</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, bt_pm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = bt_pm_cback_unregister &rArr; bt_find_br_link
</UL>
<BR>[Calls]<UL><LI><a href="#[975]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_find_br_link
</UL>
<BR>[Called By]<UL><LI><a href="#[9a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_mgr_handle_hsp_msg
<LI><a href="#[9a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_mgr_handle_hfp_msg
<LI><a href="#[9a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_mgr_handle_a2dp_msg
</UL>

<P><STRONG><a name="[9b8]"></a>bt_sniff_mode_config</STRONG> (Thumb, 90 bytes, Stack size 32 bytes, bt_pm.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[9b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_create
<LI><a href="#[975]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_find_br_link
</UL>
<BR>[Called By]<UL><LI><a href="#[e34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_handle_acl_status_info
</UL>

<P><STRONG><a name="[6cb]"></a>bt_sniff_mode_enable</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, bt_pm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = bt_sniff_mode_enable &rArr; bt_pm_sm &rArr; bt_sniff_mode_exit &rArr; sys_timer_restart &rArr; sys_hp_timer_list_insert &rArr; hw_timer_restart &rArr; hw_timer_safe_stop &rArr; hw_timer_set_div
</UL>
<BR>[Calls]<UL><LI><a href="#[99d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_pm_sm
<LI><a href="#[97a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_link_policy_set
<LI><a href="#[975]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_find_br_link
</UL>
<BR>[Called By]<UL><LI><a href="#[49b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sniff_mode_b2s_enable_all
<LI><a href="#[5e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sniff_mode_b2s_enable
</UL>

<P><STRONG><a name="[4d8]"></a>bt_sniff_mode_disable</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, bt_pm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = bt_sniff_mode_disable &rArr; bt_pm_sm &rArr; bt_sniff_mode_exit &rArr; sys_timer_restart &rArr; sys_hp_timer_list_insert &rArr; hw_timer_restart &rArr; hw_timer_safe_stop &rArr; hw_timer_set_div
</UL>
<BR>[Calls]<UL><LI><a href="#[99d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_pm_sm
<LI><a href="#[97a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_link_policy_set
<LI><a href="#[975]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_find_br_link
</UL>
<BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_bt_cback
<LI><a href="#[499]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sniff_mode_b2s_disable_all
<LI><a href="#[521]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sniff_mode_disable_all
<LI><a href="#[60f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sniff_mode_b2s_disable
</UL>

<P><STRONG><a name="[9af]"></a>bt_sdp_init</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, bt_sdp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = bt_sdp_init
</UL>
<BR>[Calls]<UL><LI><a href="#[9ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_br_get_max_sdp_record_num
</UL>
<BR>[Called By]<UL><LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_mgr_init
</UL>

<P><STRONG><a name="[997]"></a>bt_sdp_enable</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, bt_sdp.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[996]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_mgr_handle_gap_msg
</UL>

<P><STRONG><a name="[998]"></a>bt_sdp_record_register</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, bt_sdp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = bt_sdp_record_register
</UL>
<BR>[Calls]<UL><LI><a href="#[9bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_br_reg_sdp_record
</UL>
<BR>[Called By]<UL><LI><a href="#[440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_sdp_record_add
<LI><a href="#[996]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_mgr_handle_gap_msg
</UL>

<P><STRONG><a name="[440]"></a>bt_sdp_record_add</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, bt_sdp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = bt_sdp_record_add &rArr; bt_sdp_record_register
</UL>
<BR>[Calls]<UL><LI><a href="#[998]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_sdp_record_register
</UL>
<BR>[Called By]<UL><LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sdp_init
</UL>

<P><STRONG><a name="[99a]"></a>bt_handle_add_sdp_rsp</STRONG> (Thumb, 134 bytes, Stack size 32 bytes, bt_sdp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = bt_handle_add_sdp_rsp
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[9bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_br_reg_sdp_record
</UL>
<BR>[Called By]<UL><LI><a href="#[996]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_mgr_handle_gap_msg
</UL>

<P><STRONG><a name="[99b]"></a>bt_handle_del_sdp_rsp</STRONG> (Thumb, 70 bytes, Stack size 24 bytes, bt_sdp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = bt_handle_del_sdp_rsp
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[996]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_mgr_handle_gap_msg
</UL>

<P><STRONG><a name="[497]"></a>bt_a2dp_connect_cfm</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, bt_a2dp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = bt_a2dp_connect_cfm &rArr; bt_sniff_mode_exit &rArr; sys_timer_restart &rArr; sys_hp_timer_list_insert &rArr; hw_timer_restart &rArr; hw_timer_safe_stop &rArr; hw_timer_set_div
</UL>
<BR>[Calls]<UL><LI><a href="#[9bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;a2dp_signal_connect_cfm
<LI><a href="#[97c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_sniff_mode_exit
<LI><a href="#[975]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_find_br_link
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_a2dp_bt_cback
<LI><a href="#[9bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_a2dp_cback
</UL>

<P><STRONG><a name="[9bd]"></a>bt_a2dp_cback</STRONG> (Thumb, 1078 bytes, Stack size 72 bytes, bt_a2dp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = bt_a2dp_cback &rArr; bt_mgr_dispatch &rArr; bt_mgr_handle_sco_msg &rArr; bt_handle_sco_disconnect &rArr; bt_link_role_switch &rArr; bt_sniff_mode_exit &rArr; sys_timer_restart &rArr; sys_hp_timer_list_insert &rArr; hw_timer_restart &rArr; hw_timer_safe_stop &rArr; hw_timer_set_div
</UL>
<BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[497]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_a2dp_connect_cfm
<LI><a href="#[9bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;a2dp_signal_start_cfm
<LI><a href="#[9be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;a2dp_disconnect_req
<LI><a href="#[9ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_mgr_dispatch
<LI><a href="#[975]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_find_br_link
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bt_a2dp.o(.text)
</UL>
<P><STRONG><a name="[638]"></a>bt_a2dp_stream_delay_report_request</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, bt_a2dp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = bt_a2dp_stream_delay_report_request &rArr; bt_sniff_mode_exit &rArr; sys_timer_restart &rArr; sys_hp_timer_list_insert &rArr; hw_timer_restart &rArr; hw_timer_safe_stop &rArr; hw_timer_set_div
</UL>
<BR>[Calls]<UL><LI><a href="#[9c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;a2dp_signal_delay_report
<LI><a href="#[97c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_sniff_mode_exit
<LI><a href="#[975]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_find_br_link
</UL>
<BR>[Called By]<UL><LI><a href="#[637]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_a2dp_stream_start_handle
</UL>

<P><STRONG><a name="[56c]"></a>bt_a2dp_connect_req</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, bt_a2dp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = bt_a2dp_connect_req &rArr; bt_sniff_mode_exit &rArr; sys_timer_restart &rArr; sys_hp_timer_list_insert &rArr; hw_timer_restart &rArr; hw_timer_safe_stop &rArr; hw_timer_set_div
</UL>
<BR>[Calls]<UL><LI><a href="#[9c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;a2dp_signal_connect_req
<LI><a href="#[97c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_sniff_mode_exit
<LI><a href="#[9c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_alloc_br_link
<LI><a href="#[975]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_find_br_link
</UL>
<BR>[Called By]<UL><LI><a href="#[56b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkback_profile_connect_start
</UL>

<P><STRONG><a name="[573]"></a>bt_a2dp_disconnect_req</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, bt_a2dp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = bt_a2dp_disconnect_req &rArr; bt_sniff_mode_exit &rArr; sys_timer_restart &rArr; sys_hp_timer_list_insert &rArr; hw_timer_restart &rArr; hw_timer_safe_stop &rArr; hw_timer_set_div
</UL>
<BR>[Calls]<UL><LI><a href="#[9be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;a2dp_disconnect_req
<LI><a href="#[97c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_sniff_mode_exit
<LI><a href="#[975]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_find_br_link
</UL>
<BR>[Called By]<UL><LI><a href="#[572]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkback_profile_disconnect_start
</UL>

<P><STRONG><a name="[5b8]"></a>bt_a2dp_stream_start_cfm</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, bt_a2dp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = bt_a2dp_stream_start_cfm &rArr; bt_sniff_mode_exit &rArr; sys_timer_restart &rArr; sys_hp_timer_list_insert &rArr; hw_timer_restart &rArr; hw_timer_safe_stop &rArr; hw_timer_set_div
</UL>
<BR>[Calls]<UL><LI><a href="#[9bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;a2dp_signal_start_cfm
<LI><a href="#[97c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_sniff_mode_exit
<LI><a href="#[975]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_find_br_link
</UL>
<BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_bt_cback
</UL>

<P><STRONG><a name="[5a1]"></a>bt_a2dp_active_link_set</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, bt_a2dp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = bt_a2dp_active_link_set &rArr; bt_find_br_link
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[975]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_find_br_link
</UL>
<BR>[Called By]<UL><LI><a href="#[59f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_a2dp_active_link_set
</UL>

<P><STRONG><a name="[4a1]"></a>bt_a2dp_stream_endpoint_add</STRONG> (Thumb, 116 bytes, Stack size 24 bytes, bt_a2dp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = bt_a2dp_stream_endpoint_add &rArr; a2dp_codec_add &rArr; avdtp_codec_add
</UL>
<BR>[Calls]<UL><LI><a href="#[9c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;a2dp_codec_add
</UL>
<BR>[Called By]<UL><LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_a2dp_init
<LI><a href="#[947]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_refine_a2dp_bitrate
</UL>

<P><STRONG><a name="[4a0]"></a>bt_a2dp_stream_endpoint_delete</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, bt_a2dp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = bt_a2dp_stream_endpoint_delete &rArr; a2dp_codec_delete &rArr; avdtp_codec_delete
</UL>
<BR>[Calls]<UL><LI><a href="#[9c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;a2dp_codec_delete
</UL>
<BR>[Called By]<UL><LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_a2dp_init
</UL>

<P><STRONG><a name="[49f]"></a>bt_a2dp_role_set</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, bt_a2dp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = bt_a2dp_role_set &rArr; a2dp_role_set &rArr; avdtp_role_set
</UL>
<BR>[Calls]<UL><LI><a href="#[9c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;a2dp_role_set
</UL>
<BR>[Called By]<UL><LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_a2dp_init
<LI><a href="#[947]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_refine_a2dp_bitrate
</UL>

<P><STRONG><a name="[49e]"></a>bt_a2dp_init</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, bt_a2dp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = bt_a2dp_init &rArr; a2dp_init &rArr; avdtp_init
</UL>
<BR>[Calls]<UL><LI><a href="#[9c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;a2dp_init
</UL>
<BR>[Called By]<UL><LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_a2dp_init
</UL>

<P><STRONG><a name="[464]"></a>bt_hfp_batt_level_report</STRONG> (Thumb, 152 bytes, Stack size 64 bytes, bt_hfp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = bt_hfp_batt_level_report &rArr; hfp_try_general_at_cmd &rArr; hfp_flush_cmd &rArr; hfp_send_general_at_cmd &rArr; rfc_data_req &rArr; rfc_check_send_credits &rArr; crc8EtsGen
</UL>
<BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[9c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_try_general_at_cmd
<LI><a href="#[975]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_find_br_link
<LI><a href="#[9c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2snprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_batt_level_report
<LI><a href="#[9c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_hfp_cback
</UL>

<P><STRONG><a name="[9c9]"></a>bt_hfp_cback</STRONG> (Thumb, 1752 bytes, Stack size 96 bytes, bt_hfp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 400<LI>Call Chain = bt_hfp_cback &rArr; bt_mgr_dispatch &rArr; bt_mgr_handle_sco_msg &rArr; bt_handle_sco_disconnect &rArr; bt_link_role_switch &rArr; bt_sniff_mode_exit &rArr; sys_timer_restart &rArr; sys_hp_timer_list_insert &rArr; hw_timer_restart &rArr; hw_timer_safe_stop &rArr; hw_timer_set_div
</UL>
<BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_hfp_batt_level_report
<LI><a href="#[5ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_br_send_sco_disconn_req
<LI><a href="#[9d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_send_nrec_disable
<LI><a href="#[9ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_send_cmee_enable
<LI><a href="#[9d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_send_clip
<LI><a href="#[9d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_send_clcc
<LI><a href="#[9cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_send_ccwa
<LI><a href="#[9d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_network_operator_format_set
<LI><a href="#[9cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_get_hf_capability
<LI><a href="#[9cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_get_ag_capability
<LI><a href="#[9cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_disconnect_req
<LI><a href="#[9ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_connect_cfm
<LI><a href="#[9d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_call_hold_action
<LI><a href="#[97c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_sniff_mode_exit
<LI><a href="#[9ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_mgr_dispatch
<LI><a href="#[975]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_find_br_link
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bt_hfp.o(.text)
</UL>
<P><STRONG><a name="[56e]"></a>bt_hfp_connect_req</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, bt_hfp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = bt_hfp_connect_req &rArr; hfp_connect_req &rArr; rfc_conn_req &rArr; rfc_alloc_chann &rArr; sys_timer_delete &rArr; sys_hp_timer_list_remove &rArr; hw_timer_restart &rArr; hw_timer_safe_stop &rArr; hw_timer_set_div
</UL>
<BR>[Calls]<UL><LI><a href="#[9d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_connect_req
<LI><a href="#[9c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_alloc_br_link
<LI><a href="#[975]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_find_br_link
</UL>
<BR>[Called By]<UL><LI><a href="#[56b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkback_profile_connect_start
</UL>

<P><STRONG><a name="[575]"></a>bt_hfp_disconnect_req</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, bt_hfp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = bt_hfp_disconnect_req &rArr; bt_sniff_mode_exit &rArr; sys_timer_restart &rArr; sys_hp_timer_list_insert &rArr; hw_timer_restart &rArr; hw_timer_safe_stop &rArr; hw_timer_set_div
</UL>
<BR>[Calls]<UL><LI><a href="#[5ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_br_send_sco_disconn_req
<LI><a href="#[9cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_disconnect_req
<LI><a href="#[97c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_sniff_mode_exit
<LI><a href="#[975]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_find_br_link
</UL>
<BR>[Called By]<UL><LI><a href="#[572]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkback_profile_disconnect_start
</UL>

<P><STRONG><a name="[468]"></a>bt_hfp_speaker_gain_level_report</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, bt_hfp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = bt_hfp_speaker_gain_level_report &rArr; hfp_inform_ag_speaker_gain &rArr; hfp_try_general_at_cmd &rArr; hfp_flush_cmd &rArr; hfp_send_general_at_cmd &rArr; rfc_data_req &rArr; rfc_check_send_credits &rArr; crc8EtsGen
</UL>
<BR>[Calls]<UL><LI><a href="#[9d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_inform_ag_speaker_gain
<LI><a href="#[975]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_find_br_link
</UL>
<BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_bt_cback
<LI><a href="#[4fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_volume_down
<LI><a href="#[4f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_volume_up
</UL>

<P><STRONG><a name="[469]"></a>bt_hfp_microphone_gain_level_report</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, bt_hfp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = bt_hfp_microphone_gain_level_report &rArr; hfp_inform_ag_microphone_gain &rArr; hfp_try_general_at_cmd &rArr; hfp_flush_cmd &rArr; hfp_send_general_at_cmd &rArr; rfc_data_req &rArr; rfc_check_send_credits &rArr; crc8EtsGen
</UL>
<BR>[Calls]<UL><LI><a href="#[9d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_inform_ag_microphone_gain
<LI><a href="#[975]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_find_br_link
</UL>
<BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_bt_cback
</UL>

<P><STRONG><a name="[516]"></a>bt_hfp_dial_last_number_req</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, bt_hfp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = bt_hfp_dial_last_number_req &rArr; hfp_hsp_button_press &rArr; hfp_try_general_at_cmd &rArr; hfp_flush_cmd &rArr; hfp_send_general_at_cmd &rArr; rfc_data_req &rArr; rfc_check_send_credits &rArr; crc8EtsGen
</UL>
<BR>[Calls]<UL><LI><a href="#[9d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_hsp_button_press
<LI><a href="#[9d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_dial_last_number
<LI><a href="#[975]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_find_br_link
</UL>
<BR>[Called By]<UL><LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_handle_action
</UL>

<P><STRONG><a name="[472]"></a>bt_hfp_call_answer_req</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, bt_hfp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = bt_hfp_call_answer_req &rArr; hfp_hsp_button_press &rArr; hfp_try_general_at_cmd &rArr; hfp_flush_cmd &rArr; hfp_send_general_at_cmd &rArr; rfc_data_req &rArr; rfc_check_send_credits &rArr; crc8EtsGen
</UL>
<BR>[Calls]<UL><LI><a href="#[9d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_hsp_button_press
<LI><a href="#[9da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_accept_phone_call
<LI><a href="#[97c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_sniff_mode_exit
<LI><a href="#[975]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_find_br_link
</UL>
<BR>[Called By]<UL><LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_handle_action
<LI><a href="#[471]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_timeout_cb
</UL>

<P><STRONG><a name="[4fe]"></a>bt_hfp_call_terminate_req</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, bt_hfp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = bt_hfp_call_terminate_req &rArr; hfp_reject_phone_call &rArr; hfp_try_general_at_cmd &rArr; hfp_flush_cmd &rArr; hfp_send_general_at_cmd &rArr; rfc_data_req &rArr; rfc_check_send_credits &rArr; crc8EtsGen
</UL>
<BR>[Calls]<UL><LI><a href="#[9db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_reject_phone_call
<LI><a href="#[9d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_hsp_button_press
<LI><a href="#[975]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_find_br_link
</UL>
<BR>[Called By]<UL><LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_handle_action
<LI><a href="#[501]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_hf_end_active_call
<LI><a href="#[500]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_hf_end_outgoing_call
<LI><a href="#[4fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_hf_reject_call
</UL>

<P><STRONG><a name="[51b]"></a>bt_hfp_release_held_or_waiting_call_req</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, bt_hfp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = bt_hfp_release_held_or_waiting_call_req &rArr; hfp_call_hold_action &rArr; hfp_try_general_at_cmd &rArr; hfp_flush_cmd &rArr; hfp_send_general_at_cmd &rArr; rfc_data_req &rArr; rfc_check_send_credits &rArr; crc8EtsGen
</UL>
<BR>[Calls]<UL><LI><a href="#[9d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_call_hold_action
<LI><a href="#[975]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_find_br_link
</UL>
<BR>[Called By]<UL><LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_handle_action
</UL>

<P><STRONG><a name="[51a]"></a>bt_hfp_release_active_call_accept_held_or_waiting_call_req</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, bt_hfp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = bt_hfp_release_active_call_accept_held_or_waiting_call_req &rArr; hfp_call_hold_action &rArr; hfp_try_general_at_cmd &rArr; hfp_flush_cmd &rArr; hfp_send_general_at_cmd &rArr; rfc_data_req &rArr; rfc_check_send_credits &rArr; crc8EtsGen
</UL>
<BR>[Calls]<UL><LI><a href="#[9d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_call_hold_action
<LI><a href="#[975]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_find_br_link
</UL>
<BR>[Called By]<UL><LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_handle_action
</UL>

<P><STRONG><a name="[51c]"></a>bt_hfp_hold_active_call_accept_held_or_waiting_call_req</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, bt_hfp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = bt_hfp_hold_active_call_accept_held_or_waiting_call_req &rArr; hfp_call_hold_action &rArr; hfp_try_general_at_cmd &rArr; hfp_flush_cmd &rArr; hfp_send_general_at_cmd &rArr; rfc_data_req &rArr; rfc_check_send_credits &rArr; crc8EtsGen
</UL>
<BR>[Calls]<UL><LI><a href="#[9d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_call_hold_action
<LI><a href="#[975]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_find_br_link
</UL>
<BR>[Called By]<UL><LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_handle_action
</UL>

<P><STRONG><a name="[519]"></a>bt_hfp_join_two_calls_req</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, bt_hfp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = bt_hfp_join_two_calls_req &rArr; hfp_call_hold_action &rArr; hfp_try_general_at_cmd &rArr; hfp_flush_cmd &rArr; hfp_send_general_at_cmd &rArr; rfc_data_req &rArr; rfc_check_send_credits &rArr; crc8EtsGen
</UL>
<BR>[Calls]<UL><LI><a href="#[9d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_call_hold_action
<LI><a href="#[975]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_find_br_link
</UL>
<BR>[Called By]<UL><LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_handle_action
</UL>

<P><STRONG><a name="[467]"></a>bt_hfp_connect_cfm</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, bt_hfp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = bt_hfp_connect_cfm &rArr; hfp_connect_cfm &rArr; rfc_conn_cfm &rArr; rfc_send_uih &rArr; rfc_send_frame &rArr; crc8EtsGen
</UL>
<BR>[Calls]<UL><LI><a href="#[9ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_connect_cfm
<LI><a href="#[975]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_find_br_link
</UL>
<BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_bt_cback
</UL>

<P><STRONG><a name="[68d]"></a>bt_hfp_audio_connect_req</STRONG> (Thumb, 134 bytes, Stack size 32 bytes, bt_hfp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = bt_hfp_audio_connect_req &rArr; hfp_hsp_button_press &rArr; hfp_try_general_at_cmd &rArr; hfp_flush_cmd &rArr; hfp_send_general_at_cmd &rArr; rfc_data_req &rArr; rfc_check_send_credits &rArr; crc8EtsGen
</UL>
<BR>[Calls]<UL><LI><a href="#[9d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_hsp_button_press
<LI><a href="#[9cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_get_hf_capability
<LI><a href="#[9dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_ask_ag_establish_voice_chann
<LI><a href="#[9dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_br_send_sco_conn_req
<LI><a href="#[97c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_sniff_mode_exit
<LI><a href="#[975]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_find_br_link
</UL>
<BR>[Called By]<UL><LI><a href="#[473]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_sniffing_hfp_connect
</UL>

<P><STRONG><a name="[5ab]"></a>bt_hfp_audio_connect_cfm</STRONG> (Thumb, 126 bytes, Stack size 40 bytes, bt_hfp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = bt_hfp_audio_connect_cfm &rArr; gap_br_send_sco_conn_cfm
</UL>
<BR>[Calls]<UL><LI><a href="#[9de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_br_send_sco_conn_cfm
<LI><a href="#[975]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_find_br_link
</UL>
<BR>[Called By]<UL><LI><a href="#[470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_handle_sniffing_link_disconnect_event
<LI><a href="#[5b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_hfp_audio_connect_confirm
</UL>

<P><STRONG><a name="[515]"></a>bt_hfp_audio_disconnect_req</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, bt_hfp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = bt_hfp_audio_disconnect_req &rArr; hfp_hsp_button_press &rArr; hfp_try_general_at_cmd &rArr; hfp_flush_cmd &rArr; hfp_send_general_at_cmd &rArr; rfc_data_req &rArr; rfc_check_send_credits &rArr; crc8EtsGen
</UL>
<BR>[Calls]<UL><LI><a href="#[5ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_br_send_sco_disconn_req
<LI><a href="#[9d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_hsp_button_press
<LI><a href="#[975]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_find_br_link
</UL>
<BR>[Called By]<UL><LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_handle_action
<LI><a href="#[457]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multilink_sco_preemptive
<LI><a href="#[5a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_preemptive_judge
<LI><a href="#[5b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_check_voice_dial
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_bt_cback
<LI><a href="#[51d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_active_hfp_transfer
<LI><a href="#[6ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sass_policy_switch_active_audio_source
</UL>

<P><STRONG><a name="[51e]"></a>bt_hfp_voice_recognition_enable_req</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, bt_hfp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = bt_hfp_voice_recognition_enable_req &rArr; hfp_set_voice_recognition &rArr; hfp_try_general_at_cmd &rArr; hfp_flush_cmd &rArr; hfp_send_general_at_cmd &rArr; rfc_data_req &rArr; rfc_check_send_credits &rArr; crc8EtsGen
</UL>
<BR>[Calls]<UL><LI><a href="#[9df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_set_voice_recognition
<LI><a href="#[9d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_hsp_button_press
<LI><a href="#[975]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_find_br_link
</UL>
<BR>[Called By]<UL><LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_handle_action
</UL>

<P><STRONG><a name="[474]"></a>bt_hfp_voice_recognition_disable_req</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, bt_hfp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = bt_hfp_voice_recognition_disable_req &rArr; hfp_set_voice_recognition &rArr; hfp_try_general_at_cmd &rArr; hfp_flush_cmd &rArr; hfp_send_general_at_cmd &rArr; rfc_data_req &rArr; rfc_check_send_credits &rArr; crc8EtsGen
</UL>
<BR>[Calls]<UL><LI><a href="#[9df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_set_voice_recognition
<LI><a href="#[9d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_hsp_button_press
<LI><a href="#[975]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_find_br_link
</UL>
<BR>[Called By]<UL><LI><a href="#[471]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_timeout_cb
<LI><a href="#[5b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_voice_ongoing_preemptive
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_bt_cback
<LI><a href="#[4ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_hf_cancel_voice_dial
</UL>

<P><STRONG><a name="[47b]"></a>bt_hfp_init</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, bt_hfp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = bt_hfp_init &rArr; hfp_init &rArr; rfc_reg_cb &rArr; rfc_init
</UL>
<BR>[Calls]<UL><LI><a href="#[9e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_init
</UL>
<BR>[Called By]<UL><LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_init
</UL>

<P><STRONG><a name="[9e1]"></a>bt_spp_cback</STRONG> (Thumb, 208 bytes, Stack size 40 bytes, bt_spp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = bt_spp_cback &rArr; bt_mgr_dispatch &rArr; bt_mgr_handle_sco_msg &rArr; bt_handle_sco_disconnect &rArr; bt_link_role_switch &rArr; bt_sniff_mode_exit &rArr; sys_timer_restart &rArr; sys_hp_timer_list_insert &rArr; hw_timer_restart &rArr; hw_timer_safe_stop &rArr; hw_timer_set_div
</UL>
<BR>[Calls]<UL><LI><a href="#[9e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spp_disconnect_req
<LI><a href="#[9e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spp_connect_cfm
<LI><a href="#[9ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_mgr_dispatch
<LI><a href="#[975]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_find_br_link
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bt_spp.o(.text)
</UL>
<P><STRONG><a name="[69a]"></a>bt_spp_init</STRONG> (Thumb, 72 bytes, Stack size 24 bytes, bt_spp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = bt_spp_init &rArr; spp_init
</UL>
<BR>[Calls]<UL><LI><a href="#[9e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spp_init
</UL>
<BR>[Called By]<UL><LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_spp_init
</UL>

<P><STRONG><a name="[69b]"></a>bt_spp_service_register</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, bt_spp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = bt_spp_service_register &rArr; spp_reg_cb &rArr; rfc_reg_cb &rArr; rfc_init
</UL>
<BR>[Calls]<UL><LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[9e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spp_reg_cb
</UL>
<BR>[Called By]<UL><LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_spp_init
</UL>

<P><STRONG><a name="[60c]"></a>bt_spp_registered_uuid_check</STRONG> (Thumb, 120 bytes, Stack size 32 bytes, bt_spp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = bt_spp_registered_uuid_check
</UL>
<BR>[Calls]<UL><LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[60a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_state_afe_linkback_event_handle
</UL>

<P><STRONG><a name="[56f]"></a>bt_spp_connect_req</STRONG> (Thumb, 60 bytes, Stack size 32 bytes, bt_spp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = bt_spp_connect_req &rArr; spp_connect_req &rArr; rfc_conn_req &rArr; rfc_alloc_chann &rArr; sys_timer_delete &rArr; sys_hp_timer_list_remove &rArr; hw_timer_restart &rArr; hw_timer_safe_stop &rArr; hw_timer_set_div
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[9e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spp_connect_req
<LI><a href="#[9c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_alloc_br_link
<LI><a href="#[975]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_find_br_link
</UL>
<BR>[Called By]<UL><LI><a href="#[56b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkback_profile_connect_start
</UL>

<P><STRONG><a name="[699]"></a>bt_spp_connect_cfm</STRONG> (Thumb, 52 bytes, Stack size 32 bytes, bt_spp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = bt_spp_connect_cfm &rArr; spp_connect_cfm &rArr; rfc_conn_cfm &rArr; rfc_send_uih &rArr; rfc_send_frame &rArr; crc8EtsGen
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[9e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spp_connect_cfm
<LI><a href="#[975]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_find_br_link
</UL>
<BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_spp_bt_cback
</UL>

<P><STRONG><a name="[576]"></a>bt_spp_disconnect_all_req</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, bt_spp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = bt_spp_disconnect_all_req &rArr; spp_disconnect_all &rArr; rfc_disconn_req &rArr; rfc_check_disconn_ctrl_chann &rArr; sys_timer_start &rArr; sys_hp_timer_list_insert &rArr; hw_timer_restart &rArr; hw_timer_safe_stop &rArr; hw_timer_set_div
</UL>
<BR>[Calls]<UL><LI><a href="#[9e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spp_disconnect_all
<LI><a href="#[97c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_sniff_mode_exit
<LI><a href="#[975]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_find_br_link
</UL>
<BR>[Called By]<UL><LI><a href="#[572]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkback_profile_disconnect_start
</UL>

<P><STRONG><a name="[3a4]"></a>bt_spp_data_send</STRONG> (Thumb, 38 bytes, Stack size 32 bytes, bt_spp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = bt_spp_data_send &rArr; spp_send_data &rArr; rfc_data_req &rArr; rfc_check_send_credits &rArr; crc8EtsGen
</UL>
<BR>[Calls]<UL><LI><a href="#[9e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spp_send_data
<LI><a href="#[975]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_find_br_link
</UL>
<BR>[Called By]<UL><LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_transfer_pop_data_queue
</UL>

<P><STRONG><a name="[697]"></a>bt_spp_credits_give</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, bt_spp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = bt_spp_credits_give &rArr; spp_send_credit &rArr; rfc_data_cfm &rArr; rfc_check_send_credits &rArr; crc8EtsGen
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[9e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spp_send_credit
<LI><a href="#[975]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_find_br_link
</UL>
<BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_spp_bt_cback
</UL>

<P><STRONG><a name="[571]"></a>bt_pbap_connect_req</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, bt_pbap.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[56b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkback_profile_connect_start
</UL>

<P><STRONG><a name="[578]"></a>bt_pbap_disconnect_req</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, bt_pbap.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[572]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkback_profile_disconnect_start
</UL>

<P><STRONG><a name="[46e]"></a>bt_pbap_vcard_listing_by_number_pull</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, bt_pbap.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_bt_cback
</UL>

<P><STRONG><a name="[570]"></a>bt_iap_connect_req</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, bt_iap.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[56b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkback_profile_connect_start
</UL>

<P><STRONG><a name="[577]"></a>bt_iap_disconnect_req</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, bt_iap.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[572]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkback_profile_disconnect_start
</UL>

<P><STRONG><a name="[492]"></a>bt_avrcp_connect_cfm</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, bt_avrcp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = bt_avrcp_connect_cfm &rArr; bt_sniff_mode_exit &rArr; sys_timer_restart &rArr; sys_hp_timer_list_insert &rArr; hw_timer_restart &rArr; hw_timer_safe_stop &rArr; hw_timer_set_div
</UL>
<BR>[Calls]<UL><LI><a href="#[97c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_sniff_mode_exit
<LI><a href="#[975]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_find_br_link
<LI><a href="#[9ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avrcp_connect_cfm
</UL>
<BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_avrcp_bt_cback
<LI><a href="#[9eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_avrcp_cback
</UL>

<P><STRONG><a name="[9eb]"></a>bt_avrcp_cback</STRONG> (Thumb, 1150 bytes, Stack size 72 bytes, bt_avrcp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = bt_avrcp_cback &rArr; bt_mgr_dispatch &rArr; bt_mgr_handle_sco_msg &rArr; bt_handle_sco_disconnect &rArr; bt_link_role_switch &rArr; bt_sniff_mode_exit &rArr; sys_timer_restart &rArr; sys_hp_timer_list_insert &rArr; hw_timer_restart &rArr; hw_timer_safe_stop &rArr; hw_timer_set_div
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[492]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_avrcp_connect_cfm
<LI><a href="#[9ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_mgr_dispatch
<LI><a href="#[975]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_find_br_link
<LI><a href="#[9ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avrcp_send_pass_through
<LI><a href="#[9ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avrcp_register_notification
<LI><a href="#[9ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avrcp_get_capability
<LI><a href="#[9ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avrcp_disconnect_req
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bt_avrcp.o(.text)
</UL>
<P><STRONG><a name="[494]"></a>bt_avrcp_volume_change_register_rsp</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, bt_avrcp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = bt_avrcp_volume_change_register_rsp &rArr; avrcp_volume_change_register_rsp &rArr; avrcp_send_vendor_BT_SIG_rsp &rArr; avctp_send_data2buf &rArr; avctp_find_link_by_addr
</UL>
<BR>[Calls]<UL><LI><a href="#[97c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_sniff_mode_exit
<LI><a href="#[975]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_find_br_link
<LI><a href="#[9f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avrcp_volume_change_register_rsp
</UL>
<BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_avrcp_bt_cback
</UL>

<P><STRONG><a name="[48d]"></a>bt_avrcp_volume_change_req</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, bt_avrcp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = bt_avrcp_volume_change_req &rArr; avrcp_notify_volume_change &rArr; avrcp_send_vendor_BT_SIG_rsp &rArr; avctp_send_data2buf &rArr; avctp_find_link_by_addr
</UL>
<BR>[Calls]<UL><LI><a href="#[97c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_sniff_mode_exit
<LI><a href="#[975]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_find_br_link
<LI><a href="#[9f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avrcp_notify_volume_change
</UL>
<BR>[Called By]<UL><LI><a href="#[488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_avrcp_abs_vol_set
<LI><a href="#[4fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_volume_down
<LI><a href="#[4f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_volume_up
</UL>

<P><STRONG><a name="[50f]"></a>bt_avrcp_play</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, bt_avrcp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = bt_avrcp_play &rArr; avrcp_send_pass_through &rArr; avrcp_cmd_enqueue &rArr; avrcp_cmd_process &rArr; avrcp_send_cmd_pass_through &rArr; avrcp_send_generic_cmd &rArr; sys_timer_start &rArr; sys_hp_timer_list_insert &rArr; hw_timer_restart &rArr; hw_timer_safe_stop &rArr; hw_timer_set_div
</UL>
<BR>[Calls]<UL><LI><a href="#[97c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_sniff_mode_exit
<LI><a href="#[975]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_find_br_link
<LI><a href="#[9ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avrcp_send_pass_through
</UL>
<BR>[Called By]<UL><LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_handle_action
<LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_resume_a2dp_link_stream
<LI><a href="#[4e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sass_policy_profile_conn_handle
<LI><a href="#[6bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sass_policy_switch_back
<LI><a href="#[6ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sass_policy_switch_active_audio_source
</UL>

<P><STRONG><a name="[511]"></a>bt_avrcp_pause</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, bt_avrcp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = bt_avrcp_pause &rArr; avrcp_send_pass_through &rArr; avrcp_cmd_enqueue &rArr; avrcp_cmd_process &rArr; avrcp_send_cmd_pass_through &rArr; avrcp_send_generic_cmd &rArr; sys_timer_start &rArr; sys_hp_timer_list_insert &rArr; hw_timer_restart &rArr; hw_timer_safe_stop &rArr; hw_timer_set_div
</UL>
<BR>[Calls]<UL><LI><a href="#[97c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_sniff_mode_exit
<LI><a href="#[975]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_find_br_link
<LI><a href="#[9ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avrcp_send_pass_through
</UL>
<BR>[Called By]<UL><LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_handle_action
<LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_pause_inactive_a2dp_link_stream
<LI><a href="#[5a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_preemptive_judge
<LI><a href="#[7e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sass_pause_inactive_link
<LI><a href="#[94d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_reconnect_avdtp_profile
<LI><a href="#[904]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_stream_pause
</UL>

<P><STRONG><a name="[512]"></a>bt_avrcp_stop</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, bt_avrcp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = bt_avrcp_stop &rArr; avrcp_send_pass_through &rArr; avrcp_cmd_enqueue &rArr; avrcp_cmd_process &rArr; avrcp_send_cmd_pass_through &rArr; avrcp_send_generic_cmd &rArr; sys_timer_start &rArr; sys_hp_timer_list_insert &rArr; hw_timer_restart &rArr; hw_timer_safe_stop &rArr; hw_timer_set_div
</UL>
<BR>[Calls]<UL><LI><a href="#[97c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_sniff_mode_exit
<LI><a href="#[975]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_find_br_link
<LI><a href="#[9ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avrcp_send_pass_through
</UL>
<BR>[Called By]<UL><LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_handle_action
</UL>

<P><STRONG><a name="[513]"></a>bt_avrcp_forward</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, bt_avrcp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = bt_avrcp_forward &rArr; avrcp_send_pass_through &rArr; avrcp_cmd_enqueue &rArr; avrcp_cmd_process &rArr; avrcp_send_cmd_pass_through &rArr; avrcp_send_generic_cmd &rArr; sys_timer_start &rArr; sys_hp_timer_list_insert &rArr; hw_timer_restart &rArr; hw_timer_safe_stop &rArr; hw_timer_set_div
</UL>
<BR>[Calls]<UL><LI><a href="#[97c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_sniff_mode_exit
<LI><a href="#[975]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_find_br_link
<LI><a href="#[9ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avrcp_send_pass_through
</UL>
<BR>[Called By]<UL><LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_handle_action
</UL>

<P><STRONG><a name="[514]"></a>bt_avrcp_backward</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, bt_avrcp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = bt_avrcp_backward &rArr; avrcp_send_pass_through &rArr; avrcp_cmd_enqueue &rArr; avrcp_cmd_process &rArr; avrcp_send_cmd_pass_through &rArr; avrcp_send_generic_cmd &rArr; sys_timer_start &rArr; sys_hp_timer_list_insert &rArr; hw_timer_restart &rArr; hw_timer_safe_stop &rArr; hw_timer_set_div
</UL>
<BR>[Calls]<UL><LI><a href="#[97c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_sniff_mode_exit
<LI><a href="#[975]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_find_br_link
<LI><a href="#[9ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avrcp_send_pass_through
</UL>
<BR>[Called By]<UL><LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_handle_action
</UL>

<P><STRONG><a name="[56d]"></a>bt_avrcp_connect_req</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, bt_avrcp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = bt_avrcp_connect_req &rArr; bt_sniff_mode_exit &rArr; sys_timer_restart &rArr; sys_hp_timer_list_insert &rArr; hw_timer_restart &rArr; hw_timer_safe_stop &rArr; hw_timer_set_div
</UL>
<BR>[Calls]<UL><LI><a href="#[97c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_sniff_mode_exit
<LI><a href="#[9c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_alloc_br_link
<LI><a href="#[975]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_find_br_link
<LI><a href="#[9f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avrcp_connect_req
</UL>
<BR>[Called By]<UL><LI><a href="#[56b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkback_profile_connect_start
</UL>

<P><STRONG><a name="[574]"></a>bt_avrcp_disconnect_req</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, bt_avrcp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = bt_avrcp_disconnect_req &rArr; bt_sniff_mode_exit &rArr; sys_timer_restart &rArr; sys_hp_timer_list_insert &rArr; hw_timer_restart &rArr; hw_timer_safe_stop &rArr; hw_timer_set_div
</UL>
<BR>[Calls]<UL><LI><a href="#[97c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_sniff_mode_exit
<LI><a href="#[975]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_find_br_link
<LI><a href="#[9ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avrcp_disconnect_req
<LI><a href="#[9f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avrcp_browsing_disconnect_req
</UL>
<BR>[Called By]<UL><LI><a href="#[5f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_bt_event_pre_handle
<LI><a href="#[572]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkback_profile_disconnect_start
</UL>

<P><STRONG><a name="[491]"></a>bt_avrcp_vendor_rsp_send</STRONG> (Thumb, 60 bytes, Stack size 40 bytes, bt_avrcp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = bt_avrcp_vendor_rsp_send &rArr; bt_sniff_mode_exit &rArr; sys_timer_restart &rArr; sys_hp_timer_list_insert &rArr; hw_timer_restart &rArr; hw_timer_safe_stop &rArr; hw_timer_set_div
</UL>
<BR>[Calls]<UL><LI><a href="#[97c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_sniff_mode_exit
<LI><a href="#[975]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_find_br_link
<LI><a href="#[9f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avrcp_send_vendor_rsp
</UL>
<BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_avrcp_bt_cback
</UL>

<P><STRONG><a name="[493]"></a>bt_avrcp_browsing_connect_cfm</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, bt_avrcp.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_avrcp_bt_cback
</UL>

<P><STRONG><a name="[496]"></a>bt_avrcp_supported_features_set</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, bt_avrcp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[9f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avrcp_set_supported_features
</UL>
<BR>[Called By]<UL><LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_avrcp_init
</UL>

<P><STRONG><a name="[495]"></a>bt_avrcp_init</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, bt_avrcp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = bt_avrcp_init &rArr; avrcp_init &rArr; avctp_init
</UL>
<BR>[Calls]<UL><LI><a href="#[9f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avrcp_init
</UL>
<BR>[Called By]<UL><LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_avrcp_init
</UL>

<P><STRONG><a name="[579]"></a>bt_rdtp_disconnect_req</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, bt_rdtp.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[572]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkback_profile_disconnect_start
</UL>

<P><STRONG><a name="[9fa]"></a>bt_rfc_alloc_chann</STRONG> (Thumb, 52 bytes, Stack size 12 bytes, bt_rfc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = bt_rfc_alloc_chann
</UL>
<BR>[Called By]<UL><LI><a href="#[9f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_rfc_cback
<LI><a href="#[a09]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_rfc_conn_req
</UL>

<P><STRONG><a name="[9f7]"></a>bt_rfc_find_chann_by_dlci</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, bt_rfc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = bt_rfc_find_chann_by_dlci
</UL>
<BR>[Calls]<UL><LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[9f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_rfc_cback
</UL>

<P><STRONG><a name="[9f8]"></a>bt_rfc_find_chann_by_server_chann</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, bt_rfc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = bt_rfc_find_chann_by_server_chann
</UL>
<BR>[Calls]<UL><LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[777]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_rfc_credits_give
<LI><a href="#[a07]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_rfc_disconn_req
<LI><a href="#[a04]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_rfc_data_send
<LI><a href="#[a02]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_rfc_conn_cfm
<LI><a href="#[a09]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_rfc_conn_req
</UL>

<P><STRONG><a name="[9fb]"></a>bt_rfc_find_cback_by_server_chann</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, bt_rfc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[9f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_rfc_cback
</UL>

<P><STRONG><a name="[9fd]"></a>bt_rfc_free_chann</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, bt_rfc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[a02]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_rfc_conn_cfm
<LI><a href="#[9f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_rfc_cback
<LI><a href="#[a09]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_rfc_conn_req
</UL>

<P><STRONG><a name="[9f9]"></a>bt_rfc_cback</STRONG> (Thumb, 400 bytes, Stack size 32 bytes, bt_rfc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = bt_rfc_cback &rArr; bt_rfc_find_chann_by_dlci
</UL>
<BR>[Calls]<UL><LI><a href="#[9fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_roleswap_handle_bt_rfc_disconn
<LI><a href="#[9fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_roleswap_handle_bt_rfc_conn
<LI><a href="#[9fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_rfc_free_chann
<LI><a href="#[9fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_rfc_find_cback_by_server_chann
<LI><a href="#[9f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_rfc_find_chann_by_dlci
<LI><a href="#[9fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_rfc_alloc_chann
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bt_rfc.o(.text)
</UL>
<P><STRONG><a name="[a00]"></a>bt_rfc_init</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, bt_rfc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = bt_rfc_init
</UL>
<BR>[Called By]<UL><LI><a href="#[9ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_rfc_profile_register
</UL>

<P><STRONG><a name="[9ff]"></a>bt_rfc_profile_register</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, bt_rfc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = bt_rfc_profile_register &rArr; rfc_reg_cb &rArr; rfc_init
</UL>
<BR>[Calls]<UL><LI><a href="#[a01]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_reg_cb
<LI><a href="#[a00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_rfc_init
</UL>
<BR>[Called By]<UL><LI><a href="#[7da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_gfps_rfc_init
</UL>

<P><STRONG><a name="[a02]"></a>bt_rfc_conn_cfm</STRONG> (Thumb, 66 bytes, Stack size 32 bytes, bt_rfc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = bt_rfc_conn_cfm &rArr; rfc_conn_cfm &rArr; rfc_send_uih &rArr; rfc_send_frame &rArr; crc8EtsGen
</UL>
<BR>[Calls]<UL><LI><a href="#[a03]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_conn_cfm
<LI><a href="#[9fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_rfc_free_chann
<LI><a href="#[9f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_rfc_find_chann_by_server_chann
</UL>
<BR>[Called By]<UL><LI><a href="#[76d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_gfps_connect_cfm
</UL>

<P><STRONG><a name="[a04]"></a>bt_rfc_data_send</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, bt_rfc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = bt_rfc_data_send &rArr; rfc_data_req &rArr; rfc_check_send_credits &rArr; crc8EtsGen
</UL>
<BR>[Calls]<UL><LI><a href="#[a05]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_data_req
<LI><a href="#[9f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_rfc_find_chann_by_server_chann
</UL>
<BR>[Called By]<UL><LI><a href="#[7c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_gfps_send_nak
<LI><a href="#[7d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_gfps_send_ack
<LI><a href="#[7c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_gfps_notify_connection_status
<LI><a href="#[ca4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_gfps_send_data
</UL>

<P><STRONG><a name="[777]"></a>bt_rfc_credits_give</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, bt_rfc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = bt_rfc_credits_give &rArr; rfc_data_cfm &rArr; rfc_check_send_credits &rArr; crc8EtsGen
</UL>
<BR>[Calls]<UL><LI><a href="#[a06]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_data_cfm
<LI><a href="#[9f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_rfc_find_chann_by_server_chann
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_rfc_cback
</UL>

<P><STRONG><a name="[a07]"></a>bt_rfc_disconn_req</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, bt_rfc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = bt_rfc_disconn_req &rArr; rfc_disconn_req &rArr; rfc_check_disconn_ctrl_chann &rArr; sys_timer_start &rArr; sys_hp_timer_list_insert &rArr; hw_timer_restart &rArr; hw_timer_safe_stop &rArr; hw_timer_set_div
</UL>
<BR>[Calls]<UL><LI><a href="#[a08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_disconn_req
<LI><a href="#[9f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_rfc_find_chann_by_server_chann
</UL>
<BR>[Called By]<UL><LI><a href="#[57a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_gfps_disconnect_req
</UL>

<P><STRONG><a name="[a0a]"></a>bt_rfc_find_profile_idx_by_server_chann</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, bt_rfc.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[a09]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_rfc_conn_req
</UL>

<P><STRONG><a name="[a09]"></a>bt_rfc_conn_req</STRONG> (Thumb, 88 bytes, Stack size 40 bytes, bt_rfc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[a0b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_conn_req
<LI><a href="#[9fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_rfc_free_chann
<LI><a href="#[9f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_rfc_find_chann_by_server_chann
<LI><a href="#[a0a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_rfc_find_profile_idx_by_server_chann
<LI><a href="#[9fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_rfc_alloc_chann
</UL>
<BR>[Called By]<UL><LI><a href="#[ca3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_gfps_connect_req
</UL>

<P><STRONG><a name="[a1e]"></a>convert_exception_to_restart_casuse</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, audio_mgr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[a20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_mgr_exception
<LI><a href="#[a1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_buffer_playing_state
</UL>

<P><STRONG><a name="[a0c]"></a>media_buffer_check_miss_ack</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, audio_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = media_buffer_check_miss_ack &rArr; media_buffer_downstream_dsp &rArr; audio_path_data_send &rArr; audio_path_timestamp_set &rArr; dsp_mgr_signal_proc_start &rArr; dsp_remote_init &rArr; dsp_ipc_set_rws_init &rArr; dsp_ipc_h2d_cmd_send &rArr; h2d_cmd_send &rArr; shm_cmd_send &rArr; wr_queue_send
</UL>
<BR>[Calls]<UL><LI><a href="#[a0d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;media_buffer_downstream_dsp
</UL>
<BR>[Called By]<UL><LI><a href="#[a1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_buffer_playing_state
</UL>

<P><STRONG><a name="[a0e]"></a>audio_mgr_get_playing_buffer</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, audio_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = audio_mgr_get_playing_buffer
</UL>
<BR>[Calls]<UL><LI><a href="#[a0f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;media_buffer_get_status
</UL>
<BR>[Called By]<UL><LI><a href="#[a25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_mgr_dispatch
</UL>

<P><STRONG><a name="[47c]"></a>audio_mgr_cback_register</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, audio_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = audio_mgr_cback_register
</UL>
<BR>[Called By]<UL><LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mp_hci_test_init
<LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_init
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_init
<LI><a href="#[530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mp_hci_test_auto_enter_dut_init
<LI><a href="#[4ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dult_device_init
<LI><a href="#[68a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_msg_rfc_init
<LI><a href="#[86a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_init
<LI><a href="#[86b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_init
</UL>

<P><STRONG><a name="[a10]"></a>audio_mgr_event_post</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, audio_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = audio_mgr_event_post
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[a25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_mgr_dispatch
<LI><a href="#[a11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_report_buffer_high
</UL>

<P><STRONG><a name="[a11]"></a>audio_report_buffer_high</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, audio_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = audio_report_buffer_high &rArr; media_buffer_level_get &rArr; media_buffer_cacu_frames_duration
</UL>
<BR>[Calls]<UL><LI><a href="#[a12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;media_buffer_level_get
<LI><a href="#[a10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_mgr_event_post
</UL>
<BR>[Called By]<UL><LI><a href="#[a73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;media_buffer_ds_write
</UL>

<P><STRONG><a name="[a13]"></a>audio_buffer_uninit_state</STRONG> (Thumb, 200 bytes, Stack size 16 bytes, audio_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = audio_buffer_uninit_state &rArr; media_buffer_downstream_dsp &rArr; audio_path_data_send &rArr; audio_path_timestamp_set &rArr; dsp_mgr_signal_proc_start &rArr; dsp_remote_init &rArr; dsp_ipc_set_rws_init &rArr; dsp_ipc_h2d_cmd_send &rArr; h2d_cmd_send &rArr; shm_cmd_send &rArr; wr_queue_send
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[a15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;media_buffer_set_status
<LI><a href="#[a0d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;media_buffer_downstream_dsp
<LI><a href="#[a14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;media_buffer_cacu_frame_num
<LI><a href="#[a16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jitter_buffer_asrc_pid_init
<LI><a href="#[a17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_timestamp_set
</UL>
<BR>[Called By]<UL><LI><a href="#[a1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_mgr_buffer_event_handle
</UL>

<P><STRONG><a name="[a18]"></a>audio_buffer_prequeue_state</STRONG> (Thumb, 248 bytes, Stack size 40 bytes, audio_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = audio_buffer_prequeue_state &rArr; media_buffer_leading_downstream &rArr; media_buffer_downstream_dsp &rArr; audio_path_data_send &rArr; audio_path_timestamp_set &rArr; dsp_mgr_signal_proc_start &rArr; dsp_remote_init &rArr; dsp_ipc_set_rws_init &rArr; dsp_ipc_h2d_cmd_send &rArr; h2d_cmd_send &rArr; shm_cmd_send &rArr; wr_queue_send
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[980]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_piconet_clk_get
<LI><a href="#[a15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;media_buffer_set_status
<LI><a href="#[a1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;media_buffer_leading_downstream
<LI><a href="#[a19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;media_buffer_ds_frame_cnt
<LI><a href="#[a1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;media_buffer_cacu_playtime
<LI><a href="#[a16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jitter_buffer_asrc_pid_init
<LI><a href="#[a17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_timestamp_set
</UL>
<BR>[Called By]<UL><LI><a href="#[a1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_mgr_buffer_event_handle
</UL>

<P><STRONG><a name="[a1c]"></a>audio_buffer_wait_play_state</STRONG> (Thumb, 84 bytes, Stack size 8 bytes, audio_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = audio_buffer_wait_play_state &rArr; media_buffer_downstream_dsp &rArr; audio_path_data_send &rArr; audio_path_timestamp_set &rArr; dsp_mgr_signal_proc_start &rArr; dsp_remote_init &rArr; dsp_ipc_set_rws_init &rArr; dsp_ipc_h2d_cmd_send &rArr; h2d_cmd_send &rArr; shm_cmd_send &rArr; wr_queue_send
</UL>
<BR>[Calls]<UL><LI><a href="#[a15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;media_buffer_set_status
<LI><a href="#[a0d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;media_buffer_downstream_dsp
<LI><a href="#[a17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_timestamp_set
</UL>
<BR>[Called By]<UL><LI><a href="#[a1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_mgr_buffer_event_handle
</UL>

<P><STRONG><a name="[a1d]"></a>audio_buffer_playing_state</STRONG> (Thumb, 136 bytes, Stack size 16 bytes, audio_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 456<LI>Call Chain = audio_buffer_playing_state &rArr; audio_track_restart &rArr; audio_session_state_set &rArr;  audio_mgr_dispatch (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[477]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_state_get
<LI><a href="#[87a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_restart
<LI><a href="#[a0d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;media_buffer_downstream_dsp
<LI><a href="#[a0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;media_buffer_check_miss_ack
<LI><a href="#[a1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_exception_to_restart_casuse
</UL>
<BR>[Called By]<UL><LI><a href="#[a1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_mgr_buffer_event_handle
</UL>

<P><STRONG><a name="[a46]"></a>audio_mgr_dsp_msg_pipe</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, audio_mgr.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> audio_mgr.o(.text)
</UL>
<P><STRONG><a name="[a1f]"></a>audio_mgr_buffer_event_handle</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, audio_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 472<LI>Call Chain = audio_mgr_buffer_event_handle &rArr; audio_buffer_playing_state &rArr; audio_track_restart &rArr; audio_session_state_set &rArr;  audio_mgr_dispatch (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[a0f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;media_buffer_get_status
<LI><a href="#[a1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_buffer_playing_state
<LI><a href="#[a1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_buffer_wait_play_state
<LI><a href="#[a18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_buffer_prequeue_state
<LI><a href="#[a13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_buffer_uninit_state
</UL>
<BR>[Called By]<UL><LI><a href="#[a25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_mgr_dispatch
</UL>

<P><STRONG><a name="[a20]"></a>audio_mgr_exception</STRONG> (Thumb, 378 bytes, Stack size 32 bytes, audio_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160 + In Cycle
<LI>Call Chain = audio_mgr_exception &rArr;  audio_mgr_dispatch (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[960]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul (via Veneer)
<LI><a href="#[4cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d (via Veneer)
<LI><a href="#[4cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[a0f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;media_buffer_get_status
<LI><a href="#[a24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;media_buffer_dynamic_latency_set
<LI><a href="#[a22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;media_buffer_dynamic_latency_resume
<LI><a href="#[a23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;media_buffer_ds_pkt_cnt
<LI><a href="#[a21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_latency_get_dynamic_latency_on
<LI><a href="#[a25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_mgr_dispatch
<LI><a href="#[a1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_exception_to_restart_casuse
</UL>
<BR>[Called By]<UL><LI><a href="#[a39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;media_buffer_handle_plc_event
<LI><a href="#[a25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_mgr_dispatch
<LI><a href="#[a73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;media_buffer_ds_write
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;playback_buffer_lat_evt_cback
</UL>

<P><STRONG><a name="[a25]"></a>audio_mgr_dispatch</STRONG> (Thumb, 1678 bytes, Stack size 64 bytes, audio_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 536<LI>Call Chain = audio_mgr_dispatch &rArr; audio_mgr_buffer_event_handle &rArr; audio_buffer_playing_state &rArr; audio_track_restart &rArr; audio_session_state_set &rArr;  audio_mgr_dispatch (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[a12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;media_buffer_level_get
<LI><a href="#[a26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;media_buffer_handle_sync_lock
<LI><a href="#[a39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;media_buffer_handle_plc_event
<LI><a href="#[a0f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;media_buffer_get_status
<LI><a href="#[a0d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;media_buffer_downstream_dsp
<LI><a href="#[a35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jitter_buffer_compensation_get
<LI><a href="#[a37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jitter_buffer_asrc_pid_is_block
<LI><a href="#[a38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jitter_buffer_asrc_pid_controller
<LI><a href="#[a2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_sport0_da_chann_set
<LI><a href="#[a33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_sport0_ad_chann_set
<LI><a href="#[a2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_volume_out_unmute_all
<LI><a href="#[a2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_volume_out_set_all
<LI><a href="#[a2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_volume_out_mute_all
<LI><a href="#[a29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_volume_out_min_set
<LI><a href="#[a28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_volume_out_max_set
<LI><a href="#[a32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_volume_in_unmute_all
<LI><a href="#[a30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_volume_in_set_all
<LI><a href="#[a31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_volume_in_mute_all
<LI><a href="#[a2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_volume_in_min_set
<LI><a href="#[a2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_volume_in_max_set
<LI><a href="#[a34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_volume_balance_set
<LI><a href="#[a27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_is_running
<LI><a href="#[a36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_latency_record_update
<LI><a href="#[a20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_mgr_exception
<LI><a href="#[a1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_mgr_buffer_event_handle
<LI><a href="#[a10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_mgr_event_post
<LI><a href="#[a0e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_mgr_get_playing_buffer
</UL>
<BR>[Called By]<UL><LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_volume_out_set
<LI><a href="#[45e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_volume_in_unmute
<LI><a href="#[484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_volume_in_mute
<LI><a href="#[446]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_volume_out_unmute
<LI><a href="#[4f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_volume_out_mute
<LI><a href="#[7b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_volume_out_unmute
<LI><a href="#[65a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_volume_out_set
<LI><a href="#[7af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_volume_out_mute
<LI><a href="#[649]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_volume_out_min_set
<LI><a href="#[647]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_volume_out_max_set
<LI><a href="#[63b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_volume_out_channel_set
<LI><a href="#[659]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_volume_in_set
<LI><a href="#[64a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_volume_in_min_set
<LI><a href="#[648]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_volume_in_max_set
<LI><a href="#[941]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_volume_balance_set
<LI><a href="#[a20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_mgr_exception
<LI><a href="#[a73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;media_buffer_ds_write
<LI><a href="#[a6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_volume_in_set
<LI><a href="#[a56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_session_state_set
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_path_cback
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_composite_cback
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_voice_prompt_cback
</UL>

<P><STRONG><a name="[a3a]"></a>audio_sys_ipc_cback</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, audio_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = audio_sys_ipc_cback &rArr; audio_path_power_off &rArr; audio_mgr_dsp_timer_cback &rArr; dsp_mgr_power_off &rArr; dsp_state_machine &rArr; dsp_power_on &rArr; dsp_hal_reset &rArr; shm_enable &rArr; h2d_cmd_send &rArr; shm_cmd_send &rArr; wr_queue_send
</UL>
<BR>[Calls]<UL><LI><a href="#[a3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_power_off
</UL>
<BR>[Address Reference Count : 1]<UL><LI> audio_mgr.o(.text)
</UL>
<P><STRONG><a name="[32c]"></a>audio_mgr_init</STRONG> (Thumb, 266 bytes, Stack size 32 bytes, audio_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = audio_mgr_init &rArr; notification_init &rArr; audio_path_create &rArr; audio_path_record_init &rArr; sport_mgr_session_create &rArr; sport_mgr_sport_path_take &rArr; audio_route_physical_path_take &rArr; audio_route_physical_path_get &rArr; audio_route_voice_physical_path_get
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[a41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_ipc_subscribe
<LI><a href="#[a40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notification_init
<LI><a href="#[a48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;media_buffer_init
<LI><a href="#[a42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jb_init
<LI><a href="#[a3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_volume_init
<LI><a href="#[a3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_init
<LI><a href="#[a45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_pipe_init
<LI><a href="#[a3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_init
<LI><a href="#[a47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_cback_register
<LI><a href="#[a43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_latency_mgr_init
<LI><a href="#[a44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_interval_eval_init
<LI><a href="#[a3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_effect_init
</UL>
<BR>[Called By]<UL><LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;framework_init
</UL>

<P><STRONG><a name="[32d]"></a>audio_mgr_set_max_plc_count</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, audio_mgr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;framework_init
</UL>

<P><STRONG><a name="[643]"></a>audio_probe_dsp_cback_register</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, audio_probe.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = audio_probe_dsp_cback_register &rArr; dsp_ipc_cback_register
</UL>
<BR>[Calls]<UL><LI><a href="#[a49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_ipc_cback_register
</UL>
<BR>[Called By]<UL><LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_license_init
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_init
<LI><a href="#[866]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_mgr_init
</UL>

<P><STRONG><a name="[650]"></a>audio_probe_dsp_send</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, audio_probe.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = audio_probe_dsp_send &rArr; h2d_cmd_send &rArr; shm_cmd_send &rArr; wr_queue_send
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[a4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;h2d_cmd_send
</UL>
<BR>[Called By]<UL><LI><a href="#[625]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_set_eq_boost_gain
<LI><a href="#[657]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_cmd_handle
<LI><a href="#[64f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_mic_switch
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_mgr_probe_cback
<LI><a href="#[96b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_default_dsp_eq_set
<LI><a href="#[954]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_send_license_to_dsp
<LI><a href="#[953]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_send_bd_addr_to_dsp
<LI><a href="#[952]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_send_device_name_to_dsp
</UL>

<P><STRONG><a name="[850]"></a>audio_probe_media_buffer_malloc</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, audio_probe.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = audio_probe_media_buffer_malloc &rArr; media_buffer_get
</UL>
<BR>[Calls]<UL><LI><a href="#[a4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;media_buffer_get
</UL>
<BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_audio_cback
<LI><a href="#[873]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_send_iso_data
<LI><a href="#[861]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_handle_iso_data
<LI><a href="#[862]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_handle_iso_data
<LI><a href="#[84f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_mgr_enqueue_iso_data
</UL>

<P><STRONG><a name="[84e]"></a>audio_probe_media_buffer_free</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, audio_probe.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = audio_probe_media_buffer_free &rArr; media_buffer_put
</UL>
<BR>[Calls]<UL><LI><a href="#[a4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;media_buffer_put
</UL>
<BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_audio_cback
<LI><a href="#[873]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_send_iso_data
<LI><a href="#[861]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_handle_iso_data
<LI><a href="#[862]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_handle_iso_data
<LI><a href="#[851]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_mgr_find_iso_elem
<LI><a href="#[84f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_mgr_enqueue_iso_data
<LI><a href="#[84d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_mgr_clear_iso_queue
</UL>

<P><STRONG><a name="[444]"></a>audio_probe_dsp_ipc_send_call_status</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, audio_probe.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = audio_probe_dsp_ipc_send_call_status &rArr; h2d_cmd_send &rArr; shm_cmd_send &rArr; wr_queue_send
</UL>
<BR>[Calls]<UL><LI><a href="#[a4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;h2d_cmd_send
</UL>
<BR>[Called By]<UL><LI><a href="#[442]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_voice_nr_enable
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_audio_cback
</UL>

<P><STRONG><a name="[32e]"></a>audio_probe_disable_dsp_powerdown</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, audio_probe.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = audio_probe_disable_dsp_powerdown &rArr; audio_path_lpm_set &rArr; sys_timer_start &rArr; sys_hp_timer_list_insert &rArr; hw_timer_restart &rArr; hw_timer_safe_stop &rArr; hw_timer_set_div
</UL>
<BR>[Calls]<UL><LI><a href="#[a4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_lpm_set
</UL>
<BR>[Called By]<UL><LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;framework_init
</UL>

<P><STRONG><a name="[65e]"></a>audio_probe_codec_hw_eq_set</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, audio_probe.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = audio_probe_codec_hw_eq_set &rArr; codec_drv_eq_data_set &rArr; codec_drv_eq_band_write &rArr; codec_drv_eq_coef_write
</UL>
<BR>[Calls]<UL><LI><a href="#[a4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_eq_data_set
</UL>
<BR>[Called By]<UL><LI><a href="#[657]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_cmd_handle
</UL>

<P><STRONG><a name="[6b6]"></a>audio_probe_set_voice_primary_mic</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, audio_probe.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_cmd_customized_cmd_handle
</UL>

<P><STRONG><a name="[6b7]"></a>auido_probe_set_voice_secondary_mic</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, audio_probe.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_cmd_customized_cmd_handle
</UL>

<P><STRONG><a name="[6b2]"></a>audio_probe_get_voice_primary_mic_sel</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, audio_probe.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_cmd_customized_cmd_handle
</UL>

<P><STRONG><a name="[6b3]"></a>audio_probe_get_voice_primary_mic_type</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, audio_probe.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_cmd_customized_cmd_handle
</UL>

<P><STRONG><a name="[6b4]"></a>audio_probe_get_voice_secondary_mic_sel</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, audio_probe.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_cmd_customized_cmd_handle
</UL>

<P><STRONG><a name="[6b5]"></a>audio_probe_get_voice_secondary_mic_type</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, audio_probe.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_cmd_customized_cmd_handle
</UL>

<P><STRONG><a name="[7a]"></a>audio_probe_dsp_event_cback</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, audio_probe.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = audio_probe_dsp_event_cback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> audio_probe.o(.text)
</UL>
<P><STRONG><a name="[955]"></a>audio_probe_dsp_evt_cback_register</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, audio_probe.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = audio_probe_dsp_evt_cback_register &rArr; dsp_mgr_register_cback &rArr; sys_ipc_subscribe
</UL>
<BR>[Calls]<UL><LI><a href="#[a4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_mgr_register_cback
</UL>
<BR>[Called By]<UL><LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_license_init
<LI><a href="#[668]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_haraman_eq_init
</UL>

<P><STRONG><a name="[5b3]"></a>audio_track_stop</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, audio_track.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32 + In Cycle
<LI>Call Chain = audio_track_stop &rArr;  audio_session_state_set (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[a56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_session_state_set
<LI><a href="#[a55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_handle_check
</UL>
<BR>[Called By]<UL><LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_pause_inactive_a2dp_link_stream
<LI><a href="#[5a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_preemptive_judge
<LI><a href="#[4b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_stop_a2dp_and_sco
<LI><a href="#[883]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_ase_ctrl
<LI><a href="#[a57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_queue_freeze
</UL>

<P><STRONG><a name="[a6d]"></a>audio_track_reschedule</STRONG> (Thumb, 134 bytes, Stack size 32 bytes, audio_track.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32 + In Cycle
<LI>Call Chain = audio_track_reschedule &rArr;  audio_session_state_set (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[a56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_session_state_set
</UL>
<BR>[Called By]<UL><LI><a href="#[a56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_session_state_set
</UL>

<P><STRONG><a name="[a2b]"></a>audio_track_volume_out_mute_all</STRONG> (Thumb, 144 bytes, Stack size 16 bytes, audio_track.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = audio_track_volume_out_mute_all &rArr; audio_path_dac_mute &rArr; audio_path_dac_gain_set &rArr; dsp_ipc_set_tone_gain &rArr; dsp_ipc_h2d_cmd_send &rArr; h2d_cmd_send &rArr; shm_cmd_send &rArr; wr_queue_send
</UL>
<BR>[Calls]<UL><LI><a href="#[a52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_dac_mute
</UL>
<BR>[Called By]<UL><LI><a href="#[a25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_mgr_dispatch
</UL>

<P><STRONG><a name="[a2c]"></a>audio_track_volume_out_unmute_all</STRONG> (Thumb, 138 bytes, Stack size 24 bytes, audio_track.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = audio_track_volume_out_unmute_all &rArr; audio_path_dac_level_set &rArr; codec_mgr_dac_gain_set &rArr; codec_drv_dac_config_set &rArr; codec_drv_event_process &rArr; codec_drv_set_sample_rate
</UL>
<BR>[Calls]<UL><LI><a href="#[a51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_dac_level_set
</UL>
<BR>[Called By]<UL><LI><a href="#[a25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_mgr_dispatch
</UL>

<P><STRONG><a name="[487]"></a>audio_track_volume_out_set</STRONG> (Thumb, 172 bytes, Stack size 24 bytes, audio_track.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 296 + In Cycle
<LI>Call Chain = audio_track_volume_out_set &rArr;  audio_mgr_dispatch (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[a25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_mgr_dispatch
<LI><a href="#[a51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_dac_level_set
<LI><a href="#[a55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_handle_check
</UL>
<BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_avrcp_bt_cback
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_avrcp_timeout_cb
<LI><a href="#[44d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_vol_set
<LI><a href="#[4fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_iphone_abs_vol_wrap_audio_track_volume_out_set
<LI><a href="#[4fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_volume_down
<LI><a href="#[4f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_volume_up
<LI><a href="#[85d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_vol_update_track_volume
<LI><a href="#[94c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_devinfo_set
<LI><a href="#[a2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_volume_out_set_all
</UL>

<P><STRONG><a name="[a2a]"></a>audio_track_volume_out_set_all</STRONG> (Thumb, 88 bytes, Stack size 24 bytes, audio_track.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = audio_track_volume_out_set_all &rArr; audio_track_volume_out_set &rArr;  audio_mgr_dispatch (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_volume_out_set
</UL>
<BR>[Called By]<UL><LI><a href="#[a25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_mgr_dispatch
</UL>

<P><STRONG><a name="[a31]"></a>audio_track_volume_in_mute_all</STRONG> (Thumb, 120 bytes, Stack size 16 bytes, audio_track.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = audio_track_volume_in_mute_all &rArr; audio_path_adc_mute &rArr; codec_mgr_adc_gain_mute &rArr; codec_mgr_adc_gain_config &rArr; audio_route_physical_path_take &rArr; audio_route_physical_path_get &rArr; audio_route_voice_physical_path_get
</UL>
<BR>[Calls]<UL><LI><a href="#[a54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_adc_mute
</UL>
<BR>[Called By]<UL><LI><a href="#[a25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_mgr_dispatch
</UL>

<P><STRONG><a name="[a32]"></a>audio_track_volume_in_unmute_all</STRONG> (Thumb, 132 bytes, Stack size 16 bytes, audio_track.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = audio_track_volume_in_unmute_all &rArr; audio_path_adc_level_set &rArr; audio_path_gain_scale &rArr; pow &rArr; sqrt &rArr; _dsqrt
</UL>
<BR>[Calls]<UL><LI><a href="#[a53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_adc_level_set
</UL>
<BR>[Called By]<UL><LI><a href="#[a25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_mgr_dispatch
</UL>

<P><STRONG><a name="[a6f]"></a>audio_track_volume_in_set</STRONG> (Thumb, 180 bytes, Stack size 24 bytes, audio_track.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 264 + In Cycle
<LI>Call Chain = audio_track_volume_in_set &rArr;  audio_mgr_dispatch (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[a25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_mgr_dispatch
<LI><a href="#[a53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_adc_level_set
<LI><a href="#[a55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_handle_check
</UL>
<BR>[Called By]<UL><LI><a href="#[a30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_volume_in_set_all
</UL>

<P><STRONG><a name="[a30]"></a>audio_track_volume_in_set_all</STRONG> (Thumb, 116 bytes, Stack size 24 bytes, audio_track.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = audio_track_volume_in_set_all &rArr; audio_track_volume_in_set &rArr;  audio_mgr_dispatch (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[a6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_volume_in_set
</UL>
<BR>[Called By]<UL><LI><a href="#[a25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_mgr_dispatch
</UL>

<P><STRONG><a name="[a34]"></a>audio_track_volume_balance_set</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, audio_track.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = audio_track_volume_balance_set
</UL>
<BR>[Called By]<UL><LI><a href="#[a25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_mgr_dispatch
</UL>

<P><STRONG><a name="[a3e]"></a>audio_track_init</STRONG> (Thumb, 92 bytes, Stack size 8 bytes, audio_track.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = audio_track_init
</UL>
<BR>[Called By]<UL><LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_mgr_init
</UL>

<P><STRONG><a name="[62f]"></a>audio_track_create</STRONG> (Thumb, 384 bytes, Stack size 80 bytes, audio_track.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 504<LI>Call Chain = audio_track_create &rArr; audio_session_state_set &rArr;  audio_mgr_dispatch (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4 (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[a56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_session_state_set
</UL>
<BR>[Called By]<UL><LI><a href="#[637]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_a2dp_stream_start_handle
<LI><a href="#[62e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_sco_conn_cmpl_handle
<LI><a href="#[8c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_track
<LI><a href="#[886]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_track_create
</UL>

<P><STRONG><a name="[453]"></a>audio_track_start</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, audio_track.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 440<LI>Call Chain = audio_track_start &rArr; audio_session_state_set &rArr;  audio_mgr_dispatch (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[a56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_session_state_set
<LI><a href="#[a55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_handle_check
</UL>
<BR>[Called By]<UL><LI><a href="#[455]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_update_call_status
<LI><a href="#[451]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_set_active_idx
<LI><a href="#[5a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_preemptive_judge
<LI><a href="#[59f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_a2dp_active_link_set
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_bt_cback
<LI><a href="#[637]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_a2dp_stream_start_handle
<LI><a href="#[62e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_sco_conn_cmpl_handle
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_policy_cback
<LI><a href="#[8c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_track
<LI><a href="#[899]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_link_connected
<LI><a href="#[886]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_track_create
<LI><a href="#[883]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_ase_ctrl
<LI><a href="#[863]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_mgr_cis_mtc_if_handle
</UL>

<P><STRONG><a name="[87a]"></a>audio_track_restart</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, audio_track.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 440<LI>Call Chain = audio_track_restart &rArr; audio_session_state_set &rArr;  audio_mgr_dispatch (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[a56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_session_state_set
<LI><a href="#[a55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_handle_check
</UL>
<BR>[Called By]<UL><LI><a href="#[879]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_handle_mcp_state
<LI><a href="#[a1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_buffer_playing_state
<LI><a href="#[a73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;media_buffer_ds_write
</UL>

<P><STRONG><a name="[53d]"></a>audio_track_release</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, audio_track.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 440<LI>Call Chain = audio_track_release &rArr; audio_session_state_set &rArr;  audio_mgr_dispatch (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[a56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_session_state_set
<LI><a href="#[a55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_handle_check
</UL>
<BR>[Called By]<UL><LI><a href="#[53c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_free_br_link
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_bt_cback
<LI><a href="#[637]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_a2dp_stream_start_handle
<LI><a href="#[62e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_sco_conn_cmpl_handle
<LI><a href="#[62d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_a2dp_track_release
<LI><a href="#[817]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_ascs_free_ase_entry
<LI><a href="#[8c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_audio_path_reset
<LI><a href="#[8a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_enable_mic
<LI><a href="#[897]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_free_link
<LI><a href="#[886]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_track_create
<LI><a href="#[884]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_remove_data_path
</UL>

<P><STRONG><a name="[63c]"></a>audio_track_write</STRONG> (Thumb, 150 bytes, Stack size 56 bytes, audio_track.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 688<LI>Call Chain = audio_track_write &rArr; media_buffer_ds_write &rArr; audio_mgr_dispatch &rArr; audio_mgr_buffer_event_handle &rArr; audio_buffer_playing_state &rArr; audio_track_restart &rArr; audio_session_state_set &rArr;  audio_mgr_dispatch (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[a72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;media_buffer_latency_set2
<LI><a href="#[a70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;media_buffer_inteval_evaluator_update
<LI><a href="#[a71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;media_buffer_inteval_evaluator_get_var
<LI><a href="#[a73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;media_buffer_ds_write
<LI><a href="#[a55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_handle_check
</UL>
<BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_bt_cback
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_audio_cback
<LI><a href="#[861]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_handle_iso_data
<LI><a href="#[862]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_handle_iso_data
</UL>

<P><STRONG><a name="[62a]"></a>audio_track_read</STRONG> (Thumb, 152 bytes, Stack size 48 bytes, audio_track.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = audio_track_read &rArr; media_buffer_us_read
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[a74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;media_buffer_us_read
<LI><a href="#[a55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_handle_check
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_policy_cback
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_audio_cback
</UL>

<P><STRONG><a name="[477]"></a>audio_track_state_get</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, audio_track.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = audio_track_state_get &rArr; audio_track_handle_check
</UL>
<BR>[Calls]<UL><LI><a href="#[a55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_handle_check
</UL>
<BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_audio_cback
<LI><a href="#[819]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_ascs_find_ase_entry_by_direction
<LI><a href="#[899]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_link_connected
<LI><a href="#[883]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_ase_ctrl
<LI><a href="#[879]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_handle_mcp_state
<LI><a href="#[861]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_handle_iso_data
<LI><a href="#[862]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_handle_iso_data
<LI><a href="#[94c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_devinfo_set
<LI><a href="#[906]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_check_sniff
<LI><a href="#[a1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_buffer_playing_state
</UL>

<P><STRONG><a name="[476]"></a>audio_track_stream_type_get</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, audio_track.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = audio_track_stream_type_get &rArr; audio_track_handle_check
</UL>
<BR>[Calls]<UL><LI><a href="#[a55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_handle_check
</UL>
<BR>[Called By]<UL><LI><a href="#[44d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_vol_set
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_audio_cback
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_policy_cback
<LI><a href="#[881]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_track_sync_reset
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_audio_cback
<LI><a href="#[876]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_handle_ccp_term
<LI><a href="#[85e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_set_mic_mute
</UL>

<P><STRONG><a name="[630]"></a>audio_track_latency_set</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, audio_track.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = audio_track_latency_set &rArr; media_buffer_latency_set &rArr; audio_latency_set_dynamic_latency_on &rArr; audio_latency_mgr_check_handle
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[a5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;media_buffer_latency_set
<LI><a href="#[a55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_handle_check
</UL>
<BR>[Called By]<UL><LI><a href="#[637]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_a2dp_stream_start_handle
<LI><a href="#[62e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_sco_conn_cmpl_handle
</UL>

<P><STRONG><a name="[a28]"></a>audio_track_volume_out_max_set</STRONG> (Thumb, 216 bytes, Stack size 24 bytes, audio_track.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = audio_track_volume_out_max_set
</UL>
<BR>[Calls]<UL><LI><a href="#[a75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_volume_scale
</UL>
<BR>[Called By]<UL><LI><a href="#[a25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_mgr_dispatch
</UL>

<P><STRONG><a name="[a29]"></a>audio_track_volume_out_min_set</STRONG> (Thumb, 104 bytes, Stack size 16 bytes, audio_track.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = audio_track_volume_out_min_set
</UL>
<BR>[Called By]<UL><LI><a href="#[a25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_mgr_dispatch
</UL>

<P><STRONG><a name="[8ab]"></a>audio_track_volume_out_get</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, audio_track.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = audio_track_volume_out_get &rArr; audio_track_handle_check
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[a55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_handle_check
</UL>
<BR>[Called By]<UL><LI><a href="#[85d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_vol_update_track_volume
</UL>

<P><STRONG><a name="[4f0]"></a>audio_track_volume_out_mute</STRONG> (Thumb, 102 bytes, Stack size 24 bytes, audio_track.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 560<LI>Call Chain = audio_track_volume_out_mute &rArr; audio_mgr_dispatch &rArr; audio_mgr_buffer_event_handle &rArr; audio_buffer_playing_state &rArr; audio_track_restart &rArr; audio_session_state_set &rArr;  audio_mgr_dispatch (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[a25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_mgr_dispatch
<LI><a href="#[a52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_dac_mute
<LI><a href="#[a55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_handle_check
</UL>
<BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_bt_cback
<LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_spk_mute_set
<LI><a href="#[631]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_set_voice_gain_when_sco_conn_cmpl
<LI><a href="#[637]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_a2dp_stream_start_handle
<LI><a href="#[8c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_track
<LI><a href="#[886]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_track_create
<LI><a href="#[85d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_vol_update_track_volume
</UL>

<P><STRONG><a name="[446]"></a>audio_track_volume_out_unmute</STRONG> (Thumb, 142 bytes, Stack size 24 bytes, audio_track.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 560<LI>Call Chain = audio_track_volume_out_unmute &rArr; audio_mgr_dispatch &rArr; audio_mgr_buffer_event_handle &rArr; audio_buffer_playing_state &rArr; audio_track_restart &rArr; audio_session_state_set &rArr;  audio_mgr_dispatch (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[a25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_mgr_dispatch
<LI><a href="#[a51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_dac_level_set
<LI><a href="#[a55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_handle_check
</UL>
<BR>[Called By]<UL><LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_track_spk_unmute
<LI><a href="#[445]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_inband_tone_mute_ctrl
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_bt_cback
<LI><a href="#[8c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_track
<LI><a href="#[886]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_track_create
<LI><a href="#[85d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_vol_update_track_volume
</UL>

<P><STRONG><a name="[a2e]"></a>audio_track_volume_in_max_set</STRONG> (Thumb, 216 bytes, Stack size 24 bytes, audio_track.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = audio_track_volume_in_max_set
</UL>
<BR>[Calls]<UL><LI><a href="#[a75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_volume_scale
</UL>
<BR>[Called By]<UL><LI><a href="#[a25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_mgr_dispatch
</UL>

<P><STRONG><a name="[a2f]"></a>audio_track_volume_in_min_set</STRONG> (Thumb, 126 bytes, Stack size 16 bytes, audio_track.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = audio_track_volume_in_min_set
</UL>
<BR>[Called By]<UL><LI><a href="#[a25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_mgr_dispatch
</UL>

<P><STRONG><a name="[63e]"></a>audio_track_data_in_is_silent</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, audio_track.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = audio_track_data_in_is_silent &rArr; audio_track_handle_check
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[a55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_handle_check
</UL>
<BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_bt_cback
</UL>

<P><STRONG><a name="[636]"></a>audio_track_effect_attach</STRONG> (Thumb, 114 bytes, Stack size 24 bytes, audio_track.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = audio_track_effect_attach &rArr; audio_effect_owner_set
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[a5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_effect_run
<LI><a href="#[a79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_effect_owner_set
<LI><a href="#[a78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_effect_dequeue
<LI><a href="#[a55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_handle_check
</UL>
<BR>[Called By]<UL><LI><a href="#[478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;harman_sidetone_set_dsp
<LI><a href="#[627]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sidetone_attach
<LI><a href="#[626]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_nrec_attach
<LI><a href="#[661]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_eq_enable_effect
<LI><a href="#[637]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_a2dp_stream_start_handle
<LI><a href="#[62e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_sco_conn_cmpl_handle
<LI><a href="#[8a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_playback_eq_setting
<LI><a href="#[94c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_devinfo_set
</UL>

<P><STRONG><a name="[6d7]"></a>audio_track_effect_detach</STRONG> (Thumb, 112 bytes, Stack size 24 bytes, audio_track.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = audio_track_effect_detach &rArr; audio_effect_owner_set
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[a77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_effect_stop
<LI><a href="#[a79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_effect_owner_set
<LI><a href="#[a6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_effect_owner_clear
<LI><a href="#[a78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_effect_dequeue
<LI><a href="#[a55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_handle_check
</UL>
<BR>[Called By]<UL><LI><a href="#[629]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sidetone_detach
<LI><a href="#[628]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_nrec_detach
</UL>

<P><STRONG><a name="[813]"></a>audio_track_device_get</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, audio_track.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = audio_track_device_get &rArr; audio_track_handle_check
</UL>
<BR>[Calls]<UL><LI><a href="#[a55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_handle_check
</UL>
<BR>[Called By]<UL><LI><a href="#[812]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_ascs_check_ase_condition
</UL>

<P><STRONG><a name="[a3d]"></a>audio_volume_init</STRONG> (Thumb, 86 bytes, Stack size 8 bytes, audio_volume.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = audio_volume_init
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_mgr_init
</UL>

<P><STRONG><a name="[65b]"></a>audio_volume_out_max_get</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, audio_volume.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[48a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_iphone_abs_vol_check_a2dp_total_gain_num_16
<LI><a href="#[657]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_cmd_handle
<LI><a href="#[6a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_cmd_general_cmd_handle
</UL>

<P><STRONG><a name="[647]"></a>audio_volume_out_max_set</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, audio_volume.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 544<LI>Call Chain = audio_volume_out_max_set &rArr; audio_mgr_dispatch &rArr; audio_mgr_buffer_event_handle &rArr; audio_buffer_playing_state &rArr; audio_track_restart &rArr; audio_session_state_set &rArr;  audio_mgr_dispatch (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[a25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_mgr_dispatch
</UL>
<BR>[Called By]<UL><LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_init
</UL>

<P><STRONG><a name="[649]"></a>audio_volume_out_min_set</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, audio_volume.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 544<LI>Call Chain = audio_volume_out_min_set &rArr; audio_mgr_dispatch &rArr; audio_mgr_buffer_event_handle &rArr; audio_buffer_playing_state &rArr; audio_track_restart &rArr; audio_session_state_set &rArr;  audio_mgr_dispatch (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[a25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_mgr_dispatch
</UL>
<BR>[Called By]<UL><LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_init
</UL>

<P><STRONG><a name="[65d]"></a>audio_volume_out_get</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, audio_volume.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[657]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_cmd_handle
<LI><a href="#[6a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_cmd_general_cmd_handle
</UL>

<P><STRONG><a name="[648]"></a>audio_volume_in_max_set</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, audio_volume.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 544<LI>Call Chain = audio_volume_in_max_set &rArr; audio_mgr_dispatch &rArr; audio_mgr_buffer_event_handle &rArr; audio_buffer_playing_state &rArr; audio_track_restart &rArr; audio_session_state_set &rArr;  audio_mgr_dispatch (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[a25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_mgr_dispatch
</UL>
<BR>[Called By]<UL><LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_init
</UL>

<P><STRONG><a name="[64a]"></a>audio_volume_in_min_set</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, audio_volume.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 544<LI>Call Chain = audio_volume_in_min_set &rArr; audio_mgr_dispatch &rArr; audio_mgr_buffer_event_handle &rArr; audio_buffer_playing_state &rArr; audio_track_restart &rArr; audio_session_state_set &rArr;  audio_mgr_dispatch (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[a25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_mgr_dispatch
</UL>
<BR>[Called By]<UL><LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_init
</UL>

<P><STRONG><a name="[484]"></a>audio_volume_in_mute</STRONG> (Thumb, 112 bytes, Stack size 16 bytes, audio_volume.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 552<LI>Call Chain = audio_volume_in_mute &rArr; audio_mgr_dispatch &rArr; audio_mgr_buffer_event_handle &rArr; audio_buffer_playing_state &rArr; audio_track_restart &rArr; audio_session_state_set &rArr;  audio_mgr_dispatch (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[a25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_mgr_dispatch
</UL>
<BR>[Called By]<UL><LI><a href="#[47e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_set_mic_mute
<LI><a href="#[8a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_enable_mic
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_audio_cback
<LI><a href="#[85e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_set_mic_mute
</UL>

<P><STRONG><a name="[45e]"></a>audio_volume_in_unmute</STRONG> (Thumb, 118 bytes, Stack size 16 bytes, audio_volume.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 552<LI>Call Chain = audio_volume_in_unmute &rArr; audio_mgr_dispatch &rArr; audio_mgr_buffer_event_handle &rArr; audio_buffer_playing_state &rArr; audio_track_restart &rArr; audio_session_state_set &rArr;  audio_mgr_dispatch (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[a25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_mgr_dispatch
</UL>
<BR>[Called By]<UL><LI><a href="#[455]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_update_call_status
<LI><a href="#[47e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_set_mic_mute
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_policy_cback
<LI><a href="#[8a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_enable_mic
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_audio_cback
<LI><a href="#[876]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_handle_ccp_term
<LI><a href="#[85e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_set_mic_mute
</UL>

<P><STRONG><a name="[528]"></a>audio_volume_in_is_muted</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, audio_volume.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_handle_action
<LI><a href="#[85e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_set_mic_mute
</UL>

<P><STRONG><a name="[63b]"></a>audio_volume_out_channel_set</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, audio_volume.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 544<LI>Call Chain = audio_volume_out_channel_set &rArr; audio_mgr_dispatch &rArr; audio_mgr_buffer_event_handle &rArr; audio_buffer_playing_state &rArr; audio_track_restart &rArr; audio_session_state_set &rArr;  audio_mgr_dispatch (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[a25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_mgr_dispatch
</UL>
<BR>[Called By]<UL><LI><a href="#[63a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_speaker_channel_set
</UL>

<P><STRONG><a name="[65c]"></a>audio_volume_out_min_get</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, audio_volume.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[657]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_cmd_handle
</UL>

<P><STRONG><a name="[65a]"></a>audio_volume_out_set</STRONG> (Thumb, 146 bytes, Stack size 40 bytes, audio_volume.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 576<LI>Call Chain = audio_volume_out_set &rArr; audio_mgr_dispatch &rArr; audio_mgr_buffer_event_handle &rArr; audio_buffer_playing_state &rArr; audio_track_restart &rArr; audio_session_state_set &rArr;  audio_mgr_dispatch (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[a25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_mgr_dispatch
</UL>
<BR>[Called By]<UL><LI><a href="#[657]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_cmd_handle
</UL>

<P><STRONG><a name="[7af]"></a>audio_volume_out_mute</STRONG> (Thumb, 112 bytes, Stack size 16 bytes, audio_volume.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 552<LI>Call Chain = audio_volume_out_mute &rArr; audio_mgr_dispatch &rArr; audio_mgr_buffer_event_handle &rArr; audio_buffer_playing_state &rArr; audio_track_restart &rArr; audio_session_state_set &rArr;  audio_mgr_dispatch (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[a25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_mgr_dispatch
</UL>
<BR>[Called By]<UL><LI><a href="#[7ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_msg_ring_play
<LI><a href="#[945]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_find_my_buds_ring_play
</UL>

<P><STRONG><a name="[7b0]"></a>audio_volume_out_unmute</STRONG> (Thumb, 116 bytes, Stack size 16 bytes, audio_volume.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 552<LI>Call Chain = audio_volume_out_unmute &rArr; audio_mgr_dispatch &rArr; audio_mgr_buffer_event_handle &rArr; audio_buffer_playing_state &rArr; audio_track_restart &rArr; audio_session_state_set &rArr;  audio_mgr_dispatch (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[a25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_mgr_dispatch
</UL>
<BR>[Called By]<UL><LI><a href="#[509]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_find_my_buds_ring_stop
<LI><a href="#[775]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_msg_ring_stop
</UL>

<P><STRONG><a name="[659]"></a>audio_volume_in_set</STRONG> (Thumb, 146 bytes, Stack size 40 bytes, audio_volume.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 576<LI>Call Chain = audio_volume_in_set &rArr; audio_mgr_dispatch &rArr; audio_mgr_buffer_event_handle &rArr; audio_buffer_playing_state &rArr; audio_track_restart &rArr; audio_session_state_set &rArr;  audio_mgr_dispatch (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[a25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_mgr_dispatch
</UL>
<BR>[Called By]<UL><LI><a href="#[657]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_cmd_handle
</UL>

<P><STRONG><a name="[941]"></a>audio_volume_balance_set</STRONG> (Thumb, 166 bytes, Stack size 56 bytes, audio_volume.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 592<LI>Call Chain = audio_volume_balance_set &rArr; audio_mgr_dispatch &rArr; audio_mgr_buffer_event_handle &rArr; audio_buffer_playing_state &rArr; audio_track_restart &rArr; audio_session_state_set &rArr;  audio_mgr_dispatch (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[a25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_mgr_dispatch
<LI><a href="#[a7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_gain_delta_set
<LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[a7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
</UL>
<BR>[Called By]<UL><LI><a href="#[486]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_lr_balance_set
</UL>

<P><STRONG><a name="[64d]"></a>ringtone_volume_max_set</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, ringtone.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[a7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notification_volume_max_set
</UL>
<BR>[Called By]<UL><LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_init
</UL>

<P><STRONG><a name="[64e]"></a>ringtone_volume_min_set</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, ringtone.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[a80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notification_volume_min_set
</UL>
<BR>[Called By]<UL><LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_init
</UL>

<P><STRONG><a name="[94e]"></a>ringtone_volume_get</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, ringtone.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[a81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notification_volume_get
</UL>
<BR>[Called By]<UL><LI><a href="#[94c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_devinfo_set
</UL>

<P><STRONG><a name="[4b1]"></a>ringtone_volume_set</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, ringtone.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = ringtone_volume_set &rArr; notification_volume_set &rArr; audio_path_dac_level_set &rArr; codec_mgr_dac_gain_set &rArr; codec_drv_dac_config_set &rArr; codec_drv_event_process &rArr; codec_drv_set_sample_rate
</UL>
<BR>[Calls]<UL><LI><a href="#[a83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notification_volume_set
<LI><a href="#[a82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notification_mode_get
</UL>
<BR>[Called By]<UL><LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_init
<LI><a href="#[4ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_factory_reset
<LI><a href="#[94c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_devinfo_set
</UL>

<P><STRONG><a name="[61a]"></a>ringtone_play</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, ringtone.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 512<LI>Call Chain = ringtone_play &rArr; notification_push &rArr; notification_play &rArr; notification_path_start &rArr; notification_start_vp &rArr; audio_path_start &rArr; audio_path_schedule &rArr; audio_path_voice_start &rArr; dsp_mgr_session_enable &rArr; dsp_state_machine &rArr; dsp_power_on &rArr; dsp_hal_reset &rArr; shm_enable &rArr; h2d_cmd_send &rArr; shm_cmd_send &rArr; wr_queue_send
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[a84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notification_push
<LI><a href="#[a82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notification_mode_get
</UL>
<BR>[Called By]<UL><LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_tone_type_play
</UL>

<P><STRONG><a name="[655]"></a>ringtone_stop</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, ringtone.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = ringtone_stop &rArr; notification_stop &rArr; audio_path_stop &rArr; audio_path_state_set &rArr; sys_event_flag_post &rArr; sys_event_flag_abort
</UL>
<BR>[Calls]<UL><LI><a href="#[a85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notification_stop
</UL>
<BR>[Called By]<UL><LI><a href="#[536]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_tone_type_stop
</UL>

<P><STRONG><a name="[619]"></a>ringtone_cancel</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, ringtone.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = ringtone_cancel &rArr; notification_cancel &rArr; notification_stop &rArr; audio_path_stop &rArr; audio_path_state_set &rArr; sys_event_flag_post &rArr; sys_event_flag_abort
</UL>
<BR>[Calls]<UL><LI><a href="#[a86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notification_cancel
</UL>
<BR>[Called By]<UL><LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_tone_type_play
<LI><a href="#[45f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_tone_type_cancel
</UL>

<P><STRONG><a name="[653]"></a>ringtone_flush</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, ringtone.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = ringtone_flush &rArr; notification_flush
</UL>
<BR>[Calls]<UL><LI><a href="#[a87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notification_flush
</UL>
<BR>[Called By]<UL><LI><a href="#[535]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_tone_flush
</UL>

<P><STRONG><a name="[4a7]"></a>ringtone_remaining_count_get</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, ringtone.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ringtone_remaining_count_get &rArr; notification_remaining_count_get
</UL>
<BR>[Calls]<UL><LI><a href="#[a88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notification_remaining_count_get
</UL>
<BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_timerout_cb
<LI><a href="#[4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_reboot_check
</UL>

<P><STRONG><a name="[646]"></a>voice_prompt_language_set</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, voice_prompt.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_init
<LI><a href="#[6a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_cmd_general_cmd_handle
</UL>

<P><STRONG><a name="[6a8]"></a>voice_prompt_supported_languages_get</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, voice_prompt.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_cmd_general_cmd_handle
</UL>

<P><STRONG><a name="[64b]"></a>voice_prompt_volume_max_set</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, voice_prompt.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[a7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notification_volume_max_set
</UL>
<BR>[Called By]<UL><LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_init
</UL>

<P><STRONG><a name="[64c]"></a>voice_prompt_volume_min_set</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, voice_prompt.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[a80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notification_volume_min_set
</UL>
<BR>[Called By]<UL><LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_init
</UL>

<P><STRONG><a name="[7d9]"></a>voice_prompt_volume_get</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, voice_prompt.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[a81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notification_volume_get
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_msg_rfc_audio_cback
<LI><a href="#[94c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_devinfo_set
</UL>

<P><STRONG><a name="[4b0]"></a>voice_prompt_volume_set</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, voice_prompt.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = voice_prompt_volume_set &rArr; notification_volume_set &rArr; audio_path_dac_level_set &rArr; codec_mgr_dac_gain_set &rArr; codec_drv_dac_config_set &rArr; codec_drv_event_process &rArr; codec_drv_set_sample_rate
</UL>
<BR>[Calls]<UL><LI><a href="#[a83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notification_volume_set
<LI><a href="#[a82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notification_mode_get
</UL>
<BR>[Called By]<UL><LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_init
<LI><a href="#[509]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_find_my_buds_ring_stop
<LI><a href="#[4ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_factory_reset
<LI><a href="#[657]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_cmd_handle
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_msg_rfc_audio_cback
<LI><a href="#[94c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_devinfo_set
<LI><a href="#[945]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_find_my_buds_ring_play
</UL>

<P><STRONG><a name="[61c]"></a>voice_prompt_play</STRONG> (Thumb, 72 bytes, Stack size 32 bytes, voice_prompt.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 520<LI>Call Chain = voice_prompt_play &rArr; notification_push &rArr; notification_play &rArr; notification_path_start &rArr; notification_start_vp &rArr; audio_path_start &rArr; audio_path_schedule &rArr; audio_path_voice_start &rArr; dsp_mgr_session_enable &rArr; dsp_state_machine &rArr; dsp_power_on &rArr; dsp_hal_reset &rArr; shm_enable &rArr; h2d_cmd_send &rArr; shm_cmd_send &rArr; wr_queue_send
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[a84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notification_push
<LI><a href="#[a82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notification_mode_get
</UL>
<BR>[Called By]<UL><LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_tone_type_play
</UL>

<P><STRONG><a name="[656]"></a>voice_prompt_stop</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, voice_prompt.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = voice_prompt_stop &rArr; notification_stop &rArr; audio_path_stop &rArr; audio_path_state_set &rArr; sys_event_flag_post &rArr; sys_event_flag_abort
</UL>
<BR>[Calls]<UL><LI><a href="#[a85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notification_stop
</UL>
<BR>[Called By]<UL><LI><a href="#[536]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_tone_type_stop
</UL>

<P><STRONG><a name="[61b]"></a>voice_prompt_cancel</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, voice_prompt.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = voice_prompt_cancel &rArr; notification_cancel &rArr; notification_stop &rArr; audio_path_stop &rArr; audio_path_state_set &rArr; sys_event_flag_post &rArr; sys_event_flag_abort
</UL>
<BR>[Calls]<UL><LI><a href="#[a86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notification_cancel
</UL>
<BR>[Called By]<UL><LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_tone_type_play
<LI><a href="#[45f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_tone_type_cancel
</UL>

<P><STRONG><a name="[654]"></a>voice_prompt_flush</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, voice_prompt.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = voice_prompt_flush &rArr; notification_flush
</UL>
<BR>[Calls]<UL><LI><a href="#[a87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notification_flush
</UL>
<BR>[Called By]<UL><LI><a href="#[535]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_tone_flush
</UL>

<P><STRONG><a name="[4a8]"></a>voice_prompt_remaining_count_get</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, voice_prompt.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = voice_prompt_remaining_count_get &rArr; notification_remaining_count_get
</UL>
<BR>[Calls]<UL><LI><a href="#[a88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notification_remaining_count_get
</UL>
<BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_timerout_cb
<LI><a href="#[4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_reboot_check
</UL>

<P><STRONG><a name="[4a9]"></a>tts_remaining_count_get</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, tts.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_timerout_cb
</UL>

<P><STRONG><a name="[671]"></a>eq_create</STRONG> (Thumb, 182 bytes, Stack size 40 bytes, eq.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = eq_create &rArr; audio_effect_inheritor_set
</UL>
<BR>[Calls]<UL><LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[a91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_effect_release
<LI><a href="#[a8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_effect_inheritor_set
<LI><a href="#[a90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_effect_inheritor_clear
<LI><a href="#[a8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_effect_create
</UL>
<BR>[Called By]<UL><LI><a href="#[661]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_eq_enable_effect
<LI><a href="#[634]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_eq_create
</UL>

<P><STRONG><a name="[635]"></a>eq_enable</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, eq.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = eq_enable &rArr; audio_effect_inheritor_get
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[a89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_effect_inheritor_get
<LI><a href="#[a92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_effect_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[661]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_eq_enable_effect
<LI><a href="#[662]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_eq_cmd_operate
<LI><a href="#[639]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_eq_audio_eq_enable
<LI><a href="#[62e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_sco_conn_cmpl_handle
</UL>

<P><STRONG><a name="[66b]"></a>eq_set</STRONG> (Thumb, 170 bytes, Stack size 32 bytes, eq.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = eq_set &rArr; audio_effect_update
</UL>
<BR>[Calls]<UL><LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[a93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_effect_update
<LI><a href="#[a89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_effect_inheritor_get
</UL>
<BR>[Called By]<UL><LI><a href="#[52c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_eq_index_set
<LI><a href="#[669]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_eq_media_eq_set
<LI><a href="#[675]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_eq_param_set
</UL>

<P><STRONG><a name="[53e]"></a>eq_release</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, eq.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = eq_release &rArr; audio_effect_release
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[a91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_effect_release
<LI><a href="#[a89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_effect_inheritor_get
</UL>
<BR>[Called By]<UL><LI><a href="#[53c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_free_br_link
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_bt_cback
<LI><a href="#[637]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_a2dp_stream_start_handle
<LI><a href="#[62e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_sco_conn_cmpl_handle
<LI><a href="#[62d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_a2dp_track_release
<LI><a href="#[87c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_eq_release
</UL>

<P><STRONG><a name="[6d8]"></a>nrec_create</STRONG> (Thumb, 122 bytes, Stack size 24 bytes, nrec.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = nrec_create &rArr; audio_effect_inheritor_set
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[a91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_effect_release
<LI><a href="#[a8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_effect_inheritor_set
<LI><a href="#[a8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_effect_create
</UL>
<BR>[Called By]<UL><LI><a href="#[626]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_nrec_attach
</UL>

<P><STRONG><a name="[6d9]"></a>nrec_enable</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, nrec.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = nrec_enable &rArr; audio_effect_inheritor_get
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[a89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_effect_inheritor_get
<LI><a href="#[a92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_effect_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[626]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_nrec_attach
</UL>

<P><STRONG><a name="[6da]"></a>nrec_disable</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, nrec.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = nrec_disable &rArr; audio_effect_inheritor_get
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[a89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_effect_inheritor_get
<LI><a href="#[a96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_effect_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[628]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_nrec_detach
<LI><a href="#[626]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_nrec_attach
</UL>

<P><STRONG><a name="[6db]"></a>nrec_release</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, nrec.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = nrec_release &rArr; audio_effect_release
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[a91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_effect_release
<LI><a href="#[a89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_effect_inheritor_get
</UL>
<BR>[Called By]<UL><LI><a href="#[628]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_nrec_detach
</UL>

<P><STRONG><a name="[6d5]"></a>sidetone_create</STRONG> (Thumb, 120 bytes, Stack size 24 bytes, sidetone.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = sidetone_create &rArr; audio_effect_inheritor_set
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[a91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_effect_release
<LI><a href="#[a8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_effect_inheritor_set
<LI><a href="#[a8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_effect_create
</UL>
<BR>[Called By]<UL><LI><a href="#[478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;harman_sidetone_set_dsp
<LI><a href="#[627]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sidetone_attach
<LI><a href="#[94c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_devinfo_set
</UL>

<P><STRONG><a name="[6d6]"></a>sidetone_enable</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, sidetone.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = sidetone_enable &rArr; audio_effect_inheritor_get
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[a89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_effect_inheritor_get
<LI><a href="#[a92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_effect_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;harman_sidetone_set_dsp
<LI><a href="#[627]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sidetone_attach
<LI><a href="#[878]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_handle_ccp_state
<LI><a href="#[94c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_devinfo_set
</UL>

<P><STRONG><a name="[479]"></a>sidetone_disable</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, sidetone.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = sidetone_disable &rArr; audio_effect_inheritor_get
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[a89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_effect_inheritor_get
<LI><a href="#[a96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_effect_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_audio_cback
<LI><a href="#[629]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sidetone_detach
<LI><a href="#[876]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_handle_ccp_term
<LI><a href="#[94c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_devinfo_set
</UL>

<P><STRONG><a name="[47a]"></a>sidetone_release</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, sidetone.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = sidetone_release &rArr; audio_effect_release
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[a91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_effect_release
<LI><a href="#[a89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_effect_inheritor_get
</UL>
<BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_audio_cback
<LI><a href="#[629]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sidetone_detach
<LI><a href="#[94c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_devinfo_set
</UL>

<P><STRONG><a name="[944]"></a>sidetone_gain_set</STRONG> (Thumb, 102 bytes, Stack size 24 bytes, sidetone.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = sidetone_gain_set &rArr; audio_effect_update
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[a93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_effect_update
<LI><a href="#[a89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_effect_inheritor_get
<LI><a href="#[a76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_effect_owner_get
</UL>
<BR>[Called By]<UL><LI><a href="#[478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;harman_sidetone_set_dsp
<LI><a href="#[94c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_devinfo_set
</UL>

<P><STRONG><a name="[5cb]"></a>anc_tool_check_resp_meas_mode</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, anc_tuning.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_enable_b2s_disconnect_enter_pairing
</UL>

<P><STRONG><a name="[a9e]"></a>audio_route_record_dev_get</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, audio_route.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[a9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_route_physical_path_num_get
<LI><a href="#[aa1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_route_record_physical_path_get
</UL>

<P><STRONG><a name="[a9d]"></a>audio_route_physical_path_num_get</STRONG> (Thumb, 118 bytes, Stack size 4 bytes, audio_route.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = audio_route_physical_path_num_get
</UL>
<BR>[Calls]<UL><LI><a href="#[a9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_route_record_dev_get
</UL>
<BR>[Called By]<UL><LI><a href="#[aa5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_route_physical_path_take
</UL>

<P><STRONG><a name="[a9f]"></a>audio_route_physical_path_get</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, audio_route.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = audio_route_physical_path_get &rArr; audio_route_voice_physical_path_get
</UL>
<BR>[Calls]<UL><LI><a href="#[aa1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_route_record_physical_path_get
<LI><a href="#[aa4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_route_analog_physical_path_get
<LI><a href="#[aa3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_route_vp_physical_path_get
<LI><a href="#[aa2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_route_ringtone_physical_path_get
<LI><a href="#[a9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_route_voice_physical_path_get
<LI><a href="#[aa0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_route_audio_physical_path_get
</UL>
<BR>[Called By]<UL><LI><a href="#[aa5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_route_physical_path_take
</UL>

<P><STRONG><a name="[aa5]"></a>audio_route_physical_path_take</STRONG> (Thumb, 84 bytes, Stack size 24 bytes, audio_route.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = audio_route_physical_path_take &rArr; audio_route_physical_path_get &rArr; audio_route_voice_physical_path_get
</UL>
<BR>[Calls]<UL><LI><a href="#[a9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_route_physical_path_get
<LI><a href="#[a9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_route_physical_path_num_get
</UL>
<BR>[Called By]<UL><LI><a href="#[f24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_mgr_send_action
<LI><a href="#[f15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_mgr_deployment_traverse
<LI><a href="#[eb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_mgr_signal_proc_start
<LI><a href="#[ec3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_session_create
<LI><a href="#[ea7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_dac_gain_set
<LI><a href="#[106b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_adc_gain_config
<LI><a href="#[1074]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_mgr_sport_path_take
<LI><a href="#[106e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_phy_path_disable
<LI><a href="#[106c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_phy_path_enable
</UL>

<P><STRONG><a name="[f16]"></a>audio_route_physical_path_give</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, audio_route.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = audio_route_physical_path_give
</UL>
<BR>[Called By]<UL><LI><a href="#[f24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_mgr_send_action
<LI><a href="#[f15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_mgr_deployment_traverse
<LI><a href="#[eb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_mgr_signal_proc_start
<LI><a href="#[ec3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_session_create
<LI><a href="#[ea7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_dac_gain_set
<LI><a href="#[106b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_adc_gain_config
<LI><a href="#[1074]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_mgr_sport_path_take
<LI><a href="#[106e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_phy_path_disable
<LI><a href="#[106c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_phy_path_enable
</UL>

<P><STRONG><a name="[aa6]"></a>audio_route_init</STRONG> (Thumb, 110 bytes, Stack size 16 bytes, audio_route.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = audio_route_init &rArr; sys_cfg_load &rArr; wdt_reset
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[aa7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_cfg_load
</UL>
<BR>[Called By]<UL><LI><a href="#[a3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_init
</UL>

<P><STRONG><a name="[6ca]"></a>audio_route_gain_register</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, audio_route.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = audio_route_gain_register
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[644]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_route_gain_init
</UL>

<P><STRONG><a name="[ec6]"></a>audio_route_record_dev_set</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, audio_route.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[e95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_record_init
</UL>

<P><STRONG><a name="[ea8]"></a>audio_route_adc_gain_get</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, audio_route.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[a53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_adc_level_set
</UL>

<P><STRONG><a name="[ea4]"></a>audio_route_dac_gain_get</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, audio_route.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = audio_route_dac_gain_get
</UL>
<BR>[Called By]<UL><LI><a href="#[a51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_dac_level_set
<LI><a href="#[ea7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_dac_gain_set
</UL>

<P><STRONG><a name="[f30]"></a>audio_route_sport_cfg_get</STRONG> (Thumb, 122 bytes, Stack size 8 bytes, audio_route.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = audio_route_sport_cfg_get
</UL>
<BR>[Called By]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_mgr_sport_set
<LI><a href="#[ec4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_mgr_session_create
<LI><a href="#[ec3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_session_create
<LI><a href="#[106d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_mic_enable
<LI><a href="#[1068]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_spk_enable
<LI><a href="#[1077]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_mgr_param_set
</UL>

<P><STRONG><a name="[e7b]"></a>audio_route_ramp_gain_get</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, audio_route.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notification_wait_running_handler
</UL>

<P><STRONG><a name="[927]"></a>cache_flush_by_addr</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, cache.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[922]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_ota_write_to_flash
</UL>

<P><STRONG><a name="[afc]"></a>os_timer_handle_get</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, os_ext.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_stop_timer
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_start_timer
<LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_register_pm_excluded
<LI><a href="#[808]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_state_get
</UL>

<P><STRONG><a name="[aa8]"></a>os_timer_index_get</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, os_ext.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[aa9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ucTimerGetTimerNumber (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_start_timer
</UL>

<P><STRONG><a name="[aaa]"></a>heap_and_timer_monitor_timer_handler</STRONG> (Thumb, 154 bytes, Stack size 24 bytes, os_ext.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = heap_and_timer_monitor_timer_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[aab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xPortGetMinimumEverFreeHeapSize (via Veneer)
<LI><a href="#[aac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskStackDump (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> os_ext.o(.text)
</UL>
<P><STRONG><a name="[31c]"></a>monitor_memory_and_timer</STRONG> (Thumb, 70 bytes, Stack size 24 bytes, os_ext.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = monitor_memory_and_timer
</UL>
<BR>[Calls]<UL><LI><a href="#[aad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_pm_register_excluded_handle (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[aae]"></a>os_timer_state_get</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, os_ext.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = os_timer_state_get
</UL>
<BR>[Calls]<UL><LI><a href="#[ab1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerIsTimerActiveFromISR (via Veneer)
<LI><a href="#[ab0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerIsTimerActive (via Veneer)
<LI><a href="#[aaf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osif_task_context_check
</UL>
<BR>[Called By]<UL><LI><a href="#[808]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_state_get
</UL>

<P><STRONG><a name="[27e]"></a>os_hp_time_get</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, os_ext.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1015]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_hp_timer_elapsed_time_update
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_hw_timer_handler
</UL>

<P><STRONG><a name="[92b]"></a>check_copy_image_id</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, ota_ext.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[92a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_ota_copy_vp
</UL>

<P><STRONG><a name="[ab2]"></a>GDMA_channel_request_in_hal</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, platform_ext.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = GDMA_channel_request_in_hal &rArr; RamVectorTableUpdate &rArr; RamVectorTableUpdate_for_xip_isr
</UL>
<BR>[Calls]<UL><LI><a href="#[ab3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GDMA_channel_request_rom (via Veneer)
<LI><a href="#[ab4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RamVectorTableUpdate
</UL>
<BR>[Address Reference Count : 1]<UL><LI> platform_ext.o(.text)
</UL>
<P><STRONG><a name="[281]"></a>vector_table_update</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, platform_ext.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = vector_table_update &rArr; RamVectorTableUpdate &rArr; RamVectorTableUpdate_for_xip_isr
</UL>
<BR>[Calls]<UL><LI><a href="#[ab4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RamVectorTableUpdate
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_init
</UL>

<P><STRONG><a name="[ab6]"></a>debug_monitor_is_enable</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, platform_ext.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[ab7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_monitor_restore_site
<LI><a href="#[ab5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_monitor_save_site
</UL>

<P><STRONG><a name="[ab5]"></a>debug_monitor_save_site</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, platform_ext.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = debug_monitor_save_site &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[ab6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_monitor_is_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cpu_dlps_enter
</UL>

<P><STRONG><a name="[ab7]"></a>debug_monitor_restore_site</STRONG> (Thumb, 50 bytes, Stack size 12 bytes, platform_ext.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = debug_monitor_restore_site
</UL>
<BR>[Calls]<UL><LI><a href="#[ab6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_monitor_is_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cpu_dlps_exit
</UL>

<P><STRONG><a name="[860]"></a>synclk_drv_time_get</STRONG> (Thumb, 94 bytes, Stack size 12 bytes, syncclk_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = synclk_drv_time_get
</UL>
<BR>[Calls]<UL><LI><a href="#[ab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;syncclk_drv_latch_get_base_addr (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[873]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_send_iso_data
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_mgr_direct_cback
</UL>

<P><STRONG><a name="[88c]"></a>syncclk_drv_timer_start</STRONG> (Thumb, 86 bytes, Stack size 12 bytes, syncclk_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = syncclk_drv_timer_start
</UL>
<BR>[Calls]<UL><LI><a href="#[ab8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;syncclk_drv_latch_get_base_addr (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[8c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_track
<LI><a href="#[886]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_track_create
</UL>

<P><STRONG><a name="[880]"></a>syncclk_drv_timer_stop</STRONG> (Thumb, 32 bytes, Stack size 4 bytes, syncclk_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = syncclk_drv_timer_stop
</UL>
<BR>[Calls]<UL><LI><a href="#[ab9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;syncclk_drv_compare_get_base_addr (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[8c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_audio_path_reset
<LI><a href="#[897]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_free_link
<LI><a href="#[884]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_remove_data_path
<LI><a href="#[883]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_ase_ctrl
<LI><a href="#[87d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_release_ascs_action
</UL>

<P><STRONG><a name="[2f1]"></a>get_image_feature_info</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, img_ctrl_ext.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = get_image_feature_info &rArr; memcpy_s
</UL>
<BR>[Calls]<UL><LI><a href="#[934]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_header_addr_by_img_id (via Veneer)
<LI><a href="#[aba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcpy_s
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[6a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_cmd_general_cmd_handle
</UL>

<P><STRONG><a name="[2ef]"></a>get_image_release_version</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, img_ctrl_ext.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = get_image_release_version
</UL>
<BR>[Calls]<UL><LI><a href="#[934]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_header_addr_by_img_id (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[abb]"></a>adp_5v_in_handler</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, hal_adp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = adp_5v_in_handler &rArr; adp_plug_event_callback
</UL>
<BR>[Calls]<UL><LI><a href="#[abc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adp_plug_event_callback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hal_adp.o(.text)
</UL>
<P><STRONG><a name="[abd]"></a>adp_5v_out_handler</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, hal_adp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = adp_5v_out_handler &rArr; adp_plug_event_callback
</UL>
<BR>[Calls]<UL><LI><a href="#[abc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adp_plug_event_callback
</UL>
<BR>[Called By]<UL><LI><a href="#[abe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adp_high_to_low_wake_up_trigger_isr
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hal_adp.o(.text)
</UL>
<P><STRONG><a name="[abe]"></a>adp_high_to_low_wake_up_trigger_isr</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, hal_adp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = adp_high_to_low_wake_up_trigger_isr &rArr; adp_5v_out_handler &rArr; adp_plug_event_callback
</UL>
<BR>[Calls]<UL><LI><a href="#[abf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_pm_get_hw_wakeup_reason (via Veneer)
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btaon_fast_read_safe (via Veneer)
<LI><a href="#[abd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adp_5v_out_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hal_adp.o(.text)
</UL>
<P><STRONG><a name="[244]"></a>adp_5v_init_isr</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, hal_adp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = adp_5v_init_isr &rArr; RamVectorTableUpdate &rArr; RamVectorTableUpdate_for_xip_isr
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[ab4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RamVectorTableUpdate
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hal_adp.o(.data)
</UL>
<P><STRONG><a name="[245]"></a>adp_5v_init_plug</STRONG> (Thumb, 92 bytes, Stack size 8 bytes, hal_adp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = adp_5v_init_plug &rArr; io_dlps_register_exit_cb &rArr; io_dlps_callback_in_queue
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[565]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;io_dlps_register_exit_cb
<LI><a href="#[ab4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RamVectorTableUpdate
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hal_adp.o(.data)
</UL>
<P><STRONG><a name="[241]"></a>adp_5v_get_deboune_time</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, hal_adp.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> hal_adp.o(.data)
</UL>
<P><STRONG><a name="[242]"></a>adp_5v_get_curr_state</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, hal_adp.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> hal_adp.o(.data)
</UL>
<P><STRONG><a name="[ac0]"></a>adp_io_in_handler</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, hal_adp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = adp_io_in_handler &rArr; adp_plug_event_callback
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[abc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adp_plug_event_callback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hal_adp.o(.text)
</UL>
<P><STRONG><a name="[ac1]"></a>adp_io_out_handler</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, hal_adp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = adp_io_out_handler &rArr; adp_plug_event_callback
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[abc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adp_plug_event_callback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hal_adp.o(.text)
</UL>
<P><STRONG><a name="[249]"></a>adp_io_init_isr</STRONG> (Thumb, 334 bytes, Stack size 72 bytes, hal_adp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = adp_io_init_isr &rArr; Pad_Config &rArr; flash_cur_bank_img_payload_addr_get
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pinmux_Config
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pad_Config (via Veneer)
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOx_MaskINTConfig
<LI><a href="#[ac3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOx_Init
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOx_INTConfig
<LI><a href="#[ac2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_StructInit
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adp_5v_get_level (via Veneer)
<LI><a href="#[ab4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RamVectorTableUpdate
</UL>
<BR>[Called By]<UL><LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adp_io_init_plug
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hal_adp.o(.data)
</UL>
<P><STRONG><a name="[24a]"></a>adp_io_init_plug</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hal_adp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = adp_io_init_plug &rArr; adp_io_init_isr &rArr; Pad_Config &rArr; flash_cur_bank_img_payload_addr_get
</UL>
<BR>[Calls]<UL><LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adp_io_init_isr
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hal_adp.o(.data)
</UL>
<P><STRONG><a name="[246]"></a>adp_io_get_deboune_time</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, hal_adp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = adp_io_get_deboune_time
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hal_adp.o(.data)
</UL>
<P><STRONG><a name="[247]"></a>adp_io_get_curr_state</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, hal_adp.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> hal_adp.o(.data)
</UL>
<P><STRONG><a name="[696]"></a>adp_update_isr_cb</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, hal_adp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = adp_update_isr_cb
</UL>
<BR>[Calls]<UL><LI><a href="#[ac5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vAssertHandler (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[ac4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adp_get_handle_and_ops_by_type (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_adp_init
</UL>

<P><STRONG><a name="[68f]"></a>adp_get_current_state</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, hal_adp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = adp_get_current_state
</UL>
<BR>[Calls]<UL><LI><a href="#[ac4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adp_get_handle_and_ops_by_type (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_adp_detect
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_usb_connector_adc_update
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ext_charger_handle_io_msg
<LI><a href="#[6f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ext_charger_check_status
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ext_charger_charging_handler
<LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ext_charger_no_charge_handler
<LI><a href="#[6ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ext_charger_handle_adp_out
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ext_charger_dlps_check_cb
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ext_charger_bt_cback
<LI><a href="#[6e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ext_charger_check_ntc_threshold
<LI><a href="#[68e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_adp_wakeup_pol_set
</UL>

<P><STRONG><a name="[695]"></a>adp_register_state_change_cb</STRONG> (Thumb, 198 bytes, Stack size 32 bytes, hal_adp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = adp_register_state_change_cb
</UL>
<BR>[Calls]<UL><LI><a href="#[ac4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adp_get_handle_and_ops_by_type (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ext_charger_init
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_adp_init
</UL>

<P><STRONG><a name="[690]"></a>adp_wake_up_enable</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, hal_adp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = adp_wake_up_enable &rArr; System_SetAdpWakeUpFunction
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[ac6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_SetAdpWakeUpFunction
</UL>
<BR>[Called By]<UL><LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_adp_init
<LI><a href="#[691]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_adp_smart_box_charger_control
<LI><a href="#[68e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_adp_wakeup_pol_set
</UL>

<P><STRONG><a name="[36d]"></a>hal_gpio_register_isr_callback</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, hal_gpio_int.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = hal_gpio_register_isr_callback &rArr; hal_gpio_register_isr_by_gpio &rArr; RamVectorTableUpdate &rArr; RamVectorTableUpdate_for_xip_isr
</UL>
<BR>[Calls]<UL><LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_GetNum
<LI><a href="#[ac7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_register_isr_by_gpio
</UL>
<BR>[Called By]<UL><LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_gpio_initial
<LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ext_charger_init
</UL>

<P><STRONG><a name="[560]"></a>hal_gpio_get_isr_callback</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, hal_gpio_int.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = hal_gpio_get_isr_callback
</UL>
<BR>[Calls]<UL><LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_GetNum
<LI><a href="#[ac8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_get_gpio
</UL>
<BR>[Called By]<UL><LI><a href="#[55f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dlps_restore_pad
</UL>

<P><STRONG><a name="[31e]"></a>hal_gpio_int_init</STRONG> (Thumb, 86 bytes, Stack size 8 bytes, hal_gpio_int.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = hal_gpio_int_init &rArr; RamVectorTableUpdate &rArr; RamVectorTableUpdate_for_xip_isr
</UL>
<BR>[Calls]<UL><LI><a href="#[ab4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RamVectorTableUpdate
</UL>
<BR>[Called By]<UL><LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_init
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;driver_init
</UL>

<P><STRONG><a name="[119]"></a>io_dlps_always_restore</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, io_dlps.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> io_dlps.o(.constdata)
</UL>
<P><STRONG><a name="[ad3]"></a>io_dlps_pre_allocate_check_item</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, io_dlps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = io_dlps_pre_allocate_check_item
</UL>
<BR>[Called By]<UL><LI><a href="#[ad2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dlps_io_restore_check
</UL>

<P><STRONG><a name="[ace]"></a>io_dlps_store_item</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, io_dlps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = io_dlps_store_item
</UL>
<BR>[Called By]<UL><LI><a href="#[acd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dlps_io_store
</UL>

<P><STRONG><a name="[ad0]"></a>io_dlps_restore_item</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, io_dlps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = io_dlps_restore_item
</UL>
<BR>[Called By]<UL><LI><a href="#[acf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dlps_io_restore
</UL>

<P><STRONG><a name="[117]"></a>cpu_dlps_enter</STRONG> (Thumb, 66 bytes, Stack size 0 bytes, io_dlps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = cpu_dlps_enter &rArr; debug_monitor_save_site &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[ab5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_monitor_save_site
</UL>
<BR>[Address Reference Count : 1]<UL><LI> io_dlps.o(.constdata)
</UL>
<P><STRONG><a name="[118]"></a>cpu_dlps_exit</STRONG> (Thumb, 134 bytes, Stack size 16 bytes, io_dlps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = cpu_dlps_exit &rArr; debug_monitor_restore_site
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[ab7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_monitor_restore_site
</UL>
<BR>[Address Reference Count : 1]<UL><LI> io_dlps.o(.constdata)
</UL>
<P><STRONG><a name="[11a]"></a>peri_on_enter</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, io_dlps.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> io_dlps.o(.constdata)
</UL>
<P><STRONG><a name="[11b]"></a>peri_on_exit</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, io_dlps.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> io_dlps.o(.constdata)
</UL>
<P><STRONG><a name="[11c]"></a>pinmux_store</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, io_dlps.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> io_dlps.o(.constdata)
</UL>
<P><STRONG><a name="[11d]"></a>pinmux_restore</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, io_dlps.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> io_dlps.o(.constdata)
</UL>
<P><STRONG><a name="[11e]"></a>pad_store</STRONG> (Thumb, 108 bytes, Stack size 32 bytes, io_dlps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = pad_store
</UL>
<BR>[Calls]<UL><LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr (via Veneer)
<LI><a href="#[aca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btaon_fast_write (via Veneer)
<LI><a href="#[ac9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btaon_fast_read (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> io_dlps.o(.constdata)
</UL>
<P><STRONG><a name="[11f]"></a>pad_restore</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, io_dlps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = pad_restore
</UL>
<BR>[Calls]<UL><LI><a href="#[acb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btaon_fast_update_safe (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> io_dlps.o(.constdata)
</UL>
<P><STRONG><a name="[120]"></a>gpio_dlps_store_item</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, io_dlps.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> io_dlps.o(.constdata)
</UL>
<P><STRONG><a name="[121]"></a>gpio_dlps_restore_output_mode</STRONG> (Thumb, 84 bytes, Stack size 0 bytes, io_dlps.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> io_dlps.o(.constdata)
</UL>
<P><STRONG><a name="[122]"></a>gpio_dlps_restore_input_mode</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, io_dlps.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> io_dlps.o(.constdata)
</UL>
<P><STRONG><a name="[123]"></a>gpio_a_need_restore</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, io_dlps.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> io_dlps.o(.constdata)
</UL>
<P><STRONG><a name="[124]"></a>gpio_b_need_restore</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, io_dlps.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> io_dlps.o(.constdata)
</UL>
<P><STRONG><a name="[125]"></a>keyscan_dlps_enter</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, io_dlps.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> io_dlps.o(.constdata)
</UL>
<P><STRONG><a name="[127]"></a>keyscan_need_restore</STRONG> (Thumb, 80 bytes, Stack size 0 bytes, io_dlps.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> io_dlps.o(.constdata)
</UL>
<P><STRONG><a name="[12a]"></a>qdec_need_restore</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, io_dlps.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> io_dlps.o(.constdata)
</UL>
<P><STRONG><a name="[12d]"></a>spi0_need_restore</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, io_dlps.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> io_dlps.o(.constdata)
</UL>
<P><STRONG><a name="[12e]"></a>spi1_need_restore</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, io_dlps.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> io_dlps.o(.constdata)
</UL>
<P><STRONG><a name="[12f]"></a>spi2_need_restore</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, io_dlps.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> io_dlps.o(.constdata)
</UL>
<P><STRONG><a name="[132]"></a>spi2w_need_restore</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, io_dlps.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> io_dlps.o(.constdata)
</UL>
<P><STRONG><a name="[135]"></a>i2c0_need_restore</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, io_dlps.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> io_dlps.o(.constdata)
</UL>
<P><STRONG><a name="[136]"></a>i2c1_need_restore</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, io_dlps.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> io_dlps.o(.constdata)
</UL>
<P><STRONG><a name="[137]"></a>i2c2_need_restore</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, io_dlps.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> io_dlps.o(.constdata)
</UL>
<P><STRONG><a name="[13a]"></a>tim_need_restore</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, io_dlps.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> io_dlps.o(.constdata)
</UL>
<P><STRONG><a name="[13d]"></a>uart0_need_restore</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, io_dlps.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> io_dlps.o(.constdata)
</UL>
<P><STRONG><a name="[13e]"></a>uart2_need_restore</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, io_dlps.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> io_dlps.o(.constdata)
</UL>
<P><STRONG><a name="[141]"></a>adc_need_restore</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, io_dlps.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> io_dlps.o(.constdata)
</UL>
<P><STRONG><a name="[144]"></a>ir_need_restore</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, io_dlps.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> io_dlps.o(.constdata)
</UL>
<P><STRONG><a name="[145]"></a>gdma_dlps_enter</STRONG> (Thumb, 150 bytes, Stack size 0 bytes, io_dlps.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> io_dlps.o(.constdata)
</UL>
<P><STRONG><a name="[146]"></a>gdma_dlps_exit</STRONG> (Thumb, 218 bytes, Stack size 0 bytes, io_dlps.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> io_dlps.o(.constdata)
</UL>
<P><STRONG><a name="[147]"></a>gdma_need_restore</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, io_dlps.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> io_dlps.o(.constdata)
</UL>
<P><STRONG><a name="[14a]"></a>sdio_need_restore</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, io_dlps.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> io_dlps.o(.constdata)
</UL>
<P><STRONG><a name="[565]"></a>io_dlps_register_exit_cb</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, io_dlps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = io_dlps_register_exit_cb &rArr; io_dlps_callback_in_queue
</UL>
<BR>[Calls]<UL><LI><a href="#[acc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;io_dlps_callback_in_queue
</UL>
<BR>[Called By]<UL><LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dlps_init
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adp_5v_init_plug
<LI><a href="#[f25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_hal_init
</UL>

<P><STRONG><a name="[564]"></a>io_dlps_register_enter_cb</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, io_dlps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = io_dlps_register_enter_cb &rArr; io_dlps_callback_in_queue
</UL>
<BR>[Calls]<UL><LI><a href="#[acc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;io_dlps_callback_in_queue
</UL>
<BR>[Called By]<UL><LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dlps_init
<LI><a href="#[f25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_hal_init
</UL>

<P><STRONG><a name="[acd]"></a>dlps_io_store</STRONG> (Thumb, 150 bytes, Stack size 8 bytes, io_dlps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = dlps_io_store &rArr; io_dlps_store_item
</UL>
<BR>[Calls]<UL><LI><a href="#[ace]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;io_dlps_store_item
</UL>
<BR>[Called By]<UL><LI><a href="#[ad4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dlps_io_enter_cb
</UL>

<P><STRONG><a name="[acf]"></a>dlps_io_restore</STRONG> (Thumb, 166 bytes, Stack size 8 bytes, io_dlps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = dlps_io_restore &rArr; io_dlps_restore_item
</UL>
<BR>[Calls]<UL><LI><a href="#[ad0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;io_dlps_restore_item
<LI><a href="#[ad1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;io_dlps_callback
</UL>
<BR>[Called By]<UL><LI><a href="#[ad6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dlps_io_exit_cb
</UL>

<P><STRONG><a name="[ad2]"></a>dlps_io_restore_check</STRONG> (Thumb, 194 bytes, Stack size 8 bytes, io_dlps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = dlps_io_restore_check &rArr; io_dlps_pre_allocate_check_item
</UL>
<BR>[Calls]<UL><LI><a href="#[ad3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;io_dlps_pre_allocate_check_item
</UL>
<BR>[Address Reference Count : 1]<UL><LI> io_dlps.o(.text)
</UL>
<P><STRONG><a name="[ad4]"></a>dlps_io_enter_cb</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, io_dlps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = dlps_io_enter_cb &rArr; dlps_io_store &rArr; io_dlps_store_item
</UL>
<BR>[Calls]<UL><LI><a href="#[ad5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pad_ClearAllWakeupINT (via Veneer)
<LI><a href="#[54d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;power_mode_get (via Veneer)
<LI><a href="#[acd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dlps_io_store
<LI><a href="#[ad1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;io_dlps_callback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> io_dlps.o(.text)
</UL>
<P><STRONG><a name="[ad6]"></a>dlps_io_exit_cb</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, io_dlps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = dlps_io_exit_cb &rArr; dlps_check_os_timer
</UL>
<BR>[Calls]<UL><LI><a href="#[ad7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dlps_check_os_timer
<LI><a href="#[acf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dlps_io_restore
</UL>
<BR>[Address Reference Count : 1]<UL><LI> io_dlps.o(.text)
</UL>
<P><STRONG><a name="[562]"></a>io_dlps_register</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, io_dlps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = io_dlps_register &rArr; power_check_cb_register
</UL>
<BR>[Calls]<UL><LI><a href="#[563]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;power_check_cb_register
<LI><a href="#[ad8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;power_stage_cb_register
</UL>
<BR>[Called By]<UL><LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dlps_init
</UL>

<P><STRONG><a name="[369]"></a>mfb_init</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, mfb_api.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = mfb_init &rArr; mfb_irq_enable
</UL>
<BR>[Calls]<UL><LI><a href="#[ada]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mfb_irq_enable
<LI><a href="#[ab4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RamVectorTableUpdate
</UL>
<BR>[Called By]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_gpio_mfb_init
</UL>

<P><STRONG><a name="[133e]"></a>GPIOx_DeInit</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, rtl876x_gpio.o(.text), UNUSED)

<P><STRONG><a name="[ac3]"></a>GPIOx_Init</STRONG> (Thumb, 264 bytes, Stack size 8 bytes, rtl876x_gpio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GPIOx_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_set_up_irq
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adp_io_init_isr
</UL>

<P><STRONG><a name="[ac2]"></a>GPIO_StructInit</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, rtl876x_gpio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_set_up_irq
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adp_io_init_isr
</UL>

<P><STRONG><a name="[27d]"></a>GPIOx_INTConfig</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, rtl876x_gpio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_irq_enable
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_irq_disable
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adp_io_init_isr
</UL>

<P><STRONG><a name="[276]"></a>GPIOx_ClearINTPendingBit</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, rtl876x_gpio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;imp_gpio_handler
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adp_io_handler
</UL>

<P><STRONG><a name="[274]"></a>GPIOx_MaskINTConfig</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, rtl876x_gpio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_irq_enable
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_irq_disable
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adp_io_init_isr
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adp_io_handler
</UL>

<P><STRONG><a name="[27c]"></a>GPIO_GetPin</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, rtl876x_gpio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_set_up_irq
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_irq_enable
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_irq_disable
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_irq_change_polarity
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_init_pin
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_get_input_level
<LI><a href="#[ae2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_change_direction
</UL>

<P><STRONG><a name="[272]"></a>GPIO_GetNum</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, rtl876x_gpio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pinmux_Config
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_set_up_irq
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_register_isr_callback
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_irq_enable
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_irq_disable
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_irq_change_polarity
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_init_pin
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_get_input_level
<LI><a href="#[560]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_get_isr_callback
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ext_charger_is_pin_status_det_pin
<LI><a href="#[ae2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_change_direction
</UL>

<P><STRONG><a name="[275]"></a>GPIOx_IntPolaritySet</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, rtl876x_gpio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_irq_change_polarity
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adp_io_handler
</UL>

<P><STRONG><a name="[26f]"></a>Pad_TableConfig</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, rtl876x_pinmux.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Pad_TableConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[6af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btaon_fast_write_safe (via Veneer)
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btaon_fast_read_safe (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_gpio_initial
<LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ext_charger_init
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_adp_init
<LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_adc_io_read
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_init_pin
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dlps_pad_wake_up_polarity_invert
<LI><a href="#[55f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dlps_restore_pad
<LI><a href="#[555]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dlps_exit_callback
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dlps_set_pad_wake_up
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dlps_pad_wake_up_enable
<LI><a href="#[6e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ext_charger_current_speed_set
<LI><a href="#[6e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ext_charger_enable_ctrl_gpio_set
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtk_charger_charge_state_cb
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_adp_stage_change_cb
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_adp_5v_handler (via Veneer)
<LI><a href="#[971]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_usb_adc_io_read
<LI><a href="#[ae2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_change_direction
</UL>

<P><STRONG><a name="[ac6]"></a>System_SetAdpWakeUpFunction</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, rtl876x_pinmux.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = System_SetAdpWakeUpFunction
</UL>
<BR>[Calls]<UL><LI><a href="#[6af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btaon_fast_write_safe (via Veneer)
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btaon_fast_read_safe (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[690]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adp_wake_up_enable
</UL>

<P><STRONG><a name="[2d6]"></a>Pinmux_Config</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, rtl876x_pinmux.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Pinmux_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[adb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pinmux_Config_rom (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_GetNum
</UL>
<BR>[Called By]<UL><LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;board_init
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_init_pin
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adp_io_init_isr
<LI><a href="#[10a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_pad_dmic_set
<LI><a href="#[107b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_mgr_param_init
</UL>

<P><STRONG><a name="[4c6]"></a>System_SetMFBWakeUpFunction</STRONG> (Thumb, 50 bytes, Stack size 24 bytes, rtl876x_pinmux.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = System_SetMFBWakeUpFunction
</UL>
<BR>[Calls]<UL><LI><a href="#[6af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btaon_fast_write_safe (via Veneer)
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btaon_fast_read_safe (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[4c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_bt_and_ble_ready_check
</UL>

<P><STRONG><a name="[add]"></a>SleepLed_GetControlRegister</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, rtl876x_sleep_led.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepLed_Init
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepLed_DeInit
</UL>

<P><STRONG><a name="[adc]"></a>SleepLed_RegisterWrite</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, rtl876x_sleep_led.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepLed_Reset
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepLed_Init
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepLed_DeInit
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepLed_Cmd
</UL>

<P><STRONG><a name="[28d]"></a>SleepLed_Reset</STRONG> (Thumb, 32 bytes, Stack size 4 bytes, rtl876x_sleep_led.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = SleepLed_Reset
</UL>
<BR>[Calls]<UL><LI><a href="#[adc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepLed_RegisterWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_reset_sleep_led
</UL>

<P><STRONG><a name="[28f]"></a>SleepLed_DeInit</STRONG> (Thumb, 54 bytes, Stack size 12 bytes, rtl876x_sleep_led.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = SleepLed_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[adc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepLed_RegisterWrite
<LI><a href="#[add]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepLed_GetControlRegister
</UL>
<BR>[Called By]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_config
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_deinit
</UL>

<P><STRONG><a name="[291]"></a>SleepLed_Init</STRONG> (Thumb, 166 bytes, Stack size 20 bytes, rtl876x_sleep_led.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = SleepLed_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[adc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepLed_RegisterWrite
<LI><a href="#[add]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepLed_GetControlRegister
</UL>
<BR>[Called By]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_config
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_deinit
</UL>

<P><STRONG><a name="[290]"></a>SleepLed_StructInit</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, rtl876x_sleep_led.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SleepLed_StructInit
</UL>
<BR>[Called By]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_config
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_deinit
</UL>

<P><STRONG><a name="[28b]"></a>SleepLed_Cmd</STRONG> (Thumb, 66 bytes, Stack size 0 bytes, rtl876x_sleep_led.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[adc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepLed_RegisterWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_config
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_deinit
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_cmd
</UL>

<P><STRONG><a name="[ae0]"></a>RTC_WriteReg</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, rtl876x_rtc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[54b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_ClearINTStatus
</UL>

<P><STRONG><a name="[ade]"></a>RTC_WriteReg_Safe</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, rtl876x_rtc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = RTC_WriteReg_Safe
</UL>
<BR>[Called By]<UL><LI><a href="#[552]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SystemWakeupConfig
<LI><a href="#[550]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetPrescaler
<LI><a href="#[553]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetComp
<LI><a href="#[54f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_DeInit
<LI><a href="#[551]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_CompINTConfig
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_RunCmd
<LI><a href="#[adf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_CpuNVICEnable
</UL>

<P><STRONG><a name="[54f]"></a>RTC_DeInit</STRONG> (Thumb, 120 bytes, Stack size 12 bytes, rtl876x_rtc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = RTC_DeInit &rArr; RTC_WriteReg_Safe
</UL>
<BR>[Calls]<UL><LI><a href="#[ade]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_WriteReg_Safe
</UL>
<BR>[Called By]<UL><LI><a href="#[54c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dlps_enter_callback
</UL>

<P><STRONG><a name="[550]"></a>RTC_SetPrescaler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, rtl876x_rtc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = RTC_SetPrescaler &rArr; RTC_WriteReg_Safe
</UL>
<BR>[Calls]<UL><LI><a href="#[ade]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_WriteReg_Safe
</UL>
<BR>[Called By]<UL><LI><a href="#[54c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dlps_enter_callback
</UL>

<P><STRONG><a name="[553]"></a>RTC_SetComp</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, rtl876x_rtc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = RTC_SetComp &rArr; RTC_WriteReg_Safe
</UL>
<BR>[Calls]<UL><LI><a href="#[ade]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_WriteReg_Safe
</UL>
<BR>[Called By]<UL><LI><a href="#[54c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dlps_enter_callback
</UL>

<P><STRONG><a name="[adf]"></a>RTC_CpuNVICEnable</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, rtl876x_rtc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = RTC_CpuNVICEnable &rArr; RTC_WriteReg_Safe
</UL>
<BR>[Calls]<UL><LI><a href="#[ade]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_WriteReg_Safe
</UL>
<BR>[Called By]<UL><LI><a href="#[551]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_CompINTConfig
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_RunCmd
</UL>

<P><STRONG><a name="[4d0]"></a>RTC_RunCmd</STRONG> (Thumb, 50 bytes, Stack size 4 bytes, rtl876x_rtc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = RTC_RunCmd &rArr; RTC_WriteReg_Safe
</UL>
<BR>[Calls]<UL><LI><a href="#[ade]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_WriteReg_Safe
<LI><a href="#[adf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_CpuNVICEnable
</UL>
<BR>[Called By]<UL><LI><a href="#[4c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_bt_and_ble_ready_check
<LI><a href="#[54c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dlps_enter_callback
</UL>

<P><STRONG><a name="[551]"></a>RTC_CompINTConfig</STRONG> (Thumb, 46 bytes, Stack size 4 bytes, rtl876x_rtc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = RTC_CompINTConfig &rArr; RTC_WriteReg_Safe
</UL>
<BR>[Calls]<UL><LI><a href="#[ade]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_WriteReg_Safe
<LI><a href="#[adf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_CpuNVICEnable
</UL>
<BR>[Called By]<UL><LI><a href="#[54c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dlps_enter_callback
</UL>

<P><STRONG><a name="[54a]"></a>RTC_GetINTStatus</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, rtl876x_rtc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dlps_system_wakeup_clear_rtc_int
</UL>

<P><STRONG><a name="[552]"></a>RTC_SystemWakeupConfig</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, rtl876x_rtc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = RTC_SystemWakeupConfig &rArr; RTC_WriteReg_Safe
</UL>
<BR>[Calls]<UL><LI><a href="#[ade]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_WriteReg_Safe
</UL>
<BR>[Called By]<UL><LI><a href="#[54c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dlps_enter_callback
</UL>

<P><STRONG><a name="[54b]"></a>RTC_ClearINTStatus</STRONG> (Thumb, 28 bytes, Stack size 4 bytes, rtl876x_rtc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = RTC_ClearINTStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[ae0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_WriteReg
</UL>
<BR>[Called By]<UL><LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dlps_system_wakeup_clear_rtc_int
</UL>

<P><STRONG><a name="[31d]"></a>hal_gpio_init</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, hal_gpio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = hal_gpio_init &rArr; hal_gpio_int_init &rArr; RamVectorTableUpdate &rArr; RamVectorTableUpdate_for_xip_isr
</UL>
<BR>[Calls]<UL><LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_int_init
</UL>
<BR>[Called By]<UL><LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;driver_init
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_init_pin
</UL>

<P><STRONG><a name="[36b]"></a>hal_gpio_init_pin</STRONG> (Thumb, 194 bytes, Stack size 32 bytes, hal_gpio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = hal_gpio_init_pin &rArr; hal_gpio_init &rArr; hal_gpio_int_init &rArr; RamVectorTableUpdate &rArr; RamVectorTableUpdate_for_xip_isr
</UL>
<BR>[Calls]<UL><LI><a href="#[ae1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pad_PullEnableValue_Dir (via Veneer)
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_init
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pinmux_Config
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pad_TableConfig
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_GetNum
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_GetPin
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_gpio
</UL>
<BR>[Called By]<UL><LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_gpio_initial
<LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ext_charger_init
<LI><a href="#[6f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_usb_connector_protect_init
</UL>

<P><STRONG><a name="[ae2]"></a>hal_gpio_change_direction</STRONG> (Thumb, 106 bytes, Stack size 24 bytes, hal_gpio.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pad_TableConfig
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_GetNum
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_GetPin
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_gpio
</UL>

<P><STRONG><a name="[36c]"></a>hal_gpio_set_up_irq</STRONG> (Thumb, 114 bytes, Stack size 48 bytes, hal_gpio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = hal_gpio_set_up_irq &rArr; GPIOx_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_GetNum
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_GetPin
<LI><a href="#[ac3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOx_Init
<LI><a href="#[ac2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_StructInit
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_gpio
</UL>
<BR>[Called By]<UL><LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_gpio_initial
<LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ext_charger_init
</UL>

<P><STRONG><a name="[26a]"></a>hal_gpio_irq_disable</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, hal_gpio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = hal_gpio_irq_disable
</UL>
<BR>[Calls]<UL><LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_GetNum
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_GetPin
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOx_MaskINTConfig
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOx_INTConfig
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_gpio
</UL>
<BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_gpio_intr_cb
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ext_charger_status_det_gpio_intr_handler
</UL>

<P><STRONG><a name="[31f]"></a>hal_gpio_set_debounce_time</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, hal_gpio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;driver_init
</UL>

<P><STRONG><a name="[563]"></a>power_check_cb_register</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, pm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = power_check_cb_register
</UL>
<BR>[Calls]<UL><LI><a href="#[ae3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_pm_register_callback_func (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ext_charger_init
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dlps_init
<LI><a href="#[562]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;io_dlps_register
<LI><a href="#[cfd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_init
<LI><a href="#[e8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_mgr_init
<LI><a href="#[f36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hw_timer_pool_alloc
</UL>

<P><STRONG><a name="[ad8]"></a>power_stage_cb_register</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, pm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = power_stage_cb_register
</UL>
<BR>[Calls]<UL><LI><a href="#[ae3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_pm_register_callback_func (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[562]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;io_dlps_register
<LI><a href="#[f88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_pad_init
</UL>

<P><STRONG><a name="[4bf]"></a>power_mode_set</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, pm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = power_mode_set
</UL>
<BR>[Calls]<UL><LI><a href="#[ae4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_pm_set_power_mode (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mp_hci_test_init
<LI><a href="#[4c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_bt_and_ble_ready_check
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_dm_cback
<LI><a href="#[55e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dlps_power_mode_set
<LI><a href="#[54c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dlps_enter_callback
<LI><a href="#[4ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dlps_power_off
<LI><a href="#[7a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_adv_state_change
<LI><a href="#[740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_finder_reset_conn
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mp_hci_test_dm_cback
<LI><a href="#[6bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_spp_cmd_set_handle
</UL>

<P><STRONG><a name="[561]"></a>bt_power_mode_set</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, pm.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[ae5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btmac_pm_set_power_mode (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dlps_init
</UL>

<P><STRONG><a name="[55c]"></a>power_get_error_code</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, pm.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[ae6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_pm_get_error_code (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dlps_timeout_cb
</UL>

<P><STRONG><a name="[55d]"></a>power_stop_all_non_excluded_timer</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, pm.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[ae7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_pm_stop_all_non_excluded_timer (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dlps_timeout_cb
</UL>

<P><STRONG><a name="[557]"></a>power_get_statistics</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, pm.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[ae8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_pm_get_statistics (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dlps_timeout_cb
</UL>

<P><STRONG><a name="[aec]"></a>get_cpu_clock</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, pm.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pm_cpu_freq_set
<LI><a href="#[af1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_cpu_freq
<LI><a href="#[aea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dvfs_control
</UL>

<P><STRONG><a name="[aeb]"></a>get_dsp1_clock</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, pm.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[aed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_dsp1_freq
<LI><a href="#[aea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dvfs_control
</UL>

<P><STRONG><a name="[2f2]"></a>pm_cpu_freq_set</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, pm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = pm_cpu_freq_set &rArr; set_cpu_freq &rArr; dvfs_control &rArr; dvfs_set_mode_func
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[aec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_cpu_clock
<LI><a href="#[aef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;freqMHz_mapping_CLK_FREQ_TYPE
<LI><a href="#[af1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_cpu_freq
<LI><a href="#[af0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_cpu_clock_valid
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_cpu_clk_improve
<LI><a href="#[5c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pm_cpu_freq_req
<LI><a href="#[5c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pm_cpu_freq_clear
</UL>

<P><STRONG><a name="[af2]"></a>pm_dsp1_freq_set</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, pm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = pm_dsp1_freq_set &rArr; set_dsp1_freq &rArr; dvfs_control &rArr; dvfs_set_mode_func
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[aef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;freqMHz_mapping_CLK_FREQ_TYPE
<LI><a href="#[aed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_dsp1_freq
</UL>
<BR>[Called By]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_ipc_event_handler
</UL>

<P><STRONG><a name="[2e1]"></a>pm_cpu_freq_get</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, pm.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_cpu_clk_improve
<LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_task
<LI><a href="#[5c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pm_cpu_freq_clear
<LI><a href="#[af3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pm_cpu_default_freq_get
</UL>

<P><STRONG><a name="[af3]"></a>pm_cpu_default_freq_get</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, pm.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pm_cpu_freq_get
<LI><a href="#[af4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_FREQ_TYPE_mapping_freqMHz
</UL>
<BR>[Called By]<UL><LI><a href="#[af5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pm_cpu_max_scenario_freq_get
</UL>

<P><STRONG><a name="[2f5]"></a>pm_cpu_freq_init</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, pm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = pm_cpu_freq_init &rArr; calloc
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calloc
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[5c5]"></a>pm_cpu_freq_req</STRONG> (Thumb, 220 bytes, Stack size 24 bytes, pm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = pm_cpu_freq_req &rArr; pm_cpu_freq_set &rArr; set_cpu_freq &rArr; dvfs_control &rArr; dvfs_set_mode_func
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pm_cpu_freq_set
<LI><a href="#[af5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pm_cpu_max_scenario_freq_get
</UL>
<BR>[Called By]<UL><LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_update_cpu_freq
</UL>

<P><STRONG><a name="[5c8]"></a>pm_cpu_freq_clear</STRONG> (Thumb, 84 bytes, Stack size 24 bytes, pm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = pm_cpu_freq_clear &rArr; pm_cpu_freq_set &rArr; set_cpu_freq &rArr; dvfs_control &rArr; dvfs_set_mode_func
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pm_cpu_freq_set
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pm_cpu_freq_get
<LI><a href="#[af5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pm_cpu_max_scenario_freq_get
</UL>
<BR>[Called By]<UL><LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_update_cpu_freq
</UL>

<P><STRONG><a name="[2f3]"></a>sys_hall_get_reset_status</STRONG> (Thumb, 102 bytes, Stack size 24 bytes, system_status_api.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = sys_hall_get_reset_status
</UL>
<BR>[Calls]<UL><LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btaon_fast_read_safe (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[692]"></a>sys_hall_charger_auto_enable</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, system_status_api.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = sys_hall_charger_auto_enable &rArr; charger_utils_charger_auto_enable
</UL>
<BR>[Calls]<UL><LI><a href="#[af6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;charger_utils_charger_auto_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[691]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_adp_smart_box_charger_control
</UL>

<P><STRONG><a name="[6ac]"></a>sys_hall_read_package_id</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, system_status_api.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_cmd_general_cmd_handle
</UL>

<P><STRONG><a name="[6ab]"></a>sys_hall_read_chip_id</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, system_status_api.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_cmd_general_cmd_handle
</UL>

<P><STRONG><a name="[af7]"></a>sys_hall_set_rglx_auxadc</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, system_status_api.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btaon_fast_write_safe (via Veneer)
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btaon_fast_read_safe (via Veneer)
</UL>

<P><STRONG><a name="[69d]"></a>sys_hall_set_hci_download_mode</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, system_status_api.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[acb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btaon_fast_update_safe (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_cmd_timeout_cb
</UL>

<P><STRONG><a name="[af8]"></a>pre_ext_image_entry</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, system_status_api.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = pre_ext_image_entry
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_hall_upperstack_ini
</UL>

<P><STRONG><a name="[285]"></a>sys_hall_upperstack_ini</STRONG> (Thumb, 108 bytes, Stack size 24 bytes, system_status_api.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = sys_hall_upperstack_ini &rArr; storage_partition_get &rArr; strncmp
</UL>
<BR>[Calls]<UL><LI><a href="#[af9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bte_init
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[93c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;storage_partition_get
<LI><a href="#[af8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pre_ext_image_entry
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_init
</UL>

<P><STRONG><a name="[133f]"></a>sys_hall_get_secure_state</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, system_status_api.o(.text), UNUSED)

<P><STRONG><a name="[95a]"></a>sys_hall_get_ic_euid</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, system_status_api.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = sys_hall_get_ic_euid
</UL>
<BR>[Calls]<UL><LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[6bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_spp_cmd_set_handle
</UL>

<P><STRONG><a name="[afa]"></a>app_timer_cb</STRONG> (Thumb, 98 bytes, Stack size 24 bytes, app_timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = app_timer_cb &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[ac5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vAssertHandler (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_timer.o(.text)
</UL>
<P><STRONG><a name="[2e8]"></a>app_timer_handle_msg</STRONG> (Thumb, 130 bytes, Stack size 24 bytes, app_timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = app_timer_handle_msg
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_task
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mp_hci_test_task
</UL>

<P><STRONG><a name="[2f4]"></a>app_init_timer</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, app_timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = app_init_timer &rArr; calloc
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calloc
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[368]"></a>app_timer_reg_cb</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, app_timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = app_timer_reg_cb
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mp_hci_test_init
<LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_gpio_initial
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_swift_pair_init
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sass_policy_init
<LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_init
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_init
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_led_init
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_key_init
<LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_init
<LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_vendor_cmd_init
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_ble_ota_init
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_behaviors_init
<LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_adc_init
<LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ext_charger_init
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dlps_init
<LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_init
<LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_cmd_init
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_charger_init
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_init
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_gap_init
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_avrcp_init
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_auto_power_off_init
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_init
<LI><a href="#[39d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_discharger_init
<LI><a href="#[4c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_adv_init
<LI><a href="#[4c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_finder_init
<LI><a href="#[4ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dult_device_init
<LI><a href="#[6f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_usb_connector_protect_init
<LI><a href="#[73d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_timer_init
<LI><a href="#[68a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_msg_rfc_init
<LI><a href="#[86b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_init
<LI><a href="#[869]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_init
<LI><a href="#[866]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_mgr_init
</UL>

<P><STRONG><a name="[afd]"></a>app_timer_check_excluded</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, app_timer.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_stop_timer
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_start_timer
<LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_register_pm_excluded
</UL>

<P><STRONG><a name="[35a]"></a>app_start_timer</STRONG> (Thumb, 150 bytes, Stack size 32 bytes, app_timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = app_start_timer &rArr; remove_timeout_msg_from_list
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[aa8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_timer_index_get
<LI><a href="#[afc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_timer_handle_get
<LI><a href="#[afd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_check_excluded
<LI><a href="#[afb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;remove_timeout_msg_from_list
</UL>
<BR>[Called By]<UL><LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_vendor_cmd_init
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dlps_init
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_transfer_pop_data_queue
<LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_adc_ntc_check_timer_start
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_charger_handle_soc
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_charger_smooth_bat_discharge
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_auto_power_off_enable
<LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_key_check_press
<LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_key_start_factory_reset_timer
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_key_timeout_cb
<LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_led_timeout_cb
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_led_set_mode
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_gpio_key0_debounce_start
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_avrcp_bt_cback
<LI><a href="#[45b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_legacy_update_call_status
<LI><a href="#[460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_set_no_service_timer
<LI><a href="#[47e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_set_mic_mute
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_audio_cback
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_bt_cback
<LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_ring_alert
<LI><a href="#[406]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_req_remote_device_name_timer_start
<LI><a href="#[3df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_notify_device_info_timer_start
<LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_update_cpu_freq
<LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_gap_handle_authen_state_evt
<LI><a href="#[60a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_state_afe_linkback_event_handle
<LI><a href="#[602]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_event_handle
<LI><a href="#[601]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_dedicated_connect_event_handle
<LI><a href="#[5f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_bt_event_pre_handle
<LI><a href="#[5ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_shutdown_step_handle
<LI><a href="#[5e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_roleswitch_handle
<LI><a href="#[5d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_enter_state
<LI><a href="#[5d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_linkback_run
<LI><a href="#[5c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_src_conn_ind_add
<LI><a href="#[5b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_voice_ongoing_preemptive
<LI><a href="#[5af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_roleswap_disconnect_inactive_link
<LI><a href="#[5a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_judge_active_a2dp_idx_and_qos
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_timeout_cb
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_bt_cback
<LI><a href="#[566]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dlps_start_power_down_wdg_timer
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dlps_timeout_cb
<LI><a href="#[531]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dut_test_start_auto_power_off_timer
<LI><a href="#[534]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dult_id_read_state_enable
<LI><a href="#[4f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_reboot_check_timer_start
<LI><a href="#[4ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_recon_a2dp
<LI><a href="#[4ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dlps_power_off
<LI><a href="#[4e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_b2s_conn_start_timer
<LI><a href="#[4da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_enter_dut_mode
<LI><a href="#[4ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_reboot
<LI><a href="#[78a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_finder_upt_enable_start_update_rpa_timer
<LI><a href="#[788]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_finder_start_update_random_window_timer
<LI><a href="#[786]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_finder_start_update_adv_ei_timer
<LI><a href="#[720]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_adv_start
<LI><a href="#[714]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_timer_start_update_rpa
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mp_hci_test_dm_cback
<LI><a href="#[61d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_handle_vol_change
<LI><a href="#[5da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_swift_pair_start_adv_change_timer
<LI><a href="#[6bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sass_policy_switch_back
<LI><a href="#[6a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_cmd_general_cmd_handle
<LI><a href="#[804]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_adv_linkback_check
<LI><a href="#[7fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dult_ring_duration_timer_start
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_msg_rfc_audio_cback
<LI><a href="#[7ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_msg_ring_play
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_sync_cb
<LI><a href="#[8bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_scan_start
<LI><a href="#[94c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_devinfo_set
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vendor_harman_cmd_timer_callback
<LI><a href="#[945]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_find_my_buds_ring_play
<LI><a href="#[91d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_ble_ota_package_check_timer_start
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_ble_ota_timeout_cb
<LI><a href="#[917]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_ota_reset
<LI><a href="#[90d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_heartbeat_check_timer_start
<LI><a href="#[90e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_power_off_option_timer_start
<LI><a href="#[90a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_legacy_bt_cback
<LI><a href="#[8fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_terminate_hfp_call
<LI><a href="#[970]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_usb_adc_ntc_check_timer_start
<LI><a href="#[96e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_usb_hiccup_check_timer_start
</UL>

<P><STRONG><a name="[34e]"></a>app_stop_timer</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, app_timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = app_stop_timer &rArr; remove_timeout_msg_from_list
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[afc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_timer_handle_get
<LI><a href="#[afd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_check_excluded
<LI><a href="#[afb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;remove_timeout_msg_from_list
</UL>
<BR>[Called By]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_gap_timeout_cb
<LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_gap_handle_new_conn_state_evt
<LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_transfer_queue_reset
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_transfer_pop_data_queue
<LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_adc_ntc_check_timer_start
<LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_charger_clear_smooth_bat_handle
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_charger_dm_cback
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_charger_timeout_cb
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_handle_action
<LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dlps_stop_power_down_wdg_timer
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_auto_power_off_enable
<LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_auto_power_off_disable
<LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_key_stop_timer
<LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_key_check_press
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_key_timeout_cb
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_gpio_timeout_cb
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_led_timer_stop
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_led_disable_non_repeat_mode
<LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_led_timeout_cb
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_led_set_mode
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_timerout_cb
<LI><a href="#[485]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_avrcp_stop_abs_vol_check_timer
<LI><a href="#[483]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_stop_delay_role_switch
<LI><a href="#[47f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_stop_ring_alert_timer
<LI><a href="#[471]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_timeout_cb
<LI><a href="#[460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_set_no_service_timer
<LI><a href="#[47e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_set_mic_mute
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_audio_cback
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_bt_cback
<LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_swift_pair_handle_power_off
<LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sass_handle_le_dm
<LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_notify_device_info_timer_stop
<LI><a href="#[3c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_heartbeat_check_timer_stop
<LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_gap_handle_authen_state_evt
<LI><a href="#[605]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_dedicated_enter_pairing_mode_event_handle
<LI><a href="#[606]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_dedicated_disconnect_event_handle
<LI><a href="#[60a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_state_afe_linkback_event_handle
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_timer_cback
<LI><a href="#[5f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_bt_event_pre_handle
<LI><a href="#[5ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_stop_all_active_action
<LI><a href="#[5e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_linkback_sched
<LI><a href="#[5d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_enter_state
<LI><a href="#[5d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_linkback_run
<LI><a href="#[5ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_stable_sched
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_b2s_connected_del_node
<LI><a href="#[5c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_src_conn_ind_add
<LI><a href="#[5bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_stop_silence_check_timer
<LI><a href="#[5b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_voice_ongoing_preemptive
<LI><a href="#[5b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_stop_acl_disconn_timer
<LI><a href="#[5a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_judge_active_a2dp_idx_and_qos
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_timeout_cb
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_bt_cback
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dlps_timeout_cb
<LI><a href="#[509]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_find_my_buds_ring_stop
<LI><a href="#[50a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_adc_ntc_check_timer_stop
<LI><a href="#[4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_reboot_check
<LI><a href="#[4be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dlps_enable_auto_poweroff_stop_wdg_timer
<LI><a href="#[78b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_finder_upt_enable_stop_rpa_timer
<LI><a href="#[789]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_finder_stop_update_random_window_timer
<LI><a href="#[787]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_finder_stop_update_adv_ei_timer
<LI><a href="#[775]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_msg_ring_stop
<LI><a href="#[713]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_timer_stop_update_rpa
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dut_timeout_cb
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mp_hci_test_dm_cback
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_policy_timeout_cb
<LI><a href="#[5d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_swift_pair_stop_adv_change_timer
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_auto_power_off_dm_cback
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_auto_power_off_timeout_cb
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_cmd_timeout_cb
<LI><a href="#[804]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_adv_linkback_check
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_adv_timeout_cb
<LI><a href="#[7ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dult_ring_duration_timer_stop
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sass_policy_timeout_cb
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_msg_timeout_cb
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_timeout_cb
<LI><a href="#[8b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_scan_stop
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_timeout_cb
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vendor_harman_cmd_timer_callback
<LI><a href="#[91b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_ble_ota_package_check_timer_stop
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_ble_ota_timeout_cb
<LI><a href="#[90f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_power_off_option_timer_stop
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_timeout_cb
<LI><a href="#[96f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_usb_adc_ntc_check_timer_stop
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_usb_adc_timeout_cb
</UL>

<P><STRONG><a name="[4a4]"></a>app_timer_register_pm_excluded</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, app_timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = app_timer_register_pm_excluded &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[aad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_pm_register_excluded_handle (via Veneer)
<LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[afc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_timer_handle_get
<LI><a href="#[afd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_check_excluded
</UL>
<BR>[Called By]<UL><LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_vendor_cmd_init
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dlps_init
<LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_adc_ntc_check_timer_start
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_handle_action
<LI><a href="#[406]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_req_remote_device_name_timer_start
<LI><a href="#[4ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dlps_power_off
<LI><a href="#[4ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_reboot
<LI><a href="#[96e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_usb_hiccup_check_timer_start
</UL>

<P><STRONG><a name="[808]"></a>app_timer_state_get</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, app_timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = app_timer_state_get &rArr; os_timer_state_get
</UL>
<BR>[Calls]<UL><LI><a href="#[aae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_timer_state_get
<LI><a href="#[afc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_timer_handle_get
</UL>
<BR>[Called By]<UL><LI><a href="#[5dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_adv_update
<LI><a href="#[810]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_adv_update_interval_hfp
<LI><a href="#[807]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_adv_is_discoverable
</UL>

<P><STRONG><a name="[aba]"></a>memcpy_s</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, stdlib_wrapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = memcpy_s
</UL>
<BR>[Calls]<UL><LI><a href="#[ac5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vAssertHandler (via Veneer)
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_image_feature_info
<LI><a href="#[b1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_mapping_table_size_update
<LI><a href="#[b0f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_write
</UL>

<P><STRONG><a name="[3af]"></a>malloc</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, stdlib_wrapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;storage_partition_init
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_cache_init
<LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_report_spp_iap_event
<LI><a href="#[3ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_report_le_event
<LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_report_uart_event
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_bt_cback
<LI><a href="#[428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_parser_process
<LI><a href="#[5bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_cback_register
<LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_register_pm_excluded
<LI><a href="#[4ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bond_clear_non_rws_keys
<LI><a href="#[785]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_uecc_compute_public_key
<LI><a href="#[778]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_msg_loop_check_data_complete
<LI><a href="#[662]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_eq_cmd_operate
<LI><a href="#[657]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_cmd_handle
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_policy_cback
<LI><a href="#[6bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_spp_cmd_set_handle
<LI><a href="#[6a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_cmd_general_cmd_handle
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_spp_bt_cback
<LI><a href="#[829]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ccp_client_write_call_cp
<LI><a href="#[824]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_ccp_parse_payload
<LI><a href="#[823]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_ccp_set_active_call_uri
<LI><a href="#[7d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_msg_le_loop_check_data_complete
<LI><a href="#[7d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_msg_handle_data_transfer
<LI><a href="#[7cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_rfc_report_dynamic_buffer_size
<LI><a href="#[954]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_send_license_to_dsp
<LI><a href="#[953]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_send_bd_addr_to_dsp
<LI><a href="#[952]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_send_device_name_to_dsp
<LI><a href="#[94c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_devinfo_set
<LI><a href="#[942]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_devinfo_feature_report
<LI><a href="#[93a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_vendor_cmd_process
<LI><a href="#[919]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_report_le_event
<LI><a href="#[932]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_ble_ota_handle
<LI><a href="#[935]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_check_sha256
<LI><a href="#[933]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_ble_ota_start_para_set
<LI><a href="#[930]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_ble_ota_payload_handle
<LI><a href="#[92a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_ota_copy_vp
<LI><a href="#[918]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_ota_notification_report
<LI><a href="#[912]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_devinfo_notify
<LI><a href="#[ab5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_monitor_save_site
<LI><a href="#[afa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_cb
<LI><a href="#[b20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mapping_table_init
<LI><a href="#[b1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_page_list_init
<LI><a href="#[cac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sha256_hkdf
</UL>

<P><STRONG><a name="[2aa]"></a>calloc</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, stdlib_wrapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = calloc
</UL>
<BR>[Called By]<UL><LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pm_cpu_freq_init
<LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_gpio_initial
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_init
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_init_timer
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_write
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_spec_register
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_read
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_init_module
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_register_app_cb
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_tbl_storage_get_header
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_tbl_read_data
<LI><a href="#[53f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_reg_le_link_disc_cb
<LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dsp_cfg_init
<LI><a href="#[43f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_rand_addr_cb_reg
<LI><a href="#[408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_le_set_local_irk
<LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_mgr_init
<LI><a href="#[57c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkback_todo_queue_init
<LI><a href="#[52c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_eq_index_set
<LI><a href="#[4db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_mgr_msg_cback_register
<LI><a href="#[4c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_finder_init
<LI><a href="#[6cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_whitelist_modify
<LI><a href="#[6c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eq_utils_dsp_param_get
<LI><a href="#[76c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_send_personalized_name
<LI><a href="#[75d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_gfps_generate_mac
<LI><a href="#[733]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_init
<LI><a href="#[739]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_ecc_manager_malloc
<LI><a href="#[732]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_personalized_name_init
<LI><a href="#[730]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_account_key_init
<LI><a href="#[667]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eq_utils_init
<LI><a href="#[661]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_eq_enable_effect
<LI><a href="#[634]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_eq_create
<LI><a href="#[657]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_cmd_handle
<LI><a href="#[6c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dsp_cfg_extensible_param_load
<LI><a href="#[6bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dsp_cfg_eq_param_load
<LI><a href="#[6be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dsp_cfg_gain_table_load
<LI><a href="#[839]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pacs_pac_add
<LI><a href="#[83a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pacs_init
<LI><a href="#[81c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_cback_register
<LI><a href="#[801]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_svc_send_data
<LI><a href="#[802]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_svc_add
<LI><a href="#[7fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_hmac_sha256
<LI><a href="#[7c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_gfps_send_nak
<LI><a href="#[7d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_gfps_send_ack
<LI><a href="#[7da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_gfps_rfc_init
<LI><a href="#[86e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmas_init
<LI><a href="#[868]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_init
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_mgr_probe_cback
<LI><a href="#[841]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_scan_start
<LI><a href="#[b4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_conn_update_init
<LI><a href="#[b21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_pool_init
<LI><a href="#[b20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mapping_table_init
<LI><a href="#[b1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_mapping_table_size_update
<LI><a href="#[b1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mapping_table_malloc
<LI><a href="#[bda]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_legacy_key_init
<LI><a href="#[bd9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_le_key_init
<LI><a href="#[bd5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_set_cccd_pending
<LI><a href="#[bcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_set_cccd_data
<LI><a href="#[bca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_handle_gatt_server_store_ind
<LI><a href="#[bb5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_svc_send_data_in_queue
<LI><a href="#[b9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_storage_srv_list_gen
<LI><a href="#[b8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_storage_load
<LI><a href="#[b98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_storage_add_secondary_service
<LI><a href="#[b9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_storage_add_primary_service
<LI><a href="#[b9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_storage_add_include
<LI><a href="#[ba0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_storage_add_char
<LI><a href="#[b8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_enable_char_cccd
<LI><a href="#[b6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_handle_conn_state_evt
<LI><a href="#[b6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_scan_init
<LI><a href="#[b56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_init
<LI><a href="#[c4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_sync_create_int
<LI><a href="#[c3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_brs_gen_char_data
<LI><a href="#[c51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_cp_prase_data
<LI><a href="#[c4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_handle_update_bis_info
<LI><a href="#[c3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_handle_base_data
<LI><a href="#[c38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_init
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bap_dm_cback
<LI><a href="#[c31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_dm_cback_register
<LI><a href="#[c28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ase_sm_link_init
<LI><a href="#[c23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ase_gen_char_data
<LI><a href="#[c2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ase_check_cp_data
<LI><a href="#[c12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ase_action_update_metadata
<LI><a href="#[c11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ase_action_enable
<LI><a href="#[c0f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ase_action_cfg_codec
<LI><a href="#[cb1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_sass_malloc_key_for_filter
<LI><a href="#[cb4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_gen_account_key_filter
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_attr_write_cb
<LI><a href="#[cc6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_handle_char_additional_data
<LI><a href="#[ca4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_gfps_send_data
<LI><a href="#[c9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tbs_client_handle_callback
<LI><a href="#[c99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcs_client_handle_cback
<LI><a href="#[c8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;base_data_parse_data
<LI><a href="#[c8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_sync_handle_pa_info
<LI><a href="#[c8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_sync_cmp_pa_mapping
<LI><a href="#[c7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_link_alloc_by_conn_id
<LI><a href="#[c77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vcs_add_service
<LI><a href="#[c76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vcs_init
<LI><a href="#[cea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_send_rsp
<LI><a href="#[ce6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_verify_eik_authkey
<LI><a href="#[ce5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_rsp_generate_authkey
<LI><a href="#[ce4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_verify_authkey
<LI><a href="#[1013]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cas_add_service
<LI><a href="#[1009]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pacs_create_table
<LI><a href="#[1001]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_ascs_table
</UL>

<P><STRONG><a name="[2ac]"></a>free</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stdlib_wrapper.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;storage_partition_init
<LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_handle_msg
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_write
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_tbl_storage_set_gatt_data
<LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_tbl_storage_get_gatt_data
<LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_tbl_storage_set_cccd
<LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_tbl_storage_get_cccd
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_tbl_storage_add_dev
<LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_tbl_storage_get_dev
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_tbl_storage_get_header
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_tbl_read_data
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_wait_ota_report
<LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_report_spp_iap_event
<LI><a href="#[3ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_report_le_event
<LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_report_uart_event
<LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_transfer_queue_reset
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_transfer_pop_data_queue
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_bt_cback
<LI><a href="#[427]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_svc_handle_profile_data_cmpl
<LI><a href="#[428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_parser_process
<LI><a href="#[3c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_free_le_link
<LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_whitelist_handle_pending_operation
<LI><a href="#[53c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_free_br_link
<LI><a href="#[52c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_eq_index_set
<LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bond_clear_sec_diff_link_record
<LI><a href="#[4ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bond_clear_non_rws_keys
<LI><a href="#[6c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eq_utils_dsp_param_get
<LI><a href="#[785]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_uecc_compute_public_key
<LI><a href="#[77a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_handle_pending_char_kbp
<LI><a href="#[778]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_msg_loop_check_data_complete
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_rfc_cback
<LI><a href="#[76c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_send_personalized_name
<LI><a href="#[75d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_gfps_generate_mac
<LI><a href="#[661]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_eq_enable_effect
<LI><a href="#[634]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_eq_create
<LI><a href="#[662]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_eq_cmd_operate
<LI><a href="#[657]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_cmd_handle
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_policy_cback
<LI><a href="#[5f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bond_pop_sec_diff_link_record
<LI><a href="#[6c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dsp_cfg_extensible_param_load
<LI><a href="#[6bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dsp_cfg_eq_param_load
<LI><a href="#[6be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dsp_cfg_gain_table_load
<LI><a href="#[6a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_cmd_general_cmd_handle
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_spp_bt_cback
<LI><a href="#[829]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ccp_client_write_call_cp
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_ccp_ble_audio_cback
<LI><a href="#[824]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_ccp_parse_payload
<LI><a href="#[823]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_ccp_set_active_call_uri
<LI><a href="#[7fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_hmac_sha256
<LI><a href="#[7db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_psm_msg_coc_conn_callback
<LI><a href="#[7c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_gfps_send_nak
<LI><a href="#[7d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_gfps_send_ack
<LI><a href="#[7d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_msg_le_loop_check_data_complete
<LI><a href="#[7d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_msg_handle_data_transfer
<LI><a href="#[7cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_rfc_report_dynamic_buffer_size
<LI><a href="#[897]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_free_link
<LI><a href="#[86e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmas_init
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_mgr_probe_cback
<LI><a href="#[843]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_scan_stop
<LI><a href="#[841]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_scan_start
<LI><a href="#[954]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_send_license_to_dsp
<LI><a href="#[953]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_send_bd_addr_to_dsp
<LI><a href="#[952]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_send_device_name_to_dsp
<LI><a href="#[94c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_devinfo_set
<LI><a href="#[942]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_devinfo_feature_report
<LI><a href="#[93a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_vendor_cmd_process
<LI><a href="#[919]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_report_le_event
<LI><a href="#[935]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_check_sha256
<LI><a href="#[933]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_ble_ota_start_para_set
<LI><a href="#[930]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_ble_ota_payload_handle
<LI><a href="#[92a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_ota_copy_vp
<LI><a href="#[91a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;harman_ble_ota_state_reset
<LI><a href="#[918]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_ota_notification_report
<LI><a href="#[afb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;remove_timeout_msg_from_list
<LI><a href="#[b42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_adv_data_del
<LI><a href="#[b21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_pool_init
<LI><a href="#[b20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mapping_table_init
<LI><a href="#[b1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_mapping_table_size_update
<LI><a href="#[b19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_cache_disable
<LI><a href="#[bd5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_set_cccd_pending
<LI><a href="#[bcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_set_cccd_data
<LI><a href="#[bca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_handle_gatt_server_store_ind
<LI><a href="#[bb5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_svc_send_data_in_queue
<LI><a href="#[b8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_storage_srv_list_release
<LI><a href="#[b9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_storage_srv_list_gen
<LI><a href="#[b8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_storage_load
<LI><a href="#[b9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_storage_dis_list_release
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_write_result_ext_cb
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_read_result_ext_cb
<LI><a href="#[b87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_check_req
<LI><a href="#[b86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_handle_pending_req
<LI><a href="#[b7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_execute_req
<LI><a href="#[b7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_req_list_free
<LI><a href="#[b6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_svc_handle_conn_state_evt
<LI><a href="#[b6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_handle_conn_state_evt
<LI><a href="#[c62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pacs_add_service
<LI><a href="#[c46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_sync_release_int
<LI><a href="#[c42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_brs_delete
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_attr_write_cb
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_attr_read_cb
<LI><a href="#[c4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_handle_cp_data
<LI><a href="#[c4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_handle_update_bis_info
<LI><a href="#[c39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_send_brs_notify
<LI><a href="#[c38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_init
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bap_dm_cback
<LI><a href="#[c1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ase_sm_send_notify
<LI><a href="#[c29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ase_sm_link_free
<LI><a href="#[c2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ase_check_cp_data
<LI><a href="#[c12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ase_action_update_metadata
<LI><a href="#[c11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ase_action_enable
<LI><a href="#[c0f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ase_action_cfg_codec
<LI><a href="#[c1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ascs_change_state
<LI><a href="#[c32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ascs_add_service
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ascs_attr_write_cb
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ascs_attr_read_cb
<LI><a href="#[c22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ascs_handle_pending_cccd
<LI><a href="#[cb5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_sass_free_key_for_filter
<LI><a href="#[cb4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_gen_account_key_filter
<LI><a href="#[cc6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_handle_char_additional_data
<LI><a href="#[cac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sha256_hkdf
<LI><a href="#[ca4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_gfps_send_data
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tbs_client_dm_cback
<LI><a href="#[c9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tbs_client_handle_callback
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcs_client_dm_cback
<LI><a href="#[c99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcs_client_handle_cback
<LI><a href="#[c83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;base_data_free
<LI><a href="#[c8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_sync_cmp_pa_mapping
<LI><a href="#[c8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_sync_pa_info_list_free
<LI><a href="#[c7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_link_free
<LI><a href="#[c76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vcs_init
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_big_check_info_proc
<LI><a href="#[cea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_send_rsp
<LI><a href="#[ce6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_verify_eik_authkey
<LI><a href="#[ce5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_rsp_generate_authkey
<LI><a href="#[ce4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_verify_authkey
<LI><a href="#[cd1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_ecc_manager_free
</UL>

<P><STRONG><a name="[33e]"></a>wdt_reset</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, wdg.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = wdt_reset
</UL>
<BR>[Called By]<UL><LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_cfg_init
<LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_cfg_load
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_timerout_cb
<LI><a href="#[4f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_reboot
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dut_audio_cback
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;single_tone_exit_timeout_cb
<LI><a href="#[6a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_cmd_general_cmd_handle
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_cmd_timeout_cb
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_ble_ota_timeout_cb
<LI><a href="#[aa7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_cfg_load
<LI><a href="#[f22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_mailbox_process
</UL>

<P><STRONG><a name="[526]"></a>hal_debug_memory_dump</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, hal_debug.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = hal_debug_memory_dump
</UL>
<BR>[Called By]<UL><LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_handle_action
</UL>

<P><STRONG><a name="[af6]"></a>charger_utils_charger_auto_enable</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, charger_utils.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = charger_utils_charger_auto_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[692]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_hall_charger_auto_enable
</UL>

<P><STRONG><a name="[6e3]"></a>charger_utils_thermistor_enable</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, charger_utils.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ext_charger_cfg_load
</UL>

<P><STRONG><a name="[6dd]"></a>charger_utils_get_auto_enable</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, charger_utils.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ext_charger_cfg_load
</UL>

<P><STRONG><a name="[6de]"></a>charger_utils_get_high_temp_warn_voltage</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, charger_utils.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ext_charger_cfg_load
</UL>

<P><STRONG><a name="[6df]"></a>charger_utils_get_high_temp_error_voltage</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, charger_utils.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ext_charger_cfg_load
</UL>

<P><STRONG><a name="[6e0]"></a>charger_utils_get_low_temp_warn_voltage</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, charger_utils.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ext_charger_cfg_load
</UL>

<P><STRONG><a name="[6e1]"></a>charger_utils_get_low_temp_error_voltage</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, charger_utils.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ext_charger_cfg_load
</UL>

<P><STRONG><a name="[6e5]"></a>charger_utils_get_recharge_voltage</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, charger_utils.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ext_charger_cfg_load
</UL>

<P><STRONG><a name="[6e2]"></a>charger_utils_get_bat_temp_hysteresis_voltage</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, charger_utils.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ext_charger_cfg_load
</UL>

<P><STRONG><a name="[6e4]"></a>charger_utils_get_thermistor_pin</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, charger_utils.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ext_charger_cfg_load
</UL>

<P><STRONG><a name="[ad7]"></a>dlps_check_os_timer</STRONG> (Thumb, 132 bytes, Stack size 40 bytes, dlps_util.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = dlps_check_os_timer
</UL>
<BR>[Calls]<UL><LI><a href="#[b00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcTimerGetName (via Veneer)
<LI><a href="#[aff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetTickCount (via Veneer)
<LI><a href="#[afe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_pm_get_wakeup_reason (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[ad6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dlps_io_exit_cb
</UL>

<P><STRONG><a name="[2ec]"></a>power_down_check_wake_up_reason</STRONG> (Thumb, 116 bytes, Stack size 24 bytes, dlps_util.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = power_down_check_wake_up_reason
</UL>
<BR>[Calls]<UL><LI><a href="#[abf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_pm_get_hw_wakeup_reason (via Veneer)
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btaon_fast_read_safe (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_wakeup_reason_check
</UL>

<P><STRONG><a name="[558]"></a>dlps_utils_get_btmac_lpm_statics</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, dlps_util.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[b01]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btmac_pm_get_statistics (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dlps_timeout_cb
</UL>

<P><STRONG><a name="[559]"></a>dlps_util_get_btmac_error_code</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, dlps_util.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[b02]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btmac_pm_get_error_code (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dlps_timeout_cb
</UL>

<P><STRONG><a name="[55a]"></a>dlps_utils_get_platform_refuse_reason</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, dlps_util.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[b03]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_pm_get_refuse_reason (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dlps_timeout_cb
</UL>

<P><STRONG><a name="[55b]"></a>dlps_util_get_platform_error_code</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, dlps_util.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[ae6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_pm_get_error_code (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dlps_timeout_cb
</UL>

<P><STRONG><a name="[33d]"></a>fmc_flash_nor_read</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, fmc_api.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = fmc_flash_nor_read
</UL>
<BR>[Called By]<UL><LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_cfg_init
<LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_vp_data_header_get
<LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dsp_cfg_init
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_cfg_load_led_table
<LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_cfg_load
<LI><a href="#[666]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dsp_cfg_load_param_r_data
<LI><a href="#[6c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dsp_cfg_extensible_param_load
<LI><a href="#[6bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dsp_cfg_eq_param_load
<LI><a href="#[95b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_license_product_info_get_from_flash
<LI><a href="#[951]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_license_gfps_info_get_from_flash
<LI><a href="#[92a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_ota_copy_vp
<LI><a href="#[928]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_ota_clear_notready_flag
<LI><a href="#[922]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_ota_write_to_flash
<LI><a href="#[aa7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_cfg_load
<LI><a href="#[b27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_rom_upgrade_v1_to_v2
<LI><a href="#[b20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mapping_table_init
<LI><a href="#[b1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_find_free_item
<LI><a href="#[b1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_page_is_valid
<LI><a href="#[b14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_read
<LI><a href="#[b0d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_garbage_collect
<LI><a href="#[b0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_page_erase
<LI><a href="#[b0b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_page_format
<LI><a href="#[e3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notification_buffer_prequeue
<LI><a href="#[e43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notification_ringtone_start
<LI><a href="#[e3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notification_start_vp
<LI><a href="#[f26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_param_init
<LI><a href="#[f17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_download_algo_param
<LI><a href="#[f14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_algo_param_load
<LI><a href="#[1072]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_eq_load
<LI><a href="#[1060]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_eq_set
</UL>

<P><STRONG><a name="[926]"></a>fmc_flash_nor_write</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, fmc_api.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = fmc_flash_nor_write
</UL>
<BR>[Called By]<UL><LI><a href="#[928]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_ota_clear_notready_flag
<LI><a href="#[922]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_ota_write_to_flash
<LI><a href="#[b27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_rom_upgrade_v1_to_v2
<LI><a href="#[b0f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_write
<LI><a href="#[b0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_page_erase
<LI><a href="#[b0b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_page_format
</UL>

<P><STRONG><a name="[925]"></a>fmc_flash_nor_erase</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, fmc_api.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = fmc_flash_nor_erase
</UL>
<BR>[Called By]<UL><LI><a href="#[92d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_ble_ota_end_check
<LI><a href="#[922]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_ota_write_to_flash
<LI><a href="#[b27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_rom_upgrade_v1_to_v2
<LI><a href="#[b0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_page_erase
</UL>

<P><STRONG><a name="[104c]"></a>fmc_flash_nor_auto_dma_read</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, fmc_api.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = fmc_flash_nor_auto_dma_read
</UL>
<BR>[Called By]<UL><LI><a href="#[104b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notification_buffer_stream_push
</UL>

<P><STRONG><a name="[678]"></a>flash_partition_addr_get</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, fmc_api.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = flash_partition_addr_get
</UL>
<BR>[Calls]<UL><LI><a href="#[b05]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_nor_get_bank_addr (via Veneer)
<LI><a href="#[b04]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_PARTITION_NAME_Mapping_LAYOUT_NAME
</UL>
<BR>[Called By]<UL><LI><a href="#[677]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ota_get_active_bank
<LI><a href="#[92a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_ota_copy_vp
<LI><a href="#[928]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_ota_clear_notready_flag
<LI><a href="#[922]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_ota_write_to_flash
<LI><a href="#[91e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_ota_get_active_bank
</UL>

<P><STRONG><a name="[6aa]"></a>flash_cur_bank_img_header_addr_get</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, fmc_api.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[934]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_header_addr_by_img_id (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_cur_bank_img_payload_addr_get
<LI><a href="#[6a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_cmd_get_fw_version
<LI><a href="#[6a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_cmd_general_cmd_handle
</UL>

<P><STRONG><a name="[33c]"></a>flash_cur_bank_img_payload_addr_get</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, fmc_api.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = flash_cur_bank_img_payload_addr_get
</UL>
<BR>[Calls]<UL><LI><a href="#[b06]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_img_header_format_size (via Veneer)
<LI><a href="#[6aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_cur_bank_img_header_addr_get
</UL>
<BR>[Called By]<UL><LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_cfg_init
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pad_Config (via Veneer)
<LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dsp_cfg_init
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_cfg_load_led_table
<LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_cfg_load
<LI><a href="#[666]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dsp_cfg_load_param_r_data
<LI><a href="#[6c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dsp_cfg_extensible_param_load
<LI><a href="#[6bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dsp_cfg_eq_param_load
<LI><a href="#[aa7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_cfg_load
<LI><a href="#[e43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notification_ringtone_start
<LI><a href="#[f26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_param_init
<LI><a href="#[f17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_download_algo_param
<LI><a href="#[f14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_algo_param_load
<LI><a href="#[1072]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_eq_load
<LI><a href="#[1060]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_eq_set
</UL>

<P><STRONG><a name="[924]"></a>fmc_flash_nor_set_bp_lv</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, fmc_api.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = fmc_flash_nor_set_bp_lv &rArr; flash_nor_set_bp_lv_locked &rArr; flash_nor_lock_set_bp_tb_operation &rArr; flash_nor_suspend_all_busy_nodes
</UL>
<BR>[Calls]<UL><LI><a href="#[b07]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_nor_get_idx_by_addr (via Veneer)
<LI><a href="#[b08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_nor_set_bp_lv_locked
</UL>
<BR>[Called By]<UL><LI><a href="#[92a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_ota_copy_vp
<LI><a href="#[928]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_ota_clear_notready_flag
<LI><a href="#[922]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_ota_write_to_flash
</UL>

<P><STRONG><a name="[923]"></a>fmc_flash_nor_get_bp_lv</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, fmc_api.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = fmc_flash_nor_get_bp_lv
</UL>
<BR>[Calls]<UL><LI><a href="#[b07]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_nor_get_idx_by_addr (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[92a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_ota_copy_vp
<LI><a href="#[928]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_ota_clear_notready_flag
<LI><a href="#[922]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_ota_write_to_flash
</UL>

<P><STRONG><a name="[b1f]"></a>search_ftl_module_by_name</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, ftl.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_init_module
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_load_from_module
<LI><a href="#[b23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_save_to_module_imp
</UL>

<P><STRONG><a name="[b18]"></a>search_ftl_module_by_id</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, ftl.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[b20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mapping_table_init
<LI><a href="#[b17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_cache_to_flash
</UL>

<P><STRONG><a name="[b16]"></a>search_ftl_page_by_address</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, ftl.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[b0f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_write
</UL>

<P><STRONG><a name="[283]"></a>ftl_cache_init</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, ftl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ftl_cache_init &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_init
</UL>

<P><STRONG><a name="[b0e]"></a>write_mapping_table</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, ftl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = write_mapping_table
</UL>
<BR>[Called By]<UL><LI><a href="#[b20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mapping_table_init
<LI><a href="#[b17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_cache_to_flash
<LI><a href="#[b0f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_write
<LI><a href="#[b14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_read
<LI><a href="#[b10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_cache_save
<LI><a href="#[b0d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_garbage_collect
</UL>

<P><STRONG><a name="[b0a]"></a>read_mapping_table_by_index</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, ftl.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[b0d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_garbage_collect
<LI><a href="#[b09]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_mapping_table
</UL>

<P><STRONG><a name="[b09]"></a>read_mapping_table</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, ftl.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[b0a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_mapping_table_by_index
</UL>
<BR>[Called By]<UL><LI><a href="#[b20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mapping_table_init
<LI><a href="#[b0f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_write
<LI><a href="#[b14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_read
<LI><a href="#[b13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_cache_load
<LI><a href="#[b10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_cache_save
</UL>

<P><STRONG><a name="[b0b]"></a>ftl_page_format</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, ftl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ftl_page_format &rArr; fmc_flash_nor_read
</UL>
<BR>[Calls]<UL><LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_flash_nor_read
<LI><a href="#[926]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_flash_nor_write
</UL>
<BR>[Called By]<UL><LI><a href="#[b1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_page_list_init
<LI><a href="#[b0f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_write
</UL>

<P><STRONG><a name="[b0c]"></a>ftl_page_erase</STRONG> (Thumb, 128 bytes, Stack size 40 bytes, ftl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = ftl_page_erase &rArr; fmc_flash_nor_erase
</UL>
<BR>[Calls]<UL><LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp (via Veneer)
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_flash_nor_read
<LI><a href="#[925]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_flash_nor_erase
<LI><a href="#[926]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_flash_nor_write
</UL>
<BR>[Called By]<UL><LI><a href="#[b1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_page_list_init
<LI><a href="#[b0d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_garbage_collect
</UL>

<P><STRONG><a name="[b0d]"></a>ftl_garbage_collect</STRONG> (Thumb, 232 bytes, Stack size 152 bytes, ftl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208 + In Cycle
<LI>Call Chain = ftl_garbage_collect &rArr;  ftl_write (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_flash_nor_read
<LI><a href="#[b0f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_write
<LI><a href="#[b0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_page_erase
<LI><a href="#[b0a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_mapping_table_by_index
<LI><a href="#[b0e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_mapping_table
</UL>
<BR>[Called By]<UL><LI><a href="#[b22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_gc_in_flash_task
<LI><a href="#[b0f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_write
</UL>

<P><STRONG><a name="[b10]"></a>ftl_cache_save</STRONG> (Thumb, 184 bytes, Stack size 24 bytes, ftl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ftl_cache_save &rArr; write_mapping_table
</UL>
<BR>[Calls]<UL><LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr (via Veneer)
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[b09]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_mapping_table
<LI><a href="#[b0e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_mapping_table
</UL>
<BR>[Called By]<UL><LI><a href="#[b0f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_write
</UL>

<P><STRONG><a name="[b11]"></a>ftl_data_is_vaild</STRONG> (Thumb, 100 bytes, Stack size 32 bytes, ftl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = ftl_data_is_vaild &rArr; ftl_crc8
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[b12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_crc8
</UL>
<BR>[Called By]<UL><LI><a href="#[b14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_read
</UL>

<P><STRONG><a name="[b13]"></a>ftl_cache_load</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, ftl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ftl_cache_load
</UL>
<BR>[Calls]<UL><LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[b09]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_mapping_table
</UL>
<BR>[Called By]<UL><LI><a href="#[b14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_read
</UL>

<P><STRONG><a name="[b14]"></a>ftl_read</STRONG> (Thumb, 196 bytes, Stack size 160 bytes, ftl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = ftl_read &rArr; ftl_data_is_vaild &rArr; ftl_crc8
</UL>
<BR>[Calls]<UL><LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_flash_nor_read
<LI><a href="#[b13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_cache_load
<LI><a href="#[b11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_data_is_vaild
<LI><a href="#[b09]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_mapping_table
<LI><a href="#[b0e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_mapping_table
</UL>
<BR>[Called By]<UL><LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_load_from_module
<LI><a href="#[b15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_write_skip
</UL>

<P><STRONG><a name="[b15]"></a>ftl_write_skip</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, ftl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = ftl_write_skip &rArr; ftl_read &rArr; ftl_data_is_vaild &rArr; ftl_crc8
</UL>
<BR>[Calls]<UL><LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[b14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_read
</UL>
<BR>[Called By]<UL><LI><a href="#[b0f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_write
</UL>

<P><STRONG><a name="[b0f]"></a>ftl_write</STRONG> (Thumb, 478 bytes, Stack size 184 bytes, ftl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 408<LI>Call Chain = ftl_write &rArr; ftl_write_skip &rArr; ftl_read &rArr; ftl_data_is_vaild &rArr; ftl_crc8
</UL>
<BR>[Calls]<UL><LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[926]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_flash_nor_write
<LI><a href="#[aba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcpy_s
<LI><a href="#[b15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_write_skip
<LI><a href="#[b10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_cache_save
<LI><a href="#[b0d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_garbage_collect
<LI><a href="#[b0b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_page_format
<LI><a href="#[b09]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_mapping_table
<LI><a href="#[b0e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_mapping_table
<LI><a href="#[b16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;search_ftl_page_by_address
<LI><a href="#[b12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_crc8
</UL>
<BR>[Called By]<UL><LI><a href="#[b23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_save_to_module_imp
<LI><a href="#[b17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_cache_to_flash
<LI><a href="#[b0d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_garbage_collect
</UL>

<P><STRONG><a name="[b17]"></a>ftl_cache_to_flash</STRONG> (Thumb, 132 bytes, Stack size 24 bytes, ftl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 432<LI>Call Chain = ftl_cache_to_flash &rArr; ftl_write &rArr; ftl_write_skip &rArr; ftl_read &rArr; ftl_data_is_vaild &rArr; ftl_crc8
</UL>
<BR>[Calls]<UL><LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[b0f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_write
<LI><a href="#[b0e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_mapping_table
<LI><a href="#[b18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;search_ftl_module_by_id
</UL>
<BR>[Called By]<UL><LI><a href="#[b22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_gc_in_flash_task
<LI><a href="#[b19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_cache_disable
</UL>

<P><STRONG><a name="[b19]"></a>ftl_cache_disable</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, ftl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 448<LI>Call Chain = ftl_cache_disable &rArr; ftl_cache_to_flash &rArr; ftl_write &rArr; ftl_write_skip &rArr; ftl_read &rArr; ftl_data_is_vaild &rArr; ftl_crc8
</UL>
<BR>[Calls]<UL><LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[b17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_cache_to_flash
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ftl.o(.text)
</UL>
<P><STRONG><a name="[b1a]"></a>ftl_page_is_valid</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, ftl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ftl_page_is_valid &rArr; fmc_flash_nor_read
</UL>
<BR>[Calls]<UL><LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_flash_nor_read
</UL>
<BR>[Called By]<UL><LI><a href="#[b1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_page_list_init
</UL>

<P><STRONG><a name="[b1b]"></a>ftl_page_list_init</STRONG> (Thumb, 368 bytes, Stack size 40 bytes, ftl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = ftl_page_list_init &rArr; ftl_page_erase &rArr; fmc_flash_nor_erase
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[b1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_page_is_valid
<LI><a href="#[b0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_page_erase
<LI><a href="#[b0b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_page_format
</UL>
<BR>[Called By]<UL><LI><a href="#[b21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_pool_init
</UL>

<P><STRONG><a name="[b1c]"></a>ftl_find_free_item</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, ftl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ftl_find_free_item &rArr; fmc_flash_nor_read
</UL>
<BR>[Calls]<UL><LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_flash_nor_read
</UL>
<BR>[Called By]<UL><LI><a href="#[b27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_rom_upgrade_v1_to_v2
</UL>

<P><STRONG><a name="[b1d]"></a>mapping_table_malloc</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, ftl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = mapping_table_malloc &rArr; calloc
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calloc
</UL>
<BR>[Called By]<UL><LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_init_module
<LI><a href="#[b21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_pool_init
<LI><a href="#[b20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mapping_table_init
</UL>

<P><STRONG><a name="[b1e]"></a>ftl_mapping_table_size_update</STRONG> (Thumb, 92 bytes, Stack size 24 bytes, ftl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ftl_mapping_table_size_update &rArr; calloc
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calloc
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[aba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcpy_s
</UL>
<BR>[Called By]<UL><LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_init_module
<LI><a href="#[b20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mapping_table_init
</UL>

<P><STRONG><a name="[2ab]"></a>ftl_load_from_module</STRONG> (Thumb, 112 bytes, Stack size 24 bytes, ftl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = ftl_load_from_module &rArr; ftl_read &rArr; ftl_data_is_vaild &rArr; ftl_crc8
</UL>
<BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[b14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_read
<LI><a href="#[b1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;search_ftl_module_by_name
</UL>
<BR>[Called By]<UL><LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_ext_ftl_partition_read
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_tbl_storage_get_header
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_tbl_storage_remove
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_tbl_read_data
<LI><a href="#[b26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_load_from_storage_imp
<LI><a href="#[b20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mapping_table_init
</UL>

<P><STRONG><a name="[b20]"></a>mapping_table_init</STRONG> (Thumb, 602 bytes, Stack size 48 bytes, ftl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = mapping_table_init &rArr; ftl_load_from_module &rArr; ftl_read &rArr; ftl_data_is_vaild &rArr; ftl_crc8
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_load_from_module
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calloc
<LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_flash_nor_read
<LI><a href="#[b1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_mapping_table_size_update
<LI><a href="#[b1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mapping_table_malloc
<LI><a href="#[b09]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_mapping_table
<LI><a href="#[b0e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_mapping_table
<LI><a href="#[b18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;search_ftl_module_by_id
<LI><a href="#[b12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_crc8
</UL>
<BR>[Called By]<UL><LI><a href="#[b21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_pool_init
</UL>

<P><STRONG><a name="[b21]"></a>ftl_pool_init</STRONG> (Thumb, 192 bytes, Stack size 24 bytes, ftl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = ftl_pool_init &rArr; mapping_table_init &rArr; ftl_load_from_module &rArr; ftl_read &rArr; ftl_data_is_vaild &rArr; ftl_crc8
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calloc
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[b20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mapping_table_init
<LI><a href="#[b1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mapping_table_malloc
<LI><a href="#[b1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_page_list_init
</UL>
<BR>[Called By]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_init
</UL>

<P><STRONG><a name="[b22]"></a>ftl_gc_in_flash_task</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, ftl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 448<LI>Call Chain = ftl_gc_in_flash_task &rArr; ftl_cache_to_flash &rArr; ftl_write &rArr; ftl_write_skip &rArr; ftl_read &rArr; ftl_data_is_vaild &rArr; ftl_crc8
</UL>
<BR>[Calls]<UL><LI><a href="#[b17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_cache_to_flash
<LI><a href="#[b0d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_garbage_collect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ftl.o(.text)
</UL>
<P><STRONG><a name="[b23]"></a>ftl_save_to_module_imp</STRONG> (Thumb, 230 bytes, Stack size 40 bytes, ftl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 448<LI>Call Chain = ftl_save_to_module_imp &rArr; ftl_write &rArr; ftl_write_skip &rArr; ftl_read &rArr; ftl_data_is_vaild &rArr; ftl_crc8
</UL>
<BR>[Calls]<UL><LI><a href="#[b24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetSchedulerState (via Veneer)
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[b0f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_write
<LI><a href="#[b1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;search_ftl_module_by_name
</UL>
<BR>[Called By]<UL><LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_init_module
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_save_to_module
</UL>

<P><STRONG><a name="[2a8]"></a>ftl_save_to_module</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, ftl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 472<LI>Call Chain = ftl_save_to_module &rArr; ftl_save_to_module_imp &rArr; ftl_write &rArr; ftl_write_skip &rArr; ftl_read &rArr; ftl_data_is_vaild &rArr; ftl_crc8
</UL>
<BR>[Calls]<UL><LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[b23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_save_to_module_imp
</UL>
<BR>[Called By]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_ext_ftl_partition_write
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_tbl_storage_save_header
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_tbl_write_data
<LI><a href="#[b25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_save_to_storage_imp
</UL>

<P><STRONG><a name="[b25]"></a>ftl_save_to_storage_imp</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, ftl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 472<LI>Call Chain = ftl_save_to_storage_imp &rArr; ftl_save_to_module &rArr; ftl_save_to_module_imp &rArr; ftl_write &rArr; ftl_write_skip &rArr; ftl_read &rArr; ftl_data_is_vaild &rArr; ftl_crc8
</UL>
<BR>[Calls]<UL><LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_save_to_module
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ftl.o(.text)
</UL>
<P><STRONG><a name="[b26]"></a>ftl_load_from_storage_imp</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, ftl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = ftl_load_from_storage_imp &rArr; ftl_load_from_module &rArr; ftl_read &rArr; ftl_data_is_vaild &rArr; ftl_crc8
</UL>
<BR>[Calls]<UL><LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_load_from_module
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ftl.o(.text)
</UL>
<P><STRONG><a name="[b28]"></a>ftl_global_init</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, ftl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ftl_global_init
</UL>
<BR>[Called By]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_init
</UL>

<P><STRONG><a name="[282]"></a>ftl_set_rom_mudule_size</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, ftl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ftl_set_rom_mudule_size
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_init
</UL>

<P><STRONG><a name="[b27]"></a>ftl_rom_upgrade_v1_to_v2</STRONG> (Thumb, 188 bytes, Stack size 40 bytes, ftl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = ftl_rom_upgrade_v1_to_v2 &rArr; ftl_find_free_item &rArr; fmc_flash_nor_read
</UL>
<BR>[Calls]<UL><LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_flash_nor_read
<LI><a href="#[925]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_flash_nor_erase
<LI><a href="#[926]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_flash_nor_write
<LI><a href="#[b1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_find_free_item
</UL>
<BR>[Called By]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_init
</UL>

<P><STRONG><a name="[104]"></a>ftl_init</STRONG> (Thumb, 102 bytes, Stack size 16 bytes, ftl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = ftl_init &rArr; ftl_pool_init &rArr; mapping_table_init &rArr; ftl_load_from_module &rArr; ftl_read &rArr; ftl_data_is_vaild &rArr; ftl_crc8
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[b27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_rom_upgrade_v1_to_v2
<LI><a href="#[b28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_global_init
<LI><a href="#[b21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_pool_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> system_rtl87x3.o(.constdata)
</UL>
<P><STRONG><a name="[2c7]"></a>ftl_init_module</STRONG> (Thumb, 240 bytes, Stack size 40 bytes, ftl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 488<LI>Call Chain = ftl_init_module &rArr; ftl_save_to_module_imp &rArr; ftl_write &rArr; ftl_write_skip &rArr; ftl_read &rArr; ftl_data_is_vaild &rArr; ftl_crc8
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calloc
<LI><a href="#[b23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_save_to_module_imp
<LI><a href="#[b1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_mapping_table_size_update
<LI><a href="#[b1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mapping_table_malloc
<LI><a href="#[b1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;search_ftl_module_by_name
</UL>
<BR>[Called By]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_ext_ftl_partition_init
</UL>

<P><STRONG><a name="[b29]"></a>partition_init</STRONG> (Thumb, 78 bytes, Stack size 32 bytes, storage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = partition_init
</UL>
<BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;storage_partition_init
</UL>

<P><STRONG><a name="[284]"></a>storage_partition_init</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, storage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = storage_partition_init &rArr; partition_init
</UL>
<BR>[Calls]<UL><LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[b29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;partition_init
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_init
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_ext_ftl_init
</UL>

<P><STRONG><a name="[93c]"></a>storage_partition_get</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, storage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = storage_partition_get &rArr; strncmp
</UL>
<BR>[Calls]<UL><LI><a href="#[4dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncmp
</UL>
<BR>[Called By]<UL><LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_hall_upperstack_ini
<LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_vp_data_header_get
<LI><a href="#[e3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notification_start_vp
</UL>

<P><STRONG><a name="[bf7]"></a>bt_bond_register_hal</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, bt_bond.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[bda]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_legacy_key_init
</UL>

<P><STRONG><a name="[67c]"></a>bt_bond_num_get</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, bt_bond.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[b2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_br_get_bond_num
</UL>
<BR>[Called By]<UL><LI><a href="#[593]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bond_b2s_num_get
<LI><a href="#[517]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bond_b2s_addr_get
<LI><a href="#[4ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bond_clear_non_rws_keys
<LI><a href="#[67b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_valid_b2s_bond_bum
</UL>

<P><STRONG><a name="[67d]"></a>bt_bond_addr_get</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, bt_bond.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[b2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_br_get_addr_by_priority
</UL>
<BR>[Called By]<UL><LI><a href="#[517]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bond_b2s_addr_get
<LI><a href="#[67b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_valid_b2s_bond_bum
</UL>

<P><STRONG><a name="[5bc]"></a>bt_bond_index_get</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, bt_bond.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[b2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_br_get_paired_idx
</UL>
<BR>[Called By]<UL><LI><a href="#[450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bond_get_pair_idx_mapping
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_cback
<LI><a href="#[5d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_linkback_run
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_bt_cback
<LI><a href="#[600]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_flag_add
<LI><a href="#[5f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_update_pair_idx_mapping
<LI><a href="#[88e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_setup_data_path
<LI><a href="#[871]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_bond_action
</UL>

<P><STRONG><a name="[594]"></a>bt_bond_flag_get</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, bt_bond.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[b2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_br_get_bond_flag
</UL>
<BR>[Called By]<UL><LI><a href="#[5f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_bt_event_pre_handle
<LI><a href="#[5b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_reconnect_inactive_link
<LI><a href="#[597]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkback_check_bond_flag
<LI><a href="#[592]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkback_load_bond_list
<LI><a href="#[4e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_dump_link_information
<LI><a href="#[5ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_flag_remove
<LI><a href="#[600]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_flag_add
<LI><a href="#[5d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_ever_link_information
<LI><a href="#[686]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bond_get_b2s_link_record
<LI><a href="#[67b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_valid_b2s_bond_bum
<LI><a href="#[871]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_bond_action
</UL>

<P><STRONG><a name="[5fa]"></a>bt_bond_flag_set</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, bt_bond.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[b2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_br_set_bond_flag
</UL>
<BR>[Called By]<UL><LI><a href="#[5f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_bt_event_pre_handle
<LI><a href="#[5ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_flag_remove
<LI><a href="#[600]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_flag_add
</UL>

<P><STRONG><a name="[600]"></a>bt_bond_flag_add</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, bt_bond.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = bt_bond_flag_add
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[5bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_index_get
<LI><a href="#[594]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_flag_get
<LI><a href="#[5fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_flag_set
</UL>
<BR>[Called By]<UL><LI><a href="#[5f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_bt_event_pre_handle
<LI><a href="#[871]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_bond_action
</UL>

<P><STRONG><a name="[5ff]"></a>bt_bond_flag_remove</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, bt_bond.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = bt_bond_flag_remove
</UL>
<BR>[Calls]<UL><LI><a href="#[594]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_flag_get
<LI><a href="#[5fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_flag_set
</UL>
<BR>[Called By]<UL><LI><a href="#[5f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_bt_event_pre_handle
<LI><a href="#[871]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_bond_action
</UL>

<P><STRONG><a name="[5f6]"></a>bt_bond_key_get</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, bt_bond.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[b2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_br_get_bond
</UL>
<BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_cback
<LI><a href="#[5f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_bt_event_pre_handle
<LI><a href="#[686]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bond_get_b2s_link_record
</UL>

<P><STRONG><a name="[684]"></a>bt_bond_key_set</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, bt_bond.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[b30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_br_save_bond
</UL>
<BR>[Called By]<UL><LI><a href="#[5f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bond_key_set
</UL>

<P><STRONG><a name="[685]"></a>bt_bond_priority_set</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, bt_bond.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[b31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_br_adjust_dev_priority
</UL>
<BR>[Called By]<UL><LI><a href="#[46b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bond_set_priority
</UL>

<P><STRONG><a name="[5fb]"></a>bt_bond_delete</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, bt_bond.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[b32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_br_delete_bond
</UL>
<BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_cback
<LI><a href="#[5f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_bt_event_pre_handle
<LI><a href="#[4ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bond_clear_non_rws_keys
<LI><a href="#[871]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_bond_action
</UL>

<P><STRONG><a name="[4ad]"></a>bt_bond_clear</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, bt_bond.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[b33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_br_clear_all_keys
</UL>
<BR>[Called By]<UL><LI><a href="#[4ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_factory_reset
</UL>

<P><STRONG><a name="[b34]"></a>uecc_curve_select</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, platform_uecc.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[b35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uECC_secp256r1
<LI><a href="#[b36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uECC_secp160r1
</UL>
<BR>[Called By]<UL><LI><a href="#[785]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_uecc_compute_public_key
</UL>

<P><STRONG><a name="[b37]"></a>uecc_key_parameter_init</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, platform_uecc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = uecc_key_parameter_init
</UL>
<BR>[Calls]<UL><LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[785]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_uecc_compute_public_key
</UL>

<P><STRONG><a name="[785]"></a>platform_uecc_compute_public_key</STRONG> (Thumb, 322 bytes, Stack size 152 bytes, platform_uecc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 804<LI>Call Chain = platform_uecc_compute_public_key &rArr; uECC_compute_public_key &rArr; EccPoint_compute_public_key &rArr; EccPoint_mult &rArr; XYcZ_addC &rArr; uECC_vli_modSquare_fast &rArr; uECC_vli_modMult_fast &rArr; uECC_vli_mult &rArr; muladd
</UL>
<BR>[Calls]<UL><LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[b38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uECC_vli_isZero
<LI><a href="#[b3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uECC_compute_public_key
<LI><a href="#[b39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bignum_mod
<LI><a href="#[b37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uecc_key_parameter_init
<LI><a href="#[b34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uecc_curve_select
<LI><a href="#[b3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switch_arr
</UL>
<BR>[Called By]<UL><LI><a href="#[783]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_finder_generate_adv_ei_and_hash
</UL>

<P><STRONG><a name="[b3c]"></a>adv_data_timer_callback</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, ble_adv_data.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = adv_data_timer_callback &rArr; ble_ext_adv_mgr_set_scan_response_data &rArr; ble_ext_adv_mgr_start_set_adv_param &rArr; ble_ext_adv_mgr_send_msg &rArr; ble_ext_adv_mgr_find_by_handle
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[437]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_set_scan_response_data
<LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_set_adv_data
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_adv_data.o(.text)
</UL>
<P><STRONG><a name="[b40]"></a>adv_data_timer_start</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, ble_adv_data.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[b41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_adv_data_check_state
<LI><a href="#[b3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_adv_data_check_timer
</UL>

<P><STRONG><a name="[b3f]"></a>adv_data_timer_stop</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, ble_adv_data.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[b41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_adv_data_check_state
<LI><a href="#[b3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_adv_data_check_timer
</UL>

<P><STRONG><a name="[b3d]"></a>adv_data_timer_create</STRONG> (Thumb, 96 bytes, Stack size 32 bytes, ble_adv_data.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = adv_data_timer_create &rArr; ble_ext_adv_mgr_get_adv_interval &rArr; ble_ext_adv_mgr_find_by_handle
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[80e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_get_adv_interval
</UL>
<BR>[Called By]<UL><LI><a href="#[b43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_adv_data_init
</UL>

<P><STRONG><a name="[b3e]"></a>ble_adv_data_check_timer</STRONG> (Thumb, 102 bytes, Stack size 16 bytes, ble_adv_data.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = ble_adv_data_check_timer &rArr; ble_ext_adv_mgr_enable &rArr; ble_ext_adv_mgr_start_set_adv_param &rArr; ble_ext_adv_mgr_send_msg &rArr; ble_ext_adv_mgr_find_by_handle
</UL>
<BR>[Calls]<UL><LI><a href="#[437]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_set_scan_response_data
<LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_set_adv_data
<LI><a href="#[435]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_enable
<LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_disable
<LI><a href="#[b3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adv_data_timer_stop
<LI><a href="#[b40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adv_data_timer_start
</UL>
<BR>[Called By]<UL><LI><a href="#[b42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_adv_data_del
</UL>

<P><STRONG><a name="[b41]"></a>ble_adv_data_check_state</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, ble_adv_data.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = ble_adv_data_check_state &rArr; ble_ext_adv_mgr_enable &rArr; ble_ext_adv_mgr_start_set_adv_param &rArr; ble_ext_adv_mgr_send_msg &rArr; ble_ext_adv_mgr_find_by_handle
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[435]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_enable
<LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_disable
<LI><a href="#[b3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adv_data_timer_stop
<LI><a href="#[b40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adv_data_timer_start
</UL>
<BR>[Called By]<UL><LI><a href="#[40d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_adv_data_enable
<LI><a href="#[411]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_adv_data_disable
<LI><a href="#[b44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_adv_data_handle_conn_state
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_adv_data_callback
</UL>

<P><STRONG><a name="[b42]"></a>ble_adv_data_del</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, ble_adv_data.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = ble_adv_data_del &rArr; ble_adv_data_check_timer &rArr; ble_ext_adv_mgr_enable &rArr; ble_ext_adv_mgr_start_set_adv_param &rArr; ble_ext_adv_mgr_send_msg &rArr; ble_ext_adv_mgr_find_by_handle
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[b3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_adv_data_check_timer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_adv_data.o(.text)
</UL>
<P><STRONG><a name="[40d]"></a>ble_adv_data_enable</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, ble_adv_data.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = ble_adv_data_enable &rArr; ble_adv_data_check_state &rArr; ble_ext_adv_mgr_enable &rArr; ble_ext_adv_mgr_start_set_adv_param &rArr; ble_ext_adv_mgr_send_msg &rArr; ble_ext_adv_mgr_find_by_handle
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[b41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_adv_data_check_state
</UL>
<BR>[Called By]<UL><LI><a href="#[40b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_device_handle_power_on
</UL>

<P><STRONG><a name="[411]"></a>ble_adv_data_disable</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, ble_adv_data.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = ble_adv_data_disable &rArr; ble_adv_data_check_state &rArr; ble_ext_adv_mgr_enable &rArr; ble_ext_adv_mgr_start_set_adv_param &rArr; ble_ext_adv_mgr_send_msg &rArr; ble_ext_adv_mgr_find_by_handle
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[b41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_adv_data_check_state
</UL>
<BR>[Called By]<UL><LI><a href="#[410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_device_handle_power_off
</UL>

<P><STRONG><a name="[b43]"></a>ble_adv_data_init</STRONG> (Thumb, 106 bytes, Stack size 64 bytes, ble_adv_data.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = ble_adv_data_init &rArr; ble_ext_adv_mgr_init_adv_params &rArr; ble_ext_adv_mgr_init_adv_params_all &rArr; ble_ext_adv_mgr_allocate_adv_handle
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[43e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_register_callback
<LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_init_adv_params
<LI><a href="#[b3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adv_data_timer_create
</UL>
<BR>[Called By]<UL><LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_mgr_init
</UL>

<P><STRONG><a name="[b44]"></a>ble_adv_data_handle_conn_state</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, ble_adv_data.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = ble_adv_data_handle_conn_state &rArr; ble_adv_data_check_state &rArr; ble_ext_adv_mgr_enable &rArr; ble_ext_adv_mgr_start_set_adv_param &rArr; ble_ext_adv_mgr_send_msg &rArr; ble_ext_adv_mgr_find_by_handle
</UL>
<BR>[Calls]<UL><LI><a href="#[b41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_adv_data_check_state
</UL>
<BR>[Called By]<UL><LI><a href="#[3eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_mgr_handle_gap_msg
</UL>

<P><STRONG><a name="[b46]"></a>ble_compare_conn_update_param</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, ble_conn.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[b45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_check_conn_update_param
</UL>

<P><STRONG><a name="[b45]"></a>ble_check_conn_update_param</STRONG> (Thumb, 88 bytes, Stack size 32 bytes, ble_conn.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ble_check_conn_update_param
</UL>
<BR>[Calls]<UL><LI><a href="#[b47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_update_conn_param
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[b46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_compare_conn_update_param
</UL>
<BR>[Called By]<UL><LI><a href="#[3d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_set_prefer_conn_param
<LI><a href="#[b48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_handle_conn_update_info
</UL>

<P><STRONG><a name="[b48]"></a>ble_handle_conn_update_info</STRONG> (Thumb, 246 bytes, Stack size 56 bytes, ble_conn.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = ble_handle_conn_update_info &rArr; ble_check_conn_update_param
</UL>
<BR>[Calls]<UL><LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_get_conn_param
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[b45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_check_conn_update_param
</UL>
<BR>[Called By]<UL><LI><a href="#[3eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_mgr_handle_gap_msg
</UL>

<P><STRONG><a name="[b49]"></a>ble_handle_conn_state_evt</STRONG> (Thumb, 126 bytes, Stack size 32 bytes, ble_conn.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ble_handle_conn_state_evt
</UL>
<BR>[Calls]<UL><LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_get_conn_param
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[3eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_mgr_handle_gap_msg
</UL>

<P><STRONG><a name="[3d5]"></a>ble_set_prefer_conn_param</STRONG> (Thumb, 122 bytes, Stack size 48 bytes, ble_conn.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = ble_set_prefer_conn_param &rArr; ble_check_conn_update_param
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[b45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_check_conn_update_param
</UL>
<BR>[Called By]<UL><LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_gap_handle_new_conn_state_evt
<LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_gap_handle_authen_state_evt
<LI><a href="#[746]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_set_ble_conn_param
<LI><a href="#[90b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_le_connection_update
<LI><a href="#[932]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_ble_ota_handle
</UL>

<P><STRONG><a name="[b4a]"></a>ble_conn_update_init</STRONG> (Thumb, 50 bytes, Stack size 24 bytes, ble_conn.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ble_conn_update_init &rArr; calloc
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calloc
</UL>
<BR>[Called By]<UL><LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_mgr_init
</UL>

<P><STRONG><a name="[b4b]"></a>ble_ext_adv_queue_init</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, ble_ext_adv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ble_ext_adv_queue_init
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[b56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_init
</UL>

<P><STRONG><a name="[b4c]"></a>ble_ext_adv_mgr_find_by_handle</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, ble_ext_adv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ble_ext_adv_mgr_find_by_handle
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[437]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_set_scan_response_data
<LI><a href="#[42f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_set_random
<LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_set_adv_data
<LI><a href="#[43e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_register_callback
<LI><a href="#[432]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_get_adv_state
<LI><a href="#[435]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_enable
<LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_disable
<LI><a href="#[73f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_change_adv_interval
<LI><a href="#[717]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_set_multi_param
<LI><a href="#[716]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_change_own_address_type
<LI><a href="#[80e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_get_adv_interval
<LI><a href="#[811]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_change_adv_phy
<LI><a href="#[b69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_handle_gap_cb
<LI><a href="#[b67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_handle_conn_state
<LI><a href="#[b66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_handle_adv_state
<LI><a href="#[b65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_check_next_step
<LI><a href="#[b62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_set_adv_param
<LI><a href="#[b4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_send_msg
</UL>

<P><STRONG><a name="[b4d]"></a>ble_ext_adv_mgr_send_msg</STRONG> (Thumb, 168 bytes, Stack size 48 bytes, ble_ext_adv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = ble_ext_adv_mgr_send_msg &rArr; ble_ext_adv_mgr_find_by_handle
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[b4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_find_by_handle
</UL>
<BR>[Called By]<UL><LI><a href="#[42f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_set_random
<LI><a href="#[435]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_enable
<LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_disable
<LI><a href="#[717]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_set_multi_param
<LI><a href="#[b62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_set_adv_param
<LI><a href="#[b60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_start_set_adv_param
</UL>

<P><STRONG><a name="[b51]"></a>ble_ext_adv_update_adv_state</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, ble_ext_adv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ble_ext_adv_update_adv_state
</UL>
<BR>[Called By]<UL><LI><a href="#[435]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_enable
<LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_disable
<LI><a href="#[b63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_check_state
<LI><a href="#[b4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_action_start
</UL>

<P><STRONG><a name="[b4e]"></a>ble_ext_adv_action_start</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, ble_ext_adv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = ble_ext_adv_action_start &rArr; ble_ext_adv_update_adv_state
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[b50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_ext_adv_enable
<LI><a href="#[b4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_ext_adv_set_adv_enable_param
<LI><a href="#[b51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_update_adv_state
</UL>
<BR>[Called By]<UL><LI><a href="#[435]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_enable
<LI><a href="#[b65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_check_next_step
</UL>

<P><STRONG><a name="[b52]"></a>ble_ext_adv_action_stop</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, ble_ext_adv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ble_ext_adv_action_stop
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[b53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_ext_adv_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_disable
<LI><a href="#[b65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_check_next_step
</UL>

<P><STRONG><a name="[b54]"></a>ble_ext_adv_action_update</STRONG> (Thumb, 72 bytes, Stack size 32 bytes, ble_ext_adv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ble_ext_adv_action_update
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[b55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_ext_adv_start_setting
</UL>
<BR>[Called By]<UL><LI><a href="#[b65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_check_next_step
<LI><a href="#[b60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_start_set_adv_param
</UL>

<P><STRONG><a name="[b56]"></a>ble_ext_adv_mgr_init</STRONG> (Thumb, 126 bytes, Stack size 32 bytes, ble_ext_adv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = ble_ext_adv_mgr_init &rArr; ble_ext_adv_queue_init
</UL>
<BR>[Calls]<UL><LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_set_gap_param
<LI><a href="#[6ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_bond_cfg_local_key_distribute
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4 (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[b57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_ext_adv_init
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calloc
<LI><a href="#[b4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_queue_init
</UL>
<BR>[Called By]<UL><LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_mgr_init
</UL>

<P><STRONG><a name="[b58]"></a>ble_ext_adv_mgr_allocate_adv_handle</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, ble_ext_adv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ble_ext_adv_mgr_allocate_adv_handle
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[b59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_init_adv_params_all
</UL>

<P><STRONG><a name="[b59]"></a>ble_ext_adv_mgr_init_adv_params_all</STRONG> (Thumb, 366 bytes, Stack size 96 bytes, ble_ext_adv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = ble_ext_adv_mgr_init_adv_params_all &rArr; ble_ext_adv_mgr_allocate_adv_handle
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[b5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_ext_adv_set_scan_response_data
<LI><a href="#[b5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_ext_adv_set_random
<LI><a href="#[b5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_ext_adv_set_adv_data
<LI><a href="#[b5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_ext_adv_set_adv_param
<LI><a href="#[b5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_ext_adv_create_adv_handle
<LI><a href="#[b58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_allocate_adv_handle
</UL>
<BR>[Called By]<UL><LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_init_adv_params
</UL>

<P><STRONG><a name="[43d]"></a>ble_ext_adv_mgr_init_adv_params</STRONG> (Thumb, 80 bytes, Stack size 112 bytes, ble_ext_adv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = ble_ext_adv_mgr_init_adv_params &rArr; ble_ext_adv_mgr_init_adv_params_all &rArr; ble_ext_adv_mgr_allocate_adv_handle
</UL>
<BR>[Calls]<UL><LI><a href="#[b59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_init_adv_params_all
</UL>
<BR>[Called By]<UL><LI><a href="#[3f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_common_adv_init
<LI><a href="#[4c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_adv_init
<LI><a href="#[4c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_adv_init
<LI><a href="#[6c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_swift_pair_adv_init
<LI><a href="#[7a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_adv_init
<LI><a href="#[b43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_adv_data_init
</UL>

<P><STRONG><a name="[b5f]"></a>ble_ext_adv_mgr_find_pending_adv_action</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, ble_ext_adv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ble_ext_adv_mgr_find_pending_adv_action
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[435]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_enable
<LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_disable
<LI><a href="#[b60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_start_set_adv_param
</UL>

<P><STRONG><a name="[b60]"></a>ble_ext_adv_mgr_start_set_adv_param</STRONG> (Thumb, 70 bytes, Stack size 24 bytes, ble_ext_adv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = ble_ext_adv_mgr_start_set_adv_param &rArr; ble_ext_adv_mgr_send_msg &rArr; ble_ext_adv_mgr_find_by_handle
</UL>
<BR>[Calls]<UL><LI><a href="#[b61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_get_gap_param
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[b5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_find_pending_adv_action
<LI><a href="#[b54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_action_update
<LI><a href="#[b4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_send_msg
</UL>
<BR>[Called By]<UL><LI><a href="#[437]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_set_scan_response_data
<LI><a href="#[42f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_set_random
<LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_set_adv_data
<LI><a href="#[435]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_enable
<LI><a href="#[717]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_set_multi_param
<LI><a href="#[b62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_set_adv_param
</UL>

<P><STRONG><a name="[42e]"></a>ble_ext_adv_mgr_set_adv_data</STRONG> (Thumb, 72 bytes, Stack size 24 bytes, ble_ext_adv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = ble_ext_adv_mgr_set_adv_data &rArr; ble_ext_adv_mgr_start_set_adv_param &rArr; ble_ext_adv_mgr_send_msg &rArr; ble_ext_adv_mgr_find_by_handle
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[b5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_ext_adv_set_adv_data
<LI><a href="#[b60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_start_set_adv_param
<LI><a href="#[b4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_find_by_handle
</UL>
<BR>[Called By]<UL><LI><a href="#[430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_common_adv_bud_role_update
<LI><a href="#[42d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_adv_data_update
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_swift_pair_timeout_cb
<LI><a href="#[797]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_adv_update_hash
<LI><a href="#[7a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_adv_update_frame_type
<LI><a href="#[78d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_adv_update_adv_ei_hash
<LI><a href="#[77b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_battery_set_info
<LI><a href="#[74e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_adv_check_sass_conn_status
<LI><a href="#[5dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_adv_update
<LI><a href="#[b3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_adv_data_check_timer
<LI><a href="#[b3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adv_data_timer_callback
</UL>

<P><STRONG><a name="[437]"></a>ble_ext_adv_mgr_set_scan_response_data</STRONG> (Thumb, 74 bytes, Stack size 32 bytes, ble_ext_adv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = ble_ext_adv_mgr_set_scan_response_data &rArr; ble_ext_adv_mgr_start_set_adv_param &rArr; ble_ext_adv_mgr_send_msg &rArr; ble_ext_adv_mgr_find_by_handle
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[b5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_ext_adv_set_scan_response_data
<LI><a href="#[b60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_start_set_adv_param
<LI><a href="#[b4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_find_by_handle
</UL>
<BR>[Called By]<UL><LI><a href="#[436]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_common_adv_update_scan_rsp_data
<LI><a href="#[70d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_update_announcement
<LI><a href="#[b3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_adv_data_check_timer
<LI><a href="#[b3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adv_data_timer_callback
</UL>

<P><STRONG><a name="[435]"></a>ble_ext_adv_mgr_enable</STRONG> (Thumb, 128 bytes, Stack size 40 bytes, ble_ext_adv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = ble_ext_adv_mgr_enable &rArr; ble_ext_adv_mgr_start_set_adv_param &rArr; ble_ext_adv_mgr_send_msg &rArr; ble_ext_adv_mgr_find_by_handle
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[b60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_start_set_adv_param
<LI><a href="#[b5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_find_pending_adv_action
<LI><a href="#[b4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_action_start
<LI><a href="#[b51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_update_adv_state
<LI><a href="#[b4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_send_msg
<LI><a href="#[b4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_find_by_handle
</UL>
<BR>[Called By]<UL><LI><a href="#[434]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_common_adv_start
<LI><a href="#[78f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_adv_start
<LI><a href="#[720]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_adv_start
<LI><a href="#[712]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_adv_start
<LI><a href="#[5db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_swift_pair_adv_start
<LI><a href="#[b41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_adv_data_check_state
<LI><a href="#[b3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_adv_data_check_timer
</UL>

<P><STRONG><a name="[431]"></a>ble_ext_adv_mgr_disable</STRONG> (Thumb, 98 bytes, Stack size 32 bytes, ble_ext_adv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = ble_ext_adv_mgr_disable &rArr; ble_ext_adv_mgr_send_msg &rArr; ble_ext_adv_mgr_find_by_handle
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[b5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_find_pending_adv_action
<LI><a href="#[b52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_action_stop
<LI><a href="#[b51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_update_adv_state
<LI><a href="#[b4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_send_msg
<LI><a href="#[b4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_find_by_handle
</UL>
<BR>[Called By]<UL><LI><a href="#[42f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_set_random
<LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_common_adv_stop
<LI><a href="#[52f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_disable_all
<LI><a href="#[791]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_adv_stop
<LI><a href="#[717]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_set_multi_param
<LI><a href="#[71a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_next_action
<LI><a href="#[5d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_swift_pair_adv_stop
<LI><a href="#[80d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_adv_stop
<LI><a href="#[b41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_adv_data_check_state
<LI><a href="#[b3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_adv_data_check_timer
<LI><a href="#[b62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_set_adv_param
</UL>

<P><STRONG><a name="[b62]"></a>ble_ext_adv_mgr_set_adv_param</STRONG> (Thumb, 244 bytes, Stack size 96 bytes, ble_ext_adv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = ble_ext_adv_mgr_set_adv_param &rArr; ble_ext_adv_mgr_disable &rArr; ble_ext_adv_mgr_send_msg &rArr; ble_ext_adv_mgr_find_by_handle
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[b5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_ext_adv_set_adv_param
<LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_disable
<LI><a href="#[b60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_start_set_adv_param
<LI><a href="#[b4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_send_msg
<LI><a href="#[b4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_find_by_handle
</UL>
<BR>[Called By]<UL><LI><a href="#[73f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_change_adv_interval
<LI><a href="#[716]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_change_own_address_type
<LI><a href="#[811]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_change_adv_phy
</UL>

<P><STRONG><a name="[73f]"></a>ble_ext_adv_mgr_change_adv_interval</STRONG> (Thumb, 144 bytes, Stack size 72 bytes, ble_ext_adv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = ble_ext_adv_mgr_change_adv_interval &rArr; ble_ext_adv_mgr_set_adv_param &rArr; ble_ext_adv_mgr_disable &rArr; ble_ext_adv_mgr_send_msg &rArr; ble_ext_adv_mgr_find_by_handle
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[b62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_set_adv_param
<LI><a href="#[b4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_find_by_handle
</UL>
<BR>[Called By]<UL><LI><a href="#[764]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_adv_update_adv_interval
<LI><a href="#[720]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_adv_start
<LI><a href="#[73e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_adv_update_adv_interval
<LI><a href="#[810]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_adv_update_interval_hfp
<LI><a href="#[80f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_adv_update_interval
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_adv_timeout_cb
</UL>

<P><STRONG><a name="[811]"></a>ble_ext_adv_mgr_change_adv_phy</STRONG> (Thumb, 164 bytes, Stack size 72 bytes, ble_ext_adv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = ble_ext_adv_mgr_change_adv_phy &rArr; ble_ext_adv_mgr_set_adv_param &rArr; ble_ext_adv_mgr_disable &rArr; ble_ext_adv_mgr_send_msg &rArr; ble_ext_adv_mgr_find_by_handle
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[b62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_set_adv_param
<LI><a href="#[b4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_find_by_handle
</UL>
<BR>[Called By]<UL><LI><a href="#[4c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_adv_init
</UL>

<P><STRONG><a name="[42f]"></a>ble_ext_adv_mgr_set_random</STRONG> (Thumb, 128 bytes, Stack size 32 bytes, ble_ext_adv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = ble_ext_adv_mgr_set_random &rArr; ble_ext_adv_mgr_disable &rArr; ble_ext_adv_mgr_send_msg &rArr; ble_ext_adv_mgr_find_by_handle
</UL>
<BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[b5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_ext_adv_set_random
<LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_disable
<LI><a href="#[b60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_start_set_adv_param
<LI><a href="#[b4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_send_msg
<LI><a href="#[b4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_find_by_handle
</UL>
<BR>[Called By]<UL><LI><a href="#[40a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_adv_update_rpa
<LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_update_rpa
<LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_common_adv_set_random
<LI><a href="#[712]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_adv_start
</UL>

<P><STRONG><a name="[717]"></a>ble_ext_adv_mgr_set_multi_param</STRONG> (Thumb, 298 bytes, Stack size 96 bytes, ble_ext_adv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = ble_ext_adv_mgr_set_multi_param &rArr; ble_ext_adv_mgr_disable &rArr; ble_ext_adv_mgr_send_msg &rArr; ble_ext_adv_mgr_find_by_handle
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[b5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_ext_adv_set_scan_response_data
<LI><a href="#[b5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_ext_adv_set_random
<LI><a href="#[b5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_ext_adv_set_adv_data
<LI><a href="#[b5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_ext_adv_set_adv_param
<LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_disable
<LI><a href="#[b60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_start_set_adv_param
<LI><a href="#[b4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_send_msg
<LI><a href="#[b4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_find_by_handle
</UL>
<BR>[Called By]<UL><LI><a href="#[712]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_adv_start
</UL>

<P><STRONG><a name="[52f]"></a>ble_ext_adv_mgr_disable_all</STRONG> (Thumb, 86 bytes, Stack size 40 bytes, ble_ext_adv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = ble_ext_adv_mgr_disable_all &rArr; ble_ext_adv_mgr_disable &rArr; ble_ext_adv_mgr_send_msg &rArr; ble_ext_adv_mgr_find_by_handle
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_handle_action
</UL>

<P><STRONG><a name="[b63]"></a>ble_ext_adv_mgr_check_state</STRONG> (Thumb, 134 bytes, Stack size 32 bytes, ble_ext_adv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = ble_ext_adv_mgr_check_state &rArr; ble_ext_adv_update_adv_state
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[b51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_update_adv_state
</UL>
<BR>[Called By]<UL><LI><a href="#[b66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_handle_adv_state
<LI><a href="#[b65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_check_next_step
</UL>

<P><STRONG><a name="[b64]"></a>ble_ext_adv_mgr_delete_pending_actions</STRONG> (Thumb, 148 bytes, Stack size 40 bytes, ble_ext_adv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = ble_ext_adv_mgr_delete_pending_actions
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[b67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_handle_conn_state
</UL>

<P><STRONG><a name="[b65]"></a>ble_ext_adv_mgr_check_next_step</STRONG> (Thumb, 268 bytes, Stack size 40 bytes, ble_ext_adv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = ble_ext_adv_mgr_check_next_step &rArr; ble_ext_adv_mgr_check_state &rArr; ble_ext_adv_update_adv_state
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[b63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_check_state
<LI><a href="#[b54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_action_update
<LI><a href="#[b52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_action_stop
<LI><a href="#[b4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_action_start
<LI><a href="#[b4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_find_by_handle
</UL>
<BR>[Called By]<UL><LI><a href="#[b69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_handle_gap_cb
<LI><a href="#[b66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_handle_adv_state
</UL>

<P><STRONG><a name="[b66]"></a>ble_ext_adv_mgr_handle_adv_state</STRONG> (Thumb, 84 bytes, Stack size 32 bytes, ble_ext_adv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = ble_ext_adv_mgr_handle_adv_state &rArr; ble_ext_adv_mgr_check_next_step &rArr; ble_ext_adv_mgr_check_state &rArr; ble_ext_adv_update_adv_state
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[b65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_check_next_step
<LI><a href="#[b63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_check_state
<LI><a href="#[b4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_find_by_handle
</UL>
<BR>[Called By]<UL><LI><a href="#[3eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_mgr_handle_gap_msg
<LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_mgr_handle_gap_cb
</UL>

<P><STRONG><a name="[b67]"></a>ble_ext_adv_mgr_handle_conn_state</STRONG> (Thumb, 182 bytes, Stack size 56 bytes, ble_ext_adv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = ble_ext_adv_mgr_handle_conn_state &rArr; ble_ext_adv_mgr_delete_pending_actions
</UL>
<BR>[Calls]<UL><LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_get_conn_handle
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[b68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_ext_adv_get_adv_handle_by_conn_id
<LI><a href="#[688]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_get_conn_local_addr
<LI><a href="#[b64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_delete_pending_actions
<LI><a href="#[b4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_find_by_handle
</UL>
<BR>[Called By]<UL><LI><a href="#[3eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_mgr_handle_gap_msg
</UL>

<P><STRONG><a name="[b69]"></a>ble_ext_adv_mgr_handle_gap_cb</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, ble_ext_adv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = ble_ext_adv_mgr_handle_gap_cb &rArr; ble_ext_adv_mgr_check_next_step &rArr; ble_ext_adv_mgr_check_state &rArr; ble_ext_adv_update_adv_state
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[b65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_check_next_step
<LI><a href="#[b4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_find_by_handle
</UL>
<BR>[Called By]<UL><LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_mgr_handle_gap_cb
</UL>

<P><STRONG><a name="[43e]"></a>ble_ext_adv_mgr_register_callback</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, ble_ext_adv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ble_ext_adv_mgr_register_callback &rArr; ble_ext_adv_mgr_find_by_handle
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[b4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_find_by_handle
</UL>
<BR>[Called By]<UL><LI><a href="#[3f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_common_adv_init
<LI><a href="#[4c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_adv_init
<LI><a href="#[4c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_adv_init
<LI><a href="#[6c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_swift_pair_adv_init
<LI><a href="#[7a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_adv_init
<LI><a href="#[b43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_adv_data_init
</UL>

<P><STRONG><a name="[432]"></a>ble_ext_adv_mgr_get_adv_state</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, ble_ext_adv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ble_ext_adv_mgr_get_adv_state &rArr; ble_ext_adv_mgr_find_by_handle
</UL>
<BR>[Calls]<UL><LI><a href="#[b4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_find_by_handle
</UL>
<BR>[Called By]<UL><LI><a href="#[412]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_common_adv_get_state
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_swift_pair_adv_callback
<LI><a href="#[790]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_adv_get_adv_state
</UL>

<P><STRONG><a name="[80e]"></a>ble_ext_adv_mgr_get_adv_interval</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, ble_ext_adv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ble_ext_adv_mgr_get_adv_interval &rArr; ble_ext_adv_mgr_find_by_handle
</UL>
<BR>[Calls]<UL><LI><a href="#[b4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_find_by_handle
</UL>
<BR>[Called By]<UL><LI><a href="#[810]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_adv_update_interval_hfp
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_adv_timeout_cb
<LI><a href="#[b3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adv_data_timer_create
</UL>

<P><STRONG><a name="[40c]"></a>ble_ext_adv_print_info</STRONG> (Thumb, 102 bytes, Stack size 32 bytes, ble_ext_adv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ble_ext_adv_print_info
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[40b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_device_handle_power_on
</UL>

<P><STRONG><a name="[716]"></a>ble_ext_adv_mgr_change_own_address_type</STRONG> (Thumb, 120 bytes, Stack size 64 bytes, ble_ext_adv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = ble_ext_adv_mgr_change_own_address_type &rArr; ble_ext_adv_mgr_set_adv_param &rArr; ble_ext_adv_mgr_disable &rArr; ble_ext_adv_mgr_send_msg &rArr; ble_ext_adv_mgr_find_by_handle
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[b62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_set_adv_param
<LI><a href="#[b4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_find_by_handle
</UL>
<BR>[Called By]<UL><LI><a href="#[712]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_adv_start
</UL>

<P><STRONG><a name="[3f7]"></a>ble_mgr_init</STRONG> (Thumb, 132 bytes, Stack size 32 bytes, ble_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = ble_mgr_init &rArr; ble_adv_data_init &rArr; ble_ext_adv_mgr_init_adv_params &rArr; ble_ext_adv_mgr_init_adv_params_all &rArr; ble_ext_adv_mgr_allocate_adv_handle
</UL>
<BR>[Calls]<UL><LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calloc
<LI><a href="#[b4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_conn_update_init
<LI><a href="#[b43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_adv_data_init
<LI><a href="#[b6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_scan_init
<LI><a href="#[b56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_init
</UL>
<BR>[Called By]<UL><LI><a href="#[3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_gap_ble_mgr_init
</UL>

<P><STRONG><a name="[4db]"></a>ble_mgr_msg_cback_register</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, ble_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ble_mgr_msg_cback_register &rArr; calloc
</UL>
<BR>[Calls]<UL><LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calloc
</UL>
<BR>[Called By]<UL><LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_init
</UL>

<P><STRONG><a name="[3ed]"></a>ble_mgr_handle_gap_cb</STRONG> (Thumb, 80 bytes, Stack size 0 bytes, ble_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = ble_mgr_handle_gap_cb &rArr; ble_ext_adv_mgr_handle_adv_state &rArr; ble_ext_adv_mgr_check_next_step &rArr; ble_ext_adv_mgr_check_state &rArr; ble_ext_adv_update_adv_state
</UL>
<BR>[Calls]<UL><LI><a href="#[b6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_scan_handle_state
<LI><a href="#[b6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_scan_handle_gap_cb
<LI><a href="#[b69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_handle_gap_cb
<LI><a href="#[b66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_handle_adv_state
</UL>
<BR>[Called By]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_gap_cb
</UL>

<P><STRONG><a name="[3eb]"></a>ble_mgr_handle_gap_msg</STRONG> (Thumb, 212 bytes, Stack size 32 bytes, ble_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = ble_mgr_handle_gap_msg &rArr; ble_adv_data_handle_conn_state &rArr; ble_adv_data_check_state &rArr; ble_ext_adv_mgr_enable &rArr; ble_ext_adv_mgr_start_set_adv_param &rArr; ble_ext_adv_mgr_send_msg &rArr; ble_ext_adv_mgr_find_by_handle
</UL>
<BR>[Calls]<UL><LI><a href="#[b49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_handle_conn_state_evt
<LI><a href="#[b48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_handle_conn_update_info
<LI><a href="#[b44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_adv_data_handle_conn_state
<LI><a href="#[b6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_svc_handle_conn_state_evt
<LI><a href="#[b6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_handle_conn_state_evt
<LI><a href="#[b6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_scan_handle_state
<LI><a href="#[b67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_handle_conn_state
<LI><a href="#[b66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_handle_adv_state
</UL>
<BR>[Called By]<UL><LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_gap_handle_gap_msg
</UL>

<P><STRONG><a name="[b70]"></a>ble_scan_get_cur_state</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, ble_scan.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ble_scan_get_cur_state
</UL>
<BR>[Calls]<UL><LI><a href="#[b61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_get_gap_param
</UL>
<BR>[Called By]<UL><LI><a href="#[b73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_scan_param_update
<LI><a href="#[b71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_scan_check_state
</UL>

<P><STRONG><a name="[b71]"></a>ble_scan_check_state</STRONG> (Thumb, 150 bytes, Stack size 24 bytes, ble_scan.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = ble_scan_check_state &rArr; scan_start
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[52e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_ext_scan_stop
<LI><a href="#[b70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_scan_get_cur_state
<LI><a href="#[b72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scan_start
</UL>
<BR>[Called By]<UL><LI><a href="#[6d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_scan_resume
<LI><a href="#[6d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_scan_pause
<LI><a href="#[843]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_scan_stop
<LI><a href="#[841]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_scan_start
<LI><a href="#[b6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_scan_handle_state
</UL>

<P><STRONG><a name="[b73]"></a>ble_scan_param_update</STRONG> (Thumb, 272 bytes, Stack size 40 bytes, ble_scan.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = ble_scan_param_update &rArr; ble_scan_get_cur_state
</UL>
<BR>[Calls]<UL><LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp (via Veneer)
<LI><a href="#[b70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_scan_get_cur_state
</UL>
<BR>[Called By]<UL><LI><a href="#[843]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_scan_stop
<LI><a href="#[841]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_scan_start
</UL>

<P><STRONG><a name="[841]"></a>ble_scan_start</STRONG> (Thumb, 314 bytes, Stack size 32 bytes, ble_scan.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = ble_scan_start &rArr; ble_scan_param_update &rArr; ble_scan_get_cur_state
</UL>
<BR>[Calls]<UL><LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calloc
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[b73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_scan_param_update
<LI><a href="#[b71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_scan_check_state
<LI><a href="#[b6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_scan_hdl_check_int
</UL>
<BR>[Called By]<UL><LI><a href="#[840]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_scan_start
</UL>

<P><STRONG><a name="[843]"></a>ble_scan_stop</STRONG> (Thumb, 112 bytes, Stack size 16 bytes, ble_scan.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = ble_scan_stop &rArr; ble_scan_param_update &rArr; ble_scan_get_cur_state
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[b73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_scan_param_update
<LI><a href="#[b71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_scan_check_state
<LI><a href="#[b6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_scan_hdl_check_int
</UL>
<BR>[Called By]<UL><LI><a href="#[842]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_scan_stop
</UL>

<P><STRONG><a name="[6d2]"></a>ble_scan_resume</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, ble_scan.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = ble_scan_resume &rArr; ble_scan_check_state &rArr; scan_start
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[b71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_scan_check_state
</UL>
<BR>[Called By]<UL><LI><a href="#[6cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_whitelist_modify
</UL>

<P><STRONG><a name="[6d0]"></a>ble_scan_pause</STRONG> (Thumb, 86 bytes, Stack size 8 bytes, ble_scan.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = ble_scan_pause &rArr; ble_scan_check_state &rArr; scan_start
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[b71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_scan_check_state
</UL>
<BR>[Called By]<UL><LI><a href="#[6cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_whitelist_modify
</UL>

<P><STRONG><a name="[b6c]"></a>ble_scan_handle_gap_cb</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, ble_scan.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = ble_scan_handle_gap_cb &rArr; match_filter
</UL>
<BR>[Calls]<UL><LI><a href="#[b74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;match_filter
</UL>
<BR>[Called By]<UL><LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_mgr_handle_gap_cb
</UL>

<P><STRONG><a name="[b6b]"></a>ble_scan_handle_state</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, ble_scan.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = ble_scan_handle_state &rArr; ble_scan_check_state &rArr; scan_start
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[b71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_scan_check_state
</UL>
<BR>[Called By]<UL><LI><a href="#[3eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_mgr_handle_gap_msg
<LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_mgr_handle_gap_cb
</UL>

<P><STRONG><a name="[b6a]"></a>ble_scan_init</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, ble_scan.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ble_scan_init &rArr; calloc
</UL>
<BR>[Calls]<UL><LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calloc
</UL>
<BR>[Called By]<UL><LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_mgr_init
</UL>

<P><STRONG><a name="[865]"></a>bt_get_le_iso_sync_ref_ap_info</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, bt_syscall.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = bt_get_le_iso_sync_ref_ap_info
</UL>
<BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_mgr_probe_cback
</UL>

<P><STRONG><a name="[b76]"></a>gatt_client_check_link_int</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, bt_gatt_client.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = gatt_client_check_link_int &rArr; gatt_client_find
</UL>
<BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[b77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_find
</UL>
<BR>[Called By]<UL><LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_write
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_read
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_get_char_prop
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_find_char_handle
<LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_start_discovery_all
<LI><a href="#[bab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_is_load_from_ftl
<LI><a href="#[baa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_find_include_srv_by_primary
<LI><a href="#[b91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_check_cccd_enabled
<LI><a href="#[b8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_enable_char_cccd
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_cbs
</UL>

<P><STRONG><a name="[b79]"></a>gatt_spec_client_find_by_uuid</STRONG> (Thumb, 90 bytes, Stack size 24 bytes, bt_gatt_client.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = gatt_spec_client_find_by_uuid
</UL>
<BR>[Calls]<UL><LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_spec_register
<LI><a href="#[b8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_storage_load
<LI><a href="#[b98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_storage_add_secondary_service
<LI><a href="#[b9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_storage_add_primary_service
</UL>

<P><STRONG><a name="[3e1]"></a>gatt_client_start_discovery_all</STRONG> (Thumb, 172 bytes, Stack size 32 bytes, bt_gatt_client.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = gatt_client_start_discovery_all &rArr; gattc_storage_load &rArr; gatt_spec_client_find_by_uuid
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[b8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;client_ext_all_primary_srv_discovery
<LI><a href="#[b8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_storage_srv_list_release
<LI><a href="#[b8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_storage_print
<LI><a href="#[b8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_storage_load
<LI><a href="#[b76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_check_link_int
<LI><a href="#[b88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_send_dis_result
<LI><a href="#[b7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_req_list_free
</UL>
<BR>[Called By]<UL><LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_gap_handle_mtu_info
<LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_gap_handle_authen_state_evt
</UL>

<P><STRONG><a name="[b8e]"></a>gatt_client_enable_char_cccd</STRONG> (Thumb, 384 bytes, Stack size 72 bytes, bt_gatt_client.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = gatt_client_enable_char_cccd &rArr; gatt_client_check_req &rArr; gatt_client_execute_req
</UL>
<BR>[Calls]<UL><LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calloc
<LI><a href="#[b8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_storage_find_srv_by_uuid
<LI><a href="#[b76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_check_link_int
<LI><a href="#[b90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_check_cccd_prop
<LI><a href="#[b87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_check_req
</UL>
<BR>[Called By]<UL><LI><a href="#[82d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcp_client_cfg_cccd
<LI><a href="#[bac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_enable_srv_cccd
<LI><a href="#[ca0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tbs_cfg_cccd
</UL>

<P><STRONG><a name="[b91]"></a>gatt_client_check_cccd_enabled</STRONG> (Thumb, 268 bytes, Stack size 40 bytes, bt_gatt_client.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = gatt_client_check_cccd_enabled &rArr; gatt_client_check_link_int &rArr; gatt_client_find
</UL>
<BR>[Calls]<UL><LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[b8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_storage_find_srv_by_uuid
<LI><a href="#[b92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_get_cccd_data
<LI><a href="#[b76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_check_link_int
</UL>
<BR>[Called By]<UL><LI><a href="#[82d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcp_client_cfg_cccd
<LI><a href="#[ca0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tbs_cfg_cccd
<LI><a href="#[ff7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_service_get_char_info
</UL>

<P><STRONG><a name="[2ca]"></a>gatt_client_read</STRONG> (Thumb, 118 bytes, Stack size 32 bytes, bt_gatt_client.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = gatt_client_read &rArr; gattc_storage_check_prop &rArr; gattc_storage_find_char_desc
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calloc
<LI><a href="#[b93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_storage_check_prop
<LI><a href="#[b76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_check_link_int
<LI><a href="#[b87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_check_req
</UL>
<BR>[Called By]<UL><LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gaps_client_read_char
<LI><a href="#[82e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcp_client_read_char_value
<LI><a href="#[c9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tbs_read_char_value
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_cbs
</UL>

<P><STRONG><a name="[2cd]"></a>gatt_client_write</STRONG> (Thumb, 212 bytes, Stack size 48 bytes, bt_gatt_client.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = gatt_client_write &rArr; gattc_storage_check_prop &rArr; gattc_storage_find_char_desc
</UL>
<BR>[Calls]<UL><LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[b7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;client_ext_attr_write
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calloc
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[b93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_storage_check_prop
<LI><a href="#[b76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_check_link_int
<LI><a href="#[b87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_check_req
</UL>
<BR>[Called By]<UL><LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gaps_client_write_appearance
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gaps_client_write_device_name
<LI><a href="#[830]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcp_client_write_media_cp
<LI><a href="#[ca1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tbs_write_char_value
<LI><a href="#[ff6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_write_client_supported_feature
</UL>

<P><STRONG><a name="[b6d]"></a>gatt_client_handle_conn_state_evt</STRONG> (Thumb, 306 bytes, Stack size 32 bytes, bt_gatt_client.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = gatt_client_handle_conn_state_evt &rArr; sys_timer_delete &rArr; sys_hp_timer_list_remove &rArr; hw_timer_restart &rArr; hw_timer_safe_stop &rArr; hw_timer_set_div
</UL>
<BR>[Calls]<UL><LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_get_conn_handle
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calloc
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[977]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_delete
<LI><a href="#[b8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_storage_srv_list_release
<LI><a href="#[b9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_storage_dis_list_release
<LI><a href="#[b7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_req_list_free
<LI><a href="#[ba2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_find_by_conn_id
</UL>
<BR>[Called By]<UL><LI><a href="#[3eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_mgr_handle_gap_msg
</UL>

<P><STRONG><a name="[ba3]"></a>gatt_client_init</STRONG> (Thumb, 116 bytes, Stack size 16 bytes, bt_gatt_client.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = gatt_client_init &rArr; gatt_service_add &rArr; gatt_client_spec_register &rArr; gatt_spec_client_find_by_uuid
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[ba4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;client_cfg_use_ext_api
<LI><a href="#[ba6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;client_ext_register_spec_client_cb
<LI><a href="#[ba7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;client_register_spec_client_cb
<LI><a href="#[ba5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;client_init
<LI><a href="#[ba8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_service_add
</UL>
<BR>[Called By]<UL><LI><a href="#[868]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_init
</UL>

<P><STRONG><a name="[2c5]"></a>gatt_client_storage_register</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, bt_gatt_client.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_tbl_storage_init
</UL>

<P><STRONG><a name="[2d1]"></a>gatt_client_spec_register</STRONG> (Thumb, 94 bytes, Stack size 16 bytes, bt_gatt_client.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = gatt_client_spec_register &rArr; gatt_spec_client_find_by_uuid
</UL>
<BR>[Calls]<UL><LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calloc
<LI><a href="#[b79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_spec_client_find_by_uuid
</UL>
<BR>[Called By]<UL><LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gaps_client_init
<LI><a href="#[86d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cap_init
<LI><a href="#[ba8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_service_add
<LI><a href="#[ca2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tbs_client_init
<LI><a href="#[c9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcs_client_init
</UL>

<P><STRONG><a name="[2c9]"></a>gatt_client_find_char_handle</STRONG> (Thumb, 138 bytes, Stack size 56 bytes, bt_gatt_client.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = gatt_client_find_char_handle &rArr; gatt_client_check_link_int &rArr; gatt_client_find
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[b8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_storage_find_srv_by_uuid
<LI><a href="#[ba9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_storage_find_char_by_uuid
<LI><a href="#[b76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_check_link_int
</UL>
<BR>[Called By]<UL><LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gaps_gatt_client_cbs
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gaps_client_write_appearance
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gaps_client_write_device_name
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gaps_client_read_char
<LI><a href="#[830]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcp_client_write_media_cp
<LI><a href="#[82e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcp_client_read_char_value
<LI><a href="#[ca1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tbs_write_char_value
<LI><a href="#[c9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tbs_read_char_value
<LI><a href="#[ff6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_write_client_supported_feature
</UL>

<P><STRONG><a name="[baa]"></a>gatt_client_find_include_srv_by_primary</STRONG> (Thumb, 426 bytes, Stack size 56 bytes, bt_gatt_client.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = gatt_client_find_include_srv_by_primary &rArr; gatt_client_check_link_int &rArr; gatt_client_find
</UL>
<BR>[Calls]<UL><LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[b8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_storage_find_srv_by_uuid
<LI><a href="#[b76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_check_link_int
</UL>
<BR>[Called By]<UL><LI><a href="#[c99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcs_client_handle_cback
</UL>

<P><STRONG><a name="[bab]"></a>gatt_client_is_load_from_ftl</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, bt_gatt_client.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = gatt_client_is_load_from_ftl &rArr; gatt_client_check_link_int &rArr; gatt_client_find
</UL>
<BR>[Calls]<UL><LI><a href="#[b76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_check_link_int
</UL>
<BR>[Called By]<UL><LI><a href="#[c9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cap_check_disc_done
<LI><a href="#[ff8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_service_send_info
</UL>

<P><STRONG><a name="[bac]"></a>gatt_client_enable_srv_cccd</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, bt_gatt_client.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = gatt_client_enable_srv_cccd &rArr; gatt_client_enable_char_cccd &rArr; gatt_client_check_req &rArr; gatt_client_execute_req
</UL>
<BR>[Calls]<UL><LI><a href="#[b8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_enable_char_cccd
</UL>
<BR>[Called By]<UL><LI><a href="#[ff7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_service_get_char_info
</UL>

<P><STRONG><a name="[2cc]"></a>gatt_client_get_char_prop</STRONG> (Thumb, 62 bytes, Stack size 48 bytes, bt_gatt_client.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = gatt_client_get_char_prop &rArr; gatt_client_check_link_int &rArr; gatt_client_find
</UL>
<BR>[Calls]<UL><LI><a href="#[b8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_storage_find_srv_by_uuid
<LI><a href="#[ba9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_storage_find_char_by_uuid
<LI><a href="#[b76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_check_link_int
</UL>
<BR>[Called By]<UL><LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gaps_gatt_client_cbs
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gaps_client_write_appearance
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gaps_client_write_device_name
</UL>

<P><STRONG><a name="[c7b]"></a>gatt_svc_get_num</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, bt_gatt_svc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_handle_conn_state_evt
</UL>

<P><STRONG><a name="[802]"></a>gatt_svc_add</STRONG> (Thumb, 142 bytes, Stack size 40 bytes, bt_gatt_svc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = gatt_svc_add &rArr; calloc
</UL>
<BR>[Calls]<UL><LI><a href="#[bae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;server_ext_add_service
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;server_add_service
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calloc
</UL>
<BR>[Called By]<UL><LI><a href="#[738]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_add_service
<LI><a href="#[7fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dult_add_service
<LI><a href="#[86e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmas_init
<LI><a href="#[c62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pacs_add_service
<LI><a href="#[c53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_add_service
<LI><a href="#[c32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ascs_add_service
<LI><a href="#[c77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vcs_add_service
<LI><a href="#[1013]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cas_add_service
</UL>

<P><STRONG><a name="[baf]"></a>gatt_svc_read_confirm</STRONG> (Thumb, 86 bytes, Stack size 40 bytes, bt_gatt_svc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = gatt_svc_read_confirm
</UL>
<BR>[Calls]<UL><LI><a href="#[844]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_get_conn_id_by_handle
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;server_attr_read_confirm
<LI><a href="#[bb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;server_ext_attr_read_confirm
</UL>
<BR>[Called By]<UL><LI><a href="#[832]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pacs_available_contexts_read_cfm
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_attr_read_cb
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ascs_attr_read_cb
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vcs_attr_read_cb
</UL>

<P><STRONG><a name="[bb2]"></a>ble_audio_check_link_int</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, bt_gatt_svc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ble_audio_check_link_int
</UL>
<BR>[Called By]<UL><LI><a href="#[427]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_svc_handle_profile_data_cmpl
<LI><a href="#[801]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_svc_send_data
<LI><a href="#[b6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_svc_handle_conn_state_evt
</UL>

<P><STRONG><a name="[bb3]"></a>bt_gatt_find_notify_in_queue</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, bt_gatt_svc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = bt_gatt_find_notify_in_queue
</UL>
<BR>[Called By]<UL><LI><a href="#[427]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_svc_handle_profile_data_cmpl
</UL>

<P><STRONG><a name="[427]"></a>gatt_svc_handle_profile_data_cmpl</STRONG> (Thumb, 332 bytes, Stack size 48 bytes, bt_gatt_svc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = gatt_svc_handle_profile_data_cmpl &rArr; ble_audio_send_data_cb &rArr; ble_audio_svc_find
</UL>
<BR>[Calls]<UL><LI><a href="#[844]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_get_conn_id_by_handle
<LI><a href="#[b61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_get_gap_param
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;server_send_data
<LI><a href="#[bb4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;server_ext_send_data
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[bb3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_gatt_find_notify_in_queue
<LI><a href="#[bb2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_check_link_int
<LI><a href="#[bb1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_send_data_cb
</UL>
<BR>[Called By]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_service_general_srv_cb
<LI><a href="#[bb8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_svc_ext_general_cb
<LI><a href="#[bb7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_svc_general_cb
</UL>

<P><STRONG><a name="[bb5]"></a>gatt_svc_send_data_in_queue</STRONG> (Thumb, 134 bytes, Stack size 32 bytes, bt_gatt_svc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = gatt_svc_send_data_in_queue &rArr; calloc
</UL>
<BR>[Calls]<UL><LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calloc
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>
<BR>[Called By]<UL><LI><a href="#[801]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_svc_send_data
</UL>

<P><STRONG><a name="[801]"></a>gatt_svc_send_data</STRONG> (Thumb, 340 bytes, Stack size 72 bytes, bt_gatt_svc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = gatt_svc_send_data &rArr; gatt_svc_send_data_in_queue &rArr; calloc
</UL>
<BR>[Calls]<UL><LI><a href="#[844]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_get_conn_id_by_handle
<LI><a href="#[b61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_get_gap_param
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;server_send_data
<LI><a href="#[bb4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;server_ext_send_data
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calloc
<LI><a href="#[bb5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_svc_send_data_in_queue
<LI><a href="#[bb2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_check_link_int
<LI><a href="#[bb6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_svc_check_ind_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[76c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_send_personalized_name
<LI><a href="#[727]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_send_passkey
<LI><a href="#[cc4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_send_additional_passkey_response
<LI><a href="#[7f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dult_send_indication
<LI><a href="#[c5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pacs_send_notify
<LI><a href="#[c39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_send_brs_notify
<LI><a href="#[c24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ascs_send_ase_notify
<LI><a href="#[cbb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_send_kbp_response_le
<LI><a href="#[cb9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_send_kbp_response
<LI><a href="#[c73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_send_notify_all
<LI><a href="#[cea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_send_rsp
<LI><a href="#[1002]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ascs_send_ase_cp_notify
</UL>

<P><STRONG><a name="[b6e]"></a>gatt_svc_handle_conn_state_evt</STRONG> (Thumb, 92 bytes, Stack size 24 bytes, bt_gatt_svc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = gatt_svc_handle_conn_state_evt &rArr; ble_audio_check_link_int
</UL>
<BR>[Calls]<UL><LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_get_conn_handle
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[bb2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_check_link_int
</UL>
<BR>[Called By]<UL><LI><a href="#[3eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_mgr_handle_gap_msg
</UL>

<P><STRONG><a name="[bb7]"></a>gatt_svc_general_cb</STRONG> (Thumb, 112 bytes, Stack size 32 bytes, bt_gatt_svc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = gatt_svc_general_cb &rArr; gatt_svc_handle_profile_data_cmpl &rArr; ble_audio_send_data_cb &rArr; ble_audio_svc_find
</UL>
<BR>[Calls]<UL><LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_get_conn_handle
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[427]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_svc_handle_profile_data_cmpl
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bt_gatt_svc.o(.text)
</UL>
<P><STRONG><a name="[bb8]"></a>gatt_svc_ext_general_cb</STRONG> (Thumb, 108 bytes, Stack size 32 bytes, bt_gatt_svc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = gatt_svc_ext_general_cb &rArr; gatt_svc_handle_profile_data_cmpl &rArr; ble_audio_send_data_cb &rArr; ble_audio_svc_find
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[427]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_svc_handle_profile_data_cmpl
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bt_gatt_svc.o(.text)
</UL>
<P><STRONG><a name="[42c]"></a>gatt_svc_init</STRONG> (Thumb, 82 bytes, Stack size 8 bytes, bt_gatt_svc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gatt_svc_init
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[bb9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;server_cfg_use_ext_api
<LI><a href="#[bba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;server_ext_register_app_cb
<LI><a href="#[42a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;server_register_app_cb
<LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;server_init
</UL>
<BR>[Called By]<UL><LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_service_init
</UL>

<P><STRONG><a name="[bbb]"></a>gatt_svc_find_char_uuid_by_index</STRONG> (Thumb, 194 bytes, Stack size 40 bytes, bt_gatt_svc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = gatt_svc_find_char_uuid_by_index
</UL>
<BR>[Calls]<UL><LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[c2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_mgr_send_server_cccd_info
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tmas_attr_read_cb
</UL>

<P><STRONG><a name="[bbe]"></a>bt_bond_handle_authen_result_ind</STRONG> (Thumb, 308 bytes, Stack size 40 bytes, bt_bond_api.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = bt_bond_handle_authen_result_ind &rArr; bt_le_save_key &rArr; bt_bond_priority_queue_add &rArr; bt_bond_set_high_priority &rArr; bt_bond_priority_queue_find &rArr; bt_bond_priority_sort_get_int
</UL>
<BR>[Calls]<UL><LI><a href="#[bbf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_bond_authen_result_confirm
<LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_get_param
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[bc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_chann_get_handle
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_le_find_key_entry
<LI><a href="#[688]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_get_conn_local_addr
<LI><a href="#[bc4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_le_delete_bond
<LI><a href="#[bc2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_le_set_bond_state
<LI><a href="#[bc5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_le_save_key
<LI><a href="#[bc3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_le_get_low_priority_bond
<LI><a href="#[bc1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_le_allocate_key_entry
</UL>
<BR>[Called By]<UL><LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_mgr_handle_gap_msg
</UL>

<P><STRONG><a name="[bc6]"></a>bt_bond_handle_authen_key_req_ind</STRONG> (Thumb, 294 bytes, Stack size 128 bytes, bt_bond_api.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = bt_bond_handle_authen_key_req_ind &rArr; bt_le_find_entry_by_aes &rArr; bt_le_resolve_local_rpa
</UL>
<BR>[Calls]<UL><LI><a href="#[bc9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_bond_authen_key_req_confirm
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[bc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_chann_get_handle
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_le_find_key_entry
<LI><a href="#[688]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_get_conn_local_addr
<LI><a href="#[bc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_le_get_key
<LI><a href="#[bc7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_le_find_entry_by_aes
</UL>
<BR>[Called By]<UL><LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_mgr_handle_gap_msg
</UL>

<P><STRONG><a name="[bca]"></a>bt_bond_handle_gatt_server_store_ind</STRONG> (Thumb, 220 bytes, Stack size 48 bytes, bt_bond_api.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = bt_bond_handle_gatt_server_store_ind &rArr; bt_bond_get_info_from_addr &rArr; bt_le_find_entry_by_aes &rArr; bt_le_resolve_local_rpa
</UL>
<BR>[Calls]<UL><LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_get_conn_param
<LI><a href="#[bce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_get_conn_id
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[bc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_chann_get_handle
<LI><a href="#[bcf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_update_cccd_info
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calloc
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[688]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_get_conn_local_addr
<LI><a href="#[bcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_set_cccd_data
<LI><a href="#[bcb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_get_info_from_addr
<LI><a href="#[bcd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_get_cccd_data
</UL>
<BR>[Called By]<UL><LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_mgr_handle_gap_msg
</UL>

<P><STRONG><a name="[bd0]"></a>bt_bond_handle_acl_status_info</STRONG> (Thumb, 312 bytes, Stack size 56 bytes, bt_bond_api.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = bt_bond_handle_acl_status_info &rArr; bt_le_find_key_entry &rArr; bt_le_resolve_local_rpa
</UL>
<BR>[Calls]<UL><LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_get_conn_param
<LI><a href="#[bce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_get_conn_id
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_le_find_key_entry
<LI><a href="#[688]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_get_conn_local_addr
<LI><a href="#[bc4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_le_delete_bond
<LI><a href="#[bd4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_le_set_high_priority_bond
<LI><a href="#[bd3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_le_key_send_update_info
<LI><a href="#[bd1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_save_info_before_add_bond
<LI><a href="#[bd2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_msg_post
</UL>
<BR>[Called By]<UL><LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_mgr_handle_gap_msg
</UL>

<P><STRONG><a name="[8f0]"></a>bt_bond_handle_cccd_pending</STRONG> (Thumb, 94 bytes, Stack size 40 bytes, bt_bond_api.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = bt_bond_handle_cccd_pending &rArr; bt_bond_get_info_from_addr &rArr; bt_le_find_entry_by_aes &rArr; bt_le_resolve_local_rpa
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[bd6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_set_cccd_data_pending
<LI><a href="#[bd5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_set_cccd_pending
<LI><a href="#[bcb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_get_info_from_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_bond_clear_cccd_flag
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_bond_set_cccd_flag
</UL>

<P><STRONG><a name="[3ee]"></a>bt_bond_mgr_handle_gap_msg</STRONG> (Thumb, 334 bytes, Stack size 48 bytes, bt_bond_api.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 384<LI>Call Chain = bt_bond_mgr_handle_gap_msg &rArr; bt_bond_handle_authen_key_req_ind &rArr; bt_le_find_entry_by_aes &rArr; bt_le_resolve_local_rpa
</UL>
<BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[bd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_handle_acl_status_info
<LI><a href="#[bca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_handle_gatt_server_store_ind
<LI><a href="#[bc6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_handle_authen_key_req_ind
<LI><a href="#[bbe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_handle_authen_result_ind
</UL>
<BR>[Called By]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_gap_cb
</UL>

<P><STRONG><a name="[2d9]"></a>bt_bond_init</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, bt_bond_common.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = bt_bond_init &rArr; bt_le_key_init &rArr; bt_le_key_entry_init &rArr; ftl_load_le_remote_ltk &rArr; imp_ftl_load
</UL>
<BR>[Calls]<UL><LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calloc
<LI><a href="#[bd7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_set_otp_gap_bond_mgr
<LI><a href="#[bd8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_get_otp_bond_cfg
<LI><a href="#[bda]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_legacy_key_init
<LI><a href="#[bd9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_le_key_init
</UL>
<BR>[Called By]<UL><LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_gap_init
</UL>

<P><STRONG><a name="[2c6]"></a>bt_bond_register_app_cb</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, bt_bond_common.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = bt_bond_register_app_cb &rArr; calloc
</UL>
<BR>[Calls]<UL><LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calloc
</UL>
<BR>[Called By]<UL><LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_bond_init
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_tbl_storage_init
<LI><a href="#[86a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_init
</UL>

<P><STRONG><a name="[bd2]"></a>bt_bond_msg_post</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, bt_bond_common.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = bt_bond_msg_post
</UL>
<BR>[Called By]<UL><LI><a href="#[403]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_le_clear_all_keys
<LI><a href="#[bc4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_le_delete_bond
<LI><a href="#[bd3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_le_key_send_update_info
<LI><a href="#[bd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_handle_acl_status_info
</UL>

<P><STRONG><a name="[bcb]"></a>bt_bond_get_info_from_addr</STRONG> (Thumb, 98 bytes, Stack size 32 bytes, bt_bond_common.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = bt_bond_get_info_from_addr &rArr; bt_le_find_entry_by_aes &rArr; bt_le_resolve_local_rpa
</UL>
<BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_le_find_key_entry
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_legacy_get_paired_idx
<LI><a href="#[bc7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_le_find_entry_by_aes
</UL>
<BR>[Called By]<UL><LI><a href="#[8f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_handle_cccd_pending
<LI><a href="#[bca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_handle_gatt_server_store_ind
</UL>

<P><STRONG><a name="[bdb]"></a>bt_bond_remove</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, bt_bond_common.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = bt_bond_remove &rArr; ftl_save_cccd &rArr; ftl_get_common_block_offset
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[bdc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_save_cccd
</UL>
<BR>[Called By]<UL><LI><a href="#[be6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_le_delete_key_entry
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_legacy_delete_bond
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_legacy_clear_all_keys
</UL>

<P><STRONG><a name="[bcd]"></a>bt_bond_get_cccd_data</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, bt_bond_common.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = bt_bond_get_cccd_data &rArr; ftl_load_cccd &rArr; ftl_read_cccd_length &rArr; imp_ftl_load
</UL>
<BR>[Calls]<UL><LI><a href="#[bdd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_load_cccd
</UL>
<BR>[Called By]<UL><LI><a href="#[bd5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_set_cccd_pending
<LI><a href="#[bcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_set_cccd_data
<LI><a href="#[bca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_handle_gatt_server_store_ind
</UL>

<P><STRONG><a name="[bde]"></a>bt_bond_cccd_modify</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, bt_bond_common.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = bt_bond_cccd_modify &rArr; bt_le_set_bond_state &rArr; ftl_save_le_remote_bd &rArr; imp_ftl_save
</UL>
<BR>[Calls]<UL><LI><a href="#[84a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_le_find_key_entry_by_idx
<LI><a href="#[bc2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_le_set_bond_state
<LI><a href="#[bd3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_le_key_send_update_info
</UL>
<BR>[Called By]<UL><LI><a href="#[bd5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_set_cccd_pending
<LI><a href="#[bcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_set_cccd_data
</UL>

<P><STRONG><a name="[bcc]"></a>bt_bond_set_cccd_data</STRONG> (Thumb, 204 bytes, Stack size 48 bytes, bt_bond_common.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = bt_bond_set_cccd_data &rArr; bt_bond_get_cccd_data &rArr; ftl_load_cccd &rArr; ftl_read_cccd_length &rArr; imp_ftl_load
</UL>
<BR>[Calls]<UL><LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp (via Veneer)
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calloc
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[bdc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_save_cccd
<LI><a href="#[bdf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_add_cccd
<LI><a href="#[bde]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_cccd_modify
<LI><a href="#[bcd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_get_cccd_data
</UL>
<BR>[Called By]<UL><LI><a href="#[bca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_handle_gatt_server_store_ind
</UL>

<P><STRONG><a name="[bd5]"></a>bt_bond_set_cccd_pending</STRONG> (Thumb, 198 bytes, Stack size 64 bytes, bt_bond_common.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = bt_bond_set_cccd_pending &rArr; bt_bond_get_cccd_data &rArr; ftl_load_cccd &rArr; ftl_read_cccd_length &rArr; imp_ftl_load
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calloc
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[bdf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_add_cccd
<LI><a href="#[bde]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_cccd_modify
<LI><a href="#[bcd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_get_cccd_data
</UL>
<BR>[Called By]<UL><LI><a href="#[8f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_handle_cccd_pending
</UL>

<P><STRONG><a name="[bd1]"></a>bt_bond_save_info_before_add_bond</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, bt_bond_common.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[bd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_handle_acl_status_info
</UL>

<P><STRONG><a name="[bd3]"></a>bt_le_key_send_update_info</STRONG> (Thumb, 30 bytes, Stack size 24 bytes, bt_bond_le.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = bt_le_key_send_update_info &rArr; bt_bond_msg_post
</UL>
<BR>[Calls]<UL><LI><a href="#[bd2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_msg_post
</UL>
<BR>[Called By]<UL><LI><a href="#[689]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_le_set_bond_flag
<LI><a href="#[bde]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_cccd_modify
<LI><a href="#[bd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_handle_acl_status_info
</UL>

<P><STRONG><a name="[be2]"></a>bt_le_update_identity_addr</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, bt_bond_le.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[be0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_le_key_entry_init
<LI><a href="#[bc1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_le_allocate_key_entry
</UL>

<P><STRONG><a name="[be0]"></a>bt_le_key_entry_init</STRONG> (Thumb, 268 bytes, Stack size 128 bytes, bt_bond_le.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = bt_le_key_entry_init &rArr; ftl_load_le_remote_ltk &rArr; imp_ftl_load
</UL>
<BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[be4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_load_le_remote_ltk
<LI><a href="#[be5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_load_le_remote_irk
<LI><a href="#[be1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_load_le_remote_bd
<LI><a href="#[be3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_load_le_local_ltk
<LI><a href="#[be2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_le_update_identity_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[bd9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_le_key_init
</UL>

<P><STRONG><a name="[be6]"></a>bt_le_delete_key_entry</STRONG> (Thumb, 116 bytes, Stack size 64 bytes, bt_bond_le.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = bt_le_delete_key_entry &rArr; bt_bond_remove &rArr; ftl_save_cccd &rArr; ftl_get_common_block_offset
</UL>
<BR>[Calls]<UL><LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[be9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_save_le_remote_ltk
<LI><a href="#[be7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_save_le_remote_bd
<LI><a href="#[be8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_save_le_local_ltk
<LI><a href="#[bea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_clear_le_remote_irk
<LI><a href="#[bdb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_remove
</UL>
<BR>[Called By]<UL><LI><a href="#[403]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_le_clear_all_keys
<LI><a href="#[bc4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_le_delete_bond
<LI><a href="#[bd9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_le_key_init
</UL>

<P><STRONG><a name="[bd9]"></a>bt_le_key_init</STRONG> (Thumb, 134 bytes, Stack size 24 bytes, bt_bond_le.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = bt_le_key_init &rArr; bt_le_key_entry_init &rArr; ftl_load_le_remote_ltk &rArr; imp_ftl_load
</UL>
<BR>[Calls]<UL><LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calloc
<LI><a href="#[bec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_storage_common_init
<LI><a href="#[beb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_le_storage_init
<LI><a href="#[bed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_priority_queue_init
<LI><a href="#[bee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_priority_queue_clear
<LI><a href="#[be6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_le_delete_key_entry
<LI><a href="#[be0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_le_key_entry_init
</UL>
<BR>[Called By]<UL><LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_init
</UL>

<P><STRONG><a name="[bef]"></a>bt_le_resolve_local_rpa</STRONG> (Thumb, 198 bytes, Stack size 80 bytes, bt_bond_le.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = bt_le_resolve_local_rpa
</UL>
<BR>[Calls]<UL><LI><a href="#[bf0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aes128_ecb_encrypt (via Veneer)
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_le_find_key_entry
<LI><a href="#[bc7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_le_find_entry_by_aes
<LI><a href="#[bc1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_le_allocate_key_entry
</UL>

<P><STRONG><a name="[408]"></a>bt_le_set_local_irk</STRONG> (Thumb, 150 bytes, Stack size 32 bytes, bt_bond_le.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = bt_le_set_local_irk &rArr; calloc
</UL>
<BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calloc
</UL>
<BR>[Called By]<UL><LI><a href="#[41a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_device_rpa_handle_engage_role_decided
<LI><a href="#[407]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_device_irk_handle_power_on
</UL>

<P><STRONG><a name="[2a5]"></a>bt_le_find_key_entry</STRONG> (Thumb, 434 bytes, Stack size 72 bytes, bt_bond_le.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = bt_le_find_key_entry &rArr; bt_le_resolve_local_rpa
</UL>
<BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[bef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_le_resolve_local_rpa
</UL>
<BR>[Called By]<UL><LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_le_resolve_random_address
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_tbl_get_identity_addr
<LI><a href="#[687]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bond_le_set_bond_flag
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_bond_get_key
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_bond_check
<LI><a href="#[bcb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_get_info_from_addr
<LI><a href="#[bd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_handle_acl_status_info
<LI><a href="#[bc6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_handle_authen_key_req_ind
<LI><a href="#[bbe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_handle_authen_result_ind
</UL>

<P><STRONG><a name="[2c2]"></a>bt_le_find_key_entry_num</STRONG> (Thumb, 88 bytes, Stack size 32 bytes, bt_bond_le.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = bt_le_find_key_entry_num
</UL>
<BR>[Calls]<UL><LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_tbl_storage_bond_cb
</UL>

<P><STRONG><a name="[84a]"></a>bt_le_find_key_entry_by_idx</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, bt_bond_le.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[805]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_mgr_lea_bond_num
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_bond_get_addr
<LI><a href="#[bde]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_cccd_modify
</UL>

<P><STRONG><a name="[bc1]"></a>bt_le_allocate_key_entry</STRONG> (Thumb, 180 bytes, Stack size 48 bytes, bt_bond_le.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = bt_le_allocate_key_entry &rArr; bt_le_resolve_local_rpa
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[bef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_le_resolve_local_rpa
<LI><a href="#[be2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_le_update_identity_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[bbe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_handle_authen_result_ind
</UL>

<P><STRONG><a name="[bd4]"></a>bt_le_set_high_priority_bond</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, bt_bond_le.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = bt_le_set_high_priority_bond &rArr; bt_bond_set_high_priority &rArr; bt_bond_priority_queue_find &rArr; bt_bond_priority_sort_get_int
</UL>
<BR>[Calls]<UL><LI><a href="#[bf1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_set_high_priority
</UL>
<BR>[Called By]<UL><LI><a href="#[bd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_handle_acl_status_info
</UL>

<P><STRONG><a name="[bc8]"></a>bt_le_get_key</STRONG> (Thumb, 118 bytes, Stack size 56 bytes, bt_bond_le.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = bt_le_get_key &rArr; ftl_load_le_remote_ltk &rArr; imp_ftl_load
</UL>
<BR>[Calls]<UL><LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[be4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_load_le_remote_ltk
<LI><a href="#[be5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_load_le_remote_irk
<LI><a href="#[be3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_load_le_local_ltk
</UL>
<BR>[Called By]<UL><LI><a href="#[bc6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_handle_authen_key_req_ind
</UL>

<P><STRONG><a name="[bc2]"></a>bt_le_set_bond_state</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, bt_bond_le.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = bt_le_set_bond_state &rArr; ftl_save_le_remote_bd &rArr; imp_ftl_save
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[be7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_save_le_remote_bd
</UL>
<BR>[Called By]<UL><LI><a href="#[689]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_le_set_bond_flag
<LI><a href="#[bde]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_cccd_modify
<LI><a href="#[bc5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_le_save_key
<LI><a href="#[bbe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_handle_authen_result_ind
</UL>

<P><STRONG><a name="[bc5]"></a>bt_le_save_key</STRONG> (Thumb, 378 bytes, Stack size 64 bytes, bt_bond_le.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = bt_le_save_key &rArr; bt_bond_priority_queue_add &rArr; bt_bond_set_high_priority &rArr; bt_bond_priority_queue_find &rArr; bt_bond_priority_sort_get_int
</UL>
<BR>[Calls]<UL><LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[be9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_save_le_remote_ltk
<LI><a href="#[bf2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_save_le_remote_irk
<LI><a href="#[be7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_save_le_remote_bd
<LI><a href="#[be8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_save_le_local_ltk
<LI><a href="#[bf3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_priority_queue_add
<LI><a href="#[bc2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_le_set_bond_state
</UL>
<BR>[Called By]<UL><LI><a href="#[bbe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_handle_authen_result_ind
</UL>

<P><STRONG><a name="[403]"></a>bt_le_clear_all_keys</STRONG> (Thumb, 88 bytes, Stack size 24 bytes, bt_bond_le.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = bt_le_clear_all_keys &rArr; bt_le_delete_key_entry &rArr; bt_bond_remove &rArr; ftl_save_cccd &rArr; ftl_get_common_block_offset
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[bee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_priority_queue_clear
<LI><a href="#[be6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_le_delete_key_entry
<LI><a href="#[bd2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_msg_post
</UL>
<BR>[Called By]<UL><LI><a href="#[402]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_device_handle_factory_reset
</UL>

<P><STRONG><a name="[bc4]"></a>bt_le_delete_bond</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, bt_bond_le.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = bt_le_delete_bond &rArr; bt_le_delete_key_entry &rArr; bt_bond_remove &rArr; ftl_save_cccd &rArr; ftl_get_common_block_offset
</UL>
<BR>[Calls]<UL><LI><a href="#[bf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_priority_queue_delete
<LI><a href="#[be6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_le_delete_key_entry
<LI><a href="#[bd2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_msg_post
</UL>
<BR>[Called By]<UL><LI><a href="#[bd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_handle_acl_status_info
<LI><a href="#[bbe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_handle_authen_result_ind
</UL>

<P><STRONG><a name="[bc3]"></a>bt_le_get_low_priority_bond</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, bt_bond_le.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = bt_le_get_low_priority_bond &rArr; bt_bond_get_low_priority &rArr; bt_bond_priority_sort_get_int
</UL>
<BR>[Calls]<UL><LI><a href="#[bf5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_get_low_priority
</UL>
<BR>[Called By]<UL><LI><a href="#[bbe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_handle_authen_result_ind
</UL>

<P><STRONG><a name="[bc7]"></a>bt_le_find_entry_by_aes</STRONG> (Thumb, 320 bytes, Stack size 128 bytes, bt_bond_le.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = bt_le_find_entry_by_aes &rArr; bt_le_resolve_local_rpa
</UL>
<BR>[Calls]<UL><LI><a href="#[bf0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aes128_ecb_encrypt (via Veneer)
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[be5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_load_le_remote_irk
<LI><a href="#[bef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_le_resolve_local_rpa
</UL>
<BR>[Called By]<UL><LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_le_resolve_random_address
<LI><a href="#[bcb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_get_info_from_addr
<LI><a href="#[bc6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_handle_authen_key_req_ind
</UL>

<P><STRONG><a name="[2a4]"></a>bt_le_resolve_random_address</STRONG> (Thumb, 154 bytes, Stack size 32 bytes, bt_bond_le.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = bt_le_resolve_random_address &rArr; bt_le_find_entry_by_aes &rArr; bt_le_resolve_local_rpa
</UL>
<BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_le_find_key_entry
<LI><a href="#[bc7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_le_find_entry_by_aes
</UL>
<BR>[Called By]<UL><LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_tbl_get_identity_addr
<LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_gap_cb
<LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_ble_conn_info_handle
<LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_gap_handle_authen_state_evt
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_bond_le_resolve_rpa
</UL>

<P><STRONG><a name="[84c]"></a>bt_le_get_max_le_paired_device_num</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, bt_bond_le.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[805]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_mgr_lea_bond_num
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_bond_get_max_num
</UL>

<P><STRONG><a name="[8ef]"></a>bt_le_get_dev_ltk</STRONG> (Thumb, 102 bytes, Stack size 80 bytes, bt_bond_le.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = bt_le_get_dev_ltk &rArr; ftl_load_le_remote_ltk &rArr; imp_ftl_load
</UL>
<BR>[Calls]<UL><LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4 (via Veneer)
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[be4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_load_le_remote_ltk
<LI><a href="#[be3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_load_le_local_ltk
</UL>
<BR>[Called By]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_bond_get_key
</UL>

<P><STRONG><a name="[689]"></a>bt_le_set_bond_flag</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, bt_bond_le.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = bt_le_set_bond_flag &rArr; bt_le_set_bond_state &rArr; ftl_save_le_remote_bd &rArr; imp_ftl_save
</UL>
<BR>[Calls]<UL><LI><a href="#[bc2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_le_set_bond_state
<LI><a href="#[bd3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_le_key_send_update_info
</UL>
<BR>[Called By]<UL><LI><a href="#[687]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bond_le_set_bond_flag
</UL>

<P><STRONG><a name="[84b]"></a>bt_le_get_bond_flag</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, bt_bond_le.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[805]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_mgr_lea_bond_num
</UL>

<P><STRONG><a name="[bfa]"></a>bt_legacy_search_empty_dev</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, bt_bond_legacy.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_legacy_save_bond
</UL>

<P><STRONG><a name="[162]"></a>bt_legacy_clear_all_keys</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, bt_bond_legacy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = bt_legacy_clear_all_keys &rArr; bt_bond_remove &rArr; ftl_save_cccd &rArr; ftl_get_common_block_offset
</UL>
<BR>[Calls]<UL><LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
<LI><a href="#[bee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_priority_queue_clear
<LI><a href="#[bdb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_remove
<LI><a href="#[bf6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_save_legacy_remote_bd
</UL>
<BR>[Called By]<UL><LI><a href="#[bda]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_legacy_key_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bt_bond_legacy.o(.constdata)
</UL>
<P><STRONG><a name="[bda]"></a>bt_legacy_key_init</STRONG> (Thumb, 182 bytes, Stack size 32 bytes, bt_bond_legacy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = bt_legacy_key_init &rArr; bt_legacy_clear_all_keys &rArr; bt_bond_remove &rArr; ftl_save_cccd &rArr; ftl_get_common_block_offset
</UL>
<BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calloc
<LI><a href="#[bf7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_register_hal
<LI><a href="#[bed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_priority_queue_init
<LI><a href="#[bf8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_load_legacy_remote_bd
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_legacy_clear_all_keys
</UL>
<BR>[Called By]<UL><LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_init
</UL>

<P><STRONG><a name="[15b]"></a>bt_legacy_get_paired_idx</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, bt_bond_legacy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = bt_legacy_get_paired_idx
</UL>
<BR>[Calls]<UL><LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[bcb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_get_info_from_addr
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_legacy_delete_bond
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_legacy_get_bond
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_legacy_save_bond
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_legacy_get_bond_flag
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_legacy_set_bond_flag
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_legacy_adjust_dev_priority
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bt_bond_legacy.o(.constdata)
</UL>
<P><STRONG><a name="[15a]"></a>bt_legacy_get_addr_by_priority</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, bt_bond_legacy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = bt_legacy_get_addr_by_priority &rArr; bt_bond_get_index_by_priority &rArr; bt_bond_priority_sort_get_int
</UL>
<BR>[Calls]<UL><LI><a href="#[bf9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_get_index_by_priority
</UL>
<BR>[Called By]<UL><LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_legacy_save_bond
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bt_bond_legacy.o(.constdata)
</UL>
<P><STRONG><a name="[159]"></a>bt_legacy_get_bond_num</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, bt_bond_legacy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = bt_legacy_get_bond_num
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bt_bond_legacy.o(.constdata)
</UL>
<P><STRONG><a name="[160]"></a>bt_legacy_adjust_dev_priority</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, bt_bond_legacy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = bt_legacy_adjust_dev_priority &rArr; bt_bond_set_high_priority &rArr; bt_bond_priority_queue_find &rArr; bt_bond_priority_sort_get_int
</UL>
<BR>[Calls]<UL><LI><a href="#[bf1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_set_high_priority
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_legacy_get_paired_idx
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bt_bond_legacy.o(.constdata)
</UL>
<P><STRONG><a name="[15d]"></a>bt_legacy_set_bond_flag</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, bt_bond_legacy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = bt_legacy_set_bond_flag &rArr; ftl_save_legacy_remote_bd &rArr; imp_ftl_save
</UL>
<BR>[Calls]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_legacy_get_paired_idx
<LI><a href="#[bf6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_save_legacy_remote_bd
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bt_bond_legacy.o(.constdata)
</UL>
<P><STRONG><a name="[15c]"></a>bt_legacy_get_bond_flag</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, bt_bond_legacy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = bt_legacy_get_bond_flag &rArr; bt_legacy_get_paired_idx
</UL>
<BR>[Calls]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_legacy_get_paired_idx
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bt_bond_legacy.o(.constdata)
</UL>
<P><STRONG><a name="[15f]"></a>bt_legacy_save_bond</STRONG> (Thumb, 216 bytes, Stack size 48 bytes, bt_bond_legacy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = bt_legacy_save_bond &rArr; bt_bond_priority_queue_add &rArr; bt_bond_set_high_priority &rArr; bt_bond_priority_queue_find &rArr; bt_bond_priority_sort_get_int
</UL>
<BR>[Calls]<UL><LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[bf3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_priority_queue_add
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_legacy_get_paired_idx
<LI><a href="#[bf6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_save_legacy_remote_bd
<LI><a href="#[bfb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_save_legacy_link_key
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_legacy_get_addr_by_priority
<LI><a href="#[bfa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_legacy_search_empty_dev
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bt_bond_legacy.o(.constdata)
</UL>
<P><STRONG><a name="[15e]"></a>bt_legacy_get_bond</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, bt_bond_legacy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = bt_legacy_get_bond &rArr; ftl_load_legacy_link_key &rArr; imp_ftl_load
</UL>
<BR>[Calls]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_legacy_get_paired_idx
<LI><a href="#[bfc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_load_legacy_link_key
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bt_bond_legacy.o(.constdata)
</UL>
<P><STRONG><a name="[161]"></a>bt_legacy_delete_bond</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, bt_bond_legacy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = bt_legacy_delete_bond &rArr; bt_bond_priority_queue_delete &rArr; bt_bond_priority_queue_find &rArr; bt_bond_priority_sort_get_int
</UL>
<BR>[Calls]<UL><LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
<LI><a href="#[bf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_priority_queue_delete
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_legacy_get_paired_idx
<LI><a href="#[bdb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_remove
<LI><a href="#[bf6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_save_legacy_remote_bd
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bt_bond_legacy.o(.constdata)
</UL>
<P><STRONG><a name="[158]"></a>bt_legacy_get_max_bond_num</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, bt_bond_legacy.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_bond_get_max_num
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bt_bond_legacy.o(.constdata)
</UL>
<P><STRONG><a name="[8a6]"></a>ascs_action_release</STRONG> (Thumb, 106 bytes, Stack size 72 bytes, ascs_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 408<LI>Call Chain = ascs_action_release &rArr; ase_action_release &rArr; ascs_check_current_state &rArr; ase_action_released &rArr;  ascs_check_current_state (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[c00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cig_mgr_disconnect
<LI><a href="#[bfe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cig_mgr_get_isoch_info
<LI><a href="#[bfd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ase_find_by_ase_id
<LI><a href="#[bff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ase_action_release
</UL>
<BR>[Called By]<UL><LI><a href="#[897]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_free_link
</UL>

<P><STRONG><a name="[87f]"></a>ascs_action_release_by_cig</STRONG> (Thumb, 156 bytes, Stack size 88 bytes, ascs_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 424<LI>Call Chain = ascs_action_release_by_cig &rArr; ase_action_release &rArr; ascs_check_current_state &rArr; ase_action_released &rArr;  ascs_check_current_state (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[c00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cig_mgr_disconnect
<LI><a href="#[bfe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cig_mgr_get_isoch_info
<LI><a href="#[c01]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_link_find_by_conn_handle
<LI><a href="#[bff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ase_action_release
</UL>
<BR>[Called By]<UL><LI><a href="#[87d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_release_ascs_action
</UL>

<P><STRONG><a name="[818]"></a>ascs_app_ctl_handshake</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, ascs_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = ascs_app_ctl_handshake &rArr; ase_find_by_ase_id &rArr; ble_audio_link_find_by_conn_handle
</UL>
<BR>[Calls]<UL><LI><a href="#[bfd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ase_find_by_ase_id
</UL>
<BR>[Called By]<UL><LI><a href="#[817]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_ascs_free_ase_entry
<LI><a href="#[899]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_link_connected
</UL>

<P><STRONG><a name="[c02]"></a>ascs_remove_data_path</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, ascs_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ascs_remove_data_path
</UL>
<BR>[Calls]<UL><LI><a href="#[c03]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cig_mgr_remove_data_path
</UL>
<BR>[Called By]<UL><LI><a href="#[c16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ascs_handle_cig_mgr_msg
<LI><a href="#[c06]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ascs_check_current_state
</UL>

<P><STRONG><a name="[c04]"></a>ascs_setup_data_path</STRONG> (Thumb, 80 bytes, Stack size 32 bytes, ascs_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ascs_setup_data_path
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[c05]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cig_mgr_setup_data_path
</UL>
<BR>[Called By]<UL><LI><a href="#[c06]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ascs_check_current_state
</UL>

<P><STRONG><a name="[c06]"></a>ascs_check_current_state</STRONG> (Thumb, 286 bytes, Stack size 80 bytes, ascs_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = ascs_check_current_state &rArr; ase_action_released &rArr;  ascs_check_current_state (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[bfe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cig_mgr_get_isoch_info
<LI><a href="#[c07]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ase_action_released
<LI><a href="#[c04]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ascs_setup_data_path
<LI><a href="#[c02]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ascs_remove_data_path
</UL>
<BR>[Called By]<UL><LI><a href="#[89a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ascs_action_rec_start_ready
<LI><a href="#[c0a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ase_switch_to_streaming
<LI><a href="#[c1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ase_switch_to_qos_cfg
<LI><a href="#[c12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ase_action_update_metadata
<LI><a href="#[c07]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ase_action_released
<LI><a href="#[bff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ase_action_release
<LI><a href="#[c14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ase_action_rec_stop_ready
<LI><a href="#[c13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ase_action_rec_start_ready
<LI><a href="#[c11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ase_action_enable
<LI><a href="#[c15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ase_action_disable
<LI><a href="#[c10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ase_action_cfg_qos
<LI><a href="#[c0f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ase_action_cfg_codec
<LI><a href="#[c16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ascs_handle_cig_mgr_msg
</UL>

<P><STRONG><a name="[c08]"></a>ase_sm_check_iosch_status</STRONG> (Thumb, 134 bytes, Stack size 72 bytes, ascs_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = ase_sm_check_iosch_status
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[bfe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cig_mgr_get_isoch_info
</UL>
<BR>[Called By]<UL><LI><a href="#[89a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ascs_action_rec_start_ready
<LI><a href="#[c07]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ase_action_released
<LI><a href="#[c14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ase_action_rec_stop_ready
<LI><a href="#[c13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ase_action_rec_start_ready
<LI><a href="#[c11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ase_action_enable
<LI><a href="#[c16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ascs_handle_cig_mgr_msg
</UL>

<P><STRONG><a name="[89a]"></a>ascs_action_rec_start_ready</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, ascs_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = ascs_action_rec_start_ready &rArr; ase_switch_to_streaming &rArr; ascs_check_current_state &rArr; ase_action_released &rArr;  ascs_check_current_state (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[c0a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ase_switch_to_streaming
<LI><a href="#[bfd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ase_find_by_ase_id
<LI><a href="#[c09]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ase_cp_check_sm_state
<LI><a href="#[c08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ase_sm_check_iosch_status
<LI><a href="#[c06]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ascs_check_current_state
</UL>
<BR>[Called By]<UL><LI><a href="#[899]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_link_connected
</UL>

<P><STRONG><a name="[c0b]"></a>ase_handle_remote_cp</STRONG> (Thumb, 542 bytes, Stack size 64 bytes, ascs_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 464<LI>Call Chain = ase_handle_remote_cp &rArr; ase_action_cfg_codec &rArr; ascs_check_current_state &rArr; ase_action_released &rArr;  ascs_check_current_state (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[c0e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;least_common_multiple
<LI><a href="#[c0d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_sdu_interval_get
<LI><a href="#[c0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_cfg_parse
<LI><a href="#[bfd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ase_find_by_ase_id
<LI><a href="#[c12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ase_action_update_metadata
<LI><a href="#[bff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ase_action_release
<LI><a href="#[c14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ase_action_rec_stop_ready
<LI><a href="#[c13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ase_action_rec_start_ready
<LI><a href="#[c11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ase_action_enable
<LI><a href="#[c15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ase_action_disable
<LI><a href="#[c10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ase_action_cfg_qos
<LI><a href="#[c0f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ase_action_cfg_codec
</UL>
<BR>[Called By]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ascs_attr_write_cb
</UL>

<P><STRONG><a name="[c16]"></a>ascs_handle_cig_mgr_msg</STRONG> (Thumb, 940 bytes, Stack size 88 bytes, ascs_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 416<LI>Call Chain = ascs_handle_cig_mgr_msg &rArr; ase_switch_to_streaming &rArr; ascs_check_current_state &rArr; ase_action_released &rArr;  ascs_check_current_state (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_get_conn_handle
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[bfe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cig_mgr_get_isoch_info
<LI><a href="#[c18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cig_mgr_get_cis_info
<LI><a href="#[c17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cig_mgr_get_conn_id
<LI><a href="#[c1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_mgr_dispatch
<LI><a href="#[c1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_link_find_by_conn_id
<LI><a href="#[c0a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ase_switch_to_streaming
<LI><a href="#[c1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ase_switch_to_qos_cfg
<LI><a href="#[c1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ase_sm_send_notify
<LI><a href="#[c19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ase_find_by_cig_cis
<LI><a href="#[c07]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ase_action_released
<LI><a href="#[c1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ascs_change_state
<LI><a href="#[c08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ase_sm_check_iosch_status
<LI><a href="#[c06]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ascs_check_current_state
<LI><a href="#[c02]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ascs_remove_data_path
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ascs_mgr.o(.text)
</UL>
<P><STRONG><a name="[c1f]"></a>ascs_check_ase_state_when_disconnect</STRONG> (Thumb, 124 bytes, Stack size 32 bytes, ascs_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = ascs_check_ase_state_when_disconnect &rArr; ble_audio_ual_set_pending_link_cccd &rArr; ble_audio_link_find_by_addr
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[c20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;server_get_start_handle
<LI><a href="#[c21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_ual_set_pending_link_cccd
</UL>
<BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ascs_dm_cback
</UL>

<P><STRONG><a name="[c22]"></a>ascs_handle_pending_cccd</STRONG> (Thumb, 172 bytes, Stack size 48 bytes, ascs_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = ascs_handle_pending_cccd &rArr; ascs_send_ase_notify &rArr; gatt_svc_send_data &rArr; gatt_svc_send_data_in_queue &rArr; calloc
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[c20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;server_get_start_handle
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[c25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_ual_clear_pending_cccd
<LI><a href="#[c23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ase_gen_char_data
<LI><a href="#[c24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ascs_send_ase_notify
</UL>
<BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ascs_dm_cback
</UL>

<P><STRONG><a name="[163]"></a>ascs_attr_read_cb</STRONG> (Thumb, 130 bytes, Stack size 56 bytes, ascs_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = ascs_attr_read_cb &rArr; ase_gen_char_data &rArr; ase_find_by_ase_id &rArr; ble_audio_link_find_by_conn_handle
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[baf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_svc_read_confirm
<LI><a href="#[c23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ase_gen_char_data
<LI><a href="#[c2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ascs_get_ase_id
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ascs_mgr.o(.constdata)
</UL>
<P><STRONG><a name="[164]"></a>ascs_attr_write_cb</STRONG> (Thumb, 112 bytes, Stack size 40 bytes, ascs_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 504<LI>Call Chain = ascs_attr_write_cb &rArr; ase_handle_remote_cp &rArr; ase_action_cfg_codec &rArr; ascs_check_current_state &rArr; ase_action_released &rArr;  ascs_check_current_state (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[c2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ase_check_cp_data
<LI><a href="#[c0b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ase_handle_remote_cp
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ascs_mgr.o(.constdata)
</UL>
<P><STRONG><a name="[165]"></a>ascs_cccd_update_cb</STRONG> (Thumb, 130 bytes, Stack size 48 bytes, ascs_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = ascs_cccd_update_cb &rArr; ble_audio_mgr_send_server_cccd_info &rArr; gatt_svc_find_char_uuid_by_index
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[c2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_srv_set_cccd_flags
<LI><a href="#[c2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_srv_alloc_by_srv_id
<LI><a href="#[c2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_mgr_send_server_cccd_info
<LI><a href="#[c2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ascs_get_ase_id
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ascs_mgr.o(.constdata)
</UL>
<P><STRONG><a name="[c2f]"></a>ascs_init</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, ascs_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = ascs_init &rArr; ascs_add_service &rArr; gatt_svc_add &rArr; calloc
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[c30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cig_mgr_reg_acceptor_cb
<LI><a href="#[c31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_dm_cback_register
<LI><a href="#[c32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ascs_add_service
</UL>
<BR>[Called By]<UL><LI><a href="#[870]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bap_role_init
</UL>

<P><STRONG><a name="[bfd]"></a>ase_find_by_ase_id</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, ase_sm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = ase_find_by_ase_id &rArr; ble_audio_link_find_by_conn_handle
</UL>
<BR>[Calls]<UL><LI><a href="#[c01]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_link_find_by_conn_handle
</UL>
<BR>[Called By]<UL><LI><a href="#[818]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ascs_app_ctl_handshake
<LI><a href="#[891]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ascs_get_ase_prefer_qos
<LI><a href="#[87e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ascs_get_ase_data
<LI><a href="#[892]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ascs_cfg_ase_prefer_qos
<LI><a href="#[8a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ascs_action_release
<LI><a href="#[89a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ascs_action_rec_start_ready
<LI><a href="#[c23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ase_gen_char_data
<LI><a href="#[c2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ase_check_cp_data
<LI><a href="#[c0b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ase_handle_remote_cp
</UL>

<P><STRONG><a name="[c19]"></a>ase_find_by_cig_cis</STRONG> (Thumb, 136 bytes, Stack size 32 bytes, ase_sm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = ase_find_by_cig_cis &rArr; ble_audio_link_find_by_conn_handle
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[c01]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_link_find_by_conn_handle
</UL>
<BR>[Called By]<UL><LI><a href="#[c2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ase_check_cp_data
<LI><a href="#[c16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ascs_handle_cig_mgr_msg
</UL>

<P><STRONG><a name="[c28]"></a>ase_sm_link_init</STRONG> (Thumb, 146 bytes, Stack size 16 bytes, ase_sm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = ase_sm_link_init &rArr; ble_audio_link_find_by_conn_handle
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calloc
<LI><a href="#[c01]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_link_find_by_conn_handle
</UL>
<BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ascs_dm_cback
</UL>

<P><STRONG><a name="[c29]"></a>ase_sm_link_free</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, ase_sm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = ase_sm_link_free &rArr; ble_audio_link_find_by_conn_handle
</UL>
<BR>[Calls]<UL><LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[c01]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_link_find_by_conn_handle
</UL>
<BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ascs_dm_cback
</UL>

<P><STRONG><a name="[c1d]"></a>ascs_change_state</STRONG> (Thumb, 140 bytes, Stack size 24 bytes, ase_sm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ascs_change_state
</UL>
<BR>[Calls]<UL><LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr (via Veneer)
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>
<BR>[Called By]<UL><LI><a href="#[c0a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ase_switch_to_streaming
<LI><a href="#[c1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ase_switch_to_qos_cfg
<LI><a href="#[c07]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ase_action_released
<LI><a href="#[bff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ase_action_release
<LI><a href="#[c14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ase_action_rec_stop_ready
<LI><a href="#[c13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ase_action_rec_start_ready
<LI><a href="#[c11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ase_action_enable
<LI><a href="#[c15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ase_action_disable
<LI><a href="#[c10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ase_action_cfg_qos
<LI><a href="#[c0f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ase_action_cfg_codec
<LI><a href="#[c16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ascs_handle_cig_mgr_msg
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ascs_dm_cback
</UL>

<P><STRONG><a name="[c23]"></a>ase_gen_char_data</STRONG> (Thumb, 252 bytes, Stack size 40 bytes, ase_sm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = ase_gen_char_data &rArr; ase_find_by_ase_id &rArr; ble_audio_link_find_by_conn_handle
</UL>
<BR>[Calls]<UL><LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calloc
<LI><a href="#[bfd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ase_find_by_ase_id
</UL>
<BR>[Called By]<UL><LI><a href="#[c1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ase_sm_send_notify
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ascs_attr_read_cb
<LI><a href="#[c22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ascs_handle_pending_cccd
</UL>

<P><STRONG><a name="[87e]"></a>ascs_get_ase_data</STRONG> (Thumb, 110 bytes, Stack size 16 bytes, ase_sm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = ascs_get_ase_data &rArr; ase_find_by_ase_id &rArr; ble_audio_link_find_by_conn_handle
</UL>
<BR>[Calls]<UL><LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4 (via Veneer)
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[bfd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ase_find_by_ase_id
</UL>
<BR>[Called By]<UL><LI><a href="#[87d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_release_ascs_action
<LI><a href="#[c1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ase_sm_send_notify
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ascs_dm_cback
</UL>

<P><STRONG><a name="[891]"></a>ascs_get_ase_prefer_qos</STRONG> (Thumb, 228 bytes, Stack size 40 bytes, ase_sm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = ascs_get_ase_prefer_qos &rArr; ase_find_by_ase_id &rArr; ble_audio_link_find_by_conn_handle
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[bfd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ase_find_by_ase_id
</UL>
<BR>[Called By]<UL><LI><a href="#[88f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_prefer_qos
</UL>

<P><STRONG><a name="[892]"></a>ascs_cfg_ase_prefer_qos</STRONG> (Thumb, 182 bytes, Stack size 40 bytes, ase_sm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = ascs_cfg_ase_prefer_qos &rArr; ase_find_by_ase_id &rArr; ble_audio_link_find_by_conn_handle
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[bfd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ase_find_by_ase_id
</UL>
<BR>[Called By]<UL><LI><a href="#[88f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_prefer_qos
</UL>

<P><STRONG><a name="[c1e]"></a>ase_sm_send_notify</STRONG> (Thumb, 86 bytes, Stack size 64 bytes, ase_sm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = ase_sm_send_notify &rArr; ascs_send_ase_notify &rArr; gatt_svc_send_data &rArr; gatt_svc_send_data_in_queue &rArr; calloc
</UL>
<BR>[Calls]<UL><LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[87e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ascs_get_ase_data
<LI><a href="#[c1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_mgr_dispatch
<LI><a href="#[c23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ase_gen_char_data
<LI><a href="#[c24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ascs_send_ase_notify
</UL>
<BR>[Called By]<UL><LI><a href="#[c0a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ase_switch_to_streaming
<LI><a href="#[c1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ase_switch_to_qos_cfg
<LI><a href="#[c12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ase_action_update_metadata
<LI><a href="#[c07]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ase_action_released
<LI><a href="#[bff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ase_action_release
<LI><a href="#[c14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ase_action_rec_stop_ready
<LI><a href="#[c13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ase_action_rec_start_ready
<LI><a href="#[c11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ase_action_enable
<LI><a href="#[c15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ase_action_disable
<LI><a href="#[c10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ase_action_cfg_qos
<LI><a href="#[c0f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ase_action_cfg_codec
<LI><a href="#[c16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ascs_handle_cig_mgr_msg
</UL>

<P><STRONG><a name="[c0f]"></a>ase_action_cfg_codec</STRONG> (Thumb, 424 bytes, Stack size 88 bytes, ase_sm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 400<LI>Call Chain = ase_action_cfg_codec &rArr; ascs_check_current_state &rArr; ase_action_released &rArr;  ascs_check_current_state (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calloc
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[890]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qos_preferred_cfg_get_by_codec
<LI><a href="#[c0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_cfg_parse
<LI><a href="#[c1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_mgr_dispatch
<LI><a href="#[c1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ase_sm_send_notify
<LI><a href="#[c1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ascs_change_state
<LI><a href="#[c06]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ascs_check_current_state
</UL>
<BR>[Called By]<UL><LI><a href="#[c0b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ase_handle_remote_cp
</UL>

<P><STRONG><a name="[c10]"></a>ase_action_cfg_qos</STRONG> (Thumb, 162 bytes, Stack size 48 bytes, ase_sm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 360<LI>Call Chain = ase_action_cfg_qos &rArr; ascs_check_current_state &rArr; ase_action_released &rArr;  ascs_check_current_state (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[c1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ase_sm_send_notify
<LI><a href="#[c1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ascs_change_state
<LI><a href="#[c06]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ascs_check_current_state
</UL>
<BR>[Called By]<UL><LI><a href="#[c0b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ase_handle_remote_cp
</UL>

<P><STRONG><a name="[c11]"></a>ase_action_enable</STRONG> (Thumb, 202 bytes, Stack size 32 bytes, ase_sm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = ase_action_enable &rArr; ascs_check_current_state &rArr; ase_action_released &rArr;  ascs_check_current_state (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calloc
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[c1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ase_sm_send_notify
<LI><a href="#[c1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ascs_change_state
<LI><a href="#[c08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ase_sm_check_iosch_status
<LI><a href="#[c06]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ascs_check_current_state
</UL>
<BR>[Called By]<UL><LI><a href="#[c0b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ase_handle_remote_cp
</UL>

<P><STRONG><a name="[c13]"></a>ase_action_rec_start_ready</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, ase_sm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = ase_action_rec_start_ready &rArr; ascs_check_current_state &rArr; ase_action_released &rArr;  ascs_check_current_state (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[c1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ase_sm_send_notify
<LI><a href="#[c1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ascs_change_state
<LI><a href="#[c08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ase_sm_check_iosch_status
<LI><a href="#[c06]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ascs_check_current_state
</UL>
<BR>[Called By]<UL><LI><a href="#[c0b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ase_handle_remote_cp
</UL>

<P><STRONG><a name="[c14]"></a>ase_action_rec_stop_ready</STRONG> (Thumb, 108 bytes, Stack size 24 bytes, ase_sm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = ase_action_rec_stop_ready &rArr; ascs_check_current_state &rArr; ase_action_released &rArr;  ascs_check_current_state (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[c1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ase_sm_send_notify
<LI><a href="#[c1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ascs_change_state
<LI><a href="#[c08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ase_sm_check_iosch_status
<LI><a href="#[c06]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ascs_check_current_state
</UL>
<BR>[Called By]<UL><LI><a href="#[c0b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ase_handle_remote_cp
</UL>

<P><STRONG><a name="[c0a]"></a>ase_switch_to_streaming</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, ase_sm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = ase_switch_to_streaming &rArr; ascs_check_current_state &rArr; ase_action_released &rArr;  ascs_check_current_state (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[c1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ase_sm_send_notify
<LI><a href="#[c1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ascs_change_state
<LI><a href="#[c06]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ascs_check_current_state
</UL>
<BR>[Called By]<UL><LI><a href="#[89a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ascs_action_rec_start_ready
<LI><a href="#[c16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ascs_handle_cig_mgr_msg
</UL>

<P><STRONG><a name="[c1c]"></a>ase_switch_to_qos_cfg</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, ase_sm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = ase_switch_to_qos_cfg &rArr; ascs_check_current_state &rArr; ase_action_released &rArr;  ascs_check_current_state (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[c1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ase_sm_send_notify
<LI><a href="#[c1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ascs_change_state
<LI><a href="#[c06]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ascs_check_current_state
</UL>
<BR>[Called By]<UL><LI><a href="#[c16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ascs_handle_cig_mgr_msg
</UL>

<P><STRONG><a name="[c15]"></a>ase_action_disable</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, ase_sm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = ase_action_disable &rArr; ascs_check_current_state &rArr; ase_action_released &rArr;  ascs_check_current_state (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[c1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ase_sm_send_notify
<LI><a href="#[c1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ascs_change_state
<LI><a href="#[c06]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ascs_check_current_state
</UL>
<BR>[Called By]<UL><LI><a href="#[c0b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ase_handle_remote_cp
</UL>

<P><STRONG><a name="[c12]"></a>ase_action_update_metadata</STRONG> (Thumb, 134 bytes, Stack size 32 bytes, ase_sm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = ase_action_update_metadata &rArr; ascs_check_current_state &rArr; ase_action_released &rArr;  ascs_check_current_state (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calloc
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[c1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ase_sm_send_notify
<LI><a href="#[c06]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ascs_check_current_state
</UL>
<BR>[Called By]<UL><LI><a href="#[c0b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ase_handle_remote_cp
</UL>

<P><STRONG><a name="[bff]"></a>ase_action_release</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, ase_sm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = ase_action_release &rArr; ascs_check_current_state &rArr; ase_action_released &rArr;  ascs_check_current_state (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[c1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ase_sm_send_notify
<LI><a href="#[c1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ascs_change_state
<LI><a href="#[c06]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ascs_check_current_state
</UL>
<BR>[Called By]<UL><LI><a href="#[87f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ascs_action_release_by_cig
<LI><a href="#[8a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ascs_action_release
<LI><a href="#[c0b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ase_handle_remote_cp
</UL>

<P><STRONG><a name="[c07]"></a>ase_action_released</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, ase_sm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 232 + In Cycle
<LI>Call Chain = ase_action_released &rArr;  ascs_check_current_state (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[c1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ase_sm_send_notify
<LI><a href="#[c1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ascs_change_state
<LI><a href="#[c08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ase_sm_check_iosch_status
<LI><a href="#[c06]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ascs_check_current_state
</UL>
<BR>[Called By]<UL><LI><a href="#[c16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ascs_handle_cig_mgr_msg
<LI><a href="#[c06]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ascs_check_current_state
</UL>

<P><STRONG><a name="[870]"></a>bap_role_init</STRONG> (Thumb, 252 bytes, Stack size 24 bytes, bap.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = bap_role_init &rArr; ascs_init &rArr; ascs_add_service &rArr; gatt_svc_add &rArr; calloc
</UL>
<BR>[Calls]<UL><LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_set_gap_param
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[c35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_big_mgr_sync_receiver_init
<LI><a href="#[c33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_big_mgr_init
<LI><a href="#[c36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cig_mgr_init
<LI><a href="#[c34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_pa_sync_init
<LI><a href="#[c37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_ext_adv_gap_msg_info_way
<LI><a href="#[c38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_init
<LI><a href="#[c31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_dm_cback_register
<LI><a href="#[c2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ascs_init
</UL>
<BR>[Called By]<UL><LI><a href="#[86c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_profile_bap_init
</UL>

<P><STRONG><a name="[c39]"></a>bass_send_brs_notify</STRONG> (Thumb, 94 bytes, Stack size 40 bytes, bass_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = bass_send_brs_notify &rArr; gatt_svc_send_data &rArr; gatt_svc_send_data_in_queue &rArr; calloc
</UL>
<BR>[Calls]<UL><LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[801]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_svc_send_data
<LI><a href="#[c3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_brs_gen_char_data
</UL>
<BR>[Called By]<UL><LI><a href="#[c3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_send_all_notify
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_dm_cback
</UL>

<P><STRONG><a name="[c3b]"></a>bass_send_all_notify</STRONG> (Thumb, 176 bytes, Stack size 48 bytes, bass_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = bass_send_all_notify &rArr; bass_send_brs_notify &rArr; gatt_svc_send_data &rArr; gatt_svc_send_data_in_queue &rArr; calloc
</UL>
<BR>[Calls]<UL><LI><a href="#[c20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;server_get_start_handle
<LI><a href="#[c3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_ual_set_pending_cccd
<LI><a href="#[c39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_send_brs_notify
<LI><a href="#[c27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_srv_find_by_srv_id
<LI><a href="#[c1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_mgr_dispatch
</UL>
<BR>[Called By]<UL><LI><a href="#[8ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_send_broadcast_code_required
<LI><a href="#[c44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_pa_proc_sm_execute
<LI><a href="#[c40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_big_proc_sm_execute
<LI><a href="#[c4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_handle_cp_data
<LI><a href="#[c3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_audio_sync_cb
<LI><a href="#[c3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_handle_base_data
</UL>

<P><STRONG><a name="[c3d]"></a>bass_handle_base_data</STRONG> (Thumb, 258 bytes, Stack size 40 bytes, bass_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = bass_handle_base_data &rArr; bass_send_all_notify &rArr; bass_send_brs_notify &rArr; gatt_svc_send_data &rArr; gatt_svc_send_data_in_queue &rArr; calloc
</UL>
<BR>[Calls]<UL><LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calloc
<LI><a href="#[c3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_send_all_notify
</UL>
<BR>[Called By]<UL><LI><a href="#[c3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_audio_sync_cb
</UL>

<P><STRONG><a name="[c3e]"></a>bass_audio_sync_cb</STRONG> (Thumb, 490 bytes, Stack size 88 bytes, bass_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = bass_audio_sync_cb &rArr; bass_pa_proc_sm_execute &rArr; bass_send_all_notify &rArr; bass_send_brs_notify &rArr; gatt_svc_send_data &rArr; gatt_svc_send_data_in_queue &rArr; calloc
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[8e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_sync_get_info
<LI><a href="#[c43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_sync_update_addr
<LI><a href="#[c44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_pa_proc_sm_execute
<LI><a href="#[c3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_brs_find_by_handle
<LI><a href="#[c42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_brs_delete
<LI><a href="#[c41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_brs_add
<LI><a href="#[c40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_big_proc_sm_execute
<LI><a href="#[c3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_handle_base_data
<LI><a href="#[c3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_send_all_notify
<LI><a href="#[c1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_mgr_dispatch
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bass_mgr.o(.text)
</UL>
<P><STRONG><a name="[c45]"></a>bass_delete_source_int</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, bass_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = bass_delete_source_int &rArr; bass_brs_delete &rArr; sys_timer_delete &rArr; sys_hp_timer_list_remove &rArr; hw_timer_restart &rArr; hw_timer_safe_stop &rArr; hw_timer_set_div
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[c46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_sync_release_int
<LI><a href="#[c42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_brs_delete
</UL>
<BR>[Called By]<UL><LI><a href="#[c4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_handle_cp_data
</UL>

<P><STRONG><a name="[8ce]"></a>bass_send_broadcast_code_required</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, bass_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = bass_send_broadcast_code_required &rArr; bass_send_all_notify &rArr; bass_send_brs_notify &rArr; gatt_svc_send_data &rArr; gatt_svc_send_data_in_queue &rArr; calloc
</UL>
<BR>[Calls]<UL><LI><a href="#[c47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_brs_find_by_id
<LI><a href="#[c3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_send_all_notify
</UL>
<BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_sync_cb
</UL>

<P><STRONG><a name="[c48]"></a>bass_handle_pa_sync</STRONG> (Thumb, 168 bytes, Stack size 32 bytes, bass_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = bass_handle_pa_sync &rArr; bass_pa_proc_sm_execute &rArr; bass_send_all_notify &rArr; bass_send_brs_notify &rArr; gatt_svc_send_data &rArr; gatt_svc_send_data_in_queue &rArr; calloc
</UL>
<BR>[Calls]<UL><LI><a href="#[c4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_check_supported_features
<LI><a href="#[c4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_set_past_recipient_param
<LI><a href="#[c49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_check_remote_features
<LI><a href="#[c44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_pa_proc_sm_execute
<LI><a href="#[c1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_mgr_dispatch
<LI><a href="#[c01]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_link_find_by_conn_handle
</UL>
<BR>[Called By]<UL><LI><a href="#[c4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_handle_cp_data
</UL>

<P><STRONG><a name="[c4c]"></a>bass_handle_update_bis_info</STRONG> (Thumb, 486 bytes, Stack size 72 bytes, bass_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = bass_handle_update_bis_info &rArr; calloc
</UL>
<BR>[Calls]<UL><LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calloc
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>
<BR>[Called By]<UL><LI><a href="#[c4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_handle_cp_data
</UL>

<P><STRONG><a name="[c4d]"></a>bass_handle_cp_data</STRONG> (Thumb, 534 bytes, Stack size 48 bytes, bass_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = bass_handle_cp_data &rArr; bass_handle_pa_sync &rArr; bass_pa_proc_sm_execute &rArr; bass_send_all_notify &rArr; bass_send_brs_notify &rArr; gatt_svc_send_data &rArr; gatt_svc_send_data_in_queue &rArr; calloc
</UL>
<BR>[Calls]<UL><LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[c4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_sync_find
<LI><a href="#[c4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_sync_create_int
<LI><a href="#[c47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_brs_find_by_id
<LI><a href="#[c42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_brs_delete
<LI><a href="#[c41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_brs_add
<LI><a href="#[c40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_big_proc_sm_execute
<LI><a href="#[c4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_handle_update_bis_info
<LI><a href="#[c48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_handle_pa_sync
<LI><a href="#[c45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_delete_source_int
<LI><a href="#[c3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_send_all_notify
<LI><a href="#[c1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_mgr_dispatch
</UL>
<BR>[Called By]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_attr_write_cb
</UL>

<P><STRONG><a name="[c50]"></a>bass_cp_check_msg_len</STRONG> (Thumb, 190 bytes, Stack size 24 bytes, bass_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = bass_cp_check_msg_len
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[c51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_cp_prase_data
</UL>

<P><STRONG><a name="[c51]"></a>bass_cp_prase_data</STRONG> (Thumb, 820 bytes, Stack size 56 bytes, bass_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = bass_cp_prase_data &rArr; bass_cp_check_msg_len
</UL>
<BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calloc
<LI><a href="#[c47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_brs_find_by_id
<LI><a href="#[c50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_cp_check_msg_len
</UL>
<BR>[Called By]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_attr_write_cb
</UL>

<P><STRONG><a name="[c52]"></a>bass_get_source_id</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, bass_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = bass_get_source_id
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_cccd_update_cb
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_attr_read_cb
</UL>

<P><STRONG><a name="[166]"></a>bass_attr_read_cb</STRONG> (Thumb, 134 bytes, Stack size 56 bytes, bass_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = bass_attr_read_cb &rArr; bass_brs_gen_char_data &rArr; calloc
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[baf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_svc_read_confirm
<LI><a href="#[c3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_brs_gen_char_data
<LI><a href="#[c52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_get_source_id
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bass_mgr.o(.constdata)
</UL>
<P><STRONG><a name="[167]"></a>bass_attr_write_cb</STRONG> (Thumb, 150 bytes, Stack size 32 bytes, bass_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = bass_attr_write_cb &rArr; bass_handle_cp_data &rArr; bass_handle_pa_sync &rArr; bass_pa_proc_sm_execute &rArr; bass_send_all_notify &rArr; bass_send_brs_notify &rArr; gatt_svc_send_data &rArr; gatt_svc_send_data_in_queue &rArr; calloc
</UL>
<BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[c51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_cp_prase_data
<LI><a href="#[c4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_handle_cp_data
<LI><a href="#[c1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_mgr_dispatch
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bass_mgr.o(.constdata)
</UL>
<P><STRONG><a name="[168]"></a>bass_cccd_update_cb</STRONG> (Thumb, 100 bytes, Stack size 40 bytes, bass_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = bass_cccd_update_cb &rArr; ble_audio_mgr_send_server_cccd_info &rArr; gatt_svc_find_char_uuid_by_index
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[c52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_get_source_id
<LI><a href="#[c2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_srv_set_cccd_flags
<LI><a href="#[c2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_srv_alloc_by_srv_id
<LI><a href="#[c2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_mgr_send_server_cccd_info
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bass_mgr.o(.constdata)
</UL>
<P><STRONG><a name="[c53]"></a>bass_add_service</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, bass_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = bass_add_service &rArr; gatt_svc_add &rArr; calloc
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[802]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_svc_add
</UL>
<BR>[Called By]<UL><LI><a href="#[c38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_init
</UL>

<P><STRONG><a name="[c38]"></a>bass_init</STRONG> (Thumb, 142 bytes, Stack size 16 bytes, bass_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = bass_init &rArr; bass_add_service &rArr; gatt_svc_add &rArr; calloc
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calloc
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[c54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_sync_register_bass_cb
<LI><a href="#[c53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_add_service
<LI><a href="#[c31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_dm_cback_register
</UL>
<BR>[Called By]<UL><LI><a href="#[870]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bap_role_init
</UL>

<P><STRONG><a name="[83c]"></a>codec_preferred_cfg_get</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, codec_qos.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[83b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_pacs_update_frame_len
</UL>

<P><STRONG><a name="[890]"></a>qos_preferred_cfg_get_by_codec</STRONG> (Thumb, 84 bytes, Stack size 20 bytes, codec_qos.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = qos_preferred_cfg_get_by_codec
</UL>
<BR>[Called By]<UL><LI><a href="#[88f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_prefer_qos
<LI><a href="#[c0f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ase_action_cfg_codec
</UL>

<P><STRONG><a name="[c0d]"></a>codec_sdu_interval_get</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, codec_qos.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = codec_sdu_interval_get
</UL>
<BR>[Called By]<UL><LI><a href="#[c0b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ase_handle_remote_cp
</UL>

<P><STRONG><a name="[c5f]"></a>pac_find_by_id</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, pac_mgr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pacs_handle_pending_cccd
</UL>

<P><STRONG><a name="[c61]"></a>pac_find_by_index</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, pac_mgr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pacs_cccd_update_cb
</UL>

<P><STRONG><a name="[c55]"></a>pac_find_record</STRONG> (Thumb, 116 bytes, Stack size 32 bytes, pac_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = pac_find_record &rArr; codec_cap_check &rArr; codec_cap_parse
</UL>
<BR>[Calls]<UL><LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp (via Veneer)
<LI><a href="#[c56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_cap_check
</UL>
<BR>[Called By]<UL><LI><a href="#[c57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pac_find_by_codec_data
</UL>

<P><STRONG><a name="[c57]"></a>pac_find_by_codec_data</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, pac_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = pac_find_by_codec_data &rArr; pac_find_record &rArr; codec_cap_check &rArr; codec_cap_parse
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[c55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pac_find_record
</UL>
<BR>[Called By]<UL><LI><a href="#[1004]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ase_check_cfg_codec_param
</UL>

<P><STRONG><a name="[c58]"></a>pac_check_record</STRONG> (Thumb, 140 bytes, Stack size 24 bytes, pac_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = pac_check_record
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[839]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pacs_pac_add
</UL>

<P><STRONG><a name="[c60]"></a>pacs_gen_pac_records</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, pac_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = pacs_gen_pac_records
</UL>
<BR>[Called By]<UL><LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pacs_attr_read_cb
</UL>

<P><STRONG><a name="[839]"></a>pacs_pac_add</STRONG> (Thumb, 168 bytes, Stack size 32 bytes, pac_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = pacs_pac_add &rArr; pac_check_record
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calloc
<LI><a href="#[c58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pac_check_record
</UL>
<BR>[Called By]<UL><LI><a href="#[838]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_pacs_init
</UL>

<P><STRONG><a name="[c59]"></a>pac_print_info</STRONG> (Thumb, 84 bytes, Stack size 32 bytes, pac_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = pac_print_info
</UL>
<BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[83a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pacs_init
</UL>

<P><STRONG><a name="[c5a]"></a>pacs_send_notify</STRONG> (Thumb, 56 bytes, Stack size 32 bytes, pacs_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = pacs_send_notify &rArr; gatt_svc_send_data &rArr; gatt_svc_send_data_in_queue &rArr; calloc
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[801]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_svc_send_data
</UL>
<BR>[Called By]<UL><LI><a href="#[836]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pacs_update_available_contexts
<LI><a href="#[c5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pacs_handle_pending_cccd
<LI><a href="#[c5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pacs_send_all_notify
</UL>

<P><STRONG><a name="[c5b]"></a>pacs_send_all_notify</STRONG> (Thumb, 128 bytes, Stack size 56 bytes, pacs_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = pacs_send_all_notify &rArr; pacs_send_notify &rArr; gatt_svc_send_data &rArr; gatt_svc_send_data_in_queue &rArr; calloc
</UL>
<BR>[Calls]<UL><LI><a href="#[c20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;server_get_start_handle
<LI><a href="#[c5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pacs_send_notify
<LI><a href="#[c3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_ual_set_pending_cccd
<LI><a href="#[c27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_srv_find_by_srv_id
</UL>
<BR>[Called By]<UL><LI><a href="#[c5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pacs_write_source_audio_location_post_proc
<LI><a href="#[c5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pacs_write_sink_audio_location_post_proc
</UL>

<P><STRONG><a name="[c5c]"></a>pacs_write_sink_audio_location_post_proc</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, pacs_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = pacs_write_sink_audio_location_post_proc &rArr; pacs_send_all_notify &rArr; pacs_send_notify &rArr; gatt_svc_send_data &rArr; gatt_svc_send_data_in_queue &rArr; calloc
</UL>
<BR>[Calls]<UL><LI><a href="#[c5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pacs_send_all_notify
</UL>
<BR>[Address Reference Count : 1]<UL><LI> pacs_mgr.o(.text)
</UL>
<P><STRONG><a name="[c5d]"></a>pacs_write_source_audio_location_post_proc</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, pacs_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = pacs_write_source_audio_location_post_proc &rArr; pacs_send_all_notify &rArr; pacs_send_notify &rArr; gatt_svc_send_data &rArr; gatt_svc_send_data_in_queue &rArr; calloc
</UL>
<BR>[Calls]<UL><LI><a href="#[c5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pacs_send_all_notify
</UL>
<BR>[Address Reference Count : 1]<UL><LI> pacs_mgr.o(.text)
</UL>
<P><STRONG><a name="[832]"></a>pacs_available_contexts_read_cfm</STRONG> (Thumb, 54 bytes, Stack size 32 bytes, pacs_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = pacs_available_contexts_read_cfm &rArr; gatt_svc_read_confirm
</UL>
<BR>[Calls]<UL><LI><a href="#[baf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_svc_read_confirm
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_pacs_ble_audio_cback
</UL>

<P><STRONG><a name="[836]"></a>pacs_update_available_contexts</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, pacs_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = pacs_update_available_contexts &rArr; pacs_send_notify &rArr; gatt_svc_send_data &rArr; gatt_svc_send_data_in_queue &rArr; calloc
</UL>
<BR>[Calls]<UL><LI><a href="#[c5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pacs_send_notify
</UL>
<BR>[Called By]<UL><LI><a href="#[3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_pacs_init_available_context
<LI><a href="#[837]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_pacs_set_sink_available_contexts
</UL>

<P><STRONG><a name="[c5e]"></a>pacs_handle_pending_cccd</STRONG> (Thumb, 400 bytes, Stack size 48 bytes, pacs_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = pacs_handle_pending_cccd &rArr; pacs_send_notify &rArr; gatt_svc_send_data &rArr; gatt_svc_send_data_in_queue &rArr; calloc
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[c20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;server_get_start_handle
<LI><a href="#[c5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pacs_send_notify
<LI><a href="#[c5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pac_find_by_id
<LI><a href="#[c25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_ual_clear_pending_cccd
</UL>
<BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pacs_dm_cback
</UL>

<P><STRONG><a name="[169]"></a>pacs_attr_read_cb</STRONG> (Thumb, 212 bytes, Stack size 32 bytes, pacs_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = pacs_attr_read_cb &rArr; ble_audio_mgr_dispatch
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[c60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pacs_gen_pac_records
<LI><a href="#[c1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_mgr_dispatch
</UL>
<BR>[Address Reference Count : 1]<UL><LI> pacs_mgr.o(.constdata)
</UL>
<P><STRONG><a name="[16a]"></a>pacs_attr_write_cb</STRONG> (Thumb, 236 bytes, Stack size 48 bytes, pacs_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = pacs_attr_write_cb &rArr; ble_audio_mgr_dispatch
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[c1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_mgr_dispatch
</UL>
<BR>[Address Reference Count : 1]<UL><LI> pacs_mgr.o(.constdata)
</UL>
<P><STRONG><a name="[16b]"></a>pacs_cccd_update_cb</STRONG> (Thumb, 268 bytes, Stack size 64 bytes, pacs_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = pacs_cccd_update_cb &rArr; ble_audio_mgr_send_server_cccd_info &rArr; gatt_svc_find_char_uuid_by_index
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[c61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pac_find_by_index
<LI><a href="#[c2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_srv_set_cccd_flags
<LI><a href="#[c2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_srv_alloc_by_srv_id
<LI><a href="#[c2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_mgr_send_server_cccd_info
</UL>
<BR>[Address Reference Count : 1]<UL><LI> pacs_mgr.o(.constdata)
</UL>
<P><STRONG><a name="[83a]"></a>pacs_init</STRONG> (Thumb, 234 bytes, Stack size 32 bytes, pacs_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = pacs_init &rArr; pacs_add_service &rArr; pacs_create_table &rArr; calloc
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calloc
<LI><a href="#[c62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pacs_add_service
<LI><a href="#[c59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pac_print_info
<LI><a href="#[c31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_dm_cback_register
</UL>
<BR>[Called By]<UL><LI><a href="#[838]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_pacs_init
</UL>

<P><STRONG><a name="[c47]"></a>bass_brs_find_by_id</STRONG> (Thumb, 58 bytes, Stack size 12 bytes, bass_brs_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = bass_brs_find_by_id
</UL>
<BR>[Called By]<UL><LI><a href="#[8ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_send_broadcast_code_required
<LI><a href="#[8ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_cfg_prefer_bis_sync
<LI><a href="#[c51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_cp_prase_data
<LI><a href="#[c4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_handle_cp_data
<LI><a href="#[c68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_past_timer_callback
</UL>

<P><STRONG><a name="[c3f]"></a>bass_brs_find_by_handle</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, bass_brs_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = bass_brs_find_by_handle
</UL>
<BR>[Called By]<UL><LI><a href="#[c3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_audio_sync_cb
</UL>

<P><STRONG><a name="[c63]"></a>bass_brs_find_by_src_info</STRONG> (Thumb, 84 bytes, Stack size 24 bytes, bass_brs_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = bass_brs_find_by_src_info
</UL>
<BR>[Calls]<UL><LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[c41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_brs_add
</UL>

<P><STRONG><a name="[c82]"></a>bass_brs_get_empty_char_num</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, bass_brs_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = bass_brs_get_empty_char_num
</UL>
<BR>[Called By]<UL><LI><a href="#[c4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_sync_create_int
</UL>

<P><STRONG><a name="[c64]"></a>bass_brs_get_empty_char</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, bass_brs_mgr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_brs_add
</UL>

<P><STRONG><a name="[c41]"></a>bass_brs_add</STRONG> (Thumb, 156 bytes, Stack size 32 bytes, bass_brs_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = bass_brs_add &rArr; bass_brs_find_by_src_info
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[c64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_brs_get_empty_char
<LI><a href="#[c63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_brs_find_by_src_info
</UL>
<BR>[Called By]<UL><LI><a href="#[c4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_handle_cp_data
<LI><a href="#[c3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_audio_sync_cb
</UL>

<P><STRONG><a name="[c3a]"></a>bass_brs_gen_char_data</STRONG> (Thumb, 352 bytes, Stack size 40 bytes, bass_brs_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = bass_brs_gen_char_data &rArr; calloc
</UL>
<BR>[Calls]<UL><LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calloc
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_attr_read_cb
<LI><a href="#[c39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_send_brs_notify
</UL>

<P><STRONG><a name="[c65]"></a>bass_stop_past_recipient</STRONG> (Thumb, 96 bytes, Stack size 32 bytes, bass_brs_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = bass_stop_past_recipient &rArr; ble_audio_set_past_recipient_param
</UL>
<BR>[Calls]<UL><LI><a href="#[c4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_set_past_recipient_param
</UL>
<BR>[Called By]<UL><LI><a href="#[c42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_brs_delete
</UL>

<P><STRONG><a name="[c42]"></a>bass_brs_delete</STRONG> (Thumb, 132 bytes, Stack size 16 bytes, bass_brs_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = bass_brs_delete &rArr; sys_timer_delete &rArr; sys_hp_timer_list_remove &rArr; hw_timer_restart &rArr; hw_timer_safe_stop &rArr; hw_timer_set_div
</UL>
<BR>[Calls]<UL><LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[977]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_delete
<LI><a href="#[c46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_sync_release_int
<LI><a href="#[c65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_stop_past_recipient
</UL>
<BR>[Called By]<UL><LI><a href="#[c4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_handle_cp_data
<LI><a href="#[c45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_delete_source_int
<LI><a href="#[c3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_audio_sync_cb
</UL>

<P><STRONG><a name="[c66]"></a>bass_stop_past_timer</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, bass_brs_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = bass_stop_past_timer &rArr; sys_timer_delete &rArr; sys_hp_timer_list_remove &rArr; hw_timer_restart &rArr; hw_timer_safe_stop &rArr; hw_timer_set_div
</UL>
<BR>[Calls]<UL><LI><a href="#[977]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_delete
</UL>
<BR>[Called By]<UL><LI><a href="#[c67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_pa_update_state
</UL>

<P><STRONG><a name="[c67]"></a>bass_pa_update_state</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, bass_brs_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = bass_pa_update_state &rArr; bass_stop_past_timer &rArr; sys_timer_delete &rArr; sys_hp_timer_list_remove &rArr; hw_timer_restart &rArr; hw_timer_safe_stop &rArr; hw_timer_set_div
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[c66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_stop_past_timer
</UL>
<BR>[Called By]<UL><LI><a href="#[c44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_pa_proc_sm_execute
</UL>

<P><STRONG><a name="[c44]"></a>bass_pa_proc_sm_execute</STRONG> (Thumb, 104 bytes, Stack size 40 bytes, bass_brs_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = bass_pa_proc_sm_execute &rArr; bass_send_all_notify &rArr; bass_send_brs_notify &rArr; gatt_svc_send_data &rArr; gatt_svc_send_data_in_queue &rArr; calloc
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[c3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_send_all_notify
<LI><a href="#[c67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_pa_update_state
</UL>
<BR>[Called By]<UL><LI><a href="#[c48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_handle_pa_sync
<LI><a href="#[c3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_audio_sync_cb
<LI><a href="#[c68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_past_timer_callback
</UL>

<P><STRONG><a name="[c68]"></a>bass_past_timer_callback</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, bass_brs_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = bass_past_timer_callback &rArr; bass_pa_proc_sm_execute &rArr; bass_send_all_notify &rArr; bass_send_brs_notify &rArr; gatt_svc_send_data &rArr; gatt_svc_send_data_in_queue &rArr; calloc
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[9b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_id_get
<LI><a href="#[c44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_pa_proc_sm_execute
<LI><a href="#[c47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_brs_find_by_id
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bass_brs_mgr.o(.text)
</UL>
<P><STRONG><a name="[c69]"></a>bass_start_past_timer</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, bass_brs_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = bass_start_past_timer &rArr; sys_timer_start &rArr; sys_hp_timer_list_insert &rArr; hw_timer_restart &rArr; hw_timer_safe_stop &rArr; hw_timer_set_div
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[9b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_start
<LI><a href="#[9b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_create
</UL>
<BR>[Called By]<UL><LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_pa_sync_past_proc
</UL>

<P><STRONG><a name="[c6c]"></a>bass_big_update_bis_state</STRONG> (Thumb, 160 bytes, Stack size 24 bytes, bass_brs_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = bass_big_update_bis_state
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_big_sync_failed_proc
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_big_terminated_proc
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_big_synchronized_proc
</UL>

<P><STRONG><a name="[c40]"></a>bass_big_proc_sm_execute</STRONG> (Thumb, 94 bytes, Stack size 40 bytes, bass_brs_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = bass_big_proc_sm_execute &rArr; bass_send_all_notify &rArr; bass_send_brs_notify &rArr; gatt_svc_send_data &rArr; gatt_svc_send_data_in_queue &rArr; calloc
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[c3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_send_all_notify
</UL>
<BR>[Called By]<UL><LI><a href="#[c4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_handle_cp_data
<LI><a href="#[c3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_audio_sync_cb
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_big_check_info_proc
</UL>

<P><STRONG><a name="[c70]"></a>bass_update_bis_idx</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, bass_brs_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = bass_update_bis_idx
</UL>
<BR>[Called By]<UL><LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_big_check_info_proc
</UL>

<P><STRONG><a name="[8ea]"></a>bass_cfg_prefer_bis_sync</STRONG> (Thumb, 232 bytes, Stack size 40 bytes, bass_brs_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = bass_cfg_prefer_bis_sync &rArr; bass_brs_find_by_id
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[c47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_brs_find_by_id
</UL>
<BR>[Called By]<UL><LI><a href="#[8e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_handle_bass_msg
</UL>

<P><STRONG><a name="[847]"></a>vcs_set_param</STRONG> (Thumb, 148 bytes, Stack size 32 bytes, vcs_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = vcs_set_param &rArr; vcs_send_volume_state_notify_all &rArr; ble_audio_send_notify_all &rArr; gatt_svc_send_data &rArr; gatt_svc_send_data_in_queue &rArr; calloc
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[c74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vcs_send_volume_flags_notify_all
<LI><a href="#[c72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vcs_send_volume_state_notify_all
</UL>
<BR>[Called By]<UL><LI><a href="#[85c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_vol_local_volume_change
<LI><a href="#[845]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_vcs_init
</UL>

<P><STRONG><a name="[8a9]"></a>vcs_get_param</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, vcs_mgr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[85c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_vol_local_volume_change
</UL>

<P><STRONG><a name="[174]"></a>vcs_attr_read_cb</STRONG> (Thumb, 148 bytes, Stack size 48 bytes, vcs_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = vcs_attr_read_cb &rArr; gatt_svc_read_confirm
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[baf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_svc_read_confirm
</UL>
<BR>[Address Reference Count : 1]<UL><LI> vcs_mgr.o(.constdata)
</UL>
<P><STRONG><a name="[175]"></a>vcs_attr_write_cb</STRONG> (Thumb, 118 bytes, Stack size 32 bytes, vcs_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = vcs_attr_write_cb &rArr; vcs_handle_volume_cp &rArr; ble_audio_mgr_dispatch
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[c75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vcs_handle_volume_cp
</UL>
<BR>[Address Reference Count : 1]<UL><LI> vcs_mgr.o(.constdata)
</UL>
<P><STRONG><a name="[176]"></a>vcs_cccd_update_cb</STRONG> (Thumb, 50 bytes, Stack size 32 bytes, vcs_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = vcs_cccd_update_cb &rArr; ble_audio_mgr_send_server_cccd_info &rArr; gatt_svc_find_char_uuid_by_index
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[c2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_mgr_send_server_cccd_info
</UL>
<BR>[Address Reference Count : 1]<UL><LI> vcs_mgr.o(.constdata)
</UL>
<P><STRONG><a name="[c76]"></a>vcs_init</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, vcs_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = vcs_init &rArr; vcs_add_service &rArr; gatt_svc_add &rArr; calloc
</UL>
<BR>[Calls]<UL><LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calloc
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[c77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vcs_add_service
</UL>
<BR>[Called By]<UL><LI><a href="#[846]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_vc_mic_init
</UL>

<P><STRONG><a name="[c49]"></a>ble_audio_check_remote_features</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, ble_audio_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = ble_audio_check_remote_features &rArr; ble_audio_link_find_by_conn_handle
</UL>
<BR>[Calls]<UL><LI><a href="#[c01]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_link_find_by_conn_handle
</UL>
<BR>[Called By]<UL><LI><a href="#[c48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_handle_pa_sync
</UL>

<P><STRONG><a name="[c78]"></a>ble_audio_handle_conn_state_evt</STRONG> (Thumb, 230 bytes, Stack size 32 bytes, ble_audio_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = ble_audio_handle_conn_state_evt &rArr; ble_audio_link_alloc_by_conn_id &rArr; ble_audio_link_find_by_conn_id
</UL>
<BR>[Calls]<UL><LI><a href="#[3da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_get_conn_addr
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_get_conn_handle
<LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_get_conn_param
<LI><a href="#[c7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_svc_get_num
<LI><a href="#[c1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_link_find_by_conn_id
<LI><a href="#[c79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_dm_event_post
<LI><a href="#[c7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_ual_resolve_rpa
<LI><a href="#[c7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_link_free
<LI><a href="#[c7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_link_alloc_by_conn_id
</UL>
<BR>[Called By]<UL><LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_handle_gap_msg
</UL>

<P><STRONG><a name="[3ea]"></a>ble_audio_handle_gap_msg</STRONG> (Thumb, 132 bytes, Stack size 8 bytes, ble_audio_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = ble_audio_handle_gap_msg &rArr; ble_audio_handle_conn_state_evt &rArr; ble_audio_link_alloc_by_conn_id &rArr; ble_audio_link_find_by_conn_id
</UL>
<BR>[Calls]<UL><LI><a href="#[c1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_link_find_by_conn_id
<LI><a href="#[c79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_dm_event_post
<LI><a href="#[c7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_ual_resolve_rpa
<LI><a href="#[c78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_handle_conn_state_evt
</UL>
<BR>[Called By]<UL><LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_gap_handle_gap_msg
</UL>

<P><STRONG><a name="[8f2]"></a>ble_audio_bond_modify</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, ble_audio_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ble_audio_bond_modify &rArr; ble_dm_event_post
</UL>
<BR>[Calls]<UL><LI><a href="#[c79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_dm_event_post
</UL>
<BR>[Called By]<UL><LI><a href="#[3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_handle_gap_cb
<LI><a href="#[8f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_bt_bond_cb
</UL>

<P><STRONG><a name="[3ec]"></a>ble_audio_handle_gap_cb</STRONG> (Thumb, 154 bytes, Stack size 24 bytes, ble_audio_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = ble_audio_handle_gap_cb &rArr; ble_audio_sync_handle_gap_cb &rArr; ble_audio_sync_handle_pa_info &rArr; ble_audio_sync_cmp_pa_mapping &rArr; base_data_parse_data &rArr; codec_cfg_parse
</UL>
<BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[8f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_bond_modify
<LI><a href="#[c1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_link_find_by_conn_id
<LI><a href="#[c7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_sync_handle_gap_cb
</UL>
<BR>[Called By]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_gap_cb
</UL>

<P><STRONG><a name="[c1b]"></a>ble_audio_mgr_dispatch</STRONG> (Thumb, 82 bytes, Stack size 40 bytes, ble_audio_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = ble_audio_mgr_dispatch
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pacs_attr_write_cb
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pacs_attr_read_cb
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_attr_write_cb
<LI><a href="#[c4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_handle_cp_data
<LI><a href="#[c48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_handle_pa_sync
<LI><a href="#[c3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_audio_sync_cb
<LI><a href="#[c3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_send_all_notify
<LI><a href="#[c2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_mgr_send_server_cccd_info
<LI><a href="#[c1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ase_sm_send_notify
<LI><a href="#[c2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ase_check_cp_data
<LI><a href="#[c0f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ase_action_cfg_codec
<LI><a href="#[c16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ascs_handle_cig_mgr_msg
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ascs_dm_cback
<LI><a href="#[c9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tbs_client_handle_callback
<LI><a href="#[c9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cap_check_disc_done
<LI><a href="#[c99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcs_client_handle_cback
<LI><a href="#[c97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcs_handle_charac_notify
<LI><a href="#[c7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_mgr_dispatch_client_attr_cccd_info
<LI><a href="#[c75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vcs_handle_volume_cp
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_big_check_info_proc
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_pa_sync_no_past_proc
</UL>

<P><STRONG><a name="[c2e]"></a>ble_audio_mgr_send_server_cccd_info</STRONG> (Thumb, 102 bytes, Stack size 64 bytes, ble_audio_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = ble_audio_mgr_send_server_cccd_info &rArr; gatt_svc_find_char_uuid_by_index
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[bbb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_svc_find_char_uuid_by_index
<LI><a href="#[c1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_mgr_dispatch
</UL>
<BR>[Called By]<UL><LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pacs_cccd_update_cb
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_cccd_update_cb
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ascs_cccd_update_cb
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vcs_cccd_update_cb
</UL>

<P><STRONG><a name="[c7f]"></a>ble_audio_mgr_dispatch_client_attr_cccd_info</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, ble_audio_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = ble_audio_mgr_dispatch_client_attr_cccd_info &rArr; ble_audio_mgr_dispatch
</UL>
<BR>[Calls]<UL><LI><a href="#[c1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_mgr_dispatch
</UL>
<BR>[Called By]<UL><LI><a href="#[c9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tbs_client_handle_callback
<LI><a href="#[c99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcs_client_handle_cback
</UL>

<P><STRONG><a name="[81c]"></a>ble_audio_cback_register</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, ble_audio_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ble_audio_cback_register &rArr; calloc
</UL>
<BR>[Calls]<UL><LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calloc
</UL>
<BR>[Called By]<UL><LI><a href="#[838]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_pacs_init
<LI><a href="#[831]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_mcp_init
<LI><a href="#[82c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_ccp_init
<LI><a href="#[81b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_ascs_init
<LI><a href="#[86f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_vol_init
<LI><a href="#[86a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_init
<LI><a href="#[86b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_init
<LI><a href="#[845]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_vcs_init
</UL>

<P><STRONG><a name="[8f3]"></a>ble_audio_reg_bond_mgr</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, ble_audio_mgr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_bond_init
</UL>

<P><STRONG><a name="[868]"></a>ble_audio_init</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, ble_audio_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = ble_audio_init &rArr; gatt_client_init &rArr; gatt_service_add &rArr; gatt_client_spec_register &rArr; gatt_spec_client_find_by_uuid
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[c80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_get_gap_bond_manager
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calloc
<LI><a href="#[ba3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_init
</UL>
<BR>[Called By]<UL><LI><a href="#[866]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_mgr_init
</UL>

<P><STRONG><a name="[846]"></a>ble_audio_vc_mic_init</STRONG> (Thumb, 198 bytes, Stack size 40 bytes, ble_audio_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = ble_audio_vc_mic_init &rArr; vcs_init &rArr; vcs_add_service &rArr; gatt_svc_add &rArr; calloc
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[c76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vcs_init
</UL>
<BR>[Called By]<UL><LI><a href="#[845]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_vcs_init
</UL>

<P><STRONG><a name="[c81]"></a>bc_sync_handle_check_int</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, ble_audio_sync.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = bc_sync_handle_check_int
</UL>
<BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[8e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_sync_update_cb
<LI><a href="#[8e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_sync_get_info
<LI><a href="#[8cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_get_bis_sync_info
<LI><a href="#[8d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_bis_setup_data_path
<LI><a href="#[c43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_sync_update_addr
<LI><a href="#[c46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_sync_release_int
<LI><a href="#[c6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_pa_terminate_int
<LI><a href="#[c6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_pa_sync_establish_int
<LI><a href="#[c6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_get_bis_sync_state
<LI><a href="#[c6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_big_terminate_int
<LI><a href="#[c71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_big_sync_establish_int
<LI><a href="#[c6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_big_get_sync_info
</UL>

<P><STRONG><a name="[c4e]"></a>ble_audio_sync_find</STRONG> (Thumb, 84 bytes, Stack size 32 bytes, ble_audio_sync.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ble_audio_sync_find
</UL>
<BR>[Calls]<UL><LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[c4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_sync_create_int
<LI><a href="#[c4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_handle_cp_data
</UL>

<P><STRONG><a name="[8e9]"></a>ble_audio_sync_get_info</STRONG> (Thumb, 114 bytes, Stack size 16 bytes, ble_audio_sync.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ble_audio_sync_get_info &rArr; bc_sync_handle_check_int
</UL>
<BR>[Calls]<UL><LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4 (via Veneer)
<LI><a href="#[c81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bc_sync_handle_check_int
</UL>
<BR>[Called By]<UL><LI><a href="#[8e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_handle_bass_msg
<LI><a href="#[c3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_audio_sync_cb
</UL>

<P><STRONG><a name="[c43]"></a>ble_audio_sync_update_addr</STRONG> (Thumb, 94 bytes, Stack size 24 bytes, ble_audio_sync.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = ble_audio_sync_update_addr &rArr; bc_sync_handle_check_int
</UL>
<BR>[Calls]<UL><LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp (via Veneer)
<LI><a href="#[c81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bc_sync_handle_check_int
</UL>
<BR>[Called By]<UL><LI><a href="#[c3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_audio_sync_cb
</UL>

<P><STRONG><a name="[8e8]"></a>ble_audio_sync_update_cb</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, ble_audio_sync.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ble_audio_sync_update_cb &rArr; bc_sync_handle_check_int
</UL>
<BR>[Calls]<UL><LI><a href="#[c81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bc_sync_handle_check_int
</UL>
<BR>[Called By]<UL><LI><a href="#[8e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_handle_bass_msg
</UL>

<P><STRONG><a name="[c54]"></a>ble_audio_sync_register_bass_cb</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, ble_audio_sync.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_init
</UL>

<P><STRONG><a name="[c4f]"></a>ble_audio_sync_create_int</STRONG> (Thumb, 200 bytes, Stack size 40 bytes, ble_audio_sync.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = ble_audio_sync_create_int &rArr; ble_audio_sync_find
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calloc
<LI><a href="#[c4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_sync_find
<LI><a href="#[c82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_brs_get_empty_char_num
</UL>
<BR>[Called By]<UL><LI><a href="#[8d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_sync_allocate
<LI><a href="#[c4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_handle_cp_data
</UL>

<P><STRONG><a name="[8d2]"></a>ble_audio_sync_allocate</STRONG> (Thumb, 16 bytes, Stack size 24 bytes, ble_audio_sync.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = ble_audio_sync_allocate &rArr; ble_audio_sync_create_int &rArr; ble_audio_sync_find
</UL>
<BR>[Calls]<UL><LI><a href="#[c4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_sync_create_int
</UL>
<BR>[Called By]<UL><LI><a href="#[8d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_pa_sync
</UL>

<P><STRONG><a name="[c46]"></a>ble_audio_sync_release_int</STRONG> (Thumb, 170 bytes, Stack size 32 bytes, ble_audio_sync.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = ble_audio_sync_release_int &rArr; base_data_free
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[c83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;base_data_free
<LI><a href="#[c81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bc_sync_handle_check_int
</UL>
<BR>[Called By]<UL><LI><a href="#[8b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_sync_release
<LI><a href="#[c42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_brs_delete
<LI><a href="#[c45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_delete_source_int
</UL>

<P><STRONG><a name="[8b6]"></a>ble_audio_sync_release</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ble_audio_sync.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = ble_audio_sync_release &rArr; ble_audio_sync_release_int &rArr; base_data_free
</UL>
<BR>[Calls]<UL><LI><a href="#[c46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_sync_release_int
</UL>
<BR>[Called By]<UL><LI><a href="#[8c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_release_all
<LI><a href="#[8b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_terminate
<LI><a href="#[8e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_handle_bass_msg
</UL>

<P><STRONG><a name="[c8f]"></a>ble_audio_sync_find_by_sync_id</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, ble_audio_sync.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ble_audio_sync_find_by_sync_id
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_big_sync_receiver_cb
<LI><a href="#[c7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_sync_handle_gap_cb
</UL>

<P><STRONG><a name="[c84]"></a>ble_audio_send_pa_sync_state</STRONG> (Thumb, 156 bytes, Stack size 80 bytes, ble_audio_sync.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = ble_audio_send_pa_sync_state
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[c85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_pa_sync_get_param
</UL>
<BR>[Called By]<UL><LI><a href="#[c89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_sync_handle_pa_dev_state_evt
<LI><a href="#[c7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_sync_handle_gap_cb
</UL>

<P><STRONG><a name="[c6b]"></a>ble_audio_pa_sync_establish_int</STRONG> (Thumb, 198 bytes, Stack size 48 bytes, ble_audio_sync.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = ble_audio_pa_sync_establish_int &rArr; bc_sync_handle_check_int
</UL>
<BR>[Calls]<UL><LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[c86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_pa_sync_create_sync
<LI><a href="#[c81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bc_sync_handle_check_int
</UL>
<BR>[Called By]<UL><LI><a href="#[8d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_pa_sync_establish
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_pa_sync_no_past_proc
</UL>

<P><STRONG><a name="[8d3]"></a>ble_audio_pa_sync_establish</STRONG> (Thumb, 16 bytes, Stack size 24 bytes, ble_audio_sync.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = ble_audio_pa_sync_establish &rArr; ble_audio_pa_sync_establish_int &rArr; bc_sync_handle_check_int
</UL>
<BR>[Calls]<UL><LI><a href="#[c6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_pa_sync_establish_int
</UL>
<BR>[Called By]<UL><LI><a href="#[8d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_pa_sync
<LI><a href="#[c89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_sync_handle_pa_dev_state_evt
</UL>

<P><STRONG><a name="[c6a]"></a>ble_audio_pa_terminate_int</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, ble_audio_sync.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = ble_audio_pa_terminate_int &rArr; bc_sync_handle_check_int
</UL>
<BR>[Calls]<UL><LI><a href="#[c87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_pa_sync_terminate_sync
<LI><a href="#[c81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bc_sync_handle_check_int
</UL>
<BR>[Called By]<UL><LI><a href="#[8b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_pa_terminate
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_pa_terminate_proc
</UL>

<P><STRONG><a name="[8b4]"></a>ble_audio_pa_terminate</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ble_audio_sync.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = ble_audio_pa_terminate &rArr; ble_audio_pa_terminate_int &rArr; bc_sync_handle_check_int
</UL>
<BR>[Calls]<UL><LI><a href="#[c6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_pa_terminate_int
</UL>
<BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_sync_cb
<LI><a href="#[8c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_release_all
<LI><a href="#[8b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_terminate
<LI><a href="#[c89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_sync_handle_pa_dev_state_evt
</UL>

<P><STRONG><a name="[c4b]"></a>ble_audio_set_past_recipient_param</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, ble_audio_sync.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ble_audio_set_past_recipient_param
</UL>
<BR>[Calls]<UL><LI><a href="#[844]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_get_conn_id_by_handle
<LI><a href="#[c88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_past_recipient_set_periodic_adv_sync_transfer_params
</UL>
<BR>[Called By]<UL><LI><a href="#[c48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_handle_pa_sync
<LI><a href="#[c65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_stop_past_recipient
</UL>

<P><STRONG><a name="[c89]"></a>ble_audio_sync_handle_pa_dev_state_evt</STRONG> (Thumb, 248 bytes, Stack size 40 bytes, ble_audio_sync.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = ble_audio_sync_handle_pa_dev_state_evt &rArr; ble_audio_pa_sync_establish &rArr; ble_audio_pa_sync_establish_int &rArr; bc_sync_handle_check_int
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[8b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_pa_terminate
<LI><a href="#[8d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_pa_sync_establish
<LI><a href="#[c84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_send_pa_sync_state
</UL>
<BR>[Called By]<UL><LI><a href="#[c7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_sync_handle_gap_cb
</UL>

<P><STRONG><a name="[c8a]"></a>ble_audio_sync_pa_info_list_free</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, ble_audio_sync.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = ble_audio_sync_pa_info_list_free &rArr; base_data_free
</UL>
<BR>[Calls]<UL><LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[c83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;base_data_free
</UL>
<BR>[Called By]<UL><LI><a href="#[c8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_sync_handle_pa_info
<LI><a href="#[c8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_sync_cmp_pa_mapping
<LI><a href="#[c7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_sync_handle_gap_cb
</UL>

<P><STRONG><a name="[c8b]"></a>ble_audio_sync_cmp_pa_mapping</STRONG> (Thumb, 244 bytes, Stack size 48 bytes, ble_audio_sync.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = ble_audio_sync_cmp_pa_mapping &rArr; base_data_parse_data &rArr; codec_cfg_parse
</UL>
<BR>[Calls]<UL><LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calloc
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[c8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;base_data_parse_data
<LI><a href="#[c83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;base_data_free
<LI><a href="#[c8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;base_data_cmp
<LI><a href="#[c8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_sync_pa_info_list_free
</UL>
<BR>[Called By]<UL><LI><a href="#[c8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_sync_handle_pa_info
</UL>

<P><STRONG><a name="[c8e]"></a>ble_audio_sync_handle_pa_info</STRONG> (Thumb, 300 bytes, Stack size 32 bytes, ble_audio_sync.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = ble_audio_sync_handle_pa_info &rArr; ble_audio_sync_cmp_pa_mapping &rArr; base_data_parse_data &rArr; codec_cfg_parse
</UL>
<BR>[Calls]<UL><LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calloc
<LI><a href="#[c8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_sync_cmp_pa_mapping
<LI><a href="#[c8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_sync_pa_info_list_free
</UL>
<BR>[Called By]<UL><LI><a href="#[c7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_sync_handle_gap_cb
</UL>

<P><STRONG><a name="[c7e]"></a>ble_audio_sync_handle_gap_cb</STRONG> (Thumb, 450 bytes, Stack size 32 bytes, ble_audio_sync.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = ble_audio_sync_handle_gap_cb &rArr; ble_audio_sync_handle_pa_info &rArr; ble_audio_sync_cmp_pa_mapping &rArr; base_data_parse_data &rArr; codec_cfg_parse
</UL>
<BR>[Calls]<UL><LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4 (via Veneer)
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[c87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_pa_sync_terminate_sync
<LI><a href="#[c8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_sync_handle_pa_info
<LI><a href="#[c8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_sync_pa_info_list_free
<LI><a href="#[c89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_sync_handle_pa_dev_state_evt
<LI><a href="#[c84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_send_pa_sync_state
<LI><a href="#[c8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_sync_find_by_sync_id
<LI><a href="#[c90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_sync_find_by_adv_info
</UL>
<BR>[Called By]<UL><LI><a href="#[3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_handle_gap_cb
</UL>

<P><STRONG><a name="[c96]"></a>ble_audio_sync_find_by_big_handle</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, ble_audio_sync.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ble_audio_sync_find_by_big_handle
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_big_sync_receiver_cb
</UL>

<P><STRONG><a name="[c91]"></a>ble_audio_send_big_sync_state</STRONG> (Thumb, 126 bytes, Stack size 48 bytes, ble_audio_sync.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = ble_audio_send_big_sync_state
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_big_sync_receiver_cb
<LI><a href="#[c95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_sync_handle_big_dev_state_evt
</UL>

<P><STRONG><a name="[c6f]"></a>ble_audio_big_get_sync_info</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, ble_audio_sync.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ble_audio_big_get_sync_info &rArr; bc_sync_handle_check_int
</UL>
<BR>[Calls]<UL><LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[c81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bc_sync_handle_check_int
</UL>
<BR>[Called By]<UL><LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_big_terminated_proc
</UL>

<P><STRONG><a name="[c71]"></a>ble_audio_big_sync_establish_int</STRONG> (Thumb, 118 bytes, Stack size 24 bytes, ble_audio_sync.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = ble_audio_big_sync_establish_int &rArr; bc_sync_handle_check_int
</UL>
<BR>[Calls]<UL><LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[c92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_big_mgr_sync_receiver_big_create_sync
<LI><a href="#[c81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bc_sync_handle_check_int
</UL>
<BR>[Called By]<UL><LI><a href="#[8c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_big_sync_establish
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_big_check_info_proc
</UL>

<P><STRONG><a name="[8c9]"></a>ble_audio_big_sync_establish</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ble_audio_sync.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = ble_audio_big_sync_establish &rArr; ble_audio_big_sync_establish_int &rArr; bc_sync_handle_check_int
</UL>
<BR>[Calls]<UL><LI><a href="#[c71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_big_sync_establish_int
</UL>
<BR>[Called By]<UL><LI><a href="#[8c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_big_establish
<LI><a href="#[8e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_handle_bass_msg
<LI><a href="#[c95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_sync_handle_big_dev_state_evt
</UL>

<P><STRONG><a name="[c6d]"></a>ble_audio_big_terminate_int</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, ble_audio_sync.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ble_audio_big_terminate_int &rArr; bc_sync_handle_check_int
</UL>
<BR>[Calls]<UL><LI><a href="#[c93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_big_mgr_sync_receiver_big_terminate_sync
<LI><a href="#[c81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bc_sync_handle_check_int
</UL>
<BR>[Called By]<UL><LI><a href="#[8b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_big_terminate
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_big_terminate_req_proc
</UL>

<P><STRONG><a name="[8b5]"></a>ble_audio_big_terminate</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ble_audio_sync.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ble_audio_big_terminate &rArr; ble_audio_big_terminate_int &rArr; bc_sync_handle_check_int
</UL>
<BR>[Calls]<UL><LI><a href="#[c6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_big_terminate_int
</UL>
<BR>[Called By]<UL><LI><a href="#[8c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_release_all
<LI><a href="#[8b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_terminate
</UL>

<P><STRONG><a name="[c6e]"></a>ble_audio_get_bis_sync_state</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, ble_audio_sync.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ble_audio_get_bis_sync_state &rArr; bc_sync_handle_check_int
</UL>
<BR>[Calls]<UL><LI><a href="#[c81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bc_sync_handle_check_int
</UL>
<BR>[Called By]<UL><LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_big_synchronized_proc
</UL>

<P><STRONG><a name="[8cf]"></a>ble_audio_get_bis_sync_info</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, ble_audio_sync.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ble_audio_get_bis_sync_info &rArr; bc_sync_handle_check_int
</UL>
<BR>[Calls]<UL><LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[c81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bc_sync_handle_check_int
</UL>
<BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_sync_cb
</UL>

<P><STRONG><a name="[8d0]"></a>ble_audio_bis_setup_data_path</STRONG> (Thumb, 152 bytes, Stack size 40 bytes, ble_audio_sync.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = ble_audio_bis_setup_data_path &rArr; bc_sync_handle_check_int
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[c94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_big_mgr_setup_data_path
<LI><a href="#[c81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bc_sync_handle_check_int
</UL>
<BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_sync_cb
</UL>

<P><STRONG><a name="[c95]"></a>ble_audio_sync_handle_big_dev_state_evt</STRONG> (Thumb, 160 bytes, Stack size 40 bytes, ble_audio_sync.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = ble_audio_sync_handle_big_dev_state_evt &rArr; ble_audio_send_big_sync_state
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[8c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_big_sync_establish
<LI><a href="#[c91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_send_big_sync_state
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_big_sync_receiver_cb
</UL>

<P><STRONG><a name="[94]"></a>ble_audio_big_sync_receiver_cb</STRONG> (Thumb, 664 bytes, Stack size 64 bytes, ble_audio_sync.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = ble_audio_big_sync_receiver_cb &rArr; ble_audio_sync_handle_big_dev_state_evt &rArr; ble_audio_send_big_sync_state
</UL>
<BR>[Calls]<UL><LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[c95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_sync_handle_big_dev_state_evt
<LI><a href="#[c91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_send_big_sync_state
<LI><a href="#[c96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_sync_find_by_big_handle
<LI><a href="#[c8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_sync_find_by_sync_id
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bap.o(.text)
</UL>
<P><STRONG><a name="[82d]"></a>mcp_client_cfg_cccd</STRONG> (Thumb, 412 bytes, Stack size 72 bytes, mcp_client.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = mcp_client_cfg_cccd &rArr; gatt_client_enable_char_cccd &rArr; gatt_client_check_req &rArr; gatt_client_execute_req
</UL>
<BR>[Calls]<UL><LI><a href="#[b91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_check_cccd_enabled
<LI><a href="#[b8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_enable_char_cccd
<LI><a href="#[c98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcs_check_link_int
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_mcp_ble_audio_cback
</UL>

<P><STRONG><a name="[82e]"></a>mcp_client_read_char_value</STRONG> (Thumb, 102 bytes, Stack size 64 bytes, mcp_client.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = mcp_client_read_char_value &rArr; gatt_client_read &rArr; gattc_storage_check_prop &rArr; gattc_storage_find_char_desc
</UL>
<BR>[Calls]<UL><LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_read
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_find_char_handle
<LI><a href="#[c98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcs_check_link_int
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_mcp_ble_audio_cback
</UL>

<P><STRONG><a name="[830]"></a>mcp_client_write_media_cp</STRONG> (Thumb, 206 bytes, Stack size 96 bytes, mcp_client.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = mcp_client_write_media_cp &rArr; gatt_client_write &rArr; gattc_storage_check_prop &rArr; gattc_storage_find_char_desc
</UL>
<BR>[Calls]<UL><LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_write
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_find_char_handle
<LI><a href="#[c98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcs_check_link_int
</UL>
<BR>[Called By]<UL><LI><a href="#[50b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_mgr_mmi_handle
<LI><a href="#[7e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_mcp_play_pause
<LI><a href="#[89d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_handle_pending_mcp_cmd
<LI><a href="#[89f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_handle_ascs_msg
<LI><a href="#[899]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_link_connected
<LI><a href="#[898]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_link_streaming
<LI><a href="#[87b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_handle_avrcp_playing
<LI><a href="#[877]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_stop_inactive_stream
</UL>

<P><STRONG><a name="[c9a]"></a>mcs_client_init</STRONG> (Thumb, 74 bytes, Stack size 32 bytes, mcp_client.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = mcs_client_init &rArr; gatt_client_spec_register &rArr; gatt_spec_client_find_by_uuid
</UL>
<BR>[Calls]<UL><LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_spec_register
<LI><a href="#[c31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_dm_cback_register
</UL>
<BR>[Called By]<UL><LI><a href="#[86d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cap_init
</UL>

<P><STRONG><a name="[86d]"></a>cap_init</STRONG> (Thumb, 188 bytes, Stack size 40 bytes, cap.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = cap_init &rArr; ccp_client_init &rArr; tbs_client_init &rArr; gatt_client_spec_register &rArr; gatt_spec_client_find_by_uuid
</UL>
<BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_spec_register
<LI><a href="#[c31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_dm_cback_register
<LI><a href="#[c9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ccp_client_init
<LI><a href="#[c9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cas_init
<LI><a href="#[c9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcs_client_init
</UL>
<BR>[Called By]<UL><LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_profile_init
</UL>

<P><STRONG><a name="[825]"></a>ccp_client_cfg_cccd</STRONG> (Thumb, 12 bytes, Stack size 16 bytes, ccp_client.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = ccp_client_cfg_cccd &rArr; tbs_cfg_cccd &rArr; gatt_client_enable_char_cccd &rArr; gatt_client_check_req &rArr; gatt_client_execute_req
</UL>
<BR>[Calls]<UL><LI><a href="#[ca0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tbs_cfg_cccd
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_ccp_ble_audio_cback
</UL>

<P><STRONG><a name="[826]"></a>ccp_client_read_char_value</STRONG> (Thumb, 12 bytes, Stack size 16 bytes, ccp_client.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = ccp_client_read_char_value &rArr; tbs_read_char_value &rArr; gatt_client_read &rArr; gattc_storage_check_prop &rArr; gattc_storage_find_char_desc
</UL>
<BR>[Calls]<UL><LI><a href="#[c9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tbs_read_char_value
</UL>
<BR>[Called By]<UL><LI><a href="#[82b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_ccp_read_all_links_state
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_ccp_ble_audio_cback
<LI><a href="#[886]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_track_create
</UL>

<P><STRONG><a name="[829]"></a>ccp_client_write_call_cp</STRONG> (Thumb, 208 bytes, Stack size 40 bytes, ccp_client.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = ccp_client_write_call_cp &rArr; tbs_write_char_value &rArr; gatt_client_write &rArr; gattc_storage_check_prop &rArr; gattc_storage_find_char_desc
</UL>
<BR>[Calls]<UL><LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[ca1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tbs_write_char_value
</UL>
<BR>[Called By]<UL><LI><a href="#[50b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_mgr_mmi_handle
<LI><a href="#[82a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_ccp_accept_hold_or_wait_call
<LI><a href="#[827]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_ccp_release_active_call
</UL>

<P><STRONG><a name="[c9d]"></a>ccp_client_init</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, ccp_client.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = ccp_client_init &rArr; tbs_client_init &rArr; gatt_client_spec_register &rArr; gatt_spec_client_find_by_uuid
</UL>
<BR>[Calls]<UL><LI><a href="#[c31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_dm_cback_register
<LI><a href="#[ca2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tbs_client_init
</UL>
<BR>[Called By]<UL><LI><a href="#[86d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cap_init
</UL>

<P><STRONG><a name="[86e]"></a>tmas_init</STRONG> (Thumb, 84 bytes, Stack size 24 bytes, tmas_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = tmas_init &rArr; gatt_svc_add &rArr; calloc
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calloc
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[802]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_svc_add
</UL>
<BR>[Called By]<UL><LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_profile_init
</UL>

<P><STRONG><a name="[cae]"></a>bt_gfps_cback</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, bt_gfps.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> bt_gfps.o(.text)
</UL>
<P><STRONG><a name="[ca3]"></a>bt_gfps_connect_req</STRONG> (Thumb, 12 bytes, Stack size 16 bytes, bt_gfps.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[a09]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_rfc_conn_req
</UL>

<P><STRONG><a name="[76d]"></a>bt_gfps_connect_cfm</STRONG> (Thumb, 12 bytes, Stack size 16 bytes, bt_gfps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = bt_gfps_connect_cfm &rArr; bt_rfc_conn_cfm &rArr; rfc_conn_cfm &rArr; rfc_send_uih &rArr; rfc_send_frame &rArr; crc8EtsGen
</UL>
<BR>[Calls]<UL><LI><a href="#[a02]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_rfc_conn_cfm
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_rfc_cback
</UL>

<P><STRONG><a name="[57a]"></a>bt_gfps_disconnect_req</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, bt_gfps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = bt_gfps_disconnect_req &rArr; bt_rfc_disconn_req &rArr; rfc_disconn_req &rArr; rfc_check_disconn_ctrl_chann &rArr; sys_timer_start &rArr; sys_hp_timer_list_insert &rArr; hw_timer_restart &rArr; hw_timer_safe_stop &rArr; hw_timer_set_div
</UL>
<BR>[Calls]<UL><LI><a href="#[a07]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_rfc_disconn_req
</UL>
<BR>[Called By]<UL><LI><a href="#[572]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkback_profile_disconnect_start
</UL>

<P><STRONG><a name="[ca4]"></a>bt_gfps_send_data</STRONG> (Thumb, 172 bytes, Stack size 64 bytes, bt_gfps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = bt_gfps_send_data &rArr; bt_rfc_data_send &rArr; rfc_data_req &rArr; rfc_check_send_credits &rArr; crc8EtsGen
</UL>
<BR>[Calls]<UL><LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[ca5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_coc_send_data
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calloc
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[a04]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_rfc_data_send
</UL>
<BR>[Called By]<UL><LI><a href="#[795]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_gfps_send_eddystone_capability
<LI><a href="#[77e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_gfps_updated_battery
<LI><a href="#[76e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_gfps_send_model_id
<LI><a href="#[772]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_gfps_send_firmware_revision
<LI><a href="#[771]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_gfps_send_ble_addr
<LI><a href="#[7b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_gfps_send_session_nonce
<LI><a href="#[7ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_gfps_send_ring_status
<LI><a href="#[7cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_gfps_send_dynamic_buffer_size
<LI><a href="#[7c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_gfps_send_anc_state
<LI><a href="#[7bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_gfps_notify_switch_prefer
<LI><a href="#[7b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_gfps_notify_sass_cap
<LI><a href="#[7bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_gfps_notify_multipoint_switch
<LI><a href="#[7d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_gfps_active_components_rsp
<LI><a href="#[caa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_gfps_get_sass_cap
<LI><a href="#[ca9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_gfps_send_eddystone_info
<LI><a href="#[ca8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_gfps_send_log_buf_full
<LI><a href="#[ca7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_gfps_disable_silence_mode
<LI><a href="#[ca6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_gfps_enable_silence_mode
</UL>

<P><STRONG><a name="[ca6]"></a>bt_gfps_enable_silence_mode</STRONG> (Thumb, 22 bytes, Stack size 24 bytes, bt_gfps.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ca4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_gfps_send_data
</UL>

<P><STRONG><a name="[ca7]"></a>bt_gfps_disable_silence_mode</STRONG> (Thumb, 20 bytes, Stack size 24 bytes, bt_gfps.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ca4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_gfps_send_data
</UL>

<P><STRONG><a name="[ca8]"></a>bt_gfps_send_log_buf_full</STRONG> (Thumb, 20 bytes, Stack size 24 bytes, bt_gfps.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ca4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_gfps_send_data
</UL>

<P><STRONG><a name="[76e]"></a>bt_gfps_send_model_id</STRONG> (Thumb, 22 bytes, Stack size 32 bytes, bt_gfps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = bt_gfps_send_model_id &rArr; bt_gfps_send_data &rArr; bt_rfc_data_send &rArr; rfc_data_req &rArr; rfc_check_send_credits &rArr; crc8EtsGen
</UL>
<BR>[Calls]<UL><LI><a href="#[ca4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_gfps_send_data
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_rfc_cback
<LI><a href="#[7db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_psm_msg_coc_conn_callback
</UL>

<P><STRONG><a name="[771]"></a>bt_gfps_send_ble_addr</STRONG> (Thumb, 20 bytes, Stack size 32 bytes, bt_gfps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = bt_gfps_send_ble_addr &rArr; bt_gfps_send_data &rArr; bt_rfc_data_send &rArr; rfc_data_req &rArr; rfc_check_send_credits &rArr; crc8EtsGen
</UL>
<BR>[Calls]<UL><LI><a href="#[ca4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_gfps_send_data
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_rfc_cback
<LI><a href="#[719]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_msg_update_ble_addr
<LI><a href="#[7db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_psm_msg_coc_conn_callback
</UL>

<P><STRONG><a name="[77e]"></a>bt_gfps_updated_battery</STRONG> (Thumb, 20 bytes, Stack size 32 bytes, bt_gfps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = bt_gfps_updated_battery &rArr; bt_gfps_send_data &rArr; bt_rfc_data_send &rArr; rfc_data_req &rArr; rfc_check_send_credits &rArr; crc8EtsGen
</UL>
<BR>[Calls]<UL><LI><a href="#[ca4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_gfps_send_data
</UL>
<BR>[Called By]<UL><LI><a href="#[77f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_battery_le_l2cap_update
<LI><a href="#[77d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_battery_rfc_update
</UL>

<P><STRONG><a name="[7d1]"></a>bt_gfps_active_components_rsp</STRONG> (Thumb, 20 bytes, Stack size 32 bytes, bt_gfps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = bt_gfps_active_components_rsp &rArr; bt_gfps_send_data &rArr; bt_rfc_data_send &rArr; rfc_data_req &rArr; rfc_check_send_credits &rArr; crc8EtsGen
</UL>
<BR>[Calls]<UL><LI><a href="#[ca4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_gfps_send_data
</UL>
<BR>[Called By]<UL><LI><a href="#[7d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_msg_handle_data_transfer
</UL>

<P><STRONG><a name="[7ad]"></a>bt_gfps_send_ring_status</STRONG> (Thumb, 20 bytes, Stack size 32 bytes, bt_gfps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = bt_gfps_send_ring_status &rArr; bt_gfps_send_data &rArr; bt_rfc_data_send &rArr; rfc_data_req &rArr; rfc_check_send_credits &rArr; crc8EtsGen
</UL>
<BR>[Calls]<UL><LI><a href="#[ca4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_gfps_send_data
</UL>
<BR>[Called By]<UL><LI><a href="#[7ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_msg_update_ring_status
</UL>

<P><STRONG><a name="[795]"></a>bt_gfps_send_eddystone_capability</STRONG> (Thumb, 20 bytes, Stack size 32 bytes, bt_gfps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = bt_gfps_send_eddystone_capability &rArr; bt_gfps_send_data &rArr; bt_rfc_data_send &rArr; rfc_data_req &rArr; rfc_check_send_credits &rArr; crc8EtsGen
</UL>
<BR>[Calls]<UL><LI><a href="#[ca4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_gfps_send_data
</UL>
<BR>[Called By]<UL><LI><a href="#[774]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_finder_send_eddystone_capability
</UL>

<P><STRONG><a name="[ca9]"></a>bt_gfps_send_eddystone_info</STRONG> (Thumb, 20 bytes, Stack size 32 bytes, bt_gfps.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ca4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_gfps_send_data
</UL>

<P><STRONG><a name="[772]"></a>bt_gfps_send_firmware_revision</STRONG> (Thumb, 20 bytes, Stack size 32 bytes, bt_gfps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = bt_gfps_send_firmware_revision &rArr; bt_gfps_send_data &rArr; bt_rfc_data_send &rArr; rfc_data_req &rArr; rfc_check_send_credits &rArr; crc8EtsGen
</UL>
<BR>[Calls]<UL><LI><a href="#[ca4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_gfps_send_data
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_rfc_cback
<LI><a href="#[7db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_psm_msg_coc_conn_callback
<LI><a href="#[7d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_msg_handle_data_transfer
</UL>

<P><STRONG><a name="[7b6]"></a>bt_gfps_send_session_nonce</STRONG> (Thumb, 20 bytes, Stack size 32 bytes, bt_gfps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = bt_gfps_send_session_nonce &rArr; bt_gfps_send_data &rArr; bt_rfc_data_send &rArr; rfc_data_req &rArr; rfc_check_send_credits &rArr; crc8EtsGen
</UL>
<BR>[Calls]<UL><LI><a href="#[ca4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_gfps_send_data
</UL>
<BR>[Called By]<UL><LI><a href="#[773]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_msg_report_session_nonce
</UL>

<P><STRONG><a name="[7cc]"></a>bt_gfps_send_dynamic_buffer_size</STRONG> (Thumb, 20 bytes, Stack size 32 bytes, bt_gfps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = bt_gfps_send_dynamic_buffer_size &rArr; bt_gfps_send_data &rArr; bt_rfc_data_send &rArr; rfc_data_req &rArr; rfc_check_send_credits &rArr; crc8EtsGen
</UL>
<BR>[Calls]<UL><LI><a href="#[ca4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_gfps_send_data
</UL>
<BR>[Called By]<UL><LI><a href="#[7cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_rfc_report_dynamic_buffer_size
</UL>

<P><STRONG><a name="[7c8]"></a>bt_gfps_send_anc_state</STRONG> (Thumb, 20 bytes, Stack size 32 bytes, bt_gfps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = bt_gfps_send_anc_state &rArr; bt_gfps_send_data &rArr; bt_rfc_data_send &rArr; rfc_data_req &rArr; rfc_check_send_credits &rArr; crc8EtsGen
</UL>
<BR>[Calls]<UL><LI><a href="#[ca4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_gfps_send_data
</UL>
<BR>[Called By]<UL><LI><a href="#[7c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_report_anc_state
</UL>

<P><STRONG><a name="[caa]"></a>bt_gfps_get_sass_cap</STRONG> (Thumb, 20 bytes, Stack size 24 bytes, bt_gfps.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ca4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_gfps_send_data
</UL>

<P><STRONG><a name="[7b9]"></a>bt_gfps_notify_sass_cap</STRONG> (Thumb, 20 bytes, Stack size 32 bytes, bt_gfps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = bt_gfps_notify_sass_cap &rArr; bt_gfps_send_data &rArr; bt_rfc_data_send &rArr; rfc_data_req &rArr; rfc_check_send_credits &rArr; crc8EtsGen
</UL>
<BR>[Calls]<UL><LI><a href="#[ca4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_gfps_send_data
</UL>
<BR>[Called By]<UL><LI><a href="#[7b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_msg_report_sass_cap
</UL>

<P><STRONG><a name="[7bc]"></a>bt_gfps_notify_switch_prefer</STRONG> (Thumb, 20 bytes, Stack size 32 bytes, bt_gfps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = bt_gfps_notify_switch_prefer &rArr; bt_gfps_send_data &rArr; bt_rfc_data_send &rArr; rfc_data_req &rArr; rfc_check_send_credits &rArr; crc8EtsGen
</UL>
<BR>[Calls]<UL><LI><a href="#[ca4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_gfps_send_data
</UL>
<BR>[Called By]<UL><LI><a href="#[7ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_rfc_report_sass_switch_preference
</UL>

<P><STRONG><a name="[7bd]"></a>bt_gfps_notify_multipoint_switch</STRONG> (Thumb, 20 bytes, Stack size 32 bytes, bt_gfps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = bt_gfps_notify_multipoint_switch &rArr; bt_gfps_send_data &rArr; bt_rfc_data_send &rArr; rfc_data_req &rArr; rfc_check_send_credits &rArr; crc8EtsGen
</UL>
<BR>[Calls]<UL><LI><a href="#[ca4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_gfps_send_data
</UL>
<BR>[Called By]<UL><LI><a href="#[59d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_msg_notify_multipoint_switch
</UL>

<P><STRONG><a name="[7c3]"></a>bt_gfps_notify_connection_status</STRONG> (Thumb, 384 bytes, Stack size 160 bytes, bt_gfps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 940<LI>Call Chain = bt_gfps_notify_connection_status &rArr; sha256_hkdf &rArr; hmac_sha256_crypt &rArr; hmac_sha256_finish &rArr; mbedtls_sha256_update &rArr; mbedtls_sha256_update_ret &rArr; mbedtls_internal_sha256_process
</UL>
<BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[ca5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_coc_send_data
<LI><a href="#[a04]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_rfc_data_send
<LI><a href="#[cac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sha256_hkdf
<LI><a href="#[cab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_sass_get_account_key_by_index
<LI><a href="#[cad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_ctr_concat
</UL>
<BR>[Called By]<UL><LI><a href="#[758]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_msg_notify_connection_status
</UL>

<P><STRONG><a name="[7d2]"></a>bt_gfps_send_ack</STRONG> (Thumb, 170 bytes, Stack size 40 bytes, bt_gfps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = bt_gfps_send_ack &rArr; bt_rfc_data_send &rArr; rfc_data_req &rArr; rfc_check_send_credits &rArr; crc8EtsGen
</UL>
<BR>[Calls]<UL><LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[ca5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_coc_send_data
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calloc
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[a04]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_rfc_data_send
</UL>
<BR>[Called By]<UL><LI><a href="#[7d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_msg_handle_data_transfer
</UL>

<P><STRONG><a name="[7c6]"></a>bt_gfps_send_nak</STRONG> (Thumb, 128 bytes, Stack size 56 bytes, bt_gfps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = bt_gfps_send_nak &rArr; bt_rfc_data_send &rArr; rfc_data_req &rArr; rfc_check_send_credits &rArr; crc8EtsGen
</UL>
<BR>[Calls]<UL><LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[ca5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_coc_send_data
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calloc
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[a04]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_rfc_data_send
</UL>
<BR>[Called By]<UL><LI><a href="#[7d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_msg_handle_data_transfer
<LI><a href="#[7c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_rfc_report_nac
</UL>

<P><STRONG><a name="[7da]"></a>bt_gfps_rfc_init</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, bt_gfps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = bt_gfps_rfc_init &rArr; bt_rfc_profile_register &rArr; rfc_reg_cb &rArr; rfc_init
</UL>
<BR>[Calls]<UL><LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calloc
<LI><a href="#[9ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_rfc_profile_register
</UL>
<BR>[Called By]<UL><LI><a href="#[68a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_msg_rfc_init
</UL>

<P><STRONG><a name="[734]"></a>gfps_set_finder_enable</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, gfps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gfps_set_finder_enable
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[68b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_init
</UL>

<P><STRONG><a name="[735]"></a>gfps_set_sass_enable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gfps.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[68b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_init
</UL>

<P><STRONG><a name="[759]"></a>gfps_account_key_init</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, gfps.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[730]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_account_key_init
</UL>

<P><STRONG><a name="[75c]"></a>gfps_get_highest_priority_device</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, gfps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gfps_get_highest_priority_device
</UL>
<BR>[Called By]<UL><LI><a href="#[75b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_account_key_verify_mac
</UL>

<P><STRONG><a name="[cb0]"></a>gfps_get_account_key_info</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, gfps.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[cb1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_sass_malloc_key_for_filter
<LI><a href="#[cab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_sass_get_account_key_by_index
<LI><a href="#[cf9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_sass_get_inuse_accountkey
<LI><a href="#[cf3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_handle_beacon_provision_request
<LI><a href="#[ce1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_get_owner_accountkey
</UL>

<P><STRONG><a name="[79a]"></a>gfps_get_owner_key_valid</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, gfps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gfps_get_owner_key_valid
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[799]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_finder_cb
<LI><a href="#[cf3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_handle_beacon_provision_request
<LI><a href="#[ce1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_get_owner_accountkey
</UL>

<P><STRONG><a name="[79b]"></a>gfps_set_owner_key_valid</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, gfps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gfps_set_owner_key_valid
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[799]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_finder_cb
<LI><a href="#[cf3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_handle_beacon_provision_request
</UL>

<P><STRONG><a name="[733]"></a>gfps_init</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, gfps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = gfps_init &rArr; calloc
</UL>
<BR>[Calls]<UL><LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calloc
</UL>
<BR>[Called By]<UL><LI><a href="#[68b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_init
</UL>

<P><STRONG><a name="[7b5]"></a>gfps_gen_random_nonce</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, gfps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = gfps_gen_random_nonce
</UL>
<BR>[Calls]<UL><LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_random (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[773]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_msg_report_session_nonce
<LI><a href="#[758]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_msg_notify_connection_status
</UL>

<P><STRONG><a name="[1340]"></a>gfps_psm_rsp_data_get</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, gfps.o(.text), UNUSED)

<P><STRONG><a name="[766]"></a>gfps_psm_rsp_data_set</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, gfps.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[40e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_device_handle_power_on
<LI><a href="#[7dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_psm_msg_coc_init
</UL>

<P><STRONG><a name="[73b]"></a>gfps_le_device_init</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, gfps.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[68b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_init
</UL>

<P><STRONG><a name="[71e]"></a>gfps_le_get_device_mode</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gfps.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_le_device_adv_start
<LI><a href="#[4c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_adv_init
<LI><a href="#[729]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_cb_handle_passkey
<LI><a href="#[721]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_cb_handle_accountkey
</UL>

<P><STRONG><a name="[caf]"></a>gfps_gen_battery_info</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, gfps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gfps_gen_battery_info
</UL>
<BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[715]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_gen_adv_data
</UL>

<P><STRONG><a name="[736]"></a>gfps_set_tx_power</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, gfps.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[68b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_init
</UL>

<P><STRONG><a name="[757]"></a>gfps_set_inuse_account_key_index</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, gfps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = gfps_set_inuse_account_key_index
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[752]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_check_inuse_account_key
</UL>

<P><STRONG><a name="[756]"></a>gfps_set_most_recently_inuse_account_key_index</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, gfps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = gfps_set_most_recently_inuse_account_key_index
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[40e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_device_handle_power_on
<LI><a href="#[752]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_check_inuse_account_key
</UL>

<P><STRONG><a name="[753]"></a>gfps_get_inuse_account_key_index</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gfps.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_device_handle_power_off
<LI><a href="#[75b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_account_key_verify_mac
<LI><a href="#[750]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_sass_set_conn_status
<LI><a href="#[758]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_msg_notify_connection_status
<LI><a href="#[752]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_check_inuse_account_key
</UL>

<P><STRONG><a name="[754]"></a>gfps_get_recently_inuse_account_key_index</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gfps.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_device_handle_power_off
<LI><a href="#[750]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_sass_set_conn_status
<LI><a href="#[752]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_check_inuse_account_key
</UL>

<P><STRONG><a name="[cab]"></a>gfps_sass_get_account_key_by_index</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, gfps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = gfps_sass_get_account_key_by_index
</UL>
<BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[cb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_get_account_key_info
</UL>
<BR>[Called By]<UL><LI><a href="#[7c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_sass_compare_account_key_by_idx
<LI><a href="#[7c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_gfps_notify_connection_status
</UL>

<P><STRONG><a name="[7c2]"></a>gfps_sass_compare_account_key_by_idx</STRONG> (Thumb, 84 bytes, Stack size 56 bytes, gfps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = gfps_sass_compare_account_key_by_idx &rArr; gfps_sass_get_account_key_by_index
</UL>
<BR>[Calls]<UL><LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[cab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_sass_get_account_key_by_index
</UL>
<BR>[Called By]<UL><LI><a href="#[758]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_msg_notify_connection_status
</UL>

<P><STRONG><a name="[77c]"></a>gfps_set_battery_info</STRONG> (Thumb, 218 bytes, Stack size 40 bytes, gfps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = gfps_set_battery_info
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[77b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_battery_set_info
</UL>

<P><STRONG><a name="[715]"></a>gfps_gen_adv_data</STRONG> (Thumb, 590 bytes, Stack size 112 bytes, gfps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 972<LI>Call Chain = gfps_gen_adv_data &rArr; gfps_sass_get_encrypt_conn_status &rArr; sha256_hkdf &rArr; hmac_sha256_crypt &rArr; hmac_sha256_finish &rArr; mbedtls_sha256_update &rArr; mbedtls_sha256_update_ret &rArr; mbedtls_internal_sha256_process
</UL>
<BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_random (via Veneer)
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[cb2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_sass_set_iv
<LI><a href="#[cb1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_sass_malloc_key_for_filter
<LI><a href="#[cb3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_sass_get_encrypt_conn_status
<LI><a href="#[cb5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_sass_free_key_for_filter
<LI><a href="#[cb4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_gen_account_key_filter
<LI><a href="#[caf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_gen_battery_info
</UL>
<BR>[Called By]<UL><LI><a href="#[77b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_battery_set_info
<LI><a href="#[74e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_adv_check_sass_conn_status
<LI><a href="#[712]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_adv_start
</UL>

<P><STRONG><a name="[727]"></a>gfps_send_passkey</STRONG> (Thumb, 316 bytes, Stack size 72 bytes, gfps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = gfps_send_passkey &rArr; gatt_svc_send_data &rArr; gatt_svc_send_data_in_queue &rArr; calloc
</UL>
<BR>[Calls]<UL><LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_get_conn_handle
<LI><a href="#[bf0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aes128_ecb_encrypt (via Veneer)
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_random (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[801]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_svc_send_data
</UL>
<BR>[Called By]<UL><LI><a href="#[728]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_send_le_bond_confirm
<LI><a href="#[726]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_send_legacy_bond_confirm
</UL>

<P><STRONG><a name="[cb6]"></a>gfps_encode_additional_packet</STRONG> (Thumb, 104 bytes, Stack size 32 bytes, gfps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = gfps_encode_additional_packet &rArr; gfps_hmac_sha256 &rArr; gfps_xor
</UL>
<BR>[Calls]<UL><LI><a href="#[7fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_hmac_sha256
<LI><a href="#[cb7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_ase_ctr_concat
</UL>
<BR>[Called By]<UL><LI><a href="#[76c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_send_personalized_name
</UL>

<P><STRONG><a name="[cb8]"></a>gfps_decode_additional_packet</STRONG> (Thumb, 154 bytes, Stack size 56 bytes, gfps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = gfps_decode_additional_packet &rArr; gfps_hmac_sha256 &rArr; gfps_xor
</UL>
<BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[7fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_hmac_sha256
<LI><a href="#[cb7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_ase_ctr_concat
</UL>
<BR>[Called By]<UL><LI><a href="#[cc6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_handle_char_additional_data
</UL>

<P><STRONG><a name="[76c]"></a>gfps_send_personalized_name</STRONG> (Thumb, 286 bytes, Stack size 56 bytes, gfps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 360<LI>Call Chain = gfps_send_personalized_name &rArr; gfps_encode_additional_packet &rArr; gfps_hmac_sha256 &rArr; gfps_xor
</UL>
<BR>[Calls]<UL><LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_get_conn_handle
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_random (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calloc
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[801]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_svc_send_data
<LI><a href="#[cb6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_encode_additional_packet
</UL>
<BR>[Called By]<UL><LI><a href="#[72f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_personalized_name_send
</UL>

<P><STRONG><a name="[cb9]"></a>gfps_send_kbp_response</STRONG> (Thumb, 368 bytes, Stack size 80 bytes, gfps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = gfps_send_kbp_response &rArr; gatt_svc_send_data &rArr; gatt_svc_send_data_in_queue &rArr; calloc
</UL>
<BR>[Calls]<UL><LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_get_conn_handle
<LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_get_param
<LI><a href="#[bf0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aes128_ecb_encrypt (via Veneer)
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_random (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[801]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_svc_send_data
<LI><a href="#[cba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_swap_endian
</UL>
<BR>[Called By]<UL><LI><a href="#[cc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_handle_char_kbp
</UL>

<P><STRONG><a name="[765]"></a>gfps_set_identity_address</STRONG> (Thumb, 172 bytes, Stack size 48 bytes, gfps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = gfps_set_identity_address &rArr; gfps_swap_endian
</UL>
<BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[cba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_swap_endian
</UL>
<BR>[Called By]<UL><LI><a href="#[40e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_device_handle_power_on
</UL>

<P><STRONG><a name="[cbb]"></a>gfps_send_kbp_response_le</STRONG> (Thumb, 476 bytes, Stack size 80 bytes, gfps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = gfps_send_kbp_response_le &rArr; gatt_svc_send_data &rArr; gatt_svc_send_data_in_queue &rArr; calloc
</UL>
<BR>[Calls]<UL><LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_get_conn_handle
<LI><a href="#[6ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_bond_cfg_local_key_distribute
<LI><a href="#[bf0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aes128_ecb_encrypt (via Veneer)
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_random (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[801]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_svc_send_data
</UL>
<BR>[Called By]<UL><LI><a href="#[cc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_handle_char_kbp
</UL>

<P><STRONG><a name="[cbc]"></a>gfps_decrypt_kbp_request</STRONG> (Thumb, 82 bytes, Stack size 24 bytes, gfps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = gfps_decrypt_kbp_request
</UL>
<BR>[Calls]<UL><LI><a href="#[cbd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aes128_ecb_decrypt (via Veneer)
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[cc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_handle_char_kbp
</UL>

<P><STRONG><a name="[cbe]"></a>gfps_handle_kbp_request</STRONG> (Thumb, 206 bytes, Stack size 24 bytes, gfps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = gfps_handle_kbp_request &rArr; gfps_swap_endian
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[cba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_swap_endian
</UL>
<BR>[Called By]<UL><LI><a href="#[cc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_handle_char_kbp
</UL>

<P><STRONG><a name="[cbf]"></a>gfps_handle_action_request</STRONG> (Thumb, 170 bytes, Stack size 32 bytes, gfps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = gfps_handle_action_request &rArr; gfps_swap_endian
</UL>
<BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[cba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_swap_endian
</UL>
<BR>[Called By]<UL><LI><a href="#[cc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_handle_char_kbp
</UL>

<P><STRONG><a name="[cc0]"></a>gfps_handle_char_kbp</STRONG> (Thumb, 404 bytes, Stack size 168 bytes, gfps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 528<LI>Call Chain = gfps_handle_char_kbp &rArr; gfps_gen_aes_key &rArr; gfps_gen_ecdh_key &rArr; ecdh_shared_secret_enhanced &rArr; ecc_sub_proc &rArr; ecc_send_io_msg
</UL>
<BR>[Calls]<UL><LI><a href="#[844]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_get_conn_id_by_handle
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[cc1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_gen_aes_key
<LI><a href="#[cbf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_handle_action_request
<LI><a href="#[cbe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_handle_kbp_request
<LI><a href="#[cbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_decrypt_kbp_request
<LI><a href="#[cbb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_send_kbp_response_le
<LI><a href="#[cb9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_send_kbp_response
</UL>
<BR>[Called By]<UL><LI><a href="#[77a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_handle_pending_char_kbp
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_attr_write_cb
</UL>

<P><STRONG><a name="[cc2]"></a>gfps_handle_char_passkey</STRONG> (Thumb, 190 bytes, Stack size 96 bytes, gfps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = gfps_handle_char_passkey
</UL>
<BR>[Calls]<UL><LI><a href="#[844]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_get_conn_id_by_handle
<LI><a href="#[cbd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aes128_ecb_decrypt (via Veneer)
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_attr_write_cb
</UL>

<P><STRONG><a name="[cc3]"></a>gfps_handle_char_additional_passkey</STRONG> (Thumb, 220 bytes, Stack size 96 bytes, gfps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = gfps_handle_char_additional_passkey
</UL>
<BR>[Calls]<UL><LI><a href="#[844]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_get_conn_id_by_handle
<LI><a href="#[cbd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aes128_ecb_decrypt (via Veneer)
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_attr_write_cb
</UL>

<P><STRONG><a name="[115e]"></a>gfps_set_additional_passkey_info</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, gfps.o(.text), UNUSED)
<BR><BR>[Called By]<UL></UL>

<P><STRONG><a name="[cc4]"></a>gfps_send_additional_passkey_response</STRONG> (Thumb, 366 bytes, Stack size 88 bytes, gfps.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_get_conn_handle
<LI><a href="#[bf0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aes128_ecb_encrypt (via Veneer)
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_random (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[801]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_svc_send_data
</UL>
<BR>[Called By]<UL></UL>

<P><STRONG><a name="[cc5]"></a>gfps_handle_char_account_key</STRONG> (Thumb, 140 bytes, Stack size 80 bytes, gfps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = gfps_handle_char_account_key
</UL>
<BR>[Calls]<UL><LI><a href="#[844]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_get_conn_id_by_handle
<LI><a href="#[cbd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aes128_ecb_decrypt (via Veneer)
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_attr_write_cb
</UL>

<P><STRONG><a name="[cc6]"></a>gfps_handle_char_additional_data</STRONG> (Thumb, 176 bytes, Stack size 72 bytes, gfps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 400<LI>Call Chain = gfps_handle_char_additional_data &rArr; gfps_decode_additional_packet &rArr; gfps_hmac_sha256 &rArr; gfps_xor
</UL>
<BR>[Calls]<UL><LI><a href="#[844]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_get_conn_id_by_handle
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calloc
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[cb8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_decode_additional_packet
</UL>
<BR>[Called By]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_attr_write_cb
</UL>

<P><STRONG><a name="[179]"></a>gfps_attr_write_cb</STRONG> (Thumb, 274 bytes, Stack size 48 bytes, gfps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 816<LI>Call Chain = gfps_attr_write_cb &rArr; gfps_finder_handle_beacon_action &rArr; gfps_handle_beacon_provision_request &rArr; gfps_finder_handle_set_eik_request &rArr; gfps_finder_rsp_set_eik &rArr; gfps_finder_rsp_generate_authkey &rArr; gfps_hmac_sha256 &rArr; gfps_xor
</UL>
<BR>[Calls]<UL><LI><a href="#[844]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_get_conn_id_by_handle
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calloc
<LI><a href="#[cc7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_handle_beacon_action
<LI><a href="#[cc6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_handle_char_additional_data
<LI><a href="#[cc5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_handle_char_account_key
<LI><a href="#[cc3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_handle_char_additional_passkey
<LI><a href="#[cc2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_handle_char_passkey
<LI><a href="#[cc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_handle_char_kbp
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gfps.o(.constdata)
</UL>
<P><STRONG><a name="[77a]"></a>gfps_handle_pending_char_kbp</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, gfps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 552<LI>Call Chain = gfps_handle_pending_char_kbp &rArr; gfps_handle_char_kbp &rArr; gfps_gen_aes_key &rArr; gfps_gen_ecdh_key &rArr; ecdh_shared_secret_enhanced &rArr; ecc_sub_proc &rArr; ecc_send_io_msg
</UL>
<BR>[Calls]<UL><LI><a href="#[cc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;server_ext_attr_write_confirm
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[cc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_handle_char_kbp
</UL>
<BR>[Called By]<UL><LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ecc_handle_msg
</UL>

<P><STRONG><a name="[17a]"></a>gfps_cccd_update_cb</STRONG> (Thumb, 144 bytes, Stack size 56 bytes, gfps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = gfps_cccd_update_cb
</UL>
<BR>[Calls]<UL><LI><a href="#[844]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_get_conn_id_by_handle
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gfps.o(.constdata)
</UL>
<P><STRONG><a name="[178]"></a>gfps_read_cb</STRONG> (Thumb, 590 bytes, Stack size 56 bytes, gfps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = gfps_read_cb &rArr; gfps_finder_set_random_nonce
</UL>
<BR>[Calls]<UL><LI><a href="#[bf0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aes128_ecb_encrypt (via Veneer)
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_random (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[cc9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_set_random_nonce
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gfps.o(.constdata)
</UL>
<P><STRONG><a name="[738]"></a>gfps_add_service</STRONG> (Thumb, 94 bytes, Stack size 24 bytes, gfps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = gfps_add_service &rArr; gatt_svc_add &rArr; calloc
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[802]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_svc_add
</UL>
<BR>[Called By]<UL><LI><a href="#[68b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_init
</UL>

<P><STRONG><a name="[748]"></a>gfps_get_subsequent_pairing_account_key</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, gfps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gfps_get_subsequent_pairing_account_key
</UL>
<BR>[Calls]<UL><LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[41f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_handle_b2s_connected
</UL>

<P><STRONG><a name="[767]"></a>gfps_set_pairing_status</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, gfps.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_device_handle_b2s_ble_bonded
</UL>

<P><STRONG><a name="[718]"></a>gfps_get_pairing_status</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, gfps.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[729]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_cb_handle_passkey
<LI><a href="#[712]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_adv_start
</UL>

<P><STRONG><a name="[741]"></a>gfps_reset_aeskey_and_pairing_status</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, gfps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gfps_reset_aeskey_and_pairing_status
</UL>
<BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_le_disconnect_cb
</UL>

<P><STRONG><a name="[cba]"></a>gfps_swap_endian</STRONG> (Thumb, 24 bytes, Stack size 12 bytes, gfps_crypto.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = gfps_swap_endian
</UL>
<BR>[Called By]<UL><LI><a href="#[765]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_set_identity_address
<LI><a href="#[cbf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_handle_action_request
<LI><a href="#[cbe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_handle_kbp_request
<LI><a href="#[cb9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_send_kbp_response
<LI><a href="#[ccc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_gen_ecdh_key
</UL>

<P><STRONG><a name="[ccf]"></a>gfps_xor</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, gfps_crypto.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = gfps_xor
</UL>
<BR>[Called By]<UL><LI><a href="#[75d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_gfps_generate_mac
<LI><a href="#[7fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_hmac_sha256
<LI><a href="#[cd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_aes_ctr
<LI><a href="#[cce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_ctr
</UL>

<P><STRONG><a name="[cca]"></a>gfps_key_already_in_account_based_key_list</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, gfps_crypto.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = gfps_key_already_in_account_based_key_list
</UL>
<BR>[Calls]<UL><LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[cb4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_gen_account_key_filter
</UL>

<P><STRONG><a name="[ccb]"></a>gfps_add_key_into_account_based_key_list</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, gfps_crypto.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[cb4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_gen_account_key_filter
</UL>

<P><STRONG><a name="[cb4]"></a>gfps_gen_account_key_filter</STRONG> (Thumb, 428 bytes, Stack size 144 bytes, gfps_crypto.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = gfps_gen_account_key_filter &rArr; gfps_key_already_in_account_based_key_list
</UL>
<BR>[Calls]<UL><LI><a href="#[960]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul (via Veneer)
<LI><a href="#[4cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d (via Veneer)
<LI><a href="#[4cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz (via Veneer)
<LI><a href="#[961]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd (via Veneer)
<LI><a href="#[782]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHA256 (via Veneer)
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calloc
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[ccb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_add_key_into_account_based_key_list
<LI><a href="#[cca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_key_already_in_account_based_key_list
</UL>
<BR>[Called By]<UL><LI><a href="#[715]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_gen_adv_data
</UL>

<P><STRONG><a name="[ccc]"></a>gfps_gen_ecdh_key</STRONG> (Thumb, 162 bytes, Stack size 160 bytes, gfps_crypto.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = gfps_gen_ecdh_key &rArr; ecdh_shared_secret_enhanced &rArr; ecc_sub_proc &rArr; ecc_send_io_msg
</UL>
<BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[cba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_swap_endian
<LI><a href="#[ccd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ecdh_shared_secret_enhanced
</UL>
<BR>[Called By]<UL><LI><a href="#[cc1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_gen_aes_key
</UL>

<P><STRONG><a name="[cc1]"></a>gfps_gen_aes_key</STRONG> (Thumb, 112 bytes, Stack size 88 bytes, gfps_crypto.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 360<LI>Call Chain = gfps_gen_aes_key &rArr; gfps_gen_ecdh_key &rArr; ecdh_shared_secret_enhanced &rArr; ecc_sub_proc &rArr; ecc_send_io_msg
</UL>
<BR>[Calls]<UL><LI><a href="#[782]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHA256 (via Veneer)
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[ccc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_gen_ecdh_key
</UL>
<BR>[Called By]<UL><LI><a href="#[cc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_handle_char_kbp
</UL>

<P><STRONG><a name="[cce]"></a>gfps_ctr</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, gfps_crypto.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = gfps_ctr &rArr; gfps_xor
</UL>
<BR>[Calls]<UL><LI><a href="#[bf0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aes128_ecb_encrypt (via Veneer)
<LI><a href="#[ccf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_xor
</UL>
<BR>[Called By]<UL><LI><a href="#[cad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_ctr_concat
</UL>

<P><STRONG><a name="[cad]"></a>gfps_ctr_concat</STRONG> (Thumb, 156 bytes, Stack size 56 bytes, gfps_crypto.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = gfps_ctr_concat &rArr; gfps_ctr &rArr; gfps_xor
</UL>
<BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[cce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_ctr
</UL>
<BR>[Called By]<UL><LI><a href="#[7c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_gfps_notify_connection_status
<LI><a href="#[cb3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_sass_get_encrypt_conn_status
</UL>

<P><STRONG><a name="[cd0]"></a>gfps_aes_ctr</STRONG> (Thumb, 108 bytes, Stack size 40 bytes, gfps_crypto.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = gfps_aes_ctr &rArr; gfps_xor
</UL>
<BR>[Calls]<UL><LI><a href="#[bf0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aes128_ecb_encrypt (via Veneer)
<LI><a href="#[ccf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_xor
</UL>
<BR>[Called By]<UL><LI><a href="#[cb7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_ase_ctr_concat
</UL>

<P><STRONG><a name="[cb7]"></a>gfps_ase_ctr_concat</STRONG> (Thumb, 158 bytes, Stack size 64 bytes, gfps_crypto.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = gfps_ase_ctr_concat &rArr; gfps_aes_ctr &rArr; gfps_xor
</UL>
<BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[cd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_aes_ctr
</UL>
<BR>[Called By]<UL><LI><a href="#[cb8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_decode_additional_packet
<LI><a href="#[cb6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_encode_additional_packet
</UL>

<P><STRONG><a name="[7fc]"></a>gfps_hmac_sha256</STRONG> (Thumb, 230 bytes, Stack size 256 bytes, gfps_crypto.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = gfps_hmac_sha256 &rArr; gfps_xor
</UL>
<BR>[Calls]<UL><LI><a href="#[782]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHA256 (via Veneer)
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
<LI><a href="#[336]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset (via Veneer)
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calloc
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[ccf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_xor
</UL>
<BR>[Called By]<UL><LI><a href="#[7f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dult_handle_ctrl_opcode
<LI><a href="#[cb8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_decode_additional_packet
<LI><a href="#[cb6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_encode_additional_packet
<LI><a href="#[ce5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_rsp_generate_authkey
<LI><a href="#[ce4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_verify_authkey
</UL>

<P><STRONG><a name="[75d]"></a>bt_gfps_generate_mac</STRONG> (Thumb, 262 bytes, Stack size 288 bytes, gfps_crypto.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = bt_gfps_generate_mac &rArr; gfps_xor
</UL>
<BR>[Calls]<UL><LI><a href="#[782]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHA256 (via Veneer)
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
<LI><a href="#[336]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset (via Veneer)
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calloc
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[ccf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_xor
</UL>
<BR>[Called By]<UL><LI><a href="#[75e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_account_key_find_inuse_account_key
<LI><a href="#[75b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_account_key_verify_mac
</UL>

<P><STRONG><a name="[cd1]"></a>gfps_ecc_manager_free</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, ecc_enhanced.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gfps_ecc_manager_free
</UL>
<BR>[Calls]<UL><LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>
<BR>[Called By]<UL><LI><a href="#[739]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_ecc_manager_malloc
</UL>

<P><STRONG><a name="[739]"></a>gfps_ecc_manager_malloc</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, ecc_enhanced.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = gfps_ecc_manager_malloc &rArr; calloc
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calloc
<LI><a href="#[cd1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_ecc_manager_free
</UL>
<BR>[Called By]<UL><LI><a href="#[68b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_init
</UL>

<P><STRONG><a name="[cdd]"></a>ecc_send_io_msg</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, ecc_enhanced.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ecc_send_io_msg
</UL>
<BR>[Called By]<UL><LI><a href="#[779]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ecc_sub_proc
</UL>

<P><STRONG><a name="[779]"></a>ecc_sub_proc</STRONG> (Thumb, 444 bytes, Stack size 64 bytes, ecc_enhanced.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = ecc_sub_proc &rArr; ecc_send_io_msg
</UL>
<BR>[Calls]<UL><LI><a href="#[cd6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xycz_add_c
<LI><a href="#[cd7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xycz_add
<LI><a href="#[cd4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xycz_initial_double
<LI><a href="#[cdb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apply_z
<LI><a href="#[cdc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ecc_point_is_zero
<LI><a href="#[cda]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vli_mod_inv
<LI><a href="#[cd9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vli_mod_mult_fast
<LI><a href="#[cd8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vli_mod_sub
<LI><a href="#[cd3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vli_set
<LI><a href="#[cd2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vli_num_bits
<LI><a href="#[cd5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vli_test_bit
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[cdd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ecc_send_io_msg
</UL>
<BR>[Called By]<UL><LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ecc_handle_msg
<LI><a href="#[ccd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ecdh_shared_secret_enhanced
</UL>

<P><STRONG><a name="[ccd]"></a>ecdh_shared_secret_enhanced</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, ecc_enhanced.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = ecdh_shared_secret_enhanced &rArr; ecc_sub_proc &rArr; ecc_send_io_msg
</UL>
<BR>[Calls]<UL><LI><a href="#[cde]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ecc_native2bytes
<LI><a href="#[cdf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ecc_bytes2native
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[779]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ecc_sub_proc
</UL>
<BR>[Called By]<UL><LI><a href="#[ccc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_gen_ecdh_key
</UL>

<P><STRONG><a name="[1341]"></a>ecdh_enter_test_mode</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, ecc_enhanced.o(.text), UNUSED)

<P><STRONG><a name="[1342]"></a>ecdh_exit_test_mode</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, ecc_enhanced.o(.text), UNUSED)

<P><STRONG><a name="[ce0]"></a>gfps_finder_get_random_nonce</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, gfps_find_my_device.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gfps_finder_get_random_nonce
</UL>
<BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[79e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_rsp_ring_state
<LI><a href="#[794]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_rsp_ring_request
<LI><a href="#[cf8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_handle_beacon_utp_request
<LI><a href="#[cf5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_handle_beacon_ring_request
<LI><a href="#[cf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_handle_beacon_key_recovery_request
<LI><a href="#[cf3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_handle_beacon_provision_request
<LI><a href="#[cf1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_handle_set_eik_request
<LI><a href="#[cf0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_rsp_utp_request
<LI><a href="#[cef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_rsp_key_recovery
<LI><a href="#[cee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_rsp_clear_eik
<LI><a href="#[ced]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_rsp_set_eik
<LI><a href="#[cec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_rsp_beacon_provision_state
<LI><a href="#[ceb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_rsp_beacon_param
</UL>

<P><STRONG><a name="[cc9]"></a>gfps_finder_set_random_nonce</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, gfps_find_my_device.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gfps_finder_set_random_nonce
</UL>
<BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_read_cb
<LI><a href="#[cf3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_handle_beacon_provision_request
</UL>

<P><STRONG><a name="[ce1]"></a>gfps_finder_get_owner_accountkey</STRONG> (Thumb, 88 bytes, Stack size 24 bytes, gfps_find_my_device.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = gfps_finder_get_owner_accountkey &rArr; gfps_get_owner_key_valid
</UL>
<BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[79a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_get_owner_key_valid
<LI><a href="#[cb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_get_account_key_info
</UL>
<BR>[Called By]<UL><LI><a href="#[cf3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_handle_beacon_provision_request
<LI><a href="#[cef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_rsp_key_recovery
<LI><a href="#[cee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_rsp_clear_eik
<LI><a href="#[ced]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_rsp_set_eik
</UL>

<P><STRONG><a name="[7fb]"></a>gfps_finder_get_recovery_key</STRONG> (Thumb, 96 bytes, Stack size 80 bytes, gfps_find_my_device.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = gfps_finder_get_recovery_key
</UL>
<BR>[Calls]<UL><LI><a href="#[782]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHA256 (via Veneer)
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4 (via Veneer)
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[7f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dult_handle_ctrl_opcode
<LI><a href="#[cf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_handle_beacon_key_recovery_request
<LI><a href="#[cef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_rsp_key_recovery
</UL>

<P><STRONG><a name="[ce2]"></a>gfps_finder_get_ring_key</STRONG> (Thumb, 92 bytes, Stack size 80 bytes, gfps_find_my_device.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = gfps_finder_get_ring_key
</UL>
<BR>[Calls]<UL><LI><a href="#[782]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHA256 (via Veneer)
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4 (via Veneer)
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[79e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_rsp_ring_state
<LI><a href="#[794]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_rsp_ring_request
<LI><a href="#[cf5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_handle_beacon_ring_request
</UL>

<P><STRONG><a name="[ce3]"></a>gfps_finder_get_utp_key</STRONG> (Thumb, 94 bytes, Stack size 80 bytes, gfps_find_my_device.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = gfps_finder_get_utp_key
</UL>
<BR>[Calls]<UL><LI><a href="#[782]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHA256 (via Veneer)
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4 (via Veneer)
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[cf8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_handle_beacon_utp_request
<LI><a href="#[cf0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_rsp_utp_request
</UL>

<P><STRONG><a name="[ce4]"></a>gfps_finder_verify_authkey</STRONG> (Thumb, 172 bytes, Stack size 72 bytes, gfps_find_my_device.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = gfps_finder_verify_authkey &rArr; gfps_hmac_sha256 &rArr; gfps_xor
</UL>
<BR>[Calls]<UL><LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calloc
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[7fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_hmac_sha256
</UL>
<BR>[Called By]<UL><LI><a href="#[cf8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_handle_beacon_utp_request
<LI><a href="#[cf5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_handle_beacon_ring_request
<LI><a href="#[cf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_handle_beacon_key_recovery_request
<LI><a href="#[cf3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_handle_beacon_provision_request
</UL>

<P><STRONG><a name="[ce5]"></a>gfps_finder_rsp_generate_authkey</STRONG> (Thumb, 170 bytes, Stack size 88 bytes, gfps_find_my_device.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 360<LI>Call Chain = gfps_finder_rsp_generate_authkey &rArr; gfps_hmac_sha256 &rArr; gfps_xor
</UL>
<BR>[Calls]<UL><LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calloc
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[7fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_hmac_sha256
</UL>
<BR>[Called By]<UL><LI><a href="#[79e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_rsp_ring_state
<LI><a href="#[794]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_rsp_ring_request
<LI><a href="#[cf0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_rsp_utp_request
<LI><a href="#[cef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_rsp_key_recovery
<LI><a href="#[cee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_rsp_clear_eik
<LI><a href="#[ced]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_rsp_set_eik
<LI><a href="#[cec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_rsp_beacon_provision_state
<LI><a href="#[ceb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_rsp_beacon_param
</UL>

<P><STRONG><a name="[ce6]"></a>gfps_finder_verify_eik_authkey</STRONG> (Thumb, 122 bytes, Stack size 64 bytes, gfps_find_my_device.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = gfps_finder_verify_eik_authkey &rArr; calloc
</UL>
<BR>[Calls]<UL><LI><a href="#[782]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHA256 (via Veneer)
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calloc
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>
<BR>[Called By]<UL><LI><a href="#[cf6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_handle_deactive_utp_request
<LI><a href="#[cf2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_handle_clear_eik_request
<LI><a href="#[cf1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_handle_set_eik_request
</UL>

<P><STRONG><a name="[ce7]"></a>gfps_finder_decrypted_eik</STRONG> (Thumb, 118 bytes, Stack size 48 bytes, gfps_find_my_device.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = gfps_finder_decrypted_eik
</UL>
<BR>[Calls]<UL><LI><a href="#[cbd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aes128_ecb_decrypt (via Veneer)
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[cf1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_handle_set_eik_request
</UL>

<P><STRONG><a name="[ce8]"></a>gfps_finder_encrypted_eik</STRONG> (Thumb, 94 bytes, Stack size 48 bytes, gfps_find_my_device.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = gfps_finder_encrypted_eik
</UL>
<BR>[Calls]<UL><LI><a href="#[bf0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aes128_ecb_encrypt (via Veneer)
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[cef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_rsp_key_recovery
</UL>

<P><STRONG><a name="[784]"></a>gfps_finder_encrypted_beacon_data</STRONG> (Thumb, 90 bytes, Stack size 32 bytes, gfps_find_my_device.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = gfps_finder_encrypted_beacon_data &rArr; aes256_ecb_encrypt &rArr; aes256_key_swap
</UL>
<BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[ce9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aes256_ecb_encrypt
</UL>
<BR>[Called By]<UL><LI><a href="#[783]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_finder_generate_adv_ei_and_hash
</UL>

<P><STRONG><a name="[cea]"></a>gfps_finder_send_rsp</STRONG> (Thumb, 160 bytes, Stack size 48 bytes, gfps_find_my_device.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = gfps_finder_send_rsp &rArr; gatt_svc_send_data &rArr; gatt_svc_send_data_in_queue &rArr; calloc
</UL>
<BR>[Calls]<UL><LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_get_conn_handle
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calloc
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[801]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_svc_send_data
</UL>
<BR>[Called By]<UL><LI><a href="#[79e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_rsp_ring_state
<LI><a href="#[794]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_rsp_ring_request
<LI><a href="#[cf0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_rsp_utp_request
<LI><a href="#[cef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_rsp_key_recovery
<LI><a href="#[cee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_rsp_clear_eik
<LI><a href="#[ced]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_rsp_set_eik
<LI><a href="#[cec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_rsp_beacon_provision_state
<LI><a href="#[ceb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_rsp_beacon_param
</UL>

<P><STRONG><a name="[ceb]"></a>gfps_finder_rsp_beacon_param</STRONG> (Thumb, 190 bytes, Stack size 96 bytes, gfps_find_my_device.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 456<LI>Call Chain = gfps_finder_rsp_beacon_param &rArr; gfps_finder_rsp_generate_authkey &rArr; gfps_hmac_sha256 &rArr; gfps_xor
</UL>
<BR>[Calls]<UL><LI><a href="#[bf0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aes128_ecb_encrypt (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[cea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_send_rsp
<LI><a href="#[ce5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_rsp_generate_authkey
<LI><a href="#[ce0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_get_random_nonce
</UL>
<BR>[Called By]<UL><LI><a href="#[cf3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_handle_beacon_provision_request
</UL>

<P><STRONG><a name="[cec]"></a>gfps_finder_rsp_beacon_provision_state</STRONG> (Thumb, 154 bytes, Stack size 96 bytes, gfps_find_my_device.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 456<LI>Call Chain = gfps_finder_rsp_beacon_provision_state &rArr; gfps_finder_rsp_generate_authkey &rArr; gfps_hmac_sha256 &rArr; gfps_xor
</UL>
<BR>[Calls]<UL><LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[cea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_send_rsp
<LI><a href="#[ce5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_rsp_generate_authkey
<LI><a href="#[ce0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_get_random_nonce
</UL>
<BR>[Called By]<UL><LI><a href="#[cf3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_handle_beacon_provision_request
</UL>

<P><STRONG><a name="[ced]"></a>gfps_finder_rsp_set_eik</STRONG> (Thumb, 102 bytes, Stack size 80 bytes, gfps_find_my_device.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 440<LI>Call Chain = gfps_finder_rsp_set_eik &rArr; gfps_finder_rsp_generate_authkey &rArr; gfps_hmac_sha256 &rArr; gfps_xor
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[cea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_send_rsp
<LI><a href="#[ce5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_rsp_generate_authkey
<LI><a href="#[ce1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_get_owner_accountkey
<LI><a href="#[ce0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_get_random_nonce
</UL>
<BR>[Called By]<UL><LI><a href="#[cf1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_handle_set_eik_request
</UL>

<P><STRONG><a name="[cee]"></a>gfps_finder_rsp_clear_eik</STRONG> (Thumb, 100 bytes, Stack size 80 bytes, gfps_find_my_device.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 440<LI>Call Chain = gfps_finder_rsp_clear_eik &rArr; gfps_finder_rsp_generate_authkey &rArr; gfps_hmac_sha256 &rArr; gfps_xor
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[cea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_send_rsp
<LI><a href="#[ce5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_rsp_generate_authkey
<LI><a href="#[ce1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_get_owner_accountkey
<LI><a href="#[ce0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_get_random_nonce
</UL>
<BR>[Called By]<UL><LI><a href="#[cf2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_handle_clear_eik_request
</UL>

<P><STRONG><a name="[cef]"></a>gfps_finder_rsp_key_recovery</STRONG> (Thumb, 174 bytes, Stack size 112 bytes, gfps_find_my_device.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 472<LI>Call Chain = gfps_finder_rsp_key_recovery &rArr; gfps_finder_rsp_generate_authkey &rArr; gfps_hmac_sha256 &rArr; gfps_xor
</UL>
<BR>[Calls]<UL><LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[7fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_get_recovery_key
<LI><a href="#[cea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_send_rsp
<LI><a href="#[ce8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_encrypted_eik
<LI><a href="#[ce5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_rsp_generate_authkey
<LI><a href="#[ce1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_get_owner_accountkey
<LI><a href="#[ce0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_get_random_nonce
</UL>
<BR>[Called By]<UL><LI><a href="#[cf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_handle_beacon_key_recovery_request
</UL>

<P><STRONG><a name="[794]"></a>gfps_finder_rsp_ring_request</STRONG> (Thumb, 130 bytes, Stack size 72 bytes, gfps_find_my_device.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 432<LI>Call Chain = gfps_finder_rsp_ring_request &rArr; gfps_finder_rsp_generate_authkey &rArr; gfps_hmac_sha256 &rArr; gfps_xor
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[cea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_send_rsp
<LI><a href="#[ce5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_rsp_generate_authkey
<LI><a href="#[ce2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_get_ring_key
<LI><a href="#[ce0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_get_random_nonce
</UL>
<BR>[Called By]<UL><LI><a href="#[505]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_finder_send_ring_rsp
<LI><a href="#[799]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_finder_cb
</UL>

<P><STRONG><a name="[79e]"></a>gfps_finder_rsp_ring_state</STRONG> (Thumb, 124 bytes, Stack size 72 bytes, gfps_find_my_device.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 432<LI>Call Chain = gfps_finder_rsp_ring_state &rArr; gfps_finder_rsp_generate_authkey &rArr; gfps_hmac_sha256 &rArr; gfps_xor
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[cea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_send_rsp
<LI><a href="#[ce5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_rsp_generate_authkey
<LI><a href="#[ce2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_get_ring_key
<LI><a href="#[ce0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_get_random_nonce
</UL>
<BR>[Called By]<UL><LI><a href="#[799]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_finder_cb
</UL>

<P><STRONG><a name="[cf0]"></a>gfps_finder_rsp_utp_request</STRONG> (Thumb, 90 bytes, Stack size 64 bytes, gfps_find_my_device.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 424<LI>Call Chain = gfps_finder_rsp_utp_request &rArr; gfps_finder_rsp_generate_authkey &rArr; gfps_hmac_sha256 &rArr; gfps_xor
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[cea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_send_rsp
<LI><a href="#[ce5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_rsp_generate_authkey
<LI><a href="#[ce3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_get_utp_key
<LI><a href="#[ce0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_get_random_nonce
</UL>
<BR>[Called By]<UL><LI><a href="#[cf8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_handle_beacon_utp_request
</UL>

<P><STRONG><a name="[cf1]"></a>gfps_finder_handle_set_eik_request</STRONG> (Thumb, 202 bytes, Stack size 112 bytes, gfps_find_my_device.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 552<LI>Call Chain = gfps_finder_handle_set_eik_request &rArr; gfps_finder_rsp_set_eik &rArr; gfps_finder_rsp_generate_authkey &rArr; gfps_hmac_sha256 &rArr; gfps_xor
</UL>
<BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[ced]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_rsp_set_eik
<LI><a href="#[ce7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_decrypted_eik
<LI><a href="#[ce6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_verify_eik_authkey
<LI><a href="#[ce0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_get_random_nonce
</UL>
<BR>[Called By]<UL><LI><a href="#[cf3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_handle_beacon_provision_request
</UL>

<P><STRONG><a name="[cf2]"></a>gfps_handle_clear_eik_request</STRONG> (Thumb, 112 bytes, Stack size 80 bytes, gfps_find_my_device.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 520<LI>Call Chain = gfps_handle_clear_eik_request &rArr; gfps_finder_rsp_clear_eik &rArr; gfps_finder_rsp_generate_authkey &rArr; gfps_hmac_sha256 &rArr; gfps_xor
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[cee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_rsp_clear_eik
<LI><a href="#[ce6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_verify_eik_authkey
</UL>
<BR>[Called By]<UL><LI><a href="#[cf3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_handle_beacon_provision_request
</UL>

<P><STRONG><a name="[cf3]"></a>gfps_handle_beacon_provision_request</STRONG> (Thumb, 532 bytes, Stack size 192 bytes, gfps_find_my_device.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 744<LI>Call Chain = gfps_handle_beacon_provision_request &rArr; gfps_finder_handle_set_eik_request &rArr; gfps_finder_rsp_set_eik &rArr; gfps_finder_rsp_generate_authkey &rArr; gfps_hmac_sha256 &rArr; gfps_xor
</UL>
<BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_random (via Veneer)
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[79b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_set_owner_key_valid
<LI><a href="#[79a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_get_owner_key_valid
<LI><a href="#[cc9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_set_random_nonce
<LI><a href="#[cb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_get_account_key_info
<LI><a href="#[cf2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_handle_clear_eik_request
<LI><a href="#[cf1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_handle_set_eik_request
<LI><a href="#[cec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_rsp_beacon_provision_state
<LI><a href="#[ceb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_rsp_beacon_param
<LI><a href="#[ce4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_verify_authkey
<LI><a href="#[ce1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_get_owner_accountkey
<LI><a href="#[ce0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_get_random_nonce
</UL>
<BR>[Called By]<UL><LI><a href="#[cc7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_handle_beacon_action
</UL>

<P><STRONG><a name="[cf4]"></a>gfps_handle_beacon_key_recovery_request</STRONG> (Thumb, 146 bytes, Stack size 96 bytes, gfps_find_my_device.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 568<LI>Call Chain = gfps_handle_beacon_key_recovery_request &rArr; gfps_finder_rsp_key_recovery &rArr; gfps_finder_rsp_generate_authkey &rArr; gfps_hmac_sha256 &rArr; gfps_xor
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[7fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_get_recovery_key
<LI><a href="#[cef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_rsp_key_recovery
<LI><a href="#[ce4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_verify_authkey
<LI><a href="#[ce0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_get_random_nonce
</UL>
<BR>[Called By]<UL><LI><a href="#[cc7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_handle_beacon_action
</UL>

<P><STRONG><a name="[cf5]"></a>gfps_finder_handle_beacon_ring_request</STRONG> (Thumb, 284 bytes, Stack size 104 bytes, gfps_find_my_device.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 448<LI>Call Chain = gfps_finder_handle_beacon_ring_request &rArr; gfps_finder_verify_authkey &rArr; gfps_hmac_sha256 &rArr; gfps_xor
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[ce4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_verify_authkey
<LI><a href="#[ce2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_get_ring_key
<LI><a href="#[ce0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_get_random_nonce
</UL>
<BR>[Called By]<UL><LI><a href="#[cc7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_handle_beacon_action
</UL>

<P><STRONG><a name="[cf6]"></a>gfps_handle_deactive_utp_request</STRONG> (Thumb, 86 bytes, Stack size 64 bytes, gfps_find_my_device.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = gfps_handle_deactive_utp_request &rArr; gfps_finder_verify_eik_authkey &rArr; calloc
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[ce6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_verify_eik_authkey
</UL>
<BR>[Called By]<UL><LI><a href="#[cf8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_handle_beacon_utp_request
</UL>

<P><STRONG><a name="[cf7]"></a>gfps_handle_active_utp_request</STRONG> (Thumb, 64 bytes, Stack size 48 bytes, gfps_find_my_device.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = gfps_handle_active_utp_request
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[cf8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_handle_beacon_utp_request
</UL>

<P><STRONG><a name="[cf8]"></a>gfps_finder_handle_beacon_utp_request</STRONG> (Thumb, 166 bytes, Stack size 72 bytes, gfps_find_my_device.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 496<LI>Call Chain = gfps_finder_handle_beacon_utp_request &rArr; gfps_finder_rsp_utp_request &rArr; gfps_finder_rsp_generate_authkey &rArr; gfps_hmac_sha256 &rArr; gfps_xor
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[cf7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_handle_active_utp_request
<LI><a href="#[cf6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_handle_deactive_utp_request
<LI><a href="#[cf0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_rsp_utp_request
<LI><a href="#[ce4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_verify_authkey
<LI><a href="#[ce3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_get_utp_key
<LI><a href="#[ce0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_get_random_nonce
</UL>
<BR>[Called By]<UL><LI><a href="#[cc7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_handle_beacon_action
</UL>

<P><STRONG><a name="[cc7]"></a>gfps_finder_handle_beacon_action</STRONG> (Thumb, 134 bytes, Stack size 24 bytes, gfps_find_my_device.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 768<LI>Call Chain = gfps_finder_handle_beacon_action &rArr; gfps_handle_beacon_provision_request &rArr; gfps_finder_handle_set_eik_request &rArr; gfps_finder_rsp_set_eik &rArr; gfps_finder_rsp_generate_authkey &rArr; gfps_hmac_sha256 &rArr; gfps_xor
</UL>
<BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[cf8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_handle_beacon_utp_request
<LI><a href="#[cf5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_handle_beacon_ring_request
<LI><a href="#[cf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_handle_beacon_key_recovery_request
<LI><a href="#[cf3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_handle_beacon_provision_request
</UL>
<BR>[Called By]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_attr_write_cb
</UL>

<P><STRONG><a name="[7a6]"></a>gfps_finder_init</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, gfps_find_my_device.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gfps_finder_init
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[4c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_finder_init
</UL>

<P><STRONG><a name="[cb1]"></a>gfps_sass_malloc_key_for_filter</STRONG> (Thumb, 380 bytes, Stack size 64 bytes, gfps_sass_conn_status.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = gfps_sass_malloc_key_for_filter &rArr; calloc
</UL>
<BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr (via Veneer)
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calloc
<LI><a href="#[cb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_get_account_key_info
</UL>
<BR>[Called By]<UL><LI><a href="#[715]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_gen_adv_data
</UL>

<P><STRONG><a name="[cb5]"></a>gfps_sass_free_key_for_filter</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, gfps_sass_conn_status.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gfps_sass_free_key_for_filter
</UL>
<BR>[Calls]<UL><LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>
<BR>[Called By]<UL><LI><a href="#[715]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_gen_adv_data
</UL>

<P><STRONG><a name="[cf9]"></a>gfps_sass_get_inuse_accountkey</STRONG> (Thumb, 176 bytes, Stack size 40 bytes, gfps_sass_conn_status.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = gfps_sass_get_inuse_accountkey
</UL>
<BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[cb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_get_account_key_info
</UL>
<BR>[Called By]<UL><LI><a href="#[cb3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_sass_get_encrypt_conn_status
</UL>

<P><STRONG><a name="[cb2]"></a>gfps_sass_set_iv</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, gfps_sass_conn_status.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[715]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_gen_adv_data
</UL>

<P><STRONG><a name="[cb3]"></a>gfps_sass_get_encrypt_conn_status</STRONG> (Thumb, 110 bytes, Stack size 80 bytes, gfps_sass_conn_status.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 860<LI>Call Chain = gfps_sass_get_encrypt_conn_status &rArr; sha256_hkdf &rArr; hmac_sha256_crypt &rArr; hmac_sha256_finish &rArr; mbedtls_sha256_update &rArr; mbedtls_sha256_update_ret &rArr; mbedtls_internal_sha256_process
</UL>
<BR>[Calls]<UL><LI><a href="#[cac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sha256_hkdf
<LI><a href="#[cad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_ctr_concat
<LI><a href="#[cf9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_sass_get_inuse_accountkey
</UL>
<BR>[Called By]<UL><LI><a href="#[715]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_gen_adv_data
</UL>

<P><STRONG><a name="[750]"></a>gfps_sass_set_conn_status</STRONG> (Thumb, 104 bytes, Stack size 16 bytes, gfps_sass_conn_status.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = gfps_sass_set_conn_status
</UL>
<BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[754]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_get_recently_inuse_account_key_index
<LI><a href="#[753]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_get_inuse_account_key_index
</UL>
<BR>[Called By]<UL><LI><a href="#[758]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_msg_notify_connection_status
<LI><a href="#[74e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_adv_check_sass_conn_status
<LI><a href="#[7ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_msg_update_custom_data
</UL>

<P><STRONG><a name="[74f]"></a>gfps_sass_get_conn_status</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, gfps_sass_conn_status.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gfps_sass_get_conn_status
</UL>
<BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[758]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_msg_notify_connection_status
<LI><a href="#[74e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_adv_check_sass_conn_status
<LI><a href="#[7ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_msg_update_custom_data
</UL>

<P><STRONG><a name="[731]"></a>gfps_sass_conn_status_init</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, gfps_sass_conn_status.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gfps_sass_conn_status_init
</UL>
<BR>[Called By]<UL><LI><a href="#[68b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_init
</UL>

<P><STRONG><a name="[cfa]"></a>sys_mgr_event_post</STRONG> (Thumb, 50 bytes, Stack size 24 bytes, sys_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = sys_mgr_event_post
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[520]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_mgr_power_on
<LI><a href="#[525]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_mgr_power_off
</UL>

<P><STRONG><a name="[520]"></a>sys_mgr_power_on</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, sys_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = sys_mgr_power_on &rArr; sys_ipc_publish
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[cfb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_ipc_publish
<LI><a href="#[cfa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_mgr_event_post
</UL>
<BR>[Called By]<UL><LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mp_hci_test_mmi_handle_action
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_handle_action
</UL>

<P><STRONG><a name="[525]"></a>sys_mgr_power_off</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, sys_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = sys_mgr_power_off &rArr; sys_ipc_publish
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[cfb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_ipc_publish
<LI><a href="#[cfa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_mgr_event_post
</UL>
<BR>[Called By]<UL><LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mp_hci_test_mmi_handle_action
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_handle_action
<LI><a href="#[522]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_power_off
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_policy_cback
</UL>

<P><STRONG><a name="[2e6]"></a>sys_mgr_event_handle</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, sys_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = sys_mgr_event_handle
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_task
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mp_hci_test_task
</UL>

<P><STRONG><a name="[e92]"></a>sys_mgr_event_register</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, sys_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = sys_mgr_event_register
</UL>
<BR>[Called By]<UL><LI><a href="#[a3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_init
<LI><a href="#[cfd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_init
<LI><a href="#[e47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notification_buffer_init
<LI><a href="#[e8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bin_loader_init
<LI><a href="#[f87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_init
<LI><a href="#[f25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_hal_init
</UL>

<P><STRONG><a name="[39f]"></a>sys_mgr_cback_register</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, sys_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = sys_mgr_cback_register
</UL>
<BR>[Called By]<UL><LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mp_hci_test_init
<LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_init
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_charger_init
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_auto_power_off_init
<LI><a href="#[39d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_discharger_init
</UL>

<P><STRONG><a name="[70b]"></a>sys_mgr_cback_unregister</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, sys_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = sys_mgr_cback_unregister
</UL>
<BR>[Called By]<UL><LI><a href="#[70a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mp_hci_test_deinit
</UL>

<P><STRONG><a name="[327]"></a>sys_mgr_init</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, sys_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = sys_mgr_init &rArr; sys_timer_init &rArr; hw_timer_create &rArr; hw_timer_create_int &rArr; hw_timer_driver_init_int &rArr; hw_timer_update_isr &rArr; RamVectorTableUpdate_for_xip_isr
</UL>
<BR>[Calls]<UL><LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
<LI><a href="#[cfd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_init
<LI><a href="#[cfc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_ipc_init
<LI><a href="#[cfe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_event_init
</UL>
<BR>[Called By]<UL><LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;framework_init
</UL>

<P><STRONG><a name="[cff]"></a>gap_lib_mpa_handle_l2c_disconn_ind</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, gap_lib_br.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = gap_lib_mpa_handle_l2c_disconn_ind
</UL>
<BR>[Calls]<UL><LI><a href="#[d01]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_chann_del
<LI><a href="#[d00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_chann_find_by_type
</UL>
<BR>[Called By]<UL><LI><a href="#[d05]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_lib_br_handle_btif_msg
</UL>

<P><STRONG><a name="[d02]"></a>gap_lib_br_handle_vendor_cmd_rsp</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, gap_lib_br.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gap_lib_br_handle_vendor_cmd_rsp
</UL>
<BR>[Calls]<UL><LI><a href="#[d03]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;legacy_check_callback
</UL>
<BR>[Called By]<UL><LI><a href="#[d05]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_lib_br_handle_btif_msg
</UL>

<P><STRONG><a name="[d04]"></a>gap_lib_br_handle_vendor_evt</STRONG> (Thumb, 112 bytes, Stack size 16 bytes, gap_lib_br.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = gap_lib_br_handle_vendor_evt
</UL>
<BR>[Calls]<UL><LI><a href="#[d03]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;legacy_check_callback
</UL>
<BR>[Called By]<UL><LI><a href="#[d05]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_lib_br_handle_btif_msg
</UL>

<P><STRONG><a name="[d05]"></a>gap_lib_br_handle_btif_msg</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, gap_lib_br.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = gap_lib_br_handle_btif_msg &rArr; gap_lib_br_handle_vendor_evt
</UL>
<BR>[Calls]<UL><LI><a href="#[d03]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;legacy_check_callback
<LI><a href="#[d04]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_lib_br_handle_vendor_evt
<LI><a href="#[d02]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_lib_br_handle_vendor_cmd_rsp
<LI><a href="#[cff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_lib_mpa_handle_l2c_disconn_ind
</UL>
<BR>[Called By]<UL><LI><a href="#[d92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_lib_handle_btif_msg
</UL>

<P><STRONG><a name="[98a]"></a>gap_br_set_sco_retrans_window</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gap_lib_br.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[d06]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;legacy_set_sco_retrans_window
</UL>
<BR>[Called By]<UL><LI><a href="#[482]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_sco_link_retrans_window_set
</UL>

<P><STRONG><a name="[d07]"></a>gap_br_register_cb</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gap_lib_br.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[d08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;legacy_register_cb
</UL>

<P><STRONG><a name="[d09]"></a>gap_br_init</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, gap_lib_br.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gap_br_init
</UL>
<BR>[Calls]<UL><LI><a href="#[d08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;legacy_register_cb
<LI><a href="#[d0a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;legacy_gap_init
</UL>
<BR>[Called By]<UL><LI><a href="#[9ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_gap_init
</UL>

<P><STRONG><a name="[2dd]"></a>gap_br_set_param</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gap_lib_br.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[d0b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;legacy_set_gap_param
</UL>
<BR>[Called By]<UL><LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_gap_init
</UL>

<P><STRONG><a name="[d0c]"></a>gap_br_get_param</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gap_lib_br.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[d0d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;legacy_get_gap_param
</UL>

<P><STRONG><a name="[d0e]"></a>gap_br_start_inquiry</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gap_lib_br.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[d0f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;legacy_start_inquiry
</UL>
<BR>[Called By]<UL></UL>

<P><STRONG><a name="[d10]"></a>gap_br_stop_inquiry</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gap_lib_br.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[d11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;legacy_stop_inquiry
</UL>
<BR>[Called By]<UL></UL>

<P><STRONG><a name="[d12]"></a>gap_br_start_periodic_inquiry</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gap_lib_br.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[d13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;legacy_start_periodic_inquiry
</UL>
<BR>[Called By]<UL></UL>

<P><STRONG><a name="[979]"></a>gap_br_stop_periodic_inquiry</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gap_lib_br.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[d14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;legacy_stop_periodic_inquiry
</UL>
<BR>[Called By]<UL><LI><a href="#[69c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_periodic_inquiry_stop
</UL>

<P><STRONG><a name="[56a]"></a>gap_br_start_sdp_discov</STRONG> (Thumb, 16 bytes, Stack size 24 bytes, gap_lib_br.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = gap_br_start_sdp_discov
</UL>
<BR>[Calls]<UL><LI><a href="#[d15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;legacy_start_sdp_discov
</UL>
<BR>[Called By]<UL><LI><a href="#[568]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkback_profile_search_start
</UL>

<P><STRONG><a name="[5ef]"></a>gap_br_stop_sdp_discov</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gap_lib_br.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[d16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;legacy_stop_sdp_discov
</UL>
<BR>[Called By]<UL><LI><a href="#[605]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_dedicated_enter_pairing_mode_event_handle
<LI><a href="#[60a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_state_afe_linkback_event_handle
<LI><a href="#[5ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_stop_all_active_action
</UL>

<P><STRONG><a name="[569]"></a>gap_br_start_did_discov</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gap_lib_br.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[d17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;legacy_start_did_discov
</UL>
<BR>[Called By]<UL><LI><a href="#[601]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_dedicated_connect_event_handle
<LI><a href="#[568]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkback_profile_search_start
</UL>

<P><STRONG><a name="[978]"></a>gap_br_set_dev_name</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gap_lib_br.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[d18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;legacy_set_dev_name
</UL>
<BR>[Called By]<UL><LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_local_name_set
</UL>

<P><STRONG><a name="[d19]"></a>gap_br_set_dev_cod</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gap_lib_br.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[d1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;legacy_set_dev_cod
</UL>

<P><STRONG><a name="[97f]"></a>gap_br_set_radio_mode</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gap_lib_br.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[d1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;legacy_set_radio_mode
</UL>
<BR>[Called By]<UL><LI><a href="#[97e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_device_mode_sm
</UL>

<P><STRONG><a name="[4d7]"></a>gap_br_get_remote_name</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gap_lib_br.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[d1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;legacy_get_remote_name
</UL>
<BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_bt_cback
<LI><a href="#[4a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_remote_name_req
</UL>

<P><STRONG><a name="[9b3]"></a>gap_br_enter_sniff_mode</STRONG> (Thumb, 12 bytes, Stack size 16 bytes, gap_lib_br.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = gap_br_enter_sniff_mode
</UL>
<BR>[Calls]<UL><LI><a href="#[d1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;legacy_enter_sniff_mode
</UL>
<BR>[Called By]<UL><LI><a href="#[9b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_sniff_mode_enter
</UL>

<P><STRONG><a name="[9b1]"></a>gap_br_exit_sniff_mode</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gap_lib_br.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[d1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;legacy_exit_sniff_mode
</UL>
<BR>[Called By]<UL><LI><a href="#[97c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_sniff_mode_exit
</UL>

<P><STRONG><a name="[d1f]"></a>gap_br_cfg_default_link_policy</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gap_lib_br.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[d20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;legacy_cfg_default_link_policy
</UL>
<BR>[Called By]<UL></UL>

<P><STRONG><a name="[d21]"></a>gap_br_cfg_page_scan_param</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gap_lib_br.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[d22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;legacy_cfg_page_scan_param
</UL>
<BR>[Called By]<UL></UL>

<P><STRONG><a name="[d23]"></a>gap_br_cfg_inquiry_scan_param</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gap_lib_br.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[d24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;legacy_cfg_inquiry_scan_param
</UL>
<BR>[Called By]<UL></UL>

<P><STRONG><a name="[97b]"></a>gap_br_cfg_acl_link_policy</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gap_lib_br.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[d25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;legacy_cfg_acl_link_policy
</UL>
<BR>[Called By]<UL><LI><a href="#[97a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_link_policy_set
</UL>

<P><STRONG><a name="[d26]"></a>gap_br_cfg_acl_link_supv_tout</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gap_lib_br.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[d27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;legacy_cfg_acl_link_supv_tout
</UL>

<P><STRONG><a name="[97d]"></a>gap_br_cfg_acl_link_role</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gap_lib_br.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[d28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;legacy_cfg_acl_link_role
</UL>
<BR>[Called By]<UL><LI><a href="#[5e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_link_role_switch
</UL>

<P><STRONG><a name="[98c]"></a>gap_br_cfg_acl_pkt_type</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gap_lib_br.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[d29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;legacy_cfg_acl_pkt_type
</UL>
<BR>[Called By]<UL><LI><a href="#[610]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_acl_pkt_type_set
</UL>

<P><STRONG><a name="[d2a]"></a>gap_br_cfg_acl_link_flush_tout</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gap_lib_br.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[d2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;legacy_cfg_acl_link_flush_tout
</UL>
<BR>[Called By]<UL></UL>

<P><STRONG><a name="[2dc]"></a>gap_br_cfg_accept_role</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gap_lib_br.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[d2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;legacy_cfg_accept_role
</UL>
<BR>[Called By]<UL><LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_gap_init
</UL>

<P><STRONG><a name="[d2d]"></a>gap_br_cfg_ssp_debug_mode</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gap_lib_br.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[d2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;legacy_cfg_ssp_debug_mode
</UL>

<P><STRONG><a name="[d2f]"></a>gap_br_cfg_acl_disconn_tout</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gap_lib_br.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[d30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;legacy_cfg_acl_disconn_tout
</UL>

<P><STRONG><a name="[57b]"></a>gap_br_send_acl_disconn_req</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gap_lib_br.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[d31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;legacy_send_acl_disconn_req
</UL>
<BR>[Called By]<UL><LI><a href="#[605]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_dedicated_enter_pairing_mode_event_handle
<LI><a href="#[607]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_disconnect_all_event_handle
<LI><a href="#[60a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_state_afe_linkback_event_handle
<LI><a href="#[5f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_bt_event_pre_handle
<LI><a href="#[5ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_stop_all_active_action
<LI><a href="#[5ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_shutdown_step_handle
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_timeout_cb
<LI><a href="#[572]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkback_profile_disconnect_start
</UL>

<P><STRONG><a name="[984]"></a>gap_br_accept_acl_conn</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gap_lib_br.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[d32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;legacy_accept_acl_conn
</UL>
<BR>[Called By]<UL><LI><a href="#[612]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_acl_conn_accept
</UL>

<P><STRONG><a name="[985]"></a>gap_br_reject_acl_conn</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gap_lib_br.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[d33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;legacy_reject_acl_conn
</UL>
<BR>[Called By]<UL><LI><a href="#[611]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_acl_conn_reject
<LI><a href="#[e36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_gap_cback
</UL>

<P><STRONG><a name="[98d]"></a>gap_br_send_setup_qos_req</STRONG> (Thumb, 18 bytes, Stack size 32 bytes, gap_lib_br.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = gap_br_send_setup_qos_req
</UL>
<BR>[Calls]<UL><LI><a href="#[d34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;legacy_send_setup_qos_req
</UL>
<BR>[Called By]<UL><LI><a href="#[680]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_link_qos_set
</UL>

<P><STRONG><a name="[d35]"></a>gap_br_set_page_with_scan</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gap_lib_br.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[d36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;legacy_set_page_with_scan
</UL>
<BR>[Called By]<UL><LI><a href="#[e36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_gap_cback
</UL>

<P><STRONG><a name="[9dd]"></a>gap_br_send_sco_conn_req</STRONG> (Thumb, 18 bytes, Stack size 32 bytes, gap_lib_br.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = gap_br_send_sco_conn_req
</UL>
<BR>[Calls]<UL><LI><a href="#[d37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;legacy_send_sco_conn_req
</UL>
<BR>[Called By]<UL><LI><a href="#[68d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_hfp_audio_connect_req
</UL>

<P><STRONG><a name="[9de]"></a>gap_br_send_sco_conn_cfm</STRONG> (Thumb, 26 bytes, Stack size 40 bytes, gap_lib_br.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = gap_br_send_sco_conn_cfm
</UL>
<BR>[Calls]<UL><LI><a href="#[d38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;legacy_send_sco_conn_cfm
</UL>
<BR>[Called By]<UL><LI><a href="#[5ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_hfp_audio_connect_cfm
</UL>

<P><STRONG><a name="[5ed]"></a>gap_br_send_sco_disconn_req</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gap_lib_br.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[d39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;legacy_send_sco_disconn_req
</UL>
<BR>[Called By]<UL><LI><a href="#[607]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_disconnect_all_event_handle
<LI><a href="#[5ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_shutdown_step_handle
<LI><a href="#[575]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_hfp_disconnect_req
<LI><a href="#[515]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_hfp_audio_disconnect_req
<LI><a href="#[9c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_hfp_cback
</UL>

<P><STRONG><a name="[d3a]"></a>gap_br_send_sco_disconn_cfm</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gap_lib_br.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[d3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;legacy_send_sco_disconn_cfm
</UL>

<P><STRONG><a name="[d3c]"></a>gap_br_send_sco_param_change_req</STRONG> (Thumb, 18 bytes, Stack size 32 bytes, gap_lib_br.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[d3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;legacy_send_sco_param_change_req
</UL>

<P><STRONG><a name="[986]"></a>gap_br_get_sco_buffer</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gap_lib_br.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[d3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;legacy_get_sco_buffer
</UL>
<BR>[Called By]<UL><LI><a href="#[62b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_sco_data_send
</UL>

<P><STRONG><a name="[987]"></a>gap_br_send_sco_data</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gap_lib_br.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[d3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;legacy_send_sco_data
</UL>
<BR>[Called By]<UL><LI><a href="#[62b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_sco_data_send
</UL>

<P><STRONG><a name="[d40]"></a>gap_br_set_did_eir</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gap_lib_br.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[d41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;legacy_set_did_eir
</UL>

<P><STRONG><a name="[d42]"></a>gap_br_set_ext_eir</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gap_lib_br.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[d43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;legacy_set_ext_eir
</UL>

<P><STRONG><a name="[d44]"></a>gap_br_read_rssi</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gap_lib_br.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[d45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;legacy_read_rssi
</UL>

<P><STRONG><a name="[d46]"></a>gap_br_find_sdp_attr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gap_lib_br.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[d47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;legacy_find_sdp_attr
</UL>
<BR>[Called By]<UL><LI><a href="#[e33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_handle_sdp_discov_info
</UL>

<P><STRONG><a name="[d48]"></a>gap_br_get_sdp_value</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gap_lib_br.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[d49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;legacy_get_sdp_value
</UL>
<BR>[Called By]<UL><LI><a href="#[e33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_handle_sdp_discov_info
</UL>

<P><STRONG><a name="[d4a]"></a>gap_br_get_sdp_uuid_value</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gap_lib_br.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[d4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;legacy_get_sdp_uuid_value
</UL>
<BR>[Called By]<UL><LI><a href="#[e33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_handle_sdp_discov_info
</UL>

<P><STRONG><a name="[d4c]"></a>gap_br_access_sdp_elem</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gap_lib_br.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[d4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;legacy_access_sdp_elem
</UL>
<BR>[Called By]<UL><LI><a href="#[e33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_handle_sdp_discov_info
</UL>

<P><STRONG><a name="[d4e]"></a>gap_br_reg_fix_chann_cb</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gap_lib_br.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[d4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;legacy_reg_fix_chann_cb
</UL>

<P><STRONG><a name="[d50]"></a>gap_br_reg_fix_chann</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gap_lib_br.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[d51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;legacy_reg_fix_chann
</UL>

<P><STRONG><a name="[d52]"></a>gap_br_send_fix_chann_data</STRONG> (Thumb, 102 bytes, Stack size 40 bytes, gap_lib_br.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[d53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btif_get_l2c_buf
<LI><a href="#[d54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btif_l2c_fix_chann_data_req
<LI><a href="#[d55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btif_buffer_put
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
</UL>

<P><STRONG><a name="[7ee]"></a>gap_br_vendor_set_active_sco</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gap_lib_br.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[d56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;legacy_vendor_set_active_sco
</UL>
<BR>[Called By]<UL><LI><a href="#[454]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_sco_link_switch
<LI><a href="#[5a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_preemptive_judge
</UL>

<P><STRONG><a name="[d57]"></a>gap_br_vendor_cont_tx_begin</STRONG> (Thumb, 22 bytes, Stack size 40 bytes, gap_lib_br.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[d58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;legacy_vendor_cont_tx_begin
</UL>

<P><STRONG><a name="[d59]"></a>gap_br_vendor_cont_tx_stop</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gap_lib_br.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[d5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;legacy_vendor_cont_tx_stop
</UL>

<P><STRONG><a name="[d5b]"></a>gap_br_set_conn_encryption</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gap_lib_br.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[d5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;legacy_set_conn_encryption
</UL>
<BR>[Called By]<UL></UL>

<P><STRONG><a name="[98f]"></a>gap_br_vendor_set_monitor</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gap_lib_br.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[d5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;legacy_vendor_set_monitor
</UL>
<BR>[Called By]<UL><LI><a href="#[990]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_link_rssi_report
<LI><a href="#[98e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_link_per_report
</UL>

<P><STRONG><a name="[5e9]"></a>gap_br_vendor_data_rate_set</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gap_lib_br.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[d5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;legacy_vendor_data_rate_set
</UL>
<BR>[Called By]<UL><LI><a href="#[5e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_startup_event_handle
</UL>

<P><STRONG><a name="[991]"></a>gap_br_vendor_tx_power_set</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gap_lib_br.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[d5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;legacy_vendor_tx_power_set
</UL>
<BR>[Called By]<UL><LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_pairing_tx_power_set
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_link_tx_power_set
</UL>

<P><STRONG><a name="[992]"></a>gap_br_vendor_rssi_golden_range_set</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gap_lib_br.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[d60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;legacy_vendor_rssi_golden_range_set
</UL>
<BR>[Called By]<UL><LI><a href="#[60d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_link_rssi_golden_range_set
</UL>

<P><STRONG><a name="[993]"></a>gap_br_vendor_remote_tpoll_set</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, gap_lib_br.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gap_br_vendor_remote_tpoll_set
</UL>
<BR>[Calls]<UL><LI><a href="#[d61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btif_vendor_cmd_req
</UL>
<BR>[Called By]<UL><LI><a href="#[614]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_link_tpoll_range_set
</UL>

<P><STRONG><a name="[d62]"></a>gap_br_vendor_htpoll_set</STRONG> (Thumb, 200 bytes, Stack size 40 bytes, gap_lib_br.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[d61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btif_vendor_cmd_req
</UL>

<P><STRONG><a name="[d63]"></a>gap_br_periodic_traffic_set</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, gap_lib_br.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[d61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btif_vendor_cmd_req
</UL>

<P><STRONG><a name="[d64]"></a>gap_br_set_idle_zone</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, gap_lib_br.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[d61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btif_vendor_cmd_req
</UL>

<P><STRONG><a name="[9bb]"></a>gap_br_reg_sdp_record</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gap_lib_br.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[d65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;legacy_reg_sdp_record
</UL>
<BR>[Called By]<UL><LI><a href="#[998]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_sdp_record_register
<LI><a href="#[99a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_handle_add_sdp_rsp
</UL>

<P><STRONG><a name="[d66]"></a>gap_br_del_sdp_record</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gap_lib_br.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[d67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;legacy_del_sdp_record
</UL>
<BR>[Called By]<UL></UL>

<P><STRONG><a name="[9ba]"></a>gap_br_get_max_sdp_record_num</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gap_lib_br.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[d68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;legacy_get_max_sdp_record_num
</UL>
<BR>[Called By]<UL><LI><a href="#[9af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_sdp_init
</UL>

<P><STRONG><a name="[d69]"></a>gap_br_init_radio_mode</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gap_lib_br.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[d6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;legacy_init_radio_mode
</UL>

<P><STRONG><a name="[72e]"></a>gap_br_pairing_req</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gap_lib_br.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[d6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;legacy_bond_pair
</UL>
<BR>[Called By]<UL><LI><a href="#[72d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_cb_handle_kbp_write_req
</UL>

<P><STRONG><a name="[d6c]"></a>gap_br_input_passkey</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gap_lib_br.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[d6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;legacy_bond_input_passkey
</UL>

<P><STRONG><a name="[d6e]"></a>gap_br_input_remote_oob</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gap_lib_br.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[d6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;legacy_bond_input_remote_oob
</UL>

<P><STRONG><a name="[3b4]"></a>gap_br_user_cfm_req_cfm</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gap_lib_br.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[d70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;legacy_bond_user_cfm
</UL>
<BR>[Called By]<UL><LI><a href="#[3b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_handle_bt_user_confirm
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gap_bt_cback
<LI><a href="#[726]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_send_legacy_bond_confirm
</UL>

<P><STRONG><a name="[d71]"></a>gap_br_local_oob_read</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gap_lib_br.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[d72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;legacy_bond_read_local_oob
</UL>

<P><STRONG><a name="[d73]"></a>gap_br_local_oob_extended_data_read</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, gap_lib_br.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[d61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btif_vendor_cmd_req
</UL>

<P><STRONG><a name="[d74]"></a>gap_br_remote_oob_extended_data_req_reply</STRONG> (Thumb, 102 bytes, Stack size 96 bytes, gap_lib_br.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[d61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btif_vendor_cmd_req
</UL>

<P><STRONG><a name="[988]"></a>gap_br_link_key_cfm</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gap_lib_br.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[d75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;legacy_bond_link_key_cfm
</UL>
<BR>[Called By]<UL><LI><a href="#[5f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_link_key_cfm
</UL>

<P><STRONG><a name="[989]"></a>gap_br_pin_code_req_cfm</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gap_lib_br.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[d76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;legacy_pin_code_req_cfm
</UL>
<BR>[Called By]<UL><LI><a href="#[5f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_link_pin_code_cfm
</UL>

<P><STRONG><a name="[b2f]"></a>gap_br_get_bond</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gap_lib_br.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[d77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;legacy_get_bond
</UL>
<BR>[Called By]<UL><LI><a href="#[5f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_key_get
</UL>

<P><STRONG><a name="[b30]"></a>gap_br_save_bond</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gap_lib_br.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[d78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;legacy_save_bond
</UL>
<BR>[Called By]<UL><LI><a href="#[684]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_key_set
</UL>

<P><STRONG><a name="[b32]"></a>gap_br_delete_bond</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gap_lib_br.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[d79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;legacy_delete_bond
</UL>
<BR>[Called By]<UL><LI><a href="#[5fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_delete
</UL>

<P><STRONG><a name="[b33]"></a>gap_br_clear_all_keys</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gap_lib_br.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[d7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;legacy_clear_all_keys
</UL>
<BR>[Called By]<UL><LI><a href="#[4ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_clear
</UL>

<P><STRONG><a name="[b2c]"></a>gap_br_get_paired_idx</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gap_lib_br.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[d7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;legacy_get_paired_idx
</UL>
<BR>[Called By]<UL><LI><a href="#[5bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_index_get
</UL>

<P><STRONG><a name="[b2e]"></a>gap_br_set_bond_flag</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gap_lib_br.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[d7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;legacy_set_bond_flag
</UL>
<BR>[Called By]<UL><LI><a href="#[5fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_flag_set
</UL>

<P><STRONG><a name="[b2d]"></a>gap_br_get_bond_flag</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gap_lib_br.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[d7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;legacy_get_bond_flag
</UL>
<BR>[Called By]<UL><LI><a href="#[594]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_flag_get
</UL>

<P><STRONG><a name="[b2a]"></a>gap_br_get_bond_num</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gap_lib_br.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[d7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;legacy_get_bond_num
</UL>
<BR>[Called By]<UL><LI><a href="#[67c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_num_get
</UL>

<P><STRONG><a name="[d7f]"></a>gap_br_get_max_bond_num</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gap_lib_br.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[d80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;legacy_get_max_bond_num
</UL>
<BR>[Called By]<UL><LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_bond_get_max_num
</UL>

<P><STRONG><a name="[b2b]"></a>gap_br_get_addr_by_priority</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gap_lib_br.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[d81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;legacy_get_addr_by_priority
</UL>
<BR>[Called By]<UL><LI><a href="#[67d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_addr_get
</UL>

<P><STRONG><a name="[b31]"></a>gap_br_adjust_dev_priority</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gap_lib_br.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[d82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;legacy_adjust_dev_priority
</UL>
<BR>[Called By]<UL><LI><a href="#[685]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_priority_set
</UL>

<P><STRONG><a name="[d83]"></a>gap_br_link_preferred_data_rate_set</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, gap_lib_br.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[d61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btif_vendor_cmd_req
</UL>

<P><STRONG><a name="[d86]"></a>le_handle_vendor_evt_info</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, gap_lib_le.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = le_handle_vendor_evt_info
</UL>
<BR>[Called By]<UL><LI><a href="#[d84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_lib_le_handle_btif_msg
</UL>

<P><STRONG><a name="[d84]"></a>gap_lib_le_handle_btif_msg</STRONG> (Thumb, 96 bytes, Stack size 8 bytes, gap_lib_le.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = gap_lib_le_handle_btif_msg &rArr; patch_le_bond_handle_auth_key_req_ind
</UL>
<BR>[Calls]<UL><LI><a href="#[d87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;patch_le_bond_handle_auth_key_req_ind
<LI><a href="#[d88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_ext_adv_handle_acl_disconnect
<LI><a href="#[d86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_handle_vendor_evt_info
<LI><a href="#[d85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_handle_vendor_cmd_rsp
</UL>
<BR>[Called By]<UL><LI><a href="#[d92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_lib_handle_btif_msg
</UL>

<P><STRONG><a name="[d89]"></a>le_bond_get_local_irk</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, gap_lib_le.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
</UL>

<P><STRONG><a name="[688]"></a>le_get_conn_local_addr</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, gap_lib_le.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = le_get_conn_local_addr
</UL>
<BR>[Calls]<UL><LI><a href="#[d8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sm_find_link_by_handle
</UL>
<BR>[Called By]<UL><LI><a href="#[687]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bond_le_set_bond_flag
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_bond_clear_cccd_flag
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_bond_get_key
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_bond_check
<LI><a href="#[bd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_handle_acl_status_info
<LI><a href="#[bca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_handle_gatt_server_store_ind
<LI><a href="#[bc6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_handle_authen_key_req_ind
<LI><a href="#[bbe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_handle_authen_result_ind
<LI><a href="#[b67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_handle_conn_state
</UL>

<P><STRONG><a name="[d8b]"></a>client_send_exchange_mtu_req</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, gap_lib_le.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_get_conn_handle
<LI><a href="#[d8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_link_check_conn_id_internal
<LI><a href="#[d8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_find_chann_by_handle
<LI><a href="#[d8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;att_send_mtu_req
</UL>

<P><STRONG><a name="[d90]"></a>le_vendor_check_priority_level</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, gap_lib_le.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[d8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_vendor_set_priority
</UL>

<P><STRONG><a name="[d8f]"></a>le_vendor_set_priority</STRONG> (Thumb, 344 bytes, Stack size 72 bytes, gap_lib_le.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_get_conn_param
<LI><a href="#[d61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btif_vendor_cmd_req
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
<LI><a href="#[d90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_vendor_check_priority_level
</UL>

<P><STRONG><a name="[d91]"></a>gap_vendor_ext_adv_handle_priority_set</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, gap_lib_le.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[d61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btif_vendor_cmd_req
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
</UL>

<P><STRONG><a name="[d92]"></a>gap_lib_handle_btif_msg</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, gap_lib.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = gap_lib_handle_btif_msg &rArr; gap_lib_le_handle_btif_msg &rArr; patch_le_bond_handle_auth_key_req_ind
</UL>
<BR>[Calls]<UL><LI><a href="#[d93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_lib_common_handle_btif_msg
<LI><a href="#[d84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_lib_le_handle_btif_msg
<LI><a href="#[d05]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_lib_br_handle_btif_msg
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gap_lib.o(.text)
</UL>
<P><STRONG><a name="[2db]"></a>gap_lib_init</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, gap_lib.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gap_lib_init
</UL>
<BR>[Calls]<UL><LI><a href="#[d94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_register_extend_cb
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_gap_init
</UL>

<P><STRONG><a name="[bd8]"></a>gap_get_otp_bond_cfg</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, gap_lib_common.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_init
</UL>

<P><STRONG><a name="[bd7]"></a>gap_set_otp_gap_bond_mgr</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, gap_lib_common.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_init
</UL>

<P><STRONG><a name="[3fc]"></a>gap_vendor_register_cb</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gap_lib_common.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_gap_init
</UL>

<P><STRONG><a name="[1343]"></a>is_mp_test_mode</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gap_lib_common.o(.text), UNUSED)

<P><STRONG><a name="[d93]"></a>gap_lib_common_handle_btif_msg</STRONG> (Thumb, 100 bytes, Stack size 24 bytes, gap_lib_common.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = gap_lib_common_handle_btif_msg &rArr; gap_common_handle_vendor_cmd_rsp
</UL>
<BR>[Calls]<UL><LI><a href="#[d96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_handle_authen_result_ind
<LI><a href="#[d95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_common_handle_vendor_cmd_rsp
</UL>
<BR>[Called By]<UL><LI><a href="#[d92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_lib_handle_btif_msg
</UL>

<P><STRONG><a name="[d97]"></a>gap_vendor_dump_tx_gain_idx</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, gap_lib_common.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[d61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btif_vendor_cmd_req
</UL>

<P><STRONG><a name="[1344]"></a>set_mp_mode_flag</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gap_lib_common.o(.text), UNUSED)

<P><STRONG><a name="[532]"></a>gap_vendor_cmd_req</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, gap_lib_common.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gap_vendor_cmd_req
</UL>
<BR>[Calls]<UL><LI><a href="#[d61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btif_vendor_cmd_req
</UL>
<BR>[Called By]<UL><LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_handle_action
<LI><a href="#[6d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_vendor_send_psd_policy
<LI><a href="#[6d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_vendor_set_adv_extend_misc
</UL>

<P><STRONG><a name="[d98]"></a>a2dp_alloc_link</STRONG> (Thumb, 90 bytes, Stack size 24 bytes, a2dp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = a2dp_alloc_link
</UL>
<BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[9c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;a2dp_signal_connect_req
<LI><a href="#[da0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;a2dp_callback
</UL>

<P><STRONG><a name="[d99]"></a>a2dp_free_link</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, a2dp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = a2dp_free_link
</UL>
<BR>[Calls]<UL><LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[9bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;a2dp_signal_connect_cfm
<LI><a href="#[da0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;a2dp_callback
</UL>

<P><STRONG><a name="[d9a]"></a>a2dp_find_link_by_addr</STRONG> (Thumb, 70 bytes, Stack size 24 bytes, a2dp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = a2dp_find_link_by_addr
</UL>
<BR>[Calls]<UL><LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[9bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;a2dp_signal_start_cfm
<LI><a href="#[9c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;a2dp_signal_delay_report
<LI><a href="#[9c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;a2dp_signal_connect_req
<LI><a href="#[9bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;a2dp_signal_connect_cfm
<LI><a href="#[9be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;a2dp_disconnect_req
<LI><a href="#[da0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;a2dp_callback
<LI><a href="#[d9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;a2dp_signal_discover
<LI><a href="#[d9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;a2dp_stream_connect_req
</UL>

<P><STRONG><a name="[da1]"></a>a2dp_find_link_by_cid</STRONG> (Thumb, 72 bytes, Stack size 20 bytes, a2dp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = a2dp_find_link_by_cid
</UL>
<BR>[Called By]<UL><LI><a href="#[da0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;a2dp_callback
</UL>

<P><STRONG><a name="[d9b]"></a>a2dp_stream_connect_req</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, a2dp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = a2dp_stream_connect_req &rArr; avdtp_stream_connect_req &rArr; avdtp_find_link_by_addr
</UL>
<BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[d9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdtp_stream_connect_req
<LI><a href="#[d9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;a2dp_find_link_by_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[da0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;a2dp_callback
</UL>

<P><STRONG><a name="[d9d]"></a>a2dp_signal_discover</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, a2dp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = a2dp_signal_discover &rArr; avdtp_signal_discover_req &rArr; sys_timer_start &rArr; sys_hp_timer_list_insert &rArr; hw_timer_restart &rArr; hw_timer_safe_stop &rArr; hw_timer_set_div
</UL>
<BR>[Calls]<UL><LI><a href="#[d9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdtp_signal_discover_req
<LI><a href="#[d9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;a2dp_find_link_by_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[da0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;a2dp_callback
</UL>

<P><STRONG><a name="[9bc]"></a>a2dp_signal_connect_cfm</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, a2dp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = a2dp_signal_connect_cfm &rArr; avdtp_signal_connect_cfm &rArr; avdtp_free_link &rArr; sys_timer_delete &rArr; sys_hp_timer_list_remove &rArr; hw_timer_restart &rArr; hw_timer_safe_stop &rArr; hw_timer_set_div
</UL>
<BR>[Calls]<UL><LI><a href="#[d9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdtp_signal_connect_cfm
<LI><a href="#[d9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;a2dp_find_link_by_addr
<LI><a href="#[d99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;a2dp_free_link
</UL>
<BR>[Called By]<UL><LI><a href="#[497]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_a2dp_connect_cfm
<LI><a href="#[da0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;a2dp_callback
</UL>

<P><STRONG><a name="[da0]"></a>a2dp_callback</STRONG> (Thumb, 740 bytes, Stack size 48 bytes, a2dp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = a2dp_callback &rArr; a2dp_signal_connect_cfm &rArr; avdtp_signal_connect_cfm &rArr; avdtp_free_link &rArr; sys_timer_delete &rArr; sys_hp_timer_list_remove &rArr; hw_timer_restart &rArr; hw_timer_safe_stop &rArr; hw_timer_set_div
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[9bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;a2dp_signal_connect_cfm
<LI><a href="#[da3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdtp_stream_disconnect_req
<LI><a href="#[da2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdtp_signal_disconnect_req
<LI><a href="#[d9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;a2dp_signal_discover
<LI><a href="#[d9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;a2dp_stream_connect_req
<LI><a href="#[da1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;a2dp_find_link_by_cid
<LI><a href="#[d9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;a2dp_find_link_by_addr
<LI><a href="#[d99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;a2dp_free_link
<LI><a href="#[d98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;a2dp_alloc_link
</UL>
<BR>[Address Reference Count : 1]<UL><LI> a2dp.o(.text)
</UL>
<P><STRONG><a name="[9c2]"></a>a2dp_signal_connect_req</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, a2dp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = a2dp_signal_connect_req &rArr; avdtp_signal_connect_req &rArr; avdtp_alloc_link &rArr; sys_timer_create
</UL>
<BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[da4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdtp_signal_connect_req
<LI><a href="#[d9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;a2dp_find_link_by_addr
<LI><a href="#[d98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;a2dp_alloc_link
</UL>
<BR>[Called By]<UL><LI><a href="#[56c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_a2dp_connect_req
</UL>

<P><STRONG><a name="[9be]"></a>a2dp_disconnect_req</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, a2dp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = a2dp_disconnect_req &rArr; avdtp_signal_close_req &rArr; sys_timer_start &rArr; sys_hp_timer_list_insert &rArr; hw_timer_restart &rArr; hw_timer_safe_stop &rArr; hw_timer_set_div
</UL>
<BR>[Calls]<UL><LI><a href="#[da2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdtp_signal_disconnect_req
<LI><a href="#[da5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdtp_signal_close_req
<LI><a href="#[d9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;a2dp_find_link_by_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[573]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_a2dp_disconnect_req
<LI><a href="#[9bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_a2dp_cback
</UL>

<P><STRONG><a name="[9c0]"></a>a2dp_signal_delay_report</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, a2dp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = a2dp_signal_delay_report &rArr; avdtp_signal_delay_report_req &rArr; avdtp_find_link_by_addr
</UL>
<BR>[Calls]<UL><LI><a href="#[da6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdtp_signal_delay_report_req
<LI><a href="#[d9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;a2dp_find_link_by_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[638]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_a2dp_stream_delay_report_request
</UL>

<P><STRONG><a name="[9bf]"></a>a2dp_signal_start_cfm</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, a2dp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = a2dp_signal_start_cfm &rArr; avdtp_signal_start_cfm &rArr; avdtp_find_link_by_addr
</UL>
<BR>[Calls]<UL><LI><a href="#[da7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdtp_signal_start_cfm
<LI><a href="#[d9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;a2dp_find_link_by_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[5b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_a2dp_stream_start_cfm
<LI><a href="#[9bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_a2dp_cback
</UL>

<P><STRONG><a name="[9c3]"></a>a2dp_codec_add</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, a2dp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = a2dp_codec_add &rArr; avdtp_codec_add
</UL>
<BR>[Calls]<UL><LI><a href="#[da8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdtp_codec_add
</UL>
<BR>[Called By]<UL><LI><a href="#[4a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_a2dp_stream_endpoint_add
</UL>

<P><STRONG><a name="[9c4]"></a>a2dp_codec_delete</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, a2dp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = a2dp_codec_delete &rArr; avdtp_codec_delete
</UL>
<BR>[Calls]<UL><LI><a href="#[da9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdtp_codec_delete
</UL>
<BR>[Called By]<UL><LI><a href="#[4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_a2dp_stream_endpoint_delete
</UL>

<P><STRONG><a name="[9c5]"></a>a2dp_role_set</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, a2dp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = a2dp_role_set &rArr; avdtp_role_set
</UL>
<BR>[Calls]<UL><LI><a href="#[daa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdtp_role_set
</UL>
<BR>[Called By]<UL><LI><a href="#[49f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_a2dp_role_set
</UL>

<P><STRONG><a name="[9c6]"></a>a2dp_init</STRONG> (Thumb, 134 bytes, Stack size 24 bytes, a2dp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = a2dp_init &rArr; avdtp_init
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[dab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdtp_init
</UL>
<BR>[Called By]<UL><LI><a href="#[49e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_a2dp_init
</UL>

<P><STRONG><a name="[dac]"></a>avrcp_send_generic_cmd</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, avrcp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = avrcp_send_generic_cmd &rArr; sys_timer_start &rArr; sys_hp_timer_list_insert &rArr; hw_timer_restart &rArr; hw_timer_safe_stop &rArr; hw_timer_set_div
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[9b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_start
<LI><a href="#[dad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avctp_send_data2buf
</UL>
<BR>[Called By]<UL><LI><a href="#[db0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avrcp_cmd_process
<LI><a href="#[dae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avrcp_send_cmd_pass_through
</UL>

<P><STRONG><a name="[dae]"></a>avrcp_send_cmd_pass_through</STRONG> (Thumb, 140 bytes, Stack size 32 bytes, avrcp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = avrcp_send_cmd_pass_through &rArr; avrcp_send_generic_cmd &rArr; sys_timer_start &rArr; sys_hp_timer_list_insert &rArr; hw_timer_restart &rArr; hw_timer_safe_stop &rArr; hw_timer_set_div
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[dac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avrcp_send_generic_cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[db0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avrcp_cmd_process
</UL>

<P><STRONG><a name="[daf]"></a>avrcp_send_vendor_BT_SIG_cmd</STRONG> (Thumb, 156 bytes, Stack size 48 bytes, avrcp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = avrcp_send_vendor_BT_SIG_cmd &rArr; sys_timer_start &rArr; sys_hp_timer_list_insert &rArr; hw_timer_restart &rArr; hw_timer_safe_stop &rArr; hw_timer_set_div
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[9b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_start
<LI><a href="#[dad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avctp_send_data2buf
</UL>
<BR>[Called By]<UL><LI><a href="#[db0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avrcp_cmd_process
</UL>

<P><STRONG><a name="[db0]"></a>avrcp_cmd_process</STRONG> (Thumb, 722 bytes, Stack size 88 bytes, avrcp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = avrcp_cmd_process &rArr; avrcp_send_cmd_pass_through &rArr; avrcp_send_generic_cmd &rArr; sys_timer_start &rArr; sys_hp_timer_list_insert &rArr; hw_timer_restart &rArr; hw_timer_safe_stop &rArr; hw_timer_set_div
</UL>
<BR>[Calls]<UL><LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[daf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avrcp_send_vendor_BT_SIG_cmd
<LI><a href="#[dae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avrcp_send_cmd_pass_through
<LI><a href="#[dac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avrcp_send_generic_cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[dbd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avrcp_handle_data_ind
<LI><a href="#[db5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avrcp_cmd_enqueue
<LI><a href="#[db1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avrcp_tout_callback
</UL>

<P><STRONG><a name="[db1]"></a>avrcp_tout_callback</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, avrcp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = avrcp_tout_callback &rArr; avrcp_cmd_process &rArr; avrcp_send_cmd_pass_through &rArr; avrcp_send_generic_cmd &rArr; sys_timer_start &rArr; sys_hp_timer_list_insert &rArr; hw_timer_restart &rArr; hw_timer_safe_stop &rArr; hw_timer_set_div
</UL>
<BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[9b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_id_get
<LI><a href="#[db0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avrcp_cmd_process
</UL>
<BR>[Address Reference Count : 1]<UL><LI> avrcp.o(.text)
</UL>
<P><STRONG><a name="[db2]"></a>avrcp_alloc_link</STRONG> (Thumb, 108 bytes, Stack size 32 bytes, avrcp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = avrcp_alloc_link &rArr; sys_timer_create
</UL>
<BR>[Calls]<UL><LI><a href="#[9b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_create
</UL>
<BR>[Called By]<UL><LI><a href="#[9f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avrcp_connect_req
<LI><a href="#[dc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avrcp_handle_conn_ind
</UL>

<P><STRONG><a name="[db3]"></a>avrcp_free_link</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, avrcp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = avrcp_free_link &rArr; sys_timer_delete &rArr; sys_hp_timer_list_remove &rArr; hw_timer_restart &rArr; hw_timer_safe_stop &rArr; hw_timer_set_div
</UL>
<BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[977]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_delete
</UL>
<BR>[Called By]<UL><LI><a href="#[9ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avrcp_connect_cfm
<LI><a href="#[dc6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avrcp_handle_disconn_ind
<LI><a href="#[dc3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avrcp_handle_conn_fail
</UL>

<P><STRONG><a name="[db4]"></a>avrcp_find_link_by_addr</STRONG> (Thumb, 72 bytes, Stack size 24 bytes, avrcp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = avrcp_find_link_by_addr
</UL>
<BR>[Calls]<UL><LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[9f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avrcp_volume_change_register_rsp
<LI><a href="#[9f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avrcp_send_vendor_rsp
<LI><a href="#[9ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avrcp_send_pass_through
<LI><a href="#[9ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avrcp_register_notification
<LI><a href="#[9f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avrcp_notify_volume_change
<LI><a href="#[9ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avrcp_get_capability
<LI><a href="#[9ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avrcp_disconnect_req
<LI><a href="#[9f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avrcp_connect_req
<LI><a href="#[9ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avrcp_connect_cfm
<LI><a href="#[dc4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avrcp_handle_conn_cmpl_ind
<LI><a href="#[dc2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avrcp_handle_conn_rsp
<LI><a href="#[dc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avrcp_handle_conn_ind
</UL>

<P><STRONG><a name="[dbe]"></a>avrcp_find_link_by_cid</STRONG> (Thumb, 72 bytes, Stack size 20 bytes, avrcp.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[dc6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avrcp_handle_disconn_ind
<LI><a href="#[dc3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avrcp_handle_conn_fail
<LI><a href="#[dbd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avrcp_handle_data_ind
</UL>

<P><STRONG><a name="[db5]"></a>avrcp_cmd_enqueue</STRONG> (Thumb, 232 bytes, Stack size 24 bytes, avrcp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = avrcp_cmd_enqueue &rArr; avrcp_cmd_process &rArr; avrcp_send_cmd_pass_through &rArr; avrcp_send_generic_cmd &rArr; sys_timer_start &rArr; sys_hp_timer_list_insert &rArr; hw_timer_restart &rArr; hw_timer_safe_stop &rArr; hw_timer_set_div
</UL>
<BR>[Calls]<UL><LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[db0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avrcp_cmd_process
</UL>
<BR>[Called By]<UL><LI><a href="#[9ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avrcp_send_pass_through
<LI><a href="#[9ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avrcp_register_notification
<LI><a href="#[9ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avrcp_get_capability
<LI><a href="#[db7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avrcp_handle_vendor_BT_SIG_rsp
</UL>

<P><STRONG><a name="[9f4]"></a>avrcp_send_vendor_rsp</STRONG> (Thumb, 148 bytes, Stack size 40 bytes, avrcp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = avrcp_send_vendor_rsp &rArr; avctp_send_data2buf &rArr; avctp_find_link_by_addr
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[dad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avctp_send_data2buf
<LI><a href="#[db4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avrcp_find_link_by_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[491]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_avrcp_vendor_rsp_send
</UL>

<P><STRONG><a name="[db6]"></a>avrcp_send_vendor_BT_SIG_rsp</STRONG> (Thumb, 186 bytes, Stack size 56 bytes, avrcp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = avrcp_send_vendor_BT_SIG_rsp &rArr; avctp_send_data2buf &rArr; avctp_find_link_by_addr
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[dad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avctp_send_data2buf
</UL>
<BR>[Called By]<UL><LI><a href="#[9f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avrcp_volume_change_register_rsp
<LI><a href="#[9f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avrcp_notify_volume_change
<LI><a href="#[dba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avrcp_handle_vendor_BT_SIG_cmd
</UL>

<P><STRONG><a name="[9ee]"></a>avrcp_send_pass_through</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, avrcp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = avrcp_send_pass_through &rArr; avrcp_cmd_enqueue &rArr; avrcp_cmd_process &rArr; avrcp_send_cmd_pass_through &rArr; avrcp_send_generic_cmd &rArr; sys_timer_start &rArr; sys_hp_timer_list_insert &rArr; hw_timer_restart &rArr; hw_timer_safe_stop &rArr; hw_timer_set_div
</UL>
<BR>[Calls]<UL><LI><a href="#[db5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avrcp_cmd_enqueue
<LI><a href="#[db4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avrcp_find_link_by_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[512]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_avrcp_stop
<LI><a href="#[50f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_avrcp_play
<LI><a href="#[511]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_avrcp_pause
<LI><a href="#[513]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_avrcp_forward
<LI><a href="#[514]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_avrcp_backward
<LI><a href="#[9eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_avrcp_cback
</UL>

<P><STRONG><a name="[9ec]"></a>avrcp_get_capability</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, avrcp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = avrcp_get_capability &rArr; avrcp_cmd_enqueue &rArr; avrcp_cmd_process &rArr; avrcp_send_cmd_pass_through &rArr; avrcp_send_generic_cmd &rArr; sys_timer_start &rArr; sys_hp_timer_list_insert &rArr; hw_timer_restart &rArr; hw_timer_safe_stop &rArr; hw_timer_set_div
</UL>
<BR>[Calls]<UL><LI><a href="#[db5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avrcp_cmd_enqueue
<LI><a href="#[db4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avrcp_find_link_by_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[9eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_avrcp_cback
</UL>

<P><STRONG><a name="[9ef]"></a>avrcp_register_notification</STRONG> (Thumb, 102 bytes, Stack size 16 bytes, avrcp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = avrcp_register_notification &rArr; avrcp_cmd_enqueue &rArr; avrcp_cmd_process &rArr; avrcp_send_cmd_pass_through &rArr; avrcp_send_generic_cmd &rArr; sys_timer_start &rArr; sys_hp_timer_list_insert &rArr; hw_timer_restart &rArr; hw_timer_safe_stop &rArr; hw_timer_set_div
</UL>
<BR>[Calls]<UL><LI><a href="#[db5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avrcp_cmd_enqueue
<LI><a href="#[db4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avrcp_find_link_by_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[9eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_avrcp_cback
</UL>

<P><STRONG><a name="[db7]"></a>avrcp_handle_vendor_BT_SIG_rsp</STRONG> (Thumb, 1396 bytes, Stack size 64 bytes, avrcp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[db5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avrcp_cmd_enqueue
</UL>
<BR>[Called By]<UL><LI><a href="#[db8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avrcp_handle_vendor_rsp
</UL>

<P><STRONG><a name="[db8]"></a>avrcp_handle_vendor_rsp</STRONG> (Thumb, 68 bytes, Stack size 32 bytes, avrcp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[db7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avrcp_handle_vendor_BT_SIG_rsp
</UL>
<BR>[Called By]<UL><LI><a href="#[db9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avrcp_handle_rsp
</UL>

<P><STRONG><a name="[db9]"></a>avrcp_handle_rsp</STRONG> (Thumb, 158 bytes, Stack size 24 bytes, avrcp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[db8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avrcp_handle_vendor_rsp
</UL>
<BR>[Called By]<UL><LI><a href="#[dbd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avrcp_handle_data_ind
</UL>

<P><STRONG><a name="[dba]"></a>avrcp_handle_vendor_BT_SIG_cmd</STRONG> (Thumb, 546 bytes, Stack size 64 bytes, avrcp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[db6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avrcp_send_vendor_BT_SIG_rsp
</UL>
<BR>[Called By]<UL><LI><a href="#[dbb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avrcp_handle_vendor_cmd
</UL>

<P><STRONG><a name="[dbb]"></a>avrcp_handle_vendor_cmd</STRONG> (Thumb, 74 bytes, Stack size 32 bytes, avrcp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[dba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avrcp_handle_vendor_BT_SIG_cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[dbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avrcp_handle_cmd
</UL>

<P><STRONG><a name="[dbc]"></a>avrcp_handle_cmd</STRONG> (Thumb, 426 bytes, Stack size 40 bytes, avrcp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[dad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avctp_send_data2buf
<LI><a href="#[dbb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avrcp_handle_vendor_cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[dbd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avrcp_handle_data_ind
</UL>

<P><STRONG><a name="[dbd]"></a>avrcp_handle_data_ind</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, avrcp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[9b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_stop
<LI><a href="#[dbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avrcp_handle_cmd
<LI><a href="#[db9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avrcp_handle_rsp
<LI><a href="#[dbe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avrcp_find_link_by_cid
<LI><a href="#[db0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avrcp_cmd_process
</UL>
<BR>[Called By]<UL><LI><a href="#[dc7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avrcp_callback
</UL>

<P><STRONG><a name="[9f0]"></a>avrcp_volume_change_register_rsp</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, avrcp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = avrcp_volume_change_register_rsp &rArr; avrcp_send_vendor_BT_SIG_rsp &rArr; avctp_send_data2buf &rArr; avctp_find_link_by_addr
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[db6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avrcp_send_vendor_BT_SIG_rsp
<LI><a href="#[db4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avrcp_find_link_by_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[494]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_avrcp_volume_change_register_rsp
</UL>

<P><STRONG><a name="[9f1]"></a>avrcp_notify_volume_change</STRONG> (Thumb, 102 bytes, Stack size 24 bytes, avrcp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = avrcp_notify_volume_change &rArr; avrcp_send_vendor_BT_SIG_rsp &rArr; avctp_send_data2buf &rArr; avctp_find_link_by_addr
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[db6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avrcp_send_vendor_BT_SIG_rsp
<LI><a href="#[db4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avrcp_find_link_by_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[48d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_avrcp_volume_change_req
</UL>

<P><STRONG><a name="[9f2]"></a>avrcp_connect_req</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, avrcp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = avrcp_connect_req &rArr; avrcp_alloc_link &rArr; sys_timer_create
</UL>
<BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[dbf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avctp_connect_req
<LI><a href="#[db4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avrcp_find_link_by_addr
<LI><a href="#[db2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avrcp_alloc_link
</UL>
<BR>[Called By]<UL><LI><a href="#[56d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_avrcp_connect_req
</UL>

<P><STRONG><a name="[dc0]"></a>avrcp_handle_conn_ind</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, avrcp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[dc1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avctp_connect_cfm
<LI><a href="#[db4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avrcp_find_link_by_addr
<LI><a href="#[db2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avrcp_alloc_link
</UL>
<BR>[Called By]<UL><LI><a href="#[dc7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avrcp_callback
</UL>

<P><STRONG><a name="[9ea]"></a>avrcp_connect_cfm</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, avrcp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = avrcp_connect_cfm &rArr; avrcp_free_link &rArr; sys_timer_delete &rArr; sys_hp_timer_list_remove &rArr; hw_timer_restart &rArr; hw_timer_safe_stop &rArr; hw_timer_set_div
</UL>
<BR>[Calls]<UL><LI><a href="#[dc1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avctp_connect_cfm
<LI><a href="#[db4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avrcp_find_link_by_addr
<LI><a href="#[db3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avrcp_free_link
</UL>
<BR>[Called By]<UL><LI><a href="#[492]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_avrcp_connect_cfm
</UL>

<P><STRONG><a name="[dc2]"></a>avrcp_handle_conn_rsp</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, avrcp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[db4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avrcp_find_link_by_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[dc7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avrcp_callback
</UL>

<P><STRONG><a name="[dc3]"></a>avrcp_handle_conn_fail</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, avrcp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[dbe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avrcp_find_link_by_cid
<LI><a href="#[db3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avrcp_free_link
</UL>
<BR>[Called By]<UL><LI><a href="#[dc7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avrcp_callback
</UL>

<P><STRONG><a name="[dc4]"></a>avrcp_handle_conn_cmpl_ind</STRONG> (Thumb, 134 bytes, Stack size 24 bytes, avrcp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[db4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avrcp_find_link_by_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[dc7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avrcp_callback
</UL>

<P><STRONG><a name="[9ed]"></a>avrcp_disconnect_req</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, avrcp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = avrcp_disconnect_req &rArr; avctp_disconnect_req &rArr; avctp_find_link_by_addr
</UL>
<BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[dc5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avctp_disconnect_req
<LI><a href="#[db4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avrcp_find_link_by_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_avrcp_disconnect_req
<LI><a href="#[9eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_avrcp_cback
</UL>

<P><STRONG><a name="[dc6]"></a>avrcp_handle_disconn_ind</STRONG> (Thumb, 110 bytes, Stack size 40 bytes, avrcp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[dbe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avrcp_find_link_by_cid
<LI><a href="#[db3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avrcp_free_link
</UL>
<BR>[Called By]<UL><LI><a href="#[dc7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avrcp_callback
</UL>

<P><STRONG><a name="[9f3]"></a>avrcp_browsing_disconnect_req</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, avrcp.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_avrcp_disconnect_req
</UL>

<P><STRONG><a name="[dc7]"></a>avrcp_callback</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, avrcp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[dc6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avrcp_handle_disconn_ind
<LI><a href="#[dc4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avrcp_handle_conn_cmpl_ind
<LI><a href="#[dc3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avrcp_handle_conn_fail
<LI><a href="#[dc2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avrcp_handle_conn_rsp
<LI><a href="#[dc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avrcp_handle_conn_ind
<LI><a href="#[dbd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avrcp_handle_data_ind
</UL>

<P><STRONG><a name="[9f5]"></a>avrcp_set_supported_features</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, avrcp.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[496]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_avrcp_supported_features_set
</UL>

<P><STRONG><a name="[9f6]"></a>avrcp_init</STRONG> (Thumb, 202 bytes, Stack size 24 bytes, avrcp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = avrcp_init &rArr; avctp_init
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[dc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avctp_init
</UL>
<BR>[Called By]<UL><LI><a href="#[495]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_avrcp_init
</UL>

<P><STRONG><a name="[dc9]"></a>hfp_send_general_at_cmd</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, hfp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = hfp_send_general_at_cmd &rArr; rfc_data_req &rArr; rfc_check_send_credits &rArr; crc8EtsGen
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[9b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_start
<LI><a href="#[a05]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_data_req
</UL>
<BR>[Called By]<UL><LI><a href="#[dcd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_srv_level_step
<LI><a href="#[dca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_flush_cmd
</UL>

<P><STRONG><a name="[dca]"></a>hfp_flush_cmd</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, hfp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = hfp_flush_cmd &rArr; hfp_send_general_at_cmd &rArr; rfc_data_req &rArr; rfc_check_send_credits &rArr; crc8EtsGen
</UL>
<BR>[Calls]<UL><LI><a href="#[dc9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_send_general_at_cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[9c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_try_general_at_cmd
<LI><a href="#[de6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_handle_at_rsp
<LI><a href="#[dcf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_tout_callback
<LI><a href="#[dcb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_srv_level_established
</UL>

<P><STRONG><a name="[dcb]"></a>hfp_srv_level_established</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, hfp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[dca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_flush_cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[dce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_srv_level_continue
</UL>

<P><STRONG><a name="[dcc]"></a>hfp_bac_cmd_assemble</STRONG> (Thumb, 88 bytes, Stack size 24 bytes, hfp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[9c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2snprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[de1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_handle_bcs
<LI><a href="#[dcd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_srv_level_step
</UL>

<P><STRONG><a name="[dcd]"></a>hfp_srv_level_step</STRONG> (Thumb, 174 bytes, Stack size 72 bytes, hfp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen (via Veneer)
<LI><a href="#[dcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_bac_cmd_assemble
<LI><a href="#[dc9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_send_general_at_cmd
<LI><a href="#[9c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2snprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[dce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_srv_level_continue
</UL>

<P><STRONG><a name="[dce]"></a>hfp_srv_level_continue</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, hfp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[dcd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_srv_level_step
<LI><a href="#[dcb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_srv_level_established
</UL>
<BR>[Called By]<UL><LI><a href="#[de6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_handle_at_rsp
<LI><a href="#[dd4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_srv_level_start
<LI><a href="#[dcf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_tout_callback
</UL>

<P><STRONG><a name="[dcf]"></a>hfp_tout_callback</STRONG> (Thumb, 130 bytes, Stack size 24 bytes, hfp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[9b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_id_get
<LI><a href="#[dce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_srv_level_continue
<LI><a href="#[dca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_flush_cmd
</UL>

<P><STRONG><a name="[dd0]"></a>hfp_alloc_link</STRONG> (Thumb, 122 bytes, Stack size 32 bytes, hfp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = hfp_alloc_link &rArr; sys_timer_create
</UL>
<BR>[Calls]<UL><LI><a href="#[9b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_create
</UL>
<BR>[Called By]<UL><LI><a href="#[9d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_connect_req
<LI><a href="#[dec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_handle_rfc_msg
</UL>

<P><STRONG><a name="[dd1]"></a>hfp_free_link</STRONG> (Thumb, 70 bytes, Stack size 24 bytes, hfp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = hfp_free_link &rArr; sys_timer_delete &rArr; sys_hp_timer_list_remove &rArr; hw_timer_restart &rArr; hw_timer_safe_stop &rArr; hw_timer_set_div
</UL>
<BR>[Calls]<UL><LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
<LI><a href="#[977]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_delete
</UL>
<BR>[Called By]<UL><LI><a href="#[9d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_connect_req
<LI><a href="#[9ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_connect_cfm
<LI><a href="#[dec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_handle_rfc_msg
</UL>

<P><STRONG><a name="[dd2]"></a>hfp_find_link_by_addr</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, hfp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = hfp_find_link_by_addr
</UL>
<BR>[Calls]<UL><LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[9c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_try_general_at_cmd
<LI><a href="#[9ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_send_cmee_enable
<LI><a href="#[9cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_get_ag_capability
<LI><a href="#[9cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_disconnect_req
<LI><a href="#[9d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_connect_req
<LI><a href="#[9ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_connect_cfm
<LI><a href="#[dec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_handle_rfc_msg
<LI><a href="#[deb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_handle_rfc_data_ind
<LI><a href="#[dea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_handle_rfc_conn_cmpl
</UL>

<P><STRONG><a name="[dd3]"></a>hfp_get_indicator_type_by_name</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, hfp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[dd8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_handle_cind
</UL>

<P><STRONG><a name="[dd9]"></a>hfp_update_ag_indicator_status</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, hfp.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[ddd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_handle_ciev
<LI><a href="#[dd8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_handle_cind
</UL>

<P><STRONG><a name="[9c8]"></a>hfp_try_general_at_cmd</STRONG> (Thumb, 326 bytes, Stack size 32 bytes, hfp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = hfp_try_general_at_cmd &rArr; hfp_flush_cmd &rArr; hfp_send_general_at_cmd &rArr; rfc_data_req &rArr; rfc_check_send_credits &rArr; crc8EtsGen
</UL>
<BR>[Calls]<UL><LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen (via Veneer)
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[dd2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_find_link_by_addr
<LI><a href="#[dca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_flush_cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_hfp_batt_level_report
<LI><a href="#[9df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_set_voice_recognition
<LI><a href="#[9d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_send_nrec_disable
<LI><a href="#[9ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_send_cmee_enable
<LI><a href="#[9d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_send_clip
<LI><a href="#[9d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_send_clcc
<LI><a href="#[9cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_send_ccwa
<LI><a href="#[9db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_reject_phone_call
<LI><a href="#[9d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_network_operator_format_set
<LI><a href="#[9d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_inform_ag_speaker_gain
<LI><a href="#[9d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_inform_ag_microphone_gain
<LI><a href="#[9d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_hsp_button_press
<LI><a href="#[9d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_dial_last_number
<LI><a href="#[9d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_call_hold_action
<LI><a href="#[9dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_ask_ag_establish_voice_chann
<LI><a href="#[9da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_accept_phone_call
<LI><a href="#[de1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_handle_bcs
</UL>

<P><STRONG><a name="[dd4]"></a>hfp_srv_level_start</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, hfp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[dce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_srv_level_continue
</UL>
<BR>[Called By]<UL><LI><a href="#[dec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_handle_rfc_msg
<LI><a href="#[deb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_handle_rfc_data_ind
<LI><a href="#[dea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_handle_rfc_conn_cmpl
</UL>

<P><STRONG><a name="[de7]"></a>hfp_handle_ok</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, hfp.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[de6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_handle_at_rsp
</UL>

<P><STRONG><a name="[de8]"></a>hfp_handle_error</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, hfp.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[de6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_handle_at_rsp
</UL>

<P><STRONG><a name="[dd5]"></a>hfp_handle_cme_error</STRONG> (Thumb, 74 bytes, Stack size 32 bytes, hfp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[dd6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sscanf
</UL>
<BR>[Called By]<UL><LI><a href="#[de6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_handle_at_rsp
</UL>

<P><STRONG><a name="[dd7]"></a>hfp_handle_brsf</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, hfp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[dd6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sscanf
</UL>
<BR>[Called By]<UL><LI><a href="#[de6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_handle_at_rsp
</UL>

<P><STRONG><a name="[dd8]"></a>hfp_handle_cind</STRONG> (Thumb, 198 bytes, Stack size 56 bytes, hfp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[dd9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_update_ag_indicator_status
<LI><a href="#[dd3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_get_indicator_type_by_name
<LI><a href="#[dd6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sscanf
</UL>
<BR>[Called By]<UL><LI><a href="#[de6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_handle_at_rsp
</UL>

<P><STRONG><a name="[dda]"></a>hfp_handle_clcc</STRONG> (Thumb, 148 bytes, Stack size 72 bytes, hfp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr (via Veneer)
<LI><a href="#[dd6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sscanf
</UL>
<BR>[Called By]<UL><LI><a href="#[de6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_handle_at_rsp
</UL>

<P><STRONG><a name="[de9]"></a>hfp_handle_ring</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, hfp.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[de6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_handle_at_rsp
</UL>

<P><STRONG><a name="[ddb]"></a>hfp_handle_bvra</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, hfp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[dd6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sscanf
</UL>
<BR>[Called By]<UL><LI><a href="#[de6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_handle_at_rsp
</UL>

<P><STRONG><a name="[ddc]"></a>hfp_handle_clip</STRONG> (Thumb, 90 bytes, Stack size 56 bytes, hfp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr (via Veneer)
<LI><a href="#[dd6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sscanf
</UL>
<BR>[Called By]<UL><LI><a href="#[de6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_handle_at_rsp
</UL>

<P><STRONG><a name="[ddd]"></a>hfp_handle_ciev</STRONG> (Thumb, 60 bytes, Stack size 32 bytes, hfp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[dd9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_update_ag_indicator_status
<LI><a href="#[dd6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sscanf
</UL>
<BR>[Called By]<UL><LI><a href="#[de6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_handle_at_rsp
</UL>

<P><STRONG><a name="[dde]"></a>hfp_handle_ccwa</STRONG> (Thumb, 84 bytes, Stack size 56 bytes, hfp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr (via Veneer)
<LI><a href="#[dd6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sscanf
</UL>
<BR>[Called By]<UL><LI><a href="#[de6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_handle_at_rsp
</UL>

<P><STRONG><a name="[ddf]"></a>hfp_handle_vgm</STRONG> (Thumb, 78 bytes, Stack size 24 bytes, hfp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[dd6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sscanf
</UL>
<BR>[Called By]<UL><LI><a href="#[de6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_handle_at_rsp
</UL>

<P><STRONG><a name="[de0]"></a>hfp_handle_vgs</STRONG> (Thumb, 346 bytes, Stack size 24 bytes, hfp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[dd6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sscanf
</UL>
<BR>[Called By]<UL><LI><a href="#[de6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_handle_at_rsp
</UL>

<P><STRONG><a name="[de1]"></a>hfp_handle_bcs</STRONG> (Thumb, 126 bytes, Stack size 80 bytes, hfp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[9c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_try_general_at_cmd
<LI><a href="#[dcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_bac_cmd_assemble
<LI><a href="#[dd6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sscanf
<LI><a href="#[9c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2snprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[de6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_handle_at_rsp
</UL>

<P><STRONG><a name="[de2]"></a>hfp_handle_bsir</STRONG> (Thumb, 80 bytes, Stack size 32 bytes, hfp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[dd6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sscanf
</UL>
<BR>[Called By]<UL><LI><a href="#[de6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_handle_at_rsp
</UL>

<P><STRONG><a name="[de3]"></a>hfp_handle_bind</STRONG> (Thumb, 114 bytes, Stack size 40 bytes, hfp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[dd6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sscanf
</UL>
<BR>[Called By]<UL><LI><a href="#[de6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_handle_at_rsp
</UL>

<P><STRONG><a name="[de4]"></a>hfp_handle_cops</STRONG> (Thumb, 130 bytes, Stack size 56 bytes, hfp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
<LI><a href="#[dd6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sscanf
</UL>
<BR>[Called By]<UL><LI><a href="#[de6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_handle_at_rsp
</UL>

<P><STRONG><a name="[de5]"></a>hfp_handle_cnum</STRONG> (Thumb, 166 bytes, Stack size 56 bytes, hfp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr (via Veneer)
<LI><a href="#[dd6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sscanf
</UL>
<BR>[Called By]<UL><LI><a href="#[de6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_handle_at_rsp
</UL>

<P><STRONG><a name="[de6]"></a>hfp_handle_at_rsp</STRONG> (Thumb, 1066 bytes, Stack size 40 bytes, hfp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[9b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_stop
<LI><a href="#[de5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_handle_cnum
<LI><a href="#[de4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_handle_cops
<LI><a href="#[de3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_handle_bind
<LI><a href="#[de2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_handle_bsir
<LI><a href="#[de1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_handle_bcs
<LI><a href="#[de0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_handle_vgs
<LI><a href="#[ddf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_handle_vgm
<LI><a href="#[dde]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_handle_ccwa
<LI><a href="#[ddd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_handle_ciev
<LI><a href="#[ddc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_handle_clip
<LI><a href="#[ddb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_handle_bvra
<LI><a href="#[de9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_handle_ring
<LI><a href="#[dda]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_handle_clcc
<LI><a href="#[dd8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_handle_cind
<LI><a href="#[dd7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_handle_brsf
<LI><a href="#[dd5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_handle_cme_error
<LI><a href="#[de8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_handle_error
<LI><a href="#[de7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_handle_ok
<LI><a href="#[dce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_srv_level_continue
<LI><a href="#[dca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_flush_cmd
<LI><a href="#[4dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncmp
</UL>
<BR>[Called By]<UL><LI><a href="#[deb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_handle_rfc_data_ind
</UL>

<P><STRONG><a name="[9d8]"></a>hfp_dial_last_number</STRONG> (Thumb, 28 bytes, Stack size 24 bytes, hfp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = hfp_dial_last_number &rArr; hfp_try_general_at_cmd &rArr; hfp_flush_cmd &rArr; hfp_send_general_at_cmd &rArr; rfc_data_req &rArr; rfc_check_send_credits &rArr; crc8EtsGen
</UL>
<BR>[Calls]<UL><LI><a href="#[9c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_try_general_at_cmd
<LI><a href="#[9c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2snprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[516]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_hfp_dial_last_number_req
</UL>

<P><STRONG><a name="[9da]"></a>hfp_accept_phone_call</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, hfp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = hfp_accept_phone_call &rArr; hfp_try_general_at_cmd &rArr; hfp_flush_cmd &rArr; hfp_send_general_at_cmd &rArr; rfc_data_req &rArr; rfc_check_send_credits &rArr; crc8EtsGen
</UL>
<BR>[Calls]<UL><LI><a href="#[9c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_try_general_at_cmd
<LI><a href="#[9c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2snprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_hfp_call_answer_req
</UL>

<P><STRONG><a name="[9db]"></a>hfp_reject_phone_call</STRONG> (Thumb, 28 bytes, Stack size 24 bytes, hfp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = hfp_reject_phone_call &rArr; hfp_try_general_at_cmd &rArr; hfp_flush_cmd &rArr; hfp_send_general_at_cmd &rArr; rfc_data_req &rArr; rfc_check_send_credits &rArr; crc8EtsGen
</UL>
<BR>[Calls]<UL><LI><a href="#[9c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_try_general_at_cmd
<LI><a href="#[9c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2snprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[4fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_hfp_call_terminate_req
</UL>

<P><STRONG><a name="[9cd]"></a>hfp_get_hf_capability</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, hfp.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[68d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_hfp_audio_connect_req
<LI><a href="#[9d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_send_nrec_disable
<LI><a href="#[9d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_send_clip
<LI><a href="#[9d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_send_clcc
<LI><a href="#[9cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_send_ccwa
<LI><a href="#[9c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_hfp_cback
</UL>

<P><STRONG><a name="[9d1]"></a>hfp_send_nrec_disable</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, hfp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = hfp_send_nrec_disable &rArr; hfp_try_general_at_cmd &rArr; hfp_flush_cmd &rArr; hfp_send_general_at_cmd &rArr; rfc_data_req &rArr; rfc_check_send_credits &rArr; crc8EtsGen
</UL>
<BR>[Calls]<UL><LI><a href="#[9c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_try_general_at_cmd
<LI><a href="#[9cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_get_hf_capability
<LI><a href="#[9c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2snprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[9c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_hfp_cback
</UL>

<P><STRONG><a name="[9ce]"></a>hfp_send_cmee_enable</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, hfp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = hfp_send_cmee_enable &rArr; hfp_try_general_at_cmd &rArr; hfp_flush_cmd &rArr; hfp_send_general_at_cmd &rArr; rfc_data_req &rArr; rfc_check_send_credits &rArr; crc8EtsGen
</UL>
<BR>[Calls]<UL><LI><a href="#[9c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_try_general_at_cmd
<LI><a href="#[dd2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_find_link_by_addr
<LI><a href="#[9c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2snprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[9c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_hfp_cback
</UL>

<P><STRONG><a name="[9cf]"></a>hfp_send_ccwa</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, hfp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = hfp_send_ccwa &rArr; hfp_try_general_at_cmd &rArr; hfp_flush_cmd &rArr; hfp_send_general_at_cmd &rArr; rfc_data_req &rArr; rfc_check_send_credits &rArr; crc8EtsGen
</UL>
<BR>[Calls]<UL><LI><a href="#[9c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_try_general_at_cmd
<LI><a href="#[9cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_get_hf_capability
<LI><a href="#[9c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2snprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[9c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_hfp_cback
</UL>

<P><STRONG><a name="[9d0]"></a>hfp_send_clip</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, hfp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = hfp_send_clip &rArr; hfp_try_general_at_cmd &rArr; hfp_flush_cmd &rArr; hfp_send_general_at_cmd &rArr; rfc_data_req &rArr; rfc_check_send_credits &rArr; crc8EtsGen
</UL>
<BR>[Calls]<UL><LI><a href="#[9c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_try_general_at_cmd
<LI><a href="#[9cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_get_hf_capability
<LI><a href="#[9c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2snprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[9c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_hfp_cback
</UL>

<P><STRONG><a name="[9d2]"></a>hfp_send_clcc</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, hfp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = hfp_send_clcc &rArr; hfp_try_general_at_cmd &rArr; hfp_flush_cmd &rArr; hfp_send_general_at_cmd &rArr; rfc_data_req &rArr; rfc_check_send_credits &rArr; crc8EtsGen
</UL>
<BR>[Calls]<UL><LI><a href="#[9c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_try_general_at_cmd
<LI><a href="#[9cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_get_hf_capability
<LI><a href="#[9c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2snprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[9c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_hfp_cback
</UL>

<P><STRONG><a name="[9d7]"></a>hfp_inform_ag_microphone_gain</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, hfp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = hfp_inform_ag_microphone_gain &rArr; hfp_try_general_at_cmd &rArr; hfp_flush_cmd &rArr; hfp_send_general_at_cmd &rArr; rfc_data_req &rArr; rfc_check_send_credits &rArr; crc8EtsGen
</UL>
<BR>[Calls]<UL><LI><a href="#[9c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_try_general_at_cmd
<LI><a href="#[9c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2snprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[469]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_hfp_microphone_gain_level_report
</UL>

<P><STRONG><a name="[9d6]"></a>hfp_inform_ag_speaker_gain</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, hfp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = hfp_inform_ag_speaker_gain &rArr; hfp_try_general_at_cmd &rArr; hfp_flush_cmd &rArr; hfp_send_general_at_cmd &rArr; rfc_data_req &rArr; rfc_check_send_credits &rArr; crc8EtsGen
</UL>
<BR>[Calls]<UL><LI><a href="#[9c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_try_general_at_cmd
<LI><a href="#[9c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2snprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_hfp_speaker_gain_level_report
</UL>

<P><STRONG><a name="[9df]"></a>hfp_set_voice_recognition</STRONG> (Thumb, 38 bytes, Stack size 24 bytes, hfp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = hfp_set_voice_recognition &rArr; hfp_try_general_at_cmd &rArr; hfp_flush_cmd &rArr; hfp_send_general_at_cmd &rArr; rfc_data_req &rArr; rfc_check_send_credits &rArr; crc8EtsGen
</UL>
<BR>[Calls]<UL><LI><a href="#[9c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_try_general_at_cmd
<LI><a href="#[9c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2snprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[474]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_hfp_voice_recognition_disable_req
<LI><a href="#[51e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_hfp_voice_recognition_enable_req
</UL>

<P><STRONG><a name="[9d4]"></a>hfp_call_hold_action</STRONG> (Thumb, 64 bytes, Stack size 32 bytes, hfp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = hfp_call_hold_action &rArr; hfp_try_general_at_cmd &rArr; hfp_flush_cmd &rArr; hfp_send_general_at_cmd &rArr; rfc_data_req &rArr; rfc_check_send_credits &rArr; crc8EtsGen
</UL>
<BR>[Calls]<UL><LI><a href="#[9c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_try_general_at_cmd
<LI><a href="#[9c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2snprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_hfp_release_held_or_waiting_call_req
<LI><a href="#[51a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_hfp_release_active_call_accept_held_or_waiting_call_req
<LI><a href="#[519]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_hfp_join_two_calls_req
<LI><a href="#[51c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_hfp_hold_active_call_accept_held_or_waiting_call_req
<LI><a href="#[9c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_hfp_cback
</UL>

<P><STRONG><a name="[9d9]"></a>hfp_hsp_button_press</STRONG> (Thumb, 30 bytes, Stack size 24 bytes, hfp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = hfp_hsp_button_press &rArr; hfp_try_general_at_cmd &rArr; hfp_flush_cmd &rArr; hfp_send_general_at_cmd &rArr; rfc_data_req &rArr; rfc_check_send_credits &rArr; crc8EtsGen
</UL>
<BR>[Calls]<UL><LI><a href="#[9c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_try_general_at_cmd
<LI><a href="#[9c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2snprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[474]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_hfp_voice_recognition_disable_req
<LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_hfp_call_answer_req
<LI><a href="#[51e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_hfp_voice_recognition_enable_req
<LI><a href="#[516]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_hfp_dial_last_number_req
<LI><a href="#[4fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_hfp_call_terminate_req
<LI><a href="#[515]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_hfp_audio_disconnect_req
<LI><a href="#[68d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_hfp_audio_connect_req
</UL>

<P><STRONG><a name="[9dc]"></a>hfp_ask_ag_establish_voice_chann</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, hfp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = hfp_ask_ag_establish_voice_chann &rArr; hfp_try_general_at_cmd &rArr; hfp_flush_cmd &rArr; hfp_send_general_at_cmd &rArr; rfc_data_req &rArr; rfc_check_send_credits &rArr; crc8EtsGen
</UL>
<BR>[Calls]<UL><LI><a href="#[9c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_try_general_at_cmd
<LI><a href="#[9c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2snprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[68d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_hfp_audio_connect_req
</UL>

<P><STRONG><a name="[9d3]"></a>hfp_network_operator_format_set</STRONG> (Thumb, 28 bytes, Stack size 24 bytes, hfp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = hfp_network_operator_format_set &rArr; hfp_try_general_at_cmd &rArr; hfp_flush_cmd &rArr; hfp_send_general_at_cmd &rArr; rfc_data_req &rArr; rfc_check_send_credits &rArr; crc8EtsGen
</UL>
<BR>[Calls]<UL><LI><a href="#[9c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_try_general_at_cmd
<LI><a href="#[9c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2snprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[9c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_hfp_cback
</UL>

<P><STRONG><a name="[dea]"></a>hfp_handle_rfc_conn_cmpl</STRONG> (Thumb, 414 bytes, Stack size 48 bytes, hfp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[a08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_disconn_req
<LI><a href="#[dd4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_srv_level_start
<LI><a href="#[dd2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_find_link_by_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[dec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_handle_rfc_msg
</UL>

<P><STRONG><a name="[deb]"></a>hfp_handle_rfc_data_ind</STRONG> (Thumb, 268 bytes, Stack size 40 bytes, hfp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[a06]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_data_cfm
<LI><a href="#[de6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_handle_at_rsp
<LI><a href="#[dd4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_srv_level_start
<LI><a href="#[dd2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_find_link_by_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[dec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_handle_rfc_msg
</UL>

<P><STRONG><a name="[dec]"></a>hfp_handle_rfc_msg</STRONG> (Thumb, 242 bytes, Stack size 24 bytes, hfp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[a03]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_conn_cfm
<LI><a href="#[deb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_handle_rfc_data_ind
<LI><a href="#[dea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_handle_rfc_conn_cmpl
<LI><a href="#[dd4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_srv_level_start
<LI><a href="#[dd2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_find_link_by_addr
<LI><a href="#[dd1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_free_link
<LI><a href="#[dd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_alloc_link
</UL>

<P><STRONG><a name="[9d5]"></a>hfp_connect_req</STRONG> (Thumb, 106 bytes, Stack size 32 bytes, hfp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = hfp_connect_req &rArr; rfc_conn_req &rArr; rfc_alloc_chann &rArr; sys_timer_delete &rArr; sys_hp_timer_list_remove &rArr; hw_timer_restart &rArr; hw_timer_safe_stop &rArr; hw_timer_set_div
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[a0b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_conn_req
<LI><a href="#[dd2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_find_link_by_addr
<LI><a href="#[dd1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_free_link
<LI><a href="#[dd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_alloc_link
</UL>
<BR>[Called By]<UL><LI><a href="#[56e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_hfp_connect_req
</UL>

<P><STRONG><a name="[9ca]"></a>hfp_connect_cfm</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, hfp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = hfp_connect_cfm &rArr; rfc_conn_cfm &rArr; rfc_send_uih &rArr; rfc_send_frame &rArr; crc8EtsGen
</UL>
<BR>[Calls]<UL><LI><a href="#[a03]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_conn_cfm
<LI><a href="#[dd2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_find_link_by_addr
<LI><a href="#[dd1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_free_link
</UL>
<BR>[Called By]<UL><LI><a href="#[467]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_hfp_connect_cfm
<LI><a href="#[9c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_hfp_cback
</UL>

<P><STRONG><a name="[9cb]"></a>hfp_disconnect_req</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, hfp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = hfp_disconnect_req &rArr; rfc_disconn_req &rArr; rfc_check_disconn_ctrl_chann &rArr; sys_timer_start &rArr; sys_hp_timer_list_insert &rArr; hw_timer_restart &rArr; hw_timer_safe_stop &rArr; hw_timer_set_div
</UL>
<BR>[Calls]<UL><LI><a href="#[a08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_disconn_req
<LI><a href="#[dd2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_find_link_by_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[575]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_hfp_disconnect_req
<LI><a href="#[9c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_hfp_cback
</UL>

<P><STRONG><a name="[9e0]"></a>hfp_init</STRONG> (Thumb, 172 bytes, Stack size 40 bytes, hfp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = hfp_init &rArr; rfc_reg_cb &rArr; rfc_init
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[a01]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_reg_cb
</UL>
<BR>[Called By]<UL><LI><a href="#[47b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_hfp_init
</UL>

<P><STRONG><a name="[9cc]"></a>hfp_get_ag_capability</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, hfp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = hfp_get_ag_capability &rArr; hfp_find_link_by_addr
</UL>
<BR>[Calls]<UL><LI><a href="#[dd2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_find_link_by_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[9c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_hfp_cback
</UL>

<P><STRONG><a name="[df1]"></a>spp_alloc_link</STRONG> (Thumb, 62 bytes, Stack size 20 bytes, spp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = spp_alloc_link
</UL>
<BR>[Called By]<UL><LI><a href="#[9e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spp_connect_req
<LI><a href="#[df0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spp_handle_conn_ind
</UL>

<P><STRONG><a name="[ded]"></a>spp_free_link</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, spp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[9e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spp_connect_req
<LI><a href="#[9e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spp_connect_cfm
<LI><a href="#[df3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spp_handle_disconn_cmpl
</UL>

<P><STRONG><a name="[dee]"></a>spp_find_link_by_dlci</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, spp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[df8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spp_handle_rfc_dlci_change
<LI><a href="#[df7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spp_handle_data_rsp
<LI><a href="#[df6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spp_handle_data_ind
<LI><a href="#[df4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spp_handle_credit_info
<LI><a href="#[df3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spp_handle_disconn_cmpl
<LI><a href="#[df2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spp_handle_conn_cmpl
</UL>

<P><STRONG><a name="[def]"></a>spp_find_link_by_local_server_chann</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, spp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = spp_find_link_by_local_server_chann
</UL>
<BR>[Calls]<UL><LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[9e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spp_send_data
<LI><a href="#[9e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spp_send_credit
<LI><a href="#[9e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spp_disconnect_req
<LI><a href="#[9e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spp_connect_req
<LI><a href="#[9e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spp_connect_cfm
<LI><a href="#[df0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spp_handle_conn_ind
</UL>

<P><STRONG><a name="[df5]"></a>spp_update_credit</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, spp.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[df6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spp_handle_data_ind
<LI><a href="#[df4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spp_handle_credit_info
</UL>

<P><STRONG><a name="[df0]"></a>spp_handle_conn_ind</STRONG> (Thumb, 226 bytes, Stack size 40 bytes, spp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[a03]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_conn_cfm
<LI><a href="#[def]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spp_find_link_by_local_server_chann
<LI><a href="#[df1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spp_alloc_link
</UL>
<BR>[Called By]<UL><LI><a href="#[df9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spp_handle_rfc_msg
</UL>

<P><STRONG><a name="[df2]"></a>spp_handle_conn_cmpl</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, spp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[a08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_disconn_req
<LI><a href="#[dee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spp_find_link_by_dlci
</UL>
<BR>[Called By]<UL><LI><a href="#[df9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spp_handle_rfc_msg
</UL>

<P><STRONG><a name="[df3]"></a>spp_handle_disconn_cmpl</STRONG> (Thumb, 100 bytes, Stack size 32 bytes, spp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[dee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spp_find_link_by_dlci
<LI><a href="#[ded]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spp_free_link
</UL>
<BR>[Called By]<UL><LI><a href="#[df9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spp_handle_rfc_msg
</UL>

<P><STRONG><a name="[df4]"></a>spp_handle_credit_info</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, spp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[df5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spp_update_credit
<LI><a href="#[dee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spp_find_link_by_dlci
</UL>
<BR>[Called By]<UL><LI><a href="#[df9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spp_handle_rfc_msg
</UL>

<P><STRONG><a name="[df6]"></a>spp_handle_data_ind</STRONG> (Thumb, 94 bytes, Stack size 32 bytes, spp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[df5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spp_update_credit
<LI><a href="#[dee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spp_find_link_by_dlci
</UL>
<BR>[Called By]<UL><LI><a href="#[df9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spp_handle_rfc_msg
</UL>

<P><STRONG><a name="[df7]"></a>spp_handle_data_rsp</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, spp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[dee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spp_find_link_by_dlci
</UL>
<BR>[Called By]<UL><LI><a href="#[df9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spp_handle_rfc_msg
</UL>

<P><STRONG><a name="[df8]"></a>spp_handle_rfc_dlci_change</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, spp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[dee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spp_find_link_by_dlci
</UL>
<BR>[Called By]<UL><LI><a href="#[df9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spp_handle_rfc_msg
</UL>

<P><STRONG><a name="[df9]"></a>spp_handle_rfc_msg</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, spp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[df8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spp_handle_rfc_dlci_change
<LI><a href="#[df7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spp_handle_data_rsp
<LI><a href="#[df6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spp_handle_data_ind
<LI><a href="#[df4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spp_handle_credit_info
<LI><a href="#[df3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spp_handle_disconn_cmpl
<LI><a href="#[df2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spp_handle_conn_cmpl
<LI><a href="#[df0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spp_handle_conn_ind
</UL>

<P><STRONG><a name="[9e6]"></a>spp_connect_req</STRONG> (Thumb, 238 bytes, Stack size 64 bytes, spp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = spp_connect_req &rArr; rfc_conn_req &rArr; rfc_alloc_chann &rArr; sys_timer_delete &rArr; sys_hp_timer_list_remove &rArr; hw_timer_restart &rArr; hw_timer_safe_stop &rArr; hw_timer_set_div
</UL>
<BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[a0b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_conn_req
<LI><a href="#[def]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spp_find_link_by_local_server_chann
<LI><a href="#[ded]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spp_free_link
<LI><a href="#[df1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spp_alloc_link
</UL>
<BR>[Called By]<UL><LI><a href="#[56f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_spp_connect_req
</UL>

<P><STRONG><a name="[9e2]"></a>spp_connect_cfm</STRONG> (Thumb, 106 bytes, Stack size 32 bytes, spp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = spp_connect_cfm &rArr; rfc_conn_cfm &rArr; rfc_send_uih &rArr; rfc_send_frame &rArr; crc8EtsGen
</UL>
<BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[a03]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_conn_cfm
<LI><a href="#[def]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spp_find_link_by_local_server_chann
<LI><a href="#[ded]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spp_free_link
</UL>
<BR>[Called By]<UL><LI><a href="#[699]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_spp_connect_cfm
<LI><a href="#[9e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_spp_cback
</UL>

<P><STRONG><a name="[9e3]"></a>spp_disconnect_req</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, spp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = spp_disconnect_req &rArr; rfc_disconn_req &rArr; rfc_check_disconn_ctrl_chann &rArr; sys_timer_start &rArr; sys_hp_timer_list_insert &rArr; hw_timer_restart &rArr; hw_timer_safe_stop &rArr; hw_timer_set_div
</UL>
<BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[a08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_disconn_req
<LI><a href="#[def]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spp_find_link_by_local_server_chann
</UL>
<BR>[Called By]<UL><LI><a href="#[9e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_spp_cback
</UL>

<P><STRONG><a name="[9e7]"></a>spp_disconnect_all</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, spp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = spp_disconnect_all &rArr; rfc_disconn_req &rArr; rfc_check_disconn_ctrl_chann &rArr; sys_timer_start &rArr; sys_hp_timer_list_insert &rArr; hw_timer_restart &rArr; hw_timer_safe_stop &rArr; hw_timer_set_div
</UL>
<BR>[Calls]<UL><LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp (via Veneer)
<LI><a href="#[a08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_disconn_req
</UL>
<BR>[Called By]<UL><LI><a href="#[576]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_spp_disconnect_all_req
</UL>

<P><STRONG><a name="[9e8]"></a>spp_send_data</STRONG> (Thumb, 124 bytes, Stack size 40 bytes, spp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = spp_send_data &rArr; rfc_data_req &rArr; rfc_check_send_credits &rArr; crc8EtsGen
</UL>
<BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[a05]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_data_req
<LI><a href="#[def]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spp_find_link_by_local_server_chann
</UL>
<BR>[Called By]<UL><LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_spp_data_send
</UL>

<P><STRONG><a name="[9e9]"></a>spp_send_credit</STRONG> (Thumb, 94 bytes, Stack size 32 bytes, spp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = spp_send_credit &rArr; rfc_data_cfm &rArr; rfc_check_send_credits &rArr; crc8EtsGen
</UL>
<BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[a06]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_data_cfm
<LI><a href="#[def]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spp_find_link_by_local_server_chann
</UL>
<BR>[Called By]<UL><LI><a href="#[697]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_spp_credits_give
</UL>

<P><STRONG><a name="[9e5]"></a>spp_reg_cb</STRONG> (Thumb, 102 bytes, Stack size 24 bytes, spp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = spp_reg_cb &rArr; rfc_reg_cb &rArr; rfc_init
</UL>
<BR>[Calls]<UL><LI><a href="#[a01]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_reg_cb
</UL>
<BR>[Called By]<UL><LI><a href="#[69b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_spp_service_register
</UL>

<P><STRONG><a name="[9e4]"></a>spp_init</STRONG> (Thumb, 128 bytes, Stack size 24 bytes, spp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = spp_init
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[69a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_spp_init
</UL>

<P><STRONG><a name="[e02]"></a>crc8EtsGen</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, rfc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = crc8EtsGen
</UL>
<BR>[Called By]<UL><LI><a href="#[a05]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_data_req
<LI><a href="#[e05]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_send_frame
<LI><a href="#[e00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_check_send_credits
</UL>

<P><STRONG><a name="[e28]"></a>crc8EtsCheck</STRONG> (Thumb, 38 bytes, Stack size 12 bytes, rfc.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[e27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_handle_l2c_data_ind
</UL>

<P><STRONG><a name="[dfa]"></a>rfc_msg_to_profile</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, rfc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = rfc_msg_to_profile
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[e2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_handle_authen_rsp
<LI><a href="#[e29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_handle_l2c_data_rsp
<LI><a href="#[e27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_handle_l2c_data_ind
<LI><a href="#[e18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_handle_msc
<LI><a href="#[e14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_change_ctrl_chann
<LI><a href="#[dff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_wait_msc_timeout
<LI><a href="#[dfc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_free_chann
</UL>

<P><STRONG><a name="[e16]"></a>rfc_find_chann_by_dlci</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, rfc.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[e2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_handle_authen_rsp
<LI><a href="#[e29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_handle_l2c_data_rsp
<LI><a href="#[e27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_handle_l2c_data_ind
<LI><a href="#[e26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_handle_l2c_disconn_rsp
<LI><a href="#[e24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_handle_l2c_disconn_ind
<LI><a href="#[e23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_handle_l2c_conn_cmpl
<LI><a href="#[e1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_handle_rpn
<LI><a href="#[e19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_handle_rls
<LI><a href="#[e18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_handle_msc
<LI><a href="#[e15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_handle_pn
</UL>

<P><STRONG><a name="[dfb]"></a>rfc_find_chann_by_addr</STRONG> (Thumb, 70 bytes, Stack size 24 bytes, rfc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = rfc_find_chann_by_addr
</UL>
<BR>[Calls]<UL><LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[a08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_disconn_req
<LI><a href="#[a05]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_data_req
<LI><a href="#[a06]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_data_cfm
<LI><a href="#[a0b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_conn_req
<LI><a href="#[a03]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_conn_cfm
<LI><a href="#[e22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_handle_l2c_conn_rsp
</UL>

<P><STRONG><a name="[dfc]"></a>rfc_free_chann</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, rfc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = rfc_free_chann &rArr; sys_timer_delete &rArr; sys_hp_timer_list_remove &rArr; hw_timer_restart &rArr; hw_timer_safe_stop &rArr; hw_timer_set_div
</UL>
<BR>[Calls]<UL><LI><a href="#[977]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_delete
<LI><a href="#[dfa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_msg_to_profile
</UL>
<BR>[Called By]<UL><LI><a href="#[a08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_disconn_req
<LI><a href="#[a0b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_conn_req
<LI><a href="#[a03]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_conn_cfm
<LI><a href="#[e2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_handle_authen_rsp
<LI><a href="#[e26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_handle_l2c_disconn_rsp
<LI><a href="#[e24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_handle_l2c_disconn_ind
<LI><a href="#[e23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_handle_l2c_conn_cmpl
<LI><a href="#[e22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_handle_l2c_conn_rsp
<LI><a href="#[e1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_handle_disc
<LI><a href="#[e1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_handle_dm
<LI><a href="#[e1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_handle_ua
<LI><a href="#[e1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_handle_sabm
<LI><a href="#[e09]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_wait_rsp_timeout
<LI><a href="#[e04]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_close_data_chann
</UL>

<P><STRONG><a name="[dfd]"></a>rfc_send_authen_req</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, rfc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = rfc_send_authen_req
</UL>
<BR>[Calls]<UL><LI><a href="#[dfe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpa_send_rfc_authen_req
</UL>
<BR>[Called By]<UL><LI><a href="#[a0b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_conn_req
<LI><a href="#[e1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_handle_ua
<LI><a href="#[e1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_handle_sabm
<LI><a href="#[e15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_handle_pn
<LI><a href="#[e14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_change_ctrl_chann
</UL>

<P><STRONG><a name="[dff]"></a>rfc_wait_msc_timeout</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, rfc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[9b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_id_get
<LI><a href="#[dfa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_msg_to_profile
</UL>

<P><STRONG><a name="[e00]"></a>rfc_check_send_credits</STRONG> (Thumb, 192 bytes, Stack size 40 bytes, rfc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = rfc_check_send_credits &rArr; crc8EtsGen
</UL>
<BR>[Calls]<UL><LI><a href="#[e01]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpa_get_l2c_buf
<LI><a href="#[e03]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpa_send_l2c_data_req
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[e02]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crc8EtsGen
</UL>
<BR>[Called By]<UL><LI><a href="#[a08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_disconn_req
<LI><a href="#[a05]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_data_req
<LI><a href="#[a06]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_data_cfm
<LI><a href="#[e27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_handle_l2c_data_ind
<LI><a href="#[e1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_handle_disc
<LI><a href="#[e1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_handle_dm
<LI><a href="#[e1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_handle_uih
<LI><a href="#[e18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_handle_msc
<LI><a href="#[e04]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_close_data_chann
</UL>

<P><STRONG><a name="[e04]"></a>rfc_close_data_chann</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, rfc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[e00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_check_send_credits
<LI><a href="#[dfc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_free_chann
</UL>
<BR>[Called By]<UL><LI><a href="#[e26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_handle_l2c_disconn_rsp
<LI><a href="#[e24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_handle_l2c_disconn_ind
<LI><a href="#[e23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_handle_l2c_conn_cmpl
<LI><a href="#[e22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_handle_l2c_conn_rsp
<LI><a href="#[e1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_handle_disc
<LI><a href="#[e1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_handle_dm
<LI><a href="#[e1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_handle_ua
<LI><a href="#[e1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_handle_uih
<LI><a href="#[e09]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_wait_rsp_timeout
</UL>

<P><STRONG><a name="[e05]"></a>rfc_send_frame</STRONG> (Thumb, 252 bytes, Stack size 64 bytes, rfc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = rfc_send_frame &rArr; crc8EtsGen
</UL>
<BR>[Calls]<UL><LI><a href="#[e01]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpa_get_l2c_buf
<LI><a href="#[e03]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpa_send_l2c_data_req
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[e02]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crc8EtsGen
</UL>
<BR>[Called By]<UL><LI><a href="#[e0e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_send_uih
<LI><a href="#[e0d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_send_dm
<LI><a href="#[e0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_send_ua
<LI><a href="#[e0b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_send_sabm
<LI><a href="#[e06]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_send_disc
</UL>

<P><STRONG><a name="[e06]"></a>rfc_send_disc</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, rfc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = rfc_send_disc &rArr; rfc_send_frame &rArr; crc8EtsGen
</UL>
<BR>[Calls]<UL><LI><a href="#[e05]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_send_frame
</UL>
<BR>[Called By]<UL><LI><a href="#[a08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_disconn_req
<LI><a href="#[e1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_handle_ua
<LI><a href="#[e07]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_check_disconn_ctrl_chann
</UL>

<P><STRONG><a name="[e07]"></a>rfc_check_disconn_ctrl_chann</STRONG> (Thumb, 148 bytes, Stack size 16 bytes, rfc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = rfc_check_disconn_ctrl_chann &rArr; sys_timer_start &rArr; sys_hp_timer_list_insert &rArr; hw_timer_restart &rArr; hw_timer_safe_stop &rArr; hw_timer_set_div
</UL>
<BR>[Calls]<UL><LI><a href="#[e08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpa_send_l2c_disconn_req
<LI><a href="#[9b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_start
<LI><a href="#[e06]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_send_disc
</UL>
<BR>[Called By]<UL><LI><a href="#[a08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_disconn_req
<LI><a href="#[e2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_handle_authen_rsp
<LI><a href="#[e1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_handle_disc
<LI><a href="#[e1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_handle_dm
<LI><a href="#[e1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_handle_ua
<LI><a href="#[e09]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_wait_rsp_timeout
</UL>

<P><STRONG><a name="[e09]"></a>rfc_wait_rsp_timeout</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, rfc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[e08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpa_send_l2c_disconn_req
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[9b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_id_get
<LI><a href="#[e07]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_check_disconn_ctrl_chann
<LI><a href="#[e04]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_close_data_chann
<LI><a href="#[dfc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_free_chann
</UL>

<P><STRONG><a name="[e0a]"></a>rfc_alloc_chann</STRONG> (Thumb, 194 bytes, Stack size 32 bytes, rfc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = rfc_alloc_chann &rArr; sys_timer_delete &rArr; sys_hp_timer_list_remove &rArr; hw_timer_restart &rArr; hw_timer_safe_stop &rArr; hw_timer_set_div
</UL>
<BR>[Calls]<UL><LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
<LI><a href="#[9b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_create
<LI><a href="#[977]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_delete
</UL>
<BR>[Called By]<UL><LI><a href="#[a0b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_conn_req
<LI><a href="#[e20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_handle_l2c_conn_ind
<LI><a href="#[e1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_handle_rpn
<LI><a href="#[e15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_handle_pn
</UL>

<P><STRONG><a name="[e31]"></a>rfc_init_credits</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, rfc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[a0b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_conn_req
<LI><a href="#[a03]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_conn_cfm
</UL>

<P><STRONG><a name="[e0b]"></a>rfc_send_sabm</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, rfc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = rfc_send_sabm &rArr; rfc_send_frame &rArr; crc8EtsGen
</UL>
<BR>[Calls]<UL><LI><a href="#[e05]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_send_frame
</UL>
<BR>[Called By]<UL><LI><a href="#[a0b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_conn_req
<LI><a href="#[e23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_handle_l2c_conn_cmpl
<LI><a href="#[e15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_handle_pn
</UL>

<P><STRONG><a name="[e0c]"></a>rfc_send_ua</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, rfc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[e05]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_send_frame
</UL>
<BR>[Called By]<UL><LI><a href="#[e1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_handle_disc
<LI><a href="#[e1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_handle_sabm
</UL>

<P><STRONG><a name="[e0d]"></a>rfc_send_dm</STRONG> (Thumb, 20 bytes, Stack size 24 bytes, rfc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[e05]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_send_frame
</UL>
<BR>[Called By]<UL><LI><a href="#[e27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_handle_l2c_data_ind
<LI><a href="#[e1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_handle_disc
<LI><a href="#[e1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_handle_sabm
<LI><a href="#[e15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_handle_pn
</UL>

<P><STRONG><a name="[e0e]"></a>rfc_send_uih</STRONG> (Thumb, 80 bytes, Stack size 64 bytes, rfc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = rfc_send_uih &rArr; rfc_send_frame &rArr; crc8EtsGen
</UL>
<BR>[Calls]<UL><LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[e05]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_send_frame
</UL>
<BR>[Called By]<UL><LI><a href="#[a03]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_conn_cfm
<LI><a href="#[e2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_handle_authen_rsp
<LI><a href="#[e1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_handle_uih
<LI><a href="#[e1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_handle_rpn
<LI><a href="#[e15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_handle_pn
<LI><a href="#[e10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_send_rls
<LI><a href="#[e0f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_send_msc
</UL>

<P><STRONG><a name="[e0f]"></a>rfc_send_msc</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, rfc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[e0e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_send_uih
</UL>
<BR>[Called By]<UL><LI><a href="#[e1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_handle_ua
<LI><a href="#[e1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_handle_sabm
<LI><a href="#[e18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_handle_msc
</UL>

<P><STRONG><a name="[e10]"></a>rfc_send_rls</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, rfc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[e0e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_send_uih
</UL>
<BR>[Called By]<UL><LI><a href="#[e19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_handle_rls
</UL>

<P><STRONG><a name="[e11]"></a>rfc_decode_pn</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, rfc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[e15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_handle_pn
</UL>

<P><STRONG><a name="[e17]"></a>rfc_encode_pn</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, rfc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[a03]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_conn_cfm
<LI><a href="#[e2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_handle_authen_rsp
<LI><a href="#[e15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_handle_pn
</UL>

<P><STRONG><a name="[e12]"></a>rfc_check_block</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, rfc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = rfc_check_block
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[a05]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_data_req
</UL>

<P><STRONG><a name="[e13]"></a>rfc_check_l2c_collision</STRONG> (Thumb, 108 bytes, Stack size 40 bytes, rfc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[e23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_handle_l2c_conn_cmpl
</UL>

<P><STRONG><a name="[e14]"></a>rfc_change_ctrl_chann</STRONG> (Thumb, 156 bytes, Stack size 32 bytes, rfc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[dfd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_send_authen_req
<LI><a href="#[dfa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_msg_to_profile
</UL>
<BR>[Called By]<UL><LI><a href="#[e23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_handle_l2c_conn_cmpl
</UL>

<P><STRONG><a name="[e15]"></a>rfc_handle_pn</STRONG> (Thumb, 366 bytes, Stack size 48 bytes, rfc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[9b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_start
<LI><a href="#[e17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_encode_pn
<LI><a href="#[e11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_decode_pn
<LI><a href="#[e0e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_send_uih
<LI><a href="#[e0d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_send_dm
<LI><a href="#[e0b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_send_sabm
<LI><a href="#[e0a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_alloc_chann
<LI><a href="#[dfd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_send_authen_req
<LI><a href="#[e16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_find_chann_by_dlci
</UL>
<BR>[Called By]<UL><LI><a href="#[e1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_handle_uih
</UL>

<P><STRONG><a name="[e18]"></a>rfc_handle_msc</STRONG> (Thumb, 234 bytes, Stack size 40 bytes, rfc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[9b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_stop
<LI><a href="#[9b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_start
<LI><a href="#[e0f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_send_msc
<LI><a href="#[e00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_check_send_credits
<LI><a href="#[e16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_find_chann_by_dlci
<LI><a href="#[dfa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_msg_to_profile
</UL>
<BR>[Called By]<UL><LI><a href="#[e1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_handle_uih
</UL>

<P><STRONG><a name="[e19]"></a>rfc_handle_rls</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, rfc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[e10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_send_rls
<LI><a href="#[e16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_find_chann_by_dlci
</UL>
<BR>[Called By]<UL><LI><a href="#[e1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_handle_uih
</UL>

<P><STRONG><a name="[e1a]"></a>rfc_handle_rpn</STRONG> (Thumb, 90 bytes, Stack size 32 bytes, rfc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[e0e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_send_uih
<LI><a href="#[e0a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_alloc_chann
<LI><a href="#[e16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_find_chann_by_dlci
</UL>
<BR>[Called By]<UL><LI><a href="#[e1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_handle_uih
</UL>

<P><STRONG><a name="[e1b]"></a>rfc_handle_uih</STRONG> (Thumb, 290 bytes, Stack size 40 bytes, rfc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[e08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpa_send_l2c_disconn_req
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[9b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_stop
<LI><a href="#[e1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_handle_rpn
<LI><a href="#[e19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_handle_rls
<LI><a href="#[e18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_handle_msc
<LI><a href="#[e15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_handle_pn
<LI><a href="#[e0e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_send_uih
<LI><a href="#[e04]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_close_data_chann
<LI><a href="#[e00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_check_send_credits
</UL>
<BR>[Called By]<UL><LI><a href="#[e27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_handle_l2c_data_ind
</UL>

<P><STRONG><a name="[e1c]"></a>rfc_handle_sabm</STRONG> (Thumb, 270 bytes, Stack size 40 bytes, rfc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[9b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_stop
<LI><a href="#[9b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_start
<LI><a href="#[e0f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_send_msc
<LI><a href="#[e0d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_send_dm
<LI><a href="#[e0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_send_ua
<LI><a href="#[dfd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_send_authen_req
<LI><a href="#[dfc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_free_chann
</UL>
<BR>[Called By]<UL><LI><a href="#[e27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_handle_l2c_data_ind
</UL>

<P><STRONG><a name="[e1d]"></a>rfc_handle_ua</STRONG> (Thumb, 248 bytes, Stack size 24 bytes, rfc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[e08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpa_send_l2c_disconn_req
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[9b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_stop
<LI><a href="#[9b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_start
<LI><a href="#[e0f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_send_msc
<LI><a href="#[e07]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_check_disconn_ctrl_chann
<LI><a href="#[e06]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_send_disc
<LI><a href="#[e04]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_close_data_chann
<LI><a href="#[dfd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_send_authen_req
<LI><a href="#[dfc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_free_chann
</UL>
<BR>[Called By]<UL><LI><a href="#[e27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_handle_l2c_data_ind
</UL>

<P><STRONG><a name="[e1e]"></a>rfc_handle_dm</STRONG> (Thumb, 100 bytes, Stack size 24 bytes, rfc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[e08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpa_send_l2c_disconn_req
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[9b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_stop
<LI><a href="#[e07]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_check_disconn_ctrl_chann
<LI><a href="#[e04]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_close_data_chann
<LI><a href="#[e00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_check_send_credits
<LI><a href="#[dfc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_free_chann
</UL>
<BR>[Called By]<UL><LI><a href="#[e27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_handle_l2c_data_ind
</UL>

<P><STRONG><a name="[e1f]"></a>rfc_handle_disc</STRONG> (Thumb, 158 bytes, Stack size 24 bytes, rfc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[e08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpa_send_l2c_disconn_req
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[9b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_stop
<LI><a href="#[e0d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_send_dm
<LI><a href="#[e0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_send_ua
<LI><a href="#[e07]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_check_disconn_ctrl_chann
<LI><a href="#[e04]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_close_data_chann
<LI><a href="#[e00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_check_send_credits
<LI><a href="#[dfc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_free_chann
</UL>
<BR>[Called By]<UL><LI><a href="#[e27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_handle_l2c_data_ind
</UL>

<P><STRONG><a name="[e20]"></a>rfc_handle_l2c_conn_ind</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, rfc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[e21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpa_send_l2c_conn_cfm
<LI><a href="#[e0a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_alloc_chann
</UL>
<BR>[Called By]<UL><LI><a href="#[e2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_handle_l2c_msg
</UL>

<P><STRONG><a name="[e22]"></a>rfc_handle_l2c_conn_rsp</STRONG> (Thumb, 120 bytes, Stack size 24 bytes, rfc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[e08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpa_send_l2c_disconn_req
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[e04]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_close_data_chann
<LI><a href="#[dfc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_free_chann
<LI><a href="#[dfb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_find_chann_by_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[e2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_handle_l2c_msg
</UL>

<P><STRONG><a name="[e23]"></a>rfc_handle_l2c_conn_cmpl</STRONG> (Thumb, 178 bytes, Stack size 24 bytes, rfc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[e08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpa_send_l2c_disconn_req
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[9b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_start
<LI><a href="#[e14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_change_ctrl_chann
<LI><a href="#[e13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_check_l2c_collision
<LI><a href="#[e0b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_send_sabm
<LI><a href="#[e04]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_close_data_chann
<LI><a href="#[dfc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_free_chann
<LI><a href="#[e16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_find_chann_by_dlci
</UL>
<BR>[Called By]<UL><LI><a href="#[e2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_handle_l2c_msg
</UL>

<P><STRONG><a name="[e24]"></a>rfc_handle_l2c_disconn_ind</STRONG> (Thumb, 70 bytes, Stack size 24 bytes, rfc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[e25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpa_send_l2c_disconn_cfm
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[e04]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_close_data_chann
<LI><a href="#[dfc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_free_chann
<LI><a href="#[e16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_find_chann_by_dlci
</UL>
<BR>[Called By]<UL><LI><a href="#[e2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_handle_l2c_msg
</UL>

<P><STRONG><a name="[e26]"></a>rfc_handle_l2c_disconn_rsp</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, rfc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[e04]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_close_data_chann
<LI><a href="#[dfc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_free_chann
<LI><a href="#[e16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_find_chann_by_dlci
</UL>
<BR>[Called By]<UL><LI><a href="#[e2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_handle_l2c_msg
</UL>

<P><STRONG><a name="[e27]"></a>rfc_handle_l2c_data_ind</STRONG> (Thumb, 504 bytes, Stack size 56 bytes, rfc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[e1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_handle_disc
<LI><a href="#[e1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_handle_dm
<LI><a href="#[e1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_handle_ua
<LI><a href="#[e1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_handle_sabm
<LI><a href="#[e1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_handle_uih
<LI><a href="#[e0d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_send_dm
<LI><a href="#[e00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_check_send_credits
<LI><a href="#[e16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_find_chann_by_dlci
<LI><a href="#[dfa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_msg_to_profile
<LI><a href="#[e28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crc8EtsCheck
</UL>
<BR>[Called By]<UL><LI><a href="#[e2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_handle_l2c_msg
</UL>

<P><STRONG><a name="[e29]"></a>rfc_handle_l2c_data_rsp</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, rfc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[e16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_find_chann_by_dlci
<LI><a href="#[dfa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_msg_to_profile
</UL>
<BR>[Called By]<UL><LI><a href="#[e2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_handle_l2c_msg
</UL>

<P><STRONG><a name="[e2b]"></a>rfc_handle_sec_reg_rsp</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, rfc.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[e2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_handle_l2c_msg
</UL>

<P><STRONG><a name="[e2c]"></a>rfc_handle_author_ind</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, rfc.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[e2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_handle_l2c_msg
</UL>

<P><STRONG><a name="[e2a]"></a>rfc_handle_l2c_msg</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, rfc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[e2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_handle_author_ind
<LI><a href="#[e2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_handle_sec_reg_rsp
<LI><a href="#[e29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_handle_l2c_data_rsp
<LI><a href="#[e27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_handle_l2c_data_ind
<LI><a href="#[e26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_handle_l2c_disconn_rsp
<LI><a href="#[e24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_handle_l2c_disconn_ind
<LI><a href="#[e23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_handle_l2c_conn_cmpl
<LI><a href="#[e22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_handle_l2c_conn_rsp
<LI><a href="#[e20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_handle_l2c_conn_ind
</UL>

<P><STRONG><a name="[e2d]"></a>rfc_handle_authen_rsp</STRONG> (Thumb, 204 bytes, Stack size 32 bytes, rfc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[9b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_start
<LI><a href="#[e17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_encode_pn
<LI><a href="#[e0e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_send_uih
<LI><a href="#[e07]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_check_disconn_ctrl_chann
<LI><a href="#[dfc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_free_chann
<LI><a href="#[e16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_find_chann_by_dlci
<LI><a href="#[dfa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_msg_to_profile
</UL>

<P><STRONG><a name="[e2e]"></a>rfc_init</STRONG> (Thumb, 178 bytes, Stack size 16 bytes, rfc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = rfc_init
</UL>
<BR>[Calls]<UL><LI><a href="#[e2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpa_reg_l2c_proto
<LI><a href="#[e30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpa_reg_rfc_authen_cb
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[a01]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_reg_cb
</UL>

<P><STRONG><a name="[a01]"></a>rfc_reg_cb</STRONG> (Thumb, 142 bytes, Stack size 24 bytes, rfc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = rfc_reg_cb &rArr; rfc_init
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[e2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_init
</UL>
<BR>[Called By]<UL><LI><a href="#[9e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spp_reg_cb
<LI><a href="#[9e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_init
<LI><a href="#[9ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_rfc_profile_register
</UL>

<P><STRONG><a name="[a0b]"></a>rfc_conn_req</STRONG> (Thumb, 434 bytes, Stack size 48 bytes, rfc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = rfc_conn_req &rArr; rfc_alloc_chann &rArr; sys_timer_delete &rArr; sys_hp_timer_list_remove &rArr; hw_timer_restart &rArr; hw_timer_safe_stop &rArr; hw_timer_set_div
</UL>
<BR>[Calls]<UL><LI><a href="#[e32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpa_send_l2c_conn_req
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[9b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_start
<LI><a href="#[977]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_delete
<LI><a href="#[e0b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_send_sabm
<LI><a href="#[e31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_init_credits
<LI><a href="#[e0a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_alloc_chann
<LI><a href="#[dfd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_send_authen_req
<LI><a href="#[dfc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_free_chann
<LI><a href="#[dfb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_find_chann_by_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[9e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spp_connect_req
<LI><a href="#[9d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_connect_req
<LI><a href="#[a09]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_rfc_conn_req
</UL>

<P><STRONG><a name="[a03]"></a>rfc_conn_cfm</STRONG> (Thumb, 176 bytes, Stack size 48 bytes, rfc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = rfc_conn_cfm &rArr; rfc_send_uih &rArr; rfc_send_frame &rArr; crc8EtsGen
</UL>
<BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[e17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_encode_pn
<LI><a href="#[e0e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_send_uih
<LI><a href="#[e31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_init_credits
<LI><a href="#[dfc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_free_chann
<LI><a href="#[dfb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_find_chann_by_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[9e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spp_connect_cfm
<LI><a href="#[9ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_connect_cfm
<LI><a href="#[a02]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_rfc_conn_cfm
<LI><a href="#[df0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spp_handle_conn_ind
<LI><a href="#[dec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_handle_rfc_msg
</UL>

<P><STRONG><a name="[a08]"></a>rfc_disconn_req</STRONG> (Thumb, 162 bytes, Stack size 32 bytes, rfc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = rfc_disconn_req &rArr; rfc_check_disconn_ctrl_chann &rArr; sys_timer_start &rArr; sys_hp_timer_list_insert &rArr; hw_timer_restart &rArr; hw_timer_safe_stop &rArr; hw_timer_set_div
</UL>
<BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[9b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_start
<LI><a href="#[e07]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_check_disconn_ctrl_chann
<LI><a href="#[e06]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_send_disc
<LI><a href="#[e00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_check_send_credits
<LI><a href="#[dfc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_free_chann
<LI><a href="#[dfb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_find_chann_by_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[9e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spp_disconnect_req
<LI><a href="#[9e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spp_disconnect_all
<LI><a href="#[9cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_disconnect_req
<LI><a href="#[a07]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_rfc_disconn_req
<LI><a href="#[df2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spp_handle_conn_cmpl
<LI><a href="#[dea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_handle_rfc_conn_cmpl
</UL>

<P><STRONG><a name="[a05]"></a>rfc_data_req</STRONG> (Thumb, 326 bytes, Stack size 64 bytes, rfc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = rfc_data_req &rArr; rfc_check_send_credits &rArr; crc8EtsGen
</UL>
<BR>[Calls]<UL><LI><a href="#[e01]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpa_get_l2c_buf
<LI><a href="#[e03]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpa_send_l2c_data_req
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[e12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_check_block
<LI><a href="#[e00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_check_send_credits
<LI><a href="#[dfb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_find_chann_by_addr
<LI><a href="#[e02]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crc8EtsGen
</UL>
<BR>[Called By]<UL><LI><a href="#[9e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spp_send_data
<LI><a href="#[a04]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_rfc_data_send
<LI><a href="#[dc9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_send_general_at_cmd
</UL>

<P><STRONG><a name="[a06]"></a>rfc_data_cfm</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, rfc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = rfc_data_cfm &rArr; rfc_check_send_credits &rArr; crc8EtsGen
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[e00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_check_send_credits
<LI><a href="#[dfb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_find_chann_by_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[777]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_rfc_credits_give
<LI><a href="#[9e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spp_send_credit
<LI><a href="#[deb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_handle_rfc_data_ind
</UL>

<P><STRONG><a name="[e33]"></a>bt_handle_sdp_discov_info</STRONG> (Thumb, 304 bytes, Stack size 32 bytes, bt_gap.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[d48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_br_get_sdp_value
<LI><a href="#[d4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_br_get_sdp_uuid_value
<LI><a href="#[d46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_br_find_sdp_attr
<LI><a href="#[d4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_br_access_sdp_elem
</UL>
<BR>[Called By]<UL><LI><a href="#[e36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_gap_cback
</UL>

<P><STRONG><a name="[e34]"></a>bt_handle_acl_status_info</STRONG> (Thumb, 628 bytes, Stack size 40 bytes, bt_gap.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[5e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_link_role_switch
<LI><a href="#[9b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_sniff_mode_config
<LI><a href="#[99d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_pm_sm
<LI><a href="#[9ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_mgr_dispatch
<LI><a href="#[976]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_free_br_link
<LI><a href="#[9c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_alloc_br_link
<LI><a href="#[975]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_find_br_link
</UL>
<BR>[Called By]<UL><LI><a href="#[e36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_gap_cback
</UL>

<P><STRONG><a name="[e35]"></a>bt_handle_vendor_evt_info</STRONG> (Thumb, 78 bytes, Stack size 24 bytes, bt_gap.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[9ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_mgr_dispatch
<LI><a href="#[9ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_find_br_link_by_handle
</UL>
<BR>[Called By]<UL><LI><a href="#[e36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_gap_cback
</UL>

<P><STRONG><a name="[e36]"></a>bt_gap_cback</STRONG> (Thumb, 1772 bytes, Stack size 104 bytes, bt_gap.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_get_param
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr (via Veneer)
<LI><a href="#[336]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset (via Veneer)
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[985]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_br_reject_acl_conn
<LI><a href="#[9ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_mgr_dispatch
<LI><a href="#[97a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_link_policy_set
<LI><a href="#[9c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_alloc_br_link
<LI><a href="#[9ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_find_br_link_by_handle
<LI><a href="#[975]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_find_br_link
<LI><a href="#[d35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_br_set_page_with_scan
<LI><a href="#[e35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_handle_vendor_evt_info
<LI><a href="#[e34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_handle_acl_status_info
<LI><a href="#[e33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_handle_sdp_discov_info
<LI><a href="#[e37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_sco_msbc_header_check
</UL>

<P><STRONG><a name="[9ae]"></a>bt_gap_init</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, bt_gap.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = bt_gap_init &rArr; gap_br_init
</UL>
<BR>[Calls]<UL><LI><a href="#[d09]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_br_init
</UL>
<BR>[Called By]<UL><LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_mgr_init
</UL>

<P><STRONG><a name="[99f]"></a>bt_roleswap_handle_link_policy</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, bt_roleswap.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[99c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_mgr_handle_acl_msg
</UL>

<P><STRONG><a name="[9a4]"></a>bt_roleswap_handle_profile_conn</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, bt_roleswap.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[9aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_mgr_handle_spp_msg
<LI><a href="#[9a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_mgr_handle_hsp_msg
<LI><a href="#[9a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_mgr_handle_hfp_msg
<LI><a href="#[9a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_mgr_handle_avrcp_msg
<LI><a href="#[9a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_mgr_handle_a2dp_msg
</UL>

<P><STRONG><a name="[9a6]"></a>bt_roleswap_handle_profile_disconn</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, bt_roleswap.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[9a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_mgr_handle_hsp_msg
<LI><a href="#[9a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_mgr_handle_hfp_msg
<LI><a href="#[9a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_mgr_handle_avrcp_msg
<LI><a href="#[9a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_mgr_handle_a2dp_msg
</UL>

<P><STRONG><a name="[9a2]"></a>bt_roleswap_handle_sco_disconn</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, bt_roleswap.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[9a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_mgr_handle_sco_msg
</UL>

<P><STRONG><a name="[9a1]"></a>bt_roleswap_handle_sco_conn</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, bt_roleswap.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[9a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_mgr_handle_sco_msg
</UL>

<P><STRONG><a name="[9fc]"></a>bt_roleswap_handle_bt_rfc_conn</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, bt_roleswap.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[9f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_rfc_cback
</UL>

<P><STRONG><a name="[9fe]"></a>bt_roleswap_handle_bt_rfc_disconn</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, bt_roleswap.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[9f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_rfc_cback
</UL>

<P><STRONG><a name="[981]"></a>bt_roleswap_get_piconet_clk</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, bt_roleswap.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = bt_roleswap_get_piconet_clk &rArr; bt_find_br_link
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[975]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_find_br_link
</UL>
<BR>[Called By]<UL><LI><a href="#[980]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_piconet_clk_get
</UL>

<P><STRONG><a name="[983]"></a>bt_roleswap_get_piconet_id</STRONG> (Thumb, 100 bytes, Stack size 40 bytes, bt_roleswap.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = bt_roleswap_get_piconet_id &rArr; bt_find_br_link
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[975]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_find_br_link
</UL>
<BR>[Called By]<UL><LI><a href="#[982]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_piconet_id_get
</UL>

<P><STRONG><a name="[a82]"></a>notification_mode_get</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, notification.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;voice_prompt_volume_set
<LI><a href="#[4b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ringtone_volume_set
<LI><a href="#[61c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;voice_prompt_play
<LI><a href="#[61a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ringtone_play
</UL>

<P><STRONG><a name="[e45]"></a>notification_set_mix_dsp_para</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, notification.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = notification_set_mix_dsp_para
</UL>
<BR>[Called By]<UL><LI><a href="#[e44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notification_play
</UL>

<P><STRONG><a name="[e3c]"></a>notification_vp_start</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, notification.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = notification_vp_start &rArr; notification_vp_data_req &rArr; audio_path_data_send &rArr; audio_path_timestamp_set &rArr; dsp_mgr_signal_proc_start &rArr; dsp_remote_init &rArr; dsp_ipc_set_rws_init &rArr; dsp_ipc_h2d_cmd_send &rArr; h2d_cmd_send &rArr; shm_cmd_send &rArr; wr_queue_send
</UL>
<BR>[Calls]<UL><LI><a href="#[977]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_delete
<LI><a href="#[e38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notification_vp_data_req
</UL>
<BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notification_buffer_vp_cback
</UL>

<P><STRONG><a name="[e3d]"></a>notification_vp_clk_req</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, notification.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notification_buffer_vp_cback
</UL>

<P><STRONG><a name="[e42]"></a>notification_path_start</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, notification.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 408<LI>Call Chain = notification_path_start &rArr; notification_start_vp &rArr; audio_path_start &rArr; audio_path_schedule &rArr; audio_path_voice_start &rArr; dsp_mgr_session_enable &rArr; dsp_state_machine &rArr; dsp_power_on &rArr; dsp_hal_reset &rArr; shm_enable &rArr; h2d_cmd_send &rArr; shm_cmd_send &rArr; wr_queue_send
</UL>
<BR>[Calls]<UL><LI><a href="#[a65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_start
<LI><a href="#[e3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notification_start_vp
</UL>
<BR>[Called By]<UL><LI><a href="#[e44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notification_play
</UL>

<P><STRONG><a name="[e43]"></a>notification_ringtone_start</STRONG> (Thumb, 152 bytes, Stack size 32 bytes, notification.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = notification_ringtone_start &rArr; audio_path_data_send &rArr; audio_path_timestamp_set &rArr; dsp_mgr_signal_proc_start &rArr; dsp_remote_init &rArr; dsp_ipc_set_rws_init &rArr; dsp_ipc_h2d_cmd_send &rArr; h2d_cmd_send &rArr; shm_cmd_send &rArr; wr_queue_send
</UL>
<BR>[Calls]<UL><LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_flash_nor_read
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_cur_bank_img_payload_addr_get
<LI><a href="#[977]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_delete
<LI><a href="#[e39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_data_send
</UL>
<BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_composite_cback
</UL>

<P><STRONG><a name="[e46]"></a>notification_ringtone_sync_req</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, notification.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_composite_cback
</UL>

<P><STRONG><a name="[e44]"></a>notification_play</STRONG> (Thumb, 268 bytes, Stack size 40 bytes, notification.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 448<LI>Call Chain = notification_play &rArr; notification_path_start &rArr; notification_start_vp &rArr; audio_path_start &rArr; audio_path_schedule &rArr; audio_path_voice_start &rArr; dsp_mgr_session_enable &rArr; dsp_state_machine &rArr; dsp_power_on &rArr; dsp_hal_reset &rArr; shm_enable &rArr; h2d_cmd_send &rArr; shm_cmd_send &rArr; wr_queue_send
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[e42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notification_path_start
<LI><a href="#[e45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notification_set_mix_dsp_para
</UL>
<BR>[Called By]<UL><LI><a href="#[a84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notification_push
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_composite_cback
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_voice_prompt_cback
</UL>

<P><STRONG><a name="[a7f]"></a>notification_volume_max_set</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, notification.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[64b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;voice_prompt_volume_max_set
<LI><a href="#[64d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ringtone_volume_max_set
</UL>

<P><STRONG><a name="[a80]"></a>notification_volume_min_set</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, notification.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[64c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;voice_prompt_volume_min_set
<LI><a href="#[64e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ringtone_volume_min_set
</UL>

<P><STRONG><a name="[a81]"></a>notification_volume_get</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, notification.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;voice_prompt_volume_get
<LI><a href="#[94e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ringtone_volume_get
</UL>

<P><STRONG><a name="[a83]"></a>notification_volume_set</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, notification.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = notification_volume_set &rArr; audio_path_dac_level_set &rArr; codec_mgr_dac_gain_set &rArr; codec_drv_dac_config_set &rArr; codec_drv_event_process &rArr; codec_drv_set_sample_rate
</UL>
<BR>[Calls]<UL><LI><a href="#[a51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_dac_level_set
</UL>
<BR>[Called By]<UL><LI><a href="#[4b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;voice_prompt_volume_set
<LI><a href="#[4b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ringtone_volume_set
</UL>

<P><STRONG><a name="[a87]"></a>notification_flush</STRONG> (Thumb, 158 bytes, Stack size 40 bytes, notification.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = notification_flush
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[654]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;voice_prompt_flush
<LI><a href="#[653]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ringtone_flush
</UL>

<P><STRONG><a name="[a85]"></a>notification_stop</STRONG> (Thumb, 114 bytes, Stack size 40 bytes, notification.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = notification_stop &rArr; audio_path_stop &rArr; audio_path_state_set &rArr; sys_event_flag_post &rArr; sys_event_flag_abort
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[a6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_stop
</UL>
<BR>[Called By]<UL><LI><a href="#[656]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;voice_prompt_stop
<LI><a href="#[655]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ringtone_stop
<LI><a href="#[a86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notification_cancel
</UL>

<P><STRONG><a name="[a86]"></a>notification_cancel</STRONG> (Thumb, 282 bytes, Stack size 48 bytes, notification.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = notification_cancel &rArr; notification_stop &rArr; audio_path_stop &rArr; audio_path_state_set &rArr; sys_event_flag_post &rArr; sys_event_flag_abort
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[a85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notification_stop
</UL>
<BR>[Called By]<UL><LI><a href="#[61b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;voice_prompt_cancel
<LI><a href="#[619]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ringtone_cancel
</UL>

<P><STRONG><a name="[a84]"></a>notification_push</STRONG> (Thumb, 152 bytes, Stack size 40 bytes, notification.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 488<LI>Call Chain = notification_push &rArr; notification_play &rArr; notification_path_start &rArr; notification_start_vp &rArr; audio_path_start &rArr; audio_path_schedule &rArr; audio_path_voice_start &rArr; dsp_mgr_session_enable &rArr; dsp_state_machine &rArr; dsp_power_on &rArr; dsp_hal_reset &rArr; shm_enable &rArr; h2d_cmd_send &rArr; shm_cmd_send &rArr; wr_queue_send
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[e44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notification_play
</UL>
<BR>[Called By]<UL><LI><a href="#[61c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;voice_prompt_play
<LI><a href="#[61a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ringtone_play
</UL>

<P><STRONG><a name="[a40]"></a>notification_init</STRONG> (Thumb, 326 bytes, Stack size 40 bytes, notification.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = notification_init &rArr; audio_path_create &rArr; audio_path_record_init &rArr; sport_mgr_session_create &rArr; sport_mgr_sport_path_take &rArr; audio_route_physical_path_take &rArr; audio_route_physical_path_get &rArr; audio_route_voice_physical_path_get
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[a60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_create
<LI><a href="#[e47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notification_buffer_init
</UL>
<BR>[Called By]<UL><LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_mgr_init
</UL>

<P><STRONG><a name="[a88]"></a>notification_remaining_count_get</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, notification.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = notification_remaining_count_get
</UL>
<BR>[Called By]<UL><LI><a href="#[4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;voice_prompt_remaining_count_get
<LI><a href="#[4a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ringtone_remaining_count_get
</UL>

<P><STRONG><a name="[e48]"></a>media_buffer_backup_update</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, media_buffer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = media_buffer_backup_update &rArr; media_buffer_put
</UL>
<BR>[Calls]<UL><LI><a href="#[a4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;media_buffer_put
</UL>
<BR>[Called By]<UL><LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__buffer_reset
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__buffer_flush
</UL>

<P><STRONG><a name="[e4a]"></a>media_buffer_clear_downstream_info</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, media_buffer.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__buffer_reset
</UL>

<P><STRONG><a name="[e49]"></a>media_buffer_us_pkt_cnt</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, media_buffer.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[a5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;media_buffer_us_write
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__buffer_reset
</UL>

<P><STRONG><a name="[a23]"></a>media_buffer_ds_pkt_cnt</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, media_buffer.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[a1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;media_buffer_leading_downstream
<LI><a href="#[a0d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;media_buffer_downstream_dsp
<LI><a href="#[a20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_mgr_exception
<LI><a href="#[e4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;media_buffer_backup_downstream
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__buffer_reset
</UL>

<P><STRONG><a name="[a0f]"></a>media_buffer_get_status</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, media_buffer.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[a12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;media_buffer_level_get
<LI><a href="#[a25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_mgr_dispatch
<LI><a href="#[a20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_mgr_exception
<LI><a href="#[a1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_mgr_buffer_event_handle
<LI><a href="#[a0e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_mgr_get_playing_buffer
<LI><a href="#[a73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;media_buffer_ds_write
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;playback_buffer_lat_evt_cback
<LI><a href="#[edd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_latency_adjust_check
</UL>

<P><STRONG><a name="[e4d]"></a>media_buffer_backup_downstream</STRONG> (Thumb, 234 bytes, Stack size 48 bytes, media_buffer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = media_buffer_backup_downstream &rArr; audio_path_data_send &rArr; audio_path_timestamp_set &rArr; dsp_mgr_signal_proc_start &rArr; dsp_remote_init &rArr; dsp_ipc_set_rws_init &rArr; dsp_ipc_h2d_cmd_send &rArr; h2d_cmd_send &rArr; shm_cmd_send &rArr; wr_queue_send
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[a23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;media_buffer_ds_pkt_cnt
<LI><a href="#[e39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_data_send
</UL>
<BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;playback_buffer_lat_evt_cback
<LI><a href="#[ede]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_latency_handle_plc_event
</UL>

<P><STRONG><a name="[e53]"></a>media_buffer_cacu_frames_duration</STRONG> (Thumb, 164 bytes, Stack size 12 bytes, media_buffer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = media_buffer_cacu_frames_duration
</UL>
<BR>[Called By]<UL><LI><a href="#[a12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;media_buffer_level_get
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;playback_buffer_jb_evt_cback
</UL>

<P><STRONG><a name="[e4e]"></a>media_buffer_construct</STRONG> (Thumb, 198 bytes, Stack size 24 bytes, media_buffer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = media_buffer_construct &rArr; jitter_buffer_register &rArr; jitter_buffer_asrc_pid_init &rArr; jitter_bufferr_check_handle
</UL>
<BR>[Calls]<UL><LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4 (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[e4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jitter_buffer_register
<LI><a href="#[e50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_latency_mgr_register
</UL>
<BR>[Called By]<UL><LI><a href="#[a48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;media_buffer_init
</UL>

<P><STRONG><a name="[a48]"></a>media_buffer_init</STRONG> (Thumb, 238 bytes, Stack size 8 bytes, media_buffer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = media_buffer_init &rArr; media_buffer_construct &rArr; jitter_buffer_register &rArr; jitter_buffer_asrc_pid_init &rArr; jitter_bufferr_check_handle
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[e51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;media_pool_create
<LI><a href="#[e4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;media_buffer_construct
</UL>
<BR>[Called By]<UL><LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_mgr_init
</UL>

<P><STRONG><a name="[e55]"></a>media_buffer_cacu_frame_len</STRONG> (Thumb, 434 bytes, Stack size 28 bytes, media_buffer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = media_buffer_cacu_frame_len
</UL>
<BR>[Called By]<UL><LI><a href="#[a73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;media_buffer_ds_write
</UL>

<P><STRONG><a name="[a14]"></a>media_buffer_cacu_frame_num</STRONG> (Thumb, 162 bytes, Stack size 16 bytes, media_buffer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = media_buffer_cacu_frame_num
</UL>
<BR>[Called By]<UL><LI><a href="#[a13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_buffer_uninit_state
<LI><a href="#[e59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;media_buffer_latency_report_set_peroid
</UL>

<P><STRONG><a name="[a15]"></a>media_buffer_set_status</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, media_buffer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = media_buffer_set_status
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[a1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_buffer_wait_play_state
<LI><a href="#[a18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_buffer_prequeue_state
<LI><a href="#[a13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_buffer_uninit_state
</UL>

<P><STRONG><a name="[a19]"></a>media_buffer_ds_frame_cnt</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, media_buffer.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[a12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;media_buffer_level_get
<LI><a href="#[a1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;media_buffer_cacu_playtime
<LI><a href="#[a18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_buffer_prequeue_state
<LI><a href="#[a73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;media_buffer_ds_write
</UL>

<P><STRONG><a name="[a5a]"></a>media_buffer_latency_set</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, media_buffer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = media_buffer_latency_set &rArr; audio_latency_set_dynamic_latency_on &rArr; audio_latency_mgr_check_handle
</UL>
<BR>[Calls]<UL><LI><a href="#[e52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_latency_set_dynamic_latency_on
</UL>
<BR>[Called By]<UL><LI><a href="#[630]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_latency_set
<LI><a href="#[a58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_buffer_attach
</UL>

<P><STRONG><a name="[a12]"></a>media_buffer_level_get</STRONG> (Thumb, 160 bytes, Stack size 32 bytes, media_buffer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = media_buffer_level_get &rArr; media_buffer_cacu_frames_duration
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[a0f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;media_buffer_get_status
<LI><a href="#[a19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;media_buffer_ds_frame_cnt
<LI><a href="#[e53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;media_buffer_cacu_frames_duration
</UL>
<BR>[Called By]<UL><LI><a href="#[a25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_mgr_dispatch
<LI><a href="#[a11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_report_buffer_high
<LI><a href="#[a73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;media_buffer_ds_write
</UL>

<P><STRONG><a name="[a59]"></a>media_buffer_attach</STRONG> (Thumb, 140 bytes, Stack size 32 bytes, media_buffer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = media_buffer_attach
</UL>
<BR>[Calls]<UL><LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[a58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_buffer_attach
</UL>

<P><STRONG><a name="[a7c]"></a>media_buffer_detach</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, media_buffer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = media_buffer_detach
</UL>
<BR>[Called By]<UL><LI><a href="#[a62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_buffer_detach
</UL>

<P><STRONG><a name="[a5f]"></a>media_buffer_us_write</STRONG> (Thumb, 174 bytes, Stack size 80 bytes, media_buffer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = media_buffer_us_write
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[e49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;media_buffer_us_pkt_cnt
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_path_cback
</UL>

<P><STRONG><a name="[a73]"></a>media_buffer_ds_write</STRONG> (Thumb, 794 bytes, Stack size 96 bytes, media_buffer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 632<LI>Call Chain = media_buffer_ds_write &rArr; audio_mgr_dispatch &rArr; audio_mgr_buffer_event_handle &rArr; audio_buffer_playing_state &rArr; audio_track_restart &rArr; audio_session_state_set &rArr;  audio_mgr_dispatch (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[87a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_restart
<LI><a href="#[a12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;media_buffer_level_get
<LI><a href="#[a0f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;media_buffer_get_status
<LI><a href="#[a19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;media_buffer_ds_frame_cnt
<LI><a href="#[a25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_mgr_dispatch
<LI><a href="#[a20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_mgr_exception
<LI><a href="#[a11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_report_buffer_high
<LI><a href="#[e54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;auido_latency_lat_dynamic_timer_check
<LI><a href="#[e55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;media_buffer_cacu_frame_len
</UL>
<BR>[Called By]<UL><LI><a href="#[63c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_write
</UL>

<P><STRONG><a name="[a74]"></a>media_buffer_us_read</STRONG> (Thumb, 176 bytes, Stack size 64 bytes, media_buffer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = media_buffer_us_read
</UL>
<BR>[Calls]<UL><LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[62a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_read
</UL>

<P><STRONG><a name="[a7b]"></a>media_buffer_deactive_proxy</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, media_buffer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = media_buffer_deactive_proxy &rArr; audio_latency_reset &rArr; sys_timer_delete &rArr; sys_hp_timer_list_remove &rArr; hw_timer_restart &rArr; hw_timer_safe_stop &rArr; hw_timer_set_div
</UL>
<BR>[Calls]<UL><LI><a href="#[e52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_latency_set_dynamic_latency_on
<LI><a href="#[e56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_latency_reset
</UL>
<BR>[Called By]<UL><LI><a href="#[a6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_buffer_stop
</UL>

<P><STRONG><a name="[a7a]"></a>media_buffer_active_proxy</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, media_buffer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = media_buffer_active_proxy &rArr; audio_interval_evaluator_unregister &rArr; sys_timer_delete &rArr; sys_hp_timer_list_remove &rArr; hw_timer_restart &rArr; hw_timer_safe_stop &rArr; hw_timer_set_div
</UL>
<BR>[Calls]<UL><LI><a href="#[e58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_interval_evaluator_unregister
<LI><a href="#[e57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_interval_evaluator_register
</UL>
<BR>[Called By]<UL><LI><a href="#[a67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_buffer_play
</UL>

<P><STRONG><a name="[a0d]"></a>media_buffer_downstream_dsp</STRONG> (Thumb, 896 bytes, Stack size 64 bytes, media_buffer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = media_buffer_downstream_dsp &rArr; audio_path_data_send &rArr; audio_path_timestamp_set &rArr; dsp_mgr_signal_proc_start &rArr; dsp_remote_init &rArr; dsp_ipc_set_rws_init &rArr; dsp_ipc_h2d_cmd_send &rArr; h2d_cmd_send &rArr; shm_cmd_send &rArr; wr_queue_send
</UL>
<BR>[Calls]<UL><LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4 (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[a23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;media_buffer_ds_pkt_cnt
<LI><a href="#[e39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_data_send
</UL>
<BR>[Called By]<UL><LI><a href="#[a1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;media_buffer_leading_downstream
<LI><a href="#[a25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_mgr_dispatch
<LI><a href="#[a1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_buffer_playing_state
<LI><a href="#[a1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_buffer_wait_play_state
<LI><a href="#[a13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_buffer_uninit_state
<LI><a href="#[a0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;media_buffer_check_miss_ack
</UL>

<P><STRONG><a name="[ed0]"></a>media_buffer_get_mode</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, media_buffer.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[a16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jitter_buffer_asrc_pid_init
<LI><a href="#[a38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jitter_buffer_asrc_pid_controller
</UL>

<P><STRONG><a name="[a1b]"></a>media_buffer_leading_downstream</STRONG> (Thumb, 144 bytes, Stack size 24 bytes, media_buffer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = media_buffer_leading_downstream &rArr; media_buffer_downstream_dsp &rArr; audio_path_data_send &rArr; audio_path_timestamp_set &rArr; dsp_mgr_signal_proc_start &rArr; dsp_remote_init &rArr; dsp_ipc_set_rws_init &rArr; dsp_ipc_h2d_cmd_send &rArr; h2d_cmd_send &rArr; shm_cmd_send &rArr; wr_queue_send
</UL>
<BR>[Calls]<UL><LI><a href="#[a23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;media_buffer_ds_pkt_cnt
<LI><a href="#[a0d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;media_buffer_downstream_dsp
</UL>
<BR>[Called By]<UL><LI><a href="#[a18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_buffer_prequeue_state
</UL>

<P><STRONG><a name="[e59]"></a>media_buffer_latency_report_set_peroid</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, media_buffer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = media_buffer_latency_report_set_peroid &rArr; audio_path_latency_rpt_set &rArr; dsp_ipc_set_latency_report &rArr; dsp_ipc_h2d_cmd_send &rArr; h2d_cmd_send &rArr; shm_cmd_send &rArr; wr_queue_send
</UL>
<BR>[Calls]<UL><LI><a href="#[a14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;media_buffer_cacu_frame_num
<LI><a href="#[e5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_latency_rpt_set
</UL>
<BR>[Called By]<UL><LI><a href="#[a68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;media_buffer_low_latency_config
</UL>

<P><STRONG><a name="[a68]"></a>media_buffer_low_latency_config</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, media_buffer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = media_buffer_low_latency_config &rArr; media_buffer_latency_report_set_peroid &rArr; audio_path_latency_rpt_set &rArr; dsp_ipc_set_latency_report &rArr; dsp_ipc_h2d_cmd_send &rArr; h2d_cmd_send &rArr; shm_cmd_send &rArr; wr_queue_send
</UL>
<BR>[Calls]<UL><LI><a href="#[e5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_low_latency_set
<LI><a href="#[e59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;media_buffer_latency_report_set_peroid
</UL>
<BR>[Called By]<UL><LI><a href="#[a56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_session_state_set
</UL>

<P><STRONG><a name="[a1a]"></a>media_buffer_cacu_playtime</STRONG> (Thumb, 304 bytes, Stack size 40 bytes, media_buffer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = media_buffer_cacu_playtime
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[a19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;media_buffer_ds_frame_cnt
</UL>
<BR>[Called By]<UL><LI><a href="#[a18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_buffer_prequeue_state
</UL>

<P><STRONG><a name="[a24]"></a>media_buffer_dynamic_latency_set</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, media_buffer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = media_buffer_dynamic_latency_set &rArr; audio_latency_dynamic_set &rArr; sys_timer_start &rArr; sys_hp_timer_list_insert &rArr; hw_timer_restart &rArr; hw_timer_safe_stop &rArr; hw_timer_set_div
</UL>
<BR>[Calls]<UL><LI><a href="#[e5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_latency_dynamic_set
</UL>
<BR>[Called By]<UL><LI><a href="#[a20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_mgr_exception
</UL>

<P><STRONG><a name="[a22]"></a>media_buffer_dynamic_latency_resume</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, media_buffer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = media_buffer_dynamic_latency_resume &rArr; audio_latency_resume &rArr; sys_timer_delete &rArr; sys_hp_timer_list_remove &rArr; hw_timer_restart &rArr; hw_timer_safe_stop &rArr; hw_timer_set_div
</UL>
<BR>[Calls]<UL><LI><a href="#[e5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_latency_resume
</UL>
<BR>[Called By]<UL><LI><a href="#[a20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_mgr_exception
</UL>

<P><STRONG><a name="[a39]"></a>media_buffer_handle_plc_event</STRONG> (Thumb, 186 bytes, Stack size 32 bytes, media_buffer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = media_buffer_handle_plc_event &rArr; audio_mgr_exception &rArr;  audio_mgr_dispatch (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[a20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_mgr_exception
<LI><a href="#[e54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;auido_latency_lat_dynamic_timer_check
<LI><a href="#[e5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_latency_lat_dynamic_increase
</UL>
<BR>[Called By]<UL><LI><a href="#[a25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_mgr_dispatch
</UL>

<P><STRONG><a name="[a26]"></a>media_buffer_handle_sync_lock</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, media_buffer.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[a25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_mgr_dispatch
</UL>

<P><STRONG><a name="[a5]"></a>playback_buffer_lat_evt_cback</STRONG> (Thumb, 154 bytes, Stack size 24 bytes, media_buffer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = playback_buffer_lat_evt_cback &rArr; media_buffer_backup_downstream &rArr; audio_path_data_send &rArr; audio_path_timestamp_set &rArr; dsp_mgr_signal_proc_start &rArr; dsp_remote_init &rArr; dsp_ipc_set_rws_init &rArr; dsp_ipc_h2d_cmd_send &rArr; h2d_cmd_send &rArr; shm_cmd_send &rArr; wr_queue_send
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[a0f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;media_buffer_get_status
<LI><a href="#[a20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_mgr_exception
<LI><a href="#[e5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_latency_ultra_low_latency_plc_req
<LI><a href="#[e5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_latency_lat_dynamic_increase
<LI><a href="#[e60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_latency_lat_dynamic_decrease
<LI><a href="#[e4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;media_buffer_backup_downstream
</UL>
<BR>[Address Reference Count : 1]<UL><LI> media_buffer.o(.text)
</UL>
<P><STRONG><a name="[a4]"></a>playback_buffer_jb_evt_cback</STRONG> (Thumb, 654 bytes, Stack size 96 bytes, media_buffer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = playback_buffer_jb_evt_cback &rArr; jitter_buffer_low_latency_adjust_latency &rArr; jitter_buffer_asrc_ratio_adjust &rArr; dsp_ipc_set_rws_asrc_ratio &rArr; dsp_ipc_h2d_cmd_send &rArr; h2d_cmd_send &rArr; shm_cmd_send &rArr; wr_queue_send
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[980]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_piconet_clk_get
<LI><a href="#[e61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jitter_buffer_low_latency_adjust_latency
<LI><a href="#[e62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jitter_buffer_asrc_ratio_adjust
<LI><a href="#[e53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;media_buffer_cacu_frames_duration
</UL>
<BR>[Address Reference Count : 1]<UL><LI> media_buffer.o(.text)
</UL>
<P><STRONG><a name="[a72]"></a>media_buffer_latency_set2</STRONG> (Thumb, 244 bytes, Stack size 56 bytes, media_buffer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = media_buffer_latency_set2 &rArr; audio_latency_get_dynamic_latency_on &rArr; audio_latency_mgr_check_handle
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[a21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_latency_get_dynamic_latency_on
<LI><a href="#[e64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfrcmple
<LI><a href="#[e63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmple
<LI><a href="#[93f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
</UL>
<BR>[Called By]<UL><LI><a href="#[63c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_write
</UL>

<P><STRONG><a name="[a6]"></a>playback_buffer_interval_eval_evt_cback</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, media_buffer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = playback_buffer_interval_eval_evt_cback &rArr; audio_latency_handle_inverval_stable_evt &rArr; audio_latency_mgr_check_handle
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[e65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_latency_handle_inverval_unstable_evt
<LI><a href="#[e66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_latency_handle_inverval_stable_evt
</UL>
<BR>[Address Reference Count : 1]<UL><LI> media_buffer.o(.text)
</UL>
<P><STRONG><a name="[a70]"></a>media_buffer_inteval_evaluator_update</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, media_buffer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = media_buffer_inteval_evaluator_update &rArr; audio_inteval_evaluator_update &rArr; sys_timer_restart &rArr; sys_hp_timer_list_insert &rArr; hw_timer_restart &rArr; hw_timer_safe_stop &rArr; hw_timer_set_div
</UL>
<BR>[Calls]<UL><LI><a href="#[e67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_inteval_evaluator_update
</UL>
<BR>[Called By]<UL><LI><a href="#[63c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_write
</UL>

<P><STRONG><a name="[a71]"></a>media_buffer_inteval_evaluator_get_var</STRONG> (Thumb, 32 bytes, Stack size 24 bytes, media_buffer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = media_buffer_inteval_evaluator_get_var &rArr; audio_inteval_evaluator_get_var &rArr; audio_interval_check_handle
</UL>
<BR>[Calls]<UL><LI><a href="#[e68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_inteval_evaluator_get_var
</UL>
<BR>[Called By]<UL><LI><a href="#[63c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_write
</UL>

<P><STRONG><a name="[e51]"></a>media_pool_create</STRONG> (Thumb, 120 bytes, Stack size 16 bytes, media_pool.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = media_pool_create
</UL>
<BR>[Called By]<UL><LI><a href="#[a48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;media_buffer_init
</UL>

<P><STRONG><a name="[a4b]"></a>media_buffer_get</STRONG> (Thumb, 330 bytes, Stack size 32 bytes, media_pool.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = media_buffer_get
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[850]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_probe_media_buffer_malloc
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__buffer_write
</UL>

<P><STRONG><a name="[a4c]"></a>media_buffer_put</STRONG> (Thumb, 220 bytes, Stack size 24 bytes, media_pool.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = media_buffer_put
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[84e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_probe_media_buffer_free
<LI><a href="#[e48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;media_buffer_backup_update
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__buffer_shrink
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__buffer_flush
</UL>

<P><STRONG><a name="[e7f]"></a>audio_path_is_stable</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, audio_path.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = audio_path_is_stable &rArr; dsp_mgr_is_stable &rArr; dsp_mgr_start &rArr; dsp_hal_boot &rArr; dsp_hal_codec_open &rArr; audio_hal_action &rArr; audio_hal_dsp_action
</UL>
<BR>[Calls]<UL><LI><a href="#[e81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_event_flag_check
<LI><a href="#[e80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_mgr_is_stable
</UL>
<BR>[Called By]<UL><LI><a href="#[e76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_schedule
</UL>

<P><STRONG><a name="[e76]"></a>audio_path_schedule</STRONG> (Thumb, 336 bytes, Stack size 24 bytes, audio_path.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = audio_path_schedule &rArr; audio_path_voice_start &rArr; dsp_mgr_session_enable &rArr; dsp_state_machine &rArr; dsp_power_on &rArr; dsp_hal_reset &rArr; shm_enable &rArr; h2d_cmd_send &rArr; shm_cmd_send &rArr; wr_queue_send
</UL>
<BR>[Calls]<UL><LI><a href="#[9b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_stop
<LI><a href="#[e85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_voice_start
<LI><a href="#[e78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_schedule_priority
<LI><a href="#[e89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_mgr_peek_running_path
<LI><a href="#[e82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_peek
<LI><a href="#[e77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_suspend
<LI><a href="#[e86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_is_mixable
<LI><a href="#[e71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_state_set
<LI><a href="#[e88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_event_flag_wait
<LI><a href="#[e69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_mgr_session_enable
<LI><a href="#[e83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_mgr_power_on_check
<LI><a href="#[e84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_mgr_power_on
<LI><a href="#[e87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_session_enable
<LI><a href="#[e7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_is_stable
</UL>
<BR>[Called By]<UL><LI><a href="#[a65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_start
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_dsp_cback
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;voice_wait_running_handler
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_wait_running_handler
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;record_wait_running_handler
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notification_wait_running_handler
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;analog_wait_running_handler
<LI><a href="#[ec7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_plugin_msg_handle
</UL>

<P><STRONG><a name="[a3c]"></a>audio_path_init</STRONG> (Thumb, 328 bytes, Stack size 24 bytes, audio_path.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = audio_path_init &rArr; dsp_mgr_init &rArr; dsp_hal_init &rArr; dsp_pm_init &rArr; dsp_pm_power_on &rArr; hw_timer_create &rArr; hw_timer_create_int &rArr; hw_timer_driver_init_int &rArr; hw_timer_update_isr &rArr; RamVectorTableUpdate_for_xip_isr
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[9b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_create
<LI><a href="#[a4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_mgr_register_cback
<LI><a href="#[a49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_ipc_cback_register
<LI><a href="#[aa6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_route_init
<LI><a href="#[e92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_mgr_event_register
<LI><a href="#[e90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_event_group_create
<LI><a href="#[e8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_mgr_init
<LI><a href="#[e8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_mgr_init
<LI><a href="#[e8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_init
<LI><a href="#[e8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bin_loader_init
<LI><a href="#[e91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_plugin_init
</UL>
<BR>[Called By]<UL><LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_mgr_init
</UL>

<P><STRONG><a name="[a60]"></a>audio_path_create</STRONG> (Thumb, 250 bytes, Stack size 48 bytes, audio_path.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = audio_path_create &rArr; audio_path_record_init &rArr; sport_mgr_session_create &rArr; sport_mgr_sport_path_take &rArr; audio_route_physical_path_take &rArr; audio_route_physical_path_get &rArr; audio_route_voice_physical_path_get
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[e98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_analog_init
<LI><a href="#[e97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_vp_init
<LI><a href="#[e96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_tone_init
<LI><a href="#[e95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_record_init
<LI><a href="#[e94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_voice_init
<LI><a href="#[e93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_audio_init
<LI><a href="#[e73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_get_queue
<LI><a href="#[e90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_event_group_create
</UL>
<BR>[Called By]<UL><LI><a href="#[a40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notification_init
<LI><a href="#[a56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_session_state_set
</UL>

<P><STRONG><a name="[a66]"></a>audio_path_destory</STRONG> (Thumb, 92 bytes, Stack size 8 bytes, audio_path.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = audio_path_destory &rArr; sys_event_group_delete &rArr; sys_event_flag_abort
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[e72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_state_exit
<LI><a href="#[e9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_event_group_delete
<LI><a href="#[e9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_mgr_destroy
<LI><a href="#[e9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_mgr_session_destroy
<LI><a href="#[e99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_session_destroy
</UL>
<BR>[Called By]<UL><LI><a href="#[a56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_session_state_set
</UL>

<P><STRONG><a name="[a65]"></a>audio_path_start</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, audio_path.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = audio_path_start &rArr; audio_path_schedule &rArr; audio_path_voice_start &rArr; dsp_mgr_session_enable &rArr; dsp_state_machine &rArr; dsp_power_on &rArr; dsp_hal_reset &rArr; shm_enable &rArr; h2d_cmd_send &rArr; shm_cmd_send &rArr; wr_queue_send
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[e71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_state_set
<LI><a href="#[e76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_schedule
</UL>
<BR>[Called By]<UL><LI><a href="#[a56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_session_state_set
<LI><a href="#[e42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notification_path_start
<LI><a href="#[e3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notification_start_vp
</UL>

<P><STRONG><a name="[a6b]"></a>audio_path_stop</STRONG> (Thumb, 118 bytes, Stack size 16 bytes, audio_path.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = audio_path_stop &rArr; audio_path_state_set &rArr; sys_event_flag_post &rArr; sys_event_flag_abort
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[e71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_state_set
<LI><a href="#[e88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_event_flag_wait
</UL>
<BR>[Called By]<UL><LI><a href="#[a85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notification_stop
<LI><a href="#[a56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_session_state_set
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_ready_stop_cback
</UL>

<P><STRONG><a name="[b0]"></a>audio_path_ready_stop_cback</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, audio_path.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = audio_path_ready_stop_cback &rArr; audio_path_stop &rArr; audio_path_state_set &rArr; sys_event_flag_post &rArr; sys_event_flag_abort
</UL>
<BR>[Calls]<UL><LI><a href="#[a6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_stop
</UL>
<BR>[Address Reference Count : 1]<UL><LI> audio_path.o(.text)
</UL>
<P><STRONG><a name="[a51]"></a>audio_path_dac_level_set</STRONG> (Thumb, 192 bytes, Stack size 80 bytes, audio_path.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = audio_path_dac_level_set &rArr; codec_mgr_dac_gain_set &rArr; codec_drv_dac_config_set &rArr; codec_drv_event_process &rArr; codec_drv_set_sample_rate
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[ea4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_route_dac_gain_get
<LI><a href="#[ea5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_dac_gain_set
<LI><a href="#[ea6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_ipc_set_volume_level
<LI><a href="#[ea7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_dac_gain_set
<LI><a href="#[ea1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbnf
<LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[a7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
</UL>
<BR>[Called By]<UL><LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_volume_out_set
<LI><a href="#[446]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_volume_out_unmute
<LI><a href="#[a2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_volume_out_unmute_all
<LI><a href="#[a83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notification_volume_set
<LI><a href="#[a50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_volume_apply
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_composite_cback
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_voice_prompt_cback
</UL>

<P><STRONG><a name="[a52]"></a>audio_path_dac_mute</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, audio_path.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = audio_path_dac_mute &rArr; audio_path_dac_gain_set &rArr; dsp_ipc_set_tone_gain &rArr; dsp_ipc_h2d_cmd_send &rArr; h2d_cmd_send &rArr; shm_cmd_send &rArr; wr_queue_send
</UL>
<BR>[Calls]<UL><LI><a href="#[ea5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_dac_gain_set
</UL>
<BR>[Called By]<UL><LI><a href="#[4f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_volume_out_mute
<LI><a href="#[a2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_volume_out_mute_all
<LI><a href="#[a50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_volume_apply
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_composite_cback
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_voice_prompt_cback
</UL>

<P><STRONG><a name="[a53]"></a>audio_path_adc_level_set</STRONG> (Thumb, 166 bytes, Stack size 48 bytes, audio_path.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = audio_path_adc_level_set &rArr; audio_path_gain_scale &rArr; pow &rArr; sqrt &rArr; _dsqrt
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[ea8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_route_adc_gain_get
<LI><a href="#[eab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_adc_gain_set
<LI><a href="#[ea0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_gain_scale
<LI><a href="#[eac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_adc_gain_set
<LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[a7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[ea9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[eaa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[a32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_volume_in_unmute_all
<LI><a href="#[a6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_volume_in_set
<LI><a href="#[a50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_volume_apply
</UL>

<P><STRONG><a name="[a54]"></a>audio_path_adc_mute</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, audio_path.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = audio_path_adc_mute &rArr; codec_mgr_adc_gain_mute &rArr; codec_mgr_adc_gain_config &rArr; audio_route_physical_path_take &rArr; audio_route_physical_path_get &rArr; audio_route_voice_physical_path_get
</UL>
<BR>[Calls]<UL><LI><a href="#[eab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_adc_gain_set
<LI><a href="#[ead]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_adc_gain_mute
</UL>
<BR>[Called By]<UL><LI><a href="#[a31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_volume_in_mute_all
<LI><a href="#[a50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_volume_apply
</UL>

<P><STRONG><a name="[a3b]"></a>audio_path_power_off</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, audio_path.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = audio_path_power_off &rArr; audio_mgr_dsp_timer_cback &rArr; dsp_mgr_power_off &rArr; dsp_state_machine &rArr; dsp_power_on &rArr; dsp_hal_reset &rArr; shm_enable &rArr; h2d_cmd_send &rArr; shm_cmd_send &rArr; wr_queue_send
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_mgr_dsp_timer_cback
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_mgr_codec_timer_cback
<LI><a href="#[eaf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_mgr_get_state
<LI><a href="#[eae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_get_state
</UL>
<BR>[Called By]<UL><LI><a href="#[a3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_sys_ipc_cback
</UL>

<P><STRONG><a name="[a17]"></a>audio_path_timestamp_set</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, audio_path.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = audio_path_timestamp_set &rArr; dsp_mgr_signal_proc_start &rArr; dsp_remote_init &rArr; dsp_ipc_set_rws_init &rArr; dsp_ipc_h2d_cmd_send &rArr; h2d_cmd_send &rArr; shm_cmd_send &rArr; wr_queue_send
</UL>
<BR>[Calls]<UL><LI><a href="#[eb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_mgr_signal_proc_start
</UL>
<BR>[Called By]<UL><LI><a href="#[a1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_buffer_wait_play_state
<LI><a href="#[a18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_buffer_prequeue_state
<LI><a href="#[a13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_buffer_uninit_state
<LI><a href="#[e39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_data_send
</UL>

<P><STRONG><a name="[e39]"></a>audio_path_data_send</STRONG> (Thumb, 278 bytes, Stack size 32 bytes, audio_path.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = audio_path_data_send &rArr; audio_path_timestamp_set &rArr; dsp_mgr_signal_proc_start &rArr; dsp_remote_init &rArr; dsp_ipc_set_rws_init &rArr; dsp_ipc_h2d_cmd_send &rArr; h2d_cmd_send &rArr; shm_cmd_send &rArr; wr_queue_send
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[a17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_timestamp_set
<LI><a href="#[eb1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;h2d_data_send
<LI><a href="#[e9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_mgr_voice_prompt_stop
<LI><a href="#[eb3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_mgr_voice_prompt_start
<LI><a href="#[eb4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_mgr_voice_prompt_send
<LI><a href="#[eb2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_mgr_composite_start
</UL>
<BR>[Called By]<UL><LI><a href="#[a0d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;media_buffer_downstream_dsp
<LI><a href="#[e4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;media_buffer_backup_downstream
<LI><a href="#[e43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notification_ringtone_start
<LI><a href="#[e38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notification_vp_data_req
</UL>

<P><STRONG><a name="[a5e]"></a>audio_path_data_recv</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, audio_path.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = audio_path_data_recv &rArr; d2h_data_recv &rArr; shm_data_recv &rArr; wr_queue_rcv
</UL>
<BR>[Calls]<UL><LI><a href="#[eb5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;d2h_data_recv
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_path_cback
</UL>

<P><STRONG><a name="[a5d]"></a>audio_path_data_peek</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, audio_path.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = audio_path_data_peek &rArr; d2h_data_length_peek
</UL>
<BR>[Calls]<UL><LI><a href="#[eb6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;d2h_data_length_peek
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_path_cback
</UL>

<P><STRONG><a name="[a27]"></a>audio_path_is_running</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, audio_path.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[a25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_mgr_dispatch
</UL>

<P><STRONG><a name="[e5a]"></a>audio_path_latency_rpt_set</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, audio_path.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = audio_path_latency_rpt_set &rArr; dsp_ipc_set_latency_report &rArr; dsp_ipc_h2d_cmd_send &rArr; h2d_cmd_send &rArr; shm_cmd_send &rArr; wr_queue_send
</UL>
<BR>[Calls]<UL><LI><a href="#[eb7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_ipc_set_latency_report
</UL>
<BR>[Called By]<UL><LI><a href="#[e59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;media_buffer_latency_report_set_peroid
</UL>

<P><STRONG><a name="[a97]"></a>audio_path_sw_sidetone_enable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, audio_path.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = audio_path_sw_sidetone_enable &rArr; dsp_ipc_sidetone_set &rArr; h2d_cmd_send &rArr; shm_cmd_send &rArr; wr_queue_send
</UL>
<BR>[Calls]<UL><LI><a href="#[eb8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_ipc_sidetone_set
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sidetone_effect_enable
</UL>

<P><STRONG><a name="[a99]"></a>audio_path_sw_sidetone_disable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, audio_path.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = audio_path_sw_sidetone_disable &rArr; dsp_ipc_sidetone_set &rArr; h2d_cmd_send &rArr; shm_cmd_send &rArr; wr_queue_send
</UL>
<BR>[Calls]<UL><LI><a href="#[eb8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_ipc_sidetone_set
</UL>
<BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sidetone_effect_disable
</UL>

<P><STRONG><a name="[a98]"></a>audio_path_hw_sidetone_enable</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, audio_path.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = audio_path_hw_sidetone_enable &rArr; codec_mgr_sidetone_set &rArr; codec_drv_sidetone_disable &rArr; codec_drv_sidetone_timer_ctrl &rArr; sys_timer_restart &rArr; sys_hp_timer_list_insert &rArr; hw_timer_restart &rArr; hw_timer_safe_stop &rArr; hw_timer_set_div
</UL>
<BR>[Calls]<UL><LI><a href="#[eb9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_sidetone_set
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sidetone_effect_enable
</UL>

<P><STRONG><a name="[a9a]"></a>audio_path_hw_sidetone_disable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, audio_path.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = audio_path_hw_sidetone_disable &rArr; codec_mgr_sidetone_set &rArr; codec_drv_sidetone_disable &rArr; codec_drv_sidetone_timer_ctrl &rArr; sys_timer_restart &rArr; sys_hp_timer_list_insert &rArr; hw_timer_restart &rArr; hw_timer_safe_stop &rArr; hw_timer_set_div
</UL>
<BR>[Calls]<UL><LI><a href="#[eb9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_sidetone_set
</UL>
<BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sidetone_effect_disable
</UL>

<P><STRONG><a name="[a47]"></a>audio_path_cback_register</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, audio_path.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = audio_path_cback_register &rArr; sys_ipc_subscribe
</UL>
<BR>[Calls]<UL><LI><a href="#[a41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_ipc_subscribe
</UL>
<BR>[Called By]<UL><LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_mgr_init
</UL>

<P><STRONG><a name="[a4d]"></a>audio_path_lpm_set</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, audio_path.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = audio_path_lpm_set &rArr; sys_timer_start &rArr; sys_hp_timer_list_insert &rArr; hw_timer_restart &rArr; hw_timer_safe_stop &rArr; hw_timer_set_div
</UL>
<BR>[Calls]<UL><LI><a href="#[9b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_stop
<LI><a href="#[9b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_start
</UL>
<BR>[Called By]<UL><LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_probe_disable_dsp_powerdown
</UL>

<P><STRONG><a name="[104f]"></a>audio_path_msg_send</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, audio_path.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = audio_path_msg_send
</UL>
<BR>[Called By]<UL><LI><a href="#[e6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_plugin_occasion_occur
</UL>

<P><STRONG><a name="[a69]"></a>audio_path_signal_out_monitoring_set</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, audio_path.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[a56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_session_state_set
</UL>

<P><STRONG><a name="[a6a]"></a>audio_path_signal_in_monitoring_set</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, audio_path.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[a56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_session_state_set
</UL>

<P><STRONG><a name="[a7e]"></a>audio_path_gain_delta_set</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, audio_path.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[941]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_volume_balance_set
</UL>

<P><STRONG><a name="[af]"></a>audio_path_msg_handler</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, audio_path.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 392<LI>Call Chain = audio_path_msg_handler &rArr; audio_path_plugin_msg_handle &rArr; audio_path_schedule &rArr; audio_path_voice_start &rArr; dsp_mgr_session_enable &rArr; dsp_state_machine &rArr; dsp_power_on &rArr; dsp_hal_reset &rArr; shm_enable &rArr; h2d_cmd_send &rArr; shm_cmd_send &rArr; wr_queue_send
</UL>
<BR>[Calls]<UL><LI><a href="#[ec7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_plugin_msg_handle
</UL>
<BR>[Address Reference Count : 1]<UL><LI> audio_path.o(.text)
</UL>
<P><STRONG><a name="[b3]"></a>voice_dsp_mgr_session_cb</STRONG> (Thumb, 222 bytes, Stack size 24 bytes, audio_path.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = voice_dsp_mgr_session_cb &rArr; sport_mgr_enable &rArr; sport_mgr_param_set &rArr; sport_drv_trx_config_set &rArr; sport_drv_frac_div_set_dependent &rArr; sport_drv_calc_channel_len_ratio &rArr; __aeabi_fdiv
</UL>
<BR>[Calls]<UL><LI><a href="#[ecc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_wait_codec_enabled
<LI><a href="#[e6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_event_flag_post
<LI><a href="#[e6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_mgr_tx_sample_rate_get
<LI><a href="#[e6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_mgr_rx_sample_rate_get
<LI><a href="#[ecd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_mgr_enable
<LI><a href="#[e7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_mgr_session_disable
<LI><a href="#[e7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_mgr_encoder_action
<LI><a href="#[e7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_mgr_decoder_action
<LI><a href="#[ecb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;d2h_data_flush
<LI><a href="#[e6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_plugin_occasion_occur
</UL>
<BR>[Address Reference Count : 1]<UL><LI> audio_path.o(.text)
</UL>
<P><STRONG><a name="[b2]"></a>audio_dsp_mgr_session_cb</STRONG> (Thumb, 446 bytes, Stack size 32 bytes, audio_path.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = audio_dsp_mgr_session_cb &rArr; sport_mgr_enable &rArr; sport_mgr_param_set &rArr; sport_drv_trx_config_set &rArr; sport_drv_frac_div_set_dependent &rArr; sport_drv_calc_channel_len_ratio &rArr; __aeabi_fdiv
</UL>
<BR>[Calls]<UL><LI><a href="#[e74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_find_category
<LI><a href="#[ecc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_wait_codec_enabled
<LI><a href="#[e6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_event_flag_post
<LI><a href="#[e6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_mgr_tx_sample_rate_get
<LI><a href="#[e6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_mgr_rx_sample_rate_get
<LI><a href="#[ecd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_mgr_enable
<LI><a href="#[e7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_mgr_session_disable
<LI><a href="#[e7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_mgr_decoder_action
<LI><a href="#[e9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_ipc_set_force_dummy_pkt
<LI><a href="#[e6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_plugin_occasion_occur
</UL>
<BR>[Address Reference Count : 1]<UL><LI> audio_path.o(.text)
</UL>
<P><STRONG><a name="[b4]"></a>record_dsp_mgr_session_cb</STRONG> (Thumb, 152 bytes, Stack size 24 bytes, audio_path.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = record_dsp_mgr_session_cb &rArr; sport_mgr_enable &rArr; sport_mgr_param_set &rArr; sport_drv_trx_config_set &rArr; sport_drv_frac_div_set_dependent &rArr; sport_drv_calc_channel_len_ratio &rArr; __aeabi_fdiv
</UL>
<BR>[Calls]<UL><LI><a href="#[ecc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_wait_codec_enabled
<LI><a href="#[e6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_event_flag_post
<LI><a href="#[e6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_mgr_tx_sample_rate_get
<LI><a href="#[e6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_mgr_rx_sample_rate_get
<LI><a href="#[ecd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_mgr_enable
<LI><a href="#[ecb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;d2h_data_flush
<LI><a href="#[e6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_plugin_occasion_occur
</UL>
<BR>[Address Reference Count : 1]<UL><LI> audio_path.o(.text)
</UL>
<P><STRONG><a name="[b5]"></a>notification_dsp_mgr_session_cb</STRONG> (Thumb, 194 bytes, Stack size 24 bytes, audio_path.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = notification_dsp_mgr_session_cb &rArr; sport_mgr_enable &rArr; sport_mgr_param_set &rArr; sport_drv_trx_config_set &rArr; sport_drv_frac_div_set_dependent &rArr; sport_drv_calc_channel_len_ratio &rArr; __aeabi_fdiv
</UL>
<BR>[Calls]<UL><LI><a href="#[e71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_state_set
<LI><a href="#[ecc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_wait_codec_enabled
<LI><a href="#[e88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_event_flag_wait
<LI><a href="#[e6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_event_flag_post
<LI><a href="#[e6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_mgr_tx_sample_rate_get
<LI><a href="#[e6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_mgr_rx_sample_rate_get
<LI><a href="#[ecd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_mgr_enable
<LI><a href="#[e7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_mgr_suppress_tx_gain
<LI><a href="#[e7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_mgr_session_disable
<LI><a href="#[e7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_mgr_decoder_action
<LI><a href="#[e6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_plugin_occasion_occur
</UL>
<BR>[Address Reference Count : 1]<UL><LI> audio_path.o(.text)
</UL>
<P><STRONG><a name="[b6]"></a>analog_dsp_mgr_session_cb</STRONG> (Thumb, 186 bytes, Stack size 32 bytes, audio_path.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = analog_dsp_mgr_session_cb &rArr; sport_mgr_enable &rArr; sport_mgr_param_set &rArr; sport_drv_trx_config_set &rArr; sport_drv_frac_div_set_dependent &rArr; sport_drv_calc_channel_len_ratio &rArr; __aeabi_fdiv
</UL>
<BR>[Calls]<UL><LI><a href="#[ecc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_wait_codec_enabled
<LI><a href="#[e6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_event_flag_post
<LI><a href="#[e6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_mgr_tx_sample_rate_get
<LI><a href="#[e6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_mgr_rx_sample_rate_get
<LI><a href="#[ecd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_mgr_enable
<LI><a href="#[e7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_mgr_session_disable
<LI><a href="#[e75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_mgr_line_in_action
<LI><a href="#[e6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_plugin_occasion_occur
</UL>
<BR>[Address Reference Count : 1]<UL><LI> audio_path.o(.text)
</UL>
<P><STRONG><a name="[e5b]"></a>audio_path_low_latency_set</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, audio_path.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = audio_path_low_latency_set &rArr; dsp_ipc_set_low_latency_mode &rArr; dsp_ipc_h2d_cmd_send &rArr; h2d_cmd_send &rArr; shm_cmd_send &rArr; wr_queue_send
</UL>
<BR>[Calls]<UL><LI><a href="#[ece]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_ipc_set_low_latency_mode
</UL>
<BR>[Called By]<UL><LI><a href="#[a68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;media_buffer_low_latency_config
</UL>

<P><STRONG><a name="[a42]"></a>jb_init</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, jitter_buffer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = jb_init
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_mgr_init
</UL>

<P><STRONG><a name="[ecf]"></a>jitter_bufferr_check_handle</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, jitter_buffer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = jitter_bufferr_check_handle
</UL>
<BR>[Called By]<UL><LI><a href="#[a37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jitter_buffer_asrc_pid_is_block
<LI><a href="#[a16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jitter_buffer_asrc_pid_init
<LI><a href="#[a38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jitter_buffer_asrc_pid_controller
<LI><a href="#[e61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jitter_buffer_low_latency_adjust_latency
<LI><a href="#[e4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jitter_buffer_buffer_reset
<LI><a href="#[ed1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jitter_buffer_asrc_pid_reset
</UL>

<P><STRONG><a name="[a16]"></a>jitter_buffer_asrc_pid_init</STRONG> (Thumb, 100 bytes, Stack size 16 bytes, jitter_buffer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = jitter_buffer_asrc_pid_init &rArr; jitter_bufferr_check_handle
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[ed0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;media_buffer_get_mode
<LI><a href="#[ecf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jitter_bufferr_check_handle
</UL>
<BR>[Called By]<UL><LI><a href="#[a18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_buffer_prequeue_state
<LI><a href="#[a13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_buffer_uninit_state
<LI><a href="#[e4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jitter_buffer_register
</UL>

<P><STRONG><a name="[e4f]"></a>jitter_buffer_register</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, jitter_buffer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = jitter_buffer_register &rArr; jitter_buffer_asrc_pid_init &rArr; jitter_bufferr_check_handle
</UL>
<BR>[Calls]<UL><LI><a href="#[a16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jitter_buffer_asrc_pid_init
</UL>
<BR>[Called By]<UL><LI><a href="#[e4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;media_buffer_construct
</UL>

<P><STRONG><a name="[e4c]"></a>jitter_buffer_buffer_reset</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, jitter_buffer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = jitter_buffer_buffer_reset &rArr; sys_timer_delete &rArr; sys_hp_timer_list_remove &rArr; hw_timer_restart &rArr; hw_timer_safe_stop &rArr; hw_timer_set_div
</UL>
<BR>[Calls]<UL><LI><a href="#[977]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_delete
<LI><a href="#[ecf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jitter_bufferr_check_handle
</UL>
<BR>[Called By]<UL><LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__buffer_reset
</UL>

<P><STRONG><a name="[ed1]"></a>jitter_buffer_asrc_pid_reset</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, jitter_buffer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = jitter_buffer_asrc_pid_reset &rArr; jitter_bufferr_check_handle
</UL>
<BR>[Calls]<UL><LI><a href="#[ecf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jitter_bufferr_check_handle
</UL>
<BR>[Called By]<UL><LI><a href="#[a38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jitter_buffer_asrc_pid_controller
</UL>

<P><STRONG><a name="[a37]"></a>jitter_buffer_asrc_pid_is_block</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, jitter_buffer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = jitter_buffer_asrc_pid_is_block &rArr; jitter_bufferr_check_handle
</UL>
<BR>[Calls]<UL><LI><a href="#[ecf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jitter_bufferr_check_handle
</UL>
<BR>[Called By]<UL><LI><a href="#[a25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_mgr_dispatch
</UL>

<P><STRONG><a name="[a38]"></a>jitter_buffer_asrc_pid_controller</STRONG> (Thumb, 588 bytes, Stack size 80 bytes, jitter_buffer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = jitter_buffer_asrc_pid_controller &rArr; jitter_buffer_asrc_pid_reset &rArr; jitter_bufferr_check_handle
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[ed0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;media_buffer_get_mode
<LI><a href="#[ed1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jitter_buffer_asrc_pid_reset
<LI><a href="#[ecf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jitter_bufferr_check_handle
<LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[93f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[a7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[940]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[ed2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_frsub
<LI><a href="#[eaa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[a25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_mgr_dispatch
</UL>

<P><STRONG><a name="[a35]"></a>jitter_buffer_compensation_get</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, jitter_buffer.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[a25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_mgr_dispatch
</UL>

<P><STRONG><a name="[ed3]"></a>jitter_buffer_find_handle_by_id</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, jitter_buffer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = jitter_buffer_find_handle_by_id
</UL>
<BR>[Called By]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jitter_buffer_timeout_cback
</UL>

<P><STRONG><a name="[b9]"></a>jitter_buffer_timeout_cback</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, jitter_buffer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = jitter_buffer_timeout_cback &rArr; sys_timer_delete &rArr; sys_hp_timer_list_remove &rArr; hw_timer_restart &rArr; hw_timer_safe_stop &rArr; hw_timer_set_div
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[9b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_id_get
<LI><a href="#[977]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_delete
<LI><a href="#[ed3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jitter_buffer_find_handle_by_id
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jitter_buffer.o(.text)
</UL>
<P><STRONG><a name="[e62]"></a>jitter_buffer_asrc_ratio_adjust</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, jitter_buffer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = jitter_buffer_asrc_ratio_adjust &rArr; dsp_ipc_set_rws_asrc_ratio &rArr; dsp_ipc_h2d_cmd_send &rArr; h2d_cmd_send &rArr; shm_cmd_send &rArr; wr_queue_send
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[ed4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_ipc_set_rws_asrc_ratio
</UL>
<BR>[Called By]<UL><LI><a href="#[e61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jitter_buffer_low_latency_adjust_latency
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;playback_buffer_jb_evt_cback
</UL>

<P><STRONG><a name="[e61]"></a>jitter_buffer_low_latency_adjust_latency</STRONG> (Thumb, 212 bytes, Stack size 40 bytes, jitter_buffer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = jitter_buffer_low_latency_adjust_latency &rArr; jitter_buffer_asrc_ratio_adjust &rArr; dsp_ipc_set_rws_asrc_ratio &rArr; dsp_ipc_h2d_cmd_send &rArr; h2d_cmd_send &rArr; shm_cmd_send &rArr; wr_queue_send
</UL>
<BR>[Calls]<UL><LI><a href="#[9b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_start
<LI><a href="#[9b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_create
<LI><a href="#[977]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_delete
<LI><a href="#[e62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jitter_buffer_asrc_ratio_adjust
<LI><a href="#[ecf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jitter_bufferr_check_handle
</UL>
<BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;playback_buffer_jb_evt_cback
</UL>

<P><STRONG><a name="[a3f]"></a>audio_effect_init</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, audio_effect.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = audio_effect_init
</UL>
<BR>[Called By]<UL><LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_mgr_init
</UL>

<P><STRONG><a name="[a8e]"></a>audio_effect_create</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, audio_effect.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = audio_effect_create
</UL>
<BR>[Called By]<UL><LI><a href="#[6d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrec_create
<LI><a href="#[6d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sidetone_create
<LI><a href="#[671]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eq_create
</UL>

<P><STRONG><a name="[a91]"></a>audio_effect_release</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, audio_effect.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = audio_effect_release
</UL>
<BR>[Called By]<UL><LI><a href="#[47a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sidetone_release
<LI><a href="#[53e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eq_release
<LI><a href="#[6db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrec_release
<LI><a href="#[6d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrec_create
<LI><a href="#[6d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sidetone_create
<LI><a href="#[671]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eq_create
</UL>

<P><STRONG><a name="[a79]"></a>audio_effect_owner_set</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, audio_effect.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = audio_effect_owner_set
</UL>
<BR>[Called By]<UL><LI><a href="#[6d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_effect_detach
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_effect_attach
</UL>

<P><STRONG><a name="[a76]"></a>audio_effect_owner_get</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, audio_effect.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = audio_effect_owner_get
</UL>
<BR>[Called By]<UL><LI><a href="#[944]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sidetone_gain_set
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_effect_cback
</UL>

<P><STRONG><a name="[a6e]"></a>audio_effect_owner_clear</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, audio_effect.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = audio_effect_owner_clear
</UL>
<BR>[Called By]<UL><LI><a href="#[6d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_effect_detach
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_effect_cback
<LI><a href="#[a56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_session_state_set
</UL>

<P><STRONG><a name="[a8f]"></a>audio_effect_inheritor_set</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, audio_effect.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = audio_effect_inheritor_set
</UL>
<BR>[Called By]<UL><LI><a href="#[6d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrec_create
<LI><a href="#[6d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sidetone_create
<LI><a href="#[671]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eq_create
</UL>

<P><STRONG><a name="[a89]"></a>audio_effect_inheritor_get</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, audio_effect.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = audio_effect_inheritor_get
</UL>
<BR>[Called By]<UL><LI><a href="#[47a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sidetone_release
<LI><a href="#[479]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sidetone_disable
<LI><a href="#[53e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eq_release
<LI><a href="#[6db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrec_release
<LI><a href="#[6d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrec_enable
<LI><a href="#[6da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrec_disable
<LI><a href="#[6d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sidetone_enable
<LI><a href="#[66b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eq_set
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eq_enable
<LI><a href="#[944]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sidetone_gain_set
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sidetone_effect_disable
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sidetone_effect_enable
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrec_effect_disable
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrec_effect_enable
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eq_effect_enable
</UL>

<P><STRONG><a name="[a90]"></a>audio_effect_inheritor_clear</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, audio_effect.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = audio_effect_inheritor_clear
</UL>
<BR>[Called By]<UL><LI><a href="#[671]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eq_create
</UL>

<P><STRONG><a name="[a92]"></a>audio_effect_enable</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, audio_effect.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = audio_effect_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[6d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrec_enable
<LI><a href="#[6d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sidetone_enable
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eq_enable
</UL>

<P><STRONG><a name="[a96]"></a>audio_effect_disable</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, audio_effect.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = audio_effect_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[479]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sidetone_disable
<LI><a href="#[6da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrec_disable
</UL>

<P><STRONG><a name="[a93]"></a>audio_effect_update</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, audio_effect.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = audio_effect_update
</UL>
<BR>[Called By]<UL><LI><a href="#[66b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eq_set
<LI><a href="#[944]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sidetone_gain_set
</UL>

<P><STRONG><a name="[a5c]"></a>audio_effect_run</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, audio_effect.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = audio_effect_run
</UL>
<BR>[Called By]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_effect_attach
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_effect_cback
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_path_cback
</UL>

<P><STRONG><a name="[a77]"></a>audio_effect_stop</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, audio_effect.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = audio_effect_stop
</UL>
<BR>[Called By]<UL><LI><a href="#[6d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_effect_detach
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_effect_cback
</UL>

<P><STRONG><a name="[ed6]"></a>audio_interval_check_handle</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, audio_interval_eval.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = audio_interval_check_handle
</UL>
<BR>[Called By]<UL><LI><a href="#[e67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_inteval_evaluator_update
<LI><a href="#[e68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_inteval_evaluator_get_var
<LI><a href="#[ed5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_interval_get_stable_state
<LI><a href="#[ed8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_interval_evaluator_reset
<LI><a href="#[eda]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;param_long_term_update
</UL>

<P><STRONG><a name="[a44]"></a>audio_interval_eval_init</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, audio_interval_eval.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = audio_interval_eval_init
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_mgr_init
</UL>

<P><STRONG><a name="[e58]"></a>audio_interval_evaluator_unregister</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, audio_interval_eval.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = audio_interval_evaluator_unregister &rArr; sys_timer_delete &rArr; sys_hp_timer_list_remove &rArr; hw_timer_restart &rArr; hw_timer_safe_stop &rArr; hw_timer_set_div
</UL>
<BR>[Calls]<UL><LI><a href="#[977]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_delete
</UL>
<BR>[Called By]<UL><LI><a href="#[a7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;media_buffer_active_proxy
</UL>

<P><STRONG><a name="[ed5]"></a>audio_interval_get_stable_state</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, audio_interval_eval.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ed6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_interval_check_handle
</UL>
<BR>[Called By]<UL><LI><a href="#[edd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_latency_adjust_check
</UL>

<P><STRONG><a name="[ed7]"></a>audio_eval_find_handle_by_id</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, audio_interval_eval.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = audio_eval_find_handle_by_id
</UL>
<BR>[Called By]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;variance_check_timer_cback
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stable_dejitter_timer_cback
</UL>

<P><STRONG><a name="[bb]"></a>variance_check_timer_cback</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, audio_interval_eval.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = variance_check_timer_cback &rArr; audio_eval_find_handle_by_id
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[9b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_id_get
<LI><a href="#[ed7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_eval_find_handle_by_id
</UL>
<BR>[Address Reference Count : 1]<UL><LI> audio_interval_eval.o(.text)
</UL>
<P><STRONG><a name="[ba]"></a>stable_dejitter_timer_cback</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, audio_interval_eval.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = stable_dejitter_timer_cback &rArr; audio_eval_find_handle_by_id
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[9b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_id_get
<LI><a href="#[ed7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_eval_find_handle_by_id
</UL>
<BR>[Address Reference Count : 1]<UL><LI> audio_interval_eval.o(.text)
</UL>
<P><STRONG><a name="[e57]"></a>audio_interval_evaluator_register</STRONG> (Thumb, 140 bytes, Stack size 32 bytes, audio_interval_eval.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = audio_interval_evaluator_register &rArr; sys_timer_create
</UL>
<BR>[Calls]<UL><LI><a href="#[9b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_create
</UL>
<BR>[Called By]<UL><LI><a href="#[a7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;media_buffer_active_proxy
</UL>

<P><STRONG><a name="[ed8]"></a>audio_interval_evaluator_reset</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, audio_interval_eval.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = audio_interval_evaluator_reset &rArr; sys_timer_stop &rArr; sys_hp_timer_list_remove &rArr; hw_timer_restart &rArr; hw_timer_safe_stop &rArr; hw_timer_set_div
</UL>
<BR>[Calls]<UL><LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
<LI><a href="#[9b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_stop
<LI><a href="#[ed6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_interval_check_handle
</UL>
<BR>[Called By]<UL><LI><a href="#[e67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_inteval_evaluator_update
</UL>

<P><STRONG><a name="[e68]"></a>audio_inteval_evaluator_get_var</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, audio_interval_eval.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = audio_inteval_evaluator_get_var &rArr; audio_interval_check_handle
</UL>
<BR>[Calls]<UL><LI><a href="#[ed6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_interval_check_handle
</UL>
<BR>[Called By]<UL><LI><a href="#[a71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;media_buffer_inteval_evaluator_get_var
</UL>

<P><STRONG><a name="[e67]"></a>audio_inteval_evaluator_update</STRONG> (Thumb, 440 bytes, Stack size 32 bytes, audio_interval_eval.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = audio_inteval_evaluator_update &rArr; sys_timer_restart &rArr; sys_hp_timer_list_insert &rArr; hw_timer_restart &rArr; hw_timer_safe_stop &rArr; hw_timer_set_div
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[9b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_stop
<LI><a href="#[9b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_start
<LI><a href="#[9b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_restart
<LI><a href="#[ed8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_interval_evaluator_reset
<LI><a href="#[ed6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_interval_check_handle
<LI><a href="#[eda]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;param_long_term_update
<LI><a href="#[ed9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;interval_queue_update
<LI><a href="#[edb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;float2Hint
<LI><a href="#[ea1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbnf
<LI><a href="#[e64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfrcmple
<LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[e63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmple
<LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[93f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[940]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[ea9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[ed2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_frsub
</UL>
<BR>[Called By]<UL><LI><a href="#[a70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;media_buffer_inteval_evaluator_update
</UL>

<P><STRONG><a name="[a45]"></a>audio_pipe_init</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, audio_pipe.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_mgr_init
</UL>

<P><STRONG><a name="[edc]"></a>audio_latency_mgr_check_handle</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, audio_latency.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = audio_latency_mgr_check_handle
</UL>
<BR>[Called By]<UL><LI><a href="#[a36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_latency_record_update
<LI><a href="#[a21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_latency_get_dynamic_latency_on
<LI><a href="#[e54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;auido_latency_lat_dynamic_timer_check
<LI><a href="#[e5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_latency_ultra_low_latency_plc_req
<LI><a href="#[e52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_latency_set_dynamic_latency_on
<LI><a href="#[e5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_latency_resume
<LI><a href="#[e56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_latency_reset
<LI><a href="#[e5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_latency_lat_dynamic_increase
<LI><a href="#[e60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_latency_lat_dynamic_decrease
<LI><a href="#[e65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_latency_handle_inverval_unstable_evt
<LI><a href="#[e66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_latency_handle_inverval_stable_evt
<LI><a href="#[e5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_latency_dynamic_set
<LI><a href="#[e4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_latency_buffer_reset
<LI><a href="#[ede]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_latency_handle_plc_event
<LI><a href="#[edd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_latency_adjust_check
</UL>

<P><STRONG><a name="[a43]"></a>audio_latency_mgr_init</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, audio_latency.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = audio_latency_mgr_init
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_mgr_init
</UL>

<P><STRONG><a name="[e56]"></a>audio_latency_reset</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, audio_latency.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = audio_latency_reset &rArr; sys_timer_delete &rArr; sys_hp_timer_list_remove &rArr; hw_timer_restart &rArr; hw_timer_safe_stop &rArr; hw_timer_set_div
</UL>
<BR>[Calls]<UL><LI><a href="#[977]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_delete
<LI><a href="#[edc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_latency_mgr_check_handle
</UL>
<BR>[Called By]<UL><LI><a href="#[a7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;media_buffer_deactive_proxy
</UL>

<P><STRONG><a name="[e4b]"></a>audio_latency_buffer_reset</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, audio_latency.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = audio_latency_buffer_reset &rArr; sys_timer_delete &rArr; sys_hp_timer_list_remove &rArr; hw_timer_restart &rArr; hw_timer_safe_stop &rArr; hw_timer_set_div
</UL>
<BR>[Calls]<UL><LI><a href="#[977]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_delete
<LI><a href="#[edc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_latency_mgr_check_handle
</UL>
<BR>[Called By]<UL><LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__buffer_reset
</UL>

<P><STRONG><a name="[e50]"></a>audio_latency_mgr_register</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, audio_latency.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = audio_latency_mgr_register
</UL>
<BR>[Called By]<UL><LI><a href="#[e4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;media_buffer_construct
</UL>

<P><STRONG><a name="[e60]"></a>audio_latency_lat_dynamic_decrease</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, audio_latency.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = audio_latency_lat_dynamic_decrease &rArr; audio_latency_mgr_check_handle
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[edc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_latency_mgr_check_handle
</UL>
<BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;playback_buffer_lat_evt_cback
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_latency_timeout_cback
</UL>

<P><STRONG><a name="[e5d]"></a>audio_latency_resume</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, audio_latency.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = audio_latency_resume &rArr; sys_timer_delete &rArr; sys_hp_timer_list_remove &rArr; hw_timer_restart &rArr; hw_timer_safe_stop &rArr; hw_timer_set_div
</UL>
<BR>[Calls]<UL><LI><a href="#[977]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_delete
<LI><a href="#[edc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_latency_mgr_check_handle
</UL>
<BR>[Called By]<UL><LI><a href="#[a22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;media_buffer_dynamic_latency_resume
</UL>

<P><STRONG><a name="[e5c]"></a>audio_latency_dynamic_set</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, audio_latency.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = audio_latency_dynamic_set &rArr; sys_timer_start &rArr; sys_hp_timer_list_insert &rArr; hw_timer_restart &rArr; hw_timer_safe_stop &rArr; hw_timer_set_div
</UL>
<BR>[Calls]<UL><LI><a href="#[9b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_start
<LI><a href="#[9b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_create
<LI><a href="#[edc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_latency_mgr_check_handle
</UL>
<BR>[Called By]<UL><LI><a href="#[a24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;media_buffer_dynamic_latency_set
</UL>

<P><STRONG><a name="[e54]"></a>auido_latency_lat_dynamic_timer_check</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, audio_latency.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = auido_latency_lat_dynamic_timer_check &rArr; sys_timer_restart &rArr; sys_hp_timer_list_insert &rArr; hw_timer_restart &rArr; hw_timer_safe_stop &rArr; hw_timer_set_div
</UL>
<BR>[Calls]<UL><LI><a href="#[9b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_restart
<LI><a href="#[edc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_latency_mgr_check_handle
</UL>
<BR>[Called By]<UL><LI><a href="#[a39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;media_buffer_handle_plc_event
<LI><a href="#[a73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;media_buffer_ds_write
</UL>

<P><STRONG><a name="[e5e]"></a>audio_latency_lat_dynamic_increase</STRONG> (Thumb, 88 bytes, Stack size 24 bytes, audio_latency.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = audio_latency_lat_dynamic_increase &rArr; sys_timer_restart &rArr; sys_hp_timer_list_insert &rArr; hw_timer_restart &rArr; hw_timer_safe_stop &rArr; hw_timer_set_div
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[9b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_start
<LI><a href="#[9b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_restart
<LI><a href="#[9b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_create
<LI><a href="#[edc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_latency_mgr_check_handle
</UL>
<BR>[Called By]<UL><LI><a href="#[a39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;media_buffer_handle_plc_event
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;playback_buffer_lat_evt_cback
</UL>

<P><STRONG><a name="[edd]"></a>audio_latency_adjust_check</STRONG> (Thumb, 188 bytes, Stack size 32 bytes, audio_latency.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[9b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_start
<LI><a href="#[9b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_create
<LI><a href="#[977]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_delete
<LI><a href="#[a0f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;media_buffer_get_status
<LI><a href="#[edc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_latency_mgr_check_handle
<LI><a href="#[ed5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_interval_get_stable_state
</UL>
<BR>[Called By]<UL><LI><a href="#[ede]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_latency_handle_plc_event
</UL>

<P><STRONG><a name="[ede]"></a>audio_latency_handle_plc_event</STRONG> (Thumb, 194 bytes, Stack size 40 bytes, audio_latency.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[9b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_start
<LI><a href="#[977]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_delete
<LI><a href="#[e4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;media_buffer_backup_downstream
<LI><a href="#[edd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_latency_adjust_check
<LI><a href="#[edc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_latency_mgr_check_handle
</UL>

<P><STRONG><a name="[a36]"></a>audio_latency_record_update</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, audio_latency.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = audio_latency_record_update &rArr; audio_latency_mgr_check_handle
</UL>
<BR>[Calls]<UL><LI><a href="#[edc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_latency_mgr_check_handle
</UL>
<BR>[Called By]<UL><LI><a href="#[a25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_mgr_dispatch
</UL>

<P><STRONG><a name="[a21]"></a>audio_latency_get_dynamic_latency_on</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, audio_latency.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = audio_latency_get_dynamic_latency_on &rArr; audio_latency_mgr_check_handle
</UL>
<BR>[Calls]<UL><LI><a href="#[edc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_latency_mgr_check_handle
</UL>
<BR>[Called By]<UL><LI><a href="#[a20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_mgr_exception
<LI><a href="#[a72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;media_buffer_latency_set2
</UL>

<P><STRONG><a name="[e52]"></a>audio_latency_set_dynamic_latency_on</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, audio_latency.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = audio_latency_set_dynamic_latency_on &rArr; audio_latency_mgr_check_handle
</UL>
<BR>[Calls]<UL><LI><a href="#[edc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_latency_mgr_check_handle
</UL>
<BR>[Called By]<UL><LI><a href="#[a5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;media_buffer_latency_set
<LI><a href="#[a7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;media_buffer_deactive_proxy
</UL>

<P><STRONG><a name="[edf]"></a>audio_latency_find_handle_by_id</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, audio_latency.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = audio_latency_find_handle_by_id
</UL>
<BR>[Called By]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_latency_timeout_cback
</UL>

<P><STRONG><a name="[bc]"></a>audio_latency_timeout_cback</STRONG> (Thumb, 116 bytes, Stack size 24 bytes, audio_latency.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = audio_latency_timeout_cback &rArr; sys_timer_delete &rArr; sys_hp_timer_list_remove &rArr; hw_timer_restart &rArr; hw_timer_safe_stop &rArr; hw_timer_set_div
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[9b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_id_get
<LI><a href="#[977]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_delete
<LI><a href="#[e60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_latency_lat_dynamic_decrease
<LI><a href="#[edf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_latency_find_handle_by_id
</UL>
<BR>[Address Reference Count : 1]<UL><LI> audio_latency.o(.text)
</UL>
<P><STRONG><a name="[e65]"></a>audio_latency_handle_inverval_unstable_evt</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, audio_latency.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = audio_latency_handle_inverval_unstable_evt &rArr; audio_latency_mgr_check_handle
</UL>
<BR>[Calls]<UL><LI><a href="#[edc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_latency_mgr_check_handle
</UL>
<BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;playback_buffer_interval_eval_evt_cback
</UL>

<P><STRONG><a name="[e66]"></a>audio_latency_handle_inverval_stable_evt</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, audio_latency.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = audio_latency_handle_inverval_stable_evt &rArr; audio_latency_mgr_check_handle
</UL>
<BR>[Calls]<UL><LI><a href="#[edc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_latency_mgr_check_handle
</UL>
<BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;playback_buffer_interval_eval_evt_cback
</UL>

<P><STRONG><a name="[e5f]"></a>audio_latency_ultra_low_latency_plc_req</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, audio_latency.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = audio_latency_ultra_low_latency_plc_req &rArr; audio_latency_mgr_check_handle
</UL>
<BR>[Calls]<UL><LI><a href="#[edc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_latency_mgr_check_handle
</UL>
<BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;playback_buffer_lat_evt_cback
</UL>

<P><STRONG><a name="[aa7]"></a>sys_cfg_load</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, sys_cfg.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = sys_cfg_load &rArr; wdt_reset
</UL>
<BR>[Calls]<UL><LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt_reset
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_flash_nor_read
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_cur_bank_img_payload_addr_get
</UL>
<BR>[Called By]<UL><LI><a href="#[aa6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_route_init
</UL>

<P><STRONG><a name="[eb7]"></a>dsp_ipc_set_latency_report</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, dsp_ipc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = dsp_ipc_set_latency_report &rArr; dsp_ipc_h2d_cmd_send &rArr; h2d_cmd_send &rArr; shm_cmd_send &rArr; wr_queue_send
</UL>
<BR>[Calls]<UL><LI><a href="#[ee0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_ipc_h2d_cmd_send
</UL>
<BR>[Called By]<UL><LI><a href="#[e5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_latency_rpt_set
</UL>

<P><STRONG><a name="[ece]"></a>dsp_ipc_set_low_latency_mode</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, dsp_ipc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = dsp_ipc_set_low_latency_mode &rArr; dsp_ipc_h2d_cmd_send &rArr; h2d_cmd_send &rArr; shm_cmd_send &rArr; wr_queue_send
</UL>
<BR>[Calls]<UL><LI><a href="#[ee0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_ipc_h2d_cmd_send
</UL>
<BR>[Called By]<UL><LI><a href="#[e5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_low_latency_set
</UL>

<P><STRONG><a name="[ee1]"></a>dsp_ipc_set_fifo_len</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, dsp_ipc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = dsp_ipc_set_fifo_len &rArr; dsp_ipc_h2d_cmd_send &rArr; h2d_cmd_send &rArr; shm_cmd_send &rArr; wr_queue_send
</UL>
<BR>[Calls]<UL><LI><a href="#[ee0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_ipc_h2d_cmd_send
</UL>
<BR>[Called By]<UL><LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_audio_cfg_setting
</UL>

<P><STRONG><a name="[ee2]"></a>dsp_ipc_set_decode_emtpy</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, dsp_ipc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = dsp_ipc_set_decode_emtpy &rArr; dsp_ipc_h2d_cmd_send &rArr; h2d_cmd_send &rArr; shm_cmd_send &rArr; wr_queue_send
</UL>
<BR>[Calls]<UL><LI><a href="#[ee0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_ipc_h2d_cmd_send
</UL>
<BR>[Called By]<UL><LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_audio_cfg_setting
</UL>

<P><STRONG><a name="[ee3]"></a>dsp_ipc_set_boot_config</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, dsp_ipc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = dsp_ipc_set_boot_config &rArr; dsp_ipc_h2d_cmd_send &rArr; h2d_cmd_send &rArr; shm_cmd_send &rArr; wr_queue_send
</UL>
<BR>[Calls]<UL><LI><a href="#[ee0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_ipc_h2d_cmd_send
</UL>
<BR>[Called By]<UL><LI><a href="#[f1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_state_machine
</UL>

<P><STRONG><a name="[ebc]"></a>dsp_ipc_set_tone_gain</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, dsp_ipc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = dsp_ipc_set_tone_gain &rArr; dsp_ipc_h2d_cmd_send &rArr; h2d_cmd_send &rArr; shm_cmd_send &rArr; wr_queue_send
</UL>
<BR>[Calls]<UL><LI><a href="#[ee0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_ipc_h2d_cmd_send
</UL>
<BR>[Called By]<UL><LI><a href="#[ea5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_dac_gain_set
</UL>

<P><STRONG><a name="[ebb]"></a>dsp_ipc_set_dac_gain</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, dsp_ipc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = dsp_ipc_set_dac_gain &rArr; dsp_ipc_h2d_cmd_send &rArr; h2d_cmd_send &rArr; shm_cmd_send &rArr; wr_queue_send
</UL>
<BR>[Calls]<UL><LI><a href="#[ee0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_ipc_h2d_cmd_send
</UL>
<BR>[Called By]<UL><LI><a href="#[ea5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_dac_gain_set
</UL>

<P><STRONG><a name="[ea6]"></a>dsp_ipc_set_volume_level</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, dsp_ipc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = dsp_ipc_set_volume_level &rArr; dsp_ipc_h2d_cmd_send &rArr; h2d_cmd_send &rArr; shm_cmd_send &rArr; wr_queue_send
</UL>
<BR>[Calls]<UL><LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
<LI><a href="#[ee0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_ipc_h2d_cmd_send
</UL>
<BR>[Called By]<UL><LI><a href="#[a51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_dac_level_set
</UL>

<P><STRONG><a name="[ebe]"></a>dsp_ipc_set_voice_adc_gain</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, dsp_ipc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = dsp_ipc_set_voice_adc_gain &rArr; dsp_ipc_h2d_cmd_send &rArr; h2d_cmd_send &rArr; shm_cmd_send &rArr; wr_queue_send
</UL>
<BR>[Calls]<UL><LI><a href="#[ee0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_ipc_h2d_cmd_send
</UL>
<BR>[Called By]<UL><LI><a href="#[eab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_adc_gain_set
</UL>

<P><STRONG><a name="[ebf]"></a>dsp_ipc_set_record_adc_gain</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, dsp_ipc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = dsp_ipc_set_record_adc_gain &rArr; dsp_ipc_h2d_cmd_send &rArr; h2d_cmd_send &rArr; shm_cmd_send &rArr; wr_queue_send
</UL>
<BR>[Calls]<UL><LI><a href="#[ee0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_ipc_h2d_cmd_send
</UL>
<BR>[Called By]<UL><LI><a href="#[eab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_adc_gain_set
</UL>

<P><STRONG><a name="[ebd]"></a>dsp_ipc_set_aux_adc_gain</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, dsp_ipc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[eab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_adc_gain_set
</UL>

<P><STRONG><a name="[ee4]"></a>dsp_ipc_set_power_down</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, dsp_ipc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = dsp_ipc_set_power_down &rArr; dsp_ipc_h2d_cmd_send &rArr; h2d_cmd_send &rArr; shm_cmd_send &rArr; wr_queue_send
</UL>
<BR>[Calls]<UL><LI><a href="#[ee0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_ipc_h2d_cmd_send
</UL>
<BR>[Called By]<UL><LI><a href="#[f1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_state_machine
</UL>

<P><STRONG><a name="[ee5]"></a>dsp_ipc_set_dsp_config</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, dsp_ipc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = dsp_ipc_set_dsp_config &rArr; dsp_ipc_h2d_cmd_send &rArr; h2d_cmd_send &rArr; shm_cmd_send &rArr; wr_queue_send
</UL>
<BR>[Calls]<UL><LI><a href="#[ee0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_ipc_h2d_cmd_send
</UL>
<BR>[Called By]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_ipc_event_handler
<LI><a href="#[e8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_cfg_comm_setting
</UL>

<P><STRONG><a name="[ee6]"></a>dsp_ipc_set_decoder</STRONG> (Thumb, 136 bytes, Stack size 72 bytes, dsp_ipc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = dsp_ipc_set_decoder &rArr; dsp_ipc_h2d_cmd_send &rArr; h2d_cmd_send &rArr; shm_cmd_send &rArr; wr_queue_send
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[ee0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_ipc_h2d_cmd_send
</UL>
<BR>[Called By]<UL><LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_voice_cfg_setting
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_audio_cfg_setting
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_notification_cfg_setting
</UL>

<P><STRONG><a name="[ee7]"></a>dsp_ipc_set_encoder</STRONG> (Thumb, 248 bytes, Stack size 80 bytes, dsp_ipc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = dsp_ipc_set_encoder &rArr; dsp_ipc_h2d_cmd_send &rArr; h2d_cmd_send &rArr; shm_cmd_send &rArr; wr_queue_send
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[ee0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_ipc_h2d_cmd_send
</UL>
<BR>[Called By]<UL><LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_record_cfg_setting
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_voice_cfg_setting
</UL>

<P><STRONG><a name="[ee8]"></a>dsp_ipc_set_lc3_decoder</STRONG> (Thumb, 96 bytes, Stack size 80 bytes, dsp_ipc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = dsp_ipc_set_lc3_decoder &rArr; dsp_ipc_h2d_cmd_send &rArr; h2d_cmd_send &rArr; shm_cmd_send &rArr; wr_queue_send
</UL>
<BR>[Calls]<UL><LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4 (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[ee0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_ipc_h2d_cmd_send
</UL>
<BR>[Called By]<UL><LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_voice_cfg_setting
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_audio_cfg_setting
</UL>

<P><STRONG><a name="[ee9]"></a>dsp_ipc_set_lc3_encoder</STRONG> (Thumb, 88 bytes, Stack size 80 bytes, dsp_ipc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = dsp_ipc_set_lc3_encoder &rArr; dsp_ipc_h2d_cmd_send &rArr; h2d_cmd_send &rArr; shm_cmd_send &rArr; wr_queue_send
</UL>
<BR>[Calls]<UL><LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4 (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[ee0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_ipc_h2d_cmd_send
</UL>
<BR>[Called By]<UL><LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_record_cfg_setting
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_voice_cfg_setting
</UL>

<P><STRONG><a name="[a8a]"></a>dsp_ipc_audio_eq_set</STRONG> (Thumb, 108 bytes, Stack size 32 bytes, dsp_ipc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = dsp_ipc_audio_eq_set &rArr; dsp_ipc_h2d_cmd_send &rArr; h2d_cmd_send &rArr; shm_cmd_send &rArr; wr_queue_send
</UL>
<BR>[Calls]<UL><LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[ee0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_ipc_h2d_cmd_send
</UL>
<BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eq_effect_enable
</UL>

<P><STRONG><a name="[a8b]"></a>dsp_ipc_voice_eq_set</STRONG> (Thumb, 108 bytes, Stack size 32 bytes, dsp_ipc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = dsp_ipc_voice_eq_set &rArr; dsp_ipc_h2d_cmd_send &rArr; h2d_cmd_send &rArr; shm_cmd_send &rArr; wr_queue_send
</UL>
<BR>[Calls]<UL><LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[ee0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_ipc_h2d_cmd_send
</UL>
<BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eq_effect_enable
</UL>

<P><STRONG><a name="[a8c]"></a>dsp_ipc_record_eq_set</STRONG> (Thumb, 108 bytes, Stack size 32 bytes, dsp_ipc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = dsp_ipc_record_eq_set &rArr; dsp_ipc_h2d_cmd_send &rArr; h2d_cmd_send &rArr; shm_cmd_send &rArr; wr_queue_send
</UL>
<BR>[Calls]<UL><LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[ee0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_ipc_h2d_cmd_send
</UL>
<BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eq_effect_enable
</UL>

<P><STRONG><a name="[a8d]"></a>dsp_ipc_apt_eq_set</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, dsp_ipc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eq_effect_enable
</UL>

<P><STRONG><a name="[a94]"></a>dsp_ipc_voice_nrec_set</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, dsp_ipc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = dsp_ipc_voice_nrec_set &rArr; dsp_ipc_h2d_cmd_send &rArr; h2d_cmd_send &rArr; shm_cmd_send &rArr; wr_queue_send
</UL>
<BR>[Calls]<UL><LI><a href="#[ee0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_ipc_h2d_cmd_send
</UL>
<BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrec_effect_disable
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrec_effect_enable
</UL>

<P><STRONG><a name="[a95]"></a>dsp_ipc_apt_nrec_set</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, dsp_ipc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrec_effect_disable
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrec_effect_enable
</UL>

<P><STRONG><a name="[eea]"></a>dsp_ipc_set_stream_channel_out_config</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, dsp_ipc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = dsp_ipc_set_stream_channel_out_config &rArr; dsp_ipc_h2d_cmd_send &rArr; h2d_cmd_send &rArr; shm_cmd_send &rArr; wr_queue_send
</UL>
<BR>[Calls]<UL><LI><a href="#[ee0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_ipc_h2d_cmd_send
</UL>
<BR>[Called By]<UL><LI><a href="#[a2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_sport0_da_chann_set
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_record_cfg_setting
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_voice_cfg_setting
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_audio_cfg_setting
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_notification_cfg_setting
</UL>

<P><STRONG><a name="[eeb]"></a>dsp_ipc_set_stream_channel_in_config</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, dsp_ipc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = dsp_ipc_set_stream_channel_in_config &rArr; dsp_ipc_h2d_cmd_send &rArr; h2d_cmd_send &rArr; shm_cmd_send &rArr; wr_queue_send
</UL>
<BR>[Calls]<UL><LI><a href="#[ee0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_ipc_h2d_cmd_send
</UL>
<BR>[Called By]<UL><LI><a href="#[a33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_sport0_ad_chann_set
</UL>

<P><STRONG><a name="[eec]"></a>dsp_ipc_get_algo_status</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, dsp_ipc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = dsp_ipc_get_algo_status &rArr; dsp_ipc_h2d_cmd_send &rArr; h2d_cmd_send &rArr; shm_cmd_send &rArr; wr_queue_send
</UL>
<BR>[Calls]<UL><LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
<LI><a href="#[ee0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_ipc_h2d_cmd_send
</UL>
<BR>[Called By]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_mgr_sport_start
</UL>

<P><STRONG><a name="[eee]"></a>dsp_ipc_set_audio_sport0_action</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, dsp_ipc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = dsp_ipc_set_audio_sport0_action &rArr; dsp_ipc_set_audio_sport_action &rArr; dsp_ipc_h2d_cmd_send &rArr; h2d_cmd_send &rArr; shm_cmd_send &rArr; wr_queue_send
</UL>
<BR>[Calls]<UL><LI><a href="#[eed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_ipc_set_audio_sport_action
</UL>
<BR>[Called By]<UL><LI><a href="#[f06]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dipc_gate_stop
<LI><a href="#[f04]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dipc_gate_start
</UL>

<P><STRONG><a name="[eef]"></a>dsp_ipc_set_audio_sport1_action</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, dsp_ipc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = dsp_ipc_set_audio_sport1_action &rArr; dsp_ipc_set_audio_sport_action &rArr; dsp_ipc_h2d_cmd_send &rArr; h2d_cmd_send &rArr; shm_cmd_send &rArr; wr_queue_send
</UL>
<BR>[Calls]<UL><LI><a href="#[eed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_ipc_set_audio_sport_action
</UL>
<BR>[Called By]<UL><LI><a href="#[f06]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dipc_gate_stop
<LI><a href="#[f04]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dipc_gate_start
</UL>

<P><STRONG><a name="[ef0]"></a>dsp_ipc_set_fade_in_out_control</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, dsp_ipc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = dsp_ipc_set_fade_in_out_control &rArr; dsp_ipc_h2d_cmd_send &rArr; h2d_cmd_send &rArr; shm_cmd_send &rArr; wr_queue_send
</UL>
<BR>[Calls]<UL><LI><a href="#[ee0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_ipc_h2d_cmd_send
</UL>
<BR>[Called By]<UL><LI><a href="#[eba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_mgr_fade_out_start
</UL>

<P><STRONG><a name="[d1]"></a>dsp_ipc_set_action_control</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, dsp_ipc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = dsp_ipc_set_action_control &rArr; dsp_ipc_h2d_cmd_send &rArr; h2d_cmd_send &rArr; shm_cmd_send &rArr; wr_queue_send
</UL>
<BR>[Calls]<UL><LI><a href="#[ee0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_ipc_h2d_cmd_send
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dsp_mgr.o(.text)
</UL>
<P><STRONG><a name="[ef1]"></a>dsp_ipc_set_sbc_encoder_hdr_config</STRONG> (Thumb, 100 bytes, Stack size 32 bytes, dsp_ipc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = dsp_ipc_set_sbc_encoder_hdr_config &rArr; dsp_ipc_h2d_cmd_send &rArr; h2d_cmd_send &rArr; shm_cmd_send &rArr; wr_queue_send
</UL>
<BR>[Calls]<UL><LI><a href="#[ee0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_ipc_h2d_cmd_send
</UL>
<BR>[Called By]<UL><LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_record_cfg_setting
</UL>

<P><STRONG><a name="[ef2]"></a>dsp_ipc_set_rws_init</STRONG> (Thumb, 76 bytes, Stack size 32 bytes, dsp_ipc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = dsp_ipc_set_rws_init &rArr; dsp_ipc_h2d_cmd_send &rArr; h2d_cmd_send &rArr; shm_cmd_send &rArr; wr_queue_send
</UL>
<BR>[Calls]<UL><LI><a href="#[ee0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_ipc_h2d_cmd_send
</UL>
<BR>[Called By]<UL><LI><a href="#[f21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_remote_init
</UL>

<P><STRONG><a name="[ef3]"></a>dsp_ipc_set_rws</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, dsp_ipc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = dsp_ipc_set_rws &rArr; dsp_ipc_h2d_cmd_send &rArr; h2d_cmd_send &rArr; shm_cmd_send &rArr; wr_queue_send
</UL>
<BR>[Calls]<UL><LI><a href="#[ee0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_ipc_h2d_cmd_send
</UL>
<BR>[Called By]<UL><LI><a href="#[f21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_remote_init
</UL>

<P><STRONG><a name="[ef4]"></a>dsp_ipc_set_tx_path_ramp_gain_control</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, dsp_ipc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = dsp_ipc_set_tx_path_ramp_gain_control &rArr; dsp_ipc_h2d_cmd_send &rArr; h2d_cmd_send &rArr; shm_cmd_send &rArr; wr_queue_send
</UL>
<BR>[Calls]<UL><LI><a href="#[ee0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_ipc_h2d_cmd_send
</UL>
<BR>[Called By]<UL><LI><a href="#[e7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_mgr_suppress_tx_gain
</UL>

<P><STRONG><a name="[ef5]"></a>dsp_ipc_set_log_output_sel</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, dsp_ipc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = dsp_ipc_set_log_output_sel &rArr; dsp_ipc_h2d_cmd_send &rArr; h2d_cmd_send &rArr; shm_cmd_send &rArr; wr_queue_send
</UL>
<BR>[Calls]<UL><LI><a href="#[ee0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_ipc_h2d_cmd_send
</UL>
<BR>[Called By]<UL><LI><a href="#[f22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_mailbox_process
<LI><a href="#[f1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_power_on
</UL>

<P><STRONG><a name="[d0]"></a>dsp_ipc_voice_prompt_end</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, dsp_ipc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = dsp_ipc_voice_prompt_end &rArr; dsp_ipc_h2d_cmd_send &rArr; h2d_cmd_send &rArr; shm_cmd_send &rArr; wr_queue_send
</UL>
<BR>[Calls]<UL><LI><a href="#[ee0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_ipc_h2d_cmd_send
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dsp_mgr.o(.text)
</UL>
<P><STRONG><a name="[ef6]"></a>dsp_ipc_set_signal_proc_start</STRONG> (Thumb, 70 bytes, Stack size 24 bytes, dsp_ipc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = dsp_ipc_set_signal_proc_start &rArr; dsp_ipc_h2d_cmd_send &rArr; h2d_cmd_send &rArr; shm_cmd_send &rArr; wr_queue_send
</UL>
<BR>[Calls]<UL><LI><a href="#[ee0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_ipc_h2d_cmd_send
</UL>
<BR>[Called By]<UL><LI><a href="#[eb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_mgr_signal_proc_start
</UL>

<P><STRONG><a name="[e9d]"></a>dsp_ipc_set_force_dummy_pkt</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, dsp_ipc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = dsp_ipc_set_force_dummy_pkt &rArr; dsp_ipc_h2d_cmd_send &rArr; h2d_cmd_send &rArr; shm_cmd_send &rArr; wr_queue_send
</UL>
<BR>[Calls]<UL><LI><a href="#[ee0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_ipc_h2d_cmd_send
</UL>
<BR>[Called By]<UL><LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_audio_stop
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_dsp_mgr_session_cb
</UL>

<P><STRONG><a name="[ef7]"></a>dsp_ipc_sport_set</STRONG> (Thumb, 88 bytes, Stack size 48 bytes, dsp_ipc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = dsp_ipc_sport_set &rArr; dsp_ipc_h2d_cmd_send &rArr; h2d_cmd_send &rArr; shm_cmd_send &rArr; wr_queue_send
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[ee0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_ipc_h2d_cmd_send
</UL>
<BR>[Called By]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_mgr_sport_set
</UL>

<P><STRONG><a name="[efb]"></a>dsp_ipc_composite_data_send</STRONG> (Thumb, 84 bytes, Stack size 24 bytes, dsp_ipc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = dsp_ipc_composite_data_send &rArr; dsp_ipc_h2d_cmd_send &rArr; h2d_cmd_send &rArr; shm_cmd_send &rArr; wr_queue_send
</UL>
<BR>[Calls]<UL><LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[ee0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_ipc_h2d_cmd_send
</UL>
<BR>[Called By]<UL><LI><a href="#[eb2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_mgr_composite_start
</UL>

<P><STRONG><a name="[efc]"></a>dsp_ipc_voice_prompt_start</STRONG> (Thumb, 82 bytes, Stack size 24 bytes, dsp_ipc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = dsp_ipc_voice_prompt_start &rArr; dsp_ipc_h2d_cmd_send &rArr; h2d_cmd_send &rArr; shm_cmd_send &rArr; wr_queue_send
</UL>
<BR>[Calls]<UL><LI><a href="#[ee0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_ipc_h2d_cmd_send
</UL>
<BR>[Called By]<UL><LI><a href="#[eb3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_mgr_voice_prompt_start
</UL>

<P><STRONG><a name="[efd]"></a>dsp_ipc_init</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, dsp_ipc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = dsp_ipc_init &rArr; dsp_hal_register_cback &rArr; sys_ipc_subscribe
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[efe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_hal_register_cback
</UL>
<BR>[Called By]<UL><LI><a href="#[e8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_mgr_init
</UL>

<P><STRONG><a name="[eff]"></a>dsp_ipc_voice_prompt_send</STRONG> (Thumb, 98 bytes, Stack size 24 bytes, dsp_ipc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = dsp_ipc_voice_prompt_send &rArr; h2d_cmd_send &rArr; shm_cmd_send &rArr; wr_queue_send
</UL>
<BR>[Calls]<UL><LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[a4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;h2d_cmd_send
</UL>
<BR>[Called By]<UL><LI><a href="#[eb4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_mgr_voice_prompt_send
</UL>

<P><STRONG><a name="[a49]"></a>dsp_ipc_cback_register</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, dsp_ipc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = dsp_ipc_cback_register
</UL>
<BR>[Called By]<UL><LI><a href="#[643]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_probe_dsp_cback_register
<LI><a href="#[a3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_init
<LI><a href="#[e8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_mgr_init
</UL>

<P><STRONG><a name="[c5]"></a>dsp_ipc_decoder_action</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dsp_ipc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = dsp_ipc_decoder_action &rArr; dsp_ipc_action_send &rArr; h2d_cmd_send &rArr; shm_cmd_send &rArr; wr_queue_send
</UL>
<BR>[Calls]<UL><LI><a href="#[f00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_ipc_action_send
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dsp_mgr.o(.text)
</UL>
<P><STRONG><a name="[c7]"></a>dsp_ipc_encoder_action</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dsp_ipc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = dsp_ipc_encoder_action &rArr; dsp_ipc_action_send &rArr; h2d_cmd_send &rArr; shm_cmd_send &rArr; wr_queue_send
</UL>
<BR>[Calls]<UL><LI><a href="#[f00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_ipc_action_send
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dsp_mgr.o(.text)
</UL>
<P><STRONG><a name="[f01]"></a>dsp_ipc_init_dsp_sdk</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, dsp_ipc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = dsp_ipc_init_dsp_sdk &rArr; dsp_ipc_h2d_cmd_send &rArr; h2d_cmd_send &rArr; shm_cmd_send &rArr; wr_queue_send
</UL>
<BR>[Calls]<UL><LI><a href="#[ee0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_ipc_h2d_cmd_send
</UL>
<BR>[Called By]<UL><LI><a href="#[e8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_cfg_comm_setting
</UL>

<P><STRONG><a name="[eb8]"></a>dsp_ipc_sidetone_set</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, dsp_ipc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = dsp_ipc_sidetone_set &rArr; h2d_cmd_send &rArr; shm_cmd_send &rArr; wr_queue_send
</UL>
<BR>[Calls]<UL><LI><a href="#[a4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;h2d_cmd_send
</UL>
<BR>[Called By]<UL><LI><a href="#[a97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_sw_sidetone_enable
<LI><a href="#[a99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_sw_sidetone_disable
</UL>

<P><STRONG><a name="[f04]"></a>dipc_gate_start</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, dsp_ipc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = dipc_gate_start &rArr; dipc_gate_start_core &rArr; dipc2_cmd_send &rArr; h2d_cmd_send &rArr; shm_cmd_send &rArr; wr_queue_send
</UL>
<BR>[Calls]<UL><LI><a href="#[eef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_ipc_set_audio_sport1_action
<LI><a href="#[eee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_ipc_set_audio_sport0_action
<LI><a href="#[f03]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dipc_gate_start_core
</UL>
<BR>[Called By]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_mgr_sport_start
</UL>

<P><STRONG><a name="[f06]"></a>dipc_gate_stop</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, dsp_ipc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = dipc_gate_stop &rArr; dipc_gate_stop_core &rArr; dipc2_cmd_send &rArr; h2d_cmd_send &rArr; shm_cmd_send &rArr; wr_queue_send
</UL>
<BR>[Calls]<UL><LI><a href="#[eef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_ipc_set_audio_sport1_action
<LI><a href="#[eee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_ipc_set_audio_sport0_action
<LI><a href="#[f05]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dipc_gate_stop_core
</UL>
<BR>[Called By]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_mgr_sport_stop
</UL>

<P><STRONG><a name="[f07]"></a>dsp_ipc_download_algo_param</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dsp_ipc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = dsp_ipc_download_algo_param &rArr; h2d_cmd_send &rArr; shm_cmd_send &rArr; wr_queue_send
</UL>
<BR>[Calls]<UL><LI><a href="#[a4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;h2d_cmd_send
</UL>
<BR>[Called By]<UL><LI><a href="#[f17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_download_algo_param
</UL>

<P><STRONG><a name="[ed4]"></a>dsp_ipc_set_rws_asrc_ratio</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, dsp_ipc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = dsp_ipc_set_rws_asrc_ratio &rArr; dsp_ipc_h2d_cmd_send &rArr; h2d_cmd_send &rArr; shm_cmd_send &rArr; wr_queue_send
</UL>
<BR>[Calls]<UL><LI><a href="#[ee0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_ipc_h2d_cmd_send
</UL>
<BR>[Called By]<UL><LI><a href="#[e62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jitter_buffer_asrc_ratio_adjust
</UL>

<P><STRONG><a name="[f08]"></a>dsp_load_init</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, dsp_loader.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = dsp_load_init
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[f09]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_hal_is_fpga_mode
</UL>
<BR>[Called By]<UL><LI><a href="#[e8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_mgr_init
</UL>

<P><STRONG><a name="[f0b]"></a>dsp_load_get_scenario</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, dsp_loader.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[f11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_load_finish
<LI><a href="#[f0f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_load_next_bin
<LI><a href="#[f0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_loader_bin_match
<LI><a href="#[f0a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_loader_matched_scenario_get
</UL>

<P><STRONG><a name="[f0a]"></a>dsp_loader_matched_scenario_get</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, dsp_loader.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = dsp_loader_matched_scenario_get
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[f0b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_load_get_scenario
</UL>
<BR>[Called By]<UL><LI><a href="#[f0d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_load_algorithm_code
<LI><a href="#[f0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_loader_bin_match
</UL>

<P><STRONG><a name="[f0c]"></a>dsp_loader_bin_match</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, dsp_loader.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = dsp_loader_bin_match &rArr; dsp_loader_matched_scenario_get
</UL>
<BR>[Calls]<UL><LI><a href="#[f0a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_loader_matched_scenario_get
<LI><a href="#[f0b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_load_get_scenario
</UL>
<BR>[Called By]<UL><LI><a href="#[e80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_mgr_is_stable
</UL>

<P><STRONG><a name="[f0d]"></a>dsp_load_algorithm_code</STRONG> (Thumb, 86 bytes, Stack size 32 bytes, dsp_loader.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = dsp_load_algorithm_code &rArr; dsp_send_msg
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[f0e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bin_loader_token_issue
<LI><a href="#[f0a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_loader_matched_scenario_get
<LI><a href="#[efa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_send_msg (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[f1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_state_machine
</UL>

<P><STRONG><a name="[f0f]"></a>dsp_load_next_bin</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, dsp_loader.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = dsp_load_next_bin &rArr; bin_loader_driver_check_image_correct &rArr; bin_loader_driver_load_next_bin
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[f10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bin_loader_driver_check_image_correct
<LI><a href="#[f0b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_load_get_scenario
</UL>
<BR>[Called By]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_mgr_hal_cback
</UL>

<P><STRONG><a name="[f11]"></a>dsp_load_finish</STRONG> (Thumb, 92 bytes, Stack size 8 bytes, dsp_loader.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = dsp_load_finish &rArr; bin_loader_token_issue &rArr; bin_loader_session_check
</UL>
<BR>[Calls]<UL><LI><a href="#[cfb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_ipc_publish
<LI><a href="#[f0e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bin_loader_token_issue
<LI><a href="#[f0b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_load_get_scenario
</UL>
<BR>[Called By]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_mgr_hal_cback
</UL>

<P><STRONG><a name="[f28]"></a>dsp_load_in_initial</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, dsp_loader.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[e80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_mgr_is_stable
</UL>

<P><STRONG><a name="[f12]"></a>dsp_load_initial</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, dsp_loader.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = dsp_load_initial &rArr; bin_loader_token_issue &rArr; bin_loader_session_check
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[f0e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bin_loader_token_issue
<LI><a href="#[f13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bin_loader_session_create
</UL>
<BR>[Called By]<UL><LI><a href="#[f1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_mgr_start
</UL>

<P><STRONG><a name="[f27]"></a>dsp_load_need_initial</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, dsp_loader.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[e80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_mgr_is_stable
</UL>

<P><STRONG><a name="[bf]"></a>dsp_fw_cb_check_finish</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, dsp_loader.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = dsp_fw_cb_check_finish &rArr; dsp_send_msg
</UL>
<BR>[Calls]<UL><LI><a href="#[efa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_send_msg (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dsp_loader.o(.text)
</UL>
<P><STRONG><a name="[be]"></a>dsp_fw_cb_finish</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, dsp_loader.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = dsp_fw_cb_finish &rArr; dsp_send_msg
</UL>
<BR>[Calls]<UL><LI><a href="#[efa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_send_msg (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dsp_loader.o(.text)
</UL>
<P><STRONG><a name="[f14]"></a>dsp_algo_param_load</STRONG> (Thumb, 150 bytes, Stack size 24 bytes, dsp_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = dsp_algo_param_load &rArr; fmc_flash_nor_read
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_flash_nor_read
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_cur_bank_img_payload_addr_get
</UL>
<BR>[Called By]<UL><LI><a href="#[f26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_param_init
</UL>

<P><STRONG><a name="[d4]"></a>dsp_mgr_sport_start_post_cback</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, dsp_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = dsp_mgr_sport_start_post_cback &rArr; dsp_send_msg
</UL>
<BR>[Calls]<UL><LI><a href="#[efa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_send_msg (via Veneer)
<LI><a href="#[e88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_event_flag_wait
<LI><a href="#[e6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_event_flag_post
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dsp_mgr.o(.text)
</UL>
<P><STRONG><a name="[d5]"></a>dsp_mgr_sport_start</STRONG> (Thumb, 396 bytes, Stack size 56 bytes, dsp_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = dsp_mgr_sport_start &rArr; dipc_gate_start &rArr; dipc_gate_start_core &rArr; dipc2_cmd_send &rArr; h2d_cmd_send &rArr; shm_cmd_send &rArr; wr_queue_send
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[cfb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_ipc_publish
<LI><a href="#[f19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_mgr_sub_state_set
<LI><a href="#[f18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_mgr_sub_state_get
<LI><a href="#[f17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_download_algo_param
<LI><a href="#[f04]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dipc_gate_start
<LI><a href="#[eec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_ipc_get_algo_status
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dsp_mgr.o(.text)
</UL>
<P><STRONG><a name="[f1a]"></a>dsp_power_on</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, dsp_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = dsp_power_on &rArr; dsp_hal_reset &rArr; shm_enable &rArr; h2d_cmd_send &rArr; shm_cmd_send &rArr; wr_queue_send
</UL>
<BR>[Calls]<UL><LI><a href="#[ef5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_ipc_set_log_output_sel
<LI><a href="#[f1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_hal_reset
</UL>
<BR>[Called By]<UL><LI><a href="#[f1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_state_machine
</UL>

<P><STRONG><a name="[f1c]"></a>dsp_state_machine</STRONG> (Thumb, 272 bytes, Stack size 40 bytes, dsp_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = dsp_state_machine &rArr; dsp_power_on &rArr; dsp_hal_reset &rArr; shm_enable &rArr; h2d_cmd_send &rArr; shm_cmd_send &rArr; wr_queue_send
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[cfb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_ipc_publish
<LI><a href="#[f0d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_load_algorithm_code
<LI><a href="#[ee4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_ipc_set_power_down
<LI><a href="#[ee3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_ipc_set_boot_config
<LI><a href="#[e88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_event_flag_wait
<LI><a href="#[e6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_event_flag_post
<LI><a href="#[f1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_hal_shut_down
<LI><a href="#[f1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_power_on
</UL>
<BR>[Called By]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_mgr_hal_cback
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_ipc_event_handler
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_mgr_wait_fw_stop_handler
<LI><a href="#[e69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_mgr_session_enable
<LI><a href="#[e84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_mgr_power_on
<LI><a href="#[e70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_mgr_power_off
<LI><a href="#[e8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_mgr_load_finish
</UL>

<P><STRONG><a name="[ce]"></a>dsp_mgr_gate_stop_post_cback</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, dsp_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = dsp_mgr_gate_stop_post_cback &rArr; dsp_send_msg
</UL>
<BR>[Calls]<UL><LI><a href="#[efa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_send_msg (via Veneer)
<LI><a href="#[e88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_event_flag_wait
<LI><a href="#[e6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_event_flag_post
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dsp_mgr.o(.text)
</UL>
<P><STRONG><a name="[cf]"></a>dsp_mgr_sport_stop</STRONG> (Thumb, 312 bytes, Stack size 80 bytes, dsp_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = dsp_mgr_sport_stop &rArr; dipc_gate_stop &rArr; dipc_gate_stop_core &rArr; dipc2_cmd_send &rArr; h2d_cmd_send &rArr; shm_cmd_send &rArr; wr_queue_send
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[f19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_mgr_sub_state_set
<LI><a href="#[f18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_mgr_sub_state_get
<LI><a href="#[f06]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dipc_gate_stop
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dsp_mgr.o(.text)
</UL>
<P><STRONG><a name="[eba]"></a>dsp_mgr_fade_out_start</STRONG> (Thumb, 108 bytes, Stack size 32 bytes, dsp_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = dsp_mgr_fade_out_start &rArr; dsp_ipc_set_fade_in_out_control &rArr; dsp_ipc_h2d_cmd_send &rArr; h2d_cmd_send &rArr; shm_cmd_send &rArr; wr_queue_send
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[f18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_mgr_sub_state_get
<LI><a href="#[efa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_send_msg (via Veneer)
<LI><a href="#[ef0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_ipc_set_fade_in_out_control
<LI><a href="#[e88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_event_flag_wait
<LI><a href="#[e6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_event_flag_post
<LI><a href="#[e81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_event_flag_check
</UL>
<BR>[Called By]<UL><LI><a href="#[e79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_start_fade_out
</UL>

<P><STRONG><a name="[f1f]"></a>dsp_mgr_start</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, dsp_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = dsp_mgr_start &rArr; dsp_hal_boot &rArr; dsp_hal_codec_open &rArr; audio_hal_action &rArr; audio_hal_dsp_action
</UL>
<BR>[Calls]<UL><LI><a href="#[f12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_load_initial
<LI><a href="#[f20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_hal_boot
</UL>
<BR>[Called By]<UL><LI><a href="#[e80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_mgr_is_stable
</UL>

<P><STRONG><a name="[a2d]"></a>dsp_sport0_da_chann_set</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, dsp_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = dsp_sport0_da_chann_set &rArr; dsp_ipc_set_stream_channel_out_config &rArr; dsp_ipc_h2d_cmd_send &rArr; h2d_cmd_send &rArr; shm_cmd_send &rArr; wr_queue_send
</UL>
<BR>[Calls]<UL><LI><a href="#[eea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_ipc_set_stream_channel_out_config
</UL>
<BR>[Called By]<UL><LI><a href="#[a25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_mgr_dispatch
</UL>

<P><STRONG><a name="[a33]"></a>dsp_sport0_ad_chann_set</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, dsp_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = dsp_sport0_ad_chann_set &rArr; dsp_ipc_set_stream_channel_in_config &rArr; dsp_ipc_h2d_cmd_send &rArr; h2d_cmd_send &rArr; shm_cmd_send &rArr; wr_queue_send
</UL>
<BR>[Calls]<UL><LI><a href="#[eeb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_ipc_set_stream_channel_in_config
</UL>
<BR>[Called By]<UL><LI><a href="#[a25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_mgr_dispatch
</UL>

<P><STRONG><a name="[e7d]"></a>dsp_mgr_suppress_tx_gain</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dsp_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = dsp_mgr_suppress_tx_gain &rArr; dsp_ipc_set_tx_path_ramp_gain_control &rArr; dsp_ipc_h2d_cmd_send &rArr; h2d_cmd_send &rArr; shm_cmd_send &rArr; wr_queue_send
</UL>
<BR>[Calls]<UL><LI><a href="#[ef4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_ipc_set_tx_path_ramp_gain_control
</UL>
<BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notification_wait_running_handler
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notification_dsp_mgr_session_cb
</UL>

<P><STRONG><a name="[f21]"></a>dsp_remote_init</STRONG> (Thumb, 96 bytes, Stack size 32 bytes, dsp_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = dsp_remote_init &rArr; dsp_ipc_set_rws_init &rArr; dsp_ipc_h2d_cmd_send &rArr; h2d_cmd_send &rArr; shm_cmd_send &rArr; wr_queue_send
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[982]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_piconet_id_get
<LI><a href="#[ef3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_ipc_set_rws
<LI><a href="#[ef2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_ipc_set_rws_init
<LI><a href="#[e6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_mgr_tx_sample_rate_get
</UL>
<BR>[Called By]<UL><LI><a href="#[eb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_mgr_signal_proc_start
</UL>

<P><STRONG><a name="[f22]"></a>dsp_mailbox_process</STRONG> (Thumb, 112 bytes, Stack size 16 bytes, dsp_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = dsp_mailbox_process &rArr; dsp_hal_reset &rArr; shm_enable &rArr; h2d_cmd_send &rArr; shm_cmd_send &rArr; wr_queue_send
</UL>
<BR>[Calls]<UL><LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt_reset
<LI><a href="#[cfb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_ipc_publish
<LI><a href="#[ef5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_ipc_set_log_output_sel
<LI><a href="#[f1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_hal_reset
</UL>
<BR>[Called By]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_mgr_hal_cback
</UL>

<P><STRONG><a name="[e8a]"></a>dsp_cfg_comm_setting</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, dsp_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = dsp_cfg_comm_setting &rArr; dsp_ipc_init_dsp_sdk &rArr; dsp_ipc_h2d_cmd_send &rArr; h2d_cmd_send &rArr; shm_cmd_send &rArr; wr_queue_send
</UL>
<BR>[Calls]<UL><LI><a href="#[f01]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_ipc_init_dsp_sdk
<LI><a href="#[ee5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_ipc_set_dsp_config
</UL>
<BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_dsp_cback
</UL>

<P><STRONG><a name="[eaf]"></a>dsp_mgr_get_state</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, dsp_mgr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[a3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_power_off
</UL>

<P><STRONG><a name="[a4f]"></a>dsp_mgr_register_cback</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, dsp_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = dsp_mgr_register_cback &rArr; sys_ipc_subscribe
</UL>
<BR>[Calls]<UL><LI><a href="#[a41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_ipc_subscribe
</UL>
<BR>[Called By]<UL><LI><a href="#[955]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_probe_dsp_evt_cback_register
<LI><a href="#[a3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_init
</UL>

<P><STRONG><a name="[e7c]"></a>dsp_mgr_decoder_action</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, dsp_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = dsp_mgr_decoder_action &rArr; dsp_mgr_send_action &rArr; audio_route_physical_path_take &rArr; audio_route_physical_path_get &rArr; audio_route_voice_physical_path_get
</UL>
<BR>[Calls]<UL><LI><a href="#[f24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_mgr_send_action
</UL>
<BR>[Called By]<UL><LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_audio_stop
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;voice_wait_running_handler
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_wait_running_handler
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notification_wait_running_handler
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;voice_dsp_mgr_session_cb
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notification_dsp_mgr_session_cb
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_dsp_mgr_session_cb
</UL>

<P><STRONG><a name="[e7e]"></a>dsp_mgr_encoder_action</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, dsp_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = dsp_mgr_encoder_action &rArr; dsp_mgr_send_action &rArr; audio_route_physical_path_take &rArr; audio_route_physical_path_get &rArr; audio_route_voice_physical_path_get
</UL>
<BR>[Calls]<UL><LI><a href="#[f24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_mgr_send_action
</UL>
<BR>[Called By]<UL><LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_record_stop
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;voice_wait_running_handler
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;record_wait_running_handler
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;voice_dsp_mgr_session_cb
</UL>

<P><STRONG><a name="[e75]"></a>dsp_mgr_line_in_action</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, dsp_mgr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;analog_wait_running_handler
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;analog_dsp_mgr_session_cb
</UL>

<P><STRONG><a name="[e8d]"></a>dsp_mgr_init</STRONG> (Thumb, 124 bytes, Stack size 8 bytes, dsp_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = dsp_mgr_init &rArr; dsp_hal_init &rArr; dsp_pm_init &rArr; dsp_pm_power_on &rArr; hw_timer_create &rArr; hw_timer_create_int &rArr; hw_timer_driver_init_int &rArr; hw_timer_update_isr &rArr; RamVectorTableUpdate_for_xip_isr
</UL>
<BR>[Calls]<UL><LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[563]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;power_check_cb_register
<LI><a href="#[a49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_ipc_cback_register
<LI><a href="#[f26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_param_init
<LI><a href="#[f08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_load_init
<LI><a href="#[efe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_hal_register_cback
<LI><a href="#[efd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_ipc_init
<LI><a href="#[e90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_event_group_create
<LI><a href="#[f25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_hal_init
</UL>
<BR>[Called By]<UL><LI><a href="#[a3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_init
</UL>

<P><STRONG><a name="[e80]"></a>dsp_mgr_is_stable</STRONG> (Thumb, 200 bytes, Stack size 56 bytes, dsp_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = dsp_mgr_is_stable &rArr; dsp_mgr_start &rArr; dsp_hal_boot &rArr; dsp_hal_codec_open &rArr; audio_hal_action &rArr; audio_hal_dsp_action
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[f18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_mgr_sub_state_get
<LI><a href="#[f27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_load_need_initial
<LI><a href="#[f28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_load_in_initial
<LI><a href="#[f0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_loader_bin_match
<LI><a href="#[e81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_event_flag_check
<LI><a href="#[f1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_mgr_start
</UL>
<BR>[Called By]<UL><LI><a href="#[e7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_is_stable
</UL>

<P><STRONG><a name="[ec5]"></a>dsp_mgr_session_create</STRONG> (Thumb, 252 bytes, Stack size 40 bytes, dsp_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = dsp_mgr_session_create &rArr; voice_encode_decode_set &rArr; audio_codec_frame_size_get &rArr; opus_frame_size_get
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[f2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;record_encode_set
<LI><a href="#[f2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;voice_encode_decode_set
<LI><a href="#[f29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_decode_set
</UL>
<BR>[Called By]<UL><LI><a href="#[e98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_analog_init
<LI><a href="#[e97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_vp_init
<LI><a href="#[e96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_tone_init
<LI><a href="#[e95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_record_init
<LI><a href="#[e94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_voice_init
<LI><a href="#[e93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_audio_init
</UL>

<P><STRONG><a name="[e9b]"></a>dsp_mgr_session_destroy</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, dsp_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = dsp_mgr_session_destroy
</UL>
<BR>[Called By]<UL><LI><a href="#[a66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_destory
</UL>

<P><STRONG><a name="[e83]"></a>dsp_mgr_power_on_check</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, dsp_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = dsp_mgr_power_on_check
</UL>
<BR>[Calls]<UL><LI><a href="#[f2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_hal_boot_ref_cnt_get
</UL>
<BR>[Called By]<UL><LI><a href="#[e76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_schedule
</UL>

<P><STRONG><a name="[e69]"></a>dsp_mgr_session_enable</STRONG> (Thumb, 200 bytes, Stack size 16 bytes, dsp_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = dsp_mgr_session_enable &rArr; dsp_state_machine &rArr; dsp_power_on &rArr; dsp_hal_reset &rArr; shm_enable &rArr; h2d_cmd_send &rArr; shm_cmd_send &rArr; wr_queue_send
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[efa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_send_msg (via Veneer)
<LI><a href="#[e88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_event_flag_wait
<LI><a href="#[e6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_event_flag_post
<LI><a href="#[e81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_event_flag_check
<LI><a href="#[f1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_state_machine
</UL>
<BR>[Called By]<UL><LI><a href="#[e85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_voice_start
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;path_wait_codec_enable_handler
<LI><a href="#[e76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_schedule
</UL>

<P><STRONG><a name="[e7a]"></a>dsp_mgr_session_disable</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, dsp_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = dsp_mgr_session_disable &rArr; dsp_mgr_deployment_traverse &rArr; audio_route_physical_path_take &rArr; audio_route_physical_path_get &rArr; audio_route_voice_physical_path_get
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[f15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_mgr_deployment_traverse
</UL>
<BR>[Called By]<UL><LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_record_stop
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_audio_stop
<LI><a href="#[e77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_suspend
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_notification_wait_path_ready2running
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;voice_dsp_mgr_session_cb
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notification_dsp_mgr_session_cb
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_dsp_mgr_session_cb
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;analog_dsp_mgr_session_cb
</UL>

<P><STRONG><a name="[e84]"></a>dsp_mgr_power_on</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, dsp_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = dsp_mgr_power_on &rArr; dsp_state_machine &rArr; dsp_power_on &rArr; dsp_hal_reset &rArr; shm_enable &rArr; h2d_cmd_send &rArr; shm_cmd_send &rArr; wr_queue_send
</UL>
<BR>[Calls]<UL><LI><a href="#[f1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_state_machine
</UL>
<BR>[Called By]<UL><LI><a href="#[e76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_schedule
</UL>

<P><STRONG><a name="[e70]"></a>dsp_mgr_power_off</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, dsp_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = dsp_mgr_power_off &rArr; dsp_state_machine &rArr; dsp_power_on &rArr; dsp_hal_reset &rArr; shm_enable &rArr; h2d_cmd_send &rArr; shm_cmd_send &rArr; wr_queue_send
</UL>
<BR>[Calls]<UL><LI><a href="#[f1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_state_machine
</UL>
<BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_mgr_dsp_timer_cback
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_dsp_cback
<LI><a href="#[e6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_codec_event_handler
</UL>

<P><STRONG><a name="[e8b]"></a>dsp_mgr_load_finish</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, dsp_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = dsp_mgr_load_finish &rArr; dsp_state_machine &rArr; dsp_power_on &rArr; dsp_hal_reset &rArr; shm_enable &rArr; h2d_cmd_send &rArr; shm_cmd_send &rArr; wr_queue_send
</UL>
<BR>[Calls]<UL><LI><a href="#[f1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_state_machine
</UL>
<BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_dsp_cback
</UL>

<P><STRONG><a name="[eb3]"></a>dsp_mgr_voice_prompt_start</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, dsp_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = dsp_mgr_voice_prompt_start &rArr; dsp_ipc_voice_prompt_start &rArr; dsp_ipc_h2d_cmd_send &rArr; h2d_cmd_send &rArr; shm_cmd_send &rArr; wr_queue_send
</UL>
<BR>[Calls]<UL><LI><a href="#[efc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_ipc_voice_prompt_start
<LI><a href="#[e6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_event_flag_post
<LI><a href="#[e81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_event_flag_check
</UL>
<BR>[Called By]<UL><LI><a href="#[e39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_data_send
</UL>

<P><STRONG><a name="[eb4]"></a>dsp_mgr_voice_prompt_send</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, dsp_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = dsp_mgr_voice_prompt_send &rArr; dsp_ipc_voice_prompt_send &rArr; h2d_cmd_send &rArr; shm_cmd_send &rArr; wr_queue_send
</UL>
<BR>[Calls]<UL><LI><a href="#[eff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_ipc_voice_prompt_send
</UL>
<BR>[Called By]<UL><LI><a href="#[e39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_data_send
</UL>

<P><STRONG><a name="[e9f]"></a>dsp_mgr_voice_prompt_stop</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dsp_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = dsp_mgr_voice_prompt_stop &rArr; dsp_mgr_notification_stop &rArr; dsp_send_msg
</UL>
<BR>[Calls]<UL><LI><a href="#[f2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_mgr_notification_stop
</UL>
<BR>[Called By]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_vp_stop
<LI><a href="#[e39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_data_send
</UL>

<P><STRONG><a name="[eb2]"></a>dsp_mgr_composite_start</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, dsp_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = dsp_mgr_composite_start &rArr; dsp_ipc_composite_data_send &rArr; dsp_ipc_h2d_cmd_send &rArr; h2d_cmd_send &rArr; shm_cmd_send &rArr; wr_queue_send
</UL>
<BR>[Calls]<UL><LI><a href="#[efb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_ipc_composite_data_send
<LI><a href="#[e6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_event_flag_post
<LI><a href="#[e81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_event_flag_check
</UL>
<BR>[Called By]<UL><LI><a href="#[e39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_data_send
</UL>

<P><STRONG><a name="[e9e]"></a>dsp_mgr_composite_stop</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dsp_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = dsp_mgr_composite_stop &rArr; dsp_mgr_notification_stop &rArr; dsp_send_msg
</UL>
<BR>[Calls]<UL><LI><a href="#[f2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_mgr_notification_stop
</UL>
<BR>[Called By]<UL><LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_tone_stop
</UL>

<P><STRONG><a name="[ec0]"></a>dsp_mgr_dsp2_ref_get</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, dsp_mgr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_mgr_dsp_timer_cback
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_mgr_codec_timer_cback
</UL>

<P><STRONG><a name="[eb0]"></a>dsp_mgr_signal_proc_start</STRONG> (Thumb, 138 bytes, Stack size 72 bytes, dsp_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = dsp_mgr_signal_proc_start &rArr; dsp_remote_init &rArr; dsp_ipc_set_rws_init &rArr; dsp_ipc_h2d_cmd_send &rArr; h2d_cmd_send &rArr; shm_cmd_send &rArr; wr_queue_send
</UL>
<BR>[Calls]<UL><LI><a href="#[aa5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_route_physical_path_take
<LI><a href="#[f16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_route_physical_path_give
<LI><a href="#[ef6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_ipc_set_signal_proc_start
<LI><a href="#[e6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_event_flag_post
<LI><a href="#[e81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_event_flag_check
<LI><a href="#[f21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_remote_init
</UL>
<BR>[Called By]<UL><LI><a href="#[a17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_timestamp_set
</UL>

<P><STRONG><a name="[ca]"></a>dsp_mgr_hal_data_cb</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, dsp_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = dsp_mgr_hal_data_cb &rArr; d2h_data_flush
</UL>
<BR>[Calls]<UL><LI><a href="#[ecb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;d2h_data_flush
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dsp_mgr.o(.text)
</UL>
<P><STRONG><a name="[eca]"></a>dsp_mgr_session_run</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, dsp_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = dsp_mgr_session_run &rArr; dsp_mgr_deployment_traverse &rArr; audio_route_physical_path_take &rArr; audio_route_physical_path_get &rArr; audio_route_voice_physical_path_get
</UL>
<BR>[Calls]<UL><LI><a href="#[f15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_mgr_deployment_traverse
</UL>
<BR>[Called By]<UL><LI><a href="#[ec7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_plugin_msg_handle
</UL>

<P><STRONG><a name="[f34]"></a>RamVectorTableUpdate_for_xip_isr</STRONG> (Thumb, 140 bytes, Stack size 16 bytes, vector_table_ext.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = RamVectorTableUpdate_for_xip_isr
</UL>
<BR>[Called By]<UL><LI><a href="#[ab4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RamVectorTableUpdate
<LI><a href="#[f3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hw_timer_update_isr
</UL>

<P><STRONG><a name="[ab4]"></a>RamVectorTableUpdate</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, vector_table_ext.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = RamVectorTableUpdate &rArr; RamVectorTableUpdate_for_xip_isr
</UL>
<BR>[Calls]<UL><LI><a href="#[f35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RamVectorTableUpdate_rom (via Veneer)
<LI><a href="#[f34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RamVectorTableUpdate_for_xip_isr
</UL>
<BR>[Called By]<UL><LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vector_table_update
<LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_int_init
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mfb_init
<LI><a href="#[ac7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_register_isr_by_gpio
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adp_io_init_isr
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adp_5v_init_plug
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adp_5v_init_isr
<LI><a href="#[ab2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GDMA_channel_request_in_hal
<LI><a href="#[fad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shm_init
</UL>

<P><STRONG><a name="[f36]"></a>hw_timer_pool_alloc</STRONG> (Thumb, 124 bytes, Stack size 24 bytes, hw_tim.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = hw_timer_pool_alloc &rArr; power_check_cb_register
</UL>
<BR>[Calls]<UL><LI><a href="#[563]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;power_check_cb_register
</UL>
<BR>[Called By]<UL><LI><a href="#[f38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hw_timer_create_int
</UL>

<P><STRONG><a name="[f37]"></a>hw_timer_pool_free</STRONG> (Thumb, 82 bytes, Stack size 24 bytes, hw_tim.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = hw_timer_pool_free
</UL>
<BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[f3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hw_timer_delete
</UL>

<P><STRONG><a name="[f38]"></a>hw_timer_create_int</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, hw_tim.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = hw_timer_create_int &rArr; hw_timer_driver_init_int &rArr; hw_timer_update_isr &rArr; RamVectorTableUpdate_for_xip_isr
</UL>
<BR>[Calls]<UL><LI><a href="#[f36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hw_timer_pool_alloc
<LI><a href="#[f39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hw_timer_driver_init_int
</UL>
<BR>[Called By]<UL><LI><a href="#[f3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hw_timer_create
</UL>

<P><STRONG><a name="[f3a]"></a>hw_timer_create</STRONG> (Thumb, 12 bytes, Stack size 16 bytes, hw_tim.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = hw_timer_create &rArr; hw_timer_create_int &rArr; hw_timer_driver_init_int &rArr; hw_timer_update_isr &rArr; RamVectorTableUpdate_for_xip_isr
</UL>
<BR>[Calls]<UL><LI><a href="#[f38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hw_timer_create_int
</UL>
<BR>[Called By]<UL><LI><a href="#[cfd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_init
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_pm_power_on
</UL>

<P><STRONG><a name="[f3b]"></a>hw_timer_delete</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, hw_tim.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = hw_timer_delete &rArr; hw_timer_stop &rArr; hw_timer_safe_stop &rArr; hw_timer_set_div
</UL>
<BR>[Calls]<UL><LI><a href="#[f37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hw_timer_pool_free
<LI><a href="#[f3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hw_timer_stop (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[cfd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_init
</UL>

<P><STRONG><a name="[1016]"></a>hw_timer_get_elapsed_time</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, hw_tim.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1015]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_hp_timer_elapsed_time_update
</UL>

<P><STRONG><a name="[1018]"></a>hw_timer_is_active</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, hw_tim.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[101a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_hp_timer_list_remove
<LI><a href="#[1017]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_hp_timer_list_insert
<LI><a href="#[1020]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_hp_timer_expire
</UL>

<P><STRONG><a name="[ad9]"></a>hw_timer_pm_exit</STRONG> (Thumb, 106 bytes, Stack size 12 bytes, hw_tim.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = hw_timer_pm_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tim_dlps_exit
</UL>

<P><STRONG><a name="[ce9]"></a>aes256_ecb_encrypt</STRONG> (Thumb, 46 bytes, Stack size 56 bytes, aes256_ecb_api.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = aes256_ecb_encrypt &rArr; aes256_key_swap
</UL>
<BR>[Calls]<UL><LI><a href="#[f45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hw_aes_encrypt256 (via Veneer)
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[f44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aes256_key_swap
</UL>
<BR>[Called By]<UL><LI><a href="#[784]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_encrypted_beacon_data
</UL>

<P><STRONG><a name="[f48]"></a>codec_send_isr_msg</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, codec_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = codec_send_isr_msg
</UL>
<BR>[Called By]<UL><LI><a href="#[f47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_send_push_state_msg
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_sidetone_timer_cb
</UL>

<P><STRONG><a name="[f47]"></a>codec_drv_send_push_state_msg</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, codec_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = codec_drv_send_push_state_msg &rArr; codec_send_isr_msg
</UL>
<BR>[Calls]<UL><LI><a href="#[f48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_send_isr_msg
</UL>
<BR>[Called By]<UL><LI><a href="#[f75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_cfg_state
<LI><a href="#[fa3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_push_state
<LI><a href="#[f73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_adc_depop_process
</UL>

<P><STRONG><a name="[f4a]"></a>codec_drv_req_recv</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, codec_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = codec_drv_req_recv
</UL>
<BR>[Called By]<UL><LI><a href="#[f4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_req_send
<LI><a href="#[f49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_req_process
</UL>

<P><STRONG><a name="[f49]"></a>codec_drv_req_process</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, codec_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = codec_drv_req_process &rArr; codec_drv_req_recv
</UL>
<BR>[Calls]<UL><LI><a href="#[f4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_req_recv
</UL>
<BR>[Called By]<UL><LI><a href="#[f4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_event_process
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_active_state
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_ad_depop_state
</UL>

<P><STRONG><a name="[f4d]"></a>codec_drv_req_send</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, codec_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = codec_drv_req_send &rArr; codec_drv_req_recv
</UL>
<BR>[Calls]<UL><LI><a href="#[f4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_req_recv
</UL>
<BR>[Called By]<UL><LI><a href="#[f4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_event_process
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_active_state
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_ad_depop_state
</UL>

<P><STRONG><a name="[f52]"></a>codec_drv_i2s_parser</STRONG> (Thumb, 786 bytes, Stack size 20 bytes, codec_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = codec_drv_i2s_parser
</UL>
<BR>[Called By]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_i2s_config
</UL>

<P><STRONG><a name="[df]"></a>codec_drv_i2s_config</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, codec_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = codec_drv_i2s_config &rArr; codec_drv_i2s_parser
</UL>
<BR>[Calls]<UL><LI><a href="#[f52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_i2s_parser
</UL>
<BR>[Address Reference Count : 1]<UL><LI> codec_driver.o(.text)
</UL>
<P><STRONG><a name="[f5c]"></a>codec_drv_spk_adc_sel_i2s_config</STRONG> (Thumb, 246 bytes, Stack size 28 bytes, codec_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = codec_drv_spk_adc_sel_i2s_config
</UL>
<BR>[Called By]<UL><LI><a href="#[f65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_dac_digital_parser
<LI><a href="#[f5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_adc_digital_parser
</UL>

<P><STRONG><a name="[f55]"></a>codec_drv_find_sample_rate_src</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, codec_driver.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[f53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_sample_rate_config
</UL>

<P><STRONG><a name="[f54]"></a>codec_drv_convert_sample_rate</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, codec_driver.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[f53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_sample_rate_config
</UL>

<P><STRONG><a name="[f53]"></a>codec_drv_sample_rate_config</STRONG> (Thumb, 168 bytes, Stack size 20 bytes, codec_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = codec_drv_sample_rate_config
</UL>
<BR>[Calls]<UL><LI><a href="#[f54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_convert_sample_rate
<LI><a href="#[f55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_find_sample_rate_src
</UL>
<BR>[Called By]<UL><LI><a href="#[f65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_dac_digital_parser
<LI><a href="#[f5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_adc_digital_parser
</UL>

<P><STRONG><a name="[f57]"></a>codec_drv_dmic_clock_sel</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, codec_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = codec_drv_dmic_clock_sel
</UL>
<BR>[Called By]<UL><LI><a href="#[f56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_dmic_config
</UL>

<P><STRONG><a name="[f56]"></a>codec_drv_dmic_config</STRONG> (Thumb, 70 bytes, Stack size 24 bytes, codec_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = codec_drv_dmic_config &rArr; audio_pad_dmic_pad_ctrl &rArr; audio_pad_dmic_pad_cfg &rArr; Pad_Config &rArr; flash_cur_bank_img_payload_addr_get
</UL>
<BR>[Calls]<UL><LI><a href="#[f58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_pad_mic_set
<LI><a href="#[f59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_pad_dmic_pad_ctrl
<LI><a href="#[f57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_dmic_clock_sel
</UL>
<BR>[Called By]<UL><LI><a href="#[f5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_adc_digital_parser
</UL>

<P><STRONG><a name="[f5a]"></a>codec_drv_adc_digital_parser</STRONG> (Thumb, 1008 bytes, Stack size 112 bytes, codec_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = codec_drv_adc_digital_parser &rArr; codec_drv_dmic_config &rArr; audio_pad_dmic_pad_ctrl &rArr; audio_pad_dmic_pad_cfg &rArr; Pad_Config &rArr; flash_cur_bank_img_payload_addr_get
</UL>
<BR>[Calls]<UL><LI><a href="#[f56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_dmic_config
<LI><a href="#[f53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_sample_rate_config
<LI><a href="#[f5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_spk_adc_sel_i2s_config
<LI><a href="#[f5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_adc_depop_check
<LI><a href="#[f5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_adc_phase_align
</UL>
<BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_adc_digital_config
</UL>

<P><STRONG><a name="[e2]"></a>codec_drv_adc_digital_config</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, codec_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = codec_drv_adc_digital_config &rArr; codec_drv_adc_digital_parser &rArr; codec_drv_dmic_config &rArr; audio_pad_dmic_pad_ctrl &rArr; audio_pad_dmic_pad_cfg &rArr; Pad_Config &rArr; flash_cur_bank_img_payload_addr_get
</UL>
<BR>[Calls]<UL><LI><a href="#[f5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_adc_digital_parser
</UL>
<BR>[Address Reference Count : 1]<UL><LI> codec_driver.o(.text)
</UL>
<P><STRONG><a name="[e1]"></a>codec_drv_micbias_parser</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, codec_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = codec_drv_micbias_parser &rArr; codec_drv_micbias_process &rArr; audio_pad_bias_set
</UL>
<BR>[Calls]<UL><LI><a href="#[f4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_micbias_process
</UL>
<BR>[Address Reference Count : 1]<UL><LI> codec_driver.o(.text)
</UL>
<P><STRONG><a name="[f63]"></a>codec_drv_record_digital_genernal_setting</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, codec_driver.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[f5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_adc_analog_parser
</UL>

<P><STRONG><a name="[f62]"></a>codec_drv_check_fmode</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, codec_driver.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[f5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_adc_analog_parser
</UL>

<P><STRONG><a name="[f5e]"></a>codec_drv_adc_analog_parser</STRONG> (Thumb, 486 bytes, Stack size 72 bytes, codec_driver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_pad_mic_set
<LI><a href="#[f60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_pad_aux_set
<LI><a href="#[f5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_hal_action
<LI><a href="#[f62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_check_fmode
<LI><a href="#[f63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_record_digital_genernal_setting
<LI><a href="#[f61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_amic_analog_depop_check
</UL>
<BR>[Called By]<UL><LI><a href="#[f64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_adc_analog_config
</UL>

<P><STRONG><a name="[f64]"></a>codec_drv_adc_analog_config</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, codec_driver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_adc_analog_parser
</UL>

<P><STRONG><a name="[f65]"></a>codec_drv_dac_digital_parser</STRONG> (Thumb, 404 bytes, Stack size 56 bytes, codec_driver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_sample_rate_config
<LI><a href="#[f5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_spk_adc_sel_i2s_config
<LI><a href="#[f66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_check_adc_decimation_mapping
</UL>
<BR>[Called By]<UL><LI><a href="#[f67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_dac_digital_config
</UL>

<P><STRONG><a name="[f67]"></a>codec_drv_dac_digital_config</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, codec_driver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_dac_digital_parser
<LI><a href="#[f66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_check_adc_decimation_mapping
<LI><a href="#[f68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_dac_mute_ctrl
</UL>

<P><STRONG><a name="[f6a]"></a>codec_drv_eq_reg_offset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, codec_driver.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[f69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_set_eq_clk
</UL>

<P><STRONG><a name="[f69]"></a>codec_drv_set_eq_clk</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, codec_driver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_eq_reg_offset
</UL>
<BR>[Called By]<UL><LI><a href="#[f6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_eq_dac_parser
<LI><a href="#[f6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_eq_adc_parser
</UL>

<P><STRONG><a name="[f6b]"></a>codec_drv_eq_adc_parser</STRONG> (Thumb, 88 bytes, Stack size 24 bytes, codec_driver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_set_eq_clk
<LI><a href="#[f6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_eq_get_stage_en
<LI><a href="#[f6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_eq_set_stage_en
</UL>
<BR>[Called By]<UL><LI><a href="#[f6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_eq_adc_config
</UL>

<P><STRONG><a name="[f6e]"></a>codec_drv_eq_adc_config</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, codec_driver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_eq_adc_parser
</UL>

<P><STRONG><a name="[f6f]"></a>codec_drv_eq_dac_parser</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, codec_driver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_set_eq_clk
<LI><a href="#[f6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_eq_get_stage_en
<LI><a href="#[f6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_eq_set_stage_en
</UL>
<BR>[Called By]<UL><LI><a href="#[f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_eq_dac_config
</UL>

<P><STRONG><a name="[f70]"></a>codec_drv_eq_dac_config</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, codec_driver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_eq_dac_parser
</UL>

<P><STRONG><a name="[f72]"></a>codec_drv_sidetone_parser</STRONG> (Thumb, 170 bytes, Stack size 20 bytes, codec_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = codec_drv_sidetone_parser
</UL>
<BR>[Called By]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_sidetone_config
</UL>

<P><STRONG><a name="[f4b]"></a>codec_drv_event_process</STRONG> (Thumb, 888 bytes, Stack size 32 bytes, codec_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = codec_drv_event_process &rArr; codec_drv_set_sample_rate
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[f4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_req_send
<LI><a href="#[f49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_req_process
<LI><a href="#[f73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_adc_depop_process
<LI><a href="#[f71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_set_sample_rate
<LI><a href="#[f74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_check_depop_done
<LI><a href="#[f46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_dump_cur_setting
</UL>
<BR>[Called By]<UL><LI><a href="#[f9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_adc_config_clear
<LI><a href="#[f9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_dmic_config_clear
<LI><a href="#[f9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_amic_config_clear
<LI><a href="#[f99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_dac_config_clear
<LI><a href="#[f97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_i2s_config_set
<LI><a href="#[f96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_adc_config_set
<LI><a href="#[f95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_dmic_config_set
<LI><a href="#[f94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_amic_config_set
<LI><a href="#[f93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_dac_config_set
<LI><a href="#[f92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_spk_config_set
<LI><a href="#[f91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_sidetone_config_set
<LI><a href="#[f8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_bias_config_set
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_dac_depop_halt_timer_cb
<LI><a href="#[fa5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_sidetone_config_clear
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_ad_depop_halt_timer_cb
</UL>

<P><STRONG><a name="[da]"></a>codec_drv_dac_depop_halt_timer_cb</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, codec_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = codec_drv_dac_depop_halt_timer_cb &rArr; codec_drv_event_process &rArr; codec_drv_set_sample_rate
</UL>
<BR>[Calls]<UL><LI><a href="#[9b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_stop
<LI><a href="#[977]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_delete
<LI><a href="#[f4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_event_process
</UL>
<BR>[Address Reference Count : 1]<UL><LI> codec_driver.o(.text)
</UL>
<P><STRONG><a name="[f75]"></a>codec_drv_cfg_state</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, codec_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = codec_drv_cfg_state &rArr; codec_drv_send_push_state_msg &rArr; codec_send_isr_msg
</UL>
<BR>[Calls]<UL><LI><a href="#[f47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_send_push_state_msg
</UL>
<BR>[Called By]<UL><LI><a href="#[f8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_set_mute
<LI><a href="#[f8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_disable
<LI><a href="#[f8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_enable
</UL>

<P><STRONG><a name="[1062]"></a>codec_drv_get_mic_ch_sel</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, codec_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = codec_drv_get_mic_ch_sel
</UL>
<BR>[Called By]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_adc_gain_set_action
<LI><a href="#[1067]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_mic_disable
<LI><a href="#[1061]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_adc_config_set
<LI><a href="#[10a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_pad_load
</UL>

<P><STRONG><a name="[1063]"></a>codec_drv_get_mic_src_sel</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, codec_driver.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1061]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_adc_config_set
</UL>

<P><STRONG><a name="[f7b]"></a>codec_drv_eq_band_write</STRONG> (Thumb, 262 bytes, Stack size 48 bytes, codec_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = codec_drv_eq_band_write &rArr; codec_drv_eq_coef_write
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[f7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_eq_coef_write
<LI><a href="#[f6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_eq_set_stage_en
</UL>
<BR>[Called By]<UL><LI><a href="#[a4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_eq_data_set
</UL>

<P><STRONG><a name="[f7c]"></a>codec_drv_eq_data_clear</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, codec_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = codec_drv_eq_data_clear &rArr; codec_drv_eq_target_clear &rArr; codec_drv_eq_coef_write
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[f7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_eq_target_convert
<LI><a href="#[f79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_eq_target_clear
<LI><a href="#[f7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_eq_en_ctrl
</UL>
<BR>[Called By]<UL><LI><a href="#[106f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_mix_disable
<LI><a href="#[1069]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_spk_disable
<LI><a href="#[1067]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_mic_disable
</UL>

<P><STRONG><a name="[a4e]"></a>codec_drv_eq_data_set</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, codec_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = codec_drv_eq_data_set &rArr; codec_drv_eq_band_write &rArr; codec_drv_eq_coef_write
</UL>
<BR>[Calls]<UL><LI><a href="#[f7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_eq_band_write
<LI><a href="#[f7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_eq_target_convert
<LI><a href="#[f79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_eq_target_clear
<LI><a href="#[f7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_eq_en_ctrl
</UL>
<BR>[Called By]<UL><LI><a href="#[65e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_probe_codec_hw_eq_set
<LI><a href="#[1060]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_eq_set
</UL>

<P><STRONG><a name="[f7f]"></a>codec_drv_sidetone_enable</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, codec_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = codec_drv_sidetone_enable &rArr; codec_drv_sidetone_timer_ctrl &rArr; sys_timer_restart &rArr; sys_hp_timer_list_insert &rArr; hw_timer_restart &rArr; hw_timer_safe_stop &rArr; hw_timer_set_div
</UL>
<BR>[Calls]<UL><LI><a href="#[f81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_sidetone_boost_gain_set
<LI><a href="#[f76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_sidetone_timer_ctrl
<LI><a href="#[f80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_sidetone_clock_ctrl
</UL>
<BR>[Called By]<UL><LI><a href="#[eb9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_sidetone_set
</UL>

<P><STRONG><a name="[f82]"></a>codec_drv_sidetone_disable</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, codec_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = codec_drv_sidetone_disable &rArr; codec_drv_sidetone_timer_ctrl &rArr; sys_timer_restart &rArr; sys_hp_timer_list_insert &rArr; hw_timer_restart &rArr; hw_timer_safe_stop &rArr; hw_timer_set_div
</UL>
<BR>[Calls]<UL><LI><a href="#[f83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_sidetone_dvol_gain_ctrl
<LI><a href="#[f76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_sidetone_timer_ctrl
</UL>
<BR>[Called By]<UL><LI><a href="#[eb9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_sidetone_set
</UL>

<P><STRONG><a name="[f84]"></a>codec_drv_sidetone_gain_convert</STRONG> (Thumb, 84 bytes, Stack size 24 bytes, codec_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = codec_drv_sidetone_gain_convert &rArr; __aeabi_fmul
</UL>
<BR>[Calls]<UL><LI><a href="#[ea1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbnf
<LI><a href="#[e64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfrcmple
<LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[93f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
<LI><a href="#[940]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[ea9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[ed2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_frsub
</UL>
<BR>[Called By]<UL><LI><a href="#[eb9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_sidetone_set
</UL>

<P><STRONG><a name="[f85]"></a>codec_drv_audio_pin_init</STRONG> (Thumb, 414 bytes, Stack size 40 bytes, codec_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = codec_drv_audio_pin_init
</UL>
<BR>[Calls]<UL><LI><a href="#[acb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btaon_fast_update_safe (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[f87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_init
</UL>

<P><STRONG><a name="[f86]"></a>codec_drv_config_default</STRONG> (Thumb, 394 bytes, Stack size 16 bytes, codec_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + In Cycle
<LI>Call Chain = codec_drv_config_default &rArr;  codec_drv_config_default (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
<LI><a href="#[f86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_config_default
</UL>
<BR>[Called By]<UL><LI><a href="#[f9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_adc_config_clear
<LI><a href="#[f9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_dmic_config_clear
<LI><a href="#[f9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_amic_config_clear
<LI><a href="#[f99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_dac_config_clear
<LI><a href="#[f98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_spk_config_clear
<LI><a href="#[f87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_init
<LI><a href="#[f86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_config_default
<LI><a href="#[fa5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_sidetone_config_clear
</UL>

<P><STRONG><a name="[f87]"></a>codec_drv_init</STRONG> (Thumb, 188 bytes, Stack size 24 bytes, codec_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = codec_drv_init &rArr; audio_pad_init &rArr; audio_pad_load &rArr; audio_pad_mic_set &rArr; audio_pad_dmic_set &rArr; Pad_Config &rArr; flash_cur_bank_img_payload_addr_get
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[e92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_mgr_event_register
<LI><a href="#[f88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_pad_init
<LI><a href="#[f86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_config_default
<LI><a href="#[f85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_audio_pin_init
</UL>
<BR>[Called By]<UL><LI><a href="#[e8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_init
</UL>

<P><STRONG><a name="[f89]"></a>codec_drv_deinit</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, codec_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = codec_drv_deinit
</UL>
<BR>[Calls]<UL><LI><a href="#[f8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_pad_deinit
</UL>
<BR>[Called By]<UL><LI><a href="#[e8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_init
</UL>

<P><STRONG><a name="[109b]"></a>codec_drv_power_on</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, codec_driver.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[f1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_hal_reset
<LI><a href="#[f20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_hal_boot
</UL>

<P><STRONG><a name="[1099]"></a>codec_drv_power_off</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, codec_driver.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1098]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_hal_codec_close
</UL>

<P><STRONG><a name="[f8b]"></a>codec_drv_enable</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, codec_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = codec_drv_enable &rArr; codec_drv_cfg_state &rArr; codec_drv_send_push_state_msg &rArr; codec_send_isr_msg
</UL>
<BR>[Calls]<UL><LI><a href="#[f75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_cfg_state
</UL>
<BR>[Called By]<UL><LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_enter_enabling
</UL>

<P><STRONG><a name="[f8c]"></a>codec_drv_disable</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, codec_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = codec_drv_disable &rArr; codec_drv_cfg_state &rArr; codec_drv_send_push_state_msg &rArr; codec_send_isr_msg
</UL>
<BR>[Calls]<UL><LI><a href="#[f75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_cfg_state
</UL>
<BR>[Called By]<UL><LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_enter_disabling
</UL>

<P><STRONG><a name="[f8d]"></a>codec_drv_set_mute</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, codec_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = codec_drv_set_mute &rArr; codec_drv_cfg_state &rArr; codec_drv_send_push_state_msg &rArr; codec_send_isr_msg
</UL>
<BR>[Calls]<UL><LI><a href="#[f75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_cfg_state
</UL>
<BR>[Called By]<UL><LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_enter_muting
</UL>

<P><STRONG><a name="[f8e]"></a>codec_drv_config_init</STRONG> (Thumb, 284 bytes, Stack size 16 bytes, codec_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + In Cycle
<LI>Call Chain = codec_drv_config_init &rArr;  codec_drv_config_init (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
<LI><a href="#[336]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[f8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_config_init
</UL>
<BR>[Called By]<UL><LI><a href="#[eb9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_sidetone_set
<LI><a href="#[ea7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_dac_gain_set
<LI><a href="#[f8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_config_init
<LI><a href="#[1053]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_loopback_disable
<LI><a href="#[1052]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_loopback_enable
<LI><a href="#[106d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_mic_enable
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_adc_gain_set_action
<LI><a href="#[1069]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_spk_disable
<LI><a href="#[1068]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_spk_enable
<LI><a href="#[1061]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_adc_config_set
<LI><a href="#[1070]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_bias_setting
</UL>

<P><STRONG><a name="[f90]"></a>codec_drv_config_check_immediate</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, codec_driver.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[f9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_adc_config_clear
<LI><a href="#[f9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_dmic_config_clear
<LI><a href="#[f9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_amic_config_clear
<LI><a href="#[f99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_dac_config_clear
<LI><a href="#[f97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_i2s_config_set
<LI><a href="#[f96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_adc_config_set
<LI><a href="#[f95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_dmic_config_set
<LI><a href="#[f94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_amic_config_set
<LI><a href="#[f93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_dac_config_set
<LI><a href="#[f92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_spk_config_set
<LI><a href="#[f91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_sidetone_config_set
<LI><a href="#[f8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_bias_config_set
</UL>

<P><STRONG><a name="[f8f]"></a>codec_drv_bias_config_set</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, codec_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = codec_drv_bias_config_set &rArr; codec_drv_event_process &rArr; codec_drv_set_sample_rate
</UL>
<BR>[Calls]<UL><LI><a href="#[f90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_config_check_immediate
<LI><a href="#[f4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_event_process
</UL>
<BR>[Called By]<UL><LI><a href="#[1070]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_bias_setting
</UL>

<P><STRONG><a name="[f91]"></a>codec_drv_sidetone_config_set</STRONG> (Thumb, 92 bytes, Stack size 8 bytes, codec_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = codec_drv_sidetone_config_set &rArr; codec_drv_event_process &rArr; codec_drv_set_sample_rate
</UL>
<BR>[Calls]<UL><LI><a href="#[f90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_config_check_immediate
<LI><a href="#[f4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_event_process
</UL>
<BR>[Called By]<UL><LI><a href="#[eb9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_sidetone_set
</UL>

<P><STRONG><a name="[f92]"></a>codec_drv_spk_config_set</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, codec_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = codec_drv_spk_config_set &rArr; codec_drv_event_process &rArr; codec_drv_set_sample_rate
</UL>
<BR>[Calls]<UL><LI><a href="#[f90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_config_check_immediate
<LI><a href="#[f4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_event_process
</UL>
<BR>[Called By]<UL><LI><a href="#[f98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_spk_config_clear
<LI><a href="#[1068]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_spk_enable
</UL>

<P><STRONG><a name="[f93]"></a>codec_drv_dac_config_set</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, codec_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = codec_drv_dac_config_set &rArr; codec_drv_event_process &rArr; codec_drv_set_sample_rate
</UL>
<BR>[Calls]<UL><LI><a href="#[f90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_config_check_immediate
<LI><a href="#[f4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_event_process
</UL>
<BR>[Called By]<UL><LI><a href="#[ea7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_dac_gain_set
<LI><a href="#[1069]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_spk_disable
<LI><a href="#[1068]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_spk_enable
</UL>

<P><STRONG><a name="[f94]"></a>codec_drv_amic_config_set</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, codec_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = codec_drv_amic_config_set &rArr; codec_drv_event_process &rArr; codec_drv_set_sample_rate
</UL>
<BR>[Calls]<UL><LI><a href="#[f90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_config_check_immediate
<LI><a href="#[f4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_event_process
</UL>
<BR>[Called By]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_adc_gain_set_action
<LI><a href="#[1061]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_adc_config_set
</UL>

<P><STRONG><a name="[f95]"></a>codec_drv_dmic_config_set</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, codec_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = codec_drv_dmic_config_set &rArr; codec_drv_event_process &rArr; codec_drv_set_sample_rate
</UL>
<BR>[Calls]<UL><LI><a href="#[f90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_config_check_immediate
<LI><a href="#[f4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_event_process
</UL>
<BR>[Called By]<UL><LI><a href="#[1061]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_adc_config_set
</UL>

<P><STRONG><a name="[f96]"></a>codec_drv_adc_config_set</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, codec_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = codec_drv_adc_config_set &rArr; codec_drv_event_process &rArr; codec_drv_set_sample_rate
</UL>
<BR>[Calls]<UL><LI><a href="#[f90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_config_check_immediate
<LI><a href="#[f4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_event_process
</UL>
<BR>[Called By]<UL><LI><a href="#[1053]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_loopback_disable
<LI><a href="#[1052]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_loopback_enable
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_adc_gain_set_action
<LI><a href="#[1061]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_adc_config_set
</UL>

<P><STRONG><a name="[f97]"></a>codec_drv_i2s_config_set</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, codec_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = codec_drv_i2s_config_set &rArr; codec_drv_event_process &rArr; codec_drv_set_sample_rate
</UL>
<BR>[Calls]<UL><LI><a href="#[f90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_config_check_immediate
<LI><a href="#[f4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_event_process
</UL>
<BR>[Called By]<UL><LI><a href="#[106d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_mic_enable
<LI><a href="#[1068]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_spk_enable
</UL>

<P><STRONG><a name="[f98]"></a>codec_drv_spk_config_clear</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, codec_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = codec_drv_spk_config_clear &rArr; codec_drv_spk_config_set &rArr; codec_drv_event_process &rArr; codec_drv_set_sample_rate
</UL>
<BR>[Calls]<UL><LI><a href="#[f92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_spk_config_set
<LI><a href="#[f86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_config_default
</UL>
<BR>[Called By]<UL><LI><a href="#[106f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_mix_disable
<LI><a href="#[1069]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_spk_disable
</UL>

<P><STRONG><a name="[f99]"></a>codec_drv_dac_config_clear</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, codec_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = codec_drv_dac_config_clear &rArr; codec_drv_event_process &rArr; codec_drv_set_sample_rate
</UL>
<BR>[Calls]<UL><LI><a href="#[f90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_config_check_immediate
<LI><a href="#[f86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_config_default
<LI><a href="#[f4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_event_process
</UL>
<BR>[Called By]<UL><LI><a href="#[106f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_mix_disable
<LI><a href="#[1069]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_spk_disable
</UL>

<P><STRONG><a name="[f9a]"></a>codec_drv_amic_config_clear</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, codec_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = codec_drv_amic_config_clear &rArr; codec_drv_event_process &rArr; codec_drv_set_sample_rate
</UL>
<BR>[Calls]<UL><LI><a href="#[f90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_config_check_immediate
<LI><a href="#[f86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_config_default
<LI><a href="#[f4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_event_process
</UL>
<BR>[Called By]<UL><LI><a href="#[1067]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_mic_disable
</UL>

<P><STRONG><a name="[f9b]"></a>codec_drv_dmic_config_clear</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, codec_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = codec_drv_dmic_config_clear &rArr; codec_drv_event_process &rArr; codec_drv_set_sample_rate
</UL>
<BR>[Calls]<UL><LI><a href="#[f90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_config_check_immediate
<LI><a href="#[f86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_config_default
<LI><a href="#[f4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_event_process
</UL>
<BR>[Called By]<UL><LI><a href="#[1067]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_mic_disable
</UL>

<P><STRONG><a name="[f9c]"></a>codec_drv_adc_config_clear</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, codec_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = codec_drv_adc_config_clear &rArr; codec_drv_event_process &rArr; codec_drv_set_sample_rate
</UL>
<BR>[Calls]<UL><LI><a href="#[f90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_config_check_immediate
<LI><a href="#[f86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_config_default
<LI><a href="#[f4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_event_process
</UL>
<BR>[Called By]<UL><LI><a href="#[1067]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_mic_disable
</UL>

<P><STRONG><a name="[fa1]"></a>codec_drv_dac_analog_parser</STRONG> (Thumb, 1044 bytes, Stack size 128 bytes, codec_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = codec_drv_dac_analog_parser &rArr; audio_pad_spk_set &rArr; audio_pad_func_enable
</UL>
<BR>[Calls]<UL><LI><a href="#[fa2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_pad_spk_set
</UL>
<BR>[Called By]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_dac_analog_config
</UL>

<P><STRONG><a name="[dc]"></a>codec_drv_dac_analog_config</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, codec_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = codec_drv_dac_analog_config &rArr; codec_drv_dac_analog_parser &rArr; audio_pad_spk_set &rArr; audio_pad_func_enable
</UL>
<BR>[Calls]<UL><LI><a href="#[fa1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_dac_analog_parser
</UL>
<BR>[Address Reference Count : 1]<UL><LI> codec_driver.o(.text)
</UL>
<P><STRONG><a name="[fa3]"></a>codec_drv_push_state</STRONG> (Thumb, 86 bytes, Stack size 8 bytes, codec_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = codec_drv_push_state &rArr; codec_drv_send_push_state_msg &rArr; codec_send_isr_msg
</UL>
<BR>[Calls]<UL><LI><a href="#[f47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_send_push_state_msg
<LI><a href="#[f74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_check_depop_done
</UL>
<BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_msg_handler
</UL>

<P><STRONG><a name="[e3]"></a>codec_msg_handler</STRONG> (Thumb, 146 bytes, Stack size 24 bytes, codec_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = codec_msg_handler &rArr; codec_drv_sidetone_timer_ctrl &rArr; sys_timer_restart &rArr; sys_hp_timer_list_insert &rArr; hw_timer_restart &rArr; hw_timer_safe_stop &rArr; hw_timer_set_div
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[fa3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_push_state
<LI><a href="#[fa4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_sidetone_mute_ctrl
<LI><a href="#[f83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_sidetone_dvol_gain_ctrl
<LI><a href="#[f81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_sidetone_boost_gain_set
<LI><a href="#[f76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_sidetone_timer_ctrl
<LI><a href="#[f80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_sidetone_clock_ctrl
</UL>
<BR>[Address Reference Count : 1]<UL><LI> codec_driver.o(.text)
</UL>
<P><STRONG><a name="[fa5]"></a>codec_drv_sidetone_config_clear</STRONG> (Thumb, 38 bytes, Stack size 24 bytes, codec_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = codec_drv_sidetone_config_clear &rArr; codec_drv_event_process &rArr; codec_drv_set_sample_rate
</UL>
<BR>[Calls]<UL><LI><a href="#[f86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_config_default
<LI><a href="#[f4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_event_process
</UL>
<BR>[Called By]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_cback
</UL>

<P><STRONG><a name="[ecb]"></a>d2h_data_flush</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, dsp_shm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = d2h_data_flush
</UL>
<BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;voice_dsp_mgr_session_cb
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;record_dsp_mgr_session_cb
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_mgr_hal_data_cb
</UL>

<P><STRONG><a name="[eb6]"></a>d2h_data_length_peek</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, dsp_shm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = d2h_data_length_peek
</UL>
<BR>[Called By]<UL><LI><a href="#[a5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_data_peek
</UL>

<P><STRONG><a name="[fa6]"></a>wr_queue_rcv</STRONG> (Thumb, 148 bytes, Stack size 32 bytes, dsp_shm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = wr_queue_rcv
</UL>
<BR>[Calls]<UL><LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[fab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shm_data_recv
<LI><a href="#[fa9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shm_cmd_recv
</UL>

<P><STRONG><a name="[fa7]"></a>wr_queue_send</STRONG> (Thumb, 158 bytes, Stack size 32 bytes, dsp_shm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = wr_queue_send
</UL>
<BR>[Calls]<UL><LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[faa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shm_data_send
<LI><a href="#[fa8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shm_cmd_send
</UL>

<P><STRONG><a name="[fa8]"></a>shm_cmd_send</STRONG> (Thumb, 112 bytes, Stack size 40 bytes, dsp_shm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = shm_cmd_send &rArr; wr_queue_send
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[fa7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wr_queue_send
</UL>
<BR>[Called By]<UL><LI><a href="#[a4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;h2d_cmd_send
</UL>

<P><STRONG><a name="[fa9]"></a>shm_cmd_recv</STRONG> (Thumb, 72 bytes, Stack size 32 bytes, dsp_shm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = shm_cmd_recv &rArr; wr_queue_rcv
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[fa6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wr_queue_rcv
</UL>
<BR>[Called By]<UL><LI><a href="#[ef9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;d2h_cmd_recv
</UL>

<P><STRONG><a name="[faa]"></a>shm_data_send</STRONG> (Thumb, 96 bytes, Stack size 32 bytes, dsp_shm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = shm_data_send &rArr; wr_queue_send
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[fa7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wr_queue_send
</UL>
<BR>[Called By]<UL><LI><a href="#[eb1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;h2d_data_send
</UL>

<P><STRONG><a name="[fab]"></a>shm_data_recv</STRONG> (Thumb, 70 bytes, Stack size 24 bytes, dsp_shm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = shm_data_recv &rArr; wr_queue_rcv
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[fa6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wr_queue_rcv
</UL>
<BR>[Called By]<UL><LI><a href="#[eb5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;d2h_data_recv
</UL>

<P><STRONG><a name="[a4a]"></a>h2d_cmd_send</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, dsp_shm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = h2d_cmd_send &rArr; shm_cmd_send &rArr; wr_queue_send
</UL>
<BR>[Calls]<UL><LI><a href="#[fa8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shm_cmd_send
</UL>
<BR>[Called By]<UL><LI><a href="#[444]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_probe_dsp_ipc_send_call_status
<LI><a href="#[650]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_probe_dsp_send
<LI><a href="#[f07]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_ipc_download_algo_param
<LI><a href="#[eff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_ipc_voice_prompt_send
<LI><a href="#[ee0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_ipc_h2d_cmd_send
<LI><a href="#[f02]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dipc2_cmd_send
<LI><a href="#[f00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_ipc_action_send
<LI><a href="#[eb8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_ipc_sidetone_set
<LI><a href="#[fb4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shm_enable
</UL>

<P><STRONG><a name="[ef9]"></a>d2h_cmd_recv</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, dsp_shm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = d2h_cmd_recv &rArr; shm_cmd_recv &rArr; wr_queue_rcv
</UL>
<BR>[Calls]<UL><LI><a href="#[fa9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shm_cmd_recv
</UL>
<BR>[Called By]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_ipc_hal_cback
<LI><a href="#[fb4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shm_enable
</UL>

<P><STRONG><a name="[eb1]"></a>h2d_data_send</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, dsp_shm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = h2d_data_send &rArr; shm_data_send &rArr; wr_queue_send
</UL>
<BR>[Calls]<UL><LI><a href="#[faa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shm_data_send
</UL>
<BR>[Called By]<UL><LI><a href="#[e39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_data_send
</UL>

<P><STRONG><a name="[eb5]"></a>d2h_data_recv</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, dsp_shm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = d2h_data_recv &rArr; shm_data_recv &rArr; wr_queue_rcv
</UL>
<BR>[Calls]<UL><LI><a href="#[fab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shm_data_recv
</UL>
<BR>[Called By]<UL><LI><a href="#[a5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_data_recv
</UL>

<P><STRONG><a name="[109c]"></a>shm_io_ctl</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, dsp_shm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = shm_io_ctl
</UL>
<BR>[Called By]<UL><LI><a href="#[f20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_hal_boot
</UL>

<P><STRONG><a name="[fb1]"></a>shm_cfg_run</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, dsp_shm.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[fbb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shm_disable
<LI><a href="#[fb9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shm_reset
<LI><a href="#[fb4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shm_enable
<LI><a href="#[fad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shm_init
</UL>

<P><STRONG><a name="[fb2]"></a>shm_cfg_mem</STRONG> (Thumb, 64 bytes, Stack size 0 bytes, dsp_shm.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[f1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_hal_shut_down
<LI><a href="#[fbb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shm_disable
<LI><a href="#[fb9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shm_reset
<LI><a href="#[fad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shm_init
</UL>

<P><STRONG><a name="[fb3]"></a>shm_cfg_dma</STRONG> (Thumb, 64 bytes, Stack size 0 bytes, dsp_shm.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[fad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shm_init
</UL>

<P><STRONG><a name="[fb6]"></a>shm_cfg_h2d_d2h</STRONG> (Thumb, 78 bytes, Stack size 0 bytes, dsp_shm.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[fbb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shm_disable
<LI><a href="#[fb9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shm_reset
<LI><a href="#[fb4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shm_enable
</UL>

<P><STRONG><a name="[faf]"></a>shm_cfg_dsp_clk</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, dsp_shm.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[f1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_hal_shut_down
<LI><a href="#[fbb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shm_disable
<LI><a href="#[fb9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shm_reset
<LI><a href="#[fad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shm_init
</UL>

<P><STRONG><a name="[fb7]"></a>shm_cfg_core</STRONG> (Thumb, 106 bytes, Stack size 24 bytes, dsp_shm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = shm_cfg_core
</UL>
<BR>[Called By]<UL><LI><a href="#[fbb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shm_disable
<LI><a href="#[fb9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shm_reset
<LI><a href="#[fb4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shm_enable
</UL>

<P><STRONG><a name="[fba]"></a>shm_cfg_asrc</STRONG> (Thumb, 64 bytes, Stack size 0 bytes, dsp_shm.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[f1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_hal_shut_down
<LI><a href="#[f1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_hal_reset
<LI><a href="#[fbb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shm_disable
<LI><a href="#[fb9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shm_reset
</UL>

<P><STRONG><a name="[fb5]"></a>shm_cfg_wdg</STRONG> (Thumb, 64 bytes, Stack size 0 bytes, dsp_shm.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[fbb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shm_disable
<LI><a href="#[fb9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shm_reset
<LI><a href="#[fb4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shm_enable
</UL>

<P><STRONG><a name="[fae]"></a>shm_init_share_queue</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, dsp_shm.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[fad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shm_init
</UL>

<P><STRONG><a name="[fac]"></a>dsp_ram_power_ctrl</STRONG> (Thumb, 144 bytes, Stack size 8 bytes, dsp_shm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = dsp_ram_power_ctrl
</UL>
<BR>[Calls]<UL><LI><a href="#[acb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btaon_fast_update_safe (via Veneer)
<LI><a href="#[6af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btaon_fast_write_safe (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[fad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shm_init
</UL>

<P><STRONG><a name="[fad]"></a>shm_init</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, dsp_shm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = shm_init &rArr; RamVectorTableUpdate &rArr; RamVectorTableUpdate_for_xip_isr
</UL>
<BR>[Calls]<UL><LI><a href="#[ab4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RamVectorTableUpdate
<LI><a href="#[fac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_ram_power_ctrl
<LI><a href="#[fae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shm_init_share_queue
<LI><a href="#[faf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shm_cfg_dsp_clk
<LI><a href="#[fb3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shm_cfg_dma
<LI><a href="#[fb2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shm_cfg_mem
<LI><a href="#[fb1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shm_cfg_run
<LI><a href="#[fb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shm_traceport_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[f20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_hal_boot
</UL>

<P><STRONG><a name="[fb4]"></a>shm_enable</STRONG> (Thumb, 180 bytes, Stack size 152 bytes, dsp_shm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = shm_enable &rArr; h2d_cmd_send &rArr; shm_cmd_send &rArr; wr_queue_send
</UL>
<BR>[Calls]<UL><LI><a href="#[fb8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_module_register_log (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[a4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;h2d_cmd_send
<LI><a href="#[ef9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;d2h_cmd_recv
<LI><a href="#[fb5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shm_cfg_wdg
<LI><a href="#[fb7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shm_cfg_core
<LI><a href="#[fb6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shm_cfg_h2d_d2h
<LI><a href="#[fb1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shm_cfg_run
</UL>
<BR>[Called By]<UL><LI><a href="#[f1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_hal_reset
</UL>

<P><STRONG><a name="[fb9]"></a>shm_reset</STRONG> (Thumb, 152 bytes, Stack size 16 bytes, dsp_shm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = shm_reset &rArr; shm_cfg_core
</UL>
<BR>[Calls]<UL><LI><a href="#[fb5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shm_cfg_wdg
<LI><a href="#[fba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shm_cfg_asrc
<LI><a href="#[fb7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shm_cfg_core
<LI><a href="#[faf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shm_cfg_dsp_clk
<LI><a href="#[fb6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shm_cfg_h2d_d2h
<LI><a href="#[fb2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shm_cfg_mem
<LI><a href="#[fb1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shm_cfg_run
<LI><a href="#[fb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shm_traceport_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[f1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_hal_reset
</UL>

<P><STRONG><a name="[fbb]"></a>shm_disable</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, dsp_shm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = shm_disable &rArr; shm_cfg_core
</UL>
<BR>[Calls]<UL><LI><a href="#[fb5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shm_cfg_wdg
<LI><a href="#[fba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shm_cfg_asrc
<LI><a href="#[fb7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shm_cfg_core
<LI><a href="#[faf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shm_cfg_dsp_clk
<LI><a href="#[fb6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shm_cfg_h2d_d2h
<LI><a href="#[fb2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shm_cfg_mem
<LI><a href="#[fb1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shm_cfg_run
</UL>
<BR>[Called By]<UL><LI><a href="#[f1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_hal_shut_down
</UL>

<P><STRONG><a name="[b08]"></a>flash_nor_set_bp_lv_locked</STRONG> (Thumb, 216 bytes, Stack size 56 bytes, flash_nor_adv_device.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = flash_nor_set_bp_lv_locked &rArr; flash_nor_lock_set_bp_tb_operation &rArr; flash_nor_suspend_all_busy_nodes
</UL>
<BR>[Calls]<UL><LI><a href="#[fbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_nor_get_addr_base (via Veneer)
<LI><a href="#[fbe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_nor_get_bp_all_lv (via Veneer)
<LI><a href="#[fbf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_nor_get_tb_bit (via Veneer)
<LI><a href="#[fbd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_nor_get_flash_size (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[fc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_nor_lock_set_bp_tb_operation (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[924]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_flash_nor_set_bp_lv
</UL>

<P><STRONG><a name="[fc1]"></a>bignum_init</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, bn.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[fc2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uECC_vli_clear
</UL>
<BR>[Called By]<UL><LI><a href="#[fcd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bignum_div
<LI><a href="#[fc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bignum_mul
<LI><a href="#[fc3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bignum_from_int
</UL>

<P><STRONG><a name="[fc3]"></a>bignum_from_int</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, bn.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = bignum_from_int
</UL>
<BR>[Calls]<UL><LI><a href="#[fc1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bignum_init
</UL>
<BR>[Called By]<UL><LI><a href="#[fcd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bignum_div
<LI><a href="#[fc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bignum_mul
</UL>

<P><STRONG><a name="[fc4]"></a>bignum_add</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, bn.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = bignum_add &rArr; uECC_vli_add
</UL>
<BR>[Calls]<UL><LI><a href="#[fc5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uECC_vli_add
</UL>
<BR>[Called By]<UL><LI><a href="#[fc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bignum_mul
</UL>

<P><STRONG><a name="[fc6]"></a>bignum_sub</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, bn.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = bignum_sub &rArr; uECC_vli_sub
</UL>
<BR>[Calls]<UL><LI><a href="#[fc7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uECC_vli_sub
</UL>
<BR>[Called By]<UL><LI><a href="#[fd2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bignum_divmod
<LI><a href="#[fcd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bignum_div
</UL>

<P><STRONG><a name="[fc8]"></a>bignum_mul</STRONG> (Thumb, 104 bytes, Stack size 96 bytes, bn.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = bignum_mul &rArr; bignum_add &rArr; uECC_vli_add
</UL>
<BR>[Calls]<UL><LI><a href="#[fc4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bignum_add
<LI><a href="#[fc3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bignum_from_int
<LI><a href="#[fc1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bignum_init
<LI><a href="#[fc9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lshift_word
</UL>
<BR>[Called By]<UL><LI><a href="#[fd2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bignum_divmod
</UL>

<P><STRONG><a name="[fd1]"></a>bignum_or</STRONG> (Thumb, 26 bytes, Stack size 12 bytes, bn.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = bignum_or
</UL>
<BR>[Called By]<UL><LI><a href="#[fcd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bignum_div
</UL>

<P><STRONG><a name="[fcf]"></a>bignum_cmp</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, bn.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = bignum_cmp
</UL>
<BR>[Called By]<UL><LI><a href="#[fcd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bignum_div
</UL>

<P><STRONG><a name="[fca]"></a>bignum_is_zero</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, bn.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = bignum_is_zero &rArr; uECC_vli_isZero
</UL>
<BR>[Calls]<UL><LI><a href="#[b38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uECC_vli_isZero
</UL>
<BR>[Called By]<UL><LI><a href="#[fcd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bignum_div
</UL>

<P><STRONG><a name="[fcb]"></a>bignum_assign</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, bn.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = bignum_assign &rArr; uECC_vli_set
</UL>
<BR>[Calls]<UL><LI><a href="#[fcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uECC_vli_set
</UL>
<BR>[Called By]<UL><LI><a href="#[fcd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bignum_div
</UL>

<P><STRONG><a name="[fcd]"></a>bignum_div</STRONG> (Thumb, 160 bytes, Stack size 120 bytes, bn.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = bignum_div &rArr; bignum_sub &rArr; uECC_vli_sub
</UL>
<BR>[Calls]<UL><LI><a href="#[fcb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bignum_assign
<LI><a href="#[fca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bignum_is_zero
<LI><a href="#[fcf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bignum_cmp
<LI><a href="#[fd1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bignum_or
<LI><a href="#[fc6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bignum_sub
<LI><a href="#[fc3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bignum_from_int
<LI><a href="#[fc1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bignum_init
<LI><a href="#[fce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lshift_one_bit
<LI><a href="#[fd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_rshift_one_bit
</UL>
<BR>[Called By]<UL><LI><a href="#[fd2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bignum_divmod
</UL>

<P><STRONG><a name="[fd2]"></a>bignum_divmod</STRONG> (Thumb, 40 bytes, Stack size 56 bytes, bn.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 204<LI>Call Chain = bignum_divmod &rArr; bignum_div &rArr; bignum_sub &rArr; uECC_vli_sub
</UL>
<BR>[Calls]<UL><LI><a href="#[fcd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bignum_div
<LI><a href="#[fc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bignum_mul
<LI><a href="#[fc6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bignum_sub
</UL>
<BR>[Called By]<UL><LI><a href="#[b39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bignum_mod
</UL>

<P><STRONG><a name="[b39]"></a>bignum_mod</STRONG> (Thumb, 16 bytes, Stack size 40 bytes, bn.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 244<LI>Call Chain = bignum_mod &rArr; bignum_divmod &rArr; bignum_div &rArr; bignum_sub &rArr; uECC_vli_sub
</UL>
<BR>[Calls]<UL><LI><a href="#[fd2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bignum_divmod
</UL>
<BR>[Called By]<UL><LI><a href="#[785]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_uecc_compute_public_key
</UL>

<P><STRONG><a name="[24b]"></a>uEcc_rng_function</STRONG> (Thumb, 38 bytes, Stack size 24 bytes, uecc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = uEcc_rng_function
</UL>
<BR>[Calls]<UL><LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_random (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> uecc.o(.data)
</UL>
<P><STRONG><a name="[fc2]"></a>uECC_vli_clear</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, uecc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[fdd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uECC_vli_modInv
<LI><a href="#[fe4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XYcZ_initial_double
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vli_mmod_fast_secp160r1
<LI><a href="#[fc1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bignum_init
</UL>

<P><STRONG><a name="[b38]"></a>uECC_vli_isZero</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, uecc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = uECC_vli_isZero
</UL>
<BR>[Called By]<UL><LI><a href="#[785]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_uecc_compute_public_key
<LI><a href="#[b3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uECC_compute_public_key
<LI><a href="#[fe5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uECC_generate_random_int
<LI><a href="#[fdd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uECC_vli_modInv
<LI><a href="#[fd3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uECC_vli_cmp
<LI><a href="#[fe7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EccPoint_compute_public_key
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;double_jacobian_default
<LI><a href="#[fca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bignum_is_zero
</UL>

<P><STRONG><a name="[fde]"></a>uECC_vli_testBit</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, uecc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[fe7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EccPoint_compute_public_key
<LI><a href="#[fe3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EccPoint_mult
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;double_jacobian_default
</UL>

<P><STRONG><a name="[fe6]"></a>uECC_vli_numBits</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, uecc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[fe5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uECC_generate_random_int
</UL>

<P><STRONG><a name="[fcc]"></a>uECC_vli_set</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, uecc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = uECC_vli_set
</UL>
<BR>[Called By]<UL><LI><a href="#[fdd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uECC_vli_modInv
<LI><a href="#[fe4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XYcZ_initial_double
<LI><a href="#[fe3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EccPoint_mult
<LI><a href="#[fe2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XYcZ_addC
<LI><a href="#[fe1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XYcZ_add
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vli_mmod_fast_secp256r1
<LI><a href="#[fdf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;omega_mult_secp160r1
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;double_jacobian_default
<LI><a href="#[fcb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bignum_assign
</UL>

<P><STRONG><a name="[fc7]"></a>uECC_vli_sub</STRONG> (Thumb, 54 bytes, Stack size 20 bytes, uecc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = uECC_vli_sub
</UL>
<BR>[Called By]<UL><LI><a href="#[fdd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uECC_vli_modInv
<LI><a href="#[fd8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uECC_vli_modSub
<LI><a href="#[fd6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uECC_vli_modAdd
<LI><a href="#[fd3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uECC_vli_cmp
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vli_mmod_fast_secp256r1
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vli_mmod_fast_secp160r1
<LI><a href="#[fc6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bignum_sub
</UL>

<P><STRONG><a name="[fd3]"></a>uECC_vli_cmp</STRONG> (Thumb, 52 bytes, Stack size 44 bytes, uecc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = uECC_vli_cmp &rArr; uECC_vli_sub
</UL>
<BR>[Calls]<UL><LI><a href="#[b38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uECC_vli_isZero
<LI><a href="#[fc7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uECC_vli_sub
</UL>
<BR>[Called By]<UL><LI><a href="#[fe5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uECC_generate_random_int
</UL>

<P><STRONG><a name="[fdc]"></a>uECC_vli_rshift1</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, uecc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[fdd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uECC_vli_modInv
<LI><a href="#[fdf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;omega_mult_secp160r1
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;double_jacobian_default
<LI><a href="#[fdb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vli_modInv_update
</UL>

<P><STRONG><a name="[fc5]"></a>uECC_vli_add</STRONG> (Thumb, 54 bytes, Stack size 20 bytes, uecc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = uECC_vli_add
</UL>
<BR>[Called By]<UL><LI><a href="#[fdd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uECC_vli_modInv
<LI><a href="#[fd8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uECC_vli_modSub
<LI><a href="#[fd6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uECC_vli_modAdd
<LI><a href="#[fe7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EccPoint_compute_public_key
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vli_mmod_fast_secp256r1
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vli_mmod_fast_secp160r1
<LI><a href="#[fdf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;omega_mult_secp160r1
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;double_jacobian_default
<LI><a href="#[fdb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vli_modInv_update
<LI><a href="#[fc4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bignum_add
</UL>

<P><STRONG><a name="[fd4]"></a>uECC_vli_mult</STRONG> (Thumb, 178 bytes, Stack size 56 bytes, uecc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = uECC_vli_mult &rArr; muladd
</UL>
<BR>[Calls]<UL><LI><a href="#[fd5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;muladd
</UL>
<BR>[Called By]<UL><LI><a href="#[fd9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uECC_vli_modMult_fast
</UL>

<P><STRONG><a name="[fd6]"></a>uECC_vli_modAdd</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, uecc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = uECC_vli_modAdd &rArr; uECC_vli_sub
</UL>
<BR>[Calls]<UL><LI><a href="#[fd7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uECC_vli_cmp_unsafe
<LI><a href="#[fc7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uECC_vli_sub
<LI><a href="#[fc5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uECC_vli_add
</UL>
<BR>[Called By]<UL><LI><a href="#[fe2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XYcZ_addC
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;x_side_default
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;double_jacobian_default
</UL>

<P><STRONG><a name="[fd8]"></a>uECC_vli_modSub</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, uecc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = uECC_vli_modSub &rArr; uECC_vli_sub
</UL>
<BR>[Calls]<UL><LI><a href="#[fc7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uECC_vli_sub
<LI><a href="#[fc5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uECC_vli_add
</UL>
<BR>[Called By]<UL><LI><a href="#[fe3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EccPoint_mult
<LI><a href="#[fe2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XYcZ_addC
<LI><a href="#[fe1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XYcZ_add
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;x_side_default
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;double_jacobian_default
</UL>

<P><STRONG><a name="[fd9]"></a>uECC_vli_modMult_fast</STRONG> (Thumb, 32 bytes, Stack size 80 bytes, uecc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 156<LI>Call Chain = uECC_vli_modMult_fast &rArr; uECC_vli_mult &rArr; muladd
</UL>
<BR>[Calls]<UL><LI><a href="#[fd4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uECC_vli_mult
</UL>
<BR>[Called By]<UL><LI><a href="#[fda]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uECC_vli_modSquare_fast
<LI><a href="#[fe3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EccPoint_mult
<LI><a href="#[fe2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XYcZ_addC
<LI><a href="#[fe1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XYcZ_add
<LI><a href="#[fe0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apply_z
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;x_side_default
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;double_jacobian_default
</UL>

<P><STRONG><a name="[fda]"></a>uECC_vli_modSquare_fast</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, uecc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 156<LI>Call Chain = uECC_vli_modSquare_fast &rArr; uECC_vli_modMult_fast &rArr; uECC_vli_mult &rArr; muladd
</UL>
<BR>[Calls]<UL><LI><a href="#[fd9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uECC_vli_modMult_fast
</UL>
<BR>[Called By]<UL><LI><a href="#[fe2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XYcZ_addC
<LI><a href="#[fe1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XYcZ_add
<LI><a href="#[fe0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apply_z
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;x_side_default
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;double_jacobian_default
</UL>

<P><STRONG><a name="[fdd]"></a>uECC_vli_modInv</STRONG> (Thumb, 270 bytes, Stack size 152 bytes, uecc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 188<LI>Call Chain = uECC_vli_modInv &rArr; vli_modInv_update &rArr; uECC_vli_add
</UL>
<BR>[Calls]<UL><LI><a href="#[b38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uECC_vli_isZero
<LI><a href="#[fdc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uECC_vli_rshift1
<LI><a href="#[fd7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uECC_vli_cmp_unsafe
<LI><a href="#[fdb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vli_modInv_update
<LI><a href="#[fc7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uECC_vli_sub
<LI><a href="#[fcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uECC_vli_set
<LI><a href="#[fc2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uECC_vli_clear
<LI><a href="#[fc5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uECC_vli_add
</UL>
<BR>[Called By]<UL><LI><a href="#[fe3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EccPoint_mult
</UL>

<P><STRONG><a name="[b36]"></a>uECC_secp160r1</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, uecc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[b34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uecc_curve_select
</UL>

<P><STRONG><a name="[b35]"></a>uECC_secp256r1</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, uecc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[b34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uecc_curve_select
</UL>

<P><STRONG><a name="[fe5]"></a>uECC_generate_random_int</STRONG> (Thumb, 106 bytes, Stack size 40 bytes, uecc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = uECC_generate_random_int &rArr; uECC_vli_cmp &rArr; uECC_vli_sub
</UL>
<BR>[Calls]<UL><LI><a href="#[b38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uECC_vli_isZero
<LI><a href="#[fd3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uECC_vli_cmp
<LI><a href="#[fe6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uECC_vli_numBits
</UL>
<BR>[Called By]<UL><LI><a href="#[fe7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EccPoint_compute_public_key
</UL>

<P><STRONG><a name="[b3b]"></a>uECC_compute_public_key</STRONG> (Thumb, 102 bytes, Stack size 24 bytes, uecc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 652<LI>Call Chain = uECC_compute_public_key &rArr; EccPoint_compute_public_key &rArr; EccPoint_mult &rArr; XYcZ_addC &rArr; uECC_vli_modSquare_fast &rArr; uECC_vli_modMult_fast &rArr; uECC_vli_mult &rArr; muladd
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[b38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uECC_vli_isZero
<LI><a href="#[fe7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EccPoint_compute_public_key
</UL>
<BR>[Called By]<UL><LI><a href="#[785]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_uecc_compute_public_key
</UL>

<P><STRONG><a name="[fe8]"></a>hmac_sha256_init</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, hmac.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[fef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hmac_sha256_crypt
</UL>

<P><STRONG><a name="[fe9]"></a>hmac_sha256_starts</STRONG> (Thumb, 130 bytes, Stack size 48 bytes, hmac.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 380<LI>Call Chain = hmac_sha256_starts &rArr; mbedtls_sha256_update &rArr; mbedtls_sha256_update_ret &rArr; mbedtls_internal_sha256_process
</UL>
<BR>[Calls]<UL><LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
<LI><a href="#[336]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset (via Veneer)
<LI><a href="#[feb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbedtls_sha256_update
<LI><a href="#[fea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbedtls_sha256_starts
<LI><a href="#[fec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbedtls_sha256_finish
</UL>
<BR>[Called By]<UL><LI><a href="#[fef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hmac_sha256_crypt
</UL>

<P><STRONG><a name="[fed]"></a>hmac_sha256_update</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, hmac.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 340<LI>Call Chain = hmac_sha256_update &rArr; mbedtls_sha256_update &rArr; mbedtls_sha256_update_ret &rArr; mbedtls_internal_sha256_process
</UL>
<BR>[Calls]<UL><LI><a href="#[feb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbedtls_sha256_update
</UL>
<BR>[Called By]<UL><LI><a href="#[fef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hmac_sha256_crypt
</UL>

<P><STRONG><a name="[fee]"></a>hmac_sha256_finish</STRONG> (Thumb, 60 bytes, Stack size 48 bytes, hmac.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 380<LI>Call Chain = hmac_sha256_finish &rArr; mbedtls_sha256_update &rArr; mbedtls_sha256_update_ret &rArr; mbedtls_internal_sha256_process
</UL>
<BR>[Calls]<UL><LI><a href="#[feb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbedtls_sha256_update
<LI><a href="#[fea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbedtls_sha256_starts
<LI><a href="#[fec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbedtls_sha256_finish
</UL>
<BR>[Called By]<UL><LI><a href="#[fef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hmac_sha256_crypt
</UL>

<P><STRONG><a name="[fef]"></a>hmac_sha256_crypt</STRONG> (Thumb, 70 bytes, Stack size 264 bytes, hmac.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 644<LI>Call Chain = hmac_sha256_crypt &rArr; hmac_sha256_finish &rArr; mbedtls_sha256_update &rArr; mbedtls_sha256_update_ret &rArr; mbedtls_internal_sha256_process
</UL>
<BR>[Calls]<UL><LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
<LI><a href="#[fee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hmac_sha256_finish
<LI><a href="#[fed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hmac_sha256_update
<LI><a href="#[fe9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hmac_sha256_starts
<LI><a href="#[fe8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hmac_sha256_init
</UL>
<BR>[Called By]<UL><LI><a href="#[cac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sha256_hkdf
</UL>

<P><STRONG><a name="[cac]"></a>sha256_hkdf</STRONG> (Thumb, 178 bytes, Stack size 136 bytes, hmac.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 780<LI>Call Chain = sha256_hkdf &rArr; hmac_sha256_crypt &rArr; hmac_sha256_finish &rArr; mbedtls_sha256_update &rArr; mbedtls_sha256_update_ret &rArr; mbedtls_internal_sha256_process
</UL>
<BR>[Calls]<UL><LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr (via Veneer)
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[fef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hmac_sha256_crypt
</UL>
<BR>[Called By]<UL><LI><a href="#[7c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_gfps_notify_connection_status
<LI><a href="#[cb3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_sass_get_encrypt_conn_status
</UL>

<P><STRONG><a name="[ff0]"></a>gattc_storage_get_srv_instance_id</STRONG> (Thumb, 102 bytes, Stack size 32 bytes, bt_gattc_storage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = gattc_storage_get_srv_instance_id
</UL>
<BR>[Calls]<UL><LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[b98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_storage_add_secondary_service
<LI><a href="#[b9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_storage_add_primary_service
</UL>

<P><STRONG><a name="[ff1]"></a>gattc_storage_get_char_instance_id</STRONG> (Thumb, 96 bytes, Stack size 40 bytes, bt_gattc_storage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = gattc_storage_get_char_instance_id
</UL>
<BR>[Calls]<UL><LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[ba0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_storage_add_char
</UL>

<P><STRONG><a name="[b9e]"></a>gattc_storage_add_primary_service</STRONG> (Thumb, 258 bytes, Stack size 48 bytes, bt_gattc_storage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = gattc_storage_add_primary_service &rArr; gattc_storage_get_srv_instance_id
</UL>
<BR>[Calls]<UL><LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calloc
<LI><a href="#[b79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_spec_client_find_by_uuid
<LI><a href="#[ff0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_storage_get_srv_instance_id
</UL>
<BR>[Called By]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_discover_result_ext_cb
</UL>

<P><STRONG><a name="[b98]"></a>gattc_storage_add_secondary_service</STRONG> (Thumb, 484 bytes, Stack size 72 bytes, bt_gattc_storage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = gattc_storage_add_secondary_service &rArr; gattc_storage_get_srv_instance_id
</UL>
<BR>[Calls]<UL><LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calloc
<LI><a href="#[b79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_spec_client_find_by_uuid
<LI><a href="#[ff0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_storage_get_srv_instance_id
</UL>
<BR>[Called By]<UL><LI><a href="#[b96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_dis_next_service
</UL>

<P><STRONG><a name="[b9f]"></a>gattc_storage_add_include</STRONG> (Thumb, 180 bytes, Stack size 32 bytes, bt_gattc_storage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = gattc_storage_add_include &rArr; calloc
</UL>
<BR>[Calls]<UL><LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calloc
</UL>
<BR>[Called By]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_discover_result_ext_cb
</UL>

<P><STRONG><a name="[ba0]"></a>gattc_storage_add_char</STRONG> (Thumb, 176 bytes, Stack size 16 bytes, bt_gattc_storage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = gattc_storage_add_char &rArr; gattc_storage_get_char_instance_id
</UL>
<BR>[Calls]<UL><LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calloc
<LI><a href="#[ff1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_storage_get_char_instance_id
</UL>
<BR>[Called By]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_discover_result_ext_cb
</UL>

<P><STRONG><a name="[b8a]"></a>gattc_storage_srv_list_release</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, bt_gattc_storage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = gattc_storage_srv_list_release
</UL>
<BR>[Calls]<UL><LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>
<BR>[Called By]<UL><LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_start_discovery_all
<LI><a href="#[b9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_storage_srv_list_gen
<LI><a href="#[b8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_storage_load
<LI><a href="#[b6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_handle_conn_state_evt
</UL>

<P><STRONG><a name="[b9d]"></a>gattc_storage_dis_list_release</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, bt_gattc_storage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = gattc_storage_dis_list_release
</UL>
<BR>[Calls]<UL><LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>
<BR>[Called By]<UL><LI><a href="#[b9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_storage_srv_list_gen
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_discover_state_ext_cb
<LI><a href="#[b6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_handle_conn_state_evt
</UL>

<P><STRONG><a name="[b9b]"></a>gattc_storage_srv_list_gen</STRONG> (Thumb, 838 bytes, Stack size 48 bytes, bt_gattc_storage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = gattc_storage_srv_list_gen &rArr; gattc_storage_dis_list_release
</UL>
<BR>[Calls]<UL><LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calloc
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[b8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_storage_srv_list_release
<LI><a href="#[b9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_storage_dis_list_release
</UL>
<BR>[Called By]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_discover_state_ext_cb
</UL>

<P><STRONG><a name="[b8c]"></a>gattc_storage_print</STRONG> (Thumb, 730 bytes, Stack size 56 bytes, bt_gattc_storage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = gattc_storage_print
</UL>
<BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_start_discovery_all
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_discover_state_ext_cb
</UL>

<P><STRONG><a name="[b89]"></a>gattc_storage_get_srv_num</STRONG> (Thumb, 100 bytes, Stack size 32 bytes, bt_gattc_storage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = gattc_storage_get_srv_num
</UL>
<BR>[Calls]<UL><LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[b88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_send_dis_result
</UL>

<P><STRONG><a name="[b80]"></a>gattc_storage_find_srv_by_handle</STRONG> (Thumb, 112 bytes, Stack size 24 bytes, bt_gattc_storage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = gattc_storage_find_srv_by_handle
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[b93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_storage_check_prop
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_notify_ind_ext_cb
<LI><a href="#[b85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_send_cccd_cfg_result
<LI><a href="#[b84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_handle_write_result
<LI><a href="#[b83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_handle_read_uuid_result
<LI><a href="#[b7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_handle_read_result
</UL>

<P><STRONG><a name="[b81]"></a>gattc_storage_find_char_desc</STRONG> (Thumb, 176 bytes, Stack size 32 bytes, bt_gattc_storage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = gattc_storage_find_char_desc
</UL>
<BR>[Calls]<UL><LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[b93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_storage_check_prop
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_notify_ind_ext_cb
<LI><a href="#[b85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_send_cccd_cfg_result
<LI><a href="#[b84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_handle_write_result
<LI><a href="#[b83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_handle_read_uuid_result
<LI><a href="#[b7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_handle_read_result
</UL>

<P><STRONG><a name="[b8f]"></a>gattc_storage_find_srv_by_uuid</STRONG> (Thumb, 116 bytes, Stack size 24 bytes, bt_gattc_storage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = gattc_storage_find_srv_by_uuid
</UL>
<BR>[Calls]<UL><LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_get_char_prop
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_find_char_handle
<LI><a href="#[baa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_find_include_srv_by_primary
<LI><a href="#[b91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_check_cccd_enabled
<LI><a href="#[b8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_enable_char_cccd
<LI><a href="#[ff7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_service_get_char_info
</UL>

<P><STRONG><a name="[ba9]"></a>gattc_storage_find_char_by_uuid</STRONG> (Thumb, 154 bytes, Stack size 32 bytes, bt_gattc_storage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = gattc_storage_find_char_by_uuid
</UL>
<BR>[Calls]<UL><LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_get_char_prop
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_find_char_handle
<LI><a href="#[ff7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_service_get_char_info
</UL>

<P><STRONG><a name="[b93]"></a>gattc_storage_check_prop</STRONG> (Thumb, 72 bytes, Stack size 48 bytes, bt_gattc_storage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = gattc_storage_check_prop &rArr; gattc_storage_find_char_desc
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[b80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_storage_find_srv_by_handle
<LI><a href="#[b81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_storage_find_char_desc
</UL>
<BR>[Called By]<UL><LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_write
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_read
</UL>

<P><STRONG><a name="[b82]"></a>att_data_covert_to_uuid</STRONG> (Thumb, 94 bytes, Stack size 8 bytes, bt_gattc_storage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = att_data_covert_to_uuid
</UL>
<BR>[Calls]<UL><LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_notify_ind_ext_cb
<LI><a href="#[b85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_send_cccd_cfg_result
<LI><a href="#[b84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_handle_write_result
<LI><a href="#[b83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_handle_read_uuid_result
<LI><a href="#[b7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_handle_read_result
</UL>

<P><STRONG><a name="[b8b]"></a>gattc_storage_load</STRONG> (Thumb, 800 bytes, Stack size 104 bytes, bt_gattc_storage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = gattc_storage_load &rArr; gatt_spec_client_find_by_uuid
</UL>
<BR>[Calls]<UL><LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[ff2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_chann_get_addr
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calloc
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[b8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_storage_srv_list_release
<LI><a href="#[b79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_spec_client_find_by_uuid
</UL>
<BR>[Called By]<UL><LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_start_discovery_all
</UL>

<P><STRONG><a name="[b9c]"></a>gattc_storage_write</STRONG> (Thumb, 166 bytes, Stack size 48 bytes, bt_gattc_storage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = gattc_storage_write
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[ff2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_chann_get_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_discover_state_ext_cb
</UL>

<P><STRONG><a name="[b92]"></a>gattc_get_cccd_data</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, bt_gattc_storage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gattc_get_cccd_data
</UL>
<BR>[Called By]<UL><LI><a href="#[b91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_check_cccd_enabled
</UL>

<P><STRONG><a name="[ff3]"></a>gattc_start_cccd_timer</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, bt_gattc_storage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = gattc_start_cccd_timer &rArr; sys_timer_restart &rArr; sys_hp_timer_list_insert &rArr; hw_timer_restart &rArr; hw_timer_safe_stop &rArr; hw_timer_set_div
</UL>
<BR>[Calls]<UL><LI><a href="#[9b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_start
<LI><a href="#[9b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_restart
<LI><a href="#[9b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_create
</UL>
<BR>[Called By]<UL><LI><a href="#[ba1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_set_cccd_data
</UL>

<P><STRONG><a name="[ba1]"></a>gattc_set_cccd_data</STRONG> (Thumb, 110 bytes, Stack size 24 bytes, bt_gattc_storage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = gattc_set_cccd_data &rArr; gattc_start_cccd_timer &rArr; sys_timer_restart &rArr; sys_hp_timer_list_insert &rArr; hw_timer_restart &rArr; hw_timer_safe_stop &rArr; hw_timer_set_div
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[ff3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_start_cccd_timer
</UL>
<BR>[Called By]<UL><LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_write_result_ext_cb
</UL>

<P><STRONG><a name="[ff4]"></a>gatt_service_save_data</STRONG> (Thumb, 68 bytes, Stack size 40 bytes, gatt_service_client.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = gatt_service_save_data
</UL>
<BR>[Calls]<UL><LI><a href="#[ff2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_chann_get_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[ff8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_service_send_info
</UL>

<P><STRONG><a name="[ff5]"></a>gatt_service_load_data</STRONG> (Thumb, 72 bytes, Stack size 40 bytes, gatt_service_client.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = gatt_service_load_data
</UL>
<BR>[Calls]<UL><LI><a href="#[ff2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_chann_get_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_cbs
</UL>

<P><STRONG><a name="[ff6]"></a>gatt_client_write_client_supported_feature</STRONG> (Thumb, 102 bytes, Stack size 72 bytes, gatt_service_client.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = gatt_client_write_client_supported_feature &rArr; gatt_client_write &rArr; gattc_storage_check_prop &rArr; gattc_storage_find_char_desc
</UL>
<BR>[Calls]<UL><LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_write
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_find_char_handle
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_cbs
</UL>

<P><STRONG><a name="[ff7]"></a>gatt_service_get_char_info</STRONG> (Thumb, 214 bytes, Stack size 96 bytes, gatt_service_client.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = gatt_service_get_char_info &rArr; gatt_client_enable_srv_cccd &rArr; gatt_client_enable_char_cccd &rArr; gatt_client_check_req &rArr; gatt_client_execute_req
</UL>
<BR>[Calls]<UL><LI><a href="#[b8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_storage_find_srv_by_uuid
<LI><a href="#[ba9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_storage_find_char_by_uuid
<LI><a href="#[b91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_check_cccd_enabled
<LI><a href="#[bac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_enable_srv_cccd
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_cbs
</UL>

<P><STRONG><a name="[ff8]"></a>gatt_service_send_info</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, gatt_service_client.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = gatt_service_send_info &rArr; gatt_client_is_load_from_ftl &rArr; gatt_client_check_link_int &rArr; gatt_client_find
</UL>
<BR>[Calls]<UL><LI><a href="#[bab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_is_load_from_ftl
<LI><a href="#[ff4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_service_save_data
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_cbs
</UL>

<P><STRONG><a name="[e7]"></a>gatt_client_cbs</STRONG> (Thumb, 556 bytes, Stack size 40 bytes, gatt_service_client.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = gatt_client_cbs &rArr; gatt_service_get_char_info &rArr; gatt_client_enable_srv_cccd &rArr; gatt_client_enable_char_cccd &rArr; gatt_client_check_req &rArr; gatt_client_execute_req
</UL>
<BR>[Calls]<UL><LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_read
<LI><a href="#[b76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_check_link_int
<LI><a href="#[ff8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_service_send_info
<LI><a href="#[ff5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_service_load_data
<LI><a href="#[ff7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_service_get_char_info
<LI><a href="#[ff6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_write_client_supported_feature
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gatt_service_client.o(.text)
</UL>
<P><STRONG><a name="[ba8]"></a>gatt_service_add</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, gatt_service_client.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = gatt_service_add &rArr; gatt_client_spec_register &rArr; gatt_spec_client_find_by_uuid
</UL>
<BR>[Calls]<UL><LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_spec_register
</UL>
<BR>[Called By]<UL><LI><a href="#[ba3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_init
</UL>

<P><STRONG><a name="[ffb]"></a>imp_ftl_save</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, bt_bond_ftl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = imp_ftl_save
</UL>
<BR>[Called By]<UL><LI><a href="#[be9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_save_le_remote_ltk
<LI><a href="#[bf2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_save_le_remote_irk
<LI><a href="#[be7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_save_le_remote_bd
<LI><a href="#[be8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_save_le_local_ltk
<LI><a href="#[bea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_clear_le_remote_irk
<LI><a href="#[bdc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_save_cccd
<LI><a href="#[bdf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_add_cccd
<LI><a href="#[bf6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_save_legacy_remote_bd
<LI><a href="#[bfb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_save_legacy_link_key
<LI><a href="#[ffa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_save_bond_priority
</UL>

<P><STRONG><a name="[ff9]"></a>imp_ftl_load</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, bt_bond_ftl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = imp_ftl_load
</UL>
<BR>[Calls]<UL><LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[ffe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_read_cccd_length
<LI><a href="#[be4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_load_le_remote_ltk
<LI><a href="#[be5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_load_le_remote_irk
<LI><a href="#[be1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_load_le_remote_bd
<LI><a href="#[be3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_load_le_local_ltk
<LI><a href="#[bdd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_load_cccd
<LI><a href="#[bf8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_load_legacy_remote_bd
<LI><a href="#[bfc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_load_legacy_link_key
<LI><a href="#[ffc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_load_bond_priority
</UL>

<P><STRONG><a name="[ffa]"></a>ftl_save_bond_priority</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, bt_bond_ftl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ftl_save_bond_priority &rArr; imp_ftl_save
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[ffb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;imp_ftl_save
</UL>
<BR>[Called By]<UL><LI><a href="#[bf1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_set_high_priority
<LI><a href="#[bf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_priority_queue_delete
<LI><a href="#[bee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_priority_queue_clear
<LI><a href="#[bf3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_priority_queue_add
</UL>

<P><STRONG><a name="[ffc]"></a>ftl_load_bond_priority</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, bt_bond_ftl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ftl_load_bond_priority &rArr; imp_ftl_load
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[ff9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;imp_ftl_load
</UL>
<BR>[Called By]<UL><LI><a href="#[bed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_priority_queue_init
</UL>

<P><STRONG><a name="[ffd]"></a>ftl_get_common_block_offset</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, bt_bond_ftl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ftl_get_common_block_offset
</UL>
<BR>[Called By]<UL><LI><a href="#[ffe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_read_cccd_length
<LI><a href="#[bdc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_save_cccd
<LI><a href="#[bdd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_load_cccd
<LI><a href="#[bdf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_add_cccd
</UL>

<P><STRONG><a name="[be7]"></a>ftl_save_le_remote_bd</STRONG> (Thumb, 108 bytes, Stack size 48 bytes, bt_bond_ftl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = ftl_save_le_remote_bd &rArr; imp_ftl_save
</UL>
<BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[ffb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;imp_ftl_save
</UL>
<BR>[Called By]<UL><LI><a href="#[be6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_le_delete_key_entry
<LI><a href="#[bc2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_le_set_bond_state
<LI><a href="#[bc5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_le_save_key
</UL>

<P><STRONG><a name="[be1]"></a>ftl_load_le_remote_bd</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, bt_bond_ftl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = ftl_load_le_remote_bd &rArr; imp_ftl_load
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[ff9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;imp_ftl_load
</UL>
<BR>[Called By]<UL><LI><a href="#[be0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_le_key_entry_init
</UL>

<P><STRONG><a name="[be8]"></a>ftl_save_le_local_ltk</STRONG> (Thumb, 72 bytes, Stack size 24 bytes, bt_bond_ftl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ftl_save_le_local_ltk &rArr; imp_ftl_save
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[ffb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;imp_ftl_save
</UL>
<BR>[Called By]<UL><LI><a href="#[be6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_le_delete_key_entry
<LI><a href="#[bc5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_le_save_key
</UL>

<P><STRONG><a name="[be3]"></a>ftl_load_le_local_ltk</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, bt_bond_ftl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = ftl_load_le_local_ltk &rArr; imp_ftl_load
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[ff9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;imp_ftl_load
</UL>
<BR>[Called By]<UL><LI><a href="#[8ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_le_get_dev_ltk
<LI><a href="#[be0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_le_key_entry_init
<LI><a href="#[bc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_le_get_key
</UL>

<P><STRONG><a name="[be9]"></a>ftl_save_le_remote_ltk</STRONG> (Thumb, 72 bytes, Stack size 24 bytes, bt_bond_ftl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ftl_save_le_remote_ltk &rArr; imp_ftl_save
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[ffb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;imp_ftl_save
</UL>
<BR>[Called By]<UL><LI><a href="#[be6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_le_delete_key_entry
<LI><a href="#[bc5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_le_save_key
</UL>

<P><STRONG><a name="[be4]"></a>ftl_load_le_remote_ltk</STRONG> (Thumb, 70 bytes, Stack size 24 bytes, bt_bond_ftl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = ftl_load_le_remote_ltk &rArr; imp_ftl_load
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[ff9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;imp_ftl_load
</UL>
<BR>[Called By]<UL><LI><a href="#[8ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_le_get_dev_ltk
<LI><a href="#[be0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_le_key_entry_init
<LI><a href="#[bc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_le_get_key
</UL>

<P><STRONG><a name="[bf2]"></a>ftl_save_le_remote_irk</STRONG> (Thumb, 70 bytes, Stack size 24 bytes, bt_bond_ftl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ftl_save_le_remote_irk &rArr; imp_ftl_save
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[ffb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;imp_ftl_save
</UL>
<BR>[Called By]<UL><LI><a href="#[bc5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_le_save_key
</UL>

<P><STRONG><a name="[bea]"></a>ftl_clear_le_remote_irk</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, bt_bond_ftl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ftl_clear_le_remote_irk &rArr; imp_ftl_save
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[ffb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;imp_ftl_save
</UL>
<BR>[Called By]<UL><LI><a href="#[be6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_le_delete_key_entry
</UL>

<P><STRONG><a name="[be5]"></a>ftl_load_le_remote_irk</STRONG> (Thumb, 70 bytes, Stack size 24 bytes, bt_bond_ftl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = ftl_load_le_remote_irk &rArr; imp_ftl_load
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[ff9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;imp_ftl_load
</UL>
<BR>[Called By]<UL><LI><a href="#[be0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_le_key_entry_init
<LI><a href="#[bc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_le_get_key
<LI><a href="#[bc7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_le_find_entry_by_aes
</UL>

<P><STRONG><a name="[bdc]"></a>ftl_save_cccd</STRONG> (Thumb, 86 bytes, Stack size 32 bytes, bt_bond_ftl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = ftl_save_cccd &rArr; ftl_get_common_block_offset
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[ffd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_get_common_block_offset
<LI><a href="#[ffb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;imp_ftl_save
</UL>
<BR>[Called By]<UL><LI><a href="#[bdb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_remove
<LI><a href="#[bcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_set_cccd_data
</UL>

<P><STRONG><a name="[bdf]"></a>ftl_add_cccd</STRONG> (Thumb, 122 bytes, Stack size 40 bytes, bt_bond_ftl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = ftl_add_cccd &rArr; ftl_get_common_block_offset
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[ffd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_get_common_block_offset
<LI><a href="#[ffb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;imp_ftl_save
</UL>
<BR>[Called By]<UL><LI><a href="#[bd5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_set_cccd_pending
<LI><a href="#[bcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_set_cccd_data
</UL>

<P><STRONG><a name="[ffe]"></a>ftl_read_cccd_length</STRONG> (Thumb, 102 bytes, Stack size 32 bytes, bt_bond_ftl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = ftl_read_cccd_length &rArr; imp_ftl_load
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[ffd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_get_common_block_offset
<LI><a href="#[ff9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;imp_ftl_load
</UL>
<BR>[Called By]<UL><LI><a href="#[bdd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_load_cccd
</UL>

<P><STRONG><a name="[bdd]"></a>ftl_load_cccd</STRONG> (Thumb, 102 bytes, Stack size 32 bytes, bt_bond_ftl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = ftl_load_cccd &rArr; ftl_read_cccd_length &rArr; imp_ftl_load
</UL>
<BR>[Calls]<UL><LI><a href="#[ffe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_read_cccd_length
<LI><a href="#[ffd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_get_common_block_offset
<LI><a href="#[ff9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;imp_ftl_load
</UL>
<BR>[Called By]<UL><LI><a href="#[bcd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_get_cccd_data
</UL>

<P><STRONG><a name="[beb]"></a>ftl_le_storage_init</STRONG> (Thumb, 114 bytes, Stack size 24 bytes, bt_bond_ftl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ftl_le_storage_init
</UL>
<BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[bd9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_le_key_init
</UL>

<P><STRONG><a name="[bec]"></a>ftl_storage_common_init</STRONG> (Thumb, 112 bytes, Stack size 8 bytes, bt_bond_ftl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ftl_storage_common_init
</UL>
<BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[bd9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_le_key_init
</UL>

<P><STRONG><a name="[bf6]"></a>ftl_save_legacy_remote_bd</STRONG> (Thumb, 72 bytes, Stack size 24 bytes, bt_bond_ftl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ftl_save_legacy_remote_bd &rArr; imp_ftl_save
</UL>
<BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[ffb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;imp_ftl_save
</UL>
<BR>[Called By]<UL><LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_legacy_delete_bond
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_legacy_save_bond
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_legacy_set_bond_flag
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_legacy_clear_all_keys
</UL>

<P><STRONG><a name="[bf8]"></a>ftl_load_legacy_remote_bd</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, bt_bond_ftl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ftl_load_legacy_remote_bd &rArr; imp_ftl_load
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[ff9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;imp_ftl_load
</UL>
<BR>[Called By]<UL><LI><a href="#[bda]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_legacy_key_init
</UL>

<P><STRONG><a name="[bfb]"></a>ftl_save_legacy_link_key</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, bt_bond_ftl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ftl_save_legacy_link_key &rArr; imp_ftl_save
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[ffb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;imp_ftl_save
</UL>
<BR>[Called By]<UL><LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_legacy_save_bond
</UL>

<P><STRONG><a name="[bfc]"></a>ftl_load_legacy_link_key</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, bt_bond_ftl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ftl_load_legacy_link_key &rArr; imp_ftl_load
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[ff9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;imp_ftl_load
</UL>
<BR>[Called By]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_legacy_get_bond
</UL>

<P><STRONG><a name="[bed]"></a>bt_bond_priority_queue_init</STRONG> (Thumb, 148 bytes, Stack size 24 bytes, bt_bond_priority.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = bt_bond_priority_queue_init &rArr; ftl_load_bond_priority &rArr; imp_ftl_load
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[ffc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_load_bond_priority
</UL>
<BR>[Called By]<UL><LI><a href="#[bda]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_legacy_key_init
<LI><a href="#[bd9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_le_key_init
</UL>

<P><STRONG><a name="[fff]"></a>bt_bond_priority_sort_get_int</STRONG> (Thumb, 98 bytes, Stack size 24 bytes, bt_bond_priority.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = bt_bond_priority_sort_get_int
</UL>
<BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[bf1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_set_high_priority
<LI><a href="#[bf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_priority_queue_delete
<LI><a href="#[bee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_priority_queue_clear
<LI><a href="#[bf5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_get_low_priority
<LI><a href="#[bf9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_get_index_by_priority
<LI><a href="#[1000]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_priority_queue_find
</UL>

<P><STRONG><a name="[bee]"></a>bt_bond_priority_queue_clear</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, bt_bond_priority.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = bt_bond_priority_queue_clear &rArr; bt_bond_priority_sort_get_int
</UL>
<BR>[Calls]<UL><LI><a href="#[fff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_priority_sort_get_int
<LI><a href="#[ffa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_save_bond_priority
</UL>
<BR>[Called By]<UL><LI><a href="#[403]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_le_clear_all_keys
<LI><a href="#[bd9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_le_key_init
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_legacy_clear_all_keys
</UL>

<P><STRONG><a name="[1000]"></a>bt_bond_priority_queue_find</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, bt_bond_priority.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = bt_bond_priority_queue_find &rArr; bt_bond_priority_sort_get_int
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[fff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_priority_sort_get_int
</UL>
<BR>[Called By]<UL><LI><a href="#[bf1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_set_high_priority
<LI><a href="#[bf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_priority_queue_delete
<LI><a href="#[bf3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_priority_queue_add
</UL>

<P><STRONG><a name="[bf4]"></a>bt_bond_priority_queue_delete</STRONG> (Thumb, 100 bytes, Stack size 24 bytes, bt_bond_priority.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = bt_bond_priority_queue_delete &rArr; bt_bond_priority_queue_find &rArr; bt_bond_priority_sort_get_int
</UL>
<BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[1000]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_priority_queue_find
<LI><a href="#[fff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_priority_sort_get_int
<LI><a href="#[ffa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_save_bond_priority
</UL>
<BR>[Called By]<UL><LI><a href="#[bc4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_le_delete_bond
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_legacy_delete_bond
</UL>

<P><STRONG><a name="[bf1]"></a>bt_bond_set_high_priority</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, bt_bond_priority.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = bt_bond_set_high_priority &rArr; bt_bond_priority_queue_find &rArr; bt_bond_priority_sort_get_int
</UL>
<BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[1000]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_priority_queue_find
<LI><a href="#[fff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_priority_sort_get_int
<LI><a href="#[ffa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_save_bond_priority
</UL>
<BR>[Called By]<UL><LI><a href="#[bf3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_priority_queue_add
<LI><a href="#[bd4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_le_set_high_priority_bond
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_legacy_adjust_dev_priority
</UL>

<P><STRONG><a name="[bf3]"></a>bt_bond_priority_queue_add</STRONG> (Thumb, 144 bytes, Stack size 24 bytes, bt_bond_priority.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = bt_bond_priority_queue_add &rArr; bt_bond_set_high_priority &rArr; bt_bond_priority_queue_find &rArr; bt_bond_priority_sort_get_int
</UL>
<BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[bf1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_set_high_priority
<LI><a href="#[1000]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_priority_queue_find
<LI><a href="#[ffa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_save_bond_priority
</UL>
<BR>[Called By]<UL><LI><a href="#[bc5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_le_save_key
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_legacy_save_bond
</UL>

<P><STRONG><a name="[bf5]"></a>bt_bond_get_low_priority</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, bt_bond_priority.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = bt_bond_get_low_priority &rArr; bt_bond_priority_sort_get_int
</UL>
<BR>[Calls]<UL><LI><a href="#[fff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_priority_sort_get_int
</UL>
<BR>[Called By]<UL><LI><a href="#[bc3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_le_get_low_priority_bond
</UL>

<P><STRONG><a name="[bf9]"></a>bt_bond_get_index_by_priority</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, bt_bond_priority.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = bt_bond_get_index_by_priority &rArr; bt_bond_priority_sort_get_int
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[fff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_priority_sort_get_int
</UL>
<BR>[Called By]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_legacy_get_addr_by_priority
</UL>

<P><STRONG><a name="[1001]"></a>create_ascs_table</STRONG> (Thumb, 198 bytes, Stack size 40 bytes, ascs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = create_ascs_table &rArr; calloc
</UL>
<BR>[Calls]<UL><LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4 (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calloc
</UL>
<BR>[Called By]<UL><LI><a href="#[c32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ascs_add_service
</UL>

<P><STRONG><a name="[c2a]"></a>ascs_get_ase_id</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, ascs.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ascs_cccd_update_cb
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ascs_attr_read_cb
</UL>

<P><STRONG><a name="[c24]"></a>ascs_send_ase_notify</STRONG> (Thumb, 88 bytes, Stack size 40 bytes, ascs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = ascs_send_ase_notify &rArr; gatt_svc_send_data &rArr; gatt_svc_send_data_in_queue &rArr; calloc
</UL>
<BR>[Calls]<UL><LI><a href="#[801]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_svc_send_data
<LI><a href="#[c01]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_link_find_by_conn_handle
</UL>
<BR>[Called By]<UL><LI><a href="#[c1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ase_sm_send_notify
<LI><a href="#[c22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ascs_handle_pending_cccd
</UL>

<P><STRONG><a name="[1002]"></a>ascs_send_ase_cp_notify</STRONG> (Thumb, 54 bytes, Stack size 32 bytes, ascs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = ascs_send_ase_cp_notify &rArr; gatt_svc_send_data &rArr; gatt_svc_send_data_in_queue &rArr; calloc
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[801]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_svc_send_data
</UL>
<BR>[Called By]<UL><LI><a href="#[c2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ase_check_cp_data
</UL>

<P><STRONG><a name="[c32]"></a>ascs_add_service</STRONG> (Thumb, 118 bytes, Stack size 32 bytes, ascs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = ascs_add_service &rArr; gatt_svc_add &rArr; calloc
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[802]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_svc_add
<LI><a href="#[1001]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_ascs_table
</UL>
<BR>[Called By]<UL><LI><a href="#[c2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ascs_init
</UL>

<P><STRONG><a name="[c09]"></a>ase_cp_check_sm_state</STRONG> (Thumb, 110 bytes, Stack size 16 bytes, ase_handle_cp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ase_cp_check_sm_state
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[89a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ascs_action_rec_start_ready
<LI><a href="#[c2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ase_check_cp_data
</UL>

<P><STRONG><a name="[1003]"></a>ase_cp_check_msg_len</STRONG> (Thumb, 140 bytes, Stack size 32 bytes, ase_handle_cp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ase_cp_check_msg_len
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[c2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ase_check_cp_data
</UL>

<P><STRONG><a name="[1004]"></a>ase_check_cfg_codec_param</STRONG> (Thumb, 178 bytes, Stack size 48 bytes, ase_handle_cp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = ase_check_cfg_codec_param &rArr; pac_find_by_codec_data &rArr; pac_find_record &rArr; codec_cap_check &rArr; codec_cap_parse
</UL>
<BR>[Calls]<UL><LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[c57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pac_find_by_codec_data
<LI><a href="#[c0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_cfg_parse
</UL>
<BR>[Called By]<UL><LI><a href="#[c2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ase_check_cp_data
</UL>

<P><STRONG><a name="[1005]"></a>ase_check_cfg_qos_param</STRONG> (Thumb, 258 bytes, Stack size 40 bytes, ase_handle_cp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = ase_check_cfg_qos_param
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[c2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ase_check_cp_data
</UL>

<P><STRONG><a name="[c2b]"></a>ase_check_cp_data</STRONG> (Thumb, 924 bytes, Stack size 104 bytes, ase_handle_cp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = ase_check_cp_data &rArr; ase_check_cfg_codec_param &rArr; pac_find_by_codec_data &rArr; pac_find_record &rArr; codec_cap_check &rArr; codec_cap_parse
</UL>
<BR>[Calls]<UL><LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calloc
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[c1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_mgr_dispatch
<LI><a href="#[c19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ase_find_by_cig_cis
<LI><a href="#[bfd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ase_find_by_ase_id
<LI><a href="#[c09]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ase_cp_check_sm_state
<LI><a href="#[1006]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;metadata_check_format
<LI><a href="#[1005]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ase_check_cfg_qos_param
<LI><a href="#[1004]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ase_check_cfg_codec_param
<LI><a href="#[1003]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ase_cp_check_msg_len
<LI><a href="#[1002]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ascs_send_ase_cp_notify
</UL>
<BR>[Called By]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ascs_attr_write_cb
</UL>

<P><STRONG><a name="[c83]"></a>base_data_free</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, base_data_parse.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = base_data_free
</UL>
<BR>[Calls]<UL><LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>
<BR>[Called By]<UL><LI><a href="#[c46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_sync_release_int
<LI><a href="#[c8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;base_data_parse_data
<LI><a href="#[c8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_sync_cmp_pa_mapping
<LI><a href="#[c8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_sync_pa_info_list_free
</UL>

<P><STRONG><a name="[1007]"></a>base_data_check_data</STRONG> (Thumb, 108 bytes, Stack size 24 bytes, base_data_parse.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = base_data_check_data
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[c8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;base_data_parse_data
</UL>

<P><STRONG><a name="[c8c]"></a>base_data_parse_data</STRONG> (Thumb, 580 bytes, Stack size 80 bytes, base_data_parse.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = base_data_parse_data &rArr; codec_cfg_parse
</UL>
<BR>[Calls]<UL><LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calloc
<LI><a href="#[c0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_cfg_parse
<LI><a href="#[c83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;base_data_free
<LI><a href="#[1008]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ltv_util_check_format_int
<LI><a href="#[1007]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;base_data_check_data
</UL>
<BR>[Called By]<UL><LI><a href="#[c8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_sync_cmp_pa_mapping
</UL>

<P><STRONG><a name="[c8d]"></a>base_data_cmp</STRONG> (Thumb, 184 bytes, Stack size 40 bytes, base_data_parse.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = base_data_cmp
</UL>
<BR>[Calls]<UL><LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[c8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_sync_cmp_pa_mapping
</UL>

<P><STRONG><a name="[1009]"></a>pacs_create_table</STRONG> (Thumb, 738 bytes, Stack size 56 bytes, pacs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = pacs_create_table &rArr; calloc
</UL>
<BR>[Calls]<UL><LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4 (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calloc
</UL>
<BR>[Called By]<UL><LI><a href="#[c62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pacs_add_service
</UL>

<P><STRONG><a name="[c62]"></a>pacs_add_service</STRONG> (Thumb, 92 bytes, Stack size 24 bytes, pacs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = pacs_add_service &rArr; pacs_create_table &rArr; calloc
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[802]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_svc_add
<LI><a href="#[1009]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pacs_create_table
</UL>
<BR>[Called By]<UL><LI><a href="#[83a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pacs_init
</UL>

<P><STRONG><a name="[c77]"></a>vcs_add_service</STRONG> (Thumb, 160 bytes, Stack size 48 bytes, vcs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = vcs_add_service &rArr; gatt_svc_add &rArr; calloc
</UL>
<BR>[Calls]<UL><LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4 (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calloc
<LI><a href="#[802]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_svc_add
</UL>
<BR>[Called By]<UL><LI><a href="#[c76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vcs_init
</UL>

<P><STRONG><a name="[c31]"></a>ble_dm_cback_register</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, ble_audio_dm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ble_dm_cback_register &rArr; calloc
</UL>
<BR>[Calls]<UL><LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calloc
</UL>
<BR>[Called By]<UL><LI><a href="#[83a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pacs_init
<LI><a href="#[86d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cap_init
<LI><a href="#[870]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bap_role_init
<LI><a href="#[c38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_init
<LI><a href="#[c2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ascs_init
<LI><a href="#[c9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ccp_client_init
<LI><a href="#[c9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcs_client_init
</UL>

<P><STRONG><a name="[c79]"></a>ble_dm_event_post</STRONG> (Thumb, 50 bytes, Stack size 24 bytes, ble_audio_dm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ble_dm_event_post
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_handle_gap_msg
<LI><a href="#[8f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_bond_modify
<LI><a href="#[c78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_handle_conn_state_evt
</UL>

<P><STRONG><a name="[c1a]"></a>ble_audio_link_find_by_conn_id</STRONG> (Thumb, 62 bytes, Stack size 20 bytes, ble_link_util.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = ble_audio_link_find_by_conn_id
</UL>
<BR>[Called By]<UL><LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_handle_gap_msg
<LI><a href="#[3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_handle_gap_cb
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pacs_dm_cback
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_dm_cback
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bap_dm_cback
<LI><a href="#[c2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_srv_alloc_by_srv_id
<LI><a href="#[c16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ascs_handle_cig_mgr_msg
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ascs_dm_cback
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tbs_client_dm_cback
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cap_dm_cback
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcs_client_dm_cback
<LI><a href="#[c7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_link_alloc_by_conn_id
<LI><a href="#[c78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_handle_conn_state_evt
</UL>

<P><STRONG><a name="[c01]"></a>ble_audio_link_find_by_conn_handle</STRONG> (Thumb, 62 bytes, Stack size 20 bytes, ble_link_util.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = ble_audio_link_find_by_conn_handle
</UL>
<BR>[Called By]<UL><LI><a href="#[87f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ascs_action_release_by_cig
<LI><a href="#[c49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_check_remote_features
<LI><a href="#[c48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_handle_pa_sync
<LI><a href="#[c27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_srv_find_by_srv_id
<LI><a href="#[c2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_srv_alloc_by_srv_id
<LI><a href="#[c25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_ual_clear_pending_cccd
<LI><a href="#[c26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_ual_check_le_bond
<LI><a href="#[c28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ase_sm_link_init
<LI><a href="#[c29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ase_sm_link_free
<LI><a href="#[c19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ase_find_by_cig_cis
<LI><a href="#[bfd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ase_find_by_ase_id
<LI><a href="#[c24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ascs_send_ase_notify
<LI><a href="#[ca1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tbs_write_char_value
<LI><a href="#[c9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tbs_client_handle_callback
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cap_cas_callback
<LI><a href="#[c98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcs_check_link_int
<LI><a href="#[c99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcs_client_handle_cback
</UL>

<P><STRONG><a name="[100a]"></a>ble_audio_link_find_by_addr</STRONG> (Thumb, 216 bytes, Stack size 48 bytes, ble_link_util.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = ble_audio_link_find_by_addr
</UL>
<BR>[Calls]<UL><LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp (via Veneer)
<LI><a href="#[c7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_ual_resolve_rpa
</UL>
<BR>[Called By]<UL><LI><a href="#[c21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_ual_set_pending_link_cccd
</UL>

<P><STRONG><a name="[c7c]"></a>ble_audio_link_alloc_by_conn_id</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, ble_link_util.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = ble_audio_link_alloc_by_conn_id &rArr; ble_audio_link_find_by_conn_id
</UL>
<BR>[Calls]<UL><LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calloc
<LI><a href="#[c1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_link_find_by_conn_id
</UL>
<BR>[Called By]<UL><LI><a href="#[c78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_handle_conn_state_evt
</UL>

<P><STRONG><a name="[c2d]"></a>ble_srv_set_cccd_flags</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, ble_link_util.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ble_srv_set_cccd_flags
</UL>
<BR>[Called By]<UL><LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pacs_cccd_update_cb
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_cccd_update_cb
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ascs_cccd_update_cb
</UL>

<P><STRONG><a name="[c27]"></a>ble_srv_find_by_srv_id</STRONG> (Thumb, 106 bytes, Stack size 24 bytes, ble_link_util.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = ble_srv_find_by_srv_id &rArr; ble_audio_link_find_by_conn_handle
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[c01]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_link_find_by_conn_handle
</UL>
<BR>[Called By]<UL><LI><a href="#[c5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pacs_send_all_notify
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pacs_dm_cback
<LI><a href="#[c3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_send_all_notify
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_dm_cback
<LI><a href="#[c2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_srv_alloc_by_srv_id
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ascs_dm_cback
</UL>

<P><STRONG><a name="[c2c]"></a>ble_srv_alloc_by_srv_id</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, ble_link_util.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = ble_srv_alloc_by_srv_id &rArr; ble_srv_find_by_srv_id &rArr; ble_audio_link_find_by_conn_handle
</UL>
<BR>[Calls]<UL><LI><a href="#[844]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_get_conn_id_by_handle
<LI><a href="#[c27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_srv_find_by_srv_id
<LI><a href="#[c1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_link_find_by_conn_id
<LI><a href="#[c01]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_link_find_by_conn_handle
</UL>
<BR>[Called By]<UL><LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pacs_cccd_update_cb
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_cccd_update_cb
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ascs_cccd_update_cb
</UL>

<P><STRONG><a name="[c7a]"></a>ble_audio_link_free</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, ble_link_util.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ble_audio_link_free
</UL>
<BR>[Calls]<UL><LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>
<BR>[Called By]<UL><LI><a href="#[c78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_handle_conn_state_evt
</UL>

<P><STRONG><a name="[c73]"></a>ble_audio_send_notify_all</STRONG> (Thumb, 118 bytes, Stack size 64 bytes, ble_link_util.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = ble_audio_send_notify_all &rArr; gatt_svc_send_data &rArr; gatt_svc_send_data_in_queue &rArr; calloc
</UL>
<BR>[Calls]<UL><LI><a href="#[801]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_svc_send_data
</UL>
<BR>[Called By]<UL><LI><a href="#[c74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vcs_send_volume_flags_notify_all
<LI><a href="#[c72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vcs_send_volume_state_notify_all
</UL>

<P><STRONG><a name="[100b]"></a>codec_cap_parse</STRONG> (Thumb, 238 bytes, Stack size 24 bytes, codec.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = codec_cap_parse
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[c56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_cap_check
</UL>

<P><STRONG><a name="[c0c]"></a>codec_cfg_parse</STRONG> (Thumb, 330 bytes, Stack size 40 bytes, codec.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = codec_cfg_parse
</UL>
<BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[c0f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ase_action_cfg_codec
<LI><a href="#[c0b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ase_handle_remote_cp
<LI><a href="#[c8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;base_data_parse_data
<LI><a href="#[1004]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ase_check_cfg_codec_param
</UL>

<P><STRONG><a name="[100c]"></a>codec_cfg_check_cap</STRONG> (Thumb, 258 bytes, Stack size 16 bytes, codec.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = codec_cfg_check_cap
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[c56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_cap_check
</UL>

<P><STRONG><a name="[c56]"></a>codec_cap_check</STRONG> (Thumb, 30 bytes, Stack size 24 bytes, codec.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = codec_cap_check &rArr; codec_cap_parse
</UL>
<BR>[Calls]<UL><LI><a href="#[100c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_cfg_check_cap
<LI><a href="#[100b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_cap_parse
</UL>
<BR>[Called By]<UL><LI><a href="#[c55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pac_find_record
</UL>

<P><STRONG><a name="[c26]"></a>ble_audio_ual_check_le_bond</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, ble_audio_ual.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = ble_audio_ual_check_le_bond &rArr; ble_audio_link_find_by_conn_handle
</UL>
<BR>[Calls]<UL><LI><a href="#[c01]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_link_find_by_conn_handle
</UL>
<BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pacs_dm_cback
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_dm_cback
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ascs_dm_cback
</UL>

<P><STRONG><a name="[c7d]"></a>ble_audio_ual_resolve_rpa</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, ble_audio_ual.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_handle_gap_msg
<LI><a href="#[c90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_sync_find_by_adv_info
<LI><a href="#[c78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_handle_conn_state_evt
<LI><a href="#[100a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_link_find_by_addr
</UL>

<P><STRONG><a name="[c21]"></a>ble_audio_ual_set_pending_link_cccd</STRONG> (Thumb, 142 bytes, Stack size 56 bytes, ble_audio_ual.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = ble_audio_ual_set_pending_link_cccd &rArr; ble_audio_link_find_by_addr
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[100a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_link_find_by_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[c3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_ual_set_pending_cccd
<LI><a href="#[c1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ascs_check_ase_state_when_disconnect
</UL>

<P><STRONG><a name="[c3c]"></a>ble_audio_ual_set_pending_cccd</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, ble_audio_ual.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = ble_audio_ual_set_pending_cccd &rArr; ble_audio_ual_set_pending_link_cccd &rArr; ble_audio_link_find_by_addr
</UL>
<BR>[Calls]<UL><LI><a href="#[c21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_ual_set_pending_link_cccd
</UL>
<BR>[Called By]<UL><LI><a href="#[c5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pacs_send_all_notify
<LI><a href="#[c3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_send_all_notify
</UL>

<P><STRONG><a name="[c25]"></a>ble_audio_ual_clear_pending_cccd</STRONG> (Thumb, 90 bytes, Stack size 24 bytes, ble_audio_ual.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = ble_audio_ual_clear_pending_cccd &rArr; ble_audio_link_find_by_conn_handle
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[c01]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_link_find_by_conn_handle
</UL>
<BR>[Called By]<UL><LI><a href="#[c5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pacs_handle_pending_cccd
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_dm_cback
<LI><a href="#[c22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ascs_handle_pending_cccd
</UL>

<P><STRONG><a name="[193]"></a>gap_bond_check</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, bt_bond_gap.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gap_bond_check
</UL>
<BR>[Calls]<UL><LI><a href="#[100d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_find_key_entry
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bt_bond_gap.o(.constdata)
</UL>
<P><STRONG><a name="[194]"></a>gap_bond_get_key</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, bt_bond_gap.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = gap_bond_get_key
</UL>
<BR>[Calls]<UL><LI><a href="#[100d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_find_key_entry
<LI><a href="#[100e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_get_dev_ltk
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bt_bond_gap.o(.constdata)
</UL>
<P><STRONG><a name="[195]"></a>gap_bond_get_max_num</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, bt_bond_gap.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[100f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_get_max_le_paired_device_num
<LI><a href="#[d7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_br_get_max_bond_num
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bt_bond_gap.o(.constdata)
</UL>
<P><STRONG><a name="[196]"></a>gap_bond_get_addr</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, bt_bond_gap.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = gap_bond_get_addr
</UL>
<BR>[Calls]<UL><LI><a href="#[1010]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_find_key_entry_by_idx
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bt_bond_gap.o(.constdata)
</UL>
<P><STRONG><a name="[197]"></a>gap_bond_set_cccd_flag</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, bt_bond_gap.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gap_bond_set_cccd_flag
</UL>
<BR>[Calls]<UL><LI><a href="#[1011]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_bond_set_cccd_data_pending
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bt_bond_gap.o(.constdata)
</UL>
<P><STRONG><a name="[198]"></a>gap_bond_clear_cccd_flag</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, bt_bond_gap.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1011]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_bond_set_cccd_data_pending
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bt_bond_gap.o(.constdata)
</UL>
<P><STRONG><a name="[199]"></a>gap_bond_le_resolve_rpa</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, bt_bond_gap.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1012]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_resolve_random_address
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bt_bond_gap.o(.constdata)
</UL>
<P><STRONG><a name="[c0e]"></a>least_common_multiple</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, calculate_util.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = least_common_multiple
</UL>
<BR>[Called By]<UL><LI><a href="#[c0b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ase_handle_remote_cp
</UL>

<P><STRONG><a name="[1013]"></a>cas_add_service</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, cas.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = cas_add_service &rArr; gatt_svc_add &rArr; calloc
</UL>
<BR>[Calls]<UL><LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4 (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calloc
<LI><a href="#[802]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_svc_add
</UL>
<BR>[Called By]<UL><LI><a href="#[c9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cas_init
</UL>

<P><STRONG><a name="[c9c]"></a>cas_init</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, cas.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = cas_init &rArr; cas_add_service &rArr; gatt_svc_add &rArr; calloc
</UL>
<BR>[Calls]<UL><LI><a href="#[1013]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cas_add_service
</UL>
<BR>[Called By]<UL><LI><a href="#[86d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cap_init
</UL>

<P><STRONG><a name="[ca0]"></a>tbs_cfg_cccd</STRONG> (Thumb, 306 bytes, Stack size 64 bytes, tbs_client.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = tbs_cfg_cccd &rArr; gatt_client_enable_char_cccd &rArr; gatt_client_check_req &rArr; gatt_client_execute_req
</UL>
<BR>[Calls]<UL><LI><a href="#[b91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_check_cccd_enabled
<LI><a href="#[b8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_enable_char_cccd
</UL>
<BR>[Called By]<UL><LI><a href="#[825]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ccp_client_cfg_cccd
</UL>

<P><STRONG><a name="[ca1]"></a>tbs_write_char_value</STRONG> (Thumb, 136 bytes, Stack size 80 bytes, tbs_client.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = tbs_write_char_value &rArr; gatt_client_write &rArr; gattc_storage_check_prop &rArr; gattc_storage_find_char_desc
</UL>
<BR>[Calls]<UL><LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_write
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_find_char_handle
<LI><a href="#[c01]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_link_find_by_conn_handle
</UL>
<BR>[Called By]<UL><LI><a href="#[829]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ccp_client_write_call_cp
</UL>

<P><STRONG><a name="[c9f]"></a>tbs_read_char_value</STRONG> (Thumb, 90 bytes, Stack size 64 bytes, tbs_client.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = tbs_read_char_value &rArr; gatt_client_read &rArr; gattc_storage_check_prop &rArr; gattc_storage_find_char_desc
</UL>
<BR>[Calls]<UL><LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_read
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_find_char_handle
</UL>
<BR>[Called By]<UL><LI><a href="#[826]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ccp_client_read_char_value
<LI><a href="#[c9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tbs_client_handle_callback
</UL>

<P><STRONG><a name="[ca2]"></a>tbs_client_init</STRONG> (Thumb, 58 bytes, Stack size 32 bytes, tbs_client.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = tbs_client_init &rArr; gatt_client_spec_register &rArr; gatt_spec_client_find_by_uuid
</UL>
<BR>[Calls]<UL><LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_spec_register
</UL>
<BR>[Called By]<UL><LI><a href="#[c9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ccp_client_init
</UL>

<P><STRONG><a name="[cfe]"></a>sys_event_init</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, sys_event.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = sys_event_init
</UL>
<BR>[Called By]<UL><LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_mgr_init
</UL>

<P><STRONG><a name="[e90]"></a>sys_event_group_create</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, sys_event.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = sys_event_group_create
</UL>
<BR>[Called By]<UL><LI><a href="#[a3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_init
<LI><a href="#[a60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_create
<LI><a href="#[e8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_mgr_init
</UL>

<P><STRONG><a name="[1014]"></a>sys_event_flag_abort</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, sys_event.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = sys_event_flag_abort
</UL>
<BR>[Called By]<UL><LI><a href="#[e9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_event_group_delete
<LI><a href="#[e6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_event_flag_post
</UL>

<P><STRONG><a name="[e9c]"></a>sys_event_group_delete</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, sys_event.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = sys_event_group_delete &rArr; sys_event_flag_abort
</UL>
<BR>[Calls]<UL><LI><a href="#[1014]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_event_flag_abort
</UL>
<BR>[Called By]<UL><LI><a href="#[a66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_destory
</UL>

<P><STRONG><a name="[e88]"></a>sys_event_flag_wait</STRONG> (Thumb, 96 bytes, Stack size 40 bytes, sys_event.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = sys_event_flag_wait
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[a6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_stop
<LI><a href="#[e85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_voice_start
<LI><a href="#[ecc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_wait_codec_enabled
<LI><a href="#[e69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_mgr_session_enable
<LI><a href="#[eba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_mgr_fade_out_start
<LI><a href="#[e76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_schedule
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notification_dsp_mgr_session_cb
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_mgr_gate_stop_post_cback
<LI><a href="#[f1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_state_machine
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_mgr_sport_start_post_cback
</UL>

<P><STRONG><a name="[e6d]"></a>sys_event_flag_post</STRONG> (Thumb, 200 bytes, Stack size 32 bytes, sys_event.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = sys_event_flag_post &rArr; sys_event_flag_abort
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[1014]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_event_flag_abort
</UL>
<BR>[Called By]<UL><LI><a href="#[e71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_state_set
<LI><a href="#[e6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_codec_event_handler
<LI><a href="#[ec7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_plugin_msg_handle
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_mgr_hal_cback
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_ipc_event_handler
<LI><a href="#[f23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_mgr_gate_status_handler
<LI><a href="#[f17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_download_algo_param
<LI><a href="#[eb3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_mgr_voice_prompt_start
<LI><a href="#[eb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_mgr_signal_proc_start
<LI><a href="#[e69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_mgr_session_enable
<LI><a href="#[eba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_mgr_fade_out_start
<LI><a href="#[eb2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_mgr_composite_start
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;voice_dsp_mgr_session_cb
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;record_dsp_mgr_session_cb
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notification_dsp_mgr_session_cb
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_dsp_mgr_session_cb
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;analog_dsp_mgr_session_cb
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_mgr_gate_stop_post_cback
<LI><a href="#[f1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_state_machine
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_mgr_sport_start_post_cback
</UL>

<P><STRONG><a name="[e81]"></a>sys_event_flag_check</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, sys_event.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[ecc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_wait_codec_enabled
<LI><a href="#[f2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_mgr_notification_stop
<LI><a href="#[f17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_download_algo_param
<LI><a href="#[eb3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_mgr_voice_prompt_start
<LI><a href="#[eb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_mgr_signal_proc_start
<LI><a href="#[e69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_mgr_session_enable
<LI><a href="#[e80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_mgr_is_stable
<LI><a href="#[eba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_mgr_fade_out_start
<LI><a href="#[eb2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_mgr_composite_start
<LI><a href="#[e7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_is_stable
</UL>

<P><STRONG><a name="[cfc]"></a>sys_ipc_init</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, sys_ipc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = sys_ipc_init
</UL>
<BR>[Calls]<UL><LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_mgr_init
</UL>

<P><STRONG><a name="[cfb]"></a>sys_ipc_publish</STRONG> (Thumb, 94 bytes, Stack size 24 bytes, sys_ipc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = sys_ipc_publish
</UL>
<BR>[Calls]<UL><LI><a href="#[6cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[520]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_mgr_power_on
<LI><a href="#[525]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_mgr_power_off
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_mgr_hal_cback
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_ipc_event_handler
<LI><a href="#[f11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_load_finish
<LI><a href="#[f22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_mailbox_process
<LI><a href="#[f1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_state_machine
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_mgr_sport_start
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_msg_handler
</UL>

<P><STRONG><a name="[a41]"></a>sys_ipc_subscribe</STRONG> (Thumb, 156 bytes, Stack size 32 bytes, sys_ipc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = sys_ipc_subscribe
</UL>
<BR>[Calls]<UL><LI><a href="#[6cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_mgr_init
<LI><a href="#[a47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_cback_register
<LI><a href="#[a4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_mgr_register_cback
<LI><a href="#[efe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_hal_register_cback
</UL>

<P><STRONG><a name="[101f]"></a>sys_lp_timer_list_find</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, sys_timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = sys_lp_timer_list_find
</UL>
<BR>[Called By]<UL><LI><a href="#[101e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_lp_timer_expire
</UL>

<P><STRONG><a name="[101b]"></a>sys_lp_timer_list_insert</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, sys_timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = sys_lp_timer_list_insert
</UL>
<BR>[Called By]<UL><LI><a href="#[9b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_start
<LI><a href="#[9b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_restart
</UL>

<P><STRONG><a name="[101c]"></a>sys_lp_timer_list_remove</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, sys_timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = sys_lp_timer_list_remove
</UL>
<BR>[Called By]<UL><LI><a href="#[9b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_stop
</UL>

<P><STRONG><a name="[101d]"></a>sys_lp_timer_list_free</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, sys_timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = sys_lp_timer_list_free
</UL>
<BR>[Called By]<UL><LI><a href="#[977]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_delete
</UL>

<P><STRONG><a name="[1015]"></a>sys_hp_timer_elapsed_time_update</STRONG> (Thumb, 94 bytes, Stack size 16 bytes, sys_timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = sys_hp_timer_elapsed_time_update
</UL>
<BR>[Calls]<UL><LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_hp_time_get
<LI><a href="#[1016]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hw_timer_get_elapsed_time
</UL>
<BR>[Called By]<UL><LI><a href="#[101a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_hp_timer_list_remove
<LI><a href="#[1017]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_hp_timer_list_insert
<LI><a href="#[1020]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_hp_timer_expire
</UL>

<P><STRONG><a name="[1017]"></a>sys_hp_timer_list_insert</STRONG> (Thumb, 176 bytes, Stack size 32 bytes, sys_timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = sys_hp_timer_list_insert &rArr; hw_timer_restart &rArr; hw_timer_safe_stop &rArr; hw_timer_set_div
</UL>
<BR>[Calls]<UL><LI><a href="#[1018]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hw_timer_is_active
<LI><a href="#[1019]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hw_timer_restart (via Veneer)
<LI><a href="#[f3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hw_timer_stop (via Veneer)
<LI><a href="#[1015]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_hp_timer_elapsed_time_update
</UL>
<BR>[Called By]<UL><LI><a href="#[9b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_start
<LI><a href="#[9b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_restart
<LI><a href="#[1020]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_hp_timer_expire
</UL>

<P><STRONG><a name="[101a]"></a>sys_hp_timer_list_remove</STRONG> (Thumb, 100 bytes, Stack size 24 bytes, sys_timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = sys_hp_timer_list_remove &rArr; hw_timer_restart &rArr; hw_timer_safe_stop &rArr; hw_timer_set_div
</UL>
<BR>[Calls]<UL><LI><a href="#[1018]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hw_timer_is_active
<LI><a href="#[1019]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hw_timer_restart (via Veneer)
<LI><a href="#[f3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hw_timer_stop (via Veneer)
<LI><a href="#[1015]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_hp_timer_elapsed_time_update
</UL>
<BR>[Called By]<UL><LI><a href="#[9b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_stop
<LI><a href="#[9b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_start
<LI><a href="#[9b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_restart
<LI><a href="#[977]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_delete
</UL>

<P><STRONG><a name="[cfd]"></a>sys_timer_init</STRONG> (Thumb, 114 bytes, Stack size 24 bytes, sys_timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = sys_timer_init &rArr; hw_timer_create &rArr; hw_timer_create_int &rArr; hw_timer_driver_init_int &rArr; hw_timer_update_isr &rArr; RamVectorTableUpdate_for_xip_isr
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[563]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;power_check_cb_register
<LI><a href="#[f3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hw_timer_create
<LI><a href="#[e92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_mgr_event_register
<LI><a href="#[f3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hw_timer_delete
</UL>
<BR>[Called By]<UL><LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_mgr_init
</UL>

<P><STRONG><a name="[9b7]"></a>sys_timer_id_get</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, sys_timer.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[9b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_pm_timeout_cback
<LI><a href="#[c68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_past_timer_callback
<LI><a href="#[dcf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_tout_callback
<LI><a href="#[db1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avrcp_tout_callback
<LI><a href="#[e09]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_wait_rsp_timeout
<LI><a href="#[dff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_wait_msc_timeout
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_latency_timeout_cback
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;variance_check_timer_cback
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stable_dejitter_timer_cback
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jitter_buffer_timeout_cback
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_ad_depop_halt_timer_cb
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_cccd_timeout
<LI><a href="#[1031]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdtp_tout_cback
</UL>

<P><STRONG><a name="[9b9]"></a>sys_timer_create</STRONG> (Thumb, 150 bytes, Stack size 56 bytes, sys_timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = sys_timer_create
</UL>
<BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[9b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_sniff_mode_config
<LI><a href="#[a3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_init
<LI><a href="#[c69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_start_past_timer
<LI><a href="#[dd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_alloc_link
<LI><a href="#[db2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avrcp_alloc_link
<LI><a href="#[e61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jitter_buffer_low_latency_adjust_latency
<LI><a href="#[e5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_latency_lat_dynamic_increase
<LI><a href="#[e5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_latency_dynamic_set
<LI><a href="#[e57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_interval_evaluator_register
<LI><a href="#[e0a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_alloc_chann
<LI><a href="#[edd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_latency_adjust_check
<LI><a href="#[f76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_sidetone_timer_ctrl
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_halt_dac_config
<LI><a href="#[f4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_halt_adc_depop
<LI><a href="#[ff3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_start_cccd_timer
<LI><a href="#[1032]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdtp_alloc_link
</UL>

<P><STRONG><a name="[9b5]"></a>sys_timer_start</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, sys_timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = sys_timer_start &rArr; sys_hp_timer_list_insert &rArr; hw_timer_restart &rArr; hw_timer_safe_stop &rArr; hw_timer_set_div
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[101a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_hp_timer_list_remove
<LI><a href="#[1017]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_hp_timer_list_insert
<LI><a href="#[101b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_lp_timer_list_insert
</UL>
<BR>[Called By]<UL><LI><a href="#[99d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_pm_sm
<LI><a href="#[a08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_disconn_req
<LI><a href="#[a0b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_conn_req
<LI><a href="#[a4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_lpm_set
<LI><a href="#[c69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_start_past_timer
<LI><a href="#[dc9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_send_general_at_cmd
<LI><a href="#[daf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avrcp_send_vendor_BT_SIG_cmd
<LI><a href="#[dac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avrcp_send_generic_cmd
<LI><a href="#[1037]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdtp_signal_set_cfg_req
<LI><a href="#[1038]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdtp_signal_open_req
<LI><a href="#[1036]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdtp_signal_get_capability_req
<LI><a href="#[d9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdtp_signal_discover_req
<LI><a href="#[da5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdtp_signal_close_req
<LI><a href="#[1030]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdtp_signal_abort_req
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_dsp_cback
<LI><a href="#[e6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_codec_event_handler
<LI><a href="#[ec7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_plugin_msg_handle
<LI><a href="#[e61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jitter_buffer_low_latency_adjust_latency
<LI><a href="#[e5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_latency_lat_dynamic_increase
<LI><a href="#[e5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_latency_dynamic_set
<LI><a href="#[e67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_inteval_evaluator_update
<LI><a href="#[e2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_handle_authen_rsp
<LI><a href="#[e23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_handle_l2c_conn_cmpl
<LI><a href="#[e1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_handle_ua
<LI><a href="#[e1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_handle_sabm
<LI><a href="#[e18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_handle_msc
<LI><a href="#[e15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_handle_pn
<LI><a href="#[e07]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_check_disconn_ctrl_chann
<LI><a href="#[ede]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_latency_handle_plc_event
<LI><a href="#[edd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_latency_adjust_check
<LI><a href="#[f76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_sidetone_timer_ctrl
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_halt_dac_config
<LI><a href="#[f4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_halt_adc_depop
<LI><a href="#[ff3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_start_cccd_timer
</UL>

<P><STRONG><a name="[9b0]"></a>sys_timer_restart</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, sys_timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = sys_timer_restart &rArr; sys_hp_timer_list_insert &rArr; hw_timer_restart &rArr; hw_timer_safe_stop &rArr; hw_timer_set_div
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[101a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_hp_timer_list_remove
<LI><a href="#[1017]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_hp_timer_list_insert
<LI><a href="#[101b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_lp_timer_list_insert
</UL>
<BR>[Called By]<UL><LI><a href="#[97c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_sniff_mode_exit
<LI><a href="#[e54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;auido_latency_lat_dynamic_timer_check
<LI><a href="#[e5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_latency_lat_dynamic_increase
<LI><a href="#[e67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_inteval_evaluator_update
<LI><a href="#[f76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_sidetone_timer_ctrl
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_halt_dac_config
<LI><a href="#[f4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_halt_adc_depop
<LI><a href="#[ff3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_start_cccd_timer
</UL>

<P><STRONG><a name="[9b4]"></a>sys_timer_stop</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, sys_timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = sys_timer_stop &rArr; sys_hp_timer_list_remove &rArr; hw_timer_restart &rArr; hw_timer_safe_stop &rArr; hw_timer_set_div
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[101a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_hp_timer_list_remove
<LI><a href="#[101c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_lp_timer_list_remove
</UL>
<BR>[Called By]<UL><LI><a href="#[99d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_pm_sm
<LI><a href="#[a4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_lpm_set
<LI><a href="#[de6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_handle_at_rsp
<LI><a href="#[dbd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avrcp_handle_data_ind
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_mgr_dsp_timer_cback
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_mgr_codec_timer_cback
<LI><a href="#[e67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_inteval_evaluator_update
<LI><a href="#[e1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_handle_disc
<LI><a href="#[e1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_handle_dm
<LI><a href="#[e1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_handle_ua
<LI><a href="#[e1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_handle_sabm
<LI><a href="#[e1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_handle_uih
<LI><a href="#[e18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_handle_msc
<LI><a href="#[ed8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_interval_evaluator_reset
<LI><a href="#[e76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_schedule
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_dac_depop_halt_timer_cb
<LI><a href="#[f76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_sidetone_timer_ctrl
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_ad_depop_halt_timer_cb
<LI><a href="#[103c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdtp_rx_rsp_proc
</UL>

<P><STRONG><a name="[977]"></a>sys_timer_delete</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, sys_timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = sys_timer_delete &rArr; sys_hp_timer_list_remove &rArr; hw_timer_restart &rArr; hw_timer_safe_stop &rArr; hw_timer_set_div
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[101a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_hp_timer_list_remove
<LI><a href="#[101d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_lp_timer_list_free
</UL>
<BR>[Called By]<UL><LI><a href="#[976]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_free_br_link
<LI><a href="#[a0b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_conn_req
<LI><a href="#[b6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_handle_conn_state_evt
<LI><a href="#[c42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_brs_delete
<LI><a href="#[c66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_stop_past_timer
<LI><a href="#[dd1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_free_link
<LI><a href="#[db3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avrcp_free_link
<LI><a href="#[e61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jitter_buffer_low_latency_adjust_latency
<LI><a href="#[e4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jitter_buffer_buffer_reset
<LI><a href="#[e5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_latency_resume
<LI><a href="#[e56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_latency_reset
<LI><a href="#[e4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_latency_buffer_reset
<LI><a href="#[e58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_interval_evaluator_unregister
<LI><a href="#[e43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notification_ringtone_start
<LI><a href="#[e3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notification_vp_start
<LI><a href="#[e0a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_alloc_chann
<LI><a href="#[dfc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rfc_free_chann
<LI><a href="#[ede]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_latency_handle_plc_event
<LI><a href="#[edd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_latency_adjust_check
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_latency_timeout_cback
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jitter_buffer_timeout_cback
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_dac_depop_halt_timer_cb
<LI><a href="#[f76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_sidetone_timer_ctrl
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_ad_depop_halt_timer_cb
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_cccd_timeout
<LI><a href="#[1033]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdtp_free_link
</UL>

<P><STRONG><a name="[101e]"></a>sys_lp_timer_expire</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, sys_timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = sys_lp_timer_expire &rArr; sys_lp_timer_list_find
</UL>
<BR>[Calls]<UL><LI><a href="#[101f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_lp_timer_list_find
</UL>
<BR>[Called By]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_msg_handler
</UL>

<P><STRONG><a name="[1020]"></a>sys_hp_timer_expire</STRONG> (Thumb, 100 bytes, Stack size 24 bytes, sys_timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = sys_hp_timer_expire &rArr; sys_hp_timer_list_insert &rArr; hw_timer_restart &rArr; hw_timer_safe_stop &rArr; hw_timer_set_div
</UL>
<BR>[Calls]<UL><LI><a href="#[1018]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hw_timer_is_active
<LI><a href="#[1019]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hw_timer_restart (via Veneer)
<LI><a href="#[f3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hw_timer_stop (via Veneer)
<LI><a href="#[1017]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_hp_timer_list_insert
<LI><a href="#[1015]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_hp_timer_elapsed_time_update
</UL>
<BR>[Called By]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_msg_handler
</UL>

<P><STRONG><a name="[e9]"></a>sys_msg_handler</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, sys_timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = sys_msg_handler &rArr; sys_hp_timer_expire &rArr; sys_hp_timer_list_insert &rArr; hw_timer_restart &rArr; hw_timer_safe_stop &rArr; hw_timer_set_div
</UL>
<BR>[Calls]<UL><LI><a href="#[101e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_lp_timer_expire
<LI><a href="#[1020]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_hp_timer_expire
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sys_timer.o(.text)
</UL>
<P><STRONG><a name="[1021]"></a>le_set_local_ltk</STRONG> (Thumb, 70 bytes, Stack size 48 bytes, gap_lib_le_patch.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[1023]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_save_key
<LI><a href="#[1022]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_get_key
</UL>

<P><STRONG><a name="[d87]"></a>patch_le_bond_handle_auth_key_req_ind</STRONG> (Thumb, 142 bytes, Stack size 88 bytes, gap_lib_le_patch.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = patch_le_bond_handle_auth_key_req_ind
</UL>
<BR>[Calls]<UL><LI><a href="#[100d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_find_key_entry
<LI><a href="#[1025]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btif_authen_key_req_cfm
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[1024]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_find_entry_by_aes
<LI><a href="#[1022]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_get_key
</UL>
<BR>[Called By]<UL><LI><a href="#[d84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_lib_le_handle_btif_msg
</UL>

<P><STRONG><a name="[1026]"></a>le_bond_get_pair_procedure_type</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, gap_lib_le_patch.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_get_conn_handle
<LI><a href="#[d8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sm_find_link_by_handle
</UL>

<P><STRONG><a name="[d96]"></a>le_handle_authen_result_ind</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, gap_lib_le_patch.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = le_handle_authen_result_ind
</UL>
<BR>[Calls]<UL><LI><a href="#[1027]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_bond_handle_auth_result_ind
</UL>
<BR>[Called By]<UL><LI><a href="#[d93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_lib_common_handle_btif_msg
</UL>

<P><STRONG><a name="[d88]"></a>le_ext_adv_handle_acl_disconnect</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, gap_lib_le_patch.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = le_ext_adv_handle_acl_disconnect
</UL>
<BR>[Calls]<UL><LI><a href="#[1028]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_ext_adv_find_by_conn_handle
</UL>
<BR>[Called By]<UL><LI><a href="#[d84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_lib_le_handle_btif_msg
</UL>

<P><STRONG><a name="[102b]"></a>avctp_alloc_link</STRONG> (Thumb, 74 bytes, Stack size 20 bytes, avctp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = avctp_alloc_link
</UL>
<BR>[Called By]<UL><LI><a href="#[dbf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avctp_connect_req
<LI><a href="#[102e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avctp_callback
</UL>

<P><STRONG><a name="[1029]"></a>avctp_free_link</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, avctp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = avctp_free_link
</UL>
<BR>[Calls]<UL><LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[dc1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avctp_connect_cfm
<LI><a href="#[102e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avctp_callback
</UL>

<P><STRONG><a name="[102d]"></a>avctp_find_link_by_cid</STRONG> (Thumb, 62 bytes, Stack size 12 bytes, avctp.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[102e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avctp_callback
<LI><a href="#[102c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avctp_handle_l2c_data_ind
</UL>

<P><STRONG><a name="[102a]"></a>avctp_find_link_by_addr</STRONG> (Thumb, 90 bytes, Stack size 24 bytes, avctp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = avctp_find_link_by_addr
</UL>
<BR>[Calls]<UL><LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[dad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avctp_send_data2buf
<LI><a href="#[dc5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avctp_disconnect_req
<LI><a href="#[dbf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avctp_connect_req
<LI><a href="#[dc1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avctp_connect_cfm
<LI><a href="#[102e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avctp_callback
</UL>

<P><STRONG><a name="[dbf]"></a>avctp_connect_req</STRONG> (Thumb, 82 bytes, Stack size 24 bytes, avctp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = avctp_connect_req &rArr; avctp_find_link_by_addr
</UL>
<BR>[Calls]<UL><LI><a href="#[e32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpa_send_l2c_conn_req
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[102a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avctp_find_link_by_addr
<LI><a href="#[102b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avctp_alloc_link
</UL>
<BR>[Called By]<UL><LI><a href="#[9f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avrcp_connect_req
</UL>

<P><STRONG><a name="[dc5]"></a>avctp_disconnect_req</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, avctp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = avctp_disconnect_req &rArr; avctp_find_link_by_addr
</UL>
<BR>[Calls]<UL><LI><a href="#[e08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpa_send_l2c_disconn_req
<LI><a href="#[102a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avctp_find_link_by_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[9ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avrcp_disconnect_req
<LI><a href="#[102e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avctp_callback
<LI><a href="#[102c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avctp_handle_l2c_data_ind
</UL>

<P><STRONG><a name="[dc1]"></a>avctp_connect_cfm</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, avctp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = avctp_connect_cfm &rArr; avctp_find_link_by_addr
</UL>
<BR>[Calls]<UL><LI><a href="#[e21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpa_send_l2c_conn_cfm
<LI><a href="#[102a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avctp_find_link_by_addr
<LI><a href="#[1029]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avctp_free_link
</UL>
<BR>[Called By]<UL><LI><a href="#[9ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avrcp_connect_cfm
<LI><a href="#[dc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avrcp_handle_conn_ind
</UL>

<P><STRONG><a name="[dad]"></a>avctp_send_data2buf</STRONG> (Thumb, 204 bytes, Stack size 64 bytes, avctp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = avctp_send_data2buf &rArr; avctp_find_link_by_addr
</UL>
<BR>[Calls]<UL><LI><a href="#[e01]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpa_get_l2c_buf
<LI><a href="#[e03]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpa_send_l2c_data_req
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[102a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avctp_find_link_by_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[9f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avrcp_send_vendor_rsp
<LI><a href="#[dbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avrcp_handle_cmd
<LI><a href="#[db6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avrcp_send_vendor_BT_SIG_rsp
<LI><a href="#[daf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avrcp_send_vendor_BT_SIG_cmd
<LI><a href="#[dac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avrcp_send_generic_cmd
</UL>

<P><STRONG><a name="[102c]"></a>avctp_handle_l2c_data_ind</STRONG> (Thumb, 436 bytes, Stack size 48 bytes, avctp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[e01]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpa_get_l2c_buf
<LI><a href="#[e03]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpa_send_l2c_data_req
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[dc5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avctp_disconnect_req
<LI><a href="#[102d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avctp_find_link_by_cid
</UL>
<BR>[Called By]<UL><LI><a href="#[102e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avctp_callback
</UL>

<P><STRONG><a name="[102e]"></a>avctp_callback</STRONG> (Thumb, 482 bytes, Stack size 32 bytes, avctp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[e21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpa_send_l2c_conn_cfm
<LI><a href="#[e25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpa_send_l2c_disconn_cfm
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[dc5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avctp_disconnect_req
<LI><a href="#[102c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avctp_handle_l2c_data_ind
<LI><a href="#[102a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avctp_find_link_by_addr
<LI><a href="#[102d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avctp_find_link_by_cid
<LI><a href="#[1029]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avctp_free_link
<LI><a href="#[102b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avctp_alloc_link
</UL>

<P><STRONG><a name="[dc8]"></a>avctp_init</STRONG> (Thumb, 144 bytes, Stack size 24 bytes, avctp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = avctp_init
</UL>
<BR>[Calls]<UL><LI><a href="#[e2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpa_reg_l2c_proto
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[9f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avrcp_init
</UL>

<P><STRONG><a name="[102f]"></a>avdtp_find_link_by_addr</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, avdtp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = avdtp_find_link_by_addr
</UL>
<BR>[Calls]<UL><LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[da3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdtp_stream_disconnect_req
<LI><a href="#[d9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdtp_stream_connect_req
<LI><a href="#[da7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdtp_signal_start_cfm
<LI><a href="#[1037]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdtp_signal_set_cfg_req
<LI><a href="#[1038]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdtp_signal_open_req
<LI><a href="#[1036]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdtp_signal_get_capability_req
<LI><a href="#[d9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdtp_signal_discover_req
<LI><a href="#[da2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdtp_signal_disconnect_req
<LI><a href="#[da6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdtp_signal_delay_report_req
<LI><a href="#[da4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdtp_signal_connect_req
<LI><a href="#[d9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdtp_signal_connect_cfm
<LI><a href="#[da5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdtp_signal_close_req
<LI><a href="#[1030]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdtp_signal_abort_req
<LI><a href="#[1043]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdtp_handle_conn_rsp
<LI><a href="#[1042]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdtp_handle_conn_req
<LI><a href="#[1039]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdtp_cmd_bad_state_proc
</UL>

<P><STRONG><a name="[da2]"></a>avdtp_signal_disconnect_req</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, avdtp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = avdtp_signal_disconnect_req &rArr; avdtp_find_link_by_addr
</UL>
<BR>[Calls]<UL><LI><a href="#[e08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpa_send_l2c_disconn_req
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[102f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdtp_find_link_by_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[9be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;a2dp_disconnect_req
<LI><a href="#[da0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;a2dp_callback
<LI><a href="#[103c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdtp_rx_rsp_proc
<LI><a href="#[1031]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdtp_tout_cback
</UL>

<P><STRONG><a name="[da3]"></a>avdtp_stream_disconnect_req</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, avdtp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = avdtp_stream_disconnect_req &rArr; avdtp_find_link_by_addr
</UL>
<BR>[Calls]<UL><LI><a href="#[e08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpa_send_l2c_disconn_req
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[102f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdtp_find_link_by_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[da0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;a2dp_callback
<LI><a href="#[103c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdtp_rx_rsp_proc
<LI><a href="#[1031]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdtp_tout_cback
</UL>

<P><STRONG><a name="[1030]"></a>avdtp_signal_abort_req</STRONG> (Thumb, 160 bytes, Stack size 40 bytes, avdtp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[e01]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpa_get_l2c_buf
<LI><a href="#[e03]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpa_send_l2c_data_req
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[9b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_start
<LI><a href="#[102f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdtp_find_link_by_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[103c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdtp_rx_rsp_proc
<LI><a href="#[1031]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdtp_tout_cback
</UL>

<P><STRONG><a name="[1031]"></a>avdtp_tout_cback</STRONG> (Thumb, 106 bytes, Stack size 16 bytes, avdtp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[9b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_id_get
<LI><a href="#[da3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdtp_stream_disconnect_req
<LI><a href="#[da2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdtp_signal_disconnect_req
<LI><a href="#[1030]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdtp_signal_abort_req
</UL>

<P><STRONG><a name="[1032]"></a>avdtp_alloc_link</STRONG> (Thumb, 124 bytes, Stack size 32 bytes, avdtp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = avdtp_alloc_link &rArr; sys_timer_create
</UL>
<BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[9b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_create
</UL>
<BR>[Called By]<UL><LI><a href="#[da4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdtp_signal_connect_req
<LI><a href="#[1042]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdtp_handle_conn_req
</UL>

<P><STRONG><a name="[1033]"></a>avdtp_free_link</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, avdtp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = avdtp_free_link &rArr; sys_timer_delete &rArr; sys_hp_timer_list_remove &rArr; hw_timer_restart &rArr; hw_timer_safe_stop &rArr; hw_timer_set_div
</UL>
<BR>[Calls]<UL><LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[977]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_delete
</UL>
<BR>[Called By]<UL><LI><a href="#[d9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdtp_signal_connect_cfm
<LI><a href="#[1046]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdtp_handle_disconn_rsp
<LI><a href="#[1045]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdtp_handle_disconn_ind
<LI><a href="#[1044]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdtp_handle_conn_cmpl
<LI><a href="#[1043]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdtp_handle_conn_rsp
</UL>

<P><STRONG><a name="[1040]"></a>avdtp_find_link_by_cid</STRONG> (Thumb, 64 bytes, Stack size 20 bytes, avdtp.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1046]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdtp_handle_disconn_rsp
<LI><a href="#[1045]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdtp_handle_disconn_ind
<LI><a href="#[1044]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdtp_handle_conn_cmpl
<LI><a href="#[1041]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdtp_handle_data_rsp
<LI><a href="#[103f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdtp_handle_data_ind
</UL>

<P><STRONG><a name="[da4]"></a>avdtp_signal_connect_req</STRONG> (Thumb, 92 bytes, Stack size 32 bytes, avdtp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = avdtp_signal_connect_req &rArr; avdtp_alloc_link &rArr; sys_timer_create
</UL>
<BR>[Calls]<UL><LI><a href="#[e32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpa_send_l2c_conn_req
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[1032]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdtp_alloc_link
<LI><a href="#[102f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdtp_find_link_by_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[9c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;a2dp_signal_connect_req
</UL>

<P><STRONG><a name="[d9c]"></a>avdtp_stream_connect_req</STRONG> (Thumb, 98 bytes, Stack size 24 bytes, avdtp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = avdtp_stream_connect_req &rArr; avdtp_find_link_by_addr
</UL>
<BR>[Calls]<UL><LI><a href="#[e32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpa_send_l2c_conn_req
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[102f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdtp_find_link_by_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[d9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;a2dp_stream_connect_req
</UL>

<P><STRONG><a name="[1034]"></a>avdtp_remote_capability_parse</STRONG> (Thumb, 332 bytes, Stack size 32 bytes, avdtp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[336]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[103c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdtp_rx_rsp_proc
</UL>

<P><STRONG><a name="[1035]"></a>avdtp_capability_check</STRONG> (Thumb, 684 bytes, Stack size 56 bytes, avdtp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[103b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdtp_rx_cmd_proc
</UL>

<P><STRONG><a name="[d9e]"></a>avdtp_signal_discover_req</STRONG> (Thumb, 142 bytes, Stack size 40 bytes, avdtp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = avdtp_signal_discover_req &rArr; sys_timer_start &rArr; sys_hp_timer_list_insert &rArr; hw_timer_restart &rArr; hw_timer_safe_stop &rArr; hw_timer_set_div
</UL>
<BR>[Calls]<UL><LI><a href="#[e01]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpa_get_l2c_buf
<LI><a href="#[e03]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpa_send_l2c_data_req
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[9b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_start
<LI><a href="#[102f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdtp_find_link_by_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[1038]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdtp_signal_open_req
<LI><a href="#[d9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;a2dp_signal_discover
</UL>

<P><STRONG><a name="[da6]"></a>avdtp_signal_delay_report_req</STRONG> (Thumb, 198 bytes, Stack size 40 bytes, avdtp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = avdtp_signal_delay_report_req &rArr; avdtp_find_link_by_addr
</UL>
<BR>[Calls]<UL><LI><a href="#[e01]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpa_get_l2c_buf
<LI><a href="#[e03]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpa_send_l2c_data_req
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[102f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdtp_find_link_by_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[9c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;a2dp_signal_delay_report
<LI><a href="#[103c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdtp_rx_rsp_proc
<LI><a href="#[103b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdtp_rx_cmd_proc
</UL>

<P><STRONG><a name="[1036]"></a>avdtp_signal_get_capability_req</STRONG> (Thumb, 188 bytes, Stack size 40 bytes, avdtp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[e01]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpa_get_l2c_buf
<LI><a href="#[e03]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpa_send_l2c_data_req
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[9b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_start
<LI><a href="#[102f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdtp_find_link_by_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[103c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdtp_rx_rsp_proc
</UL>

<P><STRONG><a name="[1037]"></a>avdtp_signal_set_cfg_req</STRONG> (Thumb, 2472 bytes, Stack size 56 bytes, avdtp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[e01]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpa_get_l2c_buf
<LI><a href="#[e03]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpa_send_l2c_data_req
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[9b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_start
<LI><a href="#[102f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdtp_find_link_by_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[103c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdtp_rx_rsp_proc
</UL>

<P><STRONG><a name="[1038]"></a>avdtp_signal_open_req</STRONG> (Thumb, 182 bytes, Stack size 40 bytes, avdtp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[e01]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpa_get_l2c_buf
<LI><a href="#[e03]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpa_send_l2c_data_req
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[9b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_start
<LI><a href="#[d9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdtp_signal_discover_req
<LI><a href="#[102f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdtp_find_link_by_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[103c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdtp_rx_rsp_proc
</UL>

<P><STRONG><a name="[da5]"></a>avdtp_signal_close_req</STRONG> (Thumb, 168 bytes, Stack size 40 bytes, avdtp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = avdtp_signal_close_req &rArr; sys_timer_start &rArr; sys_hp_timer_list_insert &rArr; hw_timer_restart &rArr; hw_timer_safe_stop &rArr; hw_timer_set_div
</UL>
<BR>[Calls]<UL><LI><a href="#[e01]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpa_get_l2c_buf
<LI><a href="#[e03]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpa_send_l2c_data_req
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[9b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_start
<LI><a href="#[102f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdtp_find_link_by_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[9be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;a2dp_disconnect_req
</UL>

<P><STRONG><a name="[1039]"></a>avdtp_cmd_bad_state_proc</STRONG> (Thumb, 202 bytes, Stack size 48 bytes, avdtp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[e01]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpa_get_l2c_buf
<LI><a href="#[e03]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpa_send_l2c_data_req
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[102f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdtp_find_link_by_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[103b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdtp_rx_cmd_proc
</UL>

<P><STRONG><a name="[103a]"></a>avdtp_cmd_error_check_proc</STRONG> (Thumb, 452 bytes, Stack size 48 bytes, avdtp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[e01]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpa_get_l2c_buf
<LI><a href="#[e03]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpa_send_l2c_data_req
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[103b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdtp_rx_cmd_proc
</UL>

<P><STRONG><a name="[da7]"></a>avdtp_signal_start_cfm</STRONG> (Thumb, 202 bytes, Stack size 40 bytes, avdtp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = avdtp_signal_start_cfm &rArr; avdtp_find_link_by_addr
</UL>
<BR>[Calls]<UL><LI><a href="#[e01]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpa_get_l2c_buf
<LI><a href="#[e03]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpa_send_l2c_data_req
<LI><a href="#[102f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdtp_find_link_by_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[9bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;a2dp_signal_start_cfm
</UL>

<P><STRONG><a name="[103b]"></a>avdtp_rx_cmd_proc</STRONG> (Thumb, 2094 bytes, Stack size 72 bytes, avdtp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[e01]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpa_get_l2c_buf
<LI><a href="#[e03]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpa_send_l2c_data_req
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[da6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdtp_signal_delay_report_req
<LI><a href="#[103a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdtp_cmd_error_check_proc
<LI><a href="#[1039]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdtp_cmd_bad_state_proc
<LI><a href="#[1035]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdtp_capability_check
</UL>
<BR>[Called By]<UL><LI><a href="#[103d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdtp_signal_proc
</UL>

<P><STRONG><a name="[103c]"></a>avdtp_rx_rsp_proc</STRONG> (Thumb, 1042 bytes, Stack size 48 bytes, avdtp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[9b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_stop
<LI><a href="#[da3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdtp_stream_disconnect_req
<LI><a href="#[1037]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdtp_signal_set_cfg_req
<LI><a href="#[1038]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdtp_signal_open_req
<LI><a href="#[1036]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdtp_signal_get_capability_req
<LI><a href="#[da2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdtp_signal_disconnect_req
<LI><a href="#[da6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdtp_signal_delay_report_req
<LI><a href="#[1030]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdtp_signal_abort_req
<LI><a href="#[1034]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdtp_remote_capability_parse
</UL>
<BR>[Called By]<UL><LI><a href="#[103d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdtp_signal_proc
</UL>

<P><STRONG><a name="[103d]"></a>avdtp_signal_proc</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, avdtp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[103c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdtp_rx_rsp_proc
<LI><a href="#[103b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdtp_rx_cmd_proc
</UL>
<BR>[Called By]<UL><LI><a href="#[103e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdtp_handle_signal_ind
</UL>

<P><STRONG><a name="[103e]"></a>avdtp_handle_signal_ind</STRONG> (Thumb, 206 bytes, Stack size 32 bytes, avdtp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[103d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdtp_signal_proc
</UL>
<BR>[Called By]<UL><LI><a href="#[103f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdtp_handle_data_ind
</UL>

<P><STRONG><a name="[103f]"></a>avdtp_handle_data_ind</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, avdtp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[103e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdtp_handle_signal_ind
<LI><a href="#[1040]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdtp_find_link_by_cid
</UL>
<BR>[Called By]<UL><LI><a href="#[1047]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdtp_l2c_cback
</UL>

<P><STRONG><a name="[1041]"></a>avdtp_handle_data_rsp</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, avdtp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1040]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdtp_find_link_by_cid
</UL>
<BR>[Called By]<UL><LI><a href="#[1047]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdtp_l2c_cback
</UL>

<P><STRONG><a name="[1042]"></a>avdtp_handle_conn_req</STRONG> (Thumb, 184 bytes, Stack size 40 bytes, avdtp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[e21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpa_send_l2c_conn_cfm
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[1032]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdtp_alloc_link
<LI><a href="#[102f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdtp_find_link_by_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[1047]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdtp_l2c_cback
</UL>

<P><STRONG><a name="[d9f]"></a>avdtp_signal_connect_cfm</STRONG> (Thumb, 50 bytes, Stack size 24 bytes, avdtp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = avdtp_signal_connect_cfm &rArr; avdtp_free_link &rArr; sys_timer_delete &rArr; sys_hp_timer_list_remove &rArr; hw_timer_restart &rArr; hw_timer_safe_stop &rArr; hw_timer_set_div
</UL>
<BR>[Calls]<UL><LI><a href="#[e21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpa_send_l2c_conn_cfm
<LI><a href="#[1033]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdtp_free_link
<LI><a href="#[102f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdtp_find_link_by_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[9bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;a2dp_signal_connect_cfm
</UL>

<P><STRONG><a name="[1043]"></a>avdtp_handle_conn_rsp</STRONG> (Thumb, 152 bytes, Stack size 16 bytes, avdtp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[1033]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdtp_free_link
<LI><a href="#[102f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdtp_find_link_by_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[1047]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdtp_l2c_cback
</UL>

<P><STRONG><a name="[1044]"></a>avdtp_handle_conn_cmpl</STRONG> (Thumb, 168 bytes, Stack size 24 bytes, avdtp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[e08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpa_send_l2c_disconn_req
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[1040]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdtp_find_link_by_cid
<LI><a href="#[1033]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdtp_free_link
</UL>
<BR>[Called By]<UL><LI><a href="#[1047]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdtp_l2c_cback
</UL>

<P><STRONG><a name="[1045]"></a>avdtp_handle_disconn_ind</STRONG> (Thumb, 112 bytes, Stack size 16 bytes, avdtp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[e25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpa_send_l2c_disconn_cfm
<LI><a href="#[e08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpa_send_l2c_disconn_req
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[1040]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdtp_find_link_by_cid
<LI><a href="#[1033]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdtp_free_link
</UL>
<BR>[Called By]<UL><LI><a href="#[1047]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdtp_l2c_cback
</UL>

<P><STRONG><a name="[1046]"></a>avdtp_handle_disconn_rsp</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, avdtp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[1040]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdtp_find_link_by_cid
<LI><a href="#[1033]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdtp_free_link
</UL>
<BR>[Called By]<UL><LI><a href="#[1047]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdtp_l2c_cback
</UL>

<P><STRONG><a name="[1047]"></a>avdtp_l2c_cback</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, avdtp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1046]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdtp_handle_disconn_rsp
<LI><a href="#[1045]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdtp_handle_disconn_ind
<LI><a href="#[1044]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdtp_handle_conn_cmpl
<LI><a href="#[1043]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdtp_handle_conn_rsp
<LI><a href="#[1042]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdtp_handle_conn_req
<LI><a href="#[1041]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdtp_handle_data_rsp
<LI><a href="#[103f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avdtp_handle_data_ind
</UL>

<P><STRONG><a name="[da8]"></a>avdtp_codec_add</STRONG> (Thumb, 272 bytes, Stack size 20 bytes, avdtp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = avdtp_codec_add
</UL>
<BR>[Called By]<UL><LI><a href="#[9c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;a2dp_codec_add
</UL>

<P><STRONG><a name="[da9]"></a>avdtp_codec_delete</STRONG> (Thumb, 164 bytes, Stack size 20 bytes, avdtp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = avdtp_codec_delete
</UL>
<BR>[Called By]<UL><LI><a href="#[9c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;a2dp_codec_delete
</UL>

<P><STRONG><a name="[daa]"></a>avdtp_role_set</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, avdtp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = avdtp_role_set
</UL>
<BR>[Called By]<UL><LI><a href="#[9c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;a2dp_role_set
</UL>

<P><STRONG><a name="[dab]"></a>avdtp_init</STRONG> (Thumb, 230 bytes, Stack size 32 bytes, avdtp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = avdtp_init
</UL>
<BR>[Calls]<UL><LI><a href="#[e2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpa_reg_l2c_proto
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[9c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;a2dp_init
</UL>

<P><STRONG><a name="[1345]"></a>notification_msg_handler</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, notification_buffer.o(.text), UNUSED)

<P><STRONG><a name="[e47]"></a>notification_buffer_init</STRONG> (Thumb, 176 bytes, Stack size 32 bytes, notification_buffer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = notification_buffer_init &rArr; sys_mgr_event_register
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[e92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_mgr_event_register
</UL>
<BR>[Called By]<UL><LI><a href="#[a40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notification_init
</UL>

<P><STRONG><a name="[e40]"></a>notification_buffer_reset</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, notification_buffer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = notification_buffer_reset
</UL>
<BR>[Called By]<UL><LI><a href="#[e3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notification_start_vp
</UL>

<P><STRONG><a name="[e41]"></a>notification_buffer_config</STRONG> (Thumb, 136 bytes, Stack size 32 bytes, notification_buffer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = notification_buffer_config
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[e3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notification_start_vp
</UL>

<P><STRONG><a name="[e3e]"></a>notification_buffer_prequeue</STRONG> (Thumb, 248 bytes, Stack size 48 bytes, notification_buffer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = notification_buffer_prequeue &rArr; notification_buffer_frame_push &rArr; notification_buffer_frame_write
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_flash_nor_read
<LI><a href="#[104b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notification_buffer_stream_push
<LI><a href="#[1049]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notification_buffer_frame_push
</UL>
<BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_voice_prompt_cback
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notification_buffer_vp_cback
</UL>

<P><STRONG><a name="[e3a]"></a>notification_buffer_peek</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, notification_buffer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = notification_buffer_peek &rArr; notification_buffer_stream_peek
</UL>
<BR>[Calls]<UL><LI><a href="#[104d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notification_buffer_stream_peek
</UL>
<BR>[Called By]<UL><LI><a href="#[e38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notification_vp_data_req
</UL>

<P><STRONG><a name="[e3b]"></a>notification_buffer_flush</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, notification_buffer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = notification_buffer_flush &rArr; notification_buffer_stream_flush
</UL>
<BR>[Calls]<UL><LI><a href="#[104e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notification_buffer_stream_flush
<LI><a href="#[104a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notification_buffer_frame_flush
</UL>
<BR>[Called By]<UL><LI><a href="#[e38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notification_vp_data_req
</UL>

<P><STRONG><a name="[e91]"></a>audio_plugin_init</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, audio_plugin.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[a3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_init
</UL>

<P><STRONG><a name="[e6e]"></a>audio_plugin_occasion_occur</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, audio_plugin.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = audio_plugin_occasion_occur &rArr; audio_path_msg_send
</UL>
<BR>[Calls]<UL><LI><a href="#[104f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_msg_send
</UL>
<BR>[Called By]<UL><LI><a href="#[e6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_codec_event_handler
<LI><a href="#[ec7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_plugin_msg_handle
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;voice_dsp_mgr_session_cb
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;record_dsp_mgr_session_cb
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notification_dsp_mgr_session_cb
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_dsp_mgr_session_cb
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;analog_dsp_mgr_session_cb
</UL>

<P><STRONG><a name="[ec2]"></a>audio_codec_chann_num_get</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, audio_codec.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1050]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sbc_chann_num_get
</UL>
<BR>[Called By]<UL><LI><a href="#[e95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_record_init
<LI><a href="#[e93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_audio_init
<LI><a href="#[f2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;record_encode_set
<LI><a href="#[f2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;voice_encode_decode_set
<LI><a href="#[f29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_decode_set
</UL>

<P><STRONG><a name="[f2a]"></a>audio_codec_frame_size_get</STRONG> (Thumb, 116 bytes, Stack size 0 bytes, audio_codec.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = audio_codec_frame_size_get &rArr; opus_frame_size_get
</UL>
<BR>[Calls]<UL><LI><a href="#[1051]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;opus_frame_size_get
</UL>
<BR>[Called By]<UL><LI><a href="#[f2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;record_encode_set
<LI><a href="#[f2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;voice_encode_decode_set
<LI><a href="#[f29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_decode_set
</UL>

<P><STRONG><a name="[f2b]"></a>audio_codec_frame_duration_get</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, audio_codec.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[f2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;record_encode_set
<LI><a href="#[f2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;voice_encode_decode_set
<LI><a href="#[f29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_decode_set
</UL>

<P><STRONG><a name="[1052]"></a>codec_mgr_loopback_enable</STRONG> (Thumb, 126 bytes, Stack size 64 bytes, codec_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = codec_mgr_loopback_enable &rArr; codec_drv_adc_config_set &rArr; codec_drv_event_process &rArr; codec_drv_set_sample_rate
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[f96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_adc_config_set
<LI><a href="#[f8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_config_init
</UL>
<BR>[Called By]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_adc_gain_set_action
<LI><a href="#[106c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_phy_path_enable
</UL>

<P><STRONG><a name="[1053]"></a>codec_mgr_loopback_disable</STRONG> (Thumb, 124 bytes, Stack size 64 bytes, codec_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = codec_mgr_loopback_disable &rArr; codec_drv_adc_config_set &rArr; codec_drv_event_process &rArr; codec_drv_set_sample_rate
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[f96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_adc_config_set
<LI><a href="#[f8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_config_init
</UL>
<BR>[Called By]<UL><LI><a href="#[106e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_phy_path_disable
</UL>

<P><STRONG><a name="[105d]"></a>codec_mgr_handle_check</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, codec_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = codec_mgr_handle_check
</UL>
<BR>[Called By]<UL><LI><a href="#[e99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_session_destroy
<LI><a href="#[105e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_session_state_get
<LI><a href="#[105c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_session_control
</UL>

<P><STRONG><a name="[1054]"></a>fsm_run</STRONG> (Thumb, 130 bytes, Stack size 32 bytes, codec_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = fsm_run
</UL>
<BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[105b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_event_post
<LI><a href="#[1059]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_op_event_post
<LI><a href="#[1057]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_session_event_post
</UL>

<P><STRONG><a name="[1055]"></a>fsm_init</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, codec_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = fsm_init &rArr; fsm_create_trans_index_table
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[1056]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fsm_create_trans_index_table
</UL>
<BR>[Called By]<UL><LI><a href="#[ec3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_session_create
<LI><a href="#[e8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_init
</UL>

<P><STRONG><a name="[eb9]"></a>codec_mgr_sidetone_set</STRONG> (Thumb, 236 bytes, Stack size 56 bytes, codec_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = codec_mgr_sidetone_set &rArr; codec_drv_sidetone_disable &rArr; codec_drv_sidetone_timer_ctrl &rArr; sys_timer_restart &rArr; sys_hp_timer_list_insert &rArr; hw_timer_restart &rArr; hw_timer_safe_stop &rArr; hw_timer_set_div
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[f91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_sidetone_config_set
<LI><a href="#[f8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_config_init
<LI><a href="#[f84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_sidetone_gain_convert
<LI><a href="#[f82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_sidetone_disable
<LI><a href="#[f7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_sidetone_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[a98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_hw_sidetone_enable
<LI><a href="#[a9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_hw_sidetone_disable
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_session_enter_fading_out
</UL>

<P><STRONG><a name="[105c]"></a>codec_mgr_session_control</STRONG> (Thumb, 112 bytes, Stack size 24 bytes, codec_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = codec_mgr_session_control &rArr; codec_mgr_op_event_post &rArr; fsm_run
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[1059]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_op_event_post
<LI><a href="#[105d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_handle_check
</UL>
<BR>[Called By]<UL><LI><a href="#[e87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_session_enable
<LI><a href="#[ec8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_session_disable
</UL>

<P><STRONG><a name="[e87]"></a>codec_mgr_session_enable</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, codec_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = codec_mgr_session_enable &rArr; codec_mgr_session_control &rArr; codec_mgr_op_event_post &rArr; fsm_run
</UL>
<BR>[Calls]<UL><LI><a href="#[105c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_session_control
</UL>
<BR>[Called By]<UL><LI><a href="#[e85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_voice_start
<LI><a href="#[e76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_schedule
</UL>

<P><STRONG><a name="[105e]"></a>codec_mgr_session_state_get</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, codec_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = codec_mgr_session_state_get &rArr; codec_mgr_handle_check
</UL>
<BR>[Calls]<UL><LI><a href="#[105d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_handle_check
</UL>
<BR>[Called By]<UL><LI><a href="#[ea7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_dac_gain_set
<LI><a href="#[106b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_adc_gain_config
</UL>

<P><STRONG><a name="[ec1]"></a>codec_mgr_power_off</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, codec_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = codec_mgr_power_off &rArr; codec_mgr_event_post &rArr; fsm_run
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[105b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_event_post
</UL>
<BR>[Called By]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_mgr_codec_timer_cback
<LI><a href="#[ec7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_plugin_msg_handle
</UL>

<P><STRONG><a name="[ec3]"></a>codec_mgr_session_create</STRONG> (Thumb, 242 bytes, Stack size 56 bytes, codec_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = codec_mgr_session_create &rArr; audio_route_physical_path_take &rArr; audio_route_physical_path_get &rArr; audio_route_voice_physical_path_get
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[aa5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_route_physical_path_take
<LI><a href="#[f16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_route_physical_path_give
<LI><a href="#[f30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_route_sport_cfg_get
<LI><a href="#[1055]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fsm_init
</UL>
<BR>[Called By]<UL><LI><a href="#[e98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_analog_init
<LI><a href="#[e97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_vp_init
<LI><a href="#[e96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_tone_init
<LI><a href="#[e95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_record_init
<LI><a href="#[e94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_voice_init
<LI><a href="#[e93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_audio_init
</UL>

<P><STRONG><a name="[e99]"></a>codec_mgr_session_destroy</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, codec_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = codec_mgr_session_destroy &rArr; fsm_deinit
</UL>
<BR>[Calls]<UL><LI><a href="#[105f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fsm_deinit
<LI><a href="#[105d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_handle_check
</UL>
<BR>[Called By]<UL><LI><a href="#[a66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_destory
<LI><a href="#[e98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_analog_init
<LI><a href="#[e97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_vp_init
<LI><a href="#[e96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_tone_init
<LI><a href="#[e95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_record_init
<LI><a href="#[e94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_voice_init
<LI><a href="#[e93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_audio_init
</UL>

<P><STRONG><a name="[1065]"></a>codec_mgr_get_codec_dmic_clk</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, codec_mgr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1061]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_adc_config_set
</UL>

<P><STRONG><a name="[ead]"></a>codec_mgr_adc_gain_mute</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, codec_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = codec_mgr_adc_gain_mute &rArr; codec_mgr_adc_gain_config &rArr; audio_route_physical_path_take &rArr; audio_route_physical_path_get &rArr; audio_route_voice_physical_path_get
</UL>
<BR>[Calls]<UL><LI><a href="#[106b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_adc_gain_config
</UL>
<BR>[Called By]<UL><LI><a href="#[a54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_adc_mute
</UL>

<P><STRONG><a name="[eac]"></a>codec_mgr_adc_gain_set</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, codec_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = codec_mgr_adc_gain_set &rArr; codec_mgr_adc_gain_config &rArr; audio_route_physical_path_take &rArr; audio_route_physical_path_get &rArr; audio_route_voice_physical_path_get
</UL>
<BR>[Calls]<UL><LI><a href="#[106b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_adc_gain_config
</UL>
<BR>[Called By]<UL><LI><a href="#[a53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_adc_level_set
</UL>

<P><STRONG><a name="[ea7]"></a>codec_mgr_dac_gain_set</STRONG> (Thumb, 140 bytes, Stack size 72 bytes, codec_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = codec_mgr_dac_gain_set &rArr; codec_drv_dac_config_set &rArr; codec_drv_event_process &rArr; codec_drv_set_sample_rate
</UL>
<BR>[Calls]<UL><LI><a href="#[aa5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_route_physical_path_take
<LI><a href="#[f16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_route_physical_path_give
<LI><a href="#[ea4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_route_dac_gain_get
<LI><a href="#[f93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_dac_config_set
<LI><a href="#[f8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_config_init
<LI><a href="#[105e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_session_state_get
</UL>
<BR>[Called By]<UL><LI><a href="#[a51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_dac_level_set
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_session_cfg_set
</UL>

<P><STRONG><a name="[106c]"></a>codec_mgr_phy_path_enable</STRONG> (Thumb, 148 bytes, Stack size 48 bytes, codec_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = codec_mgr_phy_path_enable &rArr; codec_mgr_mic_enable &rArr; codec_mgr_adc_config_set &rArr; codec_drv_adc_config_set &rArr; codec_drv_event_process &rArr; codec_drv_set_sample_rate
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[aa5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_route_physical_path_take
<LI><a href="#[f16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_route_physical_path_give
<LI><a href="#[1052]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_loopback_enable
<LI><a href="#[106d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_mic_enable
<LI><a href="#[1068]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_spk_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_session_cfg_set
</UL>

<P><STRONG><a name="[106e]"></a>codec_mgr_phy_path_disable</STRONG> (Thumb, 188 bytes, Stack size 56 bytes, codec_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = codec_mgr_phy_path_disable &rArr; codec_mgr_loopback_disable &rArr; codec_drv_adc_config_set &rArr; codec_drv_event_process &rArr; codec_drv_set_sample_rate
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[aa5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_route_physical_path_take
<LI><a href="#[f16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_route_physical_path_give
<LI><a href="#[1053]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_loopback_disable
<LI><a href="#[106f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_mix_disable
<LI><a href="#[1069]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_spk_disable
<LI><a href="#[1067]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_mic_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_session_cfg_clear
</UL>

<P><STRONG><a name="[1070]"></a>codec_mgr_bias_setting</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, codec_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = codec_mgr_bias_setting &rArr; codec_drv_bias_config_set &rArr; codec_drv_event_process &rArr; codec_drv_set_sample_rate
</UL>
<BR>[Calls]<UL><LI><a href="#[f8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_bias_config_set
<LI><a href="#[f8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_config_init
<LI><a href="#[1071]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_pad_check_bias_gpio_mode
</UL>
<BR>[Called By]<UL><LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_session_cfg_set
</UL>

<P><STRONG><a name="[eae]"></a>codec_mgr_get_state</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, codec_mgr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[a3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_power_off
</UL>

<P><STRONG><a name="[e8f]"></a>codec_mgr_init</STRONG> (Thumb, 376 bytes, Stack size 24 bytes, codec_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = codec_mgr_init &rArr; codec_drv_init &rArr; audio_pad_init &rArr; audio_pad_load &rArr; audio_pad_mic_set &rArr; audio_pad_dmic_set &rArr; Pad_Config &rArr; flash_cur_bank_img_payload_addr_get
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[f89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_deinit
<LI><a href="#[f87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_init
<LI><a href="#[105f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fsm_deinit
<LI><a href="#[1072]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_eq_load
<LI><a href="#[1055]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fsm_init
</UL>
<BR>[Called By]<UL><LI><a href="#[a3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_init
</UL>

<P><STRONG><a name="[ec8]"></a>codec_mgr_session_disable</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, codec_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = codec_mgr_session_disable &rArr; codec_mgr_session_control &rArr; codec_mgr_op_event_post &rArr; fsm_run
</UL>
<BR>[Calls]<UL><LI><a href="#[105c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_session_control
</UL>
<BR>[Called By]<UL><LI><a href="#[ec7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_plugin_msg_handle
</UL>

<P><STRONG><a name="[ef]"></a>codec_mgr_cback</STRONG> (Thumb, 116 bytes, Stack size 16 bytes, codec_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = codec_mgr_cback &rArr; codec_drv_sidetone_config_clear &rArr; codec_drv_event_process &rArr; codec_drv_set_sample_rate
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[fa5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_sidetone_config_clear
<LI><a href="#[105b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_event_post
<LI><a href="#[1057]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_session_event_post
<LI><a href="#[1058]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_op_queue_peek
</UL>
<BR>[Address Reference Count : 1]<UL><LI> codec_mgr.o(.text)
</UL>
<P><STRONG><a name="[f32]"></a>sport_mgr_sample_rate_get</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, sport_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = sport_mgr_sample_rate_get
</UL>
<BR>[Calls]<UL><LI><a href="#[1073]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_mgr_path_db_get
</UL>
<BR>[Called By]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_mgr_sport_set
</UL>

<P><STRONG><a name="[e6b]"></a>sport_mgr_tx_sample_rate_get</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, sport_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = sport_mgr_tx_sample_rate_get
</UL>
<BR>[Calls]<UL><LI><a href="#[1073]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_mgr_path_db_get
</UL>
<BR>[Called By]<UL><LI><a href="#[e6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_codec_event_handler
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;voice_dsp_mgr_session_cb
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;record_dsp_mgr_session_cb
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notification_dsp_mgr_session_cb
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_dsp_mgr_session_cb
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;analog_dsp_mgr_session_cb
<LI><a href="#[f21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_remote_init
</UL>

<P><STRONG><a name="[e6c]"></a>sport_mgr_rx_sample_rate_get</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, sport_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = sport_mgr_rx_sample_rate_get
</UL>
<BR>[Calls]<UL><LI><a href="#[1073]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_mgr_path_db_get
</UL>
<BR>[Called By]<UL><LI><a href="#[e6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_codec_event_handler
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;voice_dsp_mgr_session_cb
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;record_dsp_mgr_session_cb
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notification_dsp_mgr_session_cb
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_dsp_mgr_session_cb
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;analog_dsp_mgr_session_cb
</UL>

<P><STRONG><a name="[1075]"></a>sport_mgr_init_cfg_get</STRONG> (Thumb, 288 bytes, Stack size 28 bytes, sport_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = sport_mgr_init_cfg_get
</UL>
<BR>[Called By]<UL><LI><a href="#[e8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_mgr_init
<LI><a href="#[ec9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_mgr_disable
<LI><a href="#[107b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_mgr_param_init
</UL>

<P><STRONG><a name="[1074]"></a>sport_mgr_sport_path_take</STRONG> (Thumb, 264 bytes, Stack size 80 bytes, sport_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = sport_mgr_sport_path_take &rArr; audio_route_physical_path_take &rArr; audio_route_physical_path_get &rArr; audio_route_voice_physical_path_get
</UL>
<BR>[Calls]<UL><LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[aa5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_route_physical_path_take
<LI><a href="#[f16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_route_physical_path_give
</UL>
<BR>[Called By]<UL><LI><a href="#[ec4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_mgr_session_create
</UL>

<P><STRONG><a name="[1076]"></a>sport_mgr_sport_path_give</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, sport_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = sport_mgr_sport_path_give
</UL>
<BR>[Called By]<UL><LI><a href="#[ec4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_mgr_session_create
</UL>

<P><STRONG><a name="[e8e]"></a>sport_mgr_init</STRONG> (Thumb, 94 bytes, Stack size 40 bytes, sport_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = sport_mgr_init &rArr; sport_mgr_init_cfg_get
</UL>
<BR>[Calls]<UL><LI><a href="#[1075]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_mgr_init_cfg_get
</UL>
<BR>[Called By]<UL><LI><a href="#[a3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_init
</UL>

<P><STRONG><a name="[ec4]"></a>sport_mgr_session_create</STRONG> (Thumb, 316 bytes, Stack size 80 bytes, sport_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = sport_mgr_session_create &rArr; sport_mgr_sport_path_take &rArr; audio_route_physical_path_take &rArr; audio_route_physical_path_get &rArr; audio_route_voice_physical_path_get
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[f30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_route_sport_cfg_get
<LI><a href="#[1076]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_mgr_sport_path_give
<LI><a href="#[1074]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_mgr_sport_path_take
</UL>
<BR>[Called By]<UL><LI><a href="#[e98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_analog_init
<LI><a href="#[e97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_vp_init
<LI><a href="#[e96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_tone_init
<LI><a href="#[e95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_record_init
<LI><a href="#[e94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_voice_init
<LI><a href="#[e93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_audio_init
</UL>

<P><STRONG><a name="[e9a]"></a>sport_mgr_destroy</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, sport_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = sport_mgr_destroy
</UL>
<BR>[Called By]<UL><LI><a href="#[a66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_destory
<LI><a href="#[e98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_analog_init
<LI><a href="#[e97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_vp_init
<LI><a href="#[e96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_tone_init
<LI><a href="#[e95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_record_init
<LI><a href="#[e94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_voice_init
<LI><a href="#[e93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_audio_init
</UL>

<P><STRONG><a name="[f31]"></a>sport_mgr_tx_channel_mode_get</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, sport_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = sport_mgr_tx_channel_mode_get
</UL>
<BR>[Calls]<UL><LI><a href="#[1073]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_mgr_path_db_get
</UL>
<BR>[Called By]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_mgr_sport_set
</UL>

<P><STRONG><a name="[f33]"></a>sport_mgr_rx_channel_mode_get</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, sport_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = sport_mgr_rx_channel_mode_get
</UL>
<BR>[Calls]<UL><LI><a href="#[1073]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_mgr_path_db_get
</UL>
<BR>[Called By]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_mgr_sport_set
</UL>

<P><STRONG><a name="[ecd]"></a>sport_mgr_enable</STRONG> (Thumb, 204 bytes, Stack size 48 bytes, sport_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = sport_mgr_enable &rArr; sport_mgr_param_set &rArr; sport_drv_trx_config_set &rArr; sport_drv_frac_div_set_dependent &rArr; sport_drv_calc_channel_len_ratio &rArr; __aeabi_fdiv
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[107b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_mgr_param_init
<LI><a href="#[1077]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_mgr_param_set
<LI><a href="#[1073]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_mgr_path_db_get
</UL>
<BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;voice_dsp_mgr_session_cb
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;record_dsp_mgr_session_cb
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notification_dsp_mgr_session_cb
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_dsp_mgr_session_cb
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;analog_dsp_mgr_session_cb
</UL>

<P><STRONG><a name="[ec9]"></a>sport_mgr_disable</STRONG> (Thumb, 244 bytes, Stack size 56 bytes, sport_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = sport_mgr_disable &rArr; Pad_Config &rArr; flash_cur_bank_img_payload_addr_get
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pad_Config (via Veneer)
<LI><a href="#[107e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_drv_enable_module
<LI><a href="#[1075]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_mgr_init_cfg_get
<LI><a href="#[1073]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_mgr_path_db_get
</UL>
<BR>[Called By]<UL><LI><a href="#[ec7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_plugin_msg_handle
</UL>

<P><STRONG><a name="[1085]"></a>bin_loader_session_check</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, bin_loader.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = bin_loader_session_check
</UL>
<BR>[Called By]<UL><LI><a href="#[f0e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bin_loader_token_issue
</UL>

<P><STRONG><a name="[f13]"></a>bin_loader_session_create</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, bin_loader.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = bin_loader_session_create &rArr; bin_loader_driver_reg_cb
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[1084]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bin_loader_driver_reg_cb
</UL>
<BR>[Called By]<UL><LI><a href="#[f12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_load_initial
</UL>

<P><STRONG><a name="[f0e]"></a>bin_loader_token_issue</STRONG> (Thumb, 140 bytes, Stack size 32 bytes, bin_loader.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = bin_loader_token_issue &rArr; bin_loader_session_check
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[1085]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bin_loader_session_check
</UL>
<BR>[Called By]<UL><LI><a href="#[f12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_load_initial
<LI><a href="#[f11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_load_finish
<LI><a href="#[f0d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_load_algorithm_code
</UL>

<P><STRONG><a name="[1086]"></a>bin_loader_msg_handler</STRONG> (Thumb, 204 bytes, Stack size 40 bytes, bin_loader.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
</UL>

<P><STRONG><a name="[e8c]"></a>bin_loader_init</STRONG> (Thumb, 130 bytes, Stack size 24 bytes, bin_loader.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = bin_loader_init &rArr; sys_mgr_event_register
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[e92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_mgr_event_register
</UL>
<BR>[Called By]<UL><LI><a href="#[a3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_init
</UL>

<P><STRONG><a name="[1087]"></a>check_image_header</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, bin_loader_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = check_image_header
</UL>
<BR>[Calls]<UL><LI><a href="#[1088]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_image_crc16 (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[1089]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_fw_get_flash_header
</UL>

<P><STRONG><a name="[108c]"></a>bin_loader_driver_get_img_id_by_scenario</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, bin_loader_driver.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_anc_fw_load_code_driver
</UL>

<P><STRONG><a name="[1089]"></a>dsp_fw_get_flash_header</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, bin_loader_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = dsp_fw_get_flash_header &rArr; check_image_header
</UL>
<BR>[Calls]<UL><LI><a href="#[934]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_header_addr_by_img_id (via Veneer)
<LI><a href="#[1087]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_image_header
</UL>
<BR>[Called By]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_anc_fw_load_code_driver
</UL>

<P><STRONG><a name="[108a]"></a>bin_loader_driver_load_next_bin</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, bin_loader_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = bin_loader_driver_load_next_bin
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[f10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bin_loader_driver_check_image_correct
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_fw_load_image
</UL>

<P><STRONG><a name="[f10]"></a>bin_loader_driver_check_image_correct</STRONG> (Thumb, 94 bytes, Stack size 24 bytes, bin_loader_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = bin_loader_driver_check_image_correct &rArr; bin_loader_driver_load_next_bin
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[108a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bin_loader_driver_load_next_bin
<LI><a href="#[108b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bin_loader_drv_crc16
</UL>
<BR>[Called By]<UL><LI><a href="#[f0f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_load_next_bin
</UL>

<P><STRONG><a name="[1084]"></a>bin_loader_driver_reg_cb</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, bin_loader_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = bin_loader_driver_reg_cb
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[f13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bin_loader_session_create
</UL>

<P><STRONG><a name="[c0]"></a>dsp_anc_fw_load_code_driver</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, bin_loader_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = dsp_anc_fw_load_code_driver &rArr; dsp_fw_get_flash_header &rArr; check_image_header
</UL>
<BR>[Calls]<UL><LI><a href="#[b06]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_img_header_format_size (via Veneer)
<LI><a href="#[1089]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_fw_get_flash_header
<LI><a href="#[108c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bin_loader_driver_get_img_id_by_scenario
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dsp_loader.o(.text)
</UL>
<P><STRONG><a name="[108d]"></a>bin_loader_driver_flash_to_memory</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, bin_loader_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = bin_loader_driver_flash_to_memory
</UL>
<BR>[Calls]<UL><LI><a href="#[108e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_nor_is_request_blocking (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_fw_load_image
</UL>

<P><STRONG><a name="[f3]"></a>dsp_fw_load_image</STRONG> (Thumb, 140 bytes, Stack size 48 bytes, bin_loader_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = dsp_fw_load_image &rArr; bin_loader_driver_dma_decrypt_image
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[1091]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_hal_dsp_generate_aes_key
<LI><a href="#[1090]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_hal_dsp_check_img_valid
<LI><a href="#[108a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bin_loader_driver_load_next_bin
<LI><a href="#[108d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bin_loader_driver_flash_to_memory
<LI><a href="#[1092]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bin_loader_driver_dma_decrypt_image
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bin_loader_driver.o(.text)
</UL>
<P><STRONG><a name="[f42]"></a>hw_timer_get_irqn_from_id</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, hw_tim_internal.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[f39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hw_timer_driver_init_int
</UL>

<P><STRONG><a name="[f41]"></a>hw_timer_get_vectorn_from_id</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, hw_tim_internal.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[f39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hw_timer_driver_init_int
</UL>

<P><STRONG><a name="[f3e]"></a>hw_timer_rcc_clock_cmd</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, hw_tim_internal.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[f39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hw_timer_driver_init_int
</UL>

<P><STRONG><a name="[f5f]"></a>audio_hal_action</STRONG> (Thumb, 82 bytes, Stack size 32 bytes, audio_hal.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = audio_hal_action &rArr; audio_hal_dsp_action
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[1093]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_hal_dsp_action
<LI><a href="#[1094]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_hal_codec_action
</UL>
<BR>[Called By]<UL><LI><a href="#[f5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_adc_analog_parser
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_active_state
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_pm_power_on
<LI><a href="#[1098]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_hal_codec_close
<LI><a href="#[1097]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_hal_codec_open
<LI><a href="#[109f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_pm_power_off
</UL>

<P><STRONG><a name="[1095]"></a>dsp_log_uart_driver_init</STRONG> (Thumb, 70 bytes, Stack size 40 bytes, dsp_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = dsp_log_uart_driver_init
</UL>
<BR>[Calls]<UL><LI><a href="#[1096]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_StructInit (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[f25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_hal_init
</UL>

<P><STRONG><a name="[109a]"></a>dsp_mcu_auto_slow_cfg</STRONG> (Thumb, 68 bytes, Stack size 0 bytes, dsp_driver.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[f1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_hal_shut_down
<LI><a href="#[f1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_hal_reset
<LI><a href="#[f20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_hal_boot
</UL>

<P><STRONG><a name="[1097]"></a>dsp_hal_codec_open</STRONG> (Thumb, 498 bytes, Stack size 40 bytes, dsp_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = dsp_hal_codec_open &rArr; audio_hal_action &rArr; audio_hal_dsp_action
</UL>
<BR>[Calls]<UL><LI><a href="#[acb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btaon_fast_update_safe (via Veneer)
<LI><a href="#[f5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_hal_action
<LI><a href="#[f3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hw_timer_stop (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[f1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_hal_reset
<LI><a href="#[f20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_hal_boot
</UL>

<P><STRONG><a name="[1098]"></a>dsp_hal_codec_close</STRONG> (Thumb, 198 bytes, Stack size 24 bytes, dsp_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = dsp_hal_codec_close &rArr; audio_hal_action &rArr; audio_hal_dsp_action
</UL>
<BR>[Calls]<UL><LI><a href="#[acb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btaon_fast_update_safe (via Veneer)
<LI><a href="#[f5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_hal_action
<LI><a href="#[1099]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_power_off
</UL>
<BR>[Called By]<UL><LI><a href="#[f1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_hal_shut_down
</UL>

<P><STRONG><a name="[f20]"></a>dsp_hal_boot</STRONG> (Thumb, 82 bytes, Stack size 8 bytes, dsp_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = dsp_hal_boot &rArr; dsp_hal_codec_open &rArr; audio_hal_action &rArr; audio_hal_dsp_action
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[109c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shm_io_ctl
<LI><a href="#[109b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_power_on
<LI><a href="#[fad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shm_init
<LI><a href="#[1097]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_hal_codec_open
<LI><a href="#[109a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_mcu_auto_slow_cfg
</UL>
<BR>[Called By]<UL><LI><a href="#[f1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_mgr_start
</UL>

<P><STRONG><a name="[f1b]"></a>dsp_hal_reset</STRONG> (Thumb, 156 bytes, Stack size 16 bytes, dsp_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = dsp_hal_reset &rArr; shm_enable &rArr; h2d_cmd_send &rArr; shm_cmd_send &rArr; wr_queue_send
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[fba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shm_cfg_asrc
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shm_state_get (via Veneer)
<LI><a href="#[109b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_power_on
<LI><a href="#[fb9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shm_reset
<LI><a href="#[fb4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shm_enable
<LI><a href="#[1097]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_hal_codec_open
<LI><a href="#[109a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_mcu_auto_slow_cfg
</UL>
<BR>[Called By]<UL><LI><a href="#[f22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_mailbox_process
<LI><a href="#[f1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_power_on
</UL>

<P><STRONG><a name="[f1d]"></a>dsp_hal_shut_down</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, dsp_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = dsp_hal_shut_down &rArr; dsp_hal_codec_close &rArr; audio_hal_action &rArr; audio_hal_dsp_action
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[fba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shm_cfg_asrc
<LI><a href="#[faf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shm_cfg_dsp_clk
<LI><a href="#[fb2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shm_cfg_mem
<LI><a href="#[fbb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shm_disable
<LI><a href="#[1098]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_hal_codec_close
<LI><a href="#[109a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_mcu_auto_slow_cfg
</UL>
<BR>[Called By]<UL><LI><a href="#[f1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_state_machine
</UL>

<P><STRONG><a name="[27f]"></a>dsp_pm_power_on</STRONG> (Thumb, 310 bytes, Stack size 40 bytes, dsp_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = dsp_pm_power_on &rArr; hw_timer_create &rArr; hw_timer_create_int &rArr; hw_timer_driver_init_int &rArr; hw_timer_update_isr &rArr; RamVectorTableUpdate_for_xip_isr
</UL>
<BR>[Calls]<UL><LI><a href="#[acb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btaon_fast_update_safe (via Veneer)
<LI><a href="#[109d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hw_timer_start (via Veneer)
<LI><a href="#[f3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hw_timer_create
<LI><a href="#[f5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_hal_action
<LI><a href="#[1019]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hw_timer_restart (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[109e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_pm_init
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_pm_lps_exit
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_pm_timer_cback
</UL>

<P><STRONG><a name="[109e]"></a>dsp_pm_init</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, dsp_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = dsp_pm_init &rArr; dsp_pm_power_on &rArr; hw_timer_create &rArr; hw_timer_create_int &rArr; hw_timer_driver_init_int &rArr; hw_timer_update_isr &rArr; RamVectorTableUpdate_for_xip_isr
</UL>
<BR>[Calls]<UL><LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_pm_power_on
</UL>
<BR>[Called By]<UL><LI><a href="#[f25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_hal_init
</UL>

<P><STRONG><a name="[f25]"></a>dsp_hal_init</STRONG> (Thumb, 154 bytes, Stack size 24 bytes, dsp_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = dsp_hal_init &rArr; dsp_pm_init &rArr; dsp_pm_power_on &rArr; hw_timer_create &rArr; hw_timer_create_int &rArr; hw_timer_driver_init_int &rArr; hw_timer_update_isr &rArr; RamVectorTableUpdate_for_xip_isr
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[565]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;io_dlps_register_exit_cb
<LI><a href="#[564]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;io_dlps_register_enter_cb
<LI><a href="#[e92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_mgr_event_register
<LI><a href="#[109e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_pm_init
<LI><a href="#[1095]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_log_uart_driver_init
</UL>
<BR>[Called By]<UL><LI><a href="#[e8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_mgr_init
</UL>

<P><STRONG><a name="[efe]"></a>dsp_hal_register_cback</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, dsp_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = dsp_hal_register_cback &rArr; sys_ipc_subscribe
</UL>
<BR>[Calls]<UL><LI><a href="#[a41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_ipc_subscribe
</UL>
<BR>[Called By]<UL><LI><a href="#[efd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_ipc_init
<LI><a href="#[e8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_mgr_init
</UL>

<P><STRONG><a name="[f2e]"></a>dsp_hal_boot_ref_cnt_get</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, dsp_driver.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[e83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_mgr_power_on_check
</UL>

<P><STRONG><a name="[f09]"></a>dsp_hal_is_fpga_mode</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, dsp_driver.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[f08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_load_init
</UL>

<P><STRONG><a name="[109f]"></a>dsp_pm_power_off</STRONG> (Thumb, 166 bytes, Stack size 24 bytes, dsp_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = dsp_pm_power_off &rArr; audio_hal_action &rArr; audio_hal_dsp_action
</UL>
<BR>[Calls]<UL><LI><a href="#[acb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btaon_fast_update_safe (via Veneer)
<LI><a href="#[f5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_hal_action
<LI><a href="#[f3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hw_timer_stop (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_pm_lps_enter
</UL>

<P><STRONG><a name="[fc]"></a>dsp_pm_lps_enter</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, dsp_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = dsp_pm_lps_enter &rArr; dsp_pm_power_off &rArr; audio_hal_action &rArr; audio_hal_dsp_action
</UL>
<BR>[Calls]<UL><LI><a href="#[109f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_pm_power_off
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dsp_driver.o(.text)
</UL>
<P><STRONG><a name="[fd]"></a>dsp_pm_lps_exit</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, dsp_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = dsp_pm_lps_exit &rArr; dsp_pm_power_on &rArr; hw_timer_create &rArr; hw_timer_create_int &rArr; hw_timer_driver_init_int &rArr; hw_timer_update_isr &rArr; RamVectorTableUpdate_for_xip_isr
</UL>
<BR>[Calls]<UL><LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_pm_power_on
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dsp_driver.o(.text)
</UL>
<P><STRONG><a name="[fb]"></a>dsp_msg_handler</STRONG> (Thumb, 132 bytes, Stack size 32 bytes, dsp_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = dsp_msg_handler &rArr; sys_ipc_publish
</UL>
<BR>[Calls]<UL><LI><a href="#[cfb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_ipc_publish
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dsp_driver.o(.text)
</UL>
<P><STRONG><a name="[10a0]"></a>audio_pad_func_enable</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, audio_pad.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = audio_pad_func_enable
</UL>
<BR>[Calls]<UL><LI><a href="#[6af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btaon_fast_write_safe (via Veneer)
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btaon_fast_read_safe (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[fa2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_pad_spk_set
<LI><a href="#[f60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_pad_aux_set
<LI><a href="#[10a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_pad_amic_set
<LI><a href="#[10a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_pad_amic2_aux_set
</UL>

<P><STRONG><a name="[f51]"></a>audio_pad_bias_set</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, audio_pad.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = audio_pad_bias_set
</UL>
<BR>[Calls]<UL><LI><a href="#[6af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btaon_fast_write_safe (via Veneer)
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btaon_fast_read_safe (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[f4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_micbias_process
</UL>

<P><STRONG><a name="[f50]"></a>audio_pad_bias_enable</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, audio_pad.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = audio_pad_bias_enable
</UL>
<BR>[Calls]<UL><LI><a href="#[6af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btaon_fast_write_safe (via Veneer)
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btaon_fast_read_safe (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[f4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_micbias_process
</UL>

<P><STRONG><a name="[1071]"></a>audio_pad_check_bias_gpio_mode</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, audio_pad.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1070]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_bias_setting
</UL>

<P><STRONG><a name="[f60]"></a>audio_pad_aux_set</STRONG> (Thumb, 122 bytes, Stack size 32 bytes, audio_pad.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = audio_pad_aux_set &rArr; audio_pad_func_enable
</UL>
<BR>[Calls]<UL><LI><a href="#[6af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btaon_fast_write_safe (via Veneer)
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btaon_fast_read_safe (via Veneer)
<LI><a href="#[10a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_pad_func_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[f5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_adc_analog_parser
<LI><a href="#[10a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_pad_load
</UL>

<P><STRONG><a name="[f58]"></a>audio_pad_mic_set</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, audio_pad.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = audio_pad_mic_set &rArr; audio_pad_dmic_set &rArr; Pad_Config &rArr; flash_cur_bank_img_payload_addr_get
</UL>
<BR>[Calls]<UL><LI><a href="#[10a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_pad_dmic_set
<LI><a href="#[10a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_pad_amic_set
</UL>
<BR>[Called By]<UL><LI><a href="#[f5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_adc_analog_parser
<LI><a href="#[f56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_dmic_config
<LI><a href="#[10a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_pad_load
</UL>

<P><STRONG><a name="[fa2]"></a>audio_pad_spk_set</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, audio_pad.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = audio_pad_spk_set &rArr; audio_pad_func_enable
</UL>
<BR>[Calls]<UL><LI><a href="#[6af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btaon_fast_write_safe (via Veneer)
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btaon_fast_read_safe (via Veneer)
<LI><a href="#[10a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_pad_func_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[fa1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_dac_analog_parser
<LI><a href="#[10a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_pad_load
</UL>

<P><STRONG><a name="[f59]"></a>audio_pad_dmic_pad_ctrl</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, audio_pad.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = audio_pad_dmic_pad_ctrl &rArr; audio_pad_dmic_pad_cfg &rArr; Pad_Config &rArr; flash_cur_bank_img_payload_addr_get
</UL>
<BR>[Calls]<UL><LI><a href="#[10a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_pad_dmic_pad_cfg
</UL>
<BR>[Called By]<UL><LI><a href="#[f56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_dmic_config
</UL>

<P><STRONG><a name="[10a5]"></a>audio_pad_load</STRONG> (Thumb, 532 bytes, Stack size 16 bytes, audio_pad.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = audio_pad_load &rArr; audio_pad_mic_set &rArr; audio_pad_dmic_set &rArr; Pad_Config &rArr; flash_cur_bank_img_payload_addr_get
</UL>
<BR>[Calls]<UL><LI><a href="#[fa2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_pad_spk_set
<LI><a href="#[f58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_pad_mic_set
<LI><a href="#[f60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_pad_aux_set
<LI><a href="#[1062]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_get_mic_ch_sel
<LI><a href="#[10a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_pad_amic2_aux_set
</UL>
<BR>[Called By]<UL><LI><a href="#[f88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_pad_init
</UL>

<P><STRONG><a name="[f88]"></a>audio_pad_init</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, audio_pad.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = audio_pad_init &rArr; audio_pad_load &rArr; audio_pad_mic_set &rArr; audio_pad_dmic_set &rArr; Pad_Config &rArr; flash_cur_bank_img_payload_addr_get
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[ad8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;power_stage_cb_register
<LI><a href="#[10a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_pad_load
</UL>
<BR>[Called By]<UL><LI><a href="#[f87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_init
</UL>

<P><STRONG><a name="[f8a]"></a>audio_pad_deinit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, audio_pad.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[f89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_deinit
</UL>

<P><STRONG><a name="[fe]"></a>audio_pad_dlps_enter_callback</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, audio_pad.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = audio_pad_dlps_enter_callback &rArr; audio_pad_dmic_pad_cfg &rArr; Pad_Config &rArr; flash_cur_bank_img_payload_addr_get
</UL>
<BR>[Calls]<UL><LI><a href="#[10a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_pad_dmic_pad_cfg
</UL>
<BR>[Address Reference Count : 1]<UL><LI> audio_pad.o(.text)
</UL>
<P><STRONG><a name="[10a6]"></a>mbedtls_sha256_starts_ret</STRONG> (Thumb, 78 bytes, Stack size 0 bytes, sha256hkdf.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[fea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbedtls_sha256_starts
</UL>

<P><STRONG><a name="[fea]"></a>mbedtls_sha256_starts</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, sha256hkdf.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[10a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbedtls_sha256_starts_ret
</UL>
<BR>[Called By]<UL><LI><a href="#[fee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hmac_sha256_finish
<LI><a href="#[fe9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hmac_sha256_starts
</UL>

<P><STRONG><a name="[10a8]"></a>mbedtls_internal_sha256_process</STRONG> (Thumb, 264 bytes, Stack size 308 bytes, sha256hkdf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 308<LI>Call Chain = mbedtls_internal_sha256_process
</UL>
<BR>[Called By]<UL><LI><a href="#[10a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbedtls_sha256_finish_ret
<LI><a href="#[10a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbedtls_sha256_update_ret
</UL>

<P><STRONG><a name="[10a7]"></a>mbedtls_sha256_update_ret</STRONG> (Thumb, 118 bytes, Stack size 24 bytes, sha256hkdf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 332<LI>Call Chain = mbedtls_sha256_update_ret &rArr; mbedtls_internal_sha256_process
</UL>
<BR>[Calls]<UL><LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[10a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbedtls_internal_sha256_process
</UL>
<BR>[Called By]<UL><LI><a href="#[feb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbedtls_sha256_update
</UL>

<P><STRONG><a name="[feb]"></a>mbedtls_sha256_update</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, sha256hkdf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 332<LI>Call Chain = mbedtls_sha256_update &rArr; mbedtls_sha256_update_ret &rArr; mbedtls_internal_sha256_process
</UL>
<BR>[Calls]<UL><LI><a href="#[10a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbedtls_sha256_update_ret
</UL>
<BR>[Called By]<UL><LI><a href="#[fee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hmac_sha256_finish
<LI><a href="#[fed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hmac_sha256_update
<LI><a href="#[fe9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hmac_sha256_starts
</UL>

<P><STRONG><a name="[10a9]"></a>mbedtls_sha256_finish_ret</STRONG> (Thumb, 326 bytes, Stack size 16 bytes, sha256hkdf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 324<LI>Call Chain = mbedtls_sha256_finish_ret &rArr; mbedtls_internal_sha256_process
</UL>
<BR>[Calls]<UL><LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr (via Veneer)
<LI><a href="#[10a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbedtls_internal_sha256_process
</UL>
<BR>[Called By]<UL><LI><a href="#[fec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbedtls_sha256_finish
</UL>

<P><STRONG><a name="[fec]"></a>mbedtls_sha256_finish</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, sha256hkdf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 324<LI>Call Chain = mbedtls_sha256_finish &rArr; mbedtls_sha256_finish_ret &rArr; mbedtls_internal_sha256_process
</UL>
<BR>[Calls]<UL><LI><a href="#[10a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbedtls_sha256_finish_ret
</UL>
<BR>[Called By]<UL><LI><a href="#[fee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hmac_sha256_finish
<LI><a href="#[fe9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hmac_sha256_starts
</UL>

<P><STRONG><a name="[1008]"></a>ltv_util_check_format_int</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, ltv_util.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ltv_util_check_format_int
</UL>
<BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[c8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;base_data_parse_data
</UL>

<P><STRONG><a name="[1006]"></a>metadata_check_format</STRONG> (Thumb, 168 bytes, Stack size 32 bytes, metadata.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = metadata_check_format
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[c2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ase_check_cp_data
</UL>

<P><STRONG><a name="[1094]"></a>audio_hal_codec_action</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, audio_hal_codec.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = audio_hal_codec_action
</UL>
<BR>[Calls]<UL><LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[f5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_hal_action
</UL>

<P><STRONG><a name="[1091]"></a>audio_hal_dsp_generate_aes_key</STRONG> (Thumb, 82 bytes, Stack size 48 bytes, audio_hal_dsp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = audio_hal_dsp_generate_aes_key
</UL>
<BR>[Calls]<UL><LI><a href="#[782]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHA256 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_fw_load_image
</UL>

<P><STRONG><a name="[1090]"></a>audio_hal_dsp_check_img_valid</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, audio_hal_dsp.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_fw_load_image
</UL>

<P><STRONG><a name="[1093]"></a>audio_hal_dsp_action</STRONG> (Thumb, 100 bytes, Stack size 16 bytes, audio_hal_dsp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = audio_hal_dsp_action
</UL>
<BR>[Calls]<UL><LI><a href="#[10aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_handle_avcc_drv (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[f5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_hal_action
</UL>

<P><STRONG><a name="[107a]"></a>sport_drv_dump_setting</STRONG> (Thumb, 84 bytes, Stack size 40 bytes, sport_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = sport_drv_dump_setting
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[1077]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_mgr_param_set
</UL>

<P><STRONG><a name="[1081]"></a>sport_drv_reset</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, sport_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = sport_drv_reset
</UL>
<BR>[Calls]<UL><LI><a href="#[ac5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vAssertHandler (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[107b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_mgr_param_init
</UL>

<P><STRONG><a name="[10ac]"></a>sport_drv_get_channel_len</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, sport_driver.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[10bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_drv_check_exceed_div_ratio
<LI><a href="#[10ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_drv_calc_channel_len_ratio
<LI><a href="#[10ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_drv_calc_bclk_div
</UL>

<P><STRONG><a name="[107f]"></a>sport_drv_clock_src_sel</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, sport_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = sport_drv_clock_src_sel
</UL>
<BR>[Calls]<UL><LI><a href="#[ac5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vAssertHandler (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[107b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_mgr_param_init
</UL>

<P><STRONG><a name="[1080]"></a>sport_drv_codec_sel</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, sport_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = sport_drv_codec_sel
</UL>
<BR>[Calls]<UL><LI><a href="#[ac5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vAssertHandler (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[107b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_mgr_param_init
</UL>

<P><STRONG><a name="[107e]"></a>sport_drv_enable_module</STRONG> (Thumb, 202 bytes, Stack size 16 bytes, sport_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = sport_drv_enable_module
</UL>
<BR>[Calls]<UL><LI><a href="#[ac5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vAssertHandler (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[ec9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_mgr_disable
<LI><a href="#[107b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_mgr_param_init
</UL>

<P><STRONG><a name="[10ae]"></a>sport_drv_convert_sample_rate</STRONG> (Thumb, 150 bytes, Stack size 0 bytes, sport_driver.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[10b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_drv_frac_div_set_dependent
<LI><a href="#[10ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_drv_convert_sample_rate_tdm
<LI><a href="#[10af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_drv_calc_trx_sr_magnification
</UL>

<P><STRONG><a name="[10ad]"></a>sport_drv_convert_sample_rate_tdm</STRONG> (Thumb, 46 bytes, Stack size 12 bytes, sport_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = sport_drv_convert_sample_rate_tdm
</UL>
<BR>[Calls]<UL><LI><a href="#[10ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_drv_convert_sample_rate
</UL>
<BR>[Called By]<UL><LI><a href="#[10b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_drv_frac_div_set_separate
<LI><a href="#[10b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_drv_frac_div_set_dependent
</UL>

<P><STRONG><a name="[10b0]"></a>sport_drv_trx_parameter_set</STRONG> (Thumb, 216 bytes, Stack size 24 bytes, sport_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = sport_drv_trx_parameter_set &rArr; sport_drv_set_data_len
</UL>
<BR>[Calls]<UL><LI><a href="#[10b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_drv_set_data_len
<LI><a href="#[10b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_drv_set_data_format
<LI><a href="#[10b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_drv_set_channel_len
<LI><a href="#[10b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_drv_set_channel_mode
<LI><a href="#[10b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_drv_set_tdm_mode
</UL>
<BR>[Called By]<UL><LI><a href="#[1079]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_drv_trx_config_set
</UL>

<P><STRONG><a name="[10b6]"></a>sport_drv_frac_div_set_separate</STRONG> (Thumb, 110 bytes, Stack size 24 bytes, sport_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = sport_drv_frac_div_set_separate &rArr; sport_drv_calc_bclk_div &rArr; __aeabi_fmul
</UL>
<BR>[Calls]<UL><LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[10ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_drv_convert_sample_rate_tdm
<LI><a href="#[10b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_drv_config_bclk_div
<LI><a href="#[10b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_drv_config_bclk
<LI><a href="#[10ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_drv_calc_bclk_div
</UL>
<BR>[Called By]<UL><LI><a href="#[1079]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_drv_trx_config_set
</UL>

<P><STRONG><a name="[10b9]"></a>sport_drv_frac_div_set_dependent</STRONG> (Thumb, 336 bytes, Stack size 48 bytes, sport_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = sport_drv_frac_div_set_dependent &rArr; sport_drv_calc_channel_len_ratio &rArr; __aeabi_fdiv
</UL>
<BR>[Calls]<UL><LI><a href="#[e64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfrcmple
<LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[940]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[10ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_drv_convert_sample_rate_tdm
<LI><a href="#[10ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_drv_convert_sample_rate
<LI><a href="#[10ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_drv_calc_channel_len_ratio
<LI><a href="#[10b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_drv_config_bclk_div
<LI><a href="#[10b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_drv_config_bclk
<LI><a href="#[10af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_drv_calc_trx_sr_magnification
<LI><a href="#[10ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_drv_calc_bclk_div
</UL>
<BR>[Called By]<UL><LI><a href="#[1079]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_drv_trx_config_set
</UL>

<P><STRONG><a name="[107c]"></a>sport_drv_mclk_enable</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, sport_driver.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[107b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_mgr_param_init
</UL>

<P><STRONG><a name="[107d]"></a>sport_drv_mclk_conifg_set</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, sport_driver.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[107b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_mgr_param_init
</UL>

<P><STRONG><a name="[1078]"></a>sport_drv_trx_config_default</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, sport_driver.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1077]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_mgr_param_set
</UL>

<P><STRONG><a name="[1079]"></a>sport_drv_trx_config_set</STRONG> (Thumb, 140 bytes, Stack size 24 bytes, sport_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = sport_drv_trx_config_set &rArr; sport_drv_frac_div_set_dependent &rArr; sport_drv_calc_channel_len_ratio &rArr; __aeabi_fdiv
</UL>
<BR>[Calls]<UL><LI><a href="#[ac5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vAssertHandler (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[10b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_drv_trx_parameter_set
<LI><a href="#[10b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_drv_frac_div_set_separate
<LI><a href="#[10b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_drv_frac_div_set_dependent
<LI><a href="#[10bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_drv_check_exceed_div_ratio
<LI><a href="#[10af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_drv_calc_trx_sr_magnification
</UL>
<BR>[Called By]<UL><LI><a href="#[1077]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_mgr_param_set
</UL>

<P><STRONG><a name="[1082]"></a>sport_drv_misc_config_default</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, sport_driver.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[107b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_mgr_param_init
</UL>

<P><STRONG><a name="[1083]"></a>sport_drv_misc_config_set</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, sport_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = sport_drv_misc_config_set
</UL>
<BR>[Calls]<UL><LI><a href="#[ac5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vAssertHandler (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[107b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_mgr_param_init
</UL>

<P><STRONG><a name="[9c7]"></a>__2snprintf</STRONG> (Thumb, 48 bytes, Stack size 32 bytes, noretval__2snprintf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __2snprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[10bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sputc (via Veneer)
<LI><a href="#[10bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_common (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_hfp_batt_level_report
<LI><a href="#[9df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_set_voice_recognition
<LI><a href="#[9d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_send_nrec_disable
<LI><a href="#[9ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_send_cmee_enable
<LI><a href="#[9d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_send_clip
<LI><a href="#[9d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_send_clcc
<LI><a href="#[9cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_send_ccwa
<LI><a href="#[9db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_reject_phone_call
<LI><a href="#[9d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_network_operator_format_set
<LI><a href="#[9d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_inform_ag_speaker_gain
<LI><a href="#[9d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_inform_ag_microphone_gain
<LI><a href="#[9d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_hsp_button_press
<LI><a href="#[9d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_dial_last_number
<LI><a href="#[9d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_call_hold_action
<LI><a href="#[9dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_ask_ag_establish_voice_chann
<LI><a href="#[9da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_accept_phone_call
<LI><a href="#[de1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_handle_bcs
<LI><a href="#[dcd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_srv_level_step
<LI><a href="#[dcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_bac_cmd_assemble
</UL>

<P><STRONG><a name="[dd6]"></a>__0sscanf</STRONG> (Thumb, 52 bytes, Stack size 72 bytes, __0sscanf.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[10be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__vfscanf_char
</UL>
<BR>[Called By]<UL><LI><a href="#[de5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_handle_cnum
<LI><a href="#[de4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_handle_cops
<LI><a href="#[de3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_handle_bind
<LI><a href="#[de2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_handle_bsir
<LI><a href="#[de1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_handle_bcs
<LI><a href="#[de0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_handle_vgs
<LI><a href="#[ddf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_handle_vgm
<LI><a href="#[dde]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_handle_ccwa
<LI><a href="#[ddd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_handle_ciev
<LI><a href="#[ddc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_handle_clip
<LI><a href="#[ddb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_handle_bvra
<LI><a href="#[dda]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_handle_clcc
<LI><a href="#[dd8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_handle_cind
<LI><a href="#[dd7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_handle_brsf
<LI><a href="#[dd5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_handle_cme_error
</UL>

<P><STRONG><a name="[10bf]"></a>_scanf_int</STRONG> (Thumb, 332 bytes, Stack size 56 bytes, _scanf_int.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[10c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_chval
</UL>
<BR>[Called By]<UL><LI><a href="#[10c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__vfscanf
</UL>

<P><STRONG><a name="[10c6]"></a>_scanf_string</STRONG> (Thumb, 224 bytes, Stack size 56 bytes, _scanf_str.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[10c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__vfscanf
</UL>

<P><STRONG><a name="[287]"></a>srand</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, rand.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = srand
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_init
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_rand_init
</UL>

<P><STRONG><a name="[252]"></a>_rand_init</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, rand.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _rand_init &rArr; srand
</UL>
<BR>[Calls]<UL><LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srand
</UL>
<BR>[Called By]<UL><LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_rand_2
</UL>

<P><STRONG><a name="[4dc]"></a>strncmp</STRONG> (Thumb, 150 bytes, Stack size 16 bytes, strncmp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = strncmp
</UL>
<BR>[Called By]<UL><LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_is_test_equipment
<LI><a href="#[93c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;storage_partition_get
<LI><a href="#[de6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hfp_handle_at_rsp
</UL>

<P><STRONG><a name="[999]"></a>strncpy</STRONG> (Thumb, 86 bytes, Stack size 8 bytes, strncpy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = strncpy
</UL>
<BR>[Calls]<UL><LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[996]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_mgr_handle_gap_msg
</UL>

<P><STRONG><a name="[10c1]"></a>__read_errno</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, _rserrno.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[10c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
</UL>

<P><STRONG><a name="[10c3]"></a>__set_errno</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, _rserrno.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __set_errno
</UL>
<BR>[Calls]<UL><LI><a href="#[10c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[10d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
<LI><a href="#[10cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log
<LI><a href="#[95e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pow
<LI><a href="#[ea2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log10
</UL>

<P><STRONG><a name="[10c0]"></a>_chval</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, _chval.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[10bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_int
</UL>

<P><STRONG><a name="[10be]"></a>__vfscanf_char</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, scanf_char.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[10c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__vfscanf
</UL>
<BR>[Called By]<UL><LI><a href="#[dd6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sscanf
</UL>

<P><STRONG><a name="[100]"></a>_sgetc</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, _sgetc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> __0sscanf.o(.text)
</UL>
<P><STRONG><a name="[101]"></a>_sbackspace</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, _sgetc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> __0sscanf.o(.text)
</UL>
<P><STRONG><a name="[10c2]"></a>__aeabi_errno_addr</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, rt_errno_addr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[10c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[10c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__read_errno
</UL>

<P><STRONG><a name="[1346]"></a>__errno</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_errno_addr.o(.text), UNUSED)

<P><STRONG><a name="[1347]"></a>__rt_errno_addr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_errno_addr.o(.text), UNUSED)

<P><STRONG><a name="[103]"></a>isspace</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, isspace.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = isspace
</UL>
<BR>[Calls]<UL><LI><a href="#[10c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_ctype_table (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scanf_char.o(.text)
</UL>
<P><STRONG><a name="[10c4]"></a>__vfscanf</STRONG> (Thumb, 880 bytes, Stack size 96 bytes, _scanf.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[10c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_string
<LI><a href="#[10bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_int
</UL>
<BR>[Called By]<UL><LI><a href="#[10be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__vfscanf_char
</UL>

<P><STRONG><a name="[25e]"></a>exit</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, exit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = exit
</UL>
<BR>[Calls]<UL><LI><a href="#[10c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[1348]"></a>__I$use$semihosting</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[1349]"></a>__use_no_semihosting_swi</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[134a]"></a>__semihosting_library_function</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, indicate_semi.o(.text), UNUSED)

<P><STRONG><a name="[262]"></a>_sys_exit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, sys_exit.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_exit
</UL>

<P><STRONG><a name="[88a]"></a>__ARM_pop</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, app_lea_unicast_audio.o(i.__ARM_pop))
<BR><BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_sync_cb
<LI><a href="#[8c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_apply_sync_pera
<LI><a href="#[8c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_track
<LI><a href="#[89e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_track_reconfig_write_length
<LI><a href="#[886]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_track_create
</UL>

<P><STRONG><a name="[10c8]"></a>__kernel_poly</STRONG> (Thumb, 170 bytes, Stack size 24 bytes, poly.o(i.__kernel_poly))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __kernel_poly
</UL>
<BR>[Calls]<UL><LI><a href="#[960]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul (via Veneer)
<LI><a href="#[961]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[10cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log
<LI><a href="#[95e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pow
</UL>

<P><STRONG><a name="[10c9]"></a>__mathlib_dbl_divzero</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, dunder.o(i.__mathlib_dbl_divzero))
<BR><BR>[Calls]<UL><LI><a href="#[4ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[10cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log
<LI><a href="#[95e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pow
<LI><a href="#[ea2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log10
</UL>

<P><STRONG><a name="[10ca]"></a>__mathlib_dbl_infnan</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dunder.o(i.__mathlib_dbl_infnan))
<BR><BR>[Calls]<UL><LI><a href="#[ea3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[10cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log
<LI><a href="#[ea2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log10
</UL>

<P><STRONG><a name="[10cb]"></a>__mathlib_dbl_infnan2</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, dunder.o(i.__mathlib_dbl_infnan2))
<BR><BR>[Calls]<UL><LI><a href="#[961]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[95e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pow
</UL>

<P><STRONG><a name="[10cc]"></a>__mathlib_dbl_invalid</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, dunder.o(i.__mathlib_dbl_invalid))
<BR><BR>[Calls]<UL><LI><a href="#[4ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[10cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log
<LI><a href="#[95e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pow
<LI><a href="#[ea2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log10
</UL>

<P><STRONG><a name="[10cd]"></a>__mathlib_dbl_overflow</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, dunder.o(i.__mathlib_dbl_overflow))
<BR><BR>[Calls]<UL><LI><a href="#[ea3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[95e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pow
</UL>

<P><STRONG><a name="[10ce]"></a>__mathlib_dbl_underflow</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, dunder.o(i.__mathlib_dbl_underflow))
<BR><BR>[Calls]<UL><LI><a href="#[ea3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[95e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pow
</UL>

<P><STRONG><a name="[10cf]"></a>log</STRONG> (Thumb, 808 bytes, Stack size 96 bytes, log.o(i.log))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = log &rArr; __aeabi_cdcmpeq
</UL>
<BR>[Calls]<UL><LI><a href="#[ea3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn (via Veneer)
<LI><a href="#[962]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub (via Veneer)
<LI><a href="#[10d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub (via Veneer)
<LI><a href="#[960]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul (via Veneer)
<LI><a href="#[95d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d (via Veneer)
<LI><a href="#[4ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv (via Veneer)
<LI><a href="#[961]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd (via Veneer)
<LI><a href="#[10d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmpeq
<LI><a href="#[10c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[10cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_invalid
<LI><a href="#[10ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan
<LI><a href="#[10c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_divzero
<LI><a href="#[10c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
</UL>
<BR>[Called By]<UL><LI><a href="#[ea2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log10
</UL>

<P><STRONG><a name="[ea2]"></a>log10</STRONG> (Thumb, 198 bytes, Stack size 24 bytes, log10.o(i.log10))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = log10 &rArr; log &rArr; __aeabi_cdcmpeq
</UL>
<BR>[Calls]<UL><LI><a href="#[ea3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn (via Veneer)
<LI><a href="#[960]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul (via Veneer)
<LI><a href="#[95d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d (via Veneer)
<LI><a href="#[961]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd (via Veneer)
<LI><a href="#[10cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log
<LI><a href="#[10cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_invalid
<LI><a href="#[10ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan
<LI><a href="#[10c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_divzero
<LI><a href="#[10c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
</UL>
<BR>[Called By]<UL><LI><a href="#[ea0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_gain_scale
</UL>

<P><STRONG><a name="[95e]"></a>pow</STRONG> (Thumb, 2512 bytes, Stack size 128 bytes, pow.o(i.pow))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = pow &rArr; sqrt &rArr; _dsqrt
</UL>
<BR>[Calls]<UL><LI><a href="#[ea3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn (via Veneer)
<LI><a href="#[962]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub (via Veneer)
<LI><a href="#[10d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub (via Veneer)
<LI><a href="#[95f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple (via Veneer)
<LI><a href="#[960]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul (via Veneer)
<LI><a href="#[95d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d (via Veneer)
<LI><a href="#[4ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv (via Veneer)
<LI><a href="#[961]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd (via Veneer)
<LI><a href="#[10d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_fpclassify (via Veneer)
<LI><a href="#[10d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
<LI><a href="#[10c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[10ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_underflow
<LI><a href="#[10cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_overflow
<LI><a href="#[10cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_invalid
<LI><a href="#[10cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan2
<LI><a href="#[10c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_divzero
<LI><a href="#[10c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
</UL>
<BR>[Called By]<UL><LI><a href="#[968]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FixPoint2Double
<LI><a href="#[95c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Double2FixPoint
<LI><a href="#[ea0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_gain_scale
</UL>

<P><STRONG><a name="[10d2]"></a>sqrt</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, sqrt.o(i.sqrt))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = sqrt &rArr; _dsqrt
</UL>
<BR>[Calls]<UL><LI><a href="#[10d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsqrt
<LI><a href="#[10c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
</UL>
<BR>[Called By]<UL><LI><a href="#[95e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pow
</UL>

<P><STRONG><a name="[96a]"></a>__aeabi_d2f</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, d2f.o(x$fpl$d2f))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __aeabi_d2f
</UL>
<BR>[Called By]<UL><LI><a href="#[969]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_get_default_eq_info
<LI><a href="#[ea0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_gain_scale
</UL>

<P><STRONG><a name="[10d5]"></a>_d2f</STRONG> (Thumb, 98 bytes, Stack size 32 bytes, d2f.o(x$fpl$d2f), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[10d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf (via Veneer)
<LI><a href="#[10d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fretinf
</UL>

<P><STRONG><a name="[10d0]"></a>__aeabi_cdcmpeq</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, deqf.o(x$fpl$deqf))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __aeabi_cdcmpeq
</UL>
<BR>[Called By]<UL><LI><a href="#[10cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log
</UL>

<P><STRONG><a name="[10d8]"></a>_dcmpeq</STRONG> (Thumb, 120 bytes, Stack size 32 bytes, deqf.o(x$fpl$deqf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[10d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf (via Veneer)
<LI><a href="#[10d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcmp_Inf (via Veneer)
</UL>

<P><STRONG><a name="[10d4]"></a>_dsqrt</STRONG> (Thumb, 456 bytes, Stack size 24 bytes, dsqrt_noumaal.o(x$fpl$dsqrt))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _dsqrt
</UL>
<BR>[Calls]<UL><LI><a href="#[10d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[10d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
</UL>

<P><STRONG><a name="[964]"></a>__aeabi_f2d</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, f2d.o(x$fpl$f2d))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_f2d
</UL>
<BR>[Called By]<UL><LI><a href="#[673]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_get_eq_data
<LI><a href="#[ea0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_gain_scale
<LI><a href="#[107b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_mgr_param_init
</UL>

<P><STRONG><a name="[10da]"></a>_f2d</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, f2d.o(x$fpl$f2d), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[10dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dretinf (via Veneer)
<LI><a href="#[10db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fnaninf
</UL>

<P><STRONG><a name="[eaa]"></a>__aeabi_fadd</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, faddsub_clz.o(x$fpl$fadd))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[a38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jitter_buffer_asrc_pid_controller
<LI><a href="#[a53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_adc_level_set
<LI><a href="#[eda]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;param_long_term_update
<LI><a href="#[ed9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;interval_queue_update
</UL>

<P><STRONG><a name="[10dd]"></a>_fadd</STRONG> (Thumb, 196 bytes, Stack size 16 bytes, faddsub_clz.o(x$fpl$fadd), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[10d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fretinf
<LI><a href="#[10db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fnaninf
<LI><a href="#[10de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fsub1
</UL>

<P><STRONG><a name="[10df]"></a>__fpl_fcheck_NaN1</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, fcheck1.o(x$fpl$fcheck1))
<BR><BR>[Calls]<UL><LI><a href="#[10e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_return_NaN (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[ea1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbnf
</UL>

<P><STRONG><a name="[10e5]"></a>__fpl_fcmp_Inf</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, fcmpi.o(x$fpl$fcmpinf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[10e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fcmple
</UL>

<P><STRONG><a name="[940]"></a>__aeabi_fdiv</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, fdiv.o(x$fpl$fdiv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_fdiv
</UL>
<BR>[Called By]<UL><LI><a href="#[486]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_lr_balance_set
<LI><a href="#[a38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jitter_buffer_asrc_pid_controller
<LI><a href="#[ea0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_gain_scale
<LI><a href="#[e67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_inteval_evaluator_update
<LI><a href="#[eda]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;param_long_term_update
<LI><a href="#[ed9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;interval_queue_update
<LI><a href="#[f84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_sidetone_gain_convert
<LI><a href="#[10b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_drv_frac_div_set_dependent
<LI><a href="#[10ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_drv_calc_channel_len_ratio
</UL>

<P><STRONG><a name="[10e1]"></a>_fdiv</STRONG> (Thumb, 384 bytes, Stack size 16 bytes, fdiv.o(x$fpl$fdiv), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[10d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fretinf
<LI><a href="#[10db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fnaninf
</UL>

<P><STRONG><a name="[a7d]"></a>__aeabi_f2iz</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, ffix.o(x$fpl$ffix))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_f2iz
</UL>
<BR>[Called By]<UL><LI><a href="#[941]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_volume_balance_set
<LI><a href="#[a38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jitter_buffer_asrc_pid_controller
<LI><a href="#[a51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_dac_level_set
<LI><a href="#[a53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_adc_level_set
<LI><a href="#[edb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;float2Hint
</UL>

<P><STRONG><a name="[10e2]"></a>_ffix</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, ffix.o(x$fpl$ffix), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[10db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fnaninf
</UL>

<P><STRONG><a name="[32b]"></a>__aeabi_f2uiz</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, ffixu.o(x$fpl$ffixu))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_f2uiz
</UL>
<BR>[Called By]<UL><LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;framework_init
<LI><a href="#[673]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_get_eq_data
<LI><a href="#[f84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_sidetone_gain_convert
<LI><a href="#[10ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_drv_calc_bclk_div
</UL>

<P><STRONG><a name="[10e3]"></a>_ffixu</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, ffixu.o(x$fpl$ffixu), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[10db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fnaninf
</UL>

<P><STRONG><a name="[93f]"></a>__aeabi_i2f</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, fflt_clz.o(x$fpl$fflt))
<BR><BR>[Called By]<UL><LI><a href="#[486]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_lr_balance_set
<LI><a href="#[a38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jitter_buffer_asrc_pid_controller
<LI><a href="#[a72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;media_buffer_latency_set2
<LI><a href="#[ea0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_gain_scale
<LI><a href="#[e67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_inteval_evaluator_update
<LI><a href="#[f84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_sidetone_gain_convert
</UL>

<P><STRONG><a name="[134b]"></a>_fflt</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, fflt_clz.o(x$fpl$fflt), UNUSED)

<P><STRONG><a name="[329]"></a>__aeabi_ui2f</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, fflt_clz.o(x$fpl$ffltu))
<BR><BR>[Called By]<UL><LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;framework_init
<LI><a href="#[969]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_get_default_eq_info
<LI><a href="#[a38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jitter_buffer_asrc_pid_controller
<LI><a href="#[e67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_inteval_evaluator_update
<LI><a href="#[eda]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;param_long_term_update
<LI><a href="#[f84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_sidetone_gain_convert
<LI><a href="#[10b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_drv_frac_div_set_separate
<LI><a href="#[10b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_drv_frac_div_set_dependent
<LI><a href="#[10ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_drv_calc_channel_len_ratio
<LI><a href="#[10ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_drv_calc_bclk_div
</UL>

<P><STRONG><a name="[134c]"></a>_ffltu</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, fflt_clz.o(x$fpl$ffltu), UNUSED)

<P><STRONG><a name="[e63]"></a>__aeabi_cfcmple</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, fleqf.o(x$fpl$fleqf))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_cfcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[a72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;media_buffer_latency_set2
<LI><a href="#[e67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_inteval_evaluator_update
</UL>

<P><STRONG><a name="[10e4]"></a>_fcmple</STRONG> (Thumb, 104 bytes, Stack size 16 bytes, fleqf.o(x$fpl$fleqf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[10db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fnaninf
<LI><a href="#[10e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fcmp_Inf
</UL>

<P><STRONG><a name="[10e8]"></a>__fpl_fcmple_InfNaN</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, fleqf.o(x$fpl$fleqf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[10e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_frcmple
</UL>

<P><STRONG><a name="[32a]"></a>__aeabi_fmul</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, fmul.o(x$fpl$fmul))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_fmul
</UL>
<BR>[Called By]<UL><LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;framework_init
<LI><a href="#[941]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_volume_balance_set
<LI><a href="#[a38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jitter_buffer_asrc_pid_controller
<LI><a href="#[a51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_dac_level_set
<LI><a href="#[a53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_adc_level_set
<LI><a href="#[ea0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_gain_scale
<LI><a href="#[e67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_inteval_evaluator_update
<LI><a href="#[eda]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;param_long_term_update
<LI><a href="#[ed9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;interval_queue_update
<LI><a href="#[edb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;float2Hint
<LI><a href="#[f84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_sidetone_gain_convert
<LI><a href="#[10b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_drv_frac_div_set_dependent
<LI><a href="#[10ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_drv_calc_bclk_div
</UL>

<P><STRONG><a name="[10e6]"></a>_fmul</STRONG> (Thumb, 258 bytes, Stack size 16 bytes, fmul.o(x$fpl$fmul), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[10d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fretinf
<LI><a href="#[10db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fnaninf
</UL>

<P><STRONG><a name="[10db]"></a>__fpl_fnaninf</STRONG> (Thumb, 140 bytes, Stack size 8 bytes, fnaninf.o(x$fpl$fnaninf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[10e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fmul
<LI><a href="#[10e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fcmple
<LI><a href="#[10e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ffixu
<LI><a href="#[10e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ffix
<LI><a href="#[10e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fdiv
<LI><a href="#[10eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fsub
<LI><a href="#[10dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fadd
<LI><a href="#[10da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_f2d
</UL>

<P><STRONG><a name="[10d6]"></a>__fpl_fretinf</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, fretinf.o(x$fpl$fretinf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[10e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fmul
<LI><a href="#[10e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fdiv
<LI><a href="#[10dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fadd
<LI><a href="#[10d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_d2f
</UL>

<P><STRONG><a name="[e64]"></a>__aeabi_cfrcmple</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, frleqf.o(x$fpl$frleqf))
<BR><BR>[Called By]<UL><LI><a href="#[a72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;media_buffer_latency_set2
<LI><a href="#[ea0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_gain_scale
<LI><a href="#[e67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_inteval_evaluator_update
<LI><a href="#[f84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_sidetone_gain_convert
<LI><a href="#[10b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_drv_frac_div_set_dependent
</UL>

<P><STRONG><a name="[10e7]"></a>_frcmple</STRONG> (Thumb, 98 bytes, Stack size 0 bytes, frleqf.o(x$fpl$frleqf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[10e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fcmple_InfNaN
</UL>

<P><STRONG><a name="[ed2]"></a>__aeabi_frsub</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, faddsub_clz.o(x$fpl$frsb))
<BR><BR>[Called By]<UL><LI><a href="#[a38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jitter_buffer_asrc_pid_controller
<LI><a href="#[e67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_inteval_evaluator_update
<LI><a href="#[f84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_sidetone_gain_convert
</UL>

<P><STRONG><a name="[10e9]"></a>_frsb</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, faddsub_clz.o(x$fpl$frsb), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[10de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fsub1
<LI><a href="#[10ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fadd1
</UL>

<P><STRONG><a name="[ea9]"></a>__aeabi_fsub</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, faddsub_clz.o(x$fpl$fsub))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_fsub
</UL>
<BR>[Called By]<UL><LI><a href="#[a53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_adc_level_set
<LI><a href="#[e67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_inteval_evaluator_update
<LI><a href="#[eda]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;param_long_term_update
<LI><a href="#[ed9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;interval_queue_update
<LI><a href="#[f84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_sidetone_gain_convert
<LI><a href="#[10ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_drv_calc_bclk_div
</UL>

<P><STRONG><a name="[10eb]"></a>_fsub</STRONG> (Thumb, 234 bytes, Stack size 16 bytes, faddsub_clz.o(x$fpl$fsub), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[10db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fnaninf
<LI><a href="#[10ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fadd1
</UL>

<P><STRONG><a name="[ea1]"></a>__ARM_scalbnf</STRONG> (Thumb, 76 bytes, Stack size 0 bytes, scalbnf.o(x$fpl$scalbnf))
<BR><BR>[Calls]<UL><LI><a href="#[10df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fcheck_NaN1
</UL>
<BR>[Called By]<UL><LI><a href="#[a51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_dac_level_set
<LI><a href="#[ea0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_gain_scale
<LI><a href="#[e67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_inteval_evaluator_update
<LI><a href="#[f84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_sidetone_gain_convert
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[289]"></a>log2_u32</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, led_module.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_config
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_deinit
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_cmd
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_set_active_polarity
</UL>

<P><STRONG><a name="[2d2]"></a>board_init</STRONG> (Thumb, 226 bytes, Stack size 24 bytes, app_main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = board_init &rArr; app_harman_cpu_clk_improve &rArr; pm_cpu_freq_set &rArr; set_cpu_freq &rArr; dvfs_control &rArr; dvfs_set_mode_func
</UL>
<BR>[Calls]<UL><LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_set_cpu_clk
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_cpu_clk_improve
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dlps_system_wakeup_clear_rtc_int
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pinmux_Config
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pad_Config (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2d8]"></a>app_bt_gap_init</STRONG> (Thumb, 450 bytes, Stack size 96 bytes, app_main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = app_bt_gap_init &rArr; bt_bond_init &rArr; bt_le_key_init &rArr; bt_le_key_entry_init &rArr; ftl_load_le_remote_ltk &rArr; imp_ftl_load
</UL>
<BR>[Calls]<UL><LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_set_param
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_lib_init
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_br_set_param
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_br_cfg_accept_role
<LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_pairing_tx_power_set
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_init
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_bond_init
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_gap_param_init
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[6]"></a>app_task</STRONG> (Thumb, 188 bytes, Stack size 24 bytes, app_main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 2060<LI>Call Chain = app_task &rArr; app_io_msg_handler &rArr; app_ble_gap_handle_gap_msg &rArr; app_ble_gap_handle_authen_state_evt &rArr; app_bt_policy_msg_le_auth &rArr; app_bt_policy_state_machine &rArr; app_bt_policy_event_handle &rArr;  app_bt_policy_roleswitch_handle (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_handle_msg
<LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_start_bt_stack
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_mgr_event_handle
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pm_cpu_freq_get
<LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_handle_msg
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_led_check_repeat_mode
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_led_check_charging_mode
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_io_msg_handler
<LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ext_charger_check_support
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_adp_detect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_main.o(.text)
</UL>
<P><STRONG><a name="[2eb]"></a>app_wakeup_reason_check</STRONG> (Thumb, 248 bytes, Stack size 24 bytes, app_main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = app_wakeup_reason_check &rArr; power_down_check_wake_up_reason
</UL>
<BR>[Calls]<UL><LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pad_WakeupInterruptValue (via Veneer)
<LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;power_down_check_wake_up_reason
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_key_is_combinekey_power_on_off
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2f9]"></a>driver_init</STRONG> (Thumb, 100 bytes, Stack size 8 bytes, app_main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = driver_init &rArr; app_ext_charger_init &rArr; app_harman_usb_connector_protect_init &rArr; hal_gpio_init_pin &rArr; hal_gpio_init &rArr; hal_gpio_int_init &rArr; RamVectorTableUpdate &rArr; RamVectorTableUpdate_for_xip_isr
</UL>
<BR>[Calls]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_gpio_mfb_init
<LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_gpio_initial
<LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_set_debounce_time
<LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_int_init
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_init
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_led_init
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_key_init
<LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ext_charger_init
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_charger_init
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_adp_init
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2f8]"></a>framework_init</STRONG> (Thumb, 110 bytes, Stack size 8 bytes, app_main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 384<LI>Call Chain = framework_init &rArr; audio_mgr_init &rArr; notification_init &rArr; audio_path_create &rArr; audio_path_record_init &rArr; sport_mgr_session_create &rArr; sport_mgr_sport_path_take &rArr; audio_route_physical_path_take &rArr; audio_route_physical_path_get &rArr; audio_route_voice_physical_path_get
</UL>
<BR>[Calls]<UL><LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_mgr_init
<LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_mgr_init
<LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_probe_disable_dsp_powerdown
<LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_mgr_set_max_plc_count
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_mgr_init
<LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[33b]"></a>app_cfg_load</STRONG> (Thumb, 480 bytes, Stack size 32 bytes, app_cfg.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = app_cfg_load &rArr; app_cfg_reset &rArr; app_harman_vp_data_header_get &rArr; storage_partition_get &rArr; strncmp
</UL>
<BR>[Calls]<UL><LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_single_tone_test_mode (via Veneer)
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt_reset
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_flash_nor_read
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_cur_bank_img_payload_addr_get
<LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dsp_cfg_init
<LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_cfg_reset
</UL>
<BR>[Called By]<UL><LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_cfg_init
</UL>

<P><STRONG><a name="[350]"></a>app_led_set_mode</STRONG> (Thumb, 1160 bytes, Stack size 64 bytes, app_led.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 212<LI>Call Chain = app_led_set_mode &rArr; led_config &rArr; SleepLed_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp (via Veneer)
<LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pad_FunctionConfig (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_is_sleep_pinmux
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_config
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_deinit
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_cmd
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_stop_timer
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_start_timer
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dlps_enable (via Veneer)
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dlps_disable (via Veneer)
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_charger_local_battery_status_is_low
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_charger_get_charge_state
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_get_state
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_led_disable_non_repeat_mode
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_led_check_set_mode_available
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_led_set_designate_led_off
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_led_load_table
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_led_is_repeat_mode
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_led_is_charging_mode
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_charger_get_soc
</UL>
<BR>[Called By]<UL><LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_led_change_mode
</UL>

<P><STRONG><a name="[34f]"></a>app_led_reset_mode</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, app_led.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + In Cycle
<LI>Call Chain = app_led_reset_mode &rArr;  app_led_change_mode (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_cmd
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_led_check_repeat_mode
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_led_check_charging_mode
<LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_led_change_mode
</UL>
<BR>[Called By]<UL><LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_led_disable_non_repeat_mode
</UL>

<P><STRONG><a name="[363]"></a>app_led_set_pad_config</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, app_led.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = app_led_set_pad_config &rArr; Pad_Config &rArr; flash_cur_bank_img_payload_addr_get
</UL>
<BR>[Calls]<UL><LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pad_Config (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_led_pad_config
<LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_led_timeout_cb
</UL>

<P><STRONG><a name="[8]"></a>app_led_timeout_cb</STRONG> (Thumb, 332 bytes, Stack size 48 bytes, app_led.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 196<LI>Call Chain = app_led_timeout_cb &rArr; led_config &rArr; SleepLed_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pad_FunctionConfig (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_config
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_cmd
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_stop_timer
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_start_timer
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_led_disable_non_repeat_mode
<LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_led_set_pad_config
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_led.o(.text)
</UL>
<P><STRONG><a name="[365]"></a>app_led_pad_config</STRONG> (Thumb, 256 bytes, Stack size 8 bytes, app_led.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = app_led_pad_config &rArr; app_led_set_pad_config &rArr; Pad_Config &rArr; flash_cur_bank_img_payload_addr_get
</UL>
<BR>[Calls]<UL><LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pad_FunctionConfig (via Veneer)
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_is_sleep_pinmux
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_reset_sleep_led
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_set_active_polarity
<LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_led_reset_charging_led_type
<LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_led_set_pad_config
</UL>
<BR>[Called By]<UL><LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_led_init
</UL>

<P><STRONG><a name="[7]"></a>app_led_bt_cback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, app_led.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> app_led.o(.text)
</UL>
<P><STRONG><a name="[361]"></a>app_led_reset_charging_led_type</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, app_led.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_led_check_charging_mode
<LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_led_pad_config
</UL>

<P><STRONG><a name="[359]"></a>app_led_is_charging_mode</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, app_led.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_led_check_repeat_mode
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_led_load_table
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_led_set_mode
</UL>

<P><STRONG><a name="[356]"></a>app_led_is_repeat_mode</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, app_led.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_led_set_mode
</UL>

<P><STRONG><a name="[354]"></a>app_led_load_table</STRONG> (Thumb, 90 bytes, Stack size 8 bytes, app_led.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = app_led_load_table &rArr; app_cfg_load_led_table &rArr; fmc_flash_nor_read
</UL>
<BR>[Calls]<UL><LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_led_is_charging_mode
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_cfg_load_led_table
</UL>
<BR>[Called By]<UL><LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_led_set_mode
</UL>

<P><STRONG><a name="[362]"></a>app_led_set_charging_mode</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, app_led.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_led_change_mode
</UL>
<BR>[Called By]<UL><LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_led_check_charging_mode
</UL>

<P><STRONG><a name="[9]"></a>key_gpio_mfb_level_change_cb</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, app_key_gpio.o(.isr.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = key_gpio_mfb_level_change_cb &rArr; key_gpio_mfb_intr_handler &rArr; app_io_msg_send
</UL>
<BR>[Calls]<UL><LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_gpio_mfb_intr_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_key_gpio.o(.text)
</UL>
<P><STRONG><a name="[36a]"></a>key_gpio_key0_debounce_handler</STRONG> (Thumb, 190 bytes, Stack size 32 bytes, app_key_gpio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = key_gpio_key0_debounce_handler &rArr; app_io_msg_send
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mfb_get_level
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_irq_change_polarity
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dlps_enable (via Veneer)
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_io_msg_send (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_gpio_timeout_cb
</UL>

<P><STRONG><a name="[a]"></a>key_gpio_timeout_cb</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, app_key_gpio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = key_gpio_timeout_cb &rArr; key_gpio_key0_debounce_handler &rArr; app_io_msg_send
</UL>
<BR>[Calls]<UL><LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_gpio_key0_debounce_handler
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_stop_timer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_key_gpio.o(.text)
</UL>
<P><STRONG><a name="[371]"></a>app_key_is_out_ear_disallow_mmi</STRONG> (Thumb, 102 bytes, Stack size 0 bytes, app_key_process.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_key_execute_action
</UL>

<P><STRONG><a name="[377]"></a>app_key_multi_click_match</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, app_key_process.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = app_key_multi_click_match
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_key_check_press
</UL>

<P><STRONG><a name="[378]"></a>app_key_handle_key_tone_play</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, app_key_process.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 600<LI>Call Chain = app_key_handle_key_tone_play &rArr; app_audio_tone_type_play &rArr; voice_prompt_play &rArr; notification_push &rArr; notification_play &rArr; notification_path_start &rArr; notification_start_vp &rArr; audio_path_start &rArr; audio_path_schedule &rArr; audio_path_voice_start &rArr; dsp_mgr_session_enable &rArr; dsp_state_machine &rArr; dsp_power_on &rArr; dsp_hal_reset &rArr; shm_enable &rArr; h2d_cmd_send &rArr; shm_cmd_send &rArr; wr_queue_send
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_tone_type_play
</UL>
<BR>[Called By]<UL><LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_key_single_click
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_key_timeout_cb
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_key_hybrid_click
</UL>

<P><STRONG><a name="[37e]"></a>app_key_hybrid_click</STRONG> (Thumb, 320 bytes, Stack size 48 bytes, app_key_process.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1708<LI>Call Chain = app_key_hybrid_click &rArr; app_key_execute_action &rArr; app_mmi_handle_action &rArr; app_multi_active_hfp_transfer &rArr; app_multi_handle_sniffing_link_disconnect_event &rArr; app_multi_judge_active_a2dp_idx_and_qos &rArr;  app_multi_handle_sniffing_link_disconnect_event (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mp_hci_test_mode_is_running
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_handle_action
<LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_is_in_the_box
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_key_execute_action
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_key_clear
<LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_key_handle_key_tone_play
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_get_call_status
</UL>
<BR>[Called By]<UL><LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_key_check_press
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_key_timeout_cb
</UL>

<P><STRONG><a name="[e]"></a>app_key_timeout_cb</STRONG> (Thumb, 830 bytes, Stack size 48 bytes, app_key_process.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1756<LI>Call Chain = app_key_timeout_cb &rArr; app_key_hybrid_click &rArr; app_key_execute_action &rArr; app_mmi_handle_action &rArr; app_multi_active_hfp_transfer &rArr; app_multi_handle_sniffing_link_disconnect_event &rArr; app_multi_judge_active_a2dp_idx_and_qos &rArr;  app_multi_handle_sniffing_link_disconnect_event (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_handle_action
<LI><a href="#[383]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_mgr_dev_ctrl
<LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_discharger_ntc_check_valid
<LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_force_enter_pairing_mode
<LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dlps_stop_power_down_wdg_timer
<LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_unlock_vbat_disallow_power_on
<LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_tone_type_play
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_key_single_click
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_key_hybrid_click
<LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_key_handle_key_tone_play
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_stop_timer
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_start_timer
<LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_led_change_mode
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_adp_get_plug_state
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_key_process.o(.text)
</UL>
<P><STRONG><a name="[385]"></a>app_key_start_factory_reset_timer</STRONG> (Thumb, 74 bytes, Stack size 32 bytes, app_key_process.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = app_key_start_factory_reset_timer &rArr; app_start_timer &rArr; remove_timeout_msg_from_list
</UL>
<BR>[Calls]<UL><LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_start_timer
</UL>
<BR>[Called By]<UL><LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_key_check_press
</UL>

<P><STRONG><a name="[387]"></a>app_key_check_press</STRONG> (Thumb, 1666 bytes, Stack size 48 bytes, app_key_process.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1756<LI>Call Chain = app_key_check_press &rArr; app_key_hybrid_click &rArr; app_key_execute_action &rArr; app_mmi_handle_action &rArr; app_multi_active_hfp_transfer &rArr; app_multi_handle_sniffing_link_disconnect_event &rArr; app_multi_judge_active_a2dp_idx_and_qos &rArr;  app_multi_handle_sniffing_link_disconnect_event (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_handle_action
<LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_get_b2s_link_num
<LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_unlock_vbat_disallow_power_on
<LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_is_in_the_box
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_auto_power_off_enable
<LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_auto_power_off_disable
<LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_key_stop_timer
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_key_single_click
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_key_execute_action
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_key_clear
<LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_key_start_factory_reset_timer
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_key_hybrid_click
<LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_key_multi_click_match
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_stop_timer
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_start_timer
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dlps_enable (via Veneer)
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dlps_disable (via Veneer)
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_charger_get_charge_state
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_get_call_status
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_charger_get_soc
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_adp_get_plug_state
</UL>
<BR>[Called By]<UL><LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_key_handle_msg
</UL>

<P><STRONG><a name="[c]"></a>app_key_bt_cback</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, app_key_process.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_key_process.o(.text)
</UL>
<P><STRONG><a name="[d]"></a>app_key_factory_reset_cback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, app_key_process.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> app_key_process.o(.text)
</UL>
<P><STRONG><a name="[372]"></a>app_key_clear</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, app_key_process.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_key_single_click
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_key_execute_action
<LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_key_check_press
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_key_hybrid_click
</UL>

<P><STRONG><a name="[38e]"></a>app_charger_state_convert</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, app_charger.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_charger_state_cb
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_charger_get_charge_state
</UL>

<P><STRONG><a name="[38f]"></a>app_charger_smooth_bat_discharge</STRONG> (Thumb, 258 bytes, Stack size 40 bytes, app_charger.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = app_charger_smooth_bat_discharge &rArr; app_charger_clear_smooth_bat_handle &rArr; app_stop_timer &rArr; remove_timeout_msg_from_list
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_charger_clear_smooth_bat_handle
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_start_timer
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_charger_get_charge_state
</UL>
<BR>[Called By]<UL><LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_charger_handle_msg
</UL>

<P><STRONG><a name="[394]"></a>app_charger_handle_soc</STRONG> (Thumb, 746 bytes, Stack size 56 bytes, app_charger.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1684<LI>Call Chain = app_charger_handle_soc &rArr; app_mmi_handle_action &rArr; app_multi_active_hfp_transfer &rArr; app_multi_handle_sniffing_link_disconnect_event &rArr; app_multi_judge_active_a2dp_idx_and_qos &rArr;  app_multi_handle_sniffing_link_disconnect_event (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_roleswap_ctrl_check
<LI><a href="#[39a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_report_rws_bud_info
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_find_br_link
<LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bas_batt_level_report
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_batt_level_report
<LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_battery_status_notify
<LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_charger_harman_low_bat_warning_vp
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_handle_action
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_start_timer
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_charger_get_charge_state
<LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_led_change_mode
</UL>
<BR>[Called By]<UL><LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_charger_update
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_charger_timeout_cb
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_charger_handle_msg
</UL>

<P><STRONG><a name="[f]"></a>app_charger_timeout_cb</STRONG> (Thumb, 282 bytes, Stack size 24 bytes, app_charger.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1708<LI>Call Chain = app_charger_timeout_cb &rArr; app_charger_handle_soc &rArr; app_mmi_handle_action &rArr; app_multi_active_hfp_transfer &rArr; app_multi_handle_sniffing_link_disconnect_event &rArr; app_multi_judge_active_a2dp_idx_and_qos &rArr;  app_multi_handle_sniffing_link_disconnect_event (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_charger_harman_low_bat_warning_vp
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_charger_handle_soc
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_handle_action
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_stop_timer
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_charger_get_charge_state
<LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_led_change_mode
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_charger.o(.text)
</UL>
<P><STRONG><a name="[10]"></a>app_charger_dm_cback</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, app_charger.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = app_charger_dm_cback &rArr; app_charger_clear_smooth_bat_handle &rArr; app_stop_timer &rArr; remove_timeout_msg_from_list
</UL>
<BR>[Calls]<UL><LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_charger_clear_smooth_bat_handle
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_stop_timer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_charger.o(.text)
</UL>
<P><STRONG><a name="[390]"></a>app_charger_clear_smooth_bat_handle</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, app_charger.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = app_charger_clear_smooth_bat_handle &rArr; app_stop_timer &rArr; remove_timeout_msg_from_list
</UL>
<BR>[Calls]<UL><LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_stop_timer
</UL>
<BR>[Called By]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_charger_dm_cback
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_charger_smooth_bat_discharge
</UL>

<P><STRONG><a name="[3aa]"></a>app_report_uart_event</STRONG> (Thumb, 122 bytes, Stack size 24 bytes, app_report.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = app_report_uart_event &rArr; app_transfer_push_data_queue &rArr; app_transfer_pop_data_queue &rArr;  app_transfer_pop_data_queue (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_transfer_push_data_queue
<LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_util_calc_checksum
</UL>
<BR>[Called By]<UL><LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_report_event
</UL>

<P><STRONG><a name="[3ab]"></a>app_report_le_event</STRONG> (Thumb, 114 bytes, Stack size 24 bytes, app_report.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = app_report_le_event &rArr; app_transfer_push_data_queue &rArr; app_transfer_pop_data_queue &rArr;  app_transfer_pop_data_queue (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_transfer_push_data_queue
</UL>
<BR>[Called By]<UL><LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_report_event
</UL>

<P><STRONG><a name="[3a9]"></a>app_report_spp_iap_event</STRONG> (Thumb, 140 bytes, Stack size 32 bytes, app_report.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = app_report_spp_iap_event &rArr; app_transfer_push_data_queue &rArr; app_transfer_pop_data_queue &rArr;  app_transfer_pop_data_queue (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_transfer_push_data_queue
</UL>
<BR>[Called By]<UL><LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_report_event
</UL>

<P><STRONG><a name="[11]"></a>app_gap_bt_cback</STRONG> (Thumb, 148 bytes, Stack size 16 bytes, app_gap.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = app_gap_bt_cback &rArr; app_gfps_handle_bt_user_confirm &rArr; app_gfps_send_legacy_bond_confirm &rArr; gfps_send_passkey &rArr; gatt_svc_send_data &rArr; gatt_svc_send_data_in_queue &rArr; calloc
</UL>
<BR>[Calls]<UL><LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_set_bd_addr
<LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_get_param
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp (via Veneer)
<LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_br_user_cfm_req_cfm
<LI><a href="#[3b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_handle_bt_user_confirm
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_gap.o(.text)
</UL>
<P><STRONG><a name="[3b7]"></a>app_ble_gap_handle_dev_state_change_evt</STRONG> (Thumb, 160 bytes, Stack size 48 bytes, app_ble_gap.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = app_ble_gap_handle_dev_state_change_evt
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_sniffing_param_update
</UL>
<BR>[Called By]<UL><LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_gap_handle_gap_msg
</UL>

<P><STRONG><a name="[3b9]"></a>app_ble_gap_handle_new_conn_state_evt</STRONG> (Thumb, 686 bytes, Stack size 64 bytes, app_ble_gap.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1412<LI>Call Chain = app_ble_gap_handle_new_conn_state_evt &rArr; app_lea_uca_link_sm &rArr; app_lea_uca_link_connected &rArr; app_lea_uca_remove_data_path &rArr; mtc_topology_dm &rArr;  app_lea_uca_link_sm (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_get_conn_handle
<LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_get_conn_param
<LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_set_data_len
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_report_event
<LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_transfer_queue_reset
<LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_roleswap_ctrl_check
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_auto_power_off_enable
<LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_auto_power_off_disable
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_stop_timer
<LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_get_connected_src_num
<LI><a href="#[3d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_set_prefer_conn_param
<LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sass_handle_le_dm
<LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_get_lea_link_num
<LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_get_le_link_num
<LI><a href="#[3c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_free_le_link
<LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_find_le_link_by_conn_id
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_alloc_le_link_by_conn_id
<LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_link_sm
<LI><a href="#[3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_pacs_init_available_context
<LI><a href="#[3c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_adv_check_restart_adv
<LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_ota_exit
<LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_notify_device_info_timer_stop
<LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_heartbeat_check_times_set
<LI><a href="#[3c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_heartbeat_check_timer_stop
<LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_eq_reset_unsaved
<LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_ble_ota_get_upgrate_status
<LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_linkback_info_init
<LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_sniffing_param_update
<LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_update_cpu_freq
<LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_point_link_num_changed
<LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_point_le_link_num_get
<LI><a href="#[3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_rtk_adv_start
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_rand_addr_get
<LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_common_adv_set_random
<LI><a href="#[3bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_common_adv_reset_conn_id
<LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_common_adv_get_conn_id
</UL>
<BR>[Called By]<UL><LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_gap_handle_gap_msg
</UL>

<P><STRONG><a name="[13]"></a>app_ble_gap_cb</STRONG> (Thumb, 344 bytes, Stack size 48 bytes, app_ble_gap.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 432<LI>Call Chain = app_ble_gap_cb &rArr; bt_bond_mgr_handle_gap_msg &rArr; bt_bond_handle_authen_key_req_ind &rArr; bt_le_find_entry_by_aes &rArr; bt_le_resolve_local_rpa
</UL>
<BR>[Calls]<UL><LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_le_resolve_random_address
<LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_mgr_handle_gap_msg
<LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_mgr_handle_gap_cb
<LI><a href="#[3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_handle_gap_cb
<LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_ble_conn_info_handle
<LI><a href="#[3ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_whitelist_set_operation_state
<LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_whitelist_handle_pending_operation
<LI><a href="#[3e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_gap_update_sniffing_param
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_ble_gap.o(.text)
</UL>
<P><STRONG><a name="[12]"></a>app_ble_gap_bt_cback</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, app_ble_gap.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = app_ble_gap_bt_cback &rArr; app_ble_common_adv_init &rArr; ble_ext_adv_mgr_init_adv_params &rArr; ble_ext_adv_mgr_init_adv_params_all &rArr; ble_ext_adv_mgr_allocate_adv_handle
</UL>
<BR>[Calls]<UL><LI><a href="#[3f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_common_adv_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_ble_gap.o(.text)
</UL>
<P><STRONG><a name="[3f5]"></a>app_ble_gap_get_ext_adv_num</STRONG> (Thumb, 104 bytes, Stack size 12 bytes, app_ble_gap.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = app_ble_gap_get_ext_adv_num
</UL>
<BR>[Called By]<UL><LI><a href="#[3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_gap_ble_mgr_init
</UL>

<P><STRONG><a name="[14]"></a>app_ble_gap_timeout_cb</STRONG> (Thumb, 98 bytes, Stack size 24 bytes, app_ble_gap.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = app_ble_gap_timeout_cb &rArr; app_stop_timer &rArr; remove_timeout_msg_from_list
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_stop_timer
<LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_find_le_link_by_conn_id
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_ble_gap.o(.text)
</UL>
<P><STRONG><a name="[407]"></a>app_ble_device_irk_handle_power_on</STRONG> (Thumb, 358 bytes, Stack size 56 bytes, app_ble_device.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = app_ble_device_irk_handle_power_on &rArr; app_gfps_update_rpa &rArr; app_gfps_msg_update_ble_addr &rArr; bt_gfps_send_ble_addr &rArr; bt_gfps_send_data &rArr; bt_rfc_data_send &rArr; rfc_data_req &rArr; rfc_check_send_credits &rArr; crc8EtsGen
</UL>
<BR>[Calls]<UL><LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_bond_set_param
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_random (via Veneer)
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_cfg_store
<LI><a href="#[40a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_adv_update_rpa
<LI><a href="#[408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_le_set_local_irk
<LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_update_rpa
</UL>
<BR>[Called By]<UL><LI><a href="#[40b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_device_handle_power_on
</UL>

<P><STRONG><a name="[41a]"></a>app_ble_device_rpa_handle_engage_role_decided</STRONG> (Thumb, 630 bytes, Stack size 64 bytes, app_ble_device.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = app_ble_device_rpa_handle_engage_role_decided &rArr; bt_le_set_local_irk &rArr; calloc
</UL>
<BR>[Calls]<UL><LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_bond_set_param
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_random (via Veneer)
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_cfg_store
<LI><a href="#[408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_le_set_local_irk
</UL>
<BR>[Called By]<UL><LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_device_handle_engage_role_decided
</UL>

<P><STRONG><a name="[15]"></a>app_ble_service_general_srv_cb</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, app_ble_service.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = app_ble_service_general_srv_cb &rArr; app_transfer_pop_data_queue &rArr;  app_transfer_pop_data_queue (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_get_conn_handle
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_transfer_pop_data_queue
<LI><a href="#[427]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_svc_handle_profile_data_cmpl
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_ble_service.o(.text)
</UL>
<P><STRONG><a name="[16]"></a>app_ble_service_transmit_srv_cb</STRONG> (Thumb, 208 bytes, Stack size 24 bytes, app_ble_service.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1996<LI>Call Chain = app_ble_service_transmit_srv_cb &rArr; app_harman_parser_process &rArr; app_harman_cmd_set_handle &rArr; app_harman_vendor_cmd_process &rArr; app_harman_devinfo_set &rArr; app_mmi_handle_action &rArr; app_multi_active_hfp_transfer &rArr; app_multi_handle_sniffing_link_disconnect_event &rArr; app_multi_judge_active_a2dp_idx_and_qos &rArr;  app_multi_handle_sniffing_link_disconnect_event (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;transmit_set_parameter
<LI><a href="#[428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_parser_process
<LI><a href="#[429]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_common_adv_set_conn_id
<LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_find_le_link_by_conn_id
<LI><a href="#[3df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_notify_device_info_timer_start
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_ble_service.o(.text)
</UL>
<P><STRONG><a name="[17]"></a>app_ble_service_bas_srv_cb</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, app_ble_service.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = app_ble_service_bas_srv_cb &rArr; bas_set_parameter
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bas_set_parameter
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_ble_service.o(.text)
</UL>
<P><STRONG><a name="[18]"></a>app_ble_service_dis_srv_cb</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, app_ble_service.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = app_ble_service_dis_srv_cb &rArr; dis_set_parameter
</UL>
<BR>[Calls]<UL><LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dis_set_parameter
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_ble_service.o(.text)
</UL>
<P><STRONG><a name="[19]"></a>app_ble_common_adv_callback</STRONG> (Thumb, 198 bytes, Stack size 32 bytes, app_ble_common_adv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = app_ble_common_adv_callback &rArr; app_ble_common_adv_set_random &rArr; ble_ext_adv_mgr_set_random &rArr; ble_ext_adv_mgr_disable &rArr; ble_ext_adv_mgr_send_msg &rArr; ble_ext_adv_mgr_find_by_handle
</UL>
<BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_rand_addr_get
<LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_common_adv_set_random
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_ble_common_adv.o(.text)
</UL>
<P><STRONG><a name="[1a]"></a>app_ble_common_adv_rand_addr_cb</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, app_ble_common_adv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = app_ble_common_adv_rand_addr_cb &rArr; app_ble_common_adv_set_random &rArr; ble_ext_adv_mgr_set_random &rArr; ble_ext_adv_mgr_disable &rArr; ble_ext_adv_mgr_send_msg &rArr; ble_ext_adv_mgr_find_by_handle
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_common_adv_set_random
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_ble_common_adv.o(.text)
</UL>
<P><STRONG><a name="[448]"></a>app_hfp_ring_alert</STRONG> (Thumb, 150 bytes, Stack size 40 bytes, app_hfp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 616<LI>Call Chain = app_hfp_ring_alert &rArr; app_audio_tone_type_play &rArr; voice_prompt_play &rArr; notification_push &rArr; notification_play &rArr; notification_path_start &rArr; notification_start_vp &rArr; audio_path_start &rArr; audio_path_schedule &rArr; audio_path_voice_start &rArr; dsp_mgr_session_enable &rArr; dsp_state_machine &rArr; dsp_power_on &rArr; dsp_hal_reset &rArr; shm_enable &rArr; h2d_cmd_send &rArr; shm_cmd_send &rArr; wr_queue_send
</UL>
<BR>[Calls]<UL><LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_get_b2s_link_num
<LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_tone_type_play
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_start_timer
<LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_pause_inactive_a2dp_link_stream
<LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_sco_status_notify
<LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_get_call_in_tone_type
</UL>
<BR>[Called By]<UL><LI><a href="#[44b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_always_playing_outband_tone
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_bt_cback
</UL>

<P><STRONG><a name="[461]"></a>app_hfp_check_service_status</STRONG> (Thumb, 156 bytes, Stack size 24 bytes, app_hfp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 600<LI>Call Chain = app_hfp_check_service_status &rArr; app_audio_tone_type_play &rArr; voice_prompt_play &rArr; notification_push &rArr; notification_play &rArr; notification_path_start &rArr; notification_start_vp &rArr; audio_path_start &rArr; audio_path_schedule &rArr; audio_path_voice_start &rArr; dsp_mgr_session_enable &rArr; dsp_state_machine &rArr; dsp_power_on &rArr; dsp_hal_reset &rArr; shm_enable &rArr; h2d_cmd_send &rArr; shm_cmd_send &rArr; wr_queue_send
</UL>
<BR>[Calls]<UL><LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_tone_type_play
<LI><a href="#[463]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_relay_async_single_with_raw_msg
<LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_check_b2s_link_by_id
<LI><a href="#[460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_set_no_service_timer
</UL>
<BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_bt_cback
</UL>

<P><STRONG><a name="[465]"></a>app_hfp_spk_vol_set</STRONG> (Thumb, 214 bytes, Stack size 56 bytes, app_hfp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 776<LI>Call Chain = app_hfp_spk_vol_set &rArr; app_audio_vol_set &rArr; app_iphone_abs_vol_wrap_audio_track_volume_out_set &rArr; app_harman_lr_balance_set &rArr; audio_volume_balance_set &rArr; audio_mgr_dispatch &rArr; audio_mgr_buffer_event_handle &rArr; audio_buffer_playing_state &rArr; audio_track_restart &rArr; audio_session_state_set &rArr;  audio_mgr_dispatch (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_find_br_link
<LI><a href="#[443]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_relay_sync_single_with_raw_msg
<LI><a href="#[450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bond_get_pair_idx_mapping
<LI><a href="#[44d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_vol_set
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_track_spk_unmute
</UL>
<BR>[Called By]<UL><LI><a href="#[466]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_set_vol_is_changed
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_bt_cback
</UL>

<P><STRONG><a name="[1c]"></a>app_hfp_bt_cback</STRONG> (Thumb, 1578 bytes, Stack size 72 bytes, app_hfp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1700<LI>Call Chain = app_hfp_bt_cback &rArr; app_mmi_handle_action &rArr; app_multi_active_hfp_transfer &rArr; app_multi_handle_sniffing_link_disconnect_event &rArr; app_multi_judge_active_a2dp_idx_and_qos &rArr;  app_multi_handle_sniffing_link_disconnect_event (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen (via Veneer)
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_report_event
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_find_br_link
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_batt_level_report
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_handle_action
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_auto_power_off_enable
<LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_auto_power_off_disable
<LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_tone_type_play
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_stop_timer
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_start_timer
<LI><a href="#[46e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_pbap_vcard_listing_by_number_pull
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_hfp_speaker_gain_level_report
<LI><a href="#[469]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_hfp_microphone_gain_level_report
<LI><a href="#[467]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_hfp_connect_cfm
<LI><a href="#[470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_handle_sniffing_link_disconnect_event
<LI><a href="#[46f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_check_in_sniffing
<LI><a href="#[46a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_get_b2s_link_num_with_profile
<LI><a href="#[46d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_find_le_link_by_addr
<LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_check_b2s_link_by_id
<LI><a href="#[46b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bond_set_priority
<LI><a href="#[450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bond_get_pair_idx_mapping
<LI><a href="#[45d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_set_mic_mute_status
<LI><a href="#[46c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_set_bud_stream_state
<LI><a href="#[455]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_update_call_status
<LI><a href="#[451]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_set_active_idx
<LI><a href="#[465]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_spk_vol_set
<LI><a href="#[461]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_check_service_status
<LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_ring_alert
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_hfp.o(.text)
</UL>
<P><STRONG><a name="[1b]"></a>app_hfp_audio_cback</STRONG> (Thumb, 330 bytes, Stack size 64 bytes, app_hfp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = app_hfp_audio_cback &rArr; audio_probe_dsp_ipc_send_call_status &rArr; h2d_cmd_send &rArr; shm_cmd_send &rArr; wr_queue_send
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_find_br_link
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_stop_timer
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_start_timer
<LI><a href="#[47a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sidetone_release
<LI><a href="#[479]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sidetone_disable
<LI><a href="#[478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;harman_sidetone_set_dsp
<LI><a href="#[476]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_stream_type_get
<LI><a href="#[477]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_state_get
<LI><a href="#[444]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_probe_dsp_ipc_send_call_status
<LI><a href="#[458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_sco_is_connected
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_hfp.o(.text)
</UL>
<P><STRONG><a name="[47e]"></a>app_hfp_set_mic_mute</STRONG> (Thumb, 98 bytes, Stack size 24 bytes, app_hfp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 576<LI>Call Chain = app_hfp_set_mic_mute &rArr; audio_volume_in_unmute &rArr; audio_mgr_dispatch &rArr; audio_mgr_buffer_event_handle &rArr; audio_buffer_playing_state &rArr; audio_track_restart &rArr; audio_session_state_set &rArr;  audio_mgr_dispatch (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_stop_timer
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_start_timer
<LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_is_mic_mute
<LI><a href="#[45e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_volume_in_unmute
<LI><a href="#[484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_volume_in_mute
</UL>
<BR>[Called By]<UL><LI><a href="#[47d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_mute_ctrl
</UL>

<P><STRONG><a name="[1e]"></a>app_avrcp_timeout_cb</STRONG> (Thumb, 112 bytes, Stack size 24 bytes, app_avrcp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 688<LI>Call Chain = app_avrcp_timeout_cb &rArr; app_harman_lr_balance_set &rArr; audio_volume_balance_set &rArr; audio_mgr_dispatch &rArr; audio_mgr_buffer_event_handle &rArr; audio_buffer_playing_state &rArr; audio_track_restart &rArr; audio_session_state_set &rArr;  audio_mgr_dispatch (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_find_br_link
<LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_volume_out_set
<LI><a href="#[486]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_lr_balance_set
<LI><a href="#[485]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_avrcp_stop_abs_vol_check_timer
<LI><a href="#[450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bond_get_pair_idx_mapping
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_track_spk_unmute
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_avrcp.o(.text)
</UL>
<P><STRONG><a name="[488]"></a>app_avrcp_abs_vol_set</STRONG> (Thumb, 440 bytes, Stack size 64 bytes, app_avrcp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 784<LI>Call Chain = app_avrcp_abs_vol_set &rArr; app_audio_vol_set &rArr; app_iphone_abs_vol_wrap_audio_track_volume_out_set &rArr; app_harman_lr_balance_set &rArr; audio_volume_balance_set &rArr; audio_mgr_dispatch &rArr; audio_mgr_buffer_event_handle &rArr; audio_buffer_playing_state &rArr; audio_track_restart &rArr; audio_session_state_set &rArr;  audio_mgr_dispatch (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_find_br_link
<LI><a href="#[48d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_avrcp_volume_change_req
<LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_iphone_abs_vol_sync_abs_vol
<LI><a href="#[48b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_iphone_abs_vol_lv_handle
<LI><a href="#[48a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_iphone_abs_vol_check_a2dp_total_gain_num_16
<LI><a href="#[48e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_set_first_connect_sync_default_vol_flag
<LI><a href="#[48c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_get_first_connect_sync_default_vol_flag
<LI><a href="#[48f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_set_max_min_vol_from_phone_flag
<LI><a href="#[443]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_relay_sync_single_with_raw_msg
<LI><a href="#[450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bond_get_pair_idx_mapping
<LI><a href="#[44d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_vol_set
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_track_spk_unmute
</UL>
<BR>[Called By]<UL><LI><a href="#[490]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_avrcp_set_vol_is_changed
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_avrcp_bt_cback
</UL>

<P><STRONG><a name="[1d]"></a>app_avrcp_bt_cback</STRONG> (Thumb, 688 bytes, Stack size 64 bytes, app_avrcp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 848<LI>Call Chain = app_avrcp_bt_cback &rArr; app_avrcp_abs_vol_set &rArr; app_audio_vol_set &rArr; app_iphone_abs_vol_wrap_audio_track_volume_out_set &rArr; app_harman_lr_balance_set &rArr; audio_volume_balance_set &rArr; audio_mgr_dispatch &rArr; audio_mgr_buffer_event_handle &rArr; audio_buffer_playing_state &rArr; audio_track_restart &rArr; audio_session_state_set &rArr;  audio_mgr_dispatch (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_find_br_link
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_start_timer
<LI><a href="#[494]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_avrcp_volume_change_register_rsp
<LI><a href="#[491]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_avrcp_vendor_rsp_send
<LI><a href="#[492]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_avrcp_connect_cfm
<LI><a href="#[493]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_avrcp_browsing_connect_cfm
<LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_volume_out_set
<LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_iphone_abs_vol_sync_abs_vol
<LI><a href="#[48b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_iphone_abs_vol_lv_handle
<LI><a href="#[48a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_iphone_abs_vol_check_a2dp_total_gain_num_16
<LI><a href="#[486]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_lr_balance_set
<LI><a href="#[48c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_get_first_connect_sync_default_vol_flag
<LI><a href="#[485]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_avrcp_stop_abs_vol_check_timer
<LI><a href="#[488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_avrcp_abs_vol_set
<LI><a href="#[443]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_relay_sync_single_with_raw_msg
<LI><a href="#[450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bond_get_pair_idx_mapping
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_track_spk_unmute
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_avrcp.o(.text)
</UL>
<P><STRONG><a name="[1f]"></a>app_a2dp_bt_cback</STRONG> (Thumb, 270 bytes, Stack size 32 bytes, app_a2dp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = app_a2dp_bt_cback &rArr; app_sniff_mode_b2s_enable_all &rArr; bt_sniff_mode_enable &rArr; bt_pm_sm &rArr; bt_sniff_mode_exit &rArr; sys_timer_restart &rArr; sys_hp_timer_list_insert &rArr; hw_timer_restart &rArr; hw_timer_safe_stop &rArr; hw_timer_set_div
</UL>
<BR>[Calls]<UL><LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_find_br_link
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_get_call_status
<LI><a href="#[497]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_a2dp_connect_cfm
<LI><a href="#[49b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sniff_mode_b2s_enable_all
<LI><a href="#[499]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sniff_mode_b2s_disable_all
<LI><a href="#[49a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_get_a2dp_start_num
<LI><a href="#[498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_sniffing_start
<LI><a href="#[46c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_set_bud_stream_state
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_a2dp.o(.text)
</UL>
<P><STRONG><a name="[4a2]"></a>app_harman_req_bt_remote_name</STRONG> (Thumb, 192 bytes, Stack size 48 bytes, app_device.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = app_harman_req_bt_remote_name &rArr; bt_remote_name_req
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_get_b2s_link_num
<LI><a href="#[4a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_remote_name_req
</UL>
<BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_timerout_cb
</UL>

<P><STRONG><a name="[24]"></a>app_device_timerout_cb</STRONG> (Thumb, 192 bytes, Stack size 16 bytes, app_device.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = app_device_timerout_cb &rArr; app_harman_req_remote_device_name_timer_start &rArr; app_start_timer &rArr; remove_timeout_msg_from_list
</UL>
<BR>[Calls]<UL><LI><a href="#[4a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switch_into_single_tone_test_mode (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_get_b2s_link_num
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_stop_timer
<LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt_reset
<LI><a href="#[4a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_req_bt_remote_name
<LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_relay_async_single
<LI><a href="#[406]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_req_remote_device_name_timer_start
<LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_find_le_link_by_conn_id
<LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_common_adv_get_conn_id
<LI><a href="#[4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;voice_prompt_remaining_count_get
<LI><a href="#[4a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tts_remaining_count_get
<LI><a href="#[4a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ringtone_remaining_count_get
<LI><a href="#[4a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_disconnect_all_link
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_device.o(.text)
</UL>
<P><STRONG><a name="[22]"></a>app_device_dm_cback</STRONG> (Thumb, 644 bytes, Stack size 48 bytes, app_device.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 2004<LI>Call Chain = app_device_dm_cback &rArr; app_bt_policy_startup &rArr; app_bt_policy_state_machine &rArr; app_bt_policy_event_handle &rArr;  app_bt_policy_roleswitch_handle (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_charger_update
<LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_is_in_the_box
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_auto_power_off_enable
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_key_check_vol_mmi
<LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_key_is_enter_pairing
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dlps_enable (via Veneer)
<LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_led_change_mode
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eq_utils_get_default_idx
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_cfg_store
<LI><a href="#[4b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_cfg_store_all
<LI><a href="#[410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_device_handle_power_off
<LI><a href="#[40b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_device_handle_power_on
<LI><a href="#[4bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;power_mode_set
<LI><a href="#[4b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mp_hci_test_set_mode
<LI><a href="#[4bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sniff_mode_startup
<LI><a href="#[4b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_total_power_on_time_update
<LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_power_on_link_back_flag_set
<LI><a href="#[4bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_license_product_info_dump
<LI><a href="#[4ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dlps_power_off
<LI><a href="#[4be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dlps_enable_auto_poweroff_stop_wdg_timer
<LI><a href="#[4b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_stop_a2dp_and_sco
<LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_startup
<LI><a href="#[4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_shutdown
<LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_enter_pairing_mode
<LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bond_clear_sec_diff_link_record
<LI><a href="#[4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_state_change
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_device.o(.text)
</UL>
<P><STRONG><a name="[4c2]"></a>app_device_auto_power_on_before_factory_reset</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, app_device.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = app_device_auto_power_on_before_factory_reset &rArr; app_device_is_in_the_box
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_is_in_the_box
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_charger_get_soc
</UL>
<BR>[Called By]<UL><LI><a href="#[4c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_bt_and_ble_ready_check
<LI><a href="#[4c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_boot_up_directly
</UL>

<P><STRONG><a name="[4c3]"></a>app_device_boot_up_directly</STRONG> (Thumb, 200 bytes, Stack size 40 bytes, app_device.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = app_device_boot_up_directly &rArr; app_cfg_store
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_is_in_the_box
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_charger_get_soc
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_adp_get_plug_state
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_cfg_store
<LI><a href="#[4c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_auto_power_on_before_factory_reset
</UL>
<BR>[Called By]<UL><LI><a href="#[4d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_reboot_handle
<LI><a href="#[4c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_bt_and_ble_ready_check
</UL>

<P><STRONG><a name="[4c4]"></a>app_device_power_on_check</STRONG> (Thumb, 110 bytes, Stack size 24 bytes, app_device.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = app_device_power_on_check &rArr; app_device_is_in_the_box
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_is_in_the_box
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_charger_get_soc
</UL>
<BR>[Called By]<UL><LI><a href="#[4d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_reboot_handle
<LI><a href="#[4c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_bt_and_ble_ready_check
</UL>

<P><STRONG><a name="[4c5]"></a>app_device_bt_and_ble_ready_check</STRONG> (Thumb, 738 bytes, Stack size 56 bytes, app_device.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1684<LI>Call Chain = app_device_bt_and_ble_ready_check &rArr; app_mmi_handle_action &rArr; app_multi_active_hfp_transfer &rArr; app_multi_handle_sniffing_link_disconnect_event &rArr; app_multi_judge_active_a2dp_idx_and_qos &rArr;  app_multi_handle_sniffing_link_disconnect_event (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d (via Veneer)
<LI><a href="#[4cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz (via Veneer)
<LI><a href="#[4ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv (via Veneer)
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_module_trace_set (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_handle_action
<LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_discharger_ntc_check_valid
<LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_unlock_vbat_disallow_power_on
<LI><a href="#[4d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_gpio_get_press_state
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dlps_enable (via Veneer)
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dlps_disable (via Veneer)
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_charger_get_soc
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_cfg_store
<LI><a href="#[4d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_reboot_handle
<LI><a href="#[4c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_power_on_check
<LI><a href="#[4c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_boot_up_directly
<LI><a href="#[4c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_auto_power_on_before_factory_reset
<LI><a href="#[4bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;power_mode_set
<LI><a href="#[4c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_adv_init
<LI><a href="#[4b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ipc_publish
<LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_finder_update_clock_value
<LI><a href="#[4cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_finder_provisioned
<LI><a href="#[4c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_finder_init
<LI><a href="#[4d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_finder_handle_event_wakeup_by_rtc
<LI><a href="#[4c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_adv_init
<LI><a href="#[4cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dult_handle_power_on
<LI><a href="#[4ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dult_device_init
<LI><a href="#[4c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_SetMFBWakeUpFunction
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_RunCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_bt_cback
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_ble_cback
</UL>

<P><STRONG><a name="[21]"></a>app_device_ble_cback</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, app_device.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1684<LI>Call Chain = app_device_ble_cback &rArr; app_device_bt_and_ble_ready_check &rArr; app_mmi_handle_action &rArr; app_multi_active_hfp_transfer &rArr; app_multi_handle_sniffing_link_disconnect_event &rArr; app_multi_judge_active_a2dp_idx_and_qos &rArr;  app_multi_handle_sniffing_link_disconnect_event (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_bt_and_ble_ready_check
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_device.o(.text)
</UL>
<P><STRONG><a name="[23]"></a>app_device_bt_cback</STRONG> (Thumb, 620 bytes, Stack size 48 bytes, app_device.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1732<LI>Call Chain = app_device_bt_cback &rArr; app_device_bt_and_ble_ready_check &rArr; app_mmi_handle_action &rArr; app_multi_active_hfp_transfer &rArr; app_multi_handle_sniffing_link_disconnect_event &rArr; app_multi_judge_active_a2dp_idx_and_qos &rArr;  app_multi_handle_sniffing_link_disconnect_event (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen (via Veneer)
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mp_hci_test_mode_is_running
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_handle_action
<LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_get_b2s_link_num
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_auto_power_off_enable
<LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_is_test_equipment
<LI><a href="#[4c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_bt_and_ble_ready_check
<LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_relay_async_single
<LI><a href="#[424]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;harman_crc16_ibm
<LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_remote_device_name_crc_set
<LI><a href="#[426]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_le_common_adv_update
<LI><a href="#[406]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_req_remote_device_name_timer_start
<LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_find_le_link_by_conn_id
<LI><a href="#[3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_rtk_adv_start
<LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_common_adv_get_conn_id
<LI><a href="#[4d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_br_get_remote_name
<LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_sniff_mode_disable
<LI><a href="#[4d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_find_b2s_link
<LI><a href="#[4d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_check_b2s_link
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_device.o(.text)
</UL>
<P><STRONG><a name="[4d5]"></a>app_device_is_test_equipment</STRONG> (Thumb, 136 bytes, Stack size 168 bytes, app_device.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = app_device_is_test_equipment &rArr; strncmp
</UL>
<BR>[Calls]<UL><LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen (via Veneer)
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4 (via Veneer)
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[4dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncmp
</UL>
<BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_bt_cback
</UL>

<P><STRONG><a name="[4d3]"></a>app_device_reboot_handle</STRONG> (Thumb, 132 bytes, Stack size 24 bytes, app_device.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = app_device_reboot_handle &rArr; app_device_boot_up_directly &rArr; app_cfg_store
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_cfg_store
<LI><a href="#[4c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_power_on_check
<LI><a href="#[4c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_boot_up_directly
</UL>
<BR>[Called By]<UL><LI><a href="#[4c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_bt_and_ble_ready_check
</UL>

<P><STRONG><a name="[4dd]"></a>app_device_disconn_need_play</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, app_device.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = app_device_disconn_need_play
</UL>
<BR>[Calls]<UL><LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_link_policy_ind
</UL>

<P><STRONG><a name="[20]"></a>app_device_link_policy_ind</STRONG> (Thumb, 1160 bytes, Stack size 48 bytes, app_device.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 2004<LI>Call Chain = app_device_link_policy_ind &rArr; app_bt_policy_disconnect &rArr; app_bt_policy_state_machine &rArr; app_bt_policy_event_handle &rArr;  app_bt_policy_roleswitch_handle (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_find_br_link
<LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_charger_harman_low_bat_warning_vp
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_roleswap_ctrl_get_status
<LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_get_b2s_link_num
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_get_call_status
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_auto_power_off_enable
<LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_auto_power_off_disable
<LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_tone_type_play
<LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_key_reset_enter_pairing
<LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_key_is_enter_pairing
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_get_state
<LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_led_change_mode
<LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_relay_async_single
<LI><a href="#[49b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sniff_mode_b2s_enable_all
<LI><a href="#[49a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_get_a2dp_start_num
<LI><a href="#[46c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_set_bud_stream_state
<LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_a2dp_get_active_idx
<LI><a href="#[480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_adjust_sco_window
<LI><a href="#[458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_sco_is_connected
<LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_device_handle_b2s_bt_disconnected
<LI><a href="#[41e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_device_handle_b2s_bt_connected
<LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_device_handle_engage_role_decided
<LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_device_handle_enter_pair_mode
<LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_device_handle_radio_mode
<LI><a href="#[3de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_point_link_tone_set
<LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_point_link_tone_get
<LI><a href="#[4e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_check_reopen_mic
<LI><a href="#[4e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sass_policy_profile_conn_handle
<LI><a href="#[4e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_conn_profiles
<LI><a href="#[4e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_mgr_update_sniff_mask
<LI><a href="#[4eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_total_playback_time_update
<LI><a href="#[4ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_recon_a2dp
<LI><a href="#[4e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_dump_link_information
<LI><a href="#[4e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_device_handle_b2s_link_disconnected
<LI><a href="#[4e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_cmd_update_eq_ctrl
<LI><a href="#[4e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_cmd_get_tool_connect_status
<LI><a href="#[4ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_primary_engage_action_adjust
<LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_get_radio_mode
<LI><a href="#[4ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_disconnect
<LI><a href="#[4e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_b2s_conn_start_timer
<LI><a href="#[4e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_set_avrcp_status
<LI><a href="#[4dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_disconn_need_play
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_device.o(.text)
</UL>
<P><STRONG><a name="[4ee]"></a>app_mmi_spk_mute_set</STRONG> (Thumb, 328 bytes, Stack size 40 bytes, app_mmi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 632<LI>Call Chain = app_mmi_spk_mute_set &rArr; app_audio_track_spk_unmute &rArr; audio_track_volume_out_unmute &rArr; audio_mgr_dispatch &rArr; audio_mgr_buffer_event_handle &rArr; audio_buffer_playing_state &rArr; audio_track_restart &rArr; audio_session_state_set &rArr;  audio_mgr_dispatch (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_find_br_link
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_get_call_status
<LI><a href="#[48a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_iphone_abs_vol_check_a2dp_total_gain_num_16
<LI><a href="#[450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bond_get_pair_idx_mapping
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_track_spk_unmute
<LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_a2dp_get_active_idx
<LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_get_active_idx
<LI><a href="#[4f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_volume_out_mute
<LI><a href="#[4f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_route_dac_gain_set
</UL>
<BR>[Called By]<UL><LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_handle_action
</UL>

<P><STRONG><a name="[4f3]"></a>app_mmi_reboot</STRONG> (Thumb, 98 bytes, Stack size 8 bytes, app_mmi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 400<LI>Call Chain = app_mmi_reboot &rArr; app_device_state_change &rArr; app_report_event &rArr; app_report_spp_iap_event &rArr; app_transfer_push_data_queue &rArr; app_transfer_pop_data_queue &rArr;  app_transfer_pop_data_queue (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dlps_enable (via Veneer)
<LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt_reset
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_cfg_store
<LI><a href="#[4ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dlps_power_off
<LI><a href="#[4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_state_change
<LI><a href="#[4ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_factory_reset
</UL>
<BR>[Called By]<UL><LI><a href="#[4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_reboot_check
</UL>

<P><STRONG><a name="[25]"></a>app_mmi_timeout_cb</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, app_mmi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 416<LI>Call Chain = app_mmi_timeout_cb &rArr; app_mmi_reboot_check &rArr; app_mmi_reboot &rArr; app_device_state_change &rArr; app_report_event &rArr; app_report_spp_iap_event &rArr; app_transfer_push_data_queue &rArr; app_transfer_pop_data_queue &rArr;  app_transfer_pop_data_queue (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_reboot_check
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_mmi.o(.text)
</UL>
<P><STRONG><a name="[4f5]"></a>app_mmi_harman_get_active_hf_idx</STRONG> (Thumb, 246 bytes, Stack size 64 bytes, app_mmi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = app_mmi_harman_get_active_hf_idx &rArr; app_harman_aling_active_hfp_idx_get
</UL>
<BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_check_b2s_link_by_id
<LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_a2dp_get_active_idx
<LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_get_active_idx
<LI><a href="#[458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_sco_is_connected
<LI><a href="#[4f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_aling_active_hfp_idx_get
</UL>
<BR>[Called By]<UL><LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_handle_action
</UL>

<P><STRONG><a name="[4f7]"></a>app_mmi_volume_up</STRONG> (Thumb, 684 bytes, Stack size 56 bytes, app_mmi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 744<LI>Call Chain = app_mmi_volume_up &rArr; app_iphone_abs_vol_wrap_audio_track_volume_out_set &rArr; app_harman_lr_balance_set &rArr; audio_volume_balance_set &rArr; audio_mgr_dispatch &rArr; audio_mgr_buffer_event_handle &rArr; audio_buffer_playing_state &rArr; audio_track_restart &rArr; audio_session_state_set &rArr;  audio_mgr_dispatch (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_find_br_link
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_get_call_status
<LI><a href="#[4f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_key_set_volume_status
<LI><a href="#[48d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_avrcp_volume_change_req
<LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_volume_out_set
<LI><a href="#[48a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_iphone_abs_vol_check_a2dp_total_gain_num_16
<LI><a href="#[486]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_lr_balance_set
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_hfp_speaker_gain_level_report
<LI><a href="#[450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bond_get_pair_idx_mapping
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_track_spk_unmute
<LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_a2dp_get_active_idx
<LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_get_active_idx
<LI><a href="#[445]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_inband_tone_mute_ctrl
<LI><a href="#[4fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;harman_push_max_tone_when_not_playing
<LI><a href="#[4fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_iphone_abs_vol_wrap_audio_track_volume_out_set
<LI><a href="#[4f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_get_bud_stream_state
</UL>
<BR>[Called By]<UL><LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_handle_action
</UL>

<P><STRONG><a name="[4fc]"></a>app_mmi_volume_down</STRONG> (Thumb, 550 bytes, Stack size 40 bytes, app_mmi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 728<LI>Call Chain = app_mmi_volume_down &rArr; app_iphone_abs_vol_wrap_audio_track_volume_out_set &rArr; app_harman_lr_balance_set &rArr; audio_volume_balance_set &rArr; audio_mgr_dispatch &rArr; audio_mgr_buffer_event_handle &rArr; audio_buffer_playing_state &rArr; audio_track_restart &rArr; audio_session_state_set &rArr;  audio_mgr_dispatch (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_find_br_link
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_get_call_status
<LI><a href="#[4f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_key_set_volume_status
<LI><a href="#[48d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_avrcp_volume_change_req
<LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_volume_out_set
<LI><a href="#[48a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_iphone_abs_vol_check_a2dp_total_gain_num_16
<LI><a href="#[486]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_lr_balance_set
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_hfp_speaker_gain_level_report
<LI><a href="#[450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bond_get_pair_idx_mapping
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_track_spk_unmute
<LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_a2dp_get_active_idx
<LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_get_active_idx
<LI><a href="#[445]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_inband_tone_mute_ctrl
<LI><a href="#[4fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_iphone_abs_vol_wrap_audio_track_volume_out_set
<LI><a href="#[4f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_get_bud_stream_state
</UL>
<BR>[Called By]<UL><LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_handle_action
</UL>

<P><STRONG><a name="[522]"></a>app_mmi_power_off</STRONG> (Thumb, 106 bytes, Stack size 8 bytes, app_mmi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 584<LI>Call Chain = app_mmi_power_off &rArr; app_audio_tone_type_play &rArr; voice_prompt_play &rArr; notification_push &rArr; notification_play &rArr; notification_path_start &rArr; notification_start_vp &rArr; audio_path_start &rArr; audio_path_schedule &rArr; audio_path_voice_start &rArr; dsp_mgr_session_enable &rArr; dsp_state_machine &rArr; dsp_power_on &rArr; dsp_hal_reset &rArr; shm_enable &rArr; h2d_cmd_send &rArr; shm_cmd_send &rArr; wr_queue_send
</UL>
<BR>[Calls]<UL><LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_tone_type_play
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_led_timer_stop
<LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_led_change_mode
<LI><a href="#[525]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_mgr_power_off
<LI><a href="#[536]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_tone_type_stop
<LI><a href="#[535]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_tone_flush
</UL>
<BR>[Called By]<UL><LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_handle_action
</UL>

<P><STRONG><a name="[4f4]"></a>app_mmi_reboot_check</STRONG> (Thumb, 126 bytes, Stack size 16 bytes, app_mmi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 416<LI>Call Chain = app_mmi_reboot_check &rArr; app_mmi_reboot &rArr; app_device_state_change &rArr; app_report_event &rArr; app_report_spp_iap_event &rArr; app_transfer_push_data_queue &rArr; app_transfer_pop_data_queue &rArr;  app_transfer_pop_data_queue (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_get_b2s_link_num
<LI><a href="#[537]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_key_long_key_power_off_pressed_get
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_stop_timer
<LI><a href="#[538]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_led_get_led_stop_check_state
<LI><a href="#[4f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_reboot_check_timer_start
<LI><a href="#[4f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_reboot
<LI><a href="#[4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;voice_prompt_remaining_count_get
<LI><a href="#[4a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ringtone_remaining_count_get
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_timeout_cb
</UL>

<P><STRONG><a name="[50e]"></a>app_mmi_check_factory_reset_behavior</STRONG> (Thumb, 100 bytes, Stack size 8 bytes, app_mmi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = app_mmi_check_factory_reset_behavior
</UL>
<BR>[Called By]<UL><LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_handle_action
</UL>

<P><STRONG><a name="[508]"></a>app_mmi_check_lea_action</STRONG> (Thumb, 134 bytes, Stack size 16 bytes, app_mmi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1244<LI>Call Chain = app_mmi_check_lea_action &rArr; mtc_topology_dm &rArr;  app_lea_uca_link_sm (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_get_btmode
<LI><a href="#[539]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_topology_dm
<LI><a href="#[50b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_mgr_mmi_handle
<LI><a href="#[53a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_mgr_find_call_device_by_priority
</UL>
<BR>[Called By]<UL><LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_handle_action
</UL>

<P><STRONG><a name="[27]"></a>app_dlps_timeout_cb</STRONG> (Thumb, 210 bytes, Stack size 72 bytes, app_dlps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = app_dlps_timeout_cb &rArr; app_auto_power_off_disable &rArr; app_stop_timer &rArr; remove_timeout_msg_from_list
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_auto_power_off_disable
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_stop_timer
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_start_timer
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dlps_enable (via Veneer)
<LI><a href="#[55d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;power_stop_all_non_excluded_timer
<LI><a href="#[54d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;power_mode_get (via Veneer)
<LI><a href="#[557]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;power_get_statistics
<LI><a href="#[55c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;power_get_error_code
<LI><a href="#[55a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dlps_utils_get_platform_refuse_reason
<LI><a href="#[558]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dlps_utils_get_btmac_lpm_statics
<LI><a href="#[55b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dlps_util_get_platform_error_code
<LI><a href="#[559]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dlps_util_get_btmac_error_code
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_dlps.o(.text)
</UL>
<P><STRONG><a name="[567]"></a>linkback_print_active_node</STRONG> (Thumb, 84 bytes, Stack size 40 bytes, app_linkback.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = linkback_print_active_node
</UL>
<BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[58f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkback_active_node_remain_profs_sub
<LI><a href="#[58d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkback_active_node_remain_profs_add
<LI><a href="#[58c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkback_active_node_src_conn_fail_adjust_remain_profs
<LI><a href="#[58b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkback_active_node_step_fail_adjust_remain_profs
<LI><a href="#[58a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkback_active_node_step_suc_adjust_remain_profs
<LI><a href="#[588]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkback_active_node_load
</UL>

<P><STRONG><a name="[5a3]"></a>app_multi_find_new_active_a2dp_link_by_priority</STRONG> (Thumb, 80 bytes, Stack size 32 bytes, app_multilink.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = app_multi_find_new_active_a2dp_link_by_priority &rArr; app_bond_b2s_addr_get
</UL>
<BR>[Calls]<UL><LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp (via Veneer)
<LI><a href="#[593]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bond_b2s_num_get
<LI><a href="#[517]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bond_b2s_addr_get
<LI><a href="#[4d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_find_b2s_link
</UL>
<BR>[Called By]<UL><LI><a href="#[5a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_judge_active_a2dp_idx_and_qos
</UL>

<P><STRONG><a name="[5ac]"></a>app_multi_a2dp_stop</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, app_multilink.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1556<LI>Call Chain = app_multi_a2dp_stop &rArr; app_multi_handle_sniffing_link_disconnect_event &rArr; app_multi_judge_active_a2dp_idx_and_qos &rArr;  app_multi_handle_sniffing_link_disconnect_event (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_find_br_link
<LI><a href="#[470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_handle_sniffing_link_disconnect_event
<LI><a href="#[46f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_check_in_sniffing
<LI><a href="#[5a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_sniffing_stop
<LI><a href="#[5a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_judge_active_a2dp_idx_and_qos
<LI><a href="#[4ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_primary_engage_action_adjust
</UL>
<BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_timeout_cb
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_bt_cback
</UL>

<P><STRONG><a name="[5b5]"></a>app_multi_hfp_audio_connect_confirm</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, app_multilink.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = app_multi_hfp_audio_connect_confirm &rArr; bt_hfp_audio_connect_cfm &rArr; gap_br_send_sco_conn_cfm
</UL>
<BR>[Calls]<UL><LI><a href="#[498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_sniffing_start
<LI><a href="#[5aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_if_fm_ml_handle
<LI><a href="#[5ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_hfp_audio_connect_cfm
</UL>
<BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_bt_cback
</UL>

<P><STRONG><a name="[28]"></a>app_multi_bt_cback</STRONG> (Thumb, 1888 bytes, Stack size 72 bytes, app_multilink.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1628<LI>Call Chain = app_multi_bt_cback &rArr; app_multi_a2dp_stop &rArr; app_multi_handle_sniffing_link_disconnect_event &rArr; app_multi_judge_active_a2dp_idx_and_qos &rArr;  app_multi_handle_sniffing_link_disconnect_event (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_find_br_link
<LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_get_b2s_link_num
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_get_call_status
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_stop_timer
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_start_timer
<LI><a href="#[498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_sniffing_start
<LI><a href="#[454]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_sco_link_switch
<LI><a href="#[474]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_hfp_voice_recognition_disable_req
<LI><a href="#[446]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_volume_out_unmute
<LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_resume_a2dp_link_stream
<LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_pause_inactive_a2dp_link_stream
<LI><a href="#[470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_handle_sniffing_link_disconnect_event
<LI><a href="#[46f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_check_in_sniffing
<LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_get_sco_conn_num
<LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_check_b2s_link_by_id
<LI><a href="#[46c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_set_bud_stream_state
<LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_a2dp_get_active_idx
<LI><a href="#[480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_adjust_sco_window
<LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_get_active_idx
<LI><a href="#[445]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_inband_tone_mute_ctrl
<LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_sniffing_param_update
<LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_update_cpu_freq
<LI><a href="#[5bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_index_get
<LI><a href="#[5b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_a2dp_stream_start_cfm
<LI><a href="#[5ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sass_preempt_policy
<LI><a href="#[5a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_preemptive_judge
<LI><a href="#[5bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_sco_handle
<LI><a href="#[5b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_acl_disconn_handle
<LI><a href="#[5a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_sniffing_stop
<LI><a href="#[5a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_qos_param_update
<LI><a href="#[5b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_check_voice_dial
<LI><a href="#[5a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_judge_active_a2dp_idx_and_qos
<LI><a href="#[59e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_allow_a2dp_sniffing
<LI><a href="#[59b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_set_active_idx
<LI><a href="#[5b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_hfp_audio_connect_confirm
<LI><a href="#[5ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_a2dp_stop
<LI><a href="#[515]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_hfp_audio_disconnect_req
<LI><a href="#[4f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_volume_out_mute
<LI><a href="#[510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_is_record_a2dp_active_ever_set
<LI><a href="#[4eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_total_playback_time_update
<LI><a href="#[4ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_primary_engage_action_adjust
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_multilink.o(.text)
</UL>
<P><STRONG><a name="[29]"></a>app_multi_timeout_cb</STRONG> (Thumb, 252 bytes, Stack size 48 bytes, app_multilink.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1604<LI>Call Chain = app_multi_timeout_cb &rArr; app_multi_a2dp_stop &rArr; app_multi_handle_sniffing_link_disconnect_event &rArr; app_multi_judge_active_a2dp_idx_and_qos &rArr;  app_multi_handle_sniffing_link_disconnect_event (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_stop_timer
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_start_timer
<LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_pause_inactive_a2dp_link_stream
<LI><a href="#[5aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_if_fm_ml_handle
<LI><a href="#[5a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_stream_avrcp_set
<LI><a href="#[59b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_set_active_idx
<LI><a href="#[5ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_a2dp_stop
<LI><a href="#[57b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_br_send_acl_disconn_req
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_multilink.o(.text)
</UL>
<P><STRONG><a name="[5c1]"></a>app_bt_policy_src_conn_ind_add</STRONG> (Thumb, 128 bytes, Stack size 32 bytes, app_bt_policy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = app_bt_policy_src_conn_ind_add &rArr; app_start_timer &rArr; remove_timeout_msg_from_list
</UL>
<BR>[Calls]<UL><LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp (via Veneer)
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_stop_timer
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_start_timer
</UL>
<BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_cback
<LI><a href="#[5f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_bt_event_pre_handle
</UL>

<P><STRONG><a name="[5c4]"></a>app_bt_policy_b2s_connected_del_node</STRONG> (Thumb, 104 bytes, Stack size 16 bytes, app_bt_policy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 464<LI>Call Chain = app_bt_policy_b2s_connected_del_node &rArr; app_link_free_br_link &rArr; audio_track_release &rArr; audio_session_state_set &rArr;  audio_mgr_dispatch (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_find_br_link
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_stop_timer
<LI><a href="#[3de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_point_link_tone_set
<LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_point_link_num_changed
<LI><a href="#[541]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_point_br_link_num_get
<LI><a href="#[53c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_free_br_link
</UL>
<BR>[Called By]<UL><LI><a href="#[5f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_bt_event_pre_handle
</UL>

<P><STRONG><a name="[5c9]"></a>app_bt_policy_event_ind</STRONG> (Thumb, 78 bytes, Stack size 32 bytes, app_bt_policy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = app_bt_policy_event_ind
</UL>
<BR>[Calls]<UL><LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[5f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_bt_event_pre_handle
<LI><a href="#[5d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_enter_state
<LI><a href="#[5ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_stable_sched
</UL>

<P><STRONG><a name="[5ca]"></a>app_bt_policy_enable_b2s_disconnect_enter_pairing</STRONG> (Thumb, 94 bytes, Stack size 24 bytes, app_bt_policy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = app_bt_policy_enable_b2s_disconnect_enter_pairing &rArr; app_device_is_in_the_box
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_is_in_the_box
<LI><a href="#[5cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_b2s_connected_is_empty
<LI><a href="#[5cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_power_on_link_back_flag_get
<LI><a href="#[5cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;anc_tool_check_resp_meas_mode
</UL>
<BR>[Called By]<UL><LI><a href="#[5ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_stable_sched
</UL>

<P><STRONG><a name="[5ce]"></a>app_bt_policy_stable_sched</STRONG> (Thumb, 602 bytes, Stack size 24 bytes, app_bt_policy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1652<LI>Call Chain = app_bt_policy_stable_sched &rArr; app_mmi_handle_action &rArr; app_multi_active_hfp_transfer &rArr; app_multi_handle_sniffing_link_disconnect_event &rArr; app_multi_judge_active_a2dp_idx_and_qos &rArr;  app_multi_handle_sniffing_link_disconnect_event (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_handle_action
<LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_get_b2s_link_num
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_get_call_status
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_stop_timer
<LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_a2dp_get_active_idx
<LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_get_lea_link_num
<LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_get_le_link_num
<LI><a href="#[5cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_b2s_connected_is_empty
<LI><a href="#[5d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_enter_state
<LI><a href="#[5ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_enable_b2s_disconnect_enter_pairing
<LI><a href="#[5c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_event_ind
<LI><a href="#[5a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_qos_param_update
<LI><a href="#[544]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_point_lea_link_is_full
<LI><a href="#[543]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_point_is_full
<LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_power_on_link_back_flag_set
<LI><a href="#[5c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_state
<LI><a href="#[5d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_adv_linkbacking
<LI><a href="#[5cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_power_on_link_back_flag_get
<LI><a href="#[5d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_ever_link_information
<LI><a href="#[5cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_point_is_empty
<LI><a href="#[5d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_point_br_link_is_full
</UL>
<BR>[Called By]<UL><LI><a href="#[605]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_dedicated_enter_pairing_mode_event_handle
<LI><a href="#[602]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_event_handle
<LI><a href="#[5e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_linkback_sched
<LI><a href="#[5dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_prepare_for_dedicated_enter_pairing_mode
<LI><a href="#[5d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_linkback_run
<LI><a href="#[615]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_enter_sched
<LI><a href="#[608]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_state_machine
</UL>

<P><STRONG><a name="[5d4]"></a>app_bt_policy_linkback_run</STRONG> (Thumb, 396 bytes, Stack size 80 bytes, app_bt_policy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 360 + In Cycle
<LI>Call Chain = app_bt_policy_linkback_run &rArr;  app_bt_policy_stable_sched (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_find_br_link
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_stop_timer
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_start_timer
<LI><a href="#[481]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_src_conn_ind_check
<LI><a href="#[480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_adjust_sco_window
<LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_update_cpu_freq
<LI><a href="#[5d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_b2s_connected_find_node
<LI><a href="#[5ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_stable_sched
<LI><a href="#[5bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_index_get
<LI><a href="#[597]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkback_check_bond_flag
<LI><a href="#[58b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkback_active_node_step_fail_adjust_remain_profs
<LI><a href="#[58a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkback_active_node_step_suc_adjust_remain_profs
<LI><a href="#[588]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkback_active_node_load
<LI><a href="#[582]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkback_todo_queue_take_first_node
<LI><a href="#[56b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkback_profile_connect_start
<LI><a href="#[568]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkback_profile_search_start
<LI><a href="#[5d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkback_profile_is_need_search
<LI><a href="#[5d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sass_policy_link_back_end
<LI><a href="#[5d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_point_br_link_is_full
</UL>
<BR>[Called By]<UL><LI><a href="#[60a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_state_afe_linkback_event_handle
<LI><a href="#[5d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_enter_state
</UL>

<P><STRONG><a name="[5d1]"></a>app_bt_policy_enter_state</STRONG> (Thumb, 768 bytes, Stack size 72 bytes, app_bt_policy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 432<LI>Call Chain = app_bt_policy_enter_state &rArr; app_bt_policy_linkback_run &rArr;  app_bt_policy_stable_sched (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[383]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_mgr_dev_ctrl
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_get_call_status
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_stop_timer
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_start_timer
<LI><a href="#[49b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sniff_mode_b2s_enable_all
<LI><a href="#[499]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sniff_mode_b2s_disable_all
<LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_a2dp_get_active_idx
<LI><a href="#[5d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_linkback_run
<LI><a href="#[5c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_event_ind
<LI><a href="#[5a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_qos_param_update
<LI><a href="#[541]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_point_br_link_num_get
<LI><a href="#[5d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_swift_pair_stop_adv_change_timer
<LI><a href="#[5da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_swift_pair_start_adv_change_timer
<LI><a href="#[5d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_swift_pair_adv_stop
<LI><a href="#[5db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_swift_pair_adv_start
<LI><a href="#[5dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_adv_update
<LI><a href="#[5d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_point_br_link_is_full
</UL>
<BR>[Called By]<UL><LI><a href="#[602]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_event_handle
<LI><a href="#[601]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_dedicated_connect_event_handle
<LI><a href="#[5ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_shutdown_step_handle
<LI><a href="#[5e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_startup_event_handle
<LI><a href="#[5e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_linkback_sched
<LI><a href="#[5ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_stable_sched
<LI><a href="#[608]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_state_machine
<LI><a href="#[5eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_enter_dut_test_mode_event_handle
</UL>

<P><STRONG><a name="[5dd]"></a>app_bt_policy_prepare_for_dedicated_enter_pairing_mode</STRONG> (Thumb, 672 bytes, Stack size 40 bytes, app_bt_policy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1692 + In Cycle
<LI>Call Chain = app_bt_policy_prepare_for_dedicated_enter_pairing_mode &rArr;  app_bt_policy_disconnect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_find_br_link
<LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_get_btmode
<LI><a href="#[46d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_find_le_link_by_addr
<LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_check_b2s_link_by_id
<LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_a2dp_get_active_idx
<LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_find_le_link_by_conn_handle
<LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_ble_ota_get_upgrate_status
<LI><a href="#[5e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_gap_last_src_conn_handle
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_gap_disconnect
<LI><a href="#[5de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_b2s_connected_is_first_src
<LI><a href="#[5ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_stable_sched
<LI><a href="#[543]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_point_is_full
<LI><a href="#[4ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_disconnect
<LI><a href="#[5df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_mcp_get_active_conn_handle
</UL>
<BR>[Called By]<UL><LI><a href="#[605]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_dedicated_enter_pairing_mode_event_handle
<LI><a href="#[5e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_linkback_sched
</UL>

<P><STRONG><a name="[5e1]"></a>app_bt_policy_judge_dedicated_enter_pairing_mode</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, app_bt_policy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = app_bt_policy_judge_dedicated_enter_pairing_mode
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[544]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_point_lea_link_is_full
<LI><a href="#[543]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_point_is_full
<LI><a href="#[5d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_point_br_link_is_full
</UL>
<BR>[Called By]<UL><LI><a href="#[605]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_dedicated_enter_pairing_mode_event_handle
<LI><a href="#[5e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_linkback_sched
</UL>

<P><STRONG><a name="[5e2]"></a>app_bt_policy_linkback_sched</STRONG> (Thumb, 136 bytes, Stack size 24 bytes, app_bt_policy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1716<LI>Call Chain = app_bt_policy_linkback_sched &rArr; app_bt_policy_prepare_for_dedicated_enter_pairing_mode &rArr;  app_bt_policy_disconnect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_stop_timer
<LI><a href="#[5e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_judge_dedicated_enter_pairing_mode
<LI><a href="#[5dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_prepare_for_dedicated_enter_pairing_mode
<LI><a href="#[5d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_enter_state
<LI><a href="#[5ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_stable_sched
<LI><a href="#[598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkback_active_node_use_left_time_insert_to_queue_again
<LI><a href="#[592]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkback_load_bond_list
<LI><a href="#[58e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkback_todo_queue_node_num
</UL>
<BR>[Called By]<UL><LI><a href="#[5ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_engage_sched
</UL>

<P><STRONG><a name="[5e3]"></a>app_bt_policy_roleswitch_b2s_check</STRONG> (Thumb, 172 bytes, Stack size 24 bytes, app_bt_policy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = app_bt_policy_roleswitch_b2s_check &rArr; bt_link_role_switch &rArr; bt_sniff_mode_exit &rArr; sys_timer_restart &rArr; sys_hp_timer_list_insert &rArr; hw_timer_restart &rArr; hw_timer_safe_stop &rArr; hw_timer_set_div
</UL>
<BR>[Calls]<UL><LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_get_b2s_link_num
<LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_get_active_idx
<LI><a href="#[458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_sco_is_connected
<LI><a href="#[5c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_find_inacitve
<LI><a href="#[5e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_link_role_switch
</UL>
<BR>[Called By]<UL><LI><a href="#[5e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_roleswitch_handle
</UL>

<P><STRONG><a name="[5e5]"></a>app_bt_policy_roleswitch_handle</STRONG> (Thumb, 224 bytes, Stack size 40 bytes, app_bt_policy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 2060<LI>Call Chain = app_bt_policy_roleswitch_handle &rArr; app_multi_roleswap_disconnect_inactive_link &rArr; app_bt_policy_disconnect &rArr; app_bt_policy_state_machine &rArr; app_bt_policy_event_handle &rArr;  app_bt_policy_roleswitch_handle (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_find_br_link
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_start_timer
<LI><a href="#[5e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_roleswitch_b2s_check
<LI><a href="#[5af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_roleswap_disconnect_inactive_link
<LI><a href="#[5e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sniff_mode_b2s_enable
<LI><a href="#[5e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_sniffing_process
</UL>
<BR>[Called By]<UL><LI><a href="#[475]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_roleswitch_when_sco
<LI><a href="#[602]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_event_handle
</UL>

<P><STRONG><a name="[5e8]"></a>app_bt_policy_startup_event_handle</STRONG> (Thumb, 274 bytes, Stack size 48 bytes, app_bt_policy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1772<LI>Call Chain = app_bt_policy_startup_event_handle &rArr; app_bt_policy_engage_sched &rArr; app_bt_policy_linkback_sched &rArr; app_bt_policy_prepare_for_dedicated_enter_pairing_mode &rArr;  app_bt_policy_disconnect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_set_bd_addr
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[5ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_engage_sched
<LI><a href="#[5d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_enter_state
<LI><a href="#[587]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkback_active_node_init
<LI><a href="#[57c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkback_todo_queue_init
<LI><a href="#[5e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_br_vendor_data_rate_set
</UL>
<BR>[Called By]<UL><LI><a href="#[602]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_event_handle
</UL>

<P><STRONG><a name="[5ec]"></a>app_bt_policy_shutdown_step_handle</STRONG> (Thumb, 282 bytes, Stack size 40 bytes, app_bt_policy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 472<LI>Call Chain = app_bt_policy_shutdown_step_handle &rArr; app_bt_policy_enter_state &rArr; app_bt_policy_linkback_run &rArr;  app_bt_policy_stable_sched (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_start_timer
<LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_check_b2s_link_by_id
<LI><a href="#[5d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_enter_state
<LI><a href="#[57b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_br_send_acl_disconn_req
<LI><a href="#[572]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkback_profile_disconnect_start
<LI><a href="#[541]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_point_br_link_num_get
<LI><a href="#[5ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_br_send_sco_disconn_req
</UL>
<BR>[Called By]<UL><LI><a href="#[602]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_event_handle
<LI><a href="#[608]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_state_machine
</UL>

<P><STRONG><a name="[5ee]"></a>app_bt_policy_stop_all_active_action</STRONG> (Thumb, 124 bytes, Stack size 16 bytes, app_bt_policy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = app_bt_policy_stop_all_active_action &rArr; linkback_active_node_use_left_time_insert_to_queue_again &rArr; linkback_todo_queue_insert_force_node &rArr; linkback_todo_queue_all_node
</UL>
<BR>[Calls]<UL><LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_stop_timer
<LI><a href="#[5d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_b2s_connected_find_node
<LI><a href="#[57b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_br_send_acl_disconn_req
<LI><a href="#[598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkback_active_node_use_left_time_insert_to_queue_again
<LI><a href="#[5ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_br_stop_sdp_discov
</UL>
<BR>[Called By]<UL><LI><a href="#[602]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_event_handle
</UL>

<P><STRONG><a name="[5f1]"></a>app_bt_policy_bt_event_pre_handle</STRONG> (Thumb, 1206 bytes, Stack size 96 bytes, app_bt_policy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 560<LI>Call Chain = app_bt_policy_bt_event_pre_handle &rArr; app_bt_policy_b2s_connected_del_node &rArr; app_link_free_br_link &rArr; audio_track_release &rArr; audio_session_state_set &rArr;  audio_mgr_dispatch (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_find_br_link
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_stop_timer
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_start_timer
<LI><a href="#[463]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_relay_async_single_with_raw_msg
<LI><a href="#[450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bond_get_pair_idx_mapping
<LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_point_link_num_changed
<LI><a href="#[5fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_connected_node_is_authed
<LI><a href="#[5fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_b2s_connected_vp_played
<LI><a href="#[5de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_b2s_connected_is_first_src
<LI><a href="#[5c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_event_ind
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_b2s_connected_del_node
<LI><a href="#[5c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_src_conn_ind_add
<LI><a href="#[5b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_stop_acl_disconn_timer
<LI><a href="#[5ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_disconnect_inactive_link
<LI><a href="#[57b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_br_send_acl_disconn_req
<LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_avrcp_disconnect_req
<LI><a href="#[595]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_get_profs_by_bond_flag
<LI><a href="#[586]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkback_todo_queue_delete_group_member
<LI><a href="#[57f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkback_todo_queue_insert_normal_node
<LI><a href="#[594]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_flag_get
<LI><a href="#[541]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_point_br_link_num_get
<LI><a href="#[547]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_get_encryption_device_num
<LI><a href="#[5f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_alloc_br_link
<LI><a href="#[518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_default_connect
<LI><a href="#[5f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_link_pin_code_cfm
<LI><a href="#[5f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_link_key_cfm
<LI><a href="#[5f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_key_get
<LI><a href="#[5fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_flag_set
<LI><a href="#[5ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_flag_remove
<LI><a href="#[600]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_flag_add
<LI><a href="#[5fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_delete
<LI><a href="#[5e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sniff_mode_b2s_enable
<LI><a href="#[5fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sniff_mode_b2s_check_left_flag_when_disconnect
<LI><a href="#[5f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_mgr_disc_inactive_le_link
<LI><a href="#[5f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_sync_b2s_connected
<LI><a href="#[5f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bond_pop_sec_diff_link_record
<LI><a href="#[5f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bond_key_set
<LI><a href="#[5f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_update_pair_idx_mapping
</UL>
<BR>[Called By]<UL><LI><a href="#[608]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_state_machine
</UL>

<P><STRONG><a name="[601]"></a>app_bt_policy_dedicated_connect_event_handle</STRONG> (Thumb, 278 bytes, Stack size 32 bytes, app_bt_policy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 464<LI>Call Chain = app_bt_policy_dedicated_connect_event_handle &rArr; app_bt_policy_enter_state &rArr; app_bt_policy_linkback_run &rArr;  app_bt_policy_stable_sched (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_find_br_link
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_start_timer
<LI><a href="#[5d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_enter_state
<LI><a href="#[569]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_br_start_did_discov
<LI><a href="#[590]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkback_active_node_judge_cur_conn_addr
<LI><a href="#[58d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkback_active_node_remain_profs_add
<LI><a href="#[581]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkback_todo_queue_insert_force_node
<LI><a href="#[56b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkback_profile_connect_start
</UL>
<BR>[Called By]<UL><LI><a href="#[602]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_event_handle
</UL>

<P><STRONG><a name="[602]"></a>app_bt_policy_event_handle</STRONG> (Thumb, 418 bytes, Stack size 32 bytes, app_bt_policy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1804 + In Cycle
<LI>Call Chain = app_bt_policy_event_handle &rArr;  app_bt_policy_roleswitch_handle (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_find_br_link
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_start_timer
<LI><a href="#[605]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_dedicated_enter_pairing_mode_event_handle
<LI><a href="#[606]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_dedicated_disconnect_event_handle
<LI><a href="#[607]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_disconnect_all_event_handle
<LI><a href="#[5ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_engage_sched
<LI><a href="#[604]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_conn_sniff_event_handle
<LI><a href="#[601]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_dedicated_connect_event_handle
<LI><a href="#[5ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_stop_all_active_action
<LI><a href="#[5ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_shutdown_step_handle
<LI><a href="#[5e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_startup_event_handle
<LI><a href="#[5e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_roleswitch_handle
<LI><a href="#[5d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_enter_state
<LI><a href="#[5ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_stable_sched
<LI><a href="#[587]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkback_active_node_init
<LI><a href="#[57c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkback_todo_queue_init
<LI><a href="#[541]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_point_br_link_num_get
<LI><a href="#[603]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_if_fm_ap_handle
<LI><a href="#[5eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_enter_dut_test_mode_event_handle
</UL>
<BR>[Called By]<UL><LI><a href="#[608]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_state_machine
</UL>

<P><STRONG><a name="[2b]"></a>app_bt_policy_timer_cback</STRONG> (Thumb, 354 bytes, Stack size 80 bytes, app_bt_policy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1964 + In Cycle
<LI>Call Chain = app_bt_policy_timer_cback &rArr;  app_bt_policy_state_machine (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_stop_timer
<LI><a href="#[480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_adjust_sco_window
<LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_update_cpu_freq
<LI><a href="#[5b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_set_connected_tone_need
<LI><a href="#[5b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_reconnect_inactive_link
<LI><a href="#[60b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_device_mode_set
<LI><a href="#[608]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_state_machine
</UL>
<BR>[Called By]<UL><LI><a href="#[60a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_state_afe_linkback_event_handle
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_bt_policy.o(.text)
</UL>
<P><STRONG><a name="[60a]"></a>app_bt_policy_state_afe_linkback_event_handle</STRONG> (Thumb, 846 bytes, Stack size 48 bytes, app_bt_policy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1772<LI>Call Chain = app_bt_policy_state_afe_linkback_event_handle &rArr; app_bt_policy_engage_sched &rArr; app_bt_policy_linkback_sched &rArr; app_bt_policy_prepare_for_dedicated_enter_pairing_mode &rArr;  app_bt_policy_disconnect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_stop_timer
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_start_timer
<LI><a href="#[5ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_engage_sched
<LI><a href="#[5d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_b2s_connected_find_node
<LI><a href="#[5cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_b2s_connected_is_empty
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_timer_cback
<LI><a href="#[5d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_linkback_run
<LI><a href="#[5b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_set_connected_tone_need
<LI><a href="#[57b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_br_send_acl_disconn_req
<LI><a href="#[598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkback_active_node_use_left_time_insert_to_queue_again
<LI><a href="#[591]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkback_active_node_judge_cur_conn_prof
<LI><a href="#[590]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkback_active_node_judge_cur_conn_addr
<LI><a href="#[58c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkback_active_node_src_conn_fail_adjust_remain_profs
<LI><a href="#[58b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkback_active_node_step_fail_adjust_remain_profs
<LI><a href="#[58a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkback_active_node_step_suc_adjust_remain_profs
<LI><a href="#[58e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkback_todo_queue_node_num
<LI><a href="#[585]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkback_todo_queue_delete_all_node
<LI><a href="#[56b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkback_profile_connect_start
<LI><a href="#[4d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_find_b2s_link
<LI><a href="#[5ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_br_stop_sdp_discov
<LI><a href="#[60c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_spp_registered_uuid_check
<LI><a href="#[5d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_point_br_link_is_full
</UL>
<BR>[Called By]<UL><LI><a href="#[608]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_state_machine
</UL>

<P><STRONG><a name="[2a]"></a>app_bt_policy_cback</STRONG> (Thumb, 1538 bytes, Stack size 120 bytes, app_bt_policy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 2004<LI>Call Chain = app_bt_policy_cback &rArr; app_bt_policy_exit_pairing_mode &rArr; app_bt_policy_state_machine &rArr; app_bt_policy_event_handle &rArr;  app_bt_policy_roleswitch_handle (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_find_br_link
<LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_get_b2s_link_num
<LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_get_connected_src_num
<LI><a href="#[49b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sniff_mode_b2s_enable_all
<LI><a href="#[499]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sniff_mode_b2s_disable_all
<LI><a href="#[470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_handle_sniffing_link_disconnect_event
<LI><a href="#[46f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_check_in_sniffing
<LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_get_sco_conn_num
<LI><a href="#[450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bond_get_pair_idx_mapping
<LI><a href="#[480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_adjust_sco_window
<LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_remote_device_name_crc_set
<LI><a href="#[426]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_le_common_adv_update
<LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_sniffing_param_update
<LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_update_cpu_freq
<LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_point_link_permission_check
<LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_point_link_num_changed
<LI><a href="#[5c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_src_conn_ind_add
<LI><a href="#[5bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_index_get
<LI><a href="#[5bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_sco_handle
<LI><a href="#[5a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_qos_param_update
<LI><a href="#[523]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_is_already_connect_one_set
<LI><a href="#[4d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_check_b2s_link
<LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_get_radio_mode
<LI><a href="#[614]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_link_tpoll_range_set
<LI><a href="#[60d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_link_rssi_golden_range_set
<LI><a href="#[5f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_link_pin_code_cfm
<LI><a href="#[5f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_key_get
<LI><a href="#[5fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_delete
<LI><a href="#[610]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_acl_pkt_type_set
<LI><a href="#[611]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_acl_conn_reject
<LI><a href="#[612]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_acl_conn_accept
<LI><a href="#[60f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sniff_mode_b2s_disable
<LI><a href="#[60e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_is_already_connect_one_get
<LI><a href="#[5e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_sniffing_process
<LI><a href="#[613]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_exit_pairing_mode
<LI><a href="#[608]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_state_machine
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_bt_policy.o(.text)
</UL>
<P><STRONG><a name="[2c]"></a>app_bt_policy_device_event_cback</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, app_bt_policy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = app_bt_policy_device_event_cback &rArr; app_bt_policy_update_pair_idx_mapping &rArr; app_bond_b2s_addr_get
</UL>
<BR>[Calls]<UL><LI><a href="#[5f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_update_pair_idx_mapping
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_bt_policy.o(.text)
</UL>
<P><STRONG><a name="[609]"></a>app_bt_policy_connected</STRONG> (Thumb, 100 bytes, Stack size 32 bytes, app_bt_policy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = app_bt_policy_connected
</UL>
<BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_check_b2s_link_by_id
<LI><a href="#[541]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_point_br_link_num_get
</UL>
<BR>[Called By]<UL><LI><a href="#[608]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_state_machine
</UL>

<P><STRONG><a name="[5cc]"></a>app_bt_policy_b2s_connected_is_empty</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, app_bt_policy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = app_bt_policy_b2s_connected_is_empty
</UL>
<BR>[Calls]<UL><LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_point_num_get
</UL>
<BR>[Called By]<UL><LI><a href="#[60a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_state_afe_linkback_event_handle
<LI><a href="#[5ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_stable_sched
<LI><a href="#[5ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_enable_b2s_disconnect_enter_pairing
<LI><a href="#[608]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_state_machine
</UL>

<P><STRONG><a name="[5d6]"></a>app_bt_policy_b2s_connected_find_node</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, app_bt_policy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = app_bt_policy_b2s_connected_find_node &rArr; app_link_find_br_link
</UL>
<BR>[Calls]<UL><LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_find_br_link
</UL>
<BR>[Called By]<UL><LI><a href="#[606]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_dedicated_disconnect_event_handle
<LI><a href="#[60a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_state_afe_linkback_event_handle
<LI><a href="#[5ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_stop_all_active_action
<LI><a href="#[5d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_linkback_run
</UL>

<P><STRONG><a name="[5de]"></a>app_bt_policy_b2s_connected_is_first_src</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, app_bt_policy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = app_bt_policy_b2s_connected_is_first_src &rArr; app_link_find_br_link
</UL>
<BR>[Calls]<UL><LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_find_br_link
</UL>
<BR>[Called By]<UL><LI><a href="#[5f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_bt_event_pre_handle
<LI><a href="#[5dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_prepare_for_dedicated_enter_pairing_mode
</UL>

<P><STRONG><a name="[5fd]"></a>app_bt_policy_b2s_connected_vp_played</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, app_bt_policy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = app_bt_policy_b2s_connected_vp_played &rArr; app_link_find_br_link
</UL>
<BR>[Calls]<UL><LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_find_br_link
</UL>
<BR>[Called By]<UL><LI><a href="#[5f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_bt_event_pre_handle
</UL>

<P><STRONG><a name="[5fc]"></a>app_bt_policy_connected_node_is_authed</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, app_bt_policy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = app_bt_policy_connected_node_is_authed &rArr; app_link_find_br_link
</UL>
<BR>[Calls]<UL><LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_find_br_link
</UL>
<BR>[Called By]<UL><LI><a href="#[5f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_bt_event_pre_handle
</UL>

<P><STRONG><a name="[604]"></a>app_bt_policy_conn_sniff_event_handle</STRONG> (Thumb, 166 bytes, Stack size 24 bytes, app_bt_policy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = app_bt_policy_conn_sniff_event_handle &rArr; app_harman_connect_idle_to_power_off &rArr; app_harman_power_off_option_timer_start &rArr; app_start_timer &rArr; remove_timeout_msg_from_list
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_find_br_link
<LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_check_b2s_link_by_id
<LI><a href="#[45a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_connect_idle_to_power_off
<LI><a href="#[616]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_power_off_option_timer_get
</UL>
<BR>[Called By]<UL><LI><a href="#[602]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_event_handle
</UL>

<P><STRONG><a name="[5ea]"></a>app_bt_policy_engage_sched</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, app_bt_policy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1724<LI>Call Chain = app_bt_policy_engage_sched &rArr; app_bt_policy_linkback_sched &rArr; app_bt_policy_prepare_for_dedicated_enter_pairing_mode &rArr;  app_bt_policy_disconnect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[5e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_linkback_sched
</UL>
<BR>[Called By]<UL><LI><a href="#[60a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_state_afe_linkback_event_handle
<LI><a href="#[602]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_event_handle
<LI><a href="#[5e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_startup_event_handle
</UL>

<P><STRONG><a name="[607]"></a>app_bt_policy_disconnect_all_event_handle</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, app_bt_policy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = app_bt_policy_disconnect_all_event_handle
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_check_b2s_link_by_id
<LI><a href="#[57b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_br_send_acl_disconn_req
<LI><a href="#[5ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_br_send_sco_disconn_req
</UL>
<BR>[Called By]<UL><LI><a href="#[602]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_event_handle
</UL>

<P><STRONG><a name="[606]"></a>app_bt_policy_dedicated_disconnect_event_handle</STRONG> (Thumb, 122 bytes, Stack size 24 bytes, app_bt_policy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = app_bt_policy_dedicated_disconnect_event_handle &rArr; linkback_profile_disconnect_start &rArr; bt_spp_disconnect_all_req &rArr; spp_disconnect_all &rArr; rfc_disconn_req &rArr; rfc_check_disconn_ctrl_chann &rArr; sys_timer_start &rArr; sys_hp_timer_list_insert &rArr; hw_timer_restart &rArr; hw_timer_safe_stop &rArr; hw_timer_set_div
</UL>
<BR>[Calls]<UL><LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_find_br_link
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_stop_timer
<LI><a href="#[5d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_b2s_connected_find_node
<LI><a href="#[590]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkback_active_node_judge_cur_conn_addr
<LI><a href="#[58f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkback_active_node_remain_profs_sub
<LI><a href="#[584]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkback_todo_queue_remove_plan_profs
<LI><a href="#[572]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkback_profile_disconnect_start
</UL>
<BR>[Called By]<UL><LI><a href="#[602]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_event_handle
</UL>

<P><STRONG><a name="[605]"></a>app_bt_policy_dedicated_enter_pairing_mode_event_handle</STRONG> (Thumb, 124 bytes, Stack size 8 bytes, app_bt_policy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1700<LI>Call Chain = app_bt_policy_dedicated_enter_pairing_mode_event_handle &rArr; app_bt_policy_prepare_for_dedicated_enter_pairing_mode &rArr;  app_bt_policy_disconnect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_stop_timer
<LI><a href="#[5e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_judge_dedicated_enter_pairing_mode
<LI><a href="#[5dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_prepare_for_dedicated_enter_pairing_mode
<LI><a href="#[5ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_stable_sched
<LI><a href="#[57b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_br_send_acl_disconn_req
<LI><a href="#[587]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkback_active_node_init
<LI><a href="#[57c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkback_todo_queue_init
<LI><a href="#[5ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_br_stop_sdp_discov
</UL>
<BR>[Called By]<UL><LI><a href="#[602]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_event_handle
</UL>

<P><STRONG><a name="[617]"></a>app_audio_judge_resume_a2dp_param</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, app_audio_policy.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_sniffing_param_update
</UL>
<BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_bt_cback
</UL>

<P><STRONG><a name="[61d]"></a>app_audio_handle_vol_change</STRONG> (Thumb, 366 bytes, Stack size 48 bytes, app_audio_policy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 624<LI>Call Chain = app_audio_handle_vol_change &rArr; app_audio_tone_type_play &rArr; voice_prompt_play &rArr; notification_push &rArr; notification_play &rArr; notification_path_start &rArr; notification_start_vp &rArr; audio_path_start &rArr; audio_path_schedule &rArr; audio_path_voice_start &rArr; dsp_mgr_session_enable &rArr; dsp_state_machine &rArr; dsp_power_on &rArr; dsp_hal_reset &rArr; shm_enable &rArr; h2d_cmd_send &rArr; shm_cmd_send &rArr; wr_queue_send
</UL>
<BR>[Calls]<UL><LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_tone_type_play
<LI><a href="#[61f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_key_is_sync_play_vol_changed_tone_disallow
<LI><a href="#[61e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_key_is_set_volume
<LI><a href="#[4f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_key_set_volume_status
<LI><a href="#[620]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_key_set_sync_play_vol_changed_tone_disallow
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_start_timer
<LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_led_change_mode
<LI><a href="#[621]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_policy_vol_max_tone_play
</UL>
<BR>[Called By]<UL><LI><a href="#[4fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;harman_push_max_tone_when_not_playing
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_policy_cback
</UL>

<P><STRONG><a name="[2d]"></a>app_audio_policy_cback</STRONG> (Thumb, 1290 bytes, Stack size 88 bytes, app_audio_policy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 912<LI>Call Chain = app_audio_policy_cback &rArr; app_avrcp_set_vol_is_changed &rArr; app_avrcp_abs_vol_set &rArr; app_audio_vol_set &rArr; app_iphone_abs_vol_wrap_audio_track_volume_out_set &rArr; app_harman_lr_balance_set &rArr; audio_volume_balance_set &rArr; audio_mgr_dispatch &rArr; audio_mgr_buffer_event_handle &rArr; audio_buffer_playing_state &rArr; audio_track_restart &rArr; audio_session_state_set &rArr;  audio_mgr_dispatch (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_cpu_clk_improve
<LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_find_br_link
<LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_get_btmode
<LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_tone_type_play
<LI><a href="#[61e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_key_is_set_volume
<LI><a href="#[48b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_iphone_abs_vol_lv_handle
<LI><a href="#[48a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_iphone_abs_vol_check_a2dp_total_gain_num_16
<LI><a href="#[490]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_avrcp_set_vol_is_changed
<LI><a href="#[45e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_volume_in_unmute
<LI><a href="#[476]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_stream_type_get
<LI><a href="#[453]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_start
<LI><a href="#[450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bond_get_pair_idx_mapping
<LI><a href="#[44d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_vol_set
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_track_spk_unmute
<LI><a href="#[45f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_tone_type_cancel
<LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_a2dp_get_active_idx
<LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_get_active_idx
<LI><a href="#[525]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_mgr_power_off
<LI><a href="#[52a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_enable_play_mic_unmute_tone
<LI><a href="#[529]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_enable_play_mic_mute_tone
<LI><a href="#[62b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_sco_data_send
<LI><a href="#[62a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_read
<LI><a href="#[629]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sidetone_detach
<LI><a href="#[627]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sidetone_attach
<LI><a href="#[628]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_nrec_detach
<LI><a href="#[626]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_nrec_attach
<LI><a href="#[624]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_set_stream_track_started
<LI><a href="#[625]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_set_eq_boost_gain
<LI><a href="#[61d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_handle_vol_change
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_audio_policy.o(.text)
</UL>
<P><STRONG><a name="[62c]"></a>app_audio_save_a2dp_config</STRONG> (Thumb, 316 bytes, Stack size 32 bytes, app_audio_policy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = app_audio_save_a2dp_config &rArr; app_link_find_br_link
</UL>
<BR>[Calls]<UL><LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_find_br_link
</UL>
<BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_bt_cback
<LI><a href="#[637]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_a2dp_stream_start_handle
</UL>

<P><STRONG><a name="[62d]"></a>app_audio_a2dp_track_release</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, app_audio_policy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 456<LI>Call Chain = app_audio_a2dp_track_release &rArr; audio_track_release &rArr; audio_session_state_set &rArr;  audio_mgr_dispatch (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_find_br_link
<LI><a href="#[53e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eq_release
<LI><a href="#[53d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_release
</UL>
<BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_bt_cback
</UL>

<P><STRONG><a name="[62e]"></a>app_audio_sco_conn_cmpl_handle</STRONG> (Thumb, 570 bytes, Stack size 96 bytes, app_audio_policy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1756<LI>Call Chain = app_audio_sco_conn_cmpl_handle &rArr; app_audio_set_voice_gain_when_sco_conn_cmpl &rArr; app_mmi_handle_action &rArr; app_multi_active_hfp_transfer &rArr; app_multi_handle_sniffing_link_disconnect_event &rArr; app_multi_judge_active_a2dp_idx_and_qos &rArr;  app_multi_handle_sniffing_link_disconnect_event (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_find_br_link
<LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_get_b2s_link_num
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_get_call_status
<LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_auto_power_off_disable
<LI><a href="#[453]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_start
<LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_get_sco_conn_num
<LI><a href="#[450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bond_get_pair_idx_mapping
<LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_get_active_idx
<LI><a href="#[451]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_set_active_idx
<LI><a href="#[53e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eq_release
<LI><a href="#[53d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_release
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eq_enable
<LI><a href="#[630]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_latency_set
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_effect_attach
<LI><a href="#[62f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_create
<LI><a href="#[626]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_nrec_attach
<LI><a href="#[633]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_eq_idx_check_accord_mode
<LI><a href="#[634]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_eq_create
<LI><a href="#[632]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_eq_change_audio_eq_mode
<LI><a href="#[631]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_set_voice_gain_when_sco_conn_cmpl
<LI><a href="#[603]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_if_fm_ap_handle
</UL>
<BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_bt_cback
</UL>

<P><STRONG><a name="[637]"></a>app_audio_a2dp_stream_start_handle</STRONG> (Thumb, 366 bytes, Stack size 96 bytes, app_audio_policy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 816<LI>Call Chain = app_audio_a2dp_stream_start_handle &rArr; app_audio_vol_set &rArr; app_iphone_abs_vol_wrap_audio_track_volume_out_set &rArr; app_harman_lr_balance_set &rArr; audio_volume_balance_set &rArr; audio_mgr_dispatch &rArr; audio_mgr_buffer_event_handle &rArr; audio_buffer_playing_state &rArr; audio_track_restart &rArr; audio_session_state_set &rArr;  audio_mgr_dispatch (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[3ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_report_eq_idx
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_find_br_link
<LI><a href="#[453]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_start
<LI><a href="#[450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bond_get_pair_idx_mapping
<LI><a href="#[44d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_vol_set
<LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_a2dp_get_active_idx
<LI><a href="#[53e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eq_release
<LI><a href="#[53d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_release
<LI><a href="#[4f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_volume_out_mute
<LI><a href="#[638]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_a2dp_stream_delay_report_request
<LI><a href="#[630]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_latency_set
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_effect_attach
<LI><a href="#[62f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_create
<LI><a href="#[633]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_eq_idx_check_accord_mode
<LI><a href="#[634]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_eq_create
<LI><a href="#[639]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_eq_audio_eq_enable
<LI><a href="#[622]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_get_last_used_latency
<LI><a href="#[623]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_get_latency_value_by_level
<LI><a href="#[62c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_save_a2dp_config
</UL>
<BR>[Called By]<UL><LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_mtc_if_handle
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_bt_cback
</UL>

<P><STRONG><a name="[2e]"></a>app_audio_bt_cback</STRONG> (Thumb, 878 bytes, Stack size 72 bytes, app_audio_policy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1828<LI>Call Chain = app_audio_bt_cback &rArr; app_audio_sco_conn_cmpl_handle &rArr; app_audio_set_voice_gain_when_sco_conn_cmpl &rArr; app_mmi_handle_action &rArr; app_multi_active_hfp_transfer &rArr; app_multi_handle_sniffing_link_disconnect_event &rArr; app_multi_judge_active_a2dp_idx_and_qos &rArr;  app_multi_handle_sniffing_link_disconnect_event (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_find_br_link
<LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_get_btmode
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_ccp_get_call_status
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_get_call_status
<LI><a href="#[48e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_set_first_connect_sync_default_vol_flag
<LI><a href="#[5a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_avrcp_sync_status
<LI><a href="#[453]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_start
<LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_a2dp_get_active_idx
<LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_get_active_idx
<LI><a href="#[5ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sass_preempt_policy
<LI><a href="#[5a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_qos_param_update
<LI><a href="#[53e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eq_release
<LI><a href="#[53d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_release
<LI><a href="#[4d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_find_b2s_link
<LI><a href="#[4e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_set_avrcp_status
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_link_tx_power_set
<LI><a href="#[63c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_write
<LI><a href="#[63e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_data_in_is_silent
<LI><a href="#[629]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sidetone_detach
<LI><a href="#[628]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_nrec_detach
<LI><a href="#[63f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_silent_check
<LI><a href="#[632]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_eq_change_audio_eq_mode
<LI><a href="#[63a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_speaker_channel_set
<LI><a href="#[63d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_check_sbc_frame_num
<LI><a href="#[637]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_a2dp_stream_start_handle
<LI><a href="#[62e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_sco_conn_cmpl_handle
<LI><a href="#[62d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_a2dp_track_release
<LI><a href="#[62c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_save_a2dp_config
<LI><a href="#[617]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_judge_resume_a2dp_param
<LI><a href="#[5e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_sniffing_process
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_audio_policy.o(.text)
</UL>
<P><STRONG><a name="[2f]"></a>app_audio_policy_timeout_cb</STRONG> (Thumb, 108 bytes, Stack size 16 bytes, app_audio_policy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 592<LI>Call Chain = app_audio_policy_timeout_cb &rArr; app_audio_tone_type_play &rArr; voice_prompt_play &rArr; notification_push &rArr; notification_play &rArr; notification_path_start &rArr; notification_start_vp &rArr; audio_path_start &rArr; audio_path_schedule &rArr; audio_path_voice_start &rArr; dsp_mgr_session_enable &rArr; dsp_state_machine &rArr; dsp_power_on &rArr; dsp_hal_reset &rArr; shm_enable &rArr; h2d_cmd_send &rArr; shm_cmd_send &rArr; wr_queue_send
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_tone_type_play
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_stop_timer
<LI><a href="#[621]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_policy_vol_max_tone_play
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_audio_policy.o(.text)
</UL>
<P><STRONG><a name="[621]"></a>app_audio_policy_vol_max_tone_play</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, app_audio_policy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 576<LI>Call Chain = app_audio_policy_vol_max_tone_play &rArr; app_audio_tone_type_play &rArr; voice_prompt_play &rArr; notification_push &rArr; notification_play &rArr; notification_path_start &rArr; notification_start_vp &rArr; audio_path_start &rArr; audio_path_schedule &rArr; audio_path_voice_start &rArr; dsp_mgr_session_enable &rArr; dsp_state_machine &rArr; dsp_power_on &rArr; dsp_hal_reset &rArr; shm_enable &rArr; h2d_cmd_send &rArr; shm_cmd_send &rArr; wr_queue_send
</UL>
<BR>[Calls]<UL><LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_tone_type_play
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_policy_timeout_cb
<LI><a href="#[61d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_handle_vol_change
</UL>

<P><STRONG><a name="[631]"></a>app_audio_set_voice_gain_when_sco_conn_cmpl</STRONG> (Thumb, 102 bytes, Stack size 32 bytes, app_audio_policy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1660<LI>Call Chain = app_audio_set_voice_gain_when_sco_conn_cmpl &rArr; app_mmi_handle_action &rArr; app_multi_active_hfp_transfer &rArr; app_multi_handle_sniffing_link_disconnect_event &rArr; app_multi_judge_active_a2dp_idx_and_qos &rArr;  app_multi_handle_sniffing_link_disconnect_event (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_handle_action
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_get_call_status
<LI><a href="#[44d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_vol_set
<LI><a href="#[4f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_volume_out_mute
</UL>
<BR>[Called By]<UL><LI><a href="#[62e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_sco_conn_cmpl_handle
</UL>

<P><STRONG><a name="[63d]"></a>app_audio_check_sbc_frame_num</STRONG> (Thumb, 130 bytes, Stack size 12 bytes, app_audio_policy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = app_audio_check_sbc_frame_num
</UL>
<BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_bt_cback
</UL>

<P><STRONG><a name="[30]"></a>app_eq_factory_reset_cback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, app_eq.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> app_eq.o(.text)
</UL>
<P><STRONG><a name="[67f]"></a>app_bt_policy_bt_link_qos_set</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, app_bt_policy_api.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = app_bt_policy_bt_link_qos_set &rArr; bt_link_qos_set &rArr; gap_br_send_setup_qos_req
</UL>
<BR>[Calls]<UL><LI><a href="#[680]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_link_qos_set
</UL>
<BR>[Called By]<UL><LI><a href="#[681]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_set_active_tpoll_only
<LI><a href="#[67e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_set_idle_tpoll
</UL>

<P><STRONG><a name="[32]"></a>app_adp_5v_handler</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, app_adp.o(.ram_text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = app_adp_5v_handler &rArr; Pad_TableConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pad_TableConfig (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_adp.o(.text)
</UL>
<P><STRONG><a name="[68e]"></a>app_adp_wakeup_pol_set</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, app_adp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = app_adp_wakeup_pol_set &rArr; adp_wake_up_enable &rArr; System_SetAdpWakeUpFunction
</UL>
<BR>[Calls]<UL><LI><a href="#[690]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adp_wake_up_enable
<LI><a href="#[68f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adp_get_current_state
</UL>
<BR>[Called By]<UL><LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_adp_detect
<LI><a href="#[693]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_adp_plug_in_out_handle
</UL>

<P><STRONG><a name="[693]"></a>app_adp_plug_in_out_handle</STRONG> (Thumb, 270 bytes, Stack size 40 bytes, app_adp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = app_adp_plug_in_out_handle &rArr; app_adp_wakeup_pol_set &rArr; adp_wake_up_enable &rArr; System_SetAdpWakeUpFunction
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_io_msg_send (via Veneer)
<LI><a href="#[68e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_adp_wakeup_pol_set
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_adp_stage_change_cb
</UL>

<P><STRONG><a name="[31]"></a>app_adp_stage_change_cb</STRONG> (Thumb, 72 bytes, Stack size 24 bytes, app_adp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = app_adp_stage_change_cb &rArr; app_adp_plug_in_out_handle &rArr; app_adp_wakeup_pol_set &rArr; adp_wake_up_enable &rArr; System_SetAdpWakeUpFunction
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pad_TableConfig
<LI><a href="#[693]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_adp_plug_in_out_handle
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_adp.o(.text)
</UL>
<P><STRONG><a name="[33]"></a>app_spp_bt_cback</STRONG> (Thumb, 582 bytes, Stack size 56 bytes, app_spp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 2172<LI>Call Chain = app_spp_bt_cback &rArr; app_cmd_handler &rArr; app_cmd_customized_cmd_handle &rArr; app_sass_policy_switch_active_audio_source &rArr; app_bt_policy_disconnect &rArr; app_bt_policy_state_machine &rArr; app_bt_policy_event_handle &rArr;  app_bt_policy_roleswitch_handle (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_transfer_queue_reset
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_transfer_pop_data_queue
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_find_br_link
<LI><a href="#[697]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_spp_credits_give
<LI><a href="#[699]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_spp_connect_cfm
<LI><a href="#[698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_cmd_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_spp.o(.text)
</UL>
<P><STRONG><a name="[34]"></a>app_cmd_bt_cback</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, app_cmd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = app_cmd_bt_cback &rArr; bt_periodic_inquiry_stop
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[69c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_periodic_inquiry_stop
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_cmd.o(.text)
</UL>
<P><STRONG><a name="[35]"></a>app_cmd_timeout_cb</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, app_cmd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1644<LI>Call Chain = app_cmd_timeout_cb &rArr; app_mmi_handle_action &rArr; app_multi_active_hfp_transfer &rArr; app_multi_handle_sniffing_link_disconnect_event &rArr; app_multi_judge_active_a2dp_idx_and_qos &rArr;  app_multi_handle_sniffing_link_disconnect_event (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[69e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_hci_mode_flag (via Veneer)
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pad_Config (via Veneer)
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_handle_action
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_stop_timer
<LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt_reset
<LI><a href="#[69d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_hall_set_hci_download_mode
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_cmd.o(.text)
</UL>
<P><STRONG><a name="[6a4]"></a>app_cmd_le_name_set</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, app_cmd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = app_cmd_le_name_set &rArr; app_ble_common_adv_update_scan_rsp_data &rArr; ble_ext_adv_mgr_set_scan_response_data &rArr; ble_ext_adv_mgr_start_set_adv_param &rArr; ble_ext_adv_mgr_send_msg &rArr; ble_ext_adv_mgr_find_by_handle
</UL>
<BR>[Calls]<UL><LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_set_gap_param
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_cfg_store
<LI><a href="#[436]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_common_adv_update_scan_rsp_data
</UL>
<BR>[Called By]<UL><LI><a href="#[6a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_cmd_general_cmd_handle
</UL>

<P><STRONG><a name="[6a5]"></a>app_cmd_general_cmd_handle</STRONG> (Thumb, 2176 bytes, Stack size 104 bytes, app_cmd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1732<LI>Call Chain = app_cmd_general_cmd_handle &rArr; app_mmi_handle_action &rArr; app_multi_active_hfp_transfer &rArr; app_multi_handle_sniffing_link_disconnect_event &rArr; app_multi_judge_active_a2dp_idx_and_qos &rArr;  app_multi_handle_sniffing_link_disconnect_event (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen (via Veneer)
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[6ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btaon_fast_write_safe_8b (via Veneer)
<LI><a href="#[6af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btaon_fast_write_safe (via Veneer)
<LI><a href="#[6ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btaon_fast_read_safe_8b (via Veneer)
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btaon_fast_read_safe (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_image_feature_info
<LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_report_get_bud_info
<LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_report_event
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_handle_action
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_get_call_status
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_start_timer
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_get_state
<LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt_reset
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_cfg_store
<LI><a href="#[6a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_relay_sync_single
<LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_relay_async_single
<LI><a href="#[463]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_relay_async_single_with_raw_msg
<LI><a href="#[4e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_cmd_update_eq_ctrl
<LI><a href="#[646]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;voice_prompt_language_set
<LI><a href="#[65b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_volume_out_max_get
<LI><a href="#[65d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_volume_out_get
<LI><a href="#[6a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;voice_prompt_supported_languages_get
<LI><a href="#[6ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_hall_read_package_id
<LI><a href="#[6ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_hall_read_chip_id
<LI><a href="#[6aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_cur_bank_img_header_addr_get
<LI><a href="#[6a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_cmd_check_src_eq_spec_version
<LI><a href="#[6a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_cmd_check_src_cmd_version
<LI><a href="#[6a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_cmd_get_src_version
<LI><a href="#[69f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_cmd_get_system_capability
<LI><a href="#[6a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_cmd_legacy_name_set
<LI><a href="#[6a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_cmd_get_fw_version
<LI><a href="#[6a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_cmd_le_name_set
</UL>
<BR>[Called By]<UL><LI><a href="#[698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_cmd_handler
</UL>

<P><STRONG><a name="[6b0]"></a>app_cmd_other_cmd_handle</STRONG> (Thumb, 164 bytes, Stack size 24 bytes, app_cmd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1652<LI>Call Chain = app_cmd_other_cmd_handle &rArr; app_mmi_handle_action &rArr; app_multi_active_hfp_transfer &rArr; app_multi_handle_sniffing_link_disconnect_event &rArr; app_multi_judge_active_a2dp_idx_and_qos &rArr;  app_multi_handle_sniffing_link_disconnect_event (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_report_event
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_handle_action
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dlps_enable (via Veneer)
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dlps_disable (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_cmd_handler
</UL>

<P><STRONG><a name="[6b1]"></a>app_cmd_customized_cmd_handle</STRONG> (Thumb, 490 bytes, Stack size 56 bytes, app_cmd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 2060<LI>Call Chain = app_cmd_customized_cmd_handle &rArr; app_sass_policy_switch_active_audio_source &rArr; app_bt_policy_disconnect &rArr; app_bt_policy_state_machine &rArr; app_bt_policy_event_handle &rArr;  app_bt_policy_roleswitch_handle (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pad_Config (via Veneer)
<LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_report_event
<LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_led_change_mode
<LI><a href="#[6b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;auido_probe_set_voice_secondary_mic
<LI><a href="#[6b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_probe_set_voice_primary_mic
<LI><a href="#[6b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_probe_get_voice_secondary_mic_type
<LI><a href="#[6b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_probe_get_voice_secondary_mic_sel
<LI><a href="#[6b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_probe_get_voice_primary_mic_type
<LI><a href="#[6b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_probe_get_voice_primary_mic_sel
<LI><a href="#[6bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sass_policy_switch_back
<LI><a href="#[6ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sass_policy_switch_active_audio_source
<LI><a href="#[6b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sass_policy_set_switch_preference
<LI><a href="#[6bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sass_policy_set_multipoint_state
<LI><a href="#[6b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sass_policy_get_switch_preference
</UL>
<BR>[Called By]<UL><LI><a href="#[698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_cmd_handler
</UL>

<P><STRONG><a name="[6a9]"></a>app_cmd_get_fw_version</STRONG> (Thumb, 182 bytes, Stack size 32 bytes, app_cmd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = app_cmd_get_fw_version
</UL>
<BR>[Calls]<UL><LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[6aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_cur_bank_img_header_addr_get
</UL>
<BR>[Called By]<UL><LI><a href="#[6a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_cmd_general_cmd_handle
</UL>

<P><STRONG><a name="[6a7]"></a>app_cmd_legacy_name_set</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, app_cmd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = app_cmd_legacy_name_set &rArr; app_cfg_store
</UL>
<BR>[Calls]<UL><LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_local_name_set
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_cfg_store
</UL>
<BR>[Called By]<UL><LI><a href="#[6a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_cmd_general_cmd_handle
</UL>

<P><STRONG><a name="[36]"></a>app_auto_power_off_timeout_cb</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, app_auto_power_off.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1636<LI>Call Chain = app_auto_power_off_timeout_cb &rArr; app_mmi_handle_action &rArr; app_multi_active_hfp_transfer &rArr; app_multi_handle_sniffing_link_disconnect_event &rArr; app_multi_judge_active_a2dp_idx_and_qos &rArr;  app_multi_handle_sniffing_link_disconnect_event (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_handle_action
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_stop_timer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_auto_power_off.o(.text)
</UL>
<P><STRONG><a name="[37]"></a>app_auto_power_off_dm_cback</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, app_auto_power_off.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = app_auto_power_off_dm_cback &rArr; app_stop_timer &rArr; remove_timeout_msg_from_list
</UL>
<BR>[Calls]<UL><LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_stop_timer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_auto_power_off.o(.text)
</UL>
<P><STRONG><a name="[6be]"></a>app_dsp_cfg_gain_table_load</STRONG> (Thumb, 288 bytes, Stack size 16 bytes, app_dsp_cfg.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = app_dsp_cfg_gain_table_load &rArr; app_dsp_cfg_load_param_r_data &rArr; fmc_flash_nor_read
</UL>
<BR>[Calls]<UL><LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4 (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calloc
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[666]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dsp_cfg_load_param_r_data
</UL>
<BR>[Called By]<UL><LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dsp_cfg_init
</UL>

<P><STRONG><a name="[6bf]"></a>app_dsp_cfg_eq_param_load</STRONG> (Thumb, 316 bytes, Stack size 24 bytes, app_dsp_cfg.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = app_dsp_cfg_eq_param_load &rArr; calloc
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calloc
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_flash_nor_read
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_cur_bank_img_payload_addr_get
</UL>
<BR>[Called By]<UL><LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dsp_cfg_init
</UL>

<P><STRONG><a name="[6c0]"></a>app_dsp_cfg_extensible_param_load</STRONG> (Thumb, 148 bytes, Stack size 16 bytes, app_dsp_cfg.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = app_dsp_cfg_extensible_param_load &rArr; calloc
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calloc
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_flash_nor_read
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_cur_bank_img_payload_addr_get
</UL>
<BR>[Called By]<UL><LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dsp_cfg_init
</UL>

<P><STRONG><a name="[6c2]"></a>eq_utils_dsp_param_get</STRONG> (Thumb, 498 bytes, Stack size 464 bytes, eq_utils.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calloc
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[6c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eq_utils_stage_num_get
<LI><a href="#[666]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dsp_cfg_load_param_r_data
</UL>
<BR>[Called By]<UL><LI><a href="#[6c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eq_utils_param_get
</UL>

<P><STRONG><a name="[6c7]"></a>eq_utils_map_init</STRONG> (Thumb, 100 bytes, Stack size 40 bytes, eq_utils.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = eq_utils_map_init &rArr; eq_utils_map_get
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[6c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eq_utils_get_capacity
<LI><a href="#[665]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eq_utils_map_get
</UL>
<BR>[Called By]<UL><LI><a href="#[667]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eq_utils_init
</UL>

<P><STRONG><a name="[6c5]"></a>eq_utils_get_spk_capacity</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, eq_utils.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = eq_utils_get_spk_capacity
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[6c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eq_utils_get_capacity
</UL>

<P><STRONG><a name="[6c6]"></a>eq_utils_get_mic_capacity</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, eq_utils.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = eq_utils_get_mic_capacity
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[6c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eq_utils_get_capacity
</UL>

<P><STRONG><a name="[38]"></a>app_swift_pair_adv_callback</STRONG> (Thumb, 140 bytes, Stack size 16 bytes, app_ble_swift_pair.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = app_swift_pair_adv_callback &rArr; ble_ext_adv_mgr_get_adv_state &rArr; ble_ext_adv_mgr_find_by_handle
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[432]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_get_adv_state
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_ble_swift_pair.o(.text)
</UL>
<P><STRONG><a name="[39]"></a>app_swift_pair_timeout_cb</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, app_ble_swift_pair.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = app_swift_pair_timeout_cb &rArr; ble_ext_adv_mgr_set_adv_data &rArr; ble_ext_adv_mgr_start_set_adv_param &rArr; ble_ext_adv_mgr_send_msg &rArr; ble_ext_adv_mgr_find_by_handle
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_set_adv_data
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_ble_swift_pair.o(.text)
</UL>
<P><STRONG><a name="[6c9]"></a>app_audio_route_harman_audio_dac_gain_get</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, app_audio_route.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = app_audio_route_harman_audio_dac_gain_get
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_route_dac_gain_get_cback
</UL>

<P><STRONG><a name="[3b]"></a>app_audio_route_dac_gain_get_cback</STRONG> (Thumb, 116 bytes, Stack size 16 bytes, app_audio_route.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = app_audio_route_dac_gain_get_cback &rArr; app_audio_route_harman_audio_dac_gain_get
</UL>
<BR>[Calls]<UL><LI><a href="#[6c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_route_harman_audio_dac_gain_get
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_audio_route.o(.text)
</UL>
<P><STRONG><a name="[3a]"></a>app_audio_route_adc_gain_get_cback</STRONG> (Thumb, 110 bytes, Stack size 16 bytes, app_audio_route.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = app_audio_route_adc_gain_get_cback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_audio_route.o(.text)
</UL>
<P><STRONG><a name="[3c]"></a>rtk_charger_charge_state_cb</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, rtk_charger.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = rtk_charger_charge_state_cb &rArr; Pad_TableConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pad_TableConfig
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rtk_charger.o(.text)
</UL>
<P><STRONG><a name="[3d]"></a>rtk_charger_soc_cb</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, rtk_charger.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> rtk_charger.o(.text)
</UL>
<P><STRONG><a name="[3e]"></a>app_ext_charger_status_det_gpio_intr_handler</STRONG> (Thumb, 88 bytes, Stack size 24 bytes, app_ext_charger.o(.isr.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = app_ext_charger_status_det_gpio_intr_handler &rArr; app_io_msg_send
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_irq_enable
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_irq_disable
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_irq_change_polarity
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_get_input_level
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dlps_enable (via Veneer)
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dlps_disable (via Veneer)
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_io_msg_send (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_ext_charger.o(.text)
</UL>
<P><STRONG><a name="[6dc]"></a>app_ext_charger_cfg_load</STRONG> (Thumb, 146 bytes, Stack size 32 bytes, app_ext_charger.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = app_ext_charger_cfg_load
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[6e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;charger_utils_thermistor_enable
<LI><a href="#[6e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;charger_utils_get_thermistor_pin
<LI><a href="#[6e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;charger_utils_get_recharge_voltage
<LI><a href="#[6e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;charger_utils_get_low_temp_warn_voltage
<LI><a href="#[6e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;charger_utils_get_low_temp_error_voltage
<LI><a href="#[6de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;charger_utils_get_high_temp_warn_voltage
<LI><a href="#[6df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;charger_utils_get_high_temp_error_voltage
<LI><a href="#[6e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;charger_utils_get_bat_temp_hysteresis_voltage
<LI><a href="#[6dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;charger_utils_get_auto_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ext_charger_init
</UL>

<P><STRONG><a name="[6e6]"></a>app_ext_charger_enable_ctrl_gpio_set</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, app_ext_charger.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = app_ext_charger_enable_ctrl_gpio_set &rArr; Pad_Config &rArr; flash_cur_bank_img_payload_addr_get
</UL>
<BR>[Calls]<UL><LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pad_Config (via Veneer)
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pad_TableConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[6eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ext_charger_disable
<LI><a href="#[6ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ext_charger_enable
</UL>

<P><STRONG><a name="[6e7]"></a>app_ext_charger_current_speed_set</STRONG> (Thumb, 162 bytes, Stack size 32 bytes, app_ext_charger.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = app_ext_charger_current_speed_set &rArr; Pad_Config &rArr; flash_cur_bank_img_payload_addr_get
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pad_Config (via Veneer)
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pad_TableConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ext_charger_charging_handler
<LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ext_charger_no_charge_handler
<LI><a href="#[6e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ext_charger_check_ntc_threshold
</UL>

<P><STRONG><a name="[6e8]"></a>app_ext_charger_check_ntc_threshold</STRONG> (Thumb, 432 bytes, Stack size 56 bytes, app_ext_charger.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = app_ext_charger_check_ntc_threshold &rArr; app_ext_charger_current_speed_set &rArr; Pad_Config &rArr; flash_cur_bank_img_payload_addr_get
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[6e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_usb_connector_detect_is_normal
<LI><a href="#[6ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_adc_update_cur_ntc_value
<LI><a href="#[6eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ext_charger_disable
<LI><a href="#[6ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ext_charger_enable
<LI><a href="#[6e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ext_charger_current_speed_set
<LI><a href="#[68f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adp_get_current_state
</UL>
<BR>[Called By]<UL><LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ext_charger_charging_error_handler
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ext_charger_charging_handler
<LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ext_charger_no_charge_handler
</UL>

<P><STRONG><a name="[6f1]"></a>app_ext_charger_state_machine</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, app_ext_charger.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = app_ext_charger_state_machine &rArr; app_ext_charger_update_charger_state &rArr; app_charger_state_cb &rArr; app_io_msg_send
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ext_charger_update_charger_state
</UL>
<BR>[Called By]<UL><LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ext_charger_handle_io_msg
<LI><a href="#[6f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ext_charger_ntc_adc_update
<LI><a href="#[6f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ext_charger_ntc_check_timeout
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ext_charger_plug_status_cb
</UL>

<P><STRONG><a name="[41]"></a>app_ext_charger_timeout_cb</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, app_ext_charger.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = app_ext_charger_timeout_cb
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_ext_charger.o(.text)
</UL>
<P><STRONG><a name="[3f]"></a>app_ext_charger_plug_status_cb</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, app_ext_charger.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = app_ext_charger_plug_status_cb &rArr; app_ext_charger_state_machine &rArr; app_ext_charger_update_charger_state &rArr; app_charger_state_cb &rArr; app_io_msg_send
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dlps_enable (via Veneer)
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dlps_disable (via Veneer)
<LI><a href="#[6f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ext_charger_state_machine
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_ext_charger.o(.text)
</UL>
<P><STRONG><a name="[40]"></a>app_ext_charger_bt_cback</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, app_ext_charger.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = app_ext_charger_bt_cback &rArr; app_io_msg_send
</UL>
<BR>[Calls]<UL><LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_io_msg_send (via Veneer)
<LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_adc_ntc_check_timer_started
<LI><a href="#[68f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adp_get_current_state
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_ext_charger.o(.text)
</UL>
<P><STRONG><a name="[42]"></a>app_ext_charger_dlps_check_cb</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, app_ext_charger.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = app_ext_charger_dlps_check_cb &rArr; adp_get_current_state
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ext_charger_check_support
<LI><a href="#[6f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dlps_get_dlps_bitmap (via Veneer)
<LI><a href="#[6f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_usb_hiccup_check_timer_started
<LI><a href="#[68f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adp_get_current_state
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_ext_charger.o(.text)
</UL>
<P><STRONG><a name="[6ec]"></a>app_ext_charger_enable</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, app_ext_charger.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = app_ext_charger_enable &rArr; app_ext_charger_enable_ctrl_gpio_set &rArr; Pad_Config &rArr; flash_cur_bank_img_payload_addr_get
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[6e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ext_charger_enable_ctrl_gpio_set
</UL>
<BR>[Called By]<UL><LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ext_charger_charging_finish_handler
<LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ext_charger_no_charge_handler
<LI><a href="#[6e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ext_charger_check_ntc_threshold
</UL>

<P><STRONG><a name="[6eb]"></a>app_ext_charger_disable</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, app_ext_charger.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = app_ext_charger_disable &rArr; app_ext_charger_enable_ctrl_gpio_set &rArr; Pad_Config &rArr; flash_cur_bank_img_payload_addr_get
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[6e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ext_charger_enable_ctrl_gpio_set
</UL>
<BR>[Called By]<UL><LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ext_charger_charging_handler
<LI><a href="#[6ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ext_charger_handle_adp_out
<LI><a href="#[6e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ext_charger_check_ntc_threshold
</UL>

<P><STRONG><a name="[6ef]"></a>app_ext_charger_handle_adp_out</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, app_ext_charger.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = app_ext_charger_handle_adp_out &rArr; app_harman_adc_adp_out_handle &rArr; app_harman_discharger_ntc_timer_start &rArr; app_harman_adc_io_read &rArr; Pad_Config &rArr; flash_cur_bank_img_payload_addr_get
</UL>
<BR>[Calls]<UL><LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dlps_enable (via Veneer)
<LI><a href="#[6fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_usb_connector_adp_out_handle
<LI><a href="#[6fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_adc_adp_out_handle
<LI><a href="#[6eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ext_charger_disable
<LI><a href="#[68f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adp_get_current_state
</UL>
<BR>[Called By]<UL><LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ext_charger_charging_error_handler
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ext_charger_charging_finish_handler
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ext_charger_charging_handler
<LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ext_charger_no_charge_handler
</UL>

<P><STRONG><a name="[6f2]"></a>app_ext_charger_update_charger_state</STRONG> (Thumb, 76 bytes, Stack size 32 bytes, app_ext_charger.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = app_ext_charger_update_charger_state &rArr; app_charger_state_cb &rArr; app_io_msg_send
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_charger_state_cb
</UL>
<BR>[Called By]<UL><LI><a href="#[6f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ext_charger_state_machine
</UL>

<P><STRONG><a name="[6fd]"></a>app_bt_point_alloc</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, app_bt_point.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = app_bt_point_alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_point_link_num_changed
</UL>

<P><STRONG><a name="[48]"></a>single_tone_exit_timeout_cb</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, single_tone.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = single_tone_exit_timeout_cb &rArr; wdt_reset
</UL>
<BR>[Calls]<UL><LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt_reset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> single_tone.o(.text)
</UL>
<P><STRONG><a name="[700]"></a>dut_hci_cmd_reset</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, single_tone.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = dut_hci_cmd_reset
</UL>
<BR>[Calls]<UL><LI><a href="#[701]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_if_write
</UL>
<BR>[Called By]<UL><LI><a href="#[708]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mp_hci_handle_msg
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mp_hci_test_dm_cback
</UL>

<P><STRONG><a name="[702]"></a>dut_test_handle_hci_evt_data_ind</STRONG> (Thumb, 266 bytes, Stack size 32 bytes, single_tone.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = dut_test_handle_hci_evt_data_ind &rArr; dut_hci_cmd_write_inquiry_scan_activity
</UL>
<BR>[Calls]<UL><LI><a href="#[701]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_if_write
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[705]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dut_hci_cmd_write_inquiry_scan_activity
<LI><a href="#[703]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dut_hci_cmd_write_local_name
<LI><a href="#[704]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dut_hci_cmd_write_page_scan_activity
</UL>
<BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mp_test_handle_hci_cb
</UL>

<P><STRONG><a name="[45]"></a>dut_audio_cback</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, single_tone.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = dut_audio_cback &rArr; wdt_reset
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt_reset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> single_tone.o(.text)
</UL>
<P><STRONG><a name="[43]"></a>mp_test_handle_hci_cb</STRONG> (Thumb, 96 bytes, Stack size 32 bytes, single_tone.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = mp_test_handle_hci_cb &rArr; dut_test_handle_hci_evt_data_ind &rArr; dut_hci_cmd_write_inquiry_scan_activity
</UL>
<BR>[Calls]<UL><LI><a href="#[707]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_if_confirm
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[706]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mp_hci_send_msg
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dut_test_handle_hci_evt_data_ind
</UL>
<BR>[Address Reference Count : 1]<UL><LI> single_tone.o(.text)
</UL>
<P><STRONG><a name="[47]"></a>mp_hci_test_task</STRONG> (Thumb, 220 bytes, Stack size 24 bytes, single_tone.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 2060<LI>Call Chain = mp_hci_test_task &rArr; app_io_msg_handler &rArr; app_ble_gap_handle_gap_msg &rArr; app_ble_gap_handle_authen_state_evt &rArr; app_bt_policy_msg_le_auth &rArr; app_bt_policy_state_machine &rArr; app_bt_policy_event_handle &rArr;  app_bt_policy_roleswitch_handle (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_handle_msg
<LI><a href="#[709]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_if_open
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_mgr_event_handle
<LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_handle_msg
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_led_check_repeat_mode
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_led_check_charging_mode
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_io_msg_handler
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_handle_action
<LI><a href="#[708]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mp_hci_handle_msg
</UL>
<BR>[Address Reference Count : 1]<UL><LI> single_tone.o(.text)
</UL>
<P><STRONG><a name="[44]"></a>mp_hci_test_dm_cback</STRONG> (Thumb, 462 bytes, Stack size 40 bytes, single_tone.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 616<LI>Call Chain = mp_hci_test_dm_cback &rArr; app_audio_tone_type_play &rArr; voice_prompt_play &rArr; notification_push &rArr; notification_play &rArr; notification_path_start &rArr; notification_start_vp &rArr; audio_path_start &rArr; audio_path_schedule &rArr; audio_path_voice_start &rArr; dsp_mgr_session_enable &rArr; dsp_state_machine &rArr; dsp_power_on &rArr; dsp_hal_reset &rArr; shm_enable &rArr; h2d_cmd_send &rArr; shm_cmd_send &rArr; wr_queue_send
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dlps_stop_power_down_wdg_timer
<LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_is_in_the_box
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_auto_power_off_enable
<LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_auto_power_off_disable
<LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_tone_type_play
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_stop_timer
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_start_timer
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dlps_enable (via Veneer)
<LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_led_change_mode
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_cfg_store
<LI><a href="#[531]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dut_test_start_auto_power_off_timer
<LI><a href="#[4bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;power_mode_set
<LI><a href="#[4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_state_change
<LI><a href="#[70a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mp_hci_test_deinit
<LI><a href="#[700]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dut_hci_cmd_reset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> single_tone.o(.text)
</UL>
<P><STRONG><a name="[46]"></a>dut_timeout_cb</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, single_tone.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1636<LI>Call Chain = dut_timeout_cb &rArr; app_mmi_handle_action &rArr; app_multi_active_hfp_transfer &rArr; app_multi_handle_sniffing_link_disconnect_event &rArr; app_multi_judge_active_a2dp_idx_and_qos &rArr;  app_multi_handle_sniffing_link_disconnect_event (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_handle_action
<LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_tone_type_play
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_stop_timer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> single_tone.o(.text)
</UL>
<P><STRONG><a name="[70c]"></a>single_tone_test_init</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, single_tone.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = single_tone_test_init
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mp_hci_test_init
</UL>

<P><STRONG><a name="[704]"></a>dut_hci_cmd_write_page_scan_activity</STRONG> (Thumb, 84 bytes, Stack size 24 bytes, single_tone.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = dut_hci_cmd_write_page_scan_activity
</UL>
<BR>[Calls]<UL><LI><a href="#[701]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_if_write
</UL>
<BR>[Called By]<UL><LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dut_test_handle_hci_evt_data_ind
</UL>

<P><STRONG><a name="[703]"></a>dut_hci_cmd_write_local_name</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, single_tone.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = dut_hci_cmd_write_local_name
</UL>
<BR>[Calls]<UL><LI><a href="#[701]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_if_write
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dut_test_handle_hci_evt_data_ind
</UL>

<P><STRONG><a name="[705]"></a>dut_hci_cmd_write_inquiry_scan_activity</STRONG> (Thumb, 84 bytes, Stack size 24 bytes, single_tone.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = dut_hci_cmd_write_inquiry_scan_activity
</UL>
<BR>[Calls]<UL><LI><a href="#[701]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_if_write
</UL>
<BR>[Called By]<UL><LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dut_test_handle_hci_evt_data_ind
</UL>

<P><STRONG><a name="[49]"></a>app_gfps_cb</STRONG> (Thumb, 96 bytes, Stack size 8 bytes, app_gfps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1204<LI>Call Chain = app_gfps_cb &rArr; app_gfps_cb_handle_kbp_write_req &rArr; app_gfps_ble_conn_info_init &rArr; app_gfps_force_enter_pairing_mode &rArr; app_gfps_le_device_adv_start &rArr; app_gfps_next_action &rArr; app_gfps_battery_info_report &rArr; app_gfps_battery_set_info &rArr; gfps_gen_adv_data &rArr; gfps_sass_get_encrypt_conn_status &rArr; sha256_hkdf &rArr; hmac_sha256_crypt &rArr; hmac_sha256_finish &rArr; mbedtls_sha256_update &rArr; mbedtls_sha256_update_ret &rArr; mbedtls_internal_sha256_process
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[72d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_cb_handle_kbp_write_req
<LI><a href="#[72a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_cb_handle_action_req
<LI><a href="#[729]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_cb_handle_passkey
<LI><a href="#[721]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_cb_handle_accountkey
<LI><a href="#[70f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_cb_handle_additional_data
<LI><a href="#[70e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_cb_handle_additional_passkey
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_gfps.o(.text)
</UL>
<P><STRONG><a name="[4a]"></a>app_gfps_le_disconnect_cb</STRONG> (Thumb, 212 bytes, Stack size 32 bytes, app_gfps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1164<LI>Call Chain = app_gfps_le_disconnect_cb &rArr; app_gfps_device_handle_ble_link_disconnected &rArr; app_gfps_force_enter_pairing_mode &rArr; app_gfps_le_device_adv_start &rArr; app_gfps_next_action &rArr; app_gfps_battery_info_report &rArr; app_gfps_battery_set_info &rArr; gfps_gen_adv_data &rArr; gfps_sass_get_encrypt_conn_status &rArr; sha256_hkdf &rArr; hmac_sha256_crypt &rArr; hmac_sha256_finish &rArr; mbedtls_sha256_update &rArr; mbedtls_sha256_update_ret &rArr; mbedtls_internal_sha256_process
</UL>
<BR>[Calls]<UL><LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_set_param
<LI><a href="#[725]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_set_pairable_mode
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_find_le_link_by_conn_id
<LI><a href="#[741]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_reset_aeskey_and_pairing_status
<LI><a href="#[742]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_link_delete_link_from_priority_queue
<LI><a href="#[740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_finder_reset_conn
<LI><a href="#[743]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_device_handle_ble_link_disconnected
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_gfps.o(.text)
</UL>
<P><STRONG><a name="[4b]"></a>app_gfps_adv_callback</STRONG> (Thumb, 130 bytes, Stack size 32 bytes, app_gfps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1156<LI>Call Chain = app_gfps_adv_callback &rArr; app_gfps_ble_conn_info_init &rArr; app_gfps_force_enter_pairing_mode &rArr; app_gfps_le_device_adv_start &rArr; app_gfps_next_action &rArr; app_gfps_battery_info_report &rArr; app_gfps_battery_set_info &rArr; gfps_gen_adv_data &rArr; gfps_sass_get_encrypt_conn_status &rArr; sha256_hkdf &rArr; hmac_sha256_crypt &rArr; hmac_sha256_finish &rArr; mbedtls_sha256_update &rArr; mbedtls_sha256_update_ret &rArr; mbedtls_internal_sha256_process
</UL>
<BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[53f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_reg_le_link_disc_cb
<LI><a href="#[72b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_ble_conn_info_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_gfps.o(.text)
</UL>
<P><STRONG><a name="[4d]"></a>gfps_finder_adv_callback</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, app_gfps_finder_adv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = gfps_finder_adv_callback &rArr; app_link_reg_le_link_disc_cb &rArr; app_link_find_le_link_by_conn_id
</UL>
<BR>[Calls]<UL><LI><a href="#[53f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_reg_le_link_disc_cb
<LI><a href="#[7a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_adv_state_change
<LI><a href="#[793]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_finder_beacon_set_conn_id
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_gfps_finder_adv.o(.text)
</UL>
<P><STRONG><a name="[7a9]"></a>gfps_finder_adv_state_change</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, app_gfps_finder_adv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = gfps_finder_adv_state_change &rArr; power_mode_set
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[4bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;power_mode_set
<LI><a href="#[4cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_finder_provisioned
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_adv_callback
</UL>

<P><STRONG><a name="[7ae]"></a>app_gfps_msg_ring_play</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, app_gfps_msg.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 592<LI>Call Chain = app_gfps_msg_ring_play &rArr; app_audio_tone_type_play &rArr; voice_prompt_play &rArr; notification_push &rArr; notification_play &rArr; notification_path_start &rArr; notification_start_vp &rArr; audio_path_start &rArr; audio_path_schedule &rArr; audio_path_voice_start &rArr; dsp_mgr_session_enable &rArr; dsp_state_machine &rArr; dsp_power_on &rArr; dsp_hal_reset &rArr; shm_enable &rArr; h2d_cmd_send &rArr; shm_cmd_send &rArr; wr_queue_send
</UL>
<BR>[Calls]<UL><LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_tone_type_play
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_start_timer
<LI><a href="#[7af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_volume_out_mute
</UL>
<BR>[Called By]<UL><LI><a href="#[7b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_msg_all_ring_state
<LI><a href="#[7b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_msg_left_ring_state
<LI><a href="#[7b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_msg_right_ring_state
<LI><a href="#[7b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_msg_ring_stop_state
</UL>

<P><STRONG><a name="[7b1]"></a>app_gfps_msg_ring_stop_state</STRONG> (Thumb, 204 bytes, Stack size 40 bytes, app_gfps_msg.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 632<LI>Call Chain = app_gfps_msg_ring_stop_state &rArr; app_gfps_msg_ring_play &rArr; app_audio_tone_type_play &rArr; voice_prompt_play &rArr; notification_push &rArr; notification_play &rArr; notification_path_start &rArr; notification_start_vp &rArr; audio_path_start &rArr; audio_path_schedule &rArr; audio_path_voice_start &rArr; dsp_mgr_session_enable &rArr; dsp_state_machine &rArr; dsp_power_on &rArr; dsp_hal_reset &rArr; shm_enable &rArr; h2d_cmd_send &rArr; shm_cmd_send &rArr; wr_queue_send
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[443]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_relay_sync_single_with_raw_msg
<LI><a href="#[463]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_relay_async_single_with_raw_msg
<LI><a href="#[7ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_msg_update_ring_status
<LI><a href="#[7ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_msg_ring_play
</UL>
<BR>[Called By]<UL><LI><a href="#[504]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_msg_handle_ring_event
</UL>

<P><STRONG><a name="[7b2]"></a>app_gfps_msg_right_ring_state</STRONG> (Thumb, 180 bytes, Stack size 24 bytes, app_gfps_msg.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 616<LI>Call Chain = app_gfps_msg_right_ring_state &rArr; app_gfps_msg_ring_play &rArr; app_audio_tone_type_play &rArr; voice_prompt_play &rArr; notification_push &rArr; notification_play &rArr; notification_path_start &rArr; notification_start_vp &rArr; audio_path_start &rArr; audio_path_schedule &rArr; audio_path_voice_start &rArr; dsp_mgr_session_enable &rArr; dsp_state_machine &rArr; dsp_power_on &rArr; dsp_hal_reset &rArr; shm_enable &rArr; h2d_cmd_send &rArr; shm_cmd_send &rArr; wr_queue_send
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[463]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_relay_async_single_with_raw_msg
<LI><a href="#[775]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_msg_ring_stop
<LI><a href="#[7ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_msg_update_ring_status
<LI><a href="#[7ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_msg_ring_play
</UL>
<BR>[Called By]<UL><LI><a href="#[504]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_msg_handle_ring_event
</UL>

<P><STRONG><a name="[7b3]"></a>app_gfps_msg_left_ring_state</STRONG> (Thumb, 184 bytes, Stack size 24 bytes, app_gfps_msg.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 616<LI>Call Chain = app_gfps_msg_left_ring_state &rArr; app_gfps_msg_ring_play &rArr; app_audio_tone_type_play &rArr; voice_prompt_play &rArr; notification_push &rArr; notification_play &rArr; notification_path_start &rArr; notification_start_vp &rArr; audio_path_start &rArr; audio_path_schedule &rArr; audio_path_voice_start &rArr; dsp_mgr_session_enable &rArr; dsp_state_machine &rArr; dsp_power_on &rArr; dsp_hal_reset &rArr; shm_enable &rArr; h2d_cmd_send &rArr; shm_cmd_send &rArr; wr_queue_send
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[463]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_relay_async_single_with_raw_msg
<LI><a href="#[775]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_msg_ring_stop
<LI><a href="#[7ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_msg_update_ring_status
<LI><a href="#[7ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_msg_ring_play
</UL>
<BR>[Called By]<UL><LI><a href="#[504]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_msg_handle_ring_event
</UL>

<P><STRONG><a name="[7b4]"></a>app_gfps_msg_all_ring_state</STRONG> (Thumb, 224 bytes, Stack size 32 bytes, app_gfps_msg.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 624<LI>Call Chain = app_gfps_msg_all_ring_state &rArr; app_gfps_msg_ring_play &rArr; app_audio_tone_type_play &rArr; voice_prompt_play &rArr; notification_push &rArr; notification_play &rArr; notification_path_start &rArr; notification_start_vp &rArr; audio_path_start &rArr; audio_path_schedule &rArr; audio_path_voice_start &rArr; dsp_mgr_session_enable &rArr; dsp_state_machine &rArr; dsp_power_on &rArr; dsp_hal_reset &rArr; shm_enable &rArr; h2d_cmd_send &rArr; shm_cmd_send &rArr; wr_queue_send
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[443]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_relay_sync_single_with_raw_msg
<LI><a href="#[463]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_relay_async_single_with_raw_msg
<LI><a href="#[775]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_msg_ring_stop
<LI><a href="#[7ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_msg_update_ring_status
<LI><a href="#[7ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_msg_ring_play
</UL>
<BR>[Called By]<UL><LI><a href="#[504]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_msg_handle_ring_event
</UL>

<P><STRONG><a name="[7c5]"></a>app_gfps_rfc_report_nac</STRONG> (Thumb, 34 bytes, Stack size 32 bytes, app_gfps_msg.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = app_gfps_rfc_report_nac &rArr; bt_gfps_send_nak &rArr; bt_rfc_data_send &rArr; rfc_data_req &rArr; rfc_check_send_credits &rArr; crc8EtsGen
</UL>
<BR>[Calls]<UL><LI><a href="#[7c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_gfps_send_nak
</UL>
<BR>[Called By]<UL><LI><a href="#[7d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_msg_handle_data_transfer
<LI><a href="#[7d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_rfc_report_mac_error
</UL>

<P><STRONG><a name="[4f]"></a>app_gfps_msg_rfc_bt_cback</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, app_gfps_msg.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = app_gfps_msg_rfc_bt_cback &rArr; app_gfps_msg_update_target_drop_device &rArr; app_link_find_le_link_by_conn_id
</UL>
<BR>[Calls]<UL><LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[7cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_msg_update_target_drop_device
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_gfps_msg.o(.text)
</UL>
<P><STRONG><a name="[50]"></a>app_gfps_msg_rfc_audio_cback</STRONG> (Thumb, 370 bytes, Stack size 40 bytes, app_gfps_msg.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = app_gfps_msg_rfc_audio_cback &rArr; voice_prompt_volume_set &rArr; notification_volume_set &rArr; audio_path_dac_level_set &rArr; codec_mgr_dac_gain_set &rArr; codec_drv_dac_config_set &rArr; codec_drv_event_process &rArr; codec_drv_set_sample_rate
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_start_timer
<LI><a href="#[4b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;voice_prompt_volume_set
<LI><a href="#[4af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;harman_set_vp_ringtone_balance
<LI><a href="#[7d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_finder_get_ring_volume_level
<LI><a href="#[7d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;voice_prompt_volume_get
<LI><a href="#[7c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_notify_anc_state
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_gfps_msg.o(.text)
</UL>
<P><STRONG><a name="[51]"></a>app_gfps_msg_timeout_cb</STRONG> (Thumb, 108 bytes, Stack size 24 bytes, app_gfps_msg.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 672<LI>Call Chain = app_gfps_msg_timeout_cb &rArr; app_gfps_msg_handle_ring_event &rArr; app_gfps_msg_ring_stop_state &rArr; app_gfps_msg_ring_play &rArr; app_audio_tone_type_play &rArr; voice_prompt_play &rArr; notification_push &rArr; notification_play &rArr; notification_path_start &rArr; notification_start_vp &rArr; audio_path_start &rArr; audio_path_schedule &rArr; audio_path_voice_start &rArr; dsp_mgr_session_enable &rArr; dsp_state_machine &rArr; dsp_power_on &rArr; dsp_hal_reset &rArr; shm_enable &rArr; h2d_cmd_send &rArr; shm_cmd_send &rArr; wr_queue_send
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_tone_type_play
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_stop_timer
<LI><a href="#[504]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_msg_handle_ring_event
<LI><a href="#[505]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_finder_send_ring_rsp
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_gfps_msg.o(.text)
</UL>
<P><STRONG><a name="[7d6]"></a>app_gfps_rfc_report_mac_error</STRONG> (Thumb, 18 bytes, Stack size 32 bytes, app_gfps_msg.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = app_gfps_rfc_report_mac_error &rArr; app_gfps_rfc_report_nac &rArr; bt_gfps_send_nak &rArr; bt_rfc_data_send &rArr; rfc_data_req &rArr; rfc_check_send_credits &rArr; crc8EtsGen
</UL>
<BR>[Calls]<UL><LI><a href="#[7c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_rfc_report_nac
</UL>
<BR>[Called By]<UL><LI><a href="#[7d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_msg_handle_data_transfer
</UL>

<P><STRONG><a name="[52]"></a>app_sass_policy_bt_cback</STRONG> (Thumb, 244 bytes, Stack size 24 bytes, app_sass_policy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1140<LI>Call Chain = app_sass_policy_bt_cback &rArr; app_gfps_notify_conn_status &rArr; app_gfps_adv_update_conn_status &rArr; app_gfps_device_check_state &rArr; app_gfps_enter_nondiscoverable_mode &rArr; app_gfps_next_action &rArr; app_gfps_battery_info_report &rArr; app_gfps_battery_set_info &rArr; gfps_gen_adv_data &rArr; gfps_sass_get_encrypt_conn_status &rArr; sha256_hkdf &rArr; hmac_sha256_crypt &rArr; hmac_sha256_finish &rArr; mbedtls_sha256_update &rArr; mbedtls_sha256_update_ret &rArr; mbedtls_internal_sha256_process
</UL>
<BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bond_get_pair_idx_mapping
<LI><a href="#[59c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_notify_conn_status
<LI><a href="#[518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_default_connect
<LI><a href="#[720]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_adv_start
<LI><a href="#[7e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sass_policy_update_conn_bit_map
<LI><a href="#[7e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sass_policy_reset_prev_disc_device
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_sass_policy.o(.text)
</UL>
<P><STRONG><a name="[53]"></a>app_sass_policy_timeout_cb</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, app_sass_policy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = app_sass_policy_timeout_cb &rArr; app_stop_timer &rArr; remove_timeout_msg_from_list
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_stop_timer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_sass_policy.o(.text)
</UL>
<P><STRONG><a name="[7f6]"></a>app_dult_handle_info_opcode</STRONG> (Thumb, 412 bytes, Stack size 120 bytes, app_dult.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = app_dult_handle_info_opcode &rArr; app_dult_report_cmd_rsp &rArr; app_dult_send_indication &rArr; gatt_svc_send_data &rArr; gatt_svc_send_data_in_queue &rArr; calloc
</UL>
<BR>[Calls]<UL><LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[7f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dult_send_indication
<LI><a href="#[7f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dult_report_cmd_rsp
</UL>
<BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dult_cb
</UL>

<P><STRONG><a name="[7f8]"></a>app_dult_handle_ctrl_opcode</STRONG> (Thumb, 272 bytes, Stack size 128 bytes, app_dult.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 728<LI>Call Chain = app_dult_handle_ctrl_opcode &rArr; app_dult_device_sound_start &rArr; app_audio_tone_type_play &rArr; voice_prompt_play &rArr; notification_push &rArr; notification_play &rArr; notification_path_start &rArr; notification_start_vp &rArr; audio_path_start &rArr; audio_path_schedule &rArr; audio_path_voice_start &rArr; dsp_mgr_session_enable &rArr; dsp_state_machine &rArr; dsp_power_on &rArr; dsp_hal_reset &rArr; shm_enable &rArr; h2d_cmd_send &rArr; shm_cmd_send &rArr; wr_queue_send
</UL>
<BR>[Calls]<UL><LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[506]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dult_device_sound_stop
<LI><a href="#[7a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_get_ei
<LI><a href="#[7fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_hmac_sha256
<LI><a href="#[7fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfps_finder_get_recovery_key
<LI><a href="#[7f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dult_send_indication
<LI><a href="#[7f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dult_report_cmd_rsp
<LI><a href="#[7fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dult_id_read_state_get
<LI><a href="#[7f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dult_device_sound_start
</UL>
<BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dult_cb
</UL>

<P><STRONG><a name="[54]"></a>app_dult_cb</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, app_dult.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 744<LI>Call Chain = app_dult_cb &rArr; app_dult_handle_ctrl_opcode &rArr; app_dult_device_sound_start &rArr; app_audio_tone_type_play &rArr; voice_prompt_play &rArr; notification_push &rArr; notification_play &rArr; notification_path_start &rArr; notification_start_vp &rArr; audio_path_start &rArr; audio_path_schedule &rArr; audio_path_voice_start &rArr; dsp_mgr_session_enable &rArr; dsp_state_machine &rArr; dsp_power_on &rArr; dsp_hal_reset &rArr; shm_enable &rArr; h2d_cmd_send &rArr; shm_cmd_send &rArr; wr_queue_send
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[7f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dult_handle_ctrl_opcode
<LI><a href="#[7f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dult_handle_info_opcode
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_dult.o(.text)
</UL>
<P><STRONG><a name="[55]"></a>app_dult_audio_cback</STRONG> (Thumb, 106 bytes, Stack size 16 bytes, app_dult_device.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 592<LI>Call Chain = app_dult_audio_cback &rArr; app_audio_tone_type_play &rArr; voice_prompt_play &rArr; notification_push &rArr; notification_play &rArr; notification_path_start &rArr; notification_start_vp &rArr; audio_path_start &rArr; audio_path_schedule &rArr; audio_path_voice_start &rArr; dsp_mgr_session_enable &rArr; dsp_state_machine &rArr; dsp_power_on &rArr; dsp_hal_reset &rArr; shm_enable &rArr; h2d_cmd_send &rArr; shm_cmd_send &rArr; wr_queue_send
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_tone_type_play
<LI><a href="#[800]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dult_get_tone_type
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_dult_device.o(.text)
</UL>
<P><STRONG><a name="[56]"></a>app_dult_timer_cb</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, app_dult_device.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = app_dult_timer_cb &rArr; app_dult_device_sound_stop &rArr; app_audio_tone_type_cancel &rArr; voice_prompt_cancel &rArr; notification_cancel &rArr; notification_stop &rArr; audio_path_stop &rArr; audio_path_state_set &rArr; sys_event_flag_post &rArr; sys_event_flag_abort
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[506]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dult_device_sound_stop
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_dult_device.o(.text)
</UL>
<P><STRONG><a name="[800]"></a>app_dult_get_tone_type</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, app_dult_device.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[506]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dult_device_sound_stop
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dult_audio_cback
<LI><a href="#[7f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dult_device_sound_start
</UL>

<P><STRONG><a name="[807]"></a>app_lea_adv_is_discoverable</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, app_lea_adv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = app_lea_adv_is_discoverable &rArr; app_timer_state_get &rArr; os_timer_state_get
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_get_state
<LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_get_radio_mode
<LI><a href="#[808]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_state_get
</UL>
<BR>[Called By]<UL><LI><a href="#[809]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_adv_set_ext_data
</UL>

<P><STRONG><a name="[809]"></a>app_lea_adv_set_ext_data</STRONG> (Thumb, 482 bytes, Stack size 56 bytes, app_lea_adv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = app_lea_adv_set_ext_data &rArr; app_gfps_update_announcement &rArr; ble_ext_adv_mgr_set_scan_response_data &rArr; ble_ext_adv_mgr_start_set_adv_param &rArr; ble_ext_adv_mgr_send_msg &rArr; ble_ext_adv_mgr_find_by_handle
</UL>
<BR>[Calls]<UL><LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen (via Veneer)
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[70d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_update_announcement
<LI><a href="#[80c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_profile_get_tmas_role
<LI><a href="#[80b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_pacs_get_source_available_contexts
<LI><a href="#[80a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_pacs_get_sink_available_contexts
<LI><a href="#[807]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_adv_is_discoverable
</UL>
<BR>[Called By]<UL><LI><a href="#[4c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_adv_init
<LI><a href="#[5dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_adv_update
</UL>

<P><STRONG><a name="[58]"></a>app_lea_adv_timeout_cb</STRONG> (Thumb, 152 bytes, Stack size 8 bytes, app_lea_adv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1660<LI>Call Chain = app_lea_adv_timeout_cb &rArr; app_bt_policy_enter_sched &rArr; app_bt_policy_stable_sched &rArr; app_mmi_handle_action &rArr; app_multi_active_hfp_transfer &rArr; app_multi_handle_sniffing_link_disconnect_event &rArr; app_multi_judge_active_a2dp_idx_and_qos &rArr;  app_multi_handle_sniffing_link_disconnect_event (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_stop_timer
<LI><a href="#[544]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_point_lea_link_is_full
<LI><a href="#[73f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_change_adv_interval
<LI><a href="#[5dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_adv_update
<LI><a href="#[615]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_enter_sched
<LI><a href="#[80e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ext_adv_mgr_get_adv_interval
<LI><a href="#[80d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_adv_stop
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_lea_adv.o(.text)
</UL>
<P><STRONG><a name="[57]"></a>app_lea_adv_callback</STRONG> (Thumb, 94 bytes, Stack size 24 bytes, app_lea_adv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1116<LI>Call Chain = app_lea_adv_callback &rArr; app_gfps_le_device_adv_start &rArr; app_gfps_next_action &rArr; app_gfps_battery_info_report &rArr; app_gfps_battery_set_info &rArr; gfps_gen_adv_data &rArr; gfps_sass_get_encrypt_conn_status &rArr; sha256_hkdf &rArr; hmac_sha256_crypt &rArr; hmac_sha256_finish &rArr; mbedtls_sha256_update &rArr; mbedtls_sha256_update_ret &rArr; mbedtls_internal_sha256_process
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_le_device_adv_start
<LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_find_le_link_by_conn_id
<LI><a href="#[3c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_adv_check_restart_adv
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_lea_adv.o(.text)
</UL>
<P><STRONG><a name="[812]"></a>app_lea_ascs_check_ase_condition</STRONG> (Thumb, 114 bytes, Stack size 16 bytes, app_lea_ascs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = app_lea_ascs_check_ase_condition &rArr; audio_track_device_get &rArr; audio_track_handle_check
</UL>
<BR>[Calls]<UL><LI><a href="#[813]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_device_get
</UL>
<BR>[Called By]<UL><LI><a href="#[81a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_ascs_find_ase_entry_non_conn
<LI><a href="#[814]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_ascs_find_ase_entry
</UL>

<P><STRONG><a name="[59]"></a>app_lea_ascs_ble_audio_cback</STRONG> (Thumb, 758 bytes, Stack size 56 bytes, app_lea_ascs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 552<LI>Call Chain = app_lea_ascs_ble_audio_cback &rArr; mtc_if_fm_lcis_handle &rArr; mtc_terminate_hfp_call &rArr; app_mmi_hf_reject_call &rArr; app_hfp_stop_ring_alert_timer &rArr; app_harman_sco_status_notify &rArr; app_harman_devinfo_feature_report &rArr; app_harman_report_le_event &rArr; app_transfer_push_data_queue &rArr; app_transfer_pop_data_queue &rArr;  app_transfer_pop_data_queue (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_find_le_link_by_conn_handle
<LI><a href="#[5ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sass_preempt_policy
<LI><a href="#[816]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_if_fm_lcis_handle
<LI><a href="#[815]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_ascs_get_context
<LI><a href="#[814]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_ascs_find_ase_entry
<LI><a href="#[7c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sass_policy_context_to_conn_state
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_lea_ascs.o(.text)
</UL>
<P><STRONG><a name="[81d]"></a>app_lea_ccp_trigger_call_ringtone</STRONG> (Thumb, 102 bytes, Stack size 16 bytes, app_lea_ccp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 592<LI>Call Chain = app_lea_ccp_trigger_call_ringtone &rArr; app_audio_tone_type_play &rArr; voice_prompt_play &rArr; notification_push &rArr; notification_play &rArr; notification_path_start &rArr; notification_start_vp &rArr; audio_path_start &rArr; audio_path_schedule &rArr; audio_path_voice_start &rArr; dsp_mgr_session_enable &rArr; dsp_state_machine &rArr; dsp_power_on &rArr; dsp_hal_reset &rArr; shm_enable &rArr; h2d_cmd_send &rArr; shm_cmd_send &rArr; wr_queue_send
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_tone_type_play
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_ccp_ble_audio_cback
</UL>

<P><STRONG><a name="[820]"></a>app_lea_ccp_update_link_call_status</STRONG> (Thumb, 268 bytes, Stack size 24 bytes, app_lea_ccp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = app_lea_ccp_update_link_call_status
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_ccp_ble_audio_cback
</UL>

<P><STRONG><a name="[822]"></a>app_lea_ccp_alloc_call_entry</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, app_lea_ccp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = app_lea_ccp_alloc_call_entry &rArr; app_link_find_le_link_by_conn_id
</UL>
<BR>[Calls]<UL><LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_find_le_link_by_conn_id
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_ccp_ble_audio_cback
<LI><a href="#[824]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_ccp_parse_payload
</UL>

<P><STRONG><a name="[823]"></a>app_lea_ccp_set_active_call_uri</STRONG> (Thumb, 158 bytes, Stack size 24 bytes, app_lea_ccp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = app_lea_ccp_set_active_call_uri &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen (via Veneer)
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>
<BR>[Called By]<UL><LI><a href="#[824]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_ccp_parse_payload
</UL>

<P><STRONG><a name="[824]"></a>app_lea_ccp_parse_payload</STRONG> (Thumb, 420 bytes, Stack size 40 bytes, app_lea_ccp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = app_lea_ccp_parse_payload &rArr; app_lea_ccp_set_active_call_uri &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[821]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_ccp_find_call_entry_by_idx
<LI><a href="#[823]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_ccp_set_active_call_uri
<LI><a href="#[822]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_ccp_alloc_call_entry
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_ccp_ble_audio_cback
</UL>

<P><STRONG><a name="[5a]"></a>app_lea_ccp_ble_audio_cback</STRONG> (Thumb, 462 bytes, Stack size 48 bytes, app_lea_ccp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1196<LI>Call Chain = app_lea_ccp_ble_audio_cback &rArr; app_lea_ccp_update_call_status &rArr; app_gfps_notify_conn_status &rArr; app_gfps_adv_update_conn_status &rArr; app_gfps_device_check_state &rArr; app_gfps_enter_nondiscoverable_mode &rArr; app_gfps_next_action &rArr; app_gfps_battery_info_report &rArr; app_gfps_battery_set_info &rArr; gfps_gen_adv_data &rArr; gfps_sass_get_encrypt_conn_status &rArr; sha256_hkdf &rArr; hmac_sha256_crypt &rArr; hmac_sha256_finish &rArr; mbedtls_sha256_update &rArr; mbedtls_sha256_update_ret &rArr; mbedtls_internal_sha256_process
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_find_le_link_by_conn_handle
<LI><a href="#[826]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ccp_client_read_char_value
<LI><a href="#[825]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ccp_client_cfg_cccd
<LI><a href="#[821]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_ccp_find_call_entry_by_idx
<LI><a href="#[81f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_ccp_update_call_status
<LI><a href="#[824]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_ccp_parse_payload
<LI><a href="#[822]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_ccp_alloc_call_entry
<LI><a href="#[820]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_ccp_update_link_call_status
<LI><a href="#[81d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_ccp_trigger_call_ringtone
<LI><a href="#[816]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_if_fm_lcis_handle
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_lea_ccp.o(.text)
</UL>
<P><STRONG><a name="[828]"></a>app_lea_cpp_get_active_call_entry</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, app_lea_ccp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = app_lea_cpp_get_active_call_entry
</UL>
<BR>[Called By]<UL><LI><a href="#[82a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_ccp_accept_hold_or_wait_call
<LI><a href="#[827]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_ccp_release_active_call
</UL>

<P><STRONG><a name="[5b]"></a>app_lea_mcp_ble_audio_cback</STRONG> (Thumb, 236 bytes, Stack size 40 bytes, app_lea_mcp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = app_lea_mcp_ble_audio_cback &rArr; mcp_client_cfg_cccd &rArr; gatt_client_enable_char_cccd &rArr; gatt_client_check_req &rArr; gatt_client_execute_req
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_find_le_link_by_conn_handle
<LI><a href="#[82e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcp_client_read_char_value
<LI><a href="#[82d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcp_client_cfg_cccd
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_lea_mcp.o(.text)
</UL>
<P><STRONG><a name="[5c]"></a>app_lea_pacs_ble_audio_cback</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, app_lea_pacs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = app_lea_pacs_ble_audio_cback &rArr; pacs_available_contexts_read_cfm &rArr; gatt_svc_read_confirm
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_find_le_link_by_conn_handle
<LI><a href="#[832]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pacs_available_contexts_read_cfm
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_lea_pacs.o(.text)
</UL>
<P><STRONG><a name="[833]"></a>app_lea_pacs_set_pac</STRONG> (Thumb, 146 bytes, Stack size 56 bytes, app_lea_pacs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = app_lea_pacs_set_pac &rArr; app_lea_pacs_frame_len_setting &rArr; app_lea_pacs_update_frame_len
</UL>
<BR>[Calls]<UL><LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
<LI><a href="#[835]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_pacs_update_pac
<LI><a href="#[834]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_pacs_frame_len_setting
</UL>
<BR>[Called By]<UL><LI><a href="#[838]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_pacs_init
</UL>

<P><STRONG><a name="[834]"></a>app_lea_pacs_frame_len_setting</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, app_lea_pacs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = app_lea_pacs_frame_len_setting &rArr; app_lea_pacs_update_frame_len
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[83b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_pacs_update_frame_len
</UL>
<BR>[Called By]<UL><LI><a href="#[833]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_pacs_set_pac
</UL>

<P><STRONG><a name="[835]"></a>app_lea_pacs_update_pac</STRONG> (Thumb, 100 bytes, Stack size 20 bytes, app_lea_pacs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = app_lea_pacs_update_pac
</UL>
<BR>[Called By]<UL><LI><a href="#[833]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_pacs_set_pac
</UL>

<P><STRONG><a name="[83b]"></a>app_lea_pacs_update_frame_len</STRONG> (Thumb, 92 bytes, Stack size 24 bytes, app_lea_pacs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = app_lea_pacs_update_frame_len
</UL>
<BR>[Calls]<UL><LI><a href="#[83c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_preferred_cfg_get
</UL>
<BR>[Called By]<UL><LI><a href="#[834]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_pacs_frame_len_setting
</UL>

<P><STRONG><a name="[83d]"></a>app_lea_scan_filter_service_data</STRONG> (Thumb, 110 bytes, Stack size 32 bytes, app_lea_scan.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = app_lea_scan_filter_service_data
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[83e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_scan_report
</UL>

<P><STRONG><a name="[83e]"></a>app_lea_scan_report</STRONG> (Thumb, 306 bytes, Stack size 56 bytes, app_lea_scan.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = app_lea_scan_report &rArr; app_lea_bca_scan_info &rArr; app_lea_bca_bs_handle_pa_info_sync &rArr; app_lea_bca_sink_add_device &rArr; app_lea_bca_db_add_sink &rArr; app_lea_bca_pa_sync &rArr; ble_audio_sync_allocate &rArr; ble_audio_sync_create_int &rArr; ble_audio_sync_find
</UL>
<BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_get_state
<LI><a href="#[5c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_state
<LI><a href="#[83f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_scan_info
<LI><a href="#[83d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_scan_filter_service_data
</UL>
<BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_scan_cb
</UL>

<P><STRONG><a name="[5d]"></a>app_lea_scan_cb</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, app_lea_scan.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = app_lea_scan_cb &rArr; app_lea_scan_report &rArr; app_lea_bca_scan_info &rArr; app_lea_bca_bs_handle_pa_info_sync &rArr; app_lea_bca_sink_add_device &rArr; app_lea_bca_db_add_sink &rArr; app_lea_bca_pa_sync &rArr; ble_audio_sync_allocate &rArr; ble_audio_sync_create_int &rArr; ble_audio_sync_find
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[83e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_scan_report
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_lea_scan.o(.text)
</UL>
<P><STRONG><a name="[5e]"></a>app_lea_vcs_ble_audio_cback</STRONG> (Thumb, 90 bytes, Stack size 32 bytes, app_lea_vcs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = app_lea_vcs_ble_audio_cback &rArr; app_link_find_le_link_by_conn_id
</UL>
<BR>[Calls]<UL><LI><a href="#[844]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_get_conn_id_by_handle
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_find_le_link_by_conn_id
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_lea_vcs.o(.text)
</UL>
<P><STRONG><a name="[853]"></a>app_lea_mgr_bca_mmi_handle</STRONG> (Thumb, 276 bytes, Stack size 32 bytes, app_lea_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 664<LI>Call Chain = app_lea_mgr_bca_mmi_handle &rArr; app_lea_bca_bmr_terminate &rArr; app_lea_bca_sm &rArr; app_lea_bca_state_idle &rArr; app_audio_tone_type_play &rArr; voice_prompt_play &rArr; notification_push &rArr; notification_play &rArr; notification_path_start &rArr; notification_start_vp &rArr; audio_path_start &rArr; audio_path_schedule &rArr; audio_path_voice_start &rArr; dsp_mgr_session_enable &rArr; dsp_state_machine &rArr; dsp_power_on &rArr; dsp_hal_reset &rArr; shm_enable &rArr; h2d_cmd_send &rArr; shm_cmd_send &rArr; wr_queue_send
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_get_call_status
<LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_auto_power_off_disable
<LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_tone_type_play
<LI><a href="#[499]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sniff_mode_b2s_disable_all
<LI><a href="#[5c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_state
<LI><a href="#[859]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_stream_switch
<LI><a href="#[85a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_set_beep
<LI><a href="#[857]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_if_fm_lbis_handle
<LI><a href="#[856]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_get_beep
<LI><a href="#[855]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_get_b2s_sniff_status
<LI><a href="#[854]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_get_b2d_sniff_status
<LI><a href="#[858]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_sm
<LI><a href="#[85b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_bmr_terminate
</UL>
<BR>[Called By]<UL><LI><a href="#[50b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_mgr_mmi_handle
</UL>

<P><STRONG><a name="[61]"></a>app_lea_mgr_timeout_cb</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, app_lea_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = app_lea_mgr_timeout_cb
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_lea_mgr.o(.text)
</UL>
<P><STRONG><a name="[5f]"></a>app_lea_mgr_direct_cback</STRONG> (Thumb, 94 bytes, Stack size 24 bytes, app_lea_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 776<LI>Call Chain = app_lea_mgr_direct_cback &rArr; app_lea_uca_handle_iso_data &rArr; audio_track_write &rArr; media_buffer_ds_write &rArr; audio_mgr_dispatch &rArr; audio_mgr_buffer_event_handle &rArr; audio_buffer_playing_state &rArr; audio_track_restart &rArr; audio_session_state_set &rArr;  audio_mgr_dispatch (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[85f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_iso_data_cfm
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[7c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_get_stream_link
<LI><a href="#[860]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;synclk_drv_time_get
<LI><a href="#[861]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_handle_iso_data
<LI><a href="#[862]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_handle_iso_data
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_lea_mgr.o(.text)
</UL>
<P><STRONG><a name="[60]"></a>app_lea_mgr_probe_cback</STRONG> (Thumb, 132 bytes, Stack size 48 bytes, app_lea_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = app_lea_mgr_probe_cback &rArr; audio_probe_dsp_send &rArr; h2d_cmd_send &rArr; shm_cmd_send &rArr; wr_queue_send
</UL>
<BR>[Calls]<UL><LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calloc
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[650]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_probe_dsp_send
<LI><a href="#[81a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_ascs_find_ase_entry_non_conn
<LI><a href="#[865]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_get_le_iso_sync_ref_ap_info
<LI><a href="#[864]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_get_diff_path
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_lea_mgr.o(.text)
</UL>
<P><STRONG><a name="[86c]"></a>app_lea_profile_bap_init</STRONG> (Thumb, 108 bytes, Stack size 24 bytes, app_lea_profile.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = app_lea_profile_bap_init &rArr; bap_role_init &rArr; ascs_init &rArr; ascs_add_service &rArr; gatt_svc_add &rArr; calloc
</UL>
<BR>[Calls]<UL><LI><a href="#[870]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bap_role_init
</UL>
<BR>[Called By]<UL><LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_profile_init
</UL>

<P><STRONG><a name="[871]"></a>app_lea_uca_bond_action</STRONG> (Thumb, 224 bytes, Stack size 80 bytes, app_lea_unicast_audio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = app_lea_uca_bond_action &rArr; app_bond_set_priority &rArr; app_bond_b2s_addr_get
</UL>
<BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[463]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_relay_async_single_with_raw_msg
<LI><a href="#[46b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bond_set_priority
<LI><a href="#[5bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_index_get
<LI><a href="#[594]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_flag_get
<LI><a href="#[5ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_flag_remove
<LI><a href="#[600]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_flag_add
<LI><a href="#[5fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_delete
<LI><a href="#[5f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bond_key_set
</UL>
<BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_bond_cback
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_audio_cback
<LI><a href="#[89b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_link_idle
</UL>

<P><STRONG><a name="[873]"></a>app_lea_uca_send_iso_data</STRONG> (Thumb, 290 bytes, Stack size 64 bytes, app_lea_unicast_audio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = app_lea_uca_send_iso_data &rArr; audio_probe_media_buffer_malloc &rArr; media_buffer_get
</UL>
<BR>[Calls]<UL><LI><a href="#[874]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_iso_send_data
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[850]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_probe_media_buffer_malloc
<LI><a href="#[84e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_probe_media_buffer_free
<LI><a href="#[860]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;synclk_drv_time_get
</UL>
<BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_audio_cback
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_record_read_cb
</UL>

<P><STRONG><a name="[876]"></a>app_lea_uca_handle_ccp_term</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, app_lea_unicast_audio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1244<LI>Call Chain = app_lea_uca_handle_ccp_term &rArr; mtc_topology_dm &rArr;  app_lea_uca_link_sm (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[479]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sidetone_disable
<LI><a href="#[45e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_volume_in_unmute
<LI><a href="#[476]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_stream_type_get
<LI><a href="#[539]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_topology_dm
<LI><a href="#[81a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_ascs_find_ase_entry_non_conn
<LI><a href="#[875]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_check_enable_mic
</UL>
<BR>[Called By]<UL><LI><a href="#[899]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_link_connected
<LI><a href="#[898]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_link_streaming
</UL>

<P><STRONG><a name="[877]"></a>app_lea_uca_stop_inactive_stream</STRONG> (Thumb, 110 bytes, Stack size 32 bytes, app_lea_unicast_audio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = app_lea_uca_stop_inactive_stream &rArr; mcp_client_write_media_cp &rArr; gatt_client_write &rArr; gattc_storage_check_prop &rArr; gattc_storage_find_char_desc
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[830]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcp_client_write_media_cp
</UL>
<BR>[Called By]<UL><LI><a href="#[899]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_link_connected
<LI><a href="#[879]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_handle_mcp_state
<LI><a href="#[878]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_handle_ccp_state
</UL>

<P><STRONG><a name="[878]"></a>app_lea_uca_handle_ccp_state</STRONG> (Thumb, 96 bytes, Stack size 8 bytes, app_lea_unicast_audio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1236<LI>Call Chain = app_lea_uca_handle_ccp_state &rArr; mtc_topology_dm &rArr;  app_lea_uca_link_sm (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[539]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_topology_dm
<LI><a href="#[6d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sidetone_enable
<LI><a href="#[81a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_ascs_find_ase_entry_non_conn
<LI><a href="#[877]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_stop_inactive_stream
<LI><a href="#[859]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_stream_switch
</UL>
<BR>[Called By]<UL><LI><a href="#[899]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_link_connected
<LI><a href="#[898]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_link_streaming
</UL>

<P><STRONG><a name="[879]"></a>app_lea_uca_handle_mcp_state</STRONG> (Thumb, 214 bytes, Stack size 16 bytes, app_lea_unicast_audio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1244 + In Cycle
<LI>Call Chain = app_lea_uca_handle_mcp_state &rArr;  app_multi_preemptive_judge (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_get_btmode
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_ccp_get_call_status
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_get_call_status
<LI><a href="#[477]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_state_get
<LI><a href="#[5ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sass_preempt_policy
<LI><a href="#[5a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_preemptive_judge
<LI><a href="#[59c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_notify_conn_status
<LI><a href="#[539]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_topology_dm
<LI><a href="#[82f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_mcp_set_active_conn_handle
<LI><a href="#[87a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_restart
<LI><a href="#[872]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_set_stream_link
<LI><a href="#[877]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_stop_inactive_stream
<LI><a href="#[859]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_stream_switch
</UL>
<BR>[Called By]<UL><LI><a href="#[899]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_link_connected
<LI><a href="#[898]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_link_streaming
</UL>

<P><STRONG><a name="[87b]"></a>app_lea_uca_handle_avrcp_playing</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, app_lea_unicast_audio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1252<LI>Call Chain = app_lea_uca_handle_avrcp_playing &rArr; mtc_topology_dm &rArr;  app_lea_uca_link_sm (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[539]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_topology_dm
<LI><a href="#[830]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcp_client_write_media_cp
<LI><a href="#[814]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_ascs_find_ase_entry
</UL>
<BR>[Called By]<UL><LI><a href="#[899]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_link_connected
<LI><a href="#[898]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_link_streaming
</UL>

<P><STRONG><a name="[87d]"></a>app_lea_uca_release_ascs_action</STRONG> (Thumb, 120 bytes, Stack size 48 bytes, app_lea_unicast_audio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 496<LI>Call Chain = app_lea_uca_release_ascs_action &rArr; app_lea_ascs_free_ase_entry &rArr; audio_track_release &rArr; audio_session_state_set &rArr;  audio_mgr_dispatch (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_ccp_get_call_status
<LI><a href="#[629]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sidetone_detach
<LI><a href="#[628]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_nrec_detach
<LI><a href="#[817]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_ascs_free_ase_entry
<LI><a href="#[814]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_ascs_find_ase_entry
<LI><a href="#[880]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;syncclk_drv_timer_stop
<LI><a href="#[87e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ascs_get_ase_data
<LI><a href="#[87f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ascs_action_release_by_cig
<LI><a href="#[87c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_eq_release
<LI><a href="#[881]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_track_sync_reset
<LI><a href="#[882]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_link_state_change
</UL>
<BR>[Called By]<UL><LI><a href="#[899]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_link_connected
<LI><a href="#[898]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_link_streaming
</UL>

<P><STRONG><a name="[883]"></a>app_lea_uca_ase_ctrl</STRONG> (Thumb, 294 bytes, Stack size 32 bytes, app_lea_unicast_audio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 480<LI>Call Chain = app_lea_uca_ase_ctrl &rArr; app_lea_ascs_free_ase_entry &rArr; audio_track_release &rArr; audio_session_state_set &rArr;  audio_mgr_dispatch (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[477]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_state_get
<LI><a href="#[453]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_start
<LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_a2dp_get_active_idx
<LI><a href="#[5b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_stop
<LI><a href="#[629]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sidetone_detach
<LI><a href="#[628]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_nrec_detach
<LI><a href="#[817]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_ascs_free_ase_entry
<LI><a href="#[814]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_ascs_find_ase_entry
<LI><a href="#[880]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;syncclk_drv_timer_stop
<LI><a href="#[87c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_eq_release
<LI><a href="#[881]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_track_sync_reset
<LI><a href="#[882]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_link_state_change
</UL>
<BR>[Called By]<UL><LI><a href="#[899]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_link_connected
<LI><a href="#[898]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_link_streaming
</UL>

<P><STRONG><a name="[884]"></a>app_lea_uca_remove_data_path</STRONG> (Thumb, 250 bytes, Stack size 24 bytes, app_lea_unicast_audio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1252<LI>Call Chain = app_lea_uca_remove_data_path &rArr; mtc_topology_dm &rArr;  app_lea_uca_link_sm (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_ccp_get_call_status
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_auto_power_off_enable
<LI><a href="#[49b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sniff_mode_b2s_enable_all
<LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_a2dp_get_active_idx
<LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_point_link_num_changed
<LI><a href="#[5a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_qos_param_update
<LI><a href="#[53d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_release
<LI><a href="#[548]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_disallow_legacy_stream
<LI><a href="#[539]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_topology_dm
<LI><a href="#[814]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_ascs_find_ase_entry
<LI><a href="#[880]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;syncclk_drv_timer_stop
<LI><a href="#[872]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_set_stream_link
<LI><a href="#[881]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_track_sync_reset
<LI><a href="#[885]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_mgr_set_media_state
<LI><a href="#[84d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_mgr_clear_iso_queue
</UL>
<BR>[Called By]<UL><LI><a href="#[899]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_link_connected
<LI><a href="#[898]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_link_streaming
</UL>

<P><STRONG><a name="[62]"></a>app_lea_uca_record_read_cb</STRONG> (Thumb, 54 bytes, Stack size 32 bytes, app_lea_unicast_audio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = app_lea_uca_record_read_cb &rArr; app_lea_uca_send_iso_data &rArr; audio_probe_media_buffer_malloc &rArr; media_buffer_get
</UL>
<BR>[Calls]<UL><LI><a href="#[852]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_ccp_get_active_conn_handle
<LI><a href="#[814]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_ascs_find_ase_entry
<LI><a href="#[873]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_send_iso_data
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_lea_unicast_audio.o(.text)
</UL>
<P><STRONG><a name="[886]"></a>app_lea_uca_track_create</STRONG> (Thumb, 516 bytes, Stack size 96 bytes, app_lea_unicast_audio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 656<LI>Call Chain = app_lea_uca_track_create &rArr; audio_track_volume_out_unmute &rArr; audio_mgr_dispatch &rArr; audio_mgr_buffer_event_handle &rArr; audio_buffer_playing_state &rArr; audio_track_restart &rArr; audio_session_state_set &rArr;  audio_mgr_dispatch (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[446]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_volume_out_unmute
<LI><a href="#[453]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_start
<LI><a href="#[53d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_release
<LI><a href="#[4f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_volume_out_mute
<LI><a href="#[62f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_create
<LI><a href="#[826]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ccp_client_read_char_value
<LI><a href="#[88c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;syncclk_drv_timer_start
<LI><a href="#[887]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_vol_gain_get
<LI><a href="#[88a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_pop
<LI><a href="#[888]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_is_input_path_enabled
<LI><a href="#[889]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_is_voice_track_existed
<LI><a href="#[88b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_track_set_format_info
<LI><a href="#[88d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_mapping_voice_track
<LI><a href="#[885]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_mgr_set_media_state
</UL>
<BR>[Called By]<UL><LI><a href="#[8a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_enable_mic
<LI><a href="#[88e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_setup_data_path
</UL>

<P><STRONG><a name="[88e]"></a>app_lea_uca_setup_data_path</STRONG> (Thumb, 146 bytes, Stack size 24 bytes, app_lea_unicast_audio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1140<LI>Call Chain = app_lea_uca_setup_data_path &rArr; app_gfps_notify_conn_status &rArr; app_gfps_adv_update_conn_status &rArr; app_gfps_device_check_state &rArr; app_gfps_enter_nondiscoverable_mode &rArr; app_gfps_next_action &rArr; app_gfps_battery_info_report &rArr; app_gfps_battery_set_info &rArr; gfps_gen_adv_data &rArr; gfps_sass_get_encrypt_conn_status &rArr; sha256_hkdf &rArr; hmac_sha256_crypt &rArr; hmac_sha256_finish &rArr; mbedtls_sha256_update &rArr; mbedtls_sha256_update_ret &rArr; mbedtls_internal_sha256_process
</UL>
<BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_ccp_get_call_status
<LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_auto_power_off_disable
<LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_point_link_num_changed
<LI><a href="#[5bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_bond_index_get
<LI><a href="#[59c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_notify_conn_status
<LI><a href="#[82f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_mcp_set_active_conn_handle
<LI><a href="#[814]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_ascs_find_ase_entry
<LI><a href="#[872]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_set_stream_link
<LI><a href="#[886]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_track_create
</UL>
<BR>[Called By]<UL><LI><a href="#[899]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_link_connected
<LI><a href="#[898]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_link_streaming
</UL>

<P><STRONG><a name="[88f]"></a>app_lea_uca_prefer_qos</STRONG> (Thumb, 170 bytes, Stack size 48 bytes, app_lea_unicast_audio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = app_lea_uca_prefer_qos &rArr; app_lea_ascs_find_ase_entry &rArr; app_lea_ascs_check_ase_condition &rArr; audio_track_device_get &rArr; audio_track_handle_check
</UL>
<BR>[Calls]<UL><LI><a href="#[814]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_ascs_find_ase_entry
<LI><a href="#[890]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qos_preferred_cfg_get_by_codec
<LI><a href="#[891]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ascs_get_ase_prefer_qos
<LI><a href="#[892]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ascs_cfg_ase_prefer_qos
</UL>
<BR>[Called By]<UL><LI><a href="#[899]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_link_connected
<LI><a href="#[898]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_link_streaming
</UL>

<P><STRONG><a name="[893]"></a>app_lea_uca_adjust_active_handle_by_connection</STRONG> (Thumb, 226 bytes, Stack size 16 bytes, app_lea_unicast_audio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1132<LI>Call Chain = app_lea_uca_adjust_active_handle_by_connection &rArr; app_gfps_notify_conn_status &rArr; app_gfps_adv_update_conn_status &rArr; app_gfps_device_check_state &rArr; app_gfps_enter_nondiscoverable_mode &rArr; app_gfps_next_action &rArr; app_gfps_battery_info_report &rArr; app_gfps_battery_set_info &rArr; gfps_gen_adv_data &rArr; gfps_sass_get_encrypt_conn_status &rArr; sha256_hkdf &rArr; hmac_sha256_crypt &rArr; hmac_sha256_finish &rArr; mbedtls_sha256_update &rArr; mbedtls_sha256_update_ret &rArr; mbedtls_internal_sha256_process
</UL>
<BR>[Calls]<UL><LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_find_le_link_by_conn_handle
<LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_get_lea_link_num
<LI><a href="#[59c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_notify_conn_status
<LI><a href="#[5df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_mcp_get_active_conn_handle
<LI><a href="#[82f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_mcp_set_active_conn_handle
<LI><a href="#[894]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_mcp_reset_active_conn_handle
<LI><a href="#[895]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_ccp_reset_active_conn_handle
<LI><a href="#[852]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_ccp_get_active_conn_handle
<LI><a href="#[81e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_ccp_set_active_conn_handle
</UL>
<BR>[Called By]<UL><LI><a href="#[89b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_link_idle
<LI><a href="#[896]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_handle_le_disconnect
</UL>

<P><STRONG><a name="[896]"></a>app_lea_uca_handle_le_disconnect</STRONG> (Thumb, 144 bytes, Stack size 16 bytes, app_lea_unicast_audio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1244<LI>Call Chain = app_lea_uca_handle_le_disconnect &rArr; mtc_topology_dm &rArr;  app_lea_uca_link_sm (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_tone_type_play
<LI><a href="#[3de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_point_link_tone_set
<LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_point_link_num_changed
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_gap_disconnect
<LI><a href="#[539]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_topology_dm
<LI><a href="#[5dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_adv_update
<LI><a href="#[67a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_msg_prof_disconn
<LI><a href="#[81f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_ccp_update_call_status
<LI><a href="#[803]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_adv_linkback_set
<LI><a href="#[897]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_free_link
<LI><a href="#[882]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_link_state_change
<LI><a href="#[893]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_adjust_active_handle_by_connection
</UL>
<BR>[Called By]<UL><LI><a href="#[899]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_link_connected
<LI><a href="#[898]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_link_streaming
</UL>

<P><STRONG><a name="[898]"></a>app_lea_uca_link_streaming</STRONG> (Thumb, 402 bytes, Stack size 40 bytes, app_lea_unicast_audio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1292<LI>Call Chain = app_lea_uca_link_streaming &rArr; app_lea_uca_remove_data_path &rArr; mtc_topology_dm &rArr;  app_lea_uca_link_sm (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_ccp_get_call_status
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_get_call_status
<LI><a href="#[539]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_topology_dm
<LI><a href="#[830]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcp_client_write_media_cp
<LI><a href="#[82b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_ccp_read_all_links_state
<LI><a href="#[814]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_ascs_find_ase_entry
<LI><a href="#[896]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_handle_le_disconnect
<LI><a href="#[88f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_prefer_qos
<LI><a href="#[88e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_setup_data_path
<LI><a href="#[884]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_remove_data_path
<LI><a href="#[883]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_ase_ctrl
<LI><a href="#[87d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_release_ascs_action
<LI><a href="#[87b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_handle_avrcp_playing
<LI><a href="#[879]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_handle_mcp_state
<LI><a href="#[878]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_handle_ccp_state
<LI><a href="#[876]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_handle_ccp_term
</UL>
<BR>[Called By]<UL><LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_link_sm
</UL>

<P><STRONG><a name="[899]"></a>app_lea_uca_link_connected</STRONG> (Thumb, 618 bytes, Stack size 48 bytes, app_lea_unicast_audio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1300<LI>Call Chain = app_lea_uca_link_connected &rArr; app_lea_uca_remove_data_path &rArr; mtc_topology_dm &rArr;  app_lea_uca_link_sm (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_get_call_status
<LI><a href="#[499]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sniff_mode_b2s_disable_all
<LI><a href="#[477]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_state_get
<LI><a href="#[453]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_start
<LI><a href="#[539]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_topology_dm
<LI><a href="#[5df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_mcp_get_active_conn_handle
<LI><a href="#[830]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcp_client_write_media_cp
<LI><a href="#[82b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_ccp_read_all_links_state
<LI><a href="#[852]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_ccp_get_active_conn_handle
<LI><a href="#[818]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ascs_app_ctl_handshake
<LI><a href="#[814]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_ascs_find_ase_entry
<LI><a href="#[89a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ascs_action_rec_start_ready
<LI><a href="#[872]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_set_stream_link
<LI><a href="#[882]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_link_state_change
<LI><a href="#[896]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_handle_le_disconnect
<LI><a href="#[88f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_prefer_qos
<LI><a href="#[88e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_setup_data_path
<LI><a href="#[884]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_remove_data_path
<LI><a href="#[883]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_ase_ctrl
<LI><a href="#[87d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_release_ascs_action
<LI><a href="#[87b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_handle_avrcp_playing
<LI><a href="#[879]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_handle_mcp_state
<LI><a href="#[878]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_handle_ccp_state
<LI><a href="#[877]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_stop_inactive_stream
<LI><a href="#[876]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_handle_ccp_term
<LI><a href="#[859]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_stream_switch
</UL>
<BR>[Called By]<UL><LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_link_sm
</UL>

<P><STRONG><a name="[89b]"></a>app_lea_uca_link_idle</STRONG> (Thumb, 368 bytes, Stack size 24 bytes, app_lea_unicast_audio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1252 + In Cycle
<LI>Call Chain = app_lea_uca_link_idle &rArr;  app_mmi_handle_action (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_roleswap_ctrl_check
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_handle_action
<LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_tone_type_play
<LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_relay_async_single
<LI><a href="#[49b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sniff_mode_b2s_enable_all
<LI><a href="#[463]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_relay_async_single_with_raw_msg
<LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sass_handle_le_dm
<LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_sniffing_param_update
<LI><a href="#[3de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_point_link_tone_set
<LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_point_link_tone_get
<LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_point_link_num_changed
<LI><a href="#[544]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_point_lea_link_is_full
<LI><a href="#[539]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_topology_dm
<LI><a href="#[6d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_vendor_send_psd_policy
<LI><a href="#[720]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_adv_start
<LI><a href="#[63a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_speaker_channel_set
<LI><a href="#[687]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bond_le_set_bond_flag
<LI><a href="#[679]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_msg_prof_conn
<LI><a href="#[89c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_adv_get_state
<LI><a href="#[80f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_adv_update_interval
<LI><a href="#[80d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_adv_stop
<LI><a href="#[882]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_link_state_change
<LI><a href="#[893]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_adjust_active_handle_by_connection
<LI><a href="#[871]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_bond_action
</UL>
<BR>[Called By]<UL><LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_link_sm
</UL>

<P><STRONG><a name="[66]"></a>app_lea_uca_le_disconnect_cb</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, app_lea_unicast_audio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1372<LI>Call Chain = app_lea_uca_le_disconnect_cb &rArr; app_lea_uca_link_sm &rArr; app_lea_uca_link_connected &rArr; app_lea_uca_remove_data_path &rArr; mtc_topology_dm &rArr;  app_lea_uca_link_sm (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_remote_device_name_crc_set
<LI><a href="#[426]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_le_common_adv_update
<LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_find_le_link_by_conn_id
<LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_link_sm
<LI><a href="#[720]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_adv_start
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_lea_unicast_audio.o(.text)
</UL>
<P><STRONG><a name="[89e]"></a>app_lea_uca_track_reconfig_write_length</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, app_lea_unicast_audio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = app_lea_uca_track_reconfig_write_length
</UL>
<BR>[Calls]<UL><LI><a href="#[88a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_pop
</UL>
<BR>[Called By]<UL><LI><a href="#[89f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_handle_ascs_msg
</UL>

<P><STRONG><a name="[89f]"></a>app_lea_uca_handle_ascs_msg</STRONG> (Thumb, 730 bytes, Stack size 72 bytes, app_lea_unicast_audio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1492<LI>Call Chain = app_lea_uca_handle_ascs_msg &rArr; app_multi_preemptive_judge &rArr;  app_multi_active_hfp_transfer (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_ccp_get_call_status
<LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_find_le_link_by_conn_handle
<LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_link_sm
<LI><a href="#[5ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sass_preempt_policy
<LI><a href="#[5a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_multi_preemptive_judge
<LI><a href="#[59c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gfps_notify_conn_status
<LI><a href="#[5df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_mcp_get_active_conn_handle
<LI><a href="#[830]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcp_client_write_media_cp
<LI><a href="#[852]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_ccp_get_active_conn_handle
<LI><a href="#[816]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_if_fm_lcis_handle
<LI><a href="#[814]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_ascs_find_ase_entry
<LI><a href="#[7c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sass_policy_context_to_conn_state
<LI><a href="#[872]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_set_stream_link
<LI><a href="#[89e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_track_reconfig_write_length
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_ble_audio_cback
</UL>

<P><STRONG><a name="[8a0]"></a>app_lea_uca_handle_ccp_msg</STRONG> (Thumb, 234 bytes, Stack size 32 bytes, app_lea_unicast_audio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1380<LI>Call Chain = app_lea_uca_handle_ccp_msg &rArr; app_lea_uca_link_sm &rArr; app_lea_uca_link_connected &rArr; app_lea_uca_remove_data_path &rArr; mtc_topology_dm &rArr;  app_lea_uca_link_sm (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_find_le_link_by_conn_handle
<LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_link_sm
<LI><a href="#[816]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_if_fm_lcis_handle
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_ble_audio_cback
</UL>

<P><STRONG><a name="[65]"></a>app_lea_uca_ble_audio_cback</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, app_lea_unicast_audio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1492<LI>Call Chain = app_lea_uca_ble_audio_cback &rArr; app_lea_uca_handle_ascs_msg &rArr; app_multi_preemptive_judge &rArr;  app_multi_active_hfp_transfer (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[8a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_handle_mcp_msg
<LI><a href="#[8a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_handle_cccd_msg
<LI><a href="#[8a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_handle_ccp_msg
<LI><a href="#[89f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_handle_ascs_msg
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_lea_unicast_audio.o(.text)
</UL>
<P><STRONG><a name="[8a5]"></a>app_lea_uca_check_combination_iso_data</STRONG> (Thumb, 210 bytes, Stack size 56 bytes, app_lea_unicast_audio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = app_lea_uca_check_combination_iso_data &rArr; app_lea_mgr_find_iso_elem &rArr; audio_probe_media_buffer_free &rArr; media_buffer_put
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[851]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_mgr_find_iso_elem
<LI><a href="#[84f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_mgr_enqueue_iso_data
</UL>
<BR>[Called By]<UL><LI><a href="#[861]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_handle_iso_data
</UL>

<P><STRONG><a name="[64]"></a>app_lea_uca_audio_cback</STRONG> (Thumb, 476 bytes, Stack size 56 bytes, app_lea_unicast_audio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 760<LI>Call Chain = app_lea_uca_audio_cback &rArr; app_lea_vol_update_track_volume &rArr; app_harman_lr_balance_set &rArr; audio_volume_balance_set &rArr; audio_mgr_dispatch &rArr; audio_mgr_buffer_event_handle &rArr; audio_buffer_playing_state &rArr; audio_track_restart &rArr; audio_session_state_set &rArr;  audio_mgr_dispatch (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_ccp_get_call_status
<LI><a href="#[45e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_volume_in_unmute
<LI><a href="#[484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_volume_in_mute
<LI><a href="#[476]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_stream_type_get
<LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_find_le_link_by_conn_handle
<LI><a href="#[63c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_write
<LI><a href="#[62a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_read
<LI><a href="#[629]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sidetone_detach
<LI><a href="#[627]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sidetone_attach
<LI><a href="#[628]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_nrec_detach
<LI><a href="#[626]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_nrec_attach
<LI><a href="#[5df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_mcp_get_active_conn_handle
<LI><a href="#[850]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_probe_media_buffer_malloc
<LI><a href="#[84e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_probe_media_buffer_free
<LI><a href="#[852]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_ccp_get_active_conn_handle
<LI><a href="#[81a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_ascs_find_ase_entry_non_conn
<LI><a href="#[814]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_ascs_find_ase_entry
<LI><a href="#[8a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_playback_eq_setting
<LI><a href="#[875]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_check_enable_mic
<LI><a href="#[873]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_send_iso_data
<LI><a href="#[871]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_bond_action
<LI><a href="#[85d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_vol_update_track_volume
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_lea_unicast_audio.o(.text)
</UL>
<P><STRONG><a name="[63]"></a>app_lea_uca_bond_cback</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, app_lea_unicast_audio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = app_lea_uca_bond_cback &rArr; app_lea_uca_bond_action &rArr; app_bond_set_priority &rArr; app_bond_b2s_addr_get
</UL>
<BR>[Calls]<UL><LI><a href="#[871]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_bond_action
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_lea_unicast_audio.o(.text)
</UL>
<P><STRONG><a name="[882]"></a>app_lea_uca_link_state_change</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, app_lea_unicast_audio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = app_lea_uca_link_state_change
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[89b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_link_idle
<LI><a href="#[899]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_link_connected
<LI><a href="#[896]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_handle_le_disconnect
<LI><a href="#[883]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_ase_ctrl
<LI><a href="#[87d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_release_ascs_action
</UL>

<P><STRONG><a name="[881]"></a>app_lea_uca_track_sync_reset</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, app_lea_unicast_audio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = app_lea_uca_track_sync_reset &rArr; audio_track_stream_type_get &rArr; audio_track_handle_check
</UL>
<BR>[Calls]<UL><LI><a href="#[476]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_stream_type_get
</UL>
<BR>[Called By]<UL><LI><a href="#[897]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_free_link
<LI><a href="#[884]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_remove_data_path
<LI><a href="#[883]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_ase_ctrl
<LI><a href="#[87d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_release_ascs_action
</UL>

<P><STRONG><a name="[88d]"></a>app_lea_uca_mapping_voice_track</STRONG> (Thumb, 100 bytes, Stack size 12 bytes, app_lea_unicast_audio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = app_lea_uca_mapping_voice_track
</UL>
<BR>[Called By]<UL><LI><a href="#[886]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_track_create
</UL>

<P><STRONG><a name="[88b]"></a>app_lea_uca_track_set_format_info</STRONG> (Thumb, 100 bytes, Stack size 40 bytes, app_lea_unicast_audio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = app_lea_uca_track_set_format_info
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[886]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_track_create
</UL>

<P><STRONG><a name="[889]"></a>app_lea_uca_is_voice_track_existed</STRONG> (Thumb, 92 bytes, Stack size 12 bytes, app_lea_unicast_audio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = app_lea_uca_is_voice_track_existed
</UL>
<BR>[Called By]<UL><LI><a href="#[886]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_track_create
</UL>

<P><STRONG><a name="[888]"></a>app_lea_uca_is_input_path_enabled</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, app_lea_unicast_audio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[8a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_is_upstreaming_enabled
<LI><a href="#[886]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_track_create
</UL>

<P><STRONG><a name="[897]"></a>app_lea_uca_free_link</STRONG> (Thumb, 138 bytes, Stack size 16 bytes, app_lea_unicast_audio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 456<LI>Call Chain = app_lea_uca_free_link &rArr; audio_track_release &rArr; audio_session_state_set &rArr;  audio_mgr_dispatch (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[53d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_release
<LI><a href="#[629]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sidetone_detach
<LI><a href="#[628]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_nrec_detach
<LI><a href="#[880]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;syncclk_drv_timer_stop
<LI><a href="#[8a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ascs_action_release
<LI><a href="#[87c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_eq_release
<LI><a href="#[881]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_track_sync_reset
</UL>
<BR>[Called By]<UL><LI><a href="#[896]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_handle_le_disconnect
</UL>

<P><STRONG><a name="[8a1]"></a>app_lea_uca_handle_cccd_msg</STRONG> (Thumb, 120 bytes, Stack size 32 bytes, app_lea_unicast_audio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1380<LI>Call Chain = app_lea_uca_handle_cccd_msg &rArr; app_lea_uca_link_sm &rArr; app_lea_uca_link_connected &rArr; app_lea_uca_remove_data_path &rArr; mtc_topology_dm &rArr;  app_lea_uca_link_sm (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[844]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_get_conn_id_by_handle
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[53f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_reg_le_link_disc_cb
<LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_find_le_link_by_conn_id
<LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_link_sm
<LI><a href="#[8a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_adv_set_started_flag
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_ble_audio_cback
</UL>

<P><STRONG><a name="[8a2]"></a>app_lea_uca_handle_mcp_msg</STRONG> (Thumb, 176 bytes, Stack size 24 bytes, app_lea_unicast_audio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1372<LI>Call Chain = app_lea_uca_handle_mcp_msg &rArr; app_lea_uca_link_sm &rArr; app_lea_uca_link_connected &rArr; app_lea_uca_remove_data_path &rArr; mtc_topology_dm &rArr;  app_lea_uca_link_sm (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_find_le_link_by_conn_handle
<LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sass_handle_le_dm
<LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_link_sm
<LI><a href="#[89d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_handle_pending_mcp_cmd
<LI><a href="#[849]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_mgr_update_current_mcp_state
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_ble_audio_cback
</UL>

<P><STRONG><a name="[67]"></a>app_lea_vol_ble_audio_cback</STRONG> (Thumb, 84 bytes, Stack size 32 bytes, app_lea_vol_policy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 736<LI>Call Chain = app_lea_vol_ble_audio_cback &rArr; app_lea_vol_update_track_volume &rArr; app_harman_lr_balance_set &rArr; audio_volume_balance_set &rArr; audio_mgr_dispatch &rArr; audio_mgr_buffer_event_handle &rArr; audio_buffer_playing_state &rArr; audio_track_restart &rArr; audio_session_state_set &rArr;  audio_mgr_dispatch (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[85d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_vol_update_track_volume
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_lea_vol_policy.o(.text)
</UL>
<P><STRONG><a name="[6b]"></a>app_lea_bca_timeout_cb</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, app_lea_broadcast_audio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1644<LI>Call Chain = app_lea_bca_timeout_cb &rArr; app_lea_bca_poweroff_check &rArr; app_mmi_handle_action &rArr; app_multi_active_hfp_transfer &rArr; app_multi_handle_sniffing_link_disconnect_event &rArr; app_multi_judge_active_a2dp_idx_and_qos &rArr;  app_multi_handle_sniffing_link_disconnect_event (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_stop_timer
<LI><a href="#[8ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_poweroff_check
<LI><a href="#[858]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_sm
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_lea_broadcast_audio.o(.text)
</UL>
<P><STRONG><a name="[8d8]"></a>app_lea_bca_db_init</STRONG> (Thumb, 234 bytes, Stack size 16 bytes, app_lea_broadcast_audio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = app_lea_bca_db_init &rArr; mtc_cback_register &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[5bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_cback_register
</UL>
<BR>[Called By]<UL><LI><a href="#[86b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_init
</UL>

<P><STRONG><a name="[6c]"></a>app_lea_bca_le_disconnect_cb</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, app_lea_broadcast_audio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = app_lea_bca_le_disconnect_cb &rArr; app_lea_bca_reset_active
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_find_le_link_by_conn_id
<LI><a href="#[8e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_reset_active
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_lea_broadcast_audio.o(.text)
</UL>
<P><STRONG><a name="[8e5]"></a>app_lea_bca_handle_bass_msg</STRONG> (Thumb, 1380 bytes, Stack size 144 bytes, app_lea_broadcast_audio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1372<LI>Call Chain = app_lea_bca_handle_bass_msg &rArr; mtc_topology_dm &rArr;  app_lea_uca_link_sm (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_cfg_store
<LI><a href="#[499]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sniff_mode_b2s_disable_all
<LI><a href="#[539]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_topology_dm
<LI><a href="#[50b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_mgr_mmi_handle
<LI><a href="#[8e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_term_sd_sniffing
<LI><a href="#[8e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_check_call_sate
<LI><a href="#[8e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_sync_update_cb
<LI><a href="#[8b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_sync_release
<LI><a href="#[8e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_sync_get_info
<LI><a href="#[8c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_big_sync_establish
<LI><a href="#[8ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_cfg_prefer_bis_sync
<LI><a href="#[8e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_sd_set_active
<LI><a href="#[8e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_find_db_by_sync_handle
<LI><a href="#[8e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_find_db_by_handle
<LI><a href="#[8db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_find_sd_db
<LI><a href="#[8da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_bs_set_active
<LI><a href="#[8cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_remap_bis
<LI><a href="#[8c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_apply_sync_pera
<LI><a href="#[8b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_tgt_active
<LI><a href="#[8b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_bs_clear_device
<LI><a href="#[8b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_bs_reset
<LI><a href="#[8b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_state_change
<LI><a href="#[858]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_sm
</UL>
<BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_ble_audio_cback
</UL>

<P><STRONG><a name="[69]"></a>app_lea_bca_audio_cback</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, app_lea_broadcast_audio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 720<LI>Call Chain = app_lea_bca_audio_cback &rArr; app_lea_vol_update_track_volume &rArr; app_harman_lr_balance_set &rArr; audio_volume_balance_set &rArr; audio_mgr_dispatch &rArr; audio_mgr_buffer_event_handle &rArr; audio_buffer_playing_state &rArr; audio_track_restart &rArr; audio_session_state_set &rArr;  audio_mgr_dispatch (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_get_btmode
<LI><a href="#[66e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_p_eq_instance
<LI><a href="#[66d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_get_eq_abled
<LI><a href="#[8a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_playback_eq_setting
<LI><a href="#[85d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_vol_update_track_volume
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_lea_broadcast_audio.o(.text)
</UL>
<P><STRONG><a name="[6a]"></a>app_lea_bca_ble_audio_cback</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, app_lea_broadcast_audio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1380<LI>Call Chain = app_lea_bca_ble_audio_cback &rArr; app_lea_bca_handle_cccd_msg &rArr; app_lea_uca_link_sm &rArr; app_lea_uca_link_connected &rArr; app_lea_uca_remove_data_path &rArr; mtc_topology_dm &rArr;  app_lea_uca_link_sm (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[8eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_handle_cccd_msg
<LI><a href="#[8e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_handle_bass_msg
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_lea_broadcast_audio.o(.text)
</UL>
<P><STRONG><a name="[8ec]"></a>app_lea_bca_check_combination_iso_data</STRONG> (Thumb, 212 bytes, Stack size 56 bytes, app_lea_broadcast_audio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = app_lea_bca_check_combination_iso_data &rArr; app_lea_mgr_find_iso_elem &rArr; audio_probe_media_buffer_free &rArr; media_buffer_put
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[851]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_mgr_find_iso_elem
<LI><a href="#[84f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_mgr_enqueue_iso_data
</UL>
<BR>[Called By]<UL><LI><a href="#[862]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_handle_iso_data
</UL>

<P><STRONG><a name="[8ad]"></a>app_lea_bca_device_sniff</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, app_lea_broadcast_audio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = app_lea_bca_device_sniff &rArr; app_sniff_mode_b2s_enable_all &rArr; bt_sniff_mode_enable &rArr; bt_pm_sm &rArr; bt_sniff_mode_exit &rArr; sys_timer_restart &rArr; sys_hp_timer_list_insert &rArr; hw_timer_restart &rArr; hw_timer_safe_stop &rArr; hw_timer_set_div
</UL>
<BR>[Calls]<UL><LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_auto_power_off_enable
<LI><a href="#[49b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sniff_mode_b2s_enable_all
<LI><a href="#[499]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sniff_mode_b2s_disable_all
</UL>
<BR>[Called By]<UL><LI><a href="#[8ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_poweroff_check
</UL>

<P><STRONG><a name="[8d6]"></a>app_lea_bca_state_wait_retry</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, app_lea_broadcast_audio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208 + In Cycle
<LI>Call Chain = app_lea_bca_state_wait_retry &rArr;  mtc_topology_dm (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_update_cpu_freq
<LI><a href="#[548]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_disallow_legacy_stream
<LI><a href="#[539]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_topology_dm
<LI><a href="#[8ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_get_sd_source
<LI><a href="#[8b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_scan_stop
<LI><a href="#[8b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_tgt_active
<LI><a href="#[8b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_terminate
<LI><a href="#[8b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_bs_reset
<LI><a href="#[8b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_state_change
</UL>
<BR>[Called By]<UL><LI><a href="#[858]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_sm
</UL>

<P><STRONG><a name="[8eb]"></a>app_lea_bca_handle_cccd_msg</STRONG> (Thumb, 122 bytes, Stack size 32 bytes, app_lea_broadcast_audio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1380<LI>Call Chain = app_lea_bca_handle_cccd_msg &rArr; app_lea_uca_link_sm &rArr; app_lea_uca_link_connected &rArr; app_lea_uca_remove_data_path &rArr; mtc_topology_dm &rArr;  app_lea_uca_link_sm (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[844]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_get_conn_id_by_handle
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[53f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_reg_le_link_disc_cb
<LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_find_le_link_by_conn_id
<LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_link_sm
</UL>
<BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_bca_ble_audio_cback
</UL>

<P><STRONG><a name="[8ff]"></a>mtc_check_lea_le_link</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, multitopology_ctrl.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[539]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_topology_dm
<LI><a href="#[900]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_terminate_cis
</UL>

<P><STRONG><a name="[8f9]"></a>mtc_cis_ase_release</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, multitopology_ctrl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1140 + In Cycle
<LI>Call Chain = mtc_cis_ase_release &rArr;  app_mmi_handle_action (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_handle_action
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_ccp_get_call_status
<LI><a href="#[8f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_mgr_dispatch
<LI><a href="#[8f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_cis_audio_conext_change
<LI><a href="#[8f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_ase_release
<LI><a href="#[8f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_set_btmode
</UL>
<BR>[Called By]<UL><LI><a href="#[45b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_legacy_update_call_status
<LI><a href="#[539]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_topology_dm
<LI><a href="#[90a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_legacy_bt_cback
</UL>

<P><STRONG><a name="[6d]"></a>mtc_timeout_cb</STRONG> (Thumb, 132 bytes, Stack size 16 bytes, multitopology_ctrl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1644<LI>Call Chain = mtc_timeout_cb &rArr; app_mmi_handle_action &rArr; app_multi_active_hfp_transfer &rArr; app_multi_handle_sniffing_link_disconnect_event &rArr; app_multi_judge_active_a2dp_idx_and_qos &rArr;  app_multi_handle_sniffing_link_disconnect_event (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_handle_action
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_get_call_status
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_stop_timer
<LI><a href="#[458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_sco_is_connected
<LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_find_le_link_by_conn_handle
<LI><a href="#[548]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_disallow_legacy_stream
<LI><a href="#[5df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_mcp_get_active_conn_handle
<LI><a href="#[902]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_is_lea_cis_stream
<LI><a href="#[8fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_resume_bis
<LI><a href="#[8f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_cis_audio_conext_change
<LI><a href="#[8f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_set_btmode
</UL>
<BR>[Address Reference Count : 1]<UL><LI> multitopology_ctrl.o(.text)
</UL>
<P><STRONG><a name="[8f8]"></a>mtc_mgr_dispatch</STRONG> (Thumb, 50 bytes, Stack size 24 bytes, multitopology_ctrl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = mtc_mgr_dispatch
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[539]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_topology_dm
<LI><a href="#[90b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_le_connection_update
<LI><a href="#[8fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_terminate_bis
<LI><a href="#[8f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_cis_ase_release
<LI><a href="#[909]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_resume_sniffing
<LI><a href="#[904]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_stream_pause
<LI><a href="#[901]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_check_lea_track
<LI><a href="#[8f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_cis_audio_conext_change
</UL>

<P><STRONG><a name="[8fe]"></a>mtc_terminate_bis</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, multitopology_ctrl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 800<LI>Call Chain = mtc_terminate_bis &rArr; app_lea_mgr_mmi_handle &rArr; app_lea_vol_update_track_volume &rArr; app_harman_lr_balance_set &rArr; audio_volume_balance_set &rArr; audio_mgr_dispatch &rArr; audio_mgr_buffer_event_handle &rArr; audio_buffer_playing_state &rArr; audio_track_restart &rArr; audio_session_state_set &rArr;  audio_mgr_dispatch (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[50b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_mgr_mmi_handle
<LI><a href="#[8f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_mgr_dispatch
<LI><a href="#[85a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_set_beep
</UL>
<BR>[Called By]<UL><LI><a href="#[45b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_legacy_update_call_status
<LI><a href="#[539]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_topology_dm
<LI><a href="#[90a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_legacy_bt_cback
</UL>

<P><STRONG><a name="[90b]"></a>mtc_le_connection_update</STRONG> (Thumb, 128 bytes, Stack size 24 bytes, multitopology_ctrl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 816<LI>Call Chain = mtc_le_connection_update &rArr; app_lea_mgr_mmi_handle &rArr; app_lea_vol_update_track_volume &rArr; app_harman_lr_balance_set &rArr; audio_volume_balance_set &rArr; audio_mgr_dispatch &rArr; audio_mgr_buffer_event_handle &rArr; audio_buffer_playing_state &rArr; audio_track_restart &rArr; audio_session_state_set &rArr;  audio_mgr_dispatch (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_ccp_get_call_status
<LI><a href="#[3d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_set_prefer_conn_param
<LI><a href="#[50b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_mgr_mmi_handle
<LI><a href="#[8f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_mgr_dispatch
<LI><a href="#[85a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_set_beep
<LI><a href="#[902]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_is_lea_cis_stream
<LI><a href="#[8f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_cis_audio_conext_change
<LI><a href="#[8f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_ase_release
<LI><a href="#[8f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_set_resume_dev
</UL>
<BR>[Called By]<UL><LI><a href="#[90a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtc_legacy_bt_cback
</UL>

<P><STRONG><a name="[90e]"></a>app_harman_power_off_option_timer_start</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, app_harman_behaviors.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = app_harman_power_off_option_timer_start &rArr; app_start_timer &rArr; remove_timeout_msg_from_list
</UL>
<BR>[Calls]<UL><LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_start_timer
</UL>
<BR>[Called By]<UL><LI><a href="#[45a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_connect_idle_to_power_off
</UL>

<P><STRONG><a name="[6e]"></a>app_harman_timeout_cb</STRONG> (Thumb, 272 bytes, Stack size 40 bytes, app_harman_behaviors.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1668<LI>Call Chain = app_harman_timeout_cb &rArr; app_mmi_handle_action &rArr; app_multi_active_hfp_transfer &rArr; app_multi_handle_sniffing_link_disconnect_event &rArr; app_multi_judge_active_a2dp_idx_and_qos &rArr;  app_multi_handle_sniffing_link_disconnect_event (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_get_conn_param
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_handle_action
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_get_call_status
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_stop_timer
<LI><a href="#[45a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_connect_idle_to_power_off
<LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_a2dp_get_active_idx
<LI><a href="#[458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_sco_is_connected
<LI><a href="#[3df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_notify_device_info_timer_start
<LI><a href="#[3c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_heartbeat_check_timer_stop
<LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_ble_ota_get_upgrate_status
<LI><a href="#[3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_rtk_adv_start
<LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_common_adv_get_conn_id
<LI><a href="#[912]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_devinfo_notify
<LI><a href="#[910]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_ble_paired_status_notify
<LI><a href="#[911]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_ble_heartbeat_notify
<LI><a href="#[90f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_power_off_option_timer_stop
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_harman_behaviors.o(.text)
</UL>
<P><STRONG><a name="[90f]"></a>app_harman_power_off_option_timer_stop</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, app_harman_behaviors.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = app_harman_power_off_option_timer_stop &rArr; app_stop_timer &rArr; remove_timeout_msg_from_list
</UL>
<BR>[Calls]<UL><LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_stop_timer
</UL>
<BR>[Called By]<UL><LI><a href="#[45a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_connect_idle_to_power_off
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_timeout_cb
</UL>

<P><STRONG><a name="[914]"></a>app_harman_ble_generate_bt_mac_crc</STRONG> (Thumb, 124 bytes, Stack size 32 bytes, app_harman_ble.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = app_harman_ble_generate_bt_mac_crc &rArr; harman_btxfcs
</UL>
<BR>[Calls]<UL><LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_get_param
<LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen (via Veneer)
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[913]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;harman_btxfcs
</UL>
<BR>[Called By]<UL><LI><a href="#[43c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_ble_bt_mac_crc_get
</UL>

<P><STRONG><a name="[917]"></a>app_harman_ota_reset</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, app_harman_ble_ota.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = app_harman_ota_reset &rArr; app_start_timer &rArr; remove_timeout_msg_from_list
</UL>
<BR>[Calls]<UL><LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_start_timer
</UL>
<BR>[Called By]<UL><LI><a href="#[92f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_ble_ota_write_to_flash
<LI><a href="#[92d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_ble_ota_end_check
</UL>

<P><STRONG><a name="[918]"></a>app_harman_ota_notification_report</STRONG> (Thumb, 182 bytes, Stack size 64 bytes, app_harman_ble_ota.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 424<LI>Call Chain = app_harman_ota_notification_report &rArr; app_harman_report_le_event &rArr; app_transfer_push_data_queue &rArr; app_transfer_pop_data_queue &rArr;  app_transfer_pop_data_queue (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[919]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_report_le_event
</UL>
<BR>[Called By]<UL><LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_ota_exit
<LI><a href="#[932]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_ble_ota_handle
<LI><a href="#[930]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_ble_ota_payload_handle
<LI><a href="#[92d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_ble_ota_end_check
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_ble_ota_timeout_cb
</UL>

<P><STRONG><a name="[91a]"></a>harman_ble_ota_state_reset</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, app_harman_ble_ota.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = harman_ble_ota_state_reset &rArr; app_harman_ble_ota_package_check_timer_stop &rArr; app_stop_timer &rArr; remove_timeout_msg_from_list
</UL>
<BR>[Calls]<UL><LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[91b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_ble_ota_package_check_timer_stop
</UL>
<BR>[Called By]<UL><LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_ota_exit
<LI><a href="#[932]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_ble_ota_handle
</UL>

<P><STRONG><a name="[6f]"></a>app_harman_ble_ota_timeout_cb</STRONG> (Thumb, 166 bytes, Stack size 32 bytes, app_harman_ble_ota.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 488<LI>Call Chain = app_harman_ble_ota_timeout_cb &rArr; app_harman_ota_exit &rArr; app_harman_ota_notification_report &rArr; app_harman_report_le_event &rArr; app_transfer_push_data_queue &rArr; app_transfer_pop_data_queue &rArr;  app_transfer_pop_data_queue (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_stop_timer
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_start_timer
<LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt_reset
<LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_ota_exit
<LI><a href="#[3f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ble_gap_disconnect_all
<LI><a href="#[4a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bt_policy_disconnect_all_link
<LI><a href="#[91c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;harman_get_active_mobile_cmd_link
<LI><a href="#[91b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_ble_ota_package_check_timer_stop
<LI><a href="#[91d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_ble_ota_package_check_timer_start
<LI><a href="#[918]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_ota_notification_report
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_harman_ble_ota.o(.text)
</UL>
<P><STRONG><a name="[91e]"></a>app_harman_ota_get_active_bank</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, app_harman_ble_ota.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = app_harman_ota_get_active_bank &rArr; flash_partition_addr_get
</UL>
<BR>[Calls]<UL><LI><a href="#[678]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_partition_addr_get
</UL>
<BR>[Called By]<UL><LI><a href="#[928]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_ota_clear_notready_flag
<LI><a href="#[922]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_ota_write_to_flash
<LI><a href="#[921]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_ota_active_bank_check
</UL>

<P><STRONG><a name="[91f]"></a>app_harman_ota_fw_table_dump</STRONG> (Thumb, 174 bytes, Stack size 40 bytes, app_harman_ble_ota.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = app_harman_ota_fw_table_dump
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[930]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_ble_ota_payload_handle
</UL>

<P><STRONG><a name="[920]"></a>app_harman_ota_sub_image_control_header_check</STRONG> (Thumb, 318 bytes, Stack size 48 bytes, app_harman_ble_ota.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = app_harman_ota_sub_image_control_header_check
</UL>
<BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[930]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_ble_ota_payload_handle
</UL>

<P><STRONG><a name="[921]"></a>app_harman_ota_active_bank_check</STRONG> (Thumb, 180 bytes, Stack size 40 bytes, app_harman_ble_ota.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = app_harman_ota_active_bank_check &rArr; app_harman_ota_get_active_bank &rArr; flash_partition_addr_get
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[91e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_ota_get_active_bank
</UL>
<BR>[Called By]<UL><LI><a href="#[930]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_ble_ota_payload_handle
</UL>

<P><STRONG><a name="[922]"></a>app_harman_ota_write_to_flash</STRONG> (Thumb, 332 bytes, Stack size 112 bytes, app_harman_ble_ota.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = app_harman_ota_write_to_flash &rArr; fmc_flash_nor_set_bp_lv &rArr; flash_nor_set_bp_lv_locked &rArr; flash_nor_lock_set_bp_tb_operation &rArr; flash_nor_suspend_all_busy_nodes
</UL>
<BR>[Calls]<UL><LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_flash_nor_read
<LI><a href="#[924]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_flash_nor_set_bp_lv
<LI><a href="#[923]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_flash_nor_get_bp_lv
<LI><a href="#[925]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_flash_nor_erase
<LI><a href="#[678]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_partition_addr_get
<LI><a href="#[927]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cache_flush_by_addr
<LI><a href="#[926]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_flash_nor_write
<LI><a href="#[91e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_ota_get_active_bank
</UL>
<BR>[Called By]<UL><LI><a href="#[92f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_ble_ota_write_to_flash
<LI><a href="#[92a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_ota_copy_vp
</UL>

<P><STRONG><a name="[928]"></a>app_harman_ota_clear_notready_flag</STRONG> (Thumb, 318 bytes, Stack size 48 bytes, app_harman_ble_ota.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = app_harman_ota_clear_notready_flag &rArr; fmc_flash_nor_set_bp_lv &rArr; flash_nor_set_bp_lv_locked &rArr; flash_nor_lock_set_bp_tb_operation &rArr; flash_nor_suspend_all_busy_nodes
</UL>
<BR>[Calls]<UL><LI><a href="#[929]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_temp_ota_bank_addr_by_img_id (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_flash_nor_read
<LI><a href="#[924]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_flash_nor_set_bp_lv
<LI><a href="#[923]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_flash_nor_get_bp_lv
<LI><a href="#[678]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_partition_addr_get
<LI><a href="#[926]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_flash_nor_write
<LI><a href="#[91e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_ota_get_active_bank
</UL>
<BR>[Called By]<UL><LI><a href="#[92d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_ble_ota_end_check
</UL>

<P><STRONG><a name="[92a]"></a>app_harman_ota_copy_vp</STRONG> (Thumb, 330 bytes, Stack size 56 bytes, app_harman_ble_ota.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = app_harman_ota_copy_vp &rArr; app_harman_ota_write_to_flash &rArr; fmc_flash_nor_set_bp_lv &rArr; flash_nor_set_bp_lv_locked &rArr; flash_nor_lock_set_bp_tb_operation &rArr; flash_nor_suspend_all_busy_nodes
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_flash_nor_read
<LI><a href="#[924]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_flash_nor_set_bp_lv
<LI><a href="#[923]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_flash_nor_get_bp_lv
<LI><a href="#[678]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_partition_addr_get
<LI><a href="#[92b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_copy_image_id
<LI><a href="#[92c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_ota_check_image
<LI><a href="#[922]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_ota_write_to_flash
</UL>
<BR>[Called By]<UL><LI><a href="#[92d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_ble_ota_end_check
</UL>

<P><STRONG><a name="[92d]"></a>app_harman_ble_ota_end_check</STRONG> (Thumb, 380 bytes, Stack size 40 bytes, app_harman_ble_ota.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 464<LI>Call Chain = app_harman_ble_ota_end_check &rArr; app_harman_ota_notification_report &rArr; app_harman_report_le_event &rArr; app_transfer_push_data_queue &rArr; app_transfer_pop_data_queue &rArr;  app_transfer_pop_data_queue (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_cfg_store
<LI><a href="#[925]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_flash_nor_erase
<LI><a href="#[92c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_ota_check_image
<LI><a href="#[91b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_ble_ota_package_check_timer_stop
<LI><a href="#[92e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_ota_breakpoint_clear
<LI><a href="#[92a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_ota_copy_vp
<LI><a href="#[928]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_ota_clear_notready_flag
<LI><a href="#[918]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_ota_notification_report
<LI><a href="#[917]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_ota_reset
</UL>
<BR>[Called By]<UL><LI><a href="#[930]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_ble_ota_payload_handle
</UL>

<P><STRONG><a name="[92f]"></a>app_harman_ble_ota_write_to_flash</STRONG> (Thumb, 258 bytes, Stack size 48 bytes, app_harman_ble_ota.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = app_harman_ble_ota_write_to_flash &rArr; app_harman_ota_write_to_flash &rArr; fmc_flash_nor_set_bp_lv &rArr; flash_nor_set_bp_lv_locked &rArr; flash_nor_lock_set_bp_tb_operation &rArr; flash_nor_suspend_all_busy_nodes
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_cfg_store
<LI><a href="#[922]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_ota_write_to_flash
<LI><a href="#[917]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_ota_reset
</UL>
<BR>[Called By]<UL><LI><a href="#[930]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_ble_ota_payload_handle
</UL>

<P><STRONG><a name="[930]"></a>app_harman_ble_ota_payload_handle</STRONG> (Thumb, 1360 bytes, Stack size 72 bytes, app_harman_ble_ota.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 536<LI>Call Chain = app_harman_ble_ota_payload_handle &rArr; app_harman_ble_ota_end_check &rArr; app_harman_ota_notification_report &rArr; app_harman_report_le_event &rArr; app_transfer_push_data_queue &rArr; app_transfer_pop_data_queue &rArr;  app_transfer_pop_data_queue (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[43a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_license_pid_get
<LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_ota_exit
<LI><a href="#[931]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_ota_package_ver_check
<LI><a href="#[92e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_ota_breakpoint_clear
<LI><a href="#[92f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_ble_ota_write_to_flash
<LI><a href="#[92d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_ble_ota_end_check
<LI><a href="#[921]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_ota_active_bank_check
<LI><a href="#[920]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_ota_sub_image_control_header_check
<LI><a href="#[91f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_ota_fw_table_dump
<LI><a href="#[918]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_ota_notification_report
</UL>
<BR>[Called By]<UL><LI><a href="#[932]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_ble_ota_handle
</UL>

<P><STRONG><a name="[92e]"></a>app_harman_ota_breakpoint_clear</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, app_harman_ble_ota.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = app_harman_ota_breakpoint_clear &rArr; app_cfg_store
</UL>
<BR>[Calls]<UL><LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_cfg_store
</UL>
<BR>[Called By]<UL><LI><a href="#[931]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_ota_package_ver_check
<LI><a href="#[930]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_ble_ota_payload_handle
<LI><a href="#[92d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_ble_ota_end_check
</UL>

<P><STRONG><a name="[931]"></a>app_harman_ota_package_ver_check</STRONG> (Thumb, 138 bytes, Stack size 40 bytes, app_harman_ble_ota.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = app_harman_ota_package_ver_check &rArr; app_cfg_store
</UL>
<BR>[Calls]<UL><LI><a href="#[934]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_header_addr_by_img_id (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_cfg_store
<LI><a href="#[92e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_ota_breakpoint_clear
</UL>
<BR>[Called By]<UL><LI><a href="#[930]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_ble_ota_payload_handle
</UL>

<P><STRONG><a name="[91d]"></a>app_harman_ble_ota_package_check_timer_start</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, app_harman_ble_ota.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = app_harman_ble_ota_package_check_timer_start &rArr; app_start_timer &rArr; remove_timeout_msg_from_list
</UL>
<BR>[Calls]<UL><LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_start_timer
</UL>
<BR>[Called By]<UL><LI><a href="#[932]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_ble_ota_handle
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_ble_ota_timeout_cb
</UL>

<P><STRONG><a name="[91b]"></a>app_harman_ble_ota_package_check_timer_stop</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, app_harman_ble_ota.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = app_harman_ble_ota_package_check_timer_stop &rArr; app_stop_timer &rArr; remove_timeout_msg_from_list
</UL>
<BR>[Calls]<UL><LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_stop_timer
</UL>
<BR>[Called By]<UL><LI><a href="#[932]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_ble_ota_handle
<LI><a href="#[92d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_ble_ota_end_check
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_ble_ota_timeout_cb
<LI><a href="#[91a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;harman_ble_ota_state_reset
</UL>

<P><STRONG><a name="[92c]"></a>app_harman_ota_check_image</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, app_harman_ble_ota.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = app_harman_ota_check_image &rArr; app_harman_check_sha256 &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[935]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_check_sha256
</UL>
<BR>[Called By]<UL><LI><a href="#[92d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_ble_ota_end_check
<LI><a href="#[92a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_ota_copy_vp
</UL>

<P><STRONG><a name="[933]"></a>app_harman_ble_ota_start_para_set</STRONG> (Thumb, 128 bytes, Stack size 24 bytes, app_harman_ble_ota.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 392<LI>Call Chain = app_harman_ble_ota_start_para_set &rArr; app_harman_devinfo_notification_report &rArr; app_harman_report_le_event &rArr; app_transfer_push_data_queue &rArr; app_transfer_pop_data_queue &rArr;  app_transfer_pop_data_queue (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_cfg_store
<LI><a href="#[937]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_devinfo_notification_report
<LI><a href="#[936]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_devinfo_feature_pack
</UL>
<BR>[Called By]<UL><LI><a href="#[932]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_ble_ota_handle
</UL>

<P><STRONG><a name="[935]"></a>app_harman_check_sha256</STRONG> (Thumb, 102 bytes, Stack size 24 bytes, app_harman_ble_ota.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = app_harman_check_sha256 &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>
<BR>[Called By]<UL><LI><a href="#[92c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_ota_check_image
</UL>

<P><STRONG><a name="[938]"></a>app_harman_cmd_set_handle</STRONG> (Thumb, 96 bytes, Stack size 32 bytes, app_harman_parser.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1932<LI>Call Chain = app_harman_cmd_set_handle &rArr; app_harman_vendor_cmd_process &rArr; app_harman_devinfo_set &rArr; app_mmi_handle_action &rArr; app_multi_active_hfp_transfer &rArr; app_multi_handle_sniffing_link_disconnect_event &rArr; app_multi_judge_active_a2dp_idx_and_qos &rArr;  app_multi_handle_sniffing_link_disconnect_event (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[93a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_vendor_cmd_process
<LI><a href="#[939]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_cmd_support_check
</UL>
<BR>[Called By]<UL><LI><a href="#[428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_parser_process
</UL>

<P><STRONG><a name="[942]"></a>app_harman_devinfo_feature_report</STRONG> (Thumb, 122 bytes, Stack size 40 bytes, app_harman_vendor_cmd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 400<LI>Call Chain = app_harman_devinfo_feature_report &rArr; app_harman_report_le_event &rArr; app_transfer_push_data_queue &rArr; app_transfer_pop_data_queue &rArr;  app_transfer_pop_data_queue (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[919]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_report_le_event
</UL>
<BR>[Called By]<UL><LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_battery_status_notify
<LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_sco_status_notify
<LI><a href="#[93a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_vendor_cmd_process
<LI><a href="#[910]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_ble_paired_status_notify
<LI><a href="#[911]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_ble_heartbeat_notify
</UL>

<P><STRONG><a name="[945]"></a>app_harman_find_my_buds_ring_play</STRONG> (Thumb, 94 bytes, Stack size 24 bytes, app_harman_vendor_cmd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 600<LI>Call Chain = app_harman_find_my_buds_ring_play &rArr; app_audio_tone_type_play &rArr; voice_prompt_play &rArr; notification_push &rArr; notification_play &rArr; notification_path_start &rArr; notification_start_vp &rArr; audio_path_start &rArr; audio_path_schedule &rArr; audio_path_voice_start &rArr; dsp_mgr_session_enable &rArr; dsp_state_machine &rArr; dsp_power_on &rArr; dsp_hal_reset &rArr; shm_enable &rArr; h2d_cmd_send &rArr; shm_cmd_send &rArr; wr_queue_send
</UL>
<BR>[Calls]<UL><LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_audio_tone_type_play
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_start_timer
<LI><a href="#[4b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;voice_prompt_volume_set
<LI><a href="#[7af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_volume_out_mute
</UL>
<BR>[Called By]<UL><LI><a href="#[94c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_devinfo_set
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vendor_harman_cmd_timer_callback
</UL>

<P><STRONG><a name="[70]"></a>vendor_harman_cmd_timer_callback</STRONG> (Thumb, 254 bytes, Stack size 32 bytes, app_harman_vendor_cmd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 632<LI>Call Chain = vendor_harman_cmd_timer_callback &rArr; app_harman_find_my_buds_ring_play &rArr; app_audio_tone_type_play &rArr; voice_prompt_play &rArr; notification_push &rArr; notification_play &rArr; notification_path_start &rArr; notification_start_vp &rArr; audio_path_start &rArr; audio_path_schedule &rArr; audio_path_voice_start &rArr; dsp_mgr_session_enable &rArr; dsp_state_machine &rArr; dsp_power_on &rArr; dsp_hal_reset &rArr; shm_enable &rArr; h2d_cmd_send &rArr; shm_cmd_send &rArr; wr_queue_send
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_stop_timer
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_start_timer
<LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;harman_le_common_disc
<LI><a href="#[509]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_find_my_buds_ring_stop
<LI><a href="#[4b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_total_power_on_time_update
<LI><a href="#[4eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_total_playback_time_update
<LI><a href="#[93e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_recon_profile
<LI><a href="#[945]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_find_my_buds_ring_play
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_harman_vendor_cmd.o(.text)
</UL>
<P><STRONG><a name="[949]"></a>app_harman_devinfo_get</STRONG> (Thumb, 1118 bytes, Stack size 56 bytes, app_harman_vendor_cmd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = app_harman_devinfo_get &rArr; app_harman_total_power_on_time_update &rArr; app_cfg_store
</UL>
<BR>[Calls]<UL><LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_get_param
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[934]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_header_addr_by_img_id (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_get_b2s_link_num
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_get_call_status
<LI><a href="#[43a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_license_pid_get
<LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_license_cid_get
<LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_ble_ota_get_upgrate_status
<LI><a href="#[4b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_total_power_on_time_update
<LI><a href="#[4eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_total_playback_time_update
<LI><a href="#[94b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_license_serials_num_get
<LI><a href="#[94a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_get_lea_mode
<LI><a href="#[943]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_get_battery_status
<LI><a href="#[936]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_devinfo_feature_pack
</UL>
<BR>[Called By]<UL><LI><a href="#[93a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_vendor_cmd_process
</UL>

<P><STRONG><a name="[94c]"></a>app_harman_devinfo_set</STRONG> (Thumb, 1764 bytes, Stack size 208 bytes, app_harman_vendor_cmd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1836<LI>Call Chain = app_harman_devinfo_set &rArr; app_mmi_handle_action &rArr; app_multi_active_hfp_transfer &rArr; app_multi_handle_sniffing_link_disconnect_event &rArr; app_multi_judge_active_a2dp_idx_and_qos &rArr;  app_multi_handle_sniffing_link_disconnect_event (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_find_br_link
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mmi_handle_action
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_ccp_get_call_status
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_get_call_status
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_auto_power_off_enable
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_start_timer
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_cfg_store
<LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_volume_out_set
<LI><a href="#[486]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_lr_balance_set
<LI><a href="#[47a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sidetone_release
<LI><a href="#[479]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sidetone_disable
<LI><a href="#[478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;harman_sidetone_set_dsp
<LI><a href="#[477]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_state_get
<LI><a href="#[45a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_connect_idle_to_power_off
<LI><a href="#[450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_bond_get_pair_idx_mapping
<LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_a2dp_get_active_idx
<LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_get_active_idx
<LI><a href="#[458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_hfp_sco_is_connected
<LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_link_find_le_link_by_conn_handle
<LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_heartbeat_check_times_set
<LI><a href="#[509]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_find_my_buds_ring_stop
<LI><a href="#[4b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;voice_prompt_volume_set
<LI><a href="#[4b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ringtone_volume_set
<LI><a href="#[6d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sidetone_enable
<LI><a href="#[6d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sidetone_create
<LI><a href="#[672]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_eq_info_load_from_ftl
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_effect_attach
<LI><a href="#[5df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_mcp_get_active_conn_handle
<LI><a href="#[616]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_power_off_option_timer_get
<LI><a href="#[81a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_ascs_find_ase_entry_non_conn
<LI><a href="#[819]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_ascs_find_ase_entry_by_direction
<LI><a href="#[814]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_ascs_find_ase_entry
<LI><a href="#[7d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;voice_prompt_volume_get
<LI><a href="#[8a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_is_upstreaming_enabled
<LI><a href="#[864]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_lea_uca_get_diff_path
<LI><a href="#[944]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sidetone_gain_set
<LI><a href="#[94e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ringtone_volume_get
<LI><a href="#[94f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_eq_info_handle
<LI><a href="#[947]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_refine_a2dp_bitrate
<LI><a href="#[93d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_set_lea_mode
<LI><a href="#[94d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_reconnect_avdtp_profile
<LI><a href="#[945]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_find_my_buds_ring_play
<LI><a href="#[937]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_devinfo_notification_report
<LI><a href="#[936]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_devinfo_feature_pack
</UL>
<BR>[Called By]<UL><LI><a href="#[93a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_vendor_cmd_process
</UL>

<P><STRONG><a name="[943]"></a>app_harman_get_battery_status</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, app_harman_vendor_cmd.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_battery_status_notify
<LI><a href="#[949]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_devinfo_get
<LI><a href="#[912]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_devinfo_notify
</UL>

<P><STRONG><a name="[94d]"></a>app_harman_reconnect_avdtp_profile</STRONG> (Thumb, 98 bytes, Stack size 24 bytes, app_harman_vendor_cmd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = app_harman_reconnect_avdtp_profile &rArr; bt_avrcp_pause &rArr; avrcp_send_pass_through &rArr; avrcp_cmd_enqueue &rArr; avrcp_cmd_process &rArr; avrcp_send_cmd_pass_through &rArr; avrcp_send_generic_cmd &rArr; sys_timer_start &rArr; sys_hp_timer_list_insert &rArr; hw_timer_restart &rArr; hw_timer_safe_stop &rArr; hw_timer_set_div
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[572]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;linkback_profile_disconnect_start
<LI><a href="#[511]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_avrcp_pause
<LI><a href="#[948]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_set_a2dp_disc_reason
</UL>
<BR>[Called By]<UL><LI><a href="#[94c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_devinfo_set
</UL>

<P><STRONG><a name="[950]"></a>app_harman_license_gfps_info_get</STRONG> (Thumb, 100 bytes, Stack size 32 bytes, app_harman_license.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = app_harman_license_gfps_info_get &rArr; app_harman_license_gfps_info_get_from_flash &rArr; fmc_flash_nor_read
</UL>
<BR>[Calls]<UL><LI><a href="#[951]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_license_gfps_info_get_from_flash
</UL>
<BR>[Called By]<UL><LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_license_get
<LI><a href="#[6bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_spp_cmd_set_handle
</UL>

<P><STRONG><a name="[71]"></a>app_harman_audio_probe_dsp_event_cback</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, app_harman_license.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = app_harman_audio_probe_dsp_event_cback &rArr; app_harman_send_license_to_dsp &rArr; audio_probe_dsp_send &rArr; h2d_cmd_send &rArr; shm_cmd_send &rArr; wr_queue_send
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[954]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_send_license_to_dsp
<LI><a href="#[953]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_send_bd_addr_to_dsp
<LI><a href="#[952]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_send_device_name_to_dsp
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_harman_license.o(.text)
</UL>
<P><STRONG><a name="[72]"></a>app_harman_audio_probe_dsp_cback</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, app_harman_license.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = app_harman_audio_probe_dsp_cback
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_harman_license.o(.text)
</UL>
<P><STRONG><a name="[952]"></a>app_harman_send_device_name_to_dsp</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, app_harman_license.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = app_harman_send_device_name_to_dsp &rArr; audio_probe_dsp_send &rArr; h2d_cmd_send &rArr; shm_cmd_send &rArr; wr_queue_send
</UL>
<BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[650]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_probe_dsp_send
</UL>
<BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_audio_probe_dsp_event_cback
</UL>

<P><STRONG><a name="[953]"></a>app_harman_send_bd_addr_to_dsp</STRONG> (Thumb, 84 bytes, Stack size 8 bytes, app_harman_license.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = app_harman_send_bd_addr_to_dsp &rArr; audio_probe_dsp_send &rArr; h2d_cmd_send &rArr; shm_cmd_send &rArr; wr_queue_send
</UL>
<BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[650]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_probe_dsp_send
</UL>
<BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_audio_probe_dsp_event_cback
</UL>

<P><STRONG><a name="[954]"></a>app_harman_send_license_to_dsp</STRONG> (Thumb, 112 bytes, Stack size 40 bytes, app_harman_license.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = app_harman_send_license_to_dsp &rArr; audio_probe_dsp_send &rArr; h2d_cmd_send &rArr; shm_cmd_send &rArr; wr_queue_send
</UL>
<BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4 (via Veneer)
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[650]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_probe_dsp_send
</UL>
<BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_audio_probe_dsp_event_cback
</UL>

<P><STRONG><a name="[957]"></a>app_harman_license_save_to_ftl</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, app_harman_license.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = app_harman_license_save_to_ftl
</UL>
<BR>[Calls]<UL><LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[6bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_spp_cmd_set_handle
<LI><a href="#[958]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_license_load_from_ftl
</UL>

<P><STRONG><a name="[958]"></a>app_harman_license_load_from_ftl</STRONG> (Thumb, 182 bytes, Stack size 64 bytes, app_harman_license.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = app_harman_license_load_from_ftl &rArr; app_harman_license_save_to_ftl
</UL>
<BR>[Calls]<UL><LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp (via Veneer)
<LI><a href="#[957]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_license_save_to_ftl
</UL>
<BR>[Called By]<UL><LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_license_get
</UL>

<P><STRONG><a name="[951]"></a>app_harman_license_gfps_info_get_from_flash</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, app_harman_license.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = app_harman_license_gfps_info_get_from_flash &rArr; fmc_flash_nor_read
</UL>
<BR>[Calls]<UL><LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_flash_nor_read
</UL>
<BR>[Called By]<UL><LI><a href="#[950]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_license_gfps_info_get
</UL>

<P><STRONG><a name="[959]"></a>app_harman_license_pid_idx_get</STRONG> (Thumb, 114 bytes, Stack size 64 bytes, app_harman_license.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = app_harman_license_pid_idx_get &rArr; app_harman_license_product_info_get_from_flash &rArr; fmc_flash_nor_read
</UL>
<BR>[Calls]<UL><LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp (via Veneer)
<LI><a href="#[95b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_license_product_info_get_from_flash
</UL>
<BR>[Called By]<UL><LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_license_get
</UL>

<P><STRONG><a name="[95b]"></a>app_harman_license_product_info_get_from_flash</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, app_harman_license.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = app_harman_license_product_info_get_from_flash &rArr; fmc_flash_nor_read
</UL>
<BR>[Calls]<UL><LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_flash_nor_read
</UL>
<BR>[Called By]<UL><LI><a href="#[959]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_license_pid_idx_get
</UL>

<P><STRONG><a name="[95c]"></a>Double2FixPoint</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, app_harman_eq.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = Double2FixPoint &rArr; pow &rArr; sqrt &rArr; _dsqrt
</UL>
<BR>[Calls]<UL><LI><a href="#[962]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub (via Veneer)
<LI><a href="#[95f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple (via Veneer)
<LI><a href="#[960]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul (via Veneer)
<LI><a href="#[95d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d (via Veneer)
<LI><a href="#[963]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz (via Veneer)
<LI><a href="#[961]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd (via Veneer)
<LI><a href="#[95e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pow
</UL>
<BR>[Called By]<UL><LI><a href="#[673]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_get_eq_data
</UL>

<P><STRONG><a name="[966]"></a>app_harman_eq_info_save_to_ftl</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, app_harman_eq.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = app_harman_eq_info_save_to_ftl
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[668]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_haraman_eq_init
<LI><a href="#[94f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_eq_info_handle
</UL>

<P><STRONG><a name="[967]"></a>app_harman_eq_dsp_set</STRONG> (Thumb, 62 bytes, Stack size 32 bytes, app_harman_eq.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = app_harman_eq_dsp_set &rArr; app_harman_set_eq_boost_gain &rArr; audio_probe_dsp_send &rArr; h2d_cmd_send &rArr; shm_cmd_send &rArr; wr_queue_send
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[669]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_eq_media_eq_set
<LI><a href="#[625]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_set_eq_boost_gain
</UL>
<BR>[Called By]<UL><LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_eq_reset_unsaved
<LI><a href="#[94f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_eq_info_handle
</UL>

<P><STRONG><a name="[965]"></a>app_harman_eq_dsp_stage_get</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, app_harman_eq.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[673]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_get_eq_data
<LI><a href="#[969]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_get_default_eq_info
</UL>

<P><STRONG><a name="[968]"></a>FixPoint2Double</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, app_harman_eq.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = FixPoint2Double &rArr; pow &rArr; sqrt &rArr; _dsqrt
</UL>
<BR>[Calls]<UL><LI><a href="#[960]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul (via Veneer)
<LI><a href="#[95d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d (via Veneer)
<LI><a href="#[95e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pow
</UL>
<BR>[Called By]<UL><LI><a href="#[969]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_get_default_eq_info
</UL>

<P><STRONG><a name="[969]"></a>app_harman_get_default_eq_info</STRONG> (Thumb, 180 bytes, Stack size 224 bytes, app_harman_eq.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 416<LI>Call Chain = app_harman_get_default_eq_info &rArr; FixPoint2Double &rArr; pow &rArr; sqrt &rArr; _dsqrt
</UL>
<BR>[Calls]<UL><LI><a href="#[4cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d (via Veneer)
<LI><a href="#[95d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d (via Veneer)
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr (via Veneer)
<LI><a href="#[674]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_eq_dsp_param_get
<LI><a href="#[968]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FixPoint2Double
<LI><a href="#[965]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_eq_dsp_stage_get
<LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[96a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>
<BR>[Called By]<UL><LI><a href="#[668]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_haraman_eq_init
</UL>

<P><STRONG><a name="[73]"></a>app_harman_dsp_event_cback</STRONG> (Thumb, 88 bytes, Stack size 200 bytes, app_harman_eq.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = app_harman_dsp_event_cback &rArr; app_harman_eq_dsp_param_get &rArr; app_eq_dsp_param_get &rArr; eq_utils_map_get
</UL>
<BR>[Calls]<UL><LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[674]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_eq_dsp_param_get
<LI><a href="#[96b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_default_dsp_eq_set
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_harman_eq.o(.text)
</UL>
<P><STRONG><a name="[96b]"></a>app_harman_default_dsp_eq_set</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, app_harman_eq.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = app_harman_default_dsp_eq_set &rArr; audio_probe_dsp_send &rArr; h2d_cmd_send &rArr; shm_cmd_send &rArr; wr_queue_send
</UL>
<BR>[Calls]<UL><LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[650]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_probe_dsp_send
</UL>
<BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_dsp_event_cback
</UL>

<P><STRONG><a name="[74]"></a>app_harman_adc_interrupt_handler</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, app_harman_adc.o(.isr.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = app_harman_adc_interrupt_handler &rArr; app_io_msg_send
</UL>
<BR>[Calls]<UL><LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_mgr_read_data_req (via Veneer)
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_io_msg_send (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_harman_adc.o(.text)
</UL>
<P><STRONG><a name="[75]"></a>app_harman_adc_timeout_cb</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, app_harman_adc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = app_harman_adc_timeout_cb &rArr; app_harman_discharger_ntc_timer_start &rArr; app_harman_adc_io_read &rArr; Pad_Config &rArr; flash_cur_bank_img_payload_addr_get
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_discharger_ntc_timer_start
<LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_adc_ntc_check_timer_start
<LI><a href="#[6f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ext_charger_check_status
<LI><a href="#[6f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ext_charger_ntc_check_timeout
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_harman_adc.o(.text)
</UL>
<P><STRONG><a name="[76]"></a>app_harman_usb_adc_interrupt_handler</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, app_harman_usb_connector_protect.o(.isr.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = app_harman_usb_adc_interrupt_handler &rArr; app_io_msg_send
</UL>
<BR>[Calls]<UL><LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_mgr_read_data_req (via Veneer)
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_io_msg_send (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_harman_usb_connector_protect.o(.text)
</UL>
<P><STRONG><a name="[96e]"></a>app_harman_usb_hiccup_check_timer_start</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, app_harman_usb_connector_protect.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = app_harman_usb_hiccup_check_timer_start &rArr; app_start_timer &rArr; remove_timeout_msg_from_list
</UL>
<BR>[Calls]<UL><LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_start_timer
<LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_register_pm_excluded
</UL>
<BR>[Called By]<UL><LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_usb_connector_adc_update
<LI><a href="#[6fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_usb_connector_adp_out_handle
</UL>

<P><STRONG><a name="[970]"></a>app_harman_usb_adc_ntc_check_timer_start</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, app_harman_usb_connector_protect.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = app_harman_usb_adc_ntc_check_timer_start &rArr; app_start_timer &rArr; remove_timeout_msg_from_list
</UL>
<BR>[Calls]<UL><LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_start_timer
<LI><a href="#[96f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_usb_adc_ntc_check_timer_stop
</UL>
<BR>[Called By]<UL><LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_usb_connector_adc_update
<LI><a href="#[6ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_usb_connector_adp_in_handle
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_usb_adc_timeout_cb
</UL>

<P><STRONG><a name="[77]"></a>app_harman_usb_adc_timeout_cb</STRONG> (Thumb, 138 bytes, Stack size 24 bytes, app_harman_usb_connector_protect.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = app_harman_usb_adc_timeout_cb &rArr; app_harman_usb_adc_io_read &rArr; Pad_Config &rArr; flash_cur_bank_img_payload_addr_get
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_stop_timer
<LI><a href="#[972]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_usb_connector_protect_nv_clear
<LI><a href="#[971]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_usb_adc_io_read
<LI><a href="#[96f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_usb_adc_ntc_check_timer_stop
<LI><a href="#[973]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_usb_connector_mosfet_close
<LI><a href="#[970]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_usb_adc_ntc_check_timer_start
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_harman_usb_connector_protect.o(.text)
</UL>
<P><STRONG><a name="[973]"></a>app_harman_usb_connector_mosfet_close</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, app_harman_usb_connector_protect.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = app_harman_usb_connector_mosfet_close &rArr; Pad_Config &rArr; flash_cur_bank_img_payload_addr_get
</UL>
<BR>[Calls]<UL><LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pad_Config (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_usb_connector_adc_update
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_harman_usb_adc_timeout_cb
</UL>

<P><STRONG><a name="[79]"></a>audio_probe_dsp_ipc_cback</STRONG> (Thumb, 120 bytes, Stack size 24 bytes, audio_probe.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = audio_probe_dsp_ipc_cback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> audio_probe.o(.text)
</UL>
<P><STRONG><a name="[a61]"></a>audio_track_queue_add</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, audio_track.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = audio_track_queue_add
</UL>
<BR>[Called By]<UL><LI><a href="#[a56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_session_state_set
</UL>

<P><STRONG><a name="[a64]"></a>audio_track_is_starting</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, audio_track.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = audio_track_is_starting
</UL>
<BR>[Called By]<UL><LI><a href="#[a56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_session_state_set
</UL>

<P><STRONG><a name="[a50]"></a>audio_track_volume_apply</STRONG> (Thumb, 140 bytes, Stack size 16 bytes, audio_track.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = audio_track_volume_apply &rArr; audio_path_dac_level_set &rArr; codec_mgr_dac_gain_set &rArr; codec_drv_dac_config_set &rArr; codec_drv_event_process &rArr; codec_drv_set_sample_rate
</UL>
<BR>[Calls]<UL><LI><a href="#[a52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_dac_mute
<LI><a href="#[a51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_dac_level_set
<LI><a href="#[a54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_adc_mute
<LI><a href="#[a53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_adc_level_set
</UL>
<BR>[Called By]<UL><LI><a href="#[a56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_session_state_set
</UL>

<P><STRONG><a name="[a55]"></a>audio_track_handle_check</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, audio_track.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = audio_track_handle_check
</UL>
<BR>[Called By]<UL><LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_volume_out_set
<LI><a href="#[446]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_volume_out_unmute
<LI><a href="#[476]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_stream_type_get
<LI><a href="#[477]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_state_get
<LI><a href="#[453]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_start
<LI><a href="#[5b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_stop
<LI><a href="#[53d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_release
<LI><a href="#[4f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_volume_out_mute
<LI><a href="#[6d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_effect_detach
<LI><a href="#[63c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_write
<LI><a href="#[62a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_read
<LI><a href="#[630]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_latency_set
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_effect_attach
<LI><a href="#[63e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_data_in_is_silent
<LI><a href="#[813]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_device_get
<LI><a href="#[8ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_volume_out_get
<LI><a href="#[87a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_restart
<LI><a href="#[a6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_volume_in_set
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_effect_cback
</UL>

<P><STRONG><a name="[a57]"></a>audio_track_queue_freeze</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, audio_track.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = audio_track_queue_freeze &rArr; audio_track_stop &rArr;  audio_session_state_set (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[5b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_stop
</UL>
<BR>[Called By]<UL><LI><a href="#[a56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_session_state_set
</UL>

<P><STRONG><a name="[a58]"></a>audio_track_buffer_attach</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, audio_track.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = audio_track_buffer_attach &rArr; media_buffer_latency_set &rArr; audio_latency_set_dynamic_latency_on &rArr; audio_latency_mgr_check_handle
</UL>
<BR>[Calls]<UL><LI><a href="#[a5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;media_buffer_latency_set
<LI><a href="#[a59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;media_buffer_attach
</UL>
<BR>[Called By]<UL><LI><a href="#[a56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_session_state_set
</UL>

<P><STRONG><a name="[7b]"></a>audio_track_path_cback</STRONG> (Thumb, 666 bytes, Stack size 72 bytes, audio_track.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 608<LI>Call Chain = audio_track_path_cback &rArr; audio_mgr_dispatch &rArr; audio_mgr_buffer_event_handle &rArr; audio_buffer_playing_state &rArr; audio_track_restart &rArr; audio_session_state_set &rArr;  audio_mgr_dispatch (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[a25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_mgr_dispatch
<LI><a href="#[a5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;media_buffer_us_write
<LI><a href="#[a5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_data_recv
<LI><a href="#[a5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_data_peek
<LI><a href="#[a5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_effect_run
<LI><a href="#[a5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_find_by_path
<LI><a href="#[a56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_session_state_set
</UL>
<BR>[Address Reference Count : 1]<UL><LI> audio_track.o(.text)
</UL>
<P><STRONG><a name="[a56]"></a>audio_session_state_set</STRONG> (Thumb, 2142 bytes, Stack size 56 bytes, audio_track.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 424 + In Cycle
<LI>Call Chain = audio_session_state_set &rArr;  audio_mgr_dispatch (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[a25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_mgr_dispatch
<LI><a href="#[a68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;media_buffer_low_latency_config
<LI><a href="#[a6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_stop
<LI><a href="#[a65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_start
<LI><a href="#[a69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_signal_out_monitoring_set
<LI><a href="#[a6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_signal_in_monitoring_set
<LI><a href="#[a66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_destory
<LI><a href="#[a60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_create
<LI><a href="#[a6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_effect_owner_clear
<LI><a href="#[a6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_reschedule
<LI><a href="#[a62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_buffer_detach
<LI><a href="#[a6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_buffer_stop
<LI><a href="#[a67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_buffer_play
<LI><a href="#[a63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_queue_remove
<LI><a href="#[a56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_session_state_set
<LI><a href="#[a58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_buffer_attach
<LI><a href="#[a57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_queue_freeze
<LI><a href="#[a50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_volume_apply
<LI><a href="#[a64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_is_starting
<LI><a href="#[a61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_queue_add
</UL>
<BR>[Called By]<UL><LI><a href="#[453]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_start
<LI><a href="#[5b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_stop
<LI><a href="#[53d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_release
<LI><a href="#[62f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_create
<LI><a href="#[87a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_restart
<LI><a href="#[a6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_reschedule
<LI><a href="#[a56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_session_state_set
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_path_cback
</UL>

<P><STRONG><a name="[7c]"></a>audio_track_effect_cback</STRONG> (Thumb, 180 bytes, Stack size 24 bytes, audio_track.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = audio_track_effect_cback &rArr; audio_track_handle_check
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[a77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_effect_stop
<LI><a href="#[a5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_effect_run
<LI><a href="#[a76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_effect_owner_get
<LI><a href="#[a6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_effect_owner_clear
<LI><a href="#[a78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_effect_dequeue
<LI><a href="#[a55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_handle_check
</UL>
<BR>[Address Reference Count : 1]<UL><LI> audio_track.o(.text)
</UL>
<P><STRONG><a name="[a63]"></a>audio_track_queue_remove</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, audio_track.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = audio_track_queue_remove
</UL>
<BR>[Called By]<UL><LI><a href="#[a56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_session_state_set
</UL>

<P><STRONG><a name="[a67]"></a>audio_track_buffer_play</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, audio_track.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = audio_track_buffer_play &rArr; media_buffer_active_proxy &rArr; audio_interval_evaluator_unregister &rArr; sys_timer_delete &rArr; sys_hp_timer_list_remove &rArr; hw_timer_restart &rArr; hw_timer_safe_stop &rArr; hw_timer_set_div
</UL>
<BR>[Calls]<UL><LI><a href="#[a7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;media_buffer_active_proxy
</UL>
<BR>[Called By]<UL><LI><a href="#[a56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_session_state_set
</UL>

<P><STRONG><a name="[a6c]"></a>audio_track_buffer_stop</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, audio_track.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = audio_track_buffer_stop &rArr; media_buffer_deactive_proxy &rArr; audio_latency_reset &rArr; sys_timer_delete &rArr; sys_hp_timer_list_remove &rArr; hw_timer_restart &rArr; hw_timer_safe_stop &rArr; hw_timer_set_div
</UL>
<BR>[Calls]<UL><LI><a href="#[a7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;media_buffer_deactive_proxy
</UL>
<BR>[Called By]<UL><LI><a href="#[a56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_session_state_set
</UL>

<P><STRONG><a name="[a62]"></a>audio_track_buffer_detach</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, audio_track.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = audio_track_buffer_detach &rArr; media_buffer_detach
</UL>
<BR>[Calls]<UL><LI><a href="#[a7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;media_buffer_detach
</UL>
<BR>[Called By]<UL><LI><a href="#[a56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_session_state_set
</UL>

<P><STRONG><a name="[a5b]"></a>audio_track_find_by_path</STRONG> (Thumb, 110 bytes, Stack size 16 bytes, audio_track.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = audio_track_find_by_path
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_path_cback
</UL>

<P><STRONG><a name="[a78]"></a>audio_track_effect_dequeue</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, audio_track.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_effect_detach
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_effect_attach
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_effect_cback
</UL>

<P><STRONG><a name="[a75]"></a>audio_track_volume_scale</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, audio_track.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[a28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_volume_out_max_set
<LI><a href="#[a2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_track_volume_in_max_set
</UL>

<P><STRONG><a name="[7e]"></a>eq_effect_enable</STRONG> (Thumb, 118 bytes, Stack size 8 bytes, eq.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = eq_effect_enable &rArr; dsp_ipc_voice_eq_set &rArr; dsp_ipc_h2d_cmd_send &rArr; h2d_cmd_send &rArr; shm_cmd_send &rArr; wr_queue_send
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[a8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_ipc_voice_eq_set
<LI><a href="#[a8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_ipc_record_eq_set
<LI><a href="#[a8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_ipc_audio_eq_set
<LI><a href="#[a8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_ipc_apt_eq_set
<LI><a href="#[a89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_effect_inheritor_get
</UL>
<BR>[Address Reference Count : 1]<UL><LI> eq.o(.text)
</UL>
<P><STRONG><a name="[7d]"></a>eq_effect_disable</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, eq.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> eq.o(.text)
</UL>
<P><STRONG><a name="[80]"></a>nrec_effect_enable</STRONG> (Thumb, 82 bytes, Stack size 8 bytes, nrec.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = nrec_effect_enable &rArr; dsp_ipc_voice_nrec_set &rArr; dsp_ipc_h2d_cmd_send &rArr; h2d_cmd_send &rArr; shm_cmd_send &rArr; wr_queue_send
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[a94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_ipc_voice_nrec_set
<LI><a href="#[a95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_ipc_apt_nrec_set
<LI><a href="#[a89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_effect_inheritor_get
</UL>
<BR>[Address Reference Count : 1]<UL><LI> nrec.o(.text)
</UL>
<P><STRONG><a name="[7f]"></a>nrec_effect_disable</STRONG> (Thumb, 84 bytes, Stack size 8 bytes, nrec.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = nrec_effect_disable &rArr; dsp_ipc_voice_nrec_set &rArr; dsp_ipc_h2d_cmd_send &rArr; h2d_cmd_send &rArr; shm_cmd_send &rArr; wr_queue_send
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[a94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_ipc_voice_nrec_set
<LI><a href="#[a95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_ipc_apt_nrec_set
<LI><a href="#[a89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_effect_inheritor_get
</UL>
<BR>[Address Reference Count : 1]<UL><LI> nrec.o(.text)
</UL>
<P><STRONG><a name="[82]"></a>sidetone_effect_enable</STRONG> (Thumb, 114 bytes, Stack size 24 bytes, sidetone.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = sidetone_effect_enable &rArr; audio_path_hw_sidetone_enable &rArr; codec_mgr_sidetone_set &rArr; codec_drv_sidetone_disable &rArr; codec_drv_sidetone_timer_ctrl &rArr; sys_timer_restart &rArr; sys_hp_timer_list_insert &rArr; hw_timer_restart &rArr; hw_timer_safe_stop &rArr; hw_timer_set_div
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[a89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_effect_inheritor_get
<LI><a href="#[a97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_sw_sidetone_enable
<LI><a href="#[a98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_hw_sidetone_enable
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sidetone.o(.text)
</UL>
<P><STRONG><a name="[81]"></a>sidetone_effect_disable</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, sidetone.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = sidetone_effect_disable &rArr; audio_path_hw_sidetone_disable &rArr; codec_mgr_sidetone_set &rArr; codec_drv_sidetone_disable &rArr; codec_drv_sidetone_timer_ctrl &rArr; sys_timer_restart &rArr; sys_hp_timer_list_insert &rArr; hw_timer_restart &rArr; hw_timer_safe_stop &rArr; hw_timer_set_div
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[a89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_effect_inheritor_get
<LI><a href="#[a99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_sw_sidetone_disable
<LI><a href="#[a9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_hw_sidetone_disable
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sidetone.o(.text)
</UL>
<P><STRONG><a name="[aa0]"></a>audio_route_audio_physical_path_get</STRONG> (Thumb, 258 bytes, Stack size 12 bytes, audio_route.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = audio_route_audio_physical_path_get
</UL>
<BR>[Called By]<UL><LI><a href="#[a9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_route_physical_path_get
</UL>

<P><STRONG><a name="[a9c]"></a>audio_route_mic_class_get</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, audio_route.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[aa1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_route_record_physical_path_get
<LI><a href="#[a9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_route_voice_physical_path_get
</UL>

<P><STRONG><a name="[a9b]"></a>audio_route_voice_physical_path_get</STRONG> (Thumb, 470 bytes, Stack size 24 bytes, audio_route.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = audio_route_voice_physical_path_get
</UL>
<BR>[Calls]<UL><LI><a href="#[a9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_route_mic_class_get
</UL>
<BR>[Called By]<UL><LI><a href="#[a9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_route_physical_path_get
</UL>

<P><STRONG><a name="[aa2]"></a>audio_route_ringtone_physical_path_get</STRONG> (Thumb, 270 bytes, Stack size 12 bytes, audio_route.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = audio_route_ringtone_physical_path_get
</UL>
<BR>[Called By]<UL><LI><a href="#[a9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_route_physical_path_get
</UL>

<P><STRONG><a name="[aa3]"></a>audio_route_vp_physical_path_get</STRONG> (Thumb, 262 bytes, Stack size 12 bytes, audio_route.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = audio_route_vp_physical_path_get
</UL>
<BR>[Called By]<UL><LI><a href="#[a9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_route_physical_path_get
</UL>

<P><STRONG><a name="[aa4]"></a>audio_route_analog_physical_path_get</STRONG> (Thumb, 256 bytes, Stack size 12 bytes, audio_route.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = audio_route_analog_physical_path_get
</UL>
<BR>[Called By]<UL><LI><a href="#[a9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_route_physical_path_get
</UL>

<P><STRONG><a name="[aa1]"></a>audio_route_record_physical_path_get</STRONG> (Thumb, 116 bytes, Stack size 16 bytes, audio_route.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = audio_route_record_physical_path_get
</UL>
<BR>[Calls]<UL><LI><a href="#[a9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_route_record_dev_get
<LI><a href="#[a9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_route_mic_class_get
</UL>
<BR>[Called By]<UL><LI><a href="#[a9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_route_physical_path_get
</UL>

<P><STRONG><a name="[aaf]"></a>osif_task_context_check</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, os_ext.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[aae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_timer_state_get
</UL>

<P><STRONG><a name="[ac4]"></a>adp_get_handle_and_ops_by_type</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, hal_adp.o(.ram_text))
<BR><BR>[Called By]<UL><LI><a href="#[696]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adp_update_isr_cb (via Veneer)
<LI><a href="#[695]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adp_register_state_change_cb (via Veneer)
<LI><a href="#[694]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adp_get_level
<LI><a href="#[68f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adp_get_current_state (via Veneer)
</UL>

<P><STRONG><a name="[abc]"></a>adp_plug_event_callback</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, hal_adp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = adp_plug_event_callback
</UL>
<BR>[Called By]<UL><LI><a href="#[ac1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adp_io_out_handler
<LI><a href="#[ac0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adp_io_in_handler
<LI><a href="#[abd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adp_5v_out_handler
<LI><a href="#[abb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adp_5v_in_handler
</UL>

<P><STRONG><a name="[277]"></a>gpio_a_sub_isr</STRONG> (Thumb, 60 bytes, Stack size 32 bytes, hal_gpio_int.o(.isr.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = gpio_a_sub_isr &rArr; imp_gpio_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;imp_gpio_handler
</UL>
<BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_A_24_31_Handler
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_A_16_23_Handler
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_A_8_15_Handler
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_A_2_7_Handler
</UL>

<P><STRONG><a name="[279]"></a>gpio_b_sub_isr</STRONG> (Thumb, 62 bytes, Stack size 32 bytes, hal_gpio_int.o(.isr.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = gpio_b_sub_isr &rArr; imp_gpio_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;imp_gpio_handler
</UL>
<BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_B_24_31_Handler
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_B_16_23_Handler
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_B_8_15_Handler
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_B_0_7_Handler
</UL>

<P><STRONG><a name="[85]"></a>GPIOA0_Handler</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, hal_gpio_int.o(.isr.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GPIOA0_Handler &rArr; imp_gpio_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;imp_gpio_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hal_gpio_int.o(.text)
</UL>
<P><STRONG><a name="[86]"></a>GPIOA1_Handler</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, hal_gpio_int.o(.isr.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GPIOA1_Handler &rArr; imp_gpio_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;imp_gpio_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hal_gpio_int.o(.text)
</UL>
<P><STRONG><a name="[87]"></a>GPIO_A_2_7_Handler</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, hal_gpio_int.o(.isr.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = GPIO_A_2_7_Handler &rArr; gpio_a_sub_isr &rArr; imp_gpio_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_a_sub_isr
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hal_gpio_int.o(.text)
</UL>
<P><STRONG><a name="[88]"></a>GPIO_A_8_15_Handler</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, hal_gpio_int.o(.isr.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = GPIO_A_8_15_Handler &rArr; gpio_a_sub_isr &rArr; imp_gpio_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_a_sub_isr
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hal_gpio_int.o(.text)
</UL>
<P><STRONG><a name="[89]"></a>GPIO_A_16_23_Handler</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, hal_gpio_int.o(.isr.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = GPIO_A_16_23_Handler &rArr; gpio_a_sub_isr &rArr; imp_gpio_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_a_sub_isr
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hal_gpio_int.o(.text)
</UL>
<P><STRONG><a name="[8a]"></a>GPIO_A_24_31_Handler</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, hal_gpio_int.o(.isr.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = GPIO_A_24_31_Handler &rArr; gpio_a_sub_isr &rArr; imp_gpio_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_a_sub_isr
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hal_gpio_int.o(.text)
</UL>
<P><STRONG><a name="[8b]"></a>GPIO_B_0_7_Handler</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, hal_gpio_int.o(.isr.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = GPIO_B_0_7_Handler &rArr; gpio_b_sub_isr &rArr; imp_gpio_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_b_sub_isr
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hal_gpio_int.o(.text)
</UL>
<P><STRONG><a name="[8c]"></a>GPIO_B_8_15_Handler</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, hal_gpio_int.o(.isr.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = GPIO_B_8_15_Handler &rArr; gpio_b_sub_isr &rArr; imp_gpio_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_b_sub_isr
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hal_gpio_int.o(.text)
</UL>
<P><STRONG><a name="[8d]"></a>GPIO_B_16_23_Handler</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, hal_gpio_int.o(.isr.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = GPIO_B_16_23_Handler &rArr; gpio_b_sub_isr &rArr; imp_gpio_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_b_sub_isr
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hal_gpio_int.o(.text)
</UL>
<P><STRONG><a name="[8e]"></a>GPIO_B_24_31_Handler</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, hal_gpio_int.o(.isr.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = GPIO_B_24_31_Handler &rArr; gpio_b_sub_isr &rArr; imp_gpio_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_b_sub_isr
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hal_gpio_int.o(.text)
</UL>
<P><STRONG><a name="[278]"></a>imp_gpio_handler</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, hal_gpio_int.o(.isr.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = imp_gpio_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOx_ClearINTPendingBit
</UL>
<BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOA1_Handler
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOA0_Handler
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_b_sub_isr
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_a_sub_isr
</UL>

<P><STRONG><a name="[ac8]"></a>hal_get_gpio</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, hal_gpio_int.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[560]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_get_isr_callback
<LI><a href="#[ac7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_register_isr_by_gpio
</UL>

<P><STRONG><a name="[ac7]"></a>hal_gpio_register_isr_by_gpio</STRONG> (Thumb, 122 bytes, Stack size 32 bytes, hal_gpio_int.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = hal_gpio_register_isr_by_gpio &rArr; RamVectorTableUpdate &rArr; RamVectorTableUpdate_for_xip_isr
</UL>
<BR>[Calls]<UL><LI><a href="#[ac8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_get_gpio
<LI><a href="#[ab4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RamVectorTableUpdate
</UL>
<BR>[Called By]<UL><LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_register_isr_callback
</UL>

<P><STRONG><a name="[126]"></a>keyscan_dlps_exit</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, io_dlps.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> io_dlps.o(.constdata)
</UL>
<P><STRONG><a name="[128]"></a>qdec_dlps_enter</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, io_dlps.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> io_dlps.o(.constdata)
</UL>
<P><STRONG><a name="[129]"></a>qdec_dlps_exit</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, io_dlps.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> io_dlps.o(.constdata)
</UL>
<P><STRONG><a name="[12b]"></a>spi_dlps_enter</STRONG> (Thumb, 68 bytes, Stack size 0 bytes, io_dlps.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> io_dlps.o(.constdata)
</UL>
<P><STRONG><a name="[12c]"></a>spi_dlps_exit</STRONG> (Thumb, 68 bytes, Stack size 0 bytes, io_dlps.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> io_dlps.o(.constdata)
</UL>
<P><STRONG><a name="[130]"></a>spi2w_dlps_enter</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, io_dlps.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> io_dlps.o(.constdata)
</UL>
<P><STRONG><a name="[131]"></a>spi2w_dlps_exit</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, io_dlps.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> io_dlps.o(.constdata)
</UL>
<P><STRONG><a name="[133]"></a>i2c_dlps_enter</STRONG> (Thumb, 92 bytes, Stack size 0 bytes, io_dlps.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> io_dlps.o(.constdata)
</UL>
<P><STRONG><a name="[134]"></a>i2c_dlps_exit</STRONG> (Thumb, 92 bytes, Stack size 0 bytes, io_dlps.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> io_dlps.o(.constdata)
</UL>
<P><STRONG><a name="[138]"></a>tim_dlps_enter</STRONG> (Thumb, 90 bytes, Stack size 12 bytes, io_dlps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = tim_dlps_enter
</UL>
<BR>[Address Reference Count : 1]<UL><LI> io_dlps.o(.constdata)
</UL>
<P><STRONG><a name="[139]"></a>tim_dlps_exit</STRONG> (Thumb, 126 bytes, Stack size 16 bytes, io_dlps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = tim_dlps_exit &rArr; hw_timer_pm_exit
</UL>
<BR>[Calls]<UL><LI><a href="#[ad9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hw_timer_pm_exit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> io_dlps.o(.constdata)
</UL>
<P><STRONG><a name="[13b]"></a>uart_dlps_enter</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, io_dlps.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> io_dlps.o(.constdata)
</UL>
<P><STRONG><a name="[13c]"></a>uart_dlps_exit</STRONG> (Thumb, 82 bytes, Stack size 8 bytes, io_dlps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = uart_dlps_exit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> io_dlps.o(.constdata)
</UL>
<P><STRONG><a name="[13f]"></a>adc_dlps_enter</STRONG> (Thumb, 116 bytes, Stack size 8 bytes, io_dlps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = adc_dlps_enter
</UL>
<BR>[Address Reference Count : 1]<UL><LI> io_dlps.o(.constdata)
</UL>
<P><STRONG><a name="[140]"></a>adc_dlps_exit</STRONG> (Thumb, 280 bytes, Stack size 8 bytes, io_dlps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = adc_dlps_exit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> io_dlps.o(.constdata)
</UL>
<P><STRONG><a name="[142]"></a>ir_dlps_enter</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, io_dlps.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> io_dlps.o(.constdata)
</UL>
<P><STRONG><a name="[143]"></a>ir_dlps_exit</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, io_dlps.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> io_dlps.o(.constdata)
</UL>
<P><STRONG><a name="[148]"></a>sdio_dlps_enter</STRONG> (Thumb, 170 bytes, Stack size 8 bytes, io_dlps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = sdio_dlps_enter
</UL>
<BR>[Address Reference Count : 1]<UL><LI> io_dlps.o(.constdata)
</UL>
<P><STRONG><a name="[149]"></a>sdio_dlps_exit</STRONG> (Thumb, 174 bytes, Stack size 8 bytes, io_dlps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = sdio_dlps_exit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> io_dlps.o(.constdata)
</UL>
<P><STRONG><a name="[acc]"></a>io_dlps_callback_in_queue</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, io_dlps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = io_dlps_callback_in_queue
</UL>
<BR>[Called By]<UL><LI><a href="#[565]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;io_dlps_register_exit_cb
<LI><a href="#[564]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;io_dlps_register_enter_cb
</UL>

<P><STRONG><a name="[ad1]"></a>io_dlps_callback</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, io_dlps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = io_dlps_callback
</UL>
<BR>[Called By]<UL><LI><a href="#[ad4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dlps_io_enter_cb
<LI><a href="#[acf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dlps_io_restore
</UL>

<P><STRONG><a name="[ae9]"></a>dvfs_set_mode_func</STRONG> (Thumb, 126 bytes, Stack size 48 bytes, pm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = dvfs_set_mode_func
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[aea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dvfs_control
</UL>

<P><STRONG><a name="[aea]"></a>dvfs_control</STRONG> (Thumb, 172 bytes, Stack size 16 bytes, pm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = dvfs_control &rArr; dvfs_set_mode_func
</UL>
<BR>[Calls]<UL><LI><a href="#[aeb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_dsp1_clock
<LI><a href="#[aec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_cpu_clock
<LI><a href="#[ae9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dvfs_set_mode_func
</UL>
<BR>[Called By]<UL><LI><a href="#[af1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_cpu_freq
<LI><a href="#[aed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_dsp1_freq
</UL>

<P><STRONG><a name="[aed]"></a>set_dsp1_freq</STRONG> (Thumb, 204 bytes, Stack size 48 bytes, pm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = set_dsp1_freq &rArr; dvfs_control &rArr; dvfs_set_mode_func
</UL>
<BR>[Calls]<UL><LI><a href="#[aee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;count_clk_by_div (via Veneer)
<LI><a href="#[aeb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_dsp1_clock
<LI><a href="#[aea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dvfs_control
</UL>
<BR>[Called By]<UL><LI><a href="#[af2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pm_dsp1_freq_set
</UL>

<P><STRONG><a name="[af4]"></a>CLK_FREQ_TYPE_mapping_freqMHz</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, pm.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[af3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pm_cpu_default_freq_get
</UL>

<P><STRONG><a name="[af0]"></a>check_cpu_clock_valid</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, pm.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pm_cpu_freq_set
</UL>

<P><STRONG><a name="[af1]"></a>set_cpu_freq</STRONG> (Thumb, 100 bytes, Stack size 32 bytes, pm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = set_cpu_freq &rArr; dvfs_control &rArr; dvfs_set_mode_func
</UL>
<BR>[Calls]<UL><LI><a href="#[aec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_cpu_clock
<LI><a href="#[aea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dvfs_control
</UL>
<BR>[Called By]<UL><LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pm_cpu_freq_set
</UL>

<P><STRONG><a name="[aef]"></a>freqMHz_mapping_CLK_FREQ_TYPE</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, pm.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pm_cpu_freq_set
<LI><a href="#[af2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pm_dsp1_freq_set
</UL>

<P><STRONG><a name="[af5]"></a>pm_cpu_max_scenario_freq_get</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, pm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = pm_cpu_max_scenario_freq_get
</UL>
<BR>[Calls]<UL><LI><a href="#[af3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pm_cpu_default_freq_get
</UL>
<BR>[Called By]<UL><LI><a href="#[5c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pm_cpu_freq_req
<LI><a href="#[5c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pm_cpu_freq_clear
</UL>

<P><STRONG><a name="[afb]"></a>remove_timeout_msg_from_list</STRONG> (Thumb, 70 bytes, Stack size 24 bytes, app_timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = remove_timeout_msg_from_list
</UL>
<BR>[Calls]<UL><LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>
<BR>[Called By]<UL><LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_stop_timer
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_start_timer
</UL>

<P><STRONG><a name="[b04]"></a>FLASH_PARTITION_NAME_Mapping_LAYOUT_NAME</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, fmc_api.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[678]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_partition_addr_get
</UL>

<P><STRONG><a name="[b12]"></a>ftl_crc8</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, ftl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ftl_crc8
</UL>
<BR>[Called By]<UL><LI><a href="#[b20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mapping_table_init
<LI><a href="#[b0f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_write
<LI><a href="#[b11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftl_data_is_vaild
</UL>

<P><STRONG><a name="[b3a]"></a>switch_arr</STRONG> (Thumb, 30 bytes, Stack size 12 bytes, platform_uecc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = switch_arr
</UL>
<BR>[Called By]<UL><LI><a href="#[785]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_uecc_compute_public_key
</UL>

<P><STRONG><a name="[91]"></a>ble_adv_data_callback</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, ble_adv_data.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = ble_adv_data_callback &rArr; ble_adv_data_check_state &rArr; ble_ext_adv_mgr_enable &rArr; ble_ext_adv_mgr_start_set_adv_param &rArr; ble_ext_adv_mgr_send_msg &rArr; ble_ext_adv_mgr_find_by_handle
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[b41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_adv_data_check_state
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_adv_data.o(.text)
</UL>
<P><STRONG><a name="[b6f]"></a>ble_scan_hdl_check_int</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, ble_scan.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ble_scan_hdl_check_int
</UL>
<BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[843]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_scan_stop
<LI><a href="#[841]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_scan_start
</UL>

<P><STRONG><a name="[b74]"></a>match_filter</STRONG> (Thumb, 132 bytes, Stack size 32 bytes, ble_scan.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = match_filter
</UL>
<BR>[Calls]<UL><LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[b6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_scan_handle_gap_cb
</UL>

<P><STRONG><a name="[b72]"></a>scan_start</STRONG> (Thumb, 134 bytes, Stack size 24 bytes, ble_scan.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = scan_start
</UL>
<BR>[Calls]<UL><LI><a href="#[b75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_ext_scan_start
<LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_ext_scan_set_phy_param
<LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_ext_scan_set_param
</UL>
<BR>[Called By]<UL><LI><a href="#[b71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_scan_check_state
</UL>

<P><STRONG><a name="[14c]"></a>gatt_client_discover_result_cb</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, bt_gatt_client.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = gatt_client_discover_result_cb &rArr; gatt_client_discover_result_ext_cb &rArr; gattc_storage_add_primary_service &rArr; gattc_storage_get_srv_instance_id
</UL>
<BR>[Calls]<UL><LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_get_conn_handle
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_discover_result_ext_cb
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bt_gatt_client.o(.constdata)
</UL>
<P><STRONG><a name="[14b]"></a>gatt_client_discover_state_cb</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, bt_gatt_client.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = gatt_client_discover_state_cb &rArr; gatt_client_discover_state_ext_cb &rArr; gatt_client_dis_next_desc &rArr; gatt_client_dis_next_service &rArr; gattc_storage_add_secondary_service &rArr; gattc_storage_get_srv_instance_id
</UL>
<BR>[Calls]<UL><LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_get_conn_handle
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_discover_state_ext_cb
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bt_gatt_client.o(.constdata)
</UL>
<P><STRONG><a name="[ba2]"></a>gatt_client_find_by_conn_id</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, bt_gatt_client.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = gatt_client_find_by_conn_id
</UL>
<BR>[Called By]<UL><LI><a href="#[b6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_handle_conn_state_evt
</UL>

<P><STRONG><a name="[14f]"></a>gatt_client_notify_ind_cb</STRONG> (Thumb, 34 bytes, Stack size 32 bytes, bt_gatt_client.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = gatt_client_notify_ind_cb &rArr; gatt_client_notify_ind_ext_cb &rArr; gattc_storage_find_char_desc
</UL>
<BR>[Calls]<UL><LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_get_conn_handle
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_notify_ind_ext_cb
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bt_gatt_client.o(.constdata)
</UL>
<P><STRONG><a name="[14d]"></a>gatt_client_read_result_cb</STRONG> (Thumb, 34 bytes, Stack size 32 bytes, bt_gatt_client.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = gatt_client_read_result_cb &rArr; gatt_client_read_result_ext_cb &rArr; gatt_client_handle_pending_req &rArr; gatt_client_handle_read_uuid_result &rArr; gattc_storage_find_char_desc
</UL>
<BR>[Calls]<UL><LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_get_conn_handle
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_read_result_ext_cb
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bt_gatt_client.o(.constdata)
</UL>
<P><STRONG><a name="[14e]"></a>gatt_client_write_result_cb</STRONG> (Thumb, 34 bytes, Stack size 32 bytes, bt_gatt_client.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = gatt_client_write_result_cb &rArr; gatt_client_write_result_ext_cb &rArr; gatt_client_handle_pending_req &rArr; gatt_client_handle_read_uuid_result &rArr; gattc_storage_find_char_desc
</UL>
<BR>[Calls]<UL><LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_get_conn_handle
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_write_result_ext_cb
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bt_gatt_client.o(.constdata)
</UL>
<P><STRONG><a name="[b78]"></a>gatt_client_find_wait_rsp</STRONG> (Thumb, 114 bytes, Stack size 32 bytes, bt_gatt_client.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = gatt_client_find_wait_rsp
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_write_result_ext_cb
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_read_result_ext_cb
</UL>

<P><STRONG><a name="[b7a]"></a>gattc_req_list_free</STRONG> (Thumb, 94 bytes, Stack size 24 bytes, bt_gatt_client.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = gattc_req_list_free
</UL>
<BR>[Calls]<UL><LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>
<BR>[Called By]<UL><LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_start_discovery_all
<LI><a href="#[b6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_handle_conn_state_evt
</UL>

<P><STRONG><a name="[b7b]"></a>gatt_client_execute_req</STRONG> (Thumb, 182 bytes, Stack size 40 bytes, bt_gatt_client.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = gatt_client_execute_req
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[b7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;client_ext_attr_write
<LI><a href="#[b7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;client_ext_attr_read_using_uuid
<LI><a href="#[b7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;client_ext_attr_read
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>
<BR>[Called By]<UL><LI><a href="#[b87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_check_req
<LI><a href="#[b86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_handle_pending_req
</UL>

<P><STRONG><a name="[b7f]"></a>gatt_client_handle_read_result</STRONG> (Thumb, 126 bytes, Stack size 96 bytes, bt_gatt_client.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = gatt_client_handle_read_result &rArr; gattc_storage_find_char_desc
</UL>
<BR>[Calls]<UL><LI><a href="#[b80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_storage_find_srv_by_handle
<LI><a href="#[b81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_storage_find_char_desc
<LI><a href="#[b82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;att_data_covert_to_uuid
</UL>
<BR>[Called By]<UL><LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_read_result_ext_cb
<LI><a href="#[b86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_handle_pending_req
</UL>

<P><STRONG><a name="[b83]"></a>gatt_client_handle_read_uuid_result</STRONG> (Thumb, 210 bytes, Stack size 104 bytes, bt_gatt_client.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = gatt_client_handle_read_uuid_result &rArr; gattc_storage_find_char_desc
</UL>
<BR>[Calls]<UL><LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
<LI><a href="#[b80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_storage_find_srv_by_handle
<LI><a href="#[b81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_storage_find_char_desc
<LI><a href="#[b82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;att_data_covert_to_uuid
</UL>
<BR>[Called By]<UL><LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_read_result_ext_cb
<LI><a href="#[b86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_handle_pending_req
</UL>

<P><STRONG><a name="[b84]"></a>gatt_client_handle_write_result</STRONG> (Thumb, 158 bytes, Stack size 88 bytes, bt_gatt_client.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = gatt_client_handle_write_result &rArr; gattc_storage_find_char_desc
</UL>
<BR>[Calls]<UL><LI><a href="#[b80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_storage_find_srv_by_handle
<LI><a href="#[b81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_storage_find_char_desc
<LI><a href="#[b82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;att_data_covert_to_uuid
</UL>
<BR>[Called By]<UL><LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_write_result_ext_cb
<LI><a href="#[b86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_handle_pending_req
</UL>

<P><STRONG><a name="[b85]"></a>gatt_client_send_cccd_cfg_result</STRONG> (Thumb, 116 bytes, Stack size 96 bytes, bt_gatt_client.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = gatt_client_send_cccd_cfg_result &rArr; gattc_storage_find_char_desc
</UL>
<BR>[Calls]<UL><LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
<LI><a href="#[b80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_storage_find_srv_by_handle
<LI><a href="#[b81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_storage_find_char_desc
<LI><a href="#[b82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;att_data_covert_to_uuid
</UL>
<BR>[Called By]<UL><LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_write_result_ext_cb
<LI><a href="#[b86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_handle_pending_req
</UL>

<P><STRONG><a name="[b86]"></a>gatt_client_handle_pending_req</STRONG> (Thumb, 130 bytes, Stack size 24 bytes, bt_gatt_client.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = gatt_client_handle_pending_req &rArr; gatt_client_handle_read_uuid_result &rArr; gattc_storage_find_char_desc
</UL>
<BR>[Calls]<UL><LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[b85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_send_cccd_cfg_result
<LI><a href="#[b84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_handle_write_result
<LI><a href="#[b83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_handle_read_uuid_result
<LI><a href="#[b7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_handle_read_result
<LI><a href="#[b7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_execute_req
</UL>
<BR>[Called By]<UL><LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_write_result_ext_cb
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_read_result_ext_cb
</UL>

<P><STRONG><a name="[b87]"></a>gatt_client_check_req</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, bt_gatt_client.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = gatt_client_check_req &rArr; gatt_client_execute_req
</UL>
<BR>[Calls]<UL><LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[b7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_execute_req
</UL>
<BR>[Called By]<UL><LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_write
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_read
<LI><a href="#[b8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_enable_char_cccd
</UL>

<P><STRONG><a name="[b88]"></a>gatt_client_send_dis_result</STRONG> (Thumb, 162 bytes, Stack size 40 bytes, bt_gatt_client.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = gatt_client_send_dis_result &rArr; gattc_storage_get_srv_num
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[b89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_storage_get_srv_num
</UL>
<BR>[Called By]<UL><LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_start_discovery_all
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_discover_state_ext_cb
</UL>

<P><STRONG><a name="[b90]"></a>gatt_client_check_cccd_prop</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, bt_gatt_client.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[b8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_enable_char_cccd
</UL>

<P><STRONG><a name="[b94]"></a>gatt_client_dis_next_secondary_service</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, bt_gatt_client.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = gatt_client_dis_next_secondary_service
</UL>
<BR>[Calls]<UL><LI><a href="#[b95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;client_ext_all_char_discovery
</UL>
<BR>[Called By]<UL><LI><a href="#[b99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_dis_next_desc
<LI><a href="#[b96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_dis_next_service
</UL>

<P><STRONG><a name="[b96]"></a>gatt_client_dis_next_service</STRONG> (Thumb, 92 bytes, Stack size 32 bytes, bt_gatt_client.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = gatt_client_dis_next_service &rArr; gattc_storage_add_secondary_service &rArr; gattc_storage_get_srv_instance_id
</UL>
<BR>[Calls]<UL><LI><a href="#[b97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;client_ext_relationship_discovery
<LI><a href="#[b98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_storage_add_secondary_service
<LI><a href="#[b94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_dis_next_secondary_service
</UL>
<BR>[Called By]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_discover_state_ext_cb
<LI><a href="#[b99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_dis_next_desc
</UL>

<P><STRONG><a name="[b99]"></a>gatt_client_dis_next_desc</STRONG> (Thumb, 196 bytes, Stack size 32 bytes, bt_gatt_client.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = gatt_client_dis_next_desc &rArr; gatt_client_dis_next_service &rArr; gattc_storage_add_secondary_service &rArr; gattc_storage_get_srv_instance_id
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[b9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;client_ext_all_char_descriptor_discovery
<LI><a href="#[b96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_dis_next_service
<LI><a href="#[b94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_dis_next_secondary_service
</UL>
<BR>[Called By]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_discover_state_ext_cb
</UL>

<P><STRONG><a name="[150]"></a>gatt_client_discover_state_ext_cb</STRONG> (Thumb, 286 bytes, Stack size 24 bytes, bt_gatt_client.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = gatt_client_discover_state_ext_cb &rArr; gatt_client_dis_next_desc &rArr; gatt_client_dis_next_service &rArr; gattc_storage_add_secondary_service &rArr; gattc_storage_get_srv_instance_id
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[b95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;client_ext_all_char_discovery
<LI><a href="#[b9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_storage_write
<LI><a href="#[b9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_storage_srv_list_gen
<LI><a href="#[b8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_storage_print
<LI><a href="#[b9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_storage_dis_list_release
<LI><a href="#[b77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_find
<LI><a href="#[b99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_dis_next_desc
<LI><a href="#[b96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_dis_next_service
<LI><a href="#[b88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_send_dis_result
</UL>
<BR>[Called By]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_discover_state_cb
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bt_gatt_client.o(.constdata)
</UL>
<P><STRONG><a name="[151]"></a>gatt_client_discover_result_ext_cb</STRONG> (Thumb, 130 bytes, Stack size 24 bytes, bt_gatt_client.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = gatt_client_discover_result_ext_cb &rArr; gattc_storage_add_primary_service &rArr; gattc_storage_get_srv_instance_id
</UL>
<BR>[Calls]<UL><LI><a href="#[b9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_storage_add_primary_service
<LI><a href="#[b9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_storage_add_include
<LI><a href="#[ba0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_storage_add_char
<LI><a href="#[b77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_find
</UL>
<BR>[Called By]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_discover_result_cb
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bt_gatt_client.o(.constdata)
</UL>
<P><STRONG><a name="[152]"></a>gatt_client_read_result_ext_cb</STRONG> (Thumb, 114 bytes, Stack size 40 bytes, bt_gatt_client.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = gatt_client_read_result_ext_cb &rArr; gatt_client_handle_pending_req &rArr; gatt_client_handle_read_uuid_result &rArr; gattc_storage_find_char_desc
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[b77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_find
<LI><a href="#[b86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_handle_pending_req
<LI><a href="#[b83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_handle_read_uuid_result
<LI><a href="#[b7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_handle_read_result
<LI><a href="#[b78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_find_wait_rsp
</UL>
<BR>[Called By]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_read_result_cb
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bt_gatt_client.o(.constdata)
</UL>
<P><STRONG><a name="[153]"></a>gatt_client_write_result_ext_cb</STRONG> (Thumb, 156 bytes, Stack size 40 bytes, bt_gatt_client.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = gatt_client_write_result_ext_cb &rArr; gatt_client_handle_pending_req &rArr; gatt_client_handle_read_uuid_result &rArr; gattc_storage_find_char_desc
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[ba1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_set_cccd_data
<LI><a href="#[b77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_find
<LI><a href="#[b86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_handle_pending_req
<LI><a href="#[b85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_send_cccd_cfg_result
<LI><a href="#[b84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_handle_write_result
<LI><a href="#[b78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_find_wait_rsp
</UL>
<BR>[Called By]<UL><LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_write_result_cb
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bt_gatt_client.o(.constdata)
</UL>
<P><STRONG><a name="[154]"></a>gatt_client_notify_ind_ext_cb</STRONG> (Thumb, 122 bytes, Stack size 104 bytes, bt_gatt_client.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = gatt_client_notify_ind_ext_cb &rArr; gattc_storage_find_char_desc
</UL>
<BR>[Calls]<UL><LI><a href="#[b80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_storage_find_srv_by_handle
<LI><a href="#[b81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_storage_find_char_desc
<LI><a href="#[b82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;att_data_covert_to_uuid
<LI><a href="#[b77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_find
</UL>
<BR>[Called By]<UL><LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_notify_ind_cb
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bt_gatt_client.o(.constdata)
</UL>
<P><STRONG><a name="[b77]"></a>gatt_client_find</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, bt_gatt_client.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = gatt_client_find
</UL>
<BR>[Called By]<UL><LI><a href="#[b76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_check_link_int
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_notify_ind_ext_cb
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_write_result_ext_cb
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_read_result_ext_cb
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_discover_result_ext_cb
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_discover_state_ext_cb
</UL>

<P><STRONG><a name="[bad]"></a>ble_audio_svc_find</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, bt_gatt_svc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ble_audio_svc_find
</UL>
<BR>[Called By]<UL><LI><a href="#[bb1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_send_data_cb
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_svc_cccd_update_cb
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_svc_write_cb
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_svc_write_post
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_svc_read_cb
</UL>

<P><STRONG><a name="[155]"></a>ble_audio_svc_read_cb</STRONG> (Thumb, 70 bytes, Stack size 48 bytes, bt_gatt_svc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = ble_audio_svc_read_cb &rArr; ble_audio_svc_find
</UL>
<BR>[Calls]<UL><LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_get_conn_handle
<LI><a href="#[bad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_svc_find
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bt_gatt_svc.o(.constdata)
</UL>
<P><STRONG><a name="[92]"></a>ble_audio_svc_write_post</STRONG> (Thumb, 58 bytes, Stack size 40 bytes, bt_gatt_svc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = ble_audio_svc_write_post &rArr; ble_audio_svc_find
</UL>
<BR>[Calls]<UL><LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_get_conn_handle
<LI><a href="#[bad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_svc_find
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bt_gatt_svc.o(.text)
</UL>
<P><STRONG><a name="[156]"></a>ble_audio_svc_write_cb</STRONG> (Thumb, 90 bytes, Stack size 72 bytes, bt_gatt_svc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = ble_audio_svc_write_cb &rArr; ble_audio_svc_find
</UL>
<BR>[Calls]<UL><LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_get_conn_handle
<LI><a href="#[bad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_svc_find
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bt_gatt_svc.o(.constdata)
</UL>
<P><STRONG><a name="[157]"></a>ble_audio_svc_cccd_update_cb</STRONG> (Thumb, 58 bytes, Stack size 32 bytes, bt_gatt_svc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = ble_audio_svc_cccd_update_cb &rArr; ble_audio_svc_find
</UL>
<BR>[Calls]<UL><LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_get_conn_handle
<LI><a href="#[bad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_svc_find
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bt_gatt_svc.o(.constdata)
</UL>
<P><STRONG><a name="[bb1]"></a>ble_audio_send_data_cb</STRONG> (Thumb, 156 bytes, Stack size 32 bytes, bt_gatt_svc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = ble_audio_send_data_cb &rArr; ble_audio_svc_find
</UL>
<BR>[Calls]<UL><LI><a href="#[bad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_svc_find
</UL>
<BR>[Called By]<UL><LI><a href="#[427]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_svc_handle_profile_data_cmpl
</UL>

<P><STRONG><a name="[bb6]"></a>ble_audio_svc_check_ind_prop</STRONG> (Thumb, 102 bytes, Stack size 40 bytes, bt_gatt_svc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = ble_audio_svc_check_ind_prop
</UL>
<BR>[Calls]<UL><LI><a href="#[844]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_get_conn_id_by_handle
<LI><a href="#[bbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;server_get_cccd_info
<LI><a href="#[bbd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;server_ext_get_cccd_info
</UL>
<BR>[Called By]<UL><LI><a href="#[801]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_svc_send_data
</UL>

<P><STRONG><a name="[93]"></a>ascs_dm_cback</STRONG> (Thumb, 292 bytes, Stack size 72 bytes, ascs_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = ascs_dm_cback &rArr; ascs_handle_pending_cccd &rArr; ascs_send_ase_notify &rArr; gatt_svc_send_data &rArr; gatt_svc_send_data_in_queue &rArr; calloc
</UL>
<BR>[Calls]<UL><LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_get_conn_handle
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[87e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ascs_get_ase_data
<LI><a href="#[c27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_srv_find_by_srv_id
<LI><a href="#[c26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_ual_check_le_bond
<LI><a href="#[c1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_mgr_dispatch
<LI><a href="#[c1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_link_find_by_conn_id
<LI><a href="#[c28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ase_sm_link_init
<LI><a href="#[c29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ase_sm_link_free
<LI><a href="#[c1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ascs_change_state
<LI><a href="#[c22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ascs_handle_pending_cccd
<LI><a href="#[c1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ascs_check_ase_state_when_disconnect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ascs_mgr.o(.text)
</UL>
<P><STRONG><a name="[95]"></a>bap_dm_cback</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, bap.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = bap_dm_cback &rArr; ble_audio_link_find_by_conn_id
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calloc
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[c1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_link_find_by_conn_id
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bap.o(.text)
</UL>
<P><STRONG><a name="[96]"></a>bass_dm_cback</STRONG> (Thumb, 180 bytes, Stack size 40 bytes, bass_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = bass_dm_cback &rArr; bass_send_brs_notify &rArr; gatt_svc_send_data &rArr; gatt_svc_send_data_in_queue &rArr; calloc
</UL>
<BR>[Calls]<UL><LI><a href="#[c20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;server_get_start_handle
<LI><a href="#[c39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_send_brs_notify
<LI><a href="#[c27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_srv_find_by_srv_id
<LI><a href="#[c25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_ual_clear_pending_cccd
<LI><a href="#[c26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_ual_check_le_bond
<LI><a href="#[c1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_link_find_by_conn_id
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bass_mgr.o(.text)
</UL>
<P><STRONG><a name="[97]"></a>pacs_dm_cback</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, pacs_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = pacs_dm_cback &rArr; pacs_handle_pending_cccd &rArr; pacs_send_notify &rArr; gatt_svc_send_data &rArr; gatt_svc_send_data_in_queue &rArr; calloc
</UL>
<BR>[Calls]<UL><LI><a href="#[c5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pacs_handle_pending_cccd
<LI><a href="#[c27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_srv_find_by_srv_id
<LI><a href="#[c26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_ual_check_le_bond
<LI><a href="#[c1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_link_find_by_conn_id
</UL>
<BR>[Address Reference Count : 1]<UL><LI> pacs_mgr.o(.text)
</UL>
<P><STRONG><a name="[16c]"></a>bass_pa_terminate_proc</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, bass_brs_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = bass_pa_terminate_proc &rArr; ble_audio_pa_terminate_int &rArr; bc_sync_handle_check_int
</UL>
<BR>[Calls]<UL><LI><a href="#[c6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_pa_terminate_int
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bass_brs_mgr.o(.constdata)
</UL>
<P><STRONG><a name="[16d]"></a>bass_pa_sync_past_proc</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, bass_brs_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = bass_pa_sync_past_proc &rArr; bass_start_past_timer &rArr; sys_timer_start &rArr; sys_hp_timer_list_insert &rArr; hw_timer_restart &rArr; hw_timer_safe_stop &rArr; hw_timer_set_div
</UL>
<BR>[Calls]<UL><LI><a href="#[c69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_start_past_timer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bass_brs_mgr.o(.constdata)
</UL>
<P><STRONG><a name="[16e]"></a>bass_pa_sync_no_past_proc</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, bass_brs_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = bass_pa_sync_no_past_proc &rArr; ble_audio_pa_sync_establish_int &rArr; bc_sync_handle_check_int
</UL>
<BR>[Calls]<UL><LI><a href="#[c1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_mgr_dispatch
<LI><a href="#[c6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_pa_sync_establish_int
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bass_brs_mgr.o(.constdata)
</UL>
<P><STRONG><a name="[16f]"></a>bass_big_terminate_req_proc</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, bass_brs_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = bass_big_terminate_req_proc &rArr; ble_audio_big_terminate_int &rArr; bc_sync_handle_check_int
</UL>
<BR>[Calls]<UL><LI><a href="#[c6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_big_terminate_int
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bass_brs_mgr.o(.constdata)
</UL>
<P><STRONG><a name="[170]"></a>bass_big_synchronized_proc</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, bass_brs_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = bass_big_synchronized_proc &rArr; ble_audio_get_bis_sync_state &rArr; bc_sync_handle_check_int
</UL>
<BR>[Calls]<UL><LI><a href="#[c6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_get_bis_sync_state
<LI><a href="#[c6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_big_update_bis_state
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bass_brs_mgr.o(.constdata)
</UL>
<P><STRONG><a name="[171]"></a>bass_big_terminated_proc</STRONG> (Thumb, 96 bytes, Stack size 48 bytes, bass_brs_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = bass_big_terminated_proc &rArr; ble_audio_big_get_sync_info &rArr; bc_sync_handle_check_int
</UL>
<BR>[Calls]<UL><LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[c6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_big_get_sync_info
<LI><a href="#[c6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_big_update_bis_state
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bass_brs_mgr.o(.constdata)
</UL>
<P><STRONG><a name="[173]"></a>bass_big_sync_failed_proc</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, bass_brs_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = bass_big_sync_failed_proc &rArr; bass_big_update_bis_state
</UL>
<BR>[Calls]<UL><LI><a href="#[c6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_big_update_bis_state
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bass_brs_mgr.o(.constdata)
</UL>
<P><STRONG><a name="[172]"></a>bass_big_check_info_proc</STRONG> (Thumb, 264 bytes, Stack size 32 bytes, bass_brs_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = bass_big_check_info_proc &rArr; bass_big_proc_sm_execute &rArr; bass_send_all_notify &rArr; bass_send_brs_notify &rArr; gatt_svc_send_data &rArr; gatt_svc_send_data_in_queue &rArr; calloc
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[c40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_big_proc_sm_execute
<LI><a href="#[c1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_mgr_dispatch
<LI><a href="#[c71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_big_sync_establish_int
<LI><a href="#[c70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bass_update_bis_idx
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bass_brs_mgr.o(.constdata)
</UL>
<P><STRONG><a name="[c72]"></a>vcs_send_volume_state_notify_all</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, vcs_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = vcs_send_volume_state_notify_all &rArr; ble_audio_send_notify_all &rArr; gatt_svc_send_data &rArr; gatt_svc_send_data_in_queue &rArr; calloc
</UL>
<BR>[Calls]<UL><LI><a href="#[c73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_send_notify_all
</UL>
<BR>[Called By]<UL><LI><a href="#[847]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vcs_set_param
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vcs_write_post_proc
</UL>

<P><STRONG><a name="[c74]"></a>vcs_send_volume_flags_notify_all</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, vcs_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = vcs_send_volume_flags_notify_all &rArr; ble_audio_send_notify_all &rArr; gatt_svc_send_data &rArr; gatt_svc_send_data_in_queue &rArr; calloc
</UL>
<BR>[Calls]<UL><LI><a href="#[c73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_send_notify_all
</UL>
<BR>[Called By]<UL><LI><a href="#[847]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vcs_set_param
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vcs_write_post_proc
</UL>

<P><STRONG><a name="[c75]"></a>vcs_handle_volume_cp</STRONG> (Thumb, 234 bytes, Stack size 32 bytes, vcs_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = vcs_handle_volume_cp &rArr; ble_audio_mgr_dispatch
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[c1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_mgr_dispatch
</UL>
<BR>[Called By]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vcs_attr_write_cb
</UL>

<P><STRONG><a name="[98]"></a>vcs_write_post_proc</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, vcs_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = vcs_write_post_proc &rArr; vcs_send_volume_state_notify_all &rArr; ble_audio_send_notify_all &rArr; gatt_svc_send_data &rArr; gatt_svc_send_data_in_queue &rArr; calloc
</UL>
<BR>[Calls]<UL><LI><a href="#[c74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vcs_send_volume_flags_notify_all
<LI><a href="#[c72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vcs_send_volume_state_notify_all
</UL>
<BR>[Address Reference Count : 1]<UL><LI> vcs_mgr.o(.text)
</UL>
<P><STRONG><a name="[c90]"></a>ble_audio_sync_find_by_adv_info</STRONG> (Thumb, 224 bytes, Stack size 48 bytes, ble_audio_sync.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = ble_audio_sync_find_by_adv_info
</UL>
<BR>[Calls]<UL><LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[c7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_ual_resolve_rpa
</UL>
<BR>[Called By]<UL><LI><a href="#[c7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_sync_handle_gap_cb
</UL>

<P><STRONG><a name="[c97]"></a>mcs_handle_charac_notify</STRONG> (Thumb, 334 bytes, Stack size 56 bytes, mcp_client.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = mcs_handle_charac_notify &rArr; ble_audio_mgr_dispatch
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[c1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_mgr_dispatch
<LI><a href="#[c98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcs_check_link_int
</UL>
<BR>[Called By]<UL><LI><a href="#[c99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcs_client_handle_cback
</UL>

<P><STRONG><a name="[c99]"></a>mcs_client_handle_cback</STRONG> (Thumb, 654 bytes, Stack size 120 bytes, mcp_client.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = mcs_client_handle_cback &rArr; gatt_client_find_include_srv_by_primary &rArr; gatt_client_check_link_int &rArr; gatt_client_find
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calloc
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[baa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_find_include_srv_by_primary
<LI><a href="#[c1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_mgr_dispatch
<LI><a href="#[c01]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_link_find_by_conn_handle
<LI><a href="#[c98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcs_check_link_int
<LI><a href="#[c97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcs_handle_charac_notify
<LI><a href="#[c7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_mgr_dispatch_client_attr_cccd_info
</UL>
<BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gmcs_client_cback
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcs_client_cback
</UL>

<P><STRONG><a name="[9a]"></a>mcs_client_cback</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, mcp_client.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = mcs_client_cback &rArr; mcs_client_handle_cback &rArr; gatt_client_find_include_srv_by_primary &rArr; gatt_client_check_link_int &rArr; gatt_client_find
</UL>
<BR>[Calls]<UL><LI><a href="#[c99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcs_client_handle_cback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mcp_client.o(.text)
</UL>
<P><STRONG><a name="[99]"></a>gmcs_client_cback</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, mcp_client.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = gmcs_client_cback &rArr; mcs_client_handle_cback &rArr; gatt_client_find_include_srv_by_primary &rArr; gatt_client_check_link_int &rArr; gatt_client_find
</UL>
<BR>[Calls]<UL><LI><a href="#[c99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcs_client_handle_cback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mcp_client.o(.text)
</UL>
<P><STRONG><a name="[9b]"></a>mcs_client_dm_cback</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, mcp_client.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = mcs_client_dm_cback &rArr; ble_audio_link_find_by_conn_id
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[c1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_link_find_by_conn_id
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mcp_client.o(.text)
</UL>
<P><STRONG><a name="[c98]"></a>mcs_check_link_int</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, mcp_client.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = mcs_check_link_int &rArr; ble_audio_link_find_by_conn_handle
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[c01]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_link_find_by_conn_handle
</UL>
<BR>[Called By]<UL><LI><a href="#[830]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcp_client_write_media_cp
<LI><a href="#[82e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcp_client_read_char_value
<LI><a href="#[82d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcp_client_cfg_cccd
<LI><a href="#[c99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcs_client_handle_cback
<LI><a href="#[c97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcs_handle_charac_notify
</UL>

<P><STRONG><a name="[9c]"></a>cap_cas_callback</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, cap.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = cap_cas_callback &rArr; cap_check_disc_done &rArr; gatt_client_is_load_from_ftl &rArr; gatt_client_check_link_int &rArr; gatt_client_find
</UL>
<BR>[Calls]<UL><LI><a href="#[c01]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_link_find_by_conn_handle
<LI><a href="#[c9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cap_check_disc_done
</UL>
<BR>[Address Reference Count : 1]<UL><LI> cap.o(.text)
</UL>
<P><STRONG><a name="[9d]"></a>cap_dm_cback</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, cap.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = cap_dm_cback &rArr; ble_audio_link_find_by_conn_id
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[c1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_link_find_by_conn_id
</UL>
<BR>[Address Reference Count : 1]<UL><LI> cap.o(.text)
</UL>
<P><STRONG><a name="[c9b]"></a>cap_check_disc_done</STRONG> (Thumb, 126 bytes, Stack size 24 bytes, cap.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = cap_check_disc_done &rArr; gatt_client_is_load_from_ftl &rArr; gatt_client_check_link_int &rArr; gatt_client_find
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[bab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_is_load_from_ftl
<LI><a href="#[c1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_mgr_dispatch
</UL>
<BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cap_cas_callback
</UL>

<P><STRONG><a name="[c9e]"></a>tbs_client_handle_callback</STRONG> (Thumb, 844 bytes, Stack size 64 bytes, ccp_client.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = tbs_client_handle_callback &rArr; tbs_read_char_value &rArr; gatt_client_read &rArr; gattc_storage_check_prop &rArr; gattc_storage_find_char_desc
</UL>
<BR>[Calls]<UL><LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calloc
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[c1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_mgr_dispatch
<LI><a href="#[c01]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_link_find_by_conn_handle
<LI><a href="#[c9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tbs_read_char_value
<LI><a href="#[c7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_mgr_dispatch_client_attr_cccd_info
</UL>
<BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tbs_client_callback
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gtbs_client_callback
</UL>

<P><STRONG><a name="[9e]"></a>gtbs_client_callback</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ccp_client.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = gtbs_client_callback &rArr; tbs_client_handle_callback &rArr; tbs_read_char_value &rArr; gatt_client_read &rArr; gattc_storage_check_prop &rArr; gattc_storage_find_char_desc
</UL>
<BR>[Calls]<UL><LI><a href="#[c9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tbs_client_handle_callback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ccp_client.o(.text)
</UL>
<P><STRONG><a name="[9f]"></a>tbs_client_callback</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ccp_client.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = tbs_client_callback &rArr; tbs_client_handle_callback &rArr; tbs_read_char_value &rArr; gatt_client_read &rArr; gattc_storage_check_prop &rArr; gattc_storage_find_char_desc
</UL>
<BR>[Calls]<UL><LI><a href="#[c9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tbs_client_handle_callback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ccp_client.o(.text)
</UL>
<P><STRONG><a name="[a0]"></a>tbs_client_dm_cback</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, ccp_client.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = tbs_client_dm_cback &rArr; ble_audio_link_find_by_conn_id
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[c1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_audio_link_find_by_conn_id
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ccp_client.o(.text)
</UL>
<P><STRONG><a name="[177]"></a>tmas_attr_read_cb</STRONG> (Thumb, 114 bytes, Stack size 48 bytes, tmas_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = tmas_attr_read_cb &rArr; gatt_svc_find_char_uuid_by_index
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[bbb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_svc_find_char_uuid_by_index
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tmas_mgr.o(.constdata)
</UL>
<P><STRONG><a name="[d85]"></a>le_handle_vendor_cmd_rsp</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, gap_lib_le.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = le_handle_vendor_cmd_rsp
</UL>
<BR>[Called By]<UL><LI><a href="#[d84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_lib_le_handle_btif_msg
</UL>

<P><STRONG><a name="[d95]"></a>gap_common_handle_vendor_cmd_rsp</STRONG> (Thumb, 122 bytes, Stack size 24 bytes, gap_lib_common.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = gap_common_handle_vendor_cmd_rsp
</UL>
<BR>[Called By]<UL><LI><a href="#[d93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_lib_common_handle_btif_msg
</UL>

<P><STRONG><a name="[e37]"></a>bt_sco_msbc_header_check</STRONG> (Thumb, 82 bytes, Stack size 0 bytes, bt_gap.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[e36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bt_gap_cback
</UL>

<P><STRONG><a name="[e38]"></a>notification_vp_data_req</STRONG> (Thumb, 102 bytes, Stack size 24 bytes, notification.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = notification_vp_data_req &rArr; audio_path_data_send &rArr; audio_path_timestamp_set &rArr; dsp_mgr_signal_proc_start &rArr; dsp_remote_init &rArr; dsp_ipc_set_rws_init &rArr; dsp_ipc_h2d_cmd_send &rArr; h2d_cmd_send &rArr; shm_cmd_send &rArr; wr_queue_send
</UL>
<BR>[Calls]<UL><LI><a href="#[e3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notification_buffer_peek
<LI><a href="#[e3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notification_buffer_flush
<LI><a href="#[e39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_data_send
</UL>
<BR>[Called By]<UL><LI><a href="#[e3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notification_vp_start
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_voice_prompt_cback
</UL>

<P><STRONG><a name="[a1]"></a>notification_buffer_vp_cback</STRONG> (Thumb, 178 bytes, Stack size 24 bytes, notification.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = notification_buffer_vp_cback &rArr; notification_vp_start &rArr; notification_vp_data_req &rArr; audio_path_data_send &rArr; audio_path_timestamp_set &rArr; dsp_mgr_signal_proc_start &rArr; dsp_remote_init &rArr; dsp_ipc_set_rws_init &rArr; dsp_ipc_h2d_cmd_send &rArr; h2d_cmd_send &rArr; shm_cmd_send &rArr; wr_queue_send
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[e3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notification_buffer_prequeue
<LI><a href="#[e3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notification_vp_clk_req
<LI><a href="#[e3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notification_vp_start
</UL>
<BR>[Address Reference Count : 1]<UL><LI> notification.o(.text)
</UL>
<P><STRONG><a name="[e3f]"></a>notification_start_vp</STRONG> (Thumb, 192 bytes, Stack size 40 bytes, notification.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 408<LI>Call Chain = notification_start_vp &rArr; audio_path_start &rArr; audio_path_schedule &rArr; audio_path_voice_start &rArr; dsp_mgr_session_enable &rArr; dsp_state_machine &rArr; dsp_power_on &rArr; dsp_hal_reset &rArr; shm_enable &rArr; h2d_cmd_send &rArr; shm_cmd_send &rArr; wr_queue_send
</UL>
<BR>[Calls]<UL><LI><a href="#[b06]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_img_header_format_size (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_flash_nor_read
<LI><a href="#[93c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;storage_partition_get
<LI><a href="#[a65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_start
<LI><a href="#[e40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notification_buffer_reset
<LI><a href="#[e41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notification_buffer_config
</UL>
<BR>[Called By]<UL><LI><a href="#[e42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notification_path_start
</UL>

<P><STRONG><a name="[a3]"></a>audio_path_voice_prompt_cback</STRONG> (Thumb, 164 bytes, Stack size 24 bytes, notification.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 560<LI>Call Chain = audio_path_voice_prompt_cback &rArr; audio_mgr_dispatch &rArr; audio_mgr_buffer_event_handle &rArr; audio_buffer_playing_state &rArr; audio_track_restart &rArr; audio_session_state_set &rArr;  audio_mgr_dispatch (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[a25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_mgr_dispatch
<LI><a href="#[a52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_dac_mute
<LI><a href="#[a51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_dac_level_set
<LI><a href="#[e3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notification_buffer_prequeue
<LI><a href="#[e44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notification_play
<LI><a href="#[e38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notification_vp_data_req
</UL>
<BR>[Address Reference Count : 1]<UL><LI> notification.o(.text)
</UL>
<P><STRONG><a name="[a2]"></a>audio_path_composite_cback</STRONG> (Thumb, 160 bytes, Stack size 24 bytes, notification.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 560<LI>Call Chain = audio_path_composite_cback &rArr; audio_mgr_dispatch &rArr; audio_mgr_buffer_event_handle &rArr; audio_buffer_playing_state &rArr; audio_track_restart &rArr; audio_session_state_set &rArr;  audio_mgr_dispatch (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[a25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_mgr_dispatch
<LI><a href="#[a52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_dac_mute
<LI><a href="#[a51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_dac_level_set
<LI><a href="#[e44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notification_play
<LI><a href="#[e46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notification_ringtone_sync_req
<LI><a href="#[e43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notification_ringtone_start
</UL>
<BR>[Address Reference Count : 1]<UL><LI> notification.o(.text)
</UL>
<P><STRONG><a name="[17b]"></a>__buffer_flush</STRONG> (Thumb, 208 bytes, Stack size 48 bytes, media_buffer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __buffer_flush &rArr; media_buffer_backup_update &rArr; media_buffer_put
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[a4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;media_buffer_put
<LI><a href="#[e48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;media_buffer_backup_update
</UL>
<BR>[Address Reference Count : 1]<UL><LI> media_buffer.o(.constdata)
</UL>
<P><STRONG><a name="[17c]"></a>__buffer_peek</STRONG> (Thumb, 80 bytes, Stack size 32 bytes, media_buffer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __buffer_peek
</UL>
<BR>[Address Reference Count : 1]<UL><LI> media_buffer.o(.constdata)
</UL>
<P><STRONG><a name="[17d]"></a>__buffer_shrink</STRONG> (Thumb, 114 bytes, Stack size 56 bytes, media_buffer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = __buffer_shrink &rArr; media_buffer_put
</UL>
<BR>[Calls]<UL><LI><a href="#[a4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;media_buffer_put
</UL>
<BR>[Address Reference Count : 1]<UL><LI> media_buffer.o(.constdata)
</UL>
<P><STRONG><a name="[17e]"></a>__buffer_write</STRONG> (Thumb, 250 bytes, Stack size 56 bytes, media_buffer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __buffer_write &rArr; media_buffer_get
</UL>
<BR>[Calls]<UL><LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4 (via Veneer)
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[a4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;media_buffer_get
</UL>
<BR>[Address Reference Count : 1]<UL><LI> media_buffer.o(.constdata)
</UL>
<P><STRONG><a name="[180]"></a>__buffer_reset</STRONG> (Thumb, 206 bytes, Stack size 16 bytes, media_buffer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = __buffer_reset &rArr; audio_latency_buffer_reset &rArr; sys_timer_delete &rArr; sys_hp_timer_list_remove &rArr; hw_timer_restart &rArr; hw_timer_safe_stop &rArr; hw_timer_set_div
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[a23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;media_buffer_ds_pkt_cnt
<LI><a href="#[e4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jitter_buffer_buffer_reset
<LI><a href="#[e4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_latency_buffer_reset
<LI><a href="#[e49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;media_buffer_us_pkt_cnt
<LI><a href="#[e4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;media_buffer_clear_downstream_info
<LI><a href="#[e48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;media_buffer_backup_update
</UL>
<BR>[Address Reference Count : 1]<UL><LI> media_buffer.o(.constdata)
</UL>
<P><STRONG><a name="[17f]"></a>__buffer_dump</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, media_buffer.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> media_buffer.o(.constdata)
</UL>
<P><STRONG><a name="[e6f]"></a>audio_path_mgr_idle</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, audio_path.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_mgr_dsp_timer_cback
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_mgr_codec_timer_cback
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_dsp_cback
<LI><a href="#[e6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_codec_event_handler
<LI><a href="#[ec7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_plugin_msg_handle
</UL>

<P><STRONG><a name="[b7]"></a>audio_path_notification_wait_path_ready2running</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, audio_path.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = audio_path_notification_wait_path_ready2running &rArr; dsp_mgr_session_disable &rArr; dsp_mgr_deployment_traverse &rArr; audio_route_physical_path_take &rArr; audio_route_physical_path_get &rArr; audio_route_voice_physical_path_get
</UL>
<BR>[Calls]<UL><LI><a href="#[e7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_mgr_session_disable
</UL>
<BR>[Address Reference Count : 1]<UL><LI> audio_path.o(.text)
</UL>
<P><STRONG><a name="[ec7]"></a>audio_path_plugin_msg_handle</STRONG> (Thumb, 218 bytes, Stack size 16 bytes, audio_path.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = audio_path_plugin_msg_handle &rArr; audio_path_schedule &rArr; audio_path_voice_start &rArr; dsp_mgr_session_enable &rArr; dsp_state_machine &rArr; dsp_power_on &rArr; dsp_hal_reset &rArr; shm_enable &rArr; h2d_cmd_send &rArr; shm_cmd_send &rArr; wr_queue_send
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[9b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_start
<LI><a href="#[e71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_state_set
<LI><a href="#[e6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_mgr_idle
<LI><a href="#[e6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_event_flag_post
<LI><a href="#[ec9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_mgr_disable
<LI><a href="#[eca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_mgr_session_run
<LI><a href="#[ec8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_session_disable
<LI><a href="#[ec1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_power_off
<LI><a href="#[e6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_plugin_occasion_occur
<LI><a href="#[e76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_schedule
</UL>
<BR>[Called By]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_msg_handler
</UL>

<P><STRONG><a name="[ecc]"></a>audio_path_wait_codec_enabled</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, audio_path.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = audio_path_wait_codec_enabled &rArr; sys_event_flag_wait
</UL>
<BR>[Calls]<UL><LI><a href="#[e88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_event_flag_wait
<LI><a href="#[e81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_event_flag_check
</UL>
<BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;voice_dsp_mgr_session_cb
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;record_dsp_mgr_session_cb
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notification_dsp_mgr_session_cb
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_dsp_mgr_session_cb
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;analog_dsp_mgr_session_cb
</UL>

<P><STRONG><a name="[b8]"></a>path_wait_codec_enable_handler</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, audio_path.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = path_wait_codec_enable_handler &rArr; dsp_mgr_session_enable &rArr; dsp_state_machine &rArr; dsp_power_on &rArr; dsp_hal_reset &rArr; shm_enable &rArr; h2d_cmd_send &rArr; shm_cmd_send &rArr; wr_queue_send
</UL>
<BR>[Calls]<UL><LI><a href="#[e69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_mgr_session_enable
</UL>
<BR>[Address Reference Count : 1]<UL><LI> audio_path.o(.text)
</UL>
<P><STRONG><a name="[e6a]"></a>audio_path_codec_event_handler</STRONG> (Thumb, 174 bytes, Stack size 24 bytes, audio_path.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = audio_path_codec_event_handler &rArr; dsp_mgr_power_off &rArr; dsp_state_machine &rArr; dsp_power_on &rArr; dsp_hal_reset &rArr; shm_enable &rArr; h2d_cmd_send &rArr; shm_cmd_send &rArr; wr_queue_send
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[9b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_start
<LI><a href="#[e6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_mgr_idle
<LI><a href="#[e6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_event_flag_post
<LI><a href="#[e6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_mgr_tx_sample_rate_get
<LI><a href="#[e6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_mgr_rx_sample_rate_get
<LI><a href="#[e70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_mgr_power_off
<LI><a href="#[e6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_plugin_occasion_occur
</UL>
<BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_dsp_cback
</UL>

<P><STRONG><a name="[e73]"></a>audio_path_get_queue</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, audio_path.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[a60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_create
<LI><a href="#[e72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_state_exit
<LI><a href="#[e82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_peek
<LI><a href="#[e71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_state_set
</UL>

<P><STRONG><a name="[e71]"></a>audio_path_state_set</STRONG> (Thumb, 158 bytes, Stack size 32 bytes, audio_path.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = audio_path_state_set &rArr; sys_event_flag_post &rArr; sys_event_flag_abort
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[e72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_state_exit
<LI><a href="#[e73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_get_queue
<LI><a href="#[e6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_event_flag_post
</UL>
<BR>[Called By]<UL><LI><a href="#[a6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_stop
<LI><a href="#[a65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_start
<LI><a href="#[e85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_voice_start
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_vp_stop
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_voice_stop
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_record_stop
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_audio_stop
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_analog_stop
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;voice_wait_running_handler
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_wait_running_handler
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;record_wait_running_handler
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notification_wait_running_handler
<LI><a href="#[e77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_suspend
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;analog_wait_running_handler
<LI><a href="#[ec7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_plugin_msg_handle
<LI><a href="#[e76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_schedule
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notification_dsp_mgr_session_cb
</UL>

<P><STRONG><a name="[ab]"></a>audio_path_ipc_event_handler</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, audio_path.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = audio_path_ipc_event_handler &rArr; audio_path_find_category &rArr; audio_path_peek
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[e74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_find_category
</UL>
<BR>[Address Reference Count : 1]<UL><LI> audio_path.o(.text)
</UL>
<P><STRONG><a name="[e86]"></a>audio_path_is_mixable</STRONG> (Thumb, 78 bytes, Stack size 20 bytes, audio_path.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = audio_path_is_mixable
</UL>
<BR>[Called By]<UL><LI><a href="#[e85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_voice_start
<LI><a href="#[e76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_schedule
</UL>

<P><STRONG><a name="[aa]"></a>analog_wait_running_handler</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, audio_path.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 360<LI>Call Chain = analog_wait_running_handler &rArr; audio_path_schedule &rArr; audio_path_voice_start &rArr; dsp_mgr_session_enable &rArr; dsp_state_machine &rArr; dsp_power_on &rArr; dsp_hal_reset &rArr; shm_enable &rArr; h2d_cmd_send &rArr; shm_cmd_send &rArr; wr_queue_send
</UL>
<BR>[Calls]<UL><LI><a href="#[e71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_state_set
<LI><a href="#[e75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_mgr_line_in_action
<LI><a href="#[e76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_schedule
</UL>
<BR>[Address Reference Count : 1]<UL><LI> audio_path.o(.text)
</UL>
<P><STRONG><a name="[e77]"></a>audio_path_suspend</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, audio_path.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = audio_path_suspend &rArr; audio_path_start_fade_out &rArr; dsp_mgr_fade_out_start &rArr; dsp_ipc_set_fade_in_out_control &rArr; dsp_ipc_h2d_cmd_send &rArr; h2d_cmd_send &rArr; shm_cmd_send &rArr; wr_queue_send
</UL>
<BR>[Calls]<UL><LI><a href="#[e78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_schedule_priority
<LI><a href="#[e79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_start_fade_out
<LI><a href="#[e71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_state_set
<LI><a href="#[e7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_mgr_session_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[e85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_voice_start
<LI><a href="#[e76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_schedule
</UL>

<P><STRONG><a name="[a9]"></a>notification_wait_running_handler</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, audio_path.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = notification_wait_running_handler &rArr; audio_path_schedule &rArr; audio_path_voice_start &rArr; dsp_mgr_session_enable &rArr; dsp_state_machine &rArr; dsp_power_on &rArr; dsp_hal_reset &rArr; shm_enable &rArr; h2d_cmd_send &rArr; shm_cmd_send &rArr; wr_queue_send
</UL>
<BR>[Calls]<UL><LI><a href="#[e7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_route_ramp_gain_get
<LI><a href="#[e71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_state_set
<LI><a href="#[e7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_mgr_suppress_tx_gain
<LI><a href="#[e7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_mgr_decoder_action
<LI><a href="#[e76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_schedule
</UL>
<BR>[Address Reference Count : 1]<UL><LI> audio_path.o(.text)
</UL>
<P><STRONG><a name="[a8]"></a>record_wait_running_handler</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, audio_path.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 360<LI>Call Chain = record_wait_running_handler &rArr; audio_path_schedule &rArr; audio_path_voice_start &rArr; dsp_mgr_session_enable &rArr; dsp_state_machine &rArr; dsp_power_on &rArr; dsp_hal_reset &rArr; shm_enable &rArr; h2d_cmd_send &rArr; shm_cmd_send &rArr; wr_queue_send
</UL>
<BR>[Calls]<UL><LI><a href="#[e71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_state_set
<LI><a href="#[e7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_mgr_encoder_action
<LI><a href="#[e76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_schedule
</UL>
<BR>[Address Reference Count : 1]<UL><LI> audio_path.o(.text)
</UL>
<P><STRONG><a name="[a7]"></a>audio_wait_running_handler</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, audio_path.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 360<LI>Call Chain = audio_wait_running_handler &rArr; audio_path_schedule &rArr; audio_path_voice_start &rArr; dsp_mgr_session_enable &rArr; dsp_state_machine &rArr; dsp_power_on &rArr; dsp_hal_reset &rArr; shm_enable &rArr; h2d_cmd_send &rArr; shm_cmd_send &rArr; wr_queue_send
</UL>
<BR>[Calls]<UL><LI><a href="#[e71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_state_set
<LI><a href="#[e7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_mgr_decoder_action
<LI><a href="#[e76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_schedule
</UL>
<BR>[Address Reference Count : 1]<UL><LI> audio_path.o(.text)
</UL>
<P><STRONG><a name="[b1]"></a>voice_wait_running_handler</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, audio_path.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 360<LI>Call Chain = voice_wait_running_handler &rArr; audio_path_schedule &rArr; audio_path_voice_start &rArr; dsp_mgr_session_enable &rArr; dsp_state_machine &rArr; dsp_power_on &rArr; dsp_hal_reset &rArr; shm_enable &rArr; h2d_cmd_send &rArr; shm_cmd_send &rArr; wr_queue_send
</UL>
<BR>[Calls]<UL><LI><a href="#[e71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_state_set
<LI><a href="#[e7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_mgr_encoder_action
<LI><a href="#[e7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_mgr_decoder_action
<LI><a href="#[e76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_schedule
</UL>
<BR>[Address Reference Count : 1]<UL><LI> audio_path.o(.text)
</UL>
<P><STRONG><a name="[ac]"></a>audio_path_dsp_cback</STRONG> (Thumb, 162 bytes, Stack size 16 bytes, audio_path.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = audio_path_dsp_cback &rArr; audio_path_schedule &rArr; audio_path_voice_start &rArr; dsp_mgr_session_enable &rArr; dsp_state_machine &rArr; dsp_power_on &rArr; dsp_hal_reset &rArr; shm_enable &rArr; h2d_cmd_send &rArr; shm_cmd_send &rArr; wr_queue_send
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[9b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_start
<LI><a href="#[e6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_codec_event_handler
<LI><a href="#[e6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_mgr_idle
<LI><a href="#[e70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_mgr_power_off
<LI><a href="#[e8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_mgr_load_finish
<LI><a href="#[e8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_cfg_comm_setting
<LI><a href="#[e76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_schedule
</UL>
<BR>[Address Reference Count : 1]<UL><LI> audio_path.o(.text)
</UL>
<P><STRONG><a name="[184]"></a>audio_path_analog_stop</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, audio_path.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = audio_path_analog_stop &rArr; audio_path_start_fade_out &rArr; dsp_mgr_fade_out_start &rArr; dsp_ipc_set_fade_in_out_control &rArr; dsp_ipc_h2d_cmd_send &rArr; h2d_cmd_send &rArr; shm_cmd_send &rArr; wr_queue_send
</UL>
<BR>[Calls]<UL><LI><a href="#[e79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_start_fade_out
<LI><a href="#[e71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_state_set
</UL>
<BR>[Address Reference Count : 1]<UL><LI> audio_path.o(.constdata)
</UL>
<P><STRONG><a name="[181]"></a>audio_path_audio_stop</STRONG> (Thumb, 186 bytes, Stack size 8 bytes, audio_path.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = audio_path_audio_stop &rArr; audio_path_start_fade_out &rArr; dsp_mgr_fade_out_start &rArr; dsp_ipc_set_fade_in_out_control &rArr; dsp_ipc_h2d_cmd_send &rArr; h2d_cmd_send &rArr; shm_cmd_send &rArr; wr_queue_send
</UL>
<BR>[Calls]<UL><LI><a href="#[e74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_find_category
<LI><a href="#[e79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_start_fade_out
<LI><a href="#[e71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_state_set
<LI><a href="#[e7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_mgr_session_disable
<LI><a href="#[e7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_mgr_decoder_action
<LI><a href="#[e9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_ipc_set_force_dummy_pkt
</UL>
<BR>[Address Reference Count : 1]<UL><LI> audio_path.o(.constdata)
</UL>
<P><STRONG><a name="[183]"></a>audio_path_record_stop</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, audio_path.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = audio_path_record_stop &rArr; dsp_mgr_session_disable &rArr; dsp_mgr_deployment_traverse &rArr; audio_route_physical_path_take &rArr; audio_route_physical_path_get &rArr; audio_route_voice_physical_path_get
</UL>
<BR>[Calls]<UL><LI><a href="#[e71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_state_set
<LI><a href="#[e7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_mgr_session_disable
<LI><a href="#[e7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_mgr_encoder_action
</UL>
<BR>[Address Reference Count : 1]<UL><LI> audio_path.o(.constdata)
</UL>
<P><STRONG><a name="[182]"></a>audio_path_voice_stop</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, audio_path.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = audio_path_voice_stop &rArr; audio_path_start_fade_out &rArr; dsp_mgr_fade_out_start &rArr; dsp_ipc_set_fade_in_out_control &rArr; dsp_ipc_h2d_cmd_send &rArr; h2d_cmd_send &rArr; shm_cmd_send &rArr; wr_queue_send
</UL>
<BR>[Calls]<UL><LI><a href="#[e79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_start_fade_out
<LI><a href="#[e71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_state_set
</UL>
<BR>[Address Reference Count : 1]<UL><LI> audio_path.o(.constdata)
</UL>
<P><STRONG><a name="[185]"></a>audio_path_tone_stop</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, audio_path.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = audio_path_tone_stop &rArr; dsp_mgr_composite_stop &rArr; dsp_mgr_notification_stop &rArr; dsp_send_msg
</UL>
<BR>[Calls]<UL><LI><a href="#[e9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_mgr_composite_stop
</UL>
<BR>[Address Reference Count : 1]<UL><LI> audio_path.o(.constdata)
</UL>
<P><STRONG><a name="[186]"></a>audio_path_vp_stop</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, audio_path.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = audio_path_vp_stop &rArr; audio_path_state_set &rArr; sys_event_flag_post &rArr; sys_event_flag_abort
</UL>
<BR>[Calls]<UL><LI><a href="#[e71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_state_set
<LI><a href="#[e9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_mgr_voice_prompt_stop
</UL>
<BR>[Address Reference Count : 1]<UL><LI> audio_path.o(.constdata)
</UL>
<P><STRONG><a name="[ea0]"></a>audio_path_gain_scale</STRONG> (Thumb, 118 bytes, Stack size 16 bytes, audio_path.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = audio_path_gain_scale &rArr; pow &rArr; sqrt &rArr; _dsqrt
</UL>
<BR>[Calls]<UL><LI><a href="#[ea3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn (via Veneer)
<LI><a href="#[960]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul (via Veneer)
<LI><a href="#[963]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz (via Veneer)
<LI><a href="#[95e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pow
<LI><a href="#[ea2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log10
<LI><a href="#[ea1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbnf
<LI><a href="#[e64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfrcmple
<LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[93f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[940]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[964]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[96a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>
<BR>[Called By]<UL><LI><a href="#[a53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_adc_level_set
</UL>

<P><STRONG><a name="[e79]"></a>audio_path_start_fade_out</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, audio_path.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = audio_path_start_fade_out &rArr; dsp_mgr_fade_out_start &rArr; dsp_ipc_set_fade_in_out_control &rArr; dsp_ipc_h2d_cmd_send &rArr; h2d_cmd_send &rArr; shm_cmd_send &rArr; wr_queue_send
</UL>
<BR>[Calls]<UL><LI><a href="#[eba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_mgr_fade_out_start
</UL>
<BR>[Called By]<UL><LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_voice_stop
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_audio_stop
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_analog_stop
<LI><a href="#[e77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_suspend
</UL>

<P><STRONG><a name="[ea5]"></a>audio_path_dac_gain_set</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, audio_path.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = audio_path_dac_gain_set &rArr; dsp_ipc_set_tone_gain &rArr; dsp_ipc_h2d_cmd_send &rArr; h2d_cmd_send &rArr; shm_cmd_send &rArr; wr_queue_send
</UL>
<BR>[Calls]<UL><LI><a href="#[ebc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_ipc_set_tone_gain
<LI><a href="#[ebb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_ipc_set_dac_gain
</UL>
<BR>[Called By]<UL><LI><a href="#[a52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_dac_mute
<LI><a href="#[a51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_dac_level_set
</UL>

<P><STRONG><a name="[eab]"></a>audio_path_adc_gain_set</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, audio_path.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = audio_path_adc_gain_set &rArr; dsp_ipc_set_voice_adc_gain &rArr; dsp_ipc_h2d_cmd_send &rArr; h2d_cmd_send &rArr; shm_cmd_send &rArr; wr_queue_send
</UL>
<BR>[Calls]<UL><LI><a href="#[ebe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_ipc_set_voice_adc_gain
<LI><a href="#[ebf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_ipc_set_record_adc_gain
<LI><a href="#[ebd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_ipc_set_aux_adc_gain
</UL>
<BR>[Called By]<UL><LI><a href="#[a54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_adc_mute
<LI><a href="#[a53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_adc_level_set
</UL>

<P><STRONG><a name="[e82]"></a>audio_path_peek</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, audio_path.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = audio_path_peek
</UL>
<BR>[Calls]<UL><LI><a href="#[e73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_get_queue
</UL>
<BR>[Called By]<UL><LI><a href="#[e74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_find_category
<LI><a href="#[e89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_mgr_peek_running_path
<LI><a href="#[e76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_schedule
</UL>

<P><STRONG><a name="[e89]"></a>dsp_mgr_peek_running_path</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, audio_path.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = dsp_mgr_peek_running_path &rArr; audio_path_peek
</UL>
<BR>[Calls]<UL><LI><a href="#[e82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_peek
</UL>
<BR>[Called By]<UL><LI><a href="#[e85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_voice_start
<LI><a href="#[e76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_schedule
</UL>

<P><STRONG><a name="[e74]"></a>audio_path_find_category</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, audio_path.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = audio_path_find_category &rArr; audio_path_peek
</UL>
<BR>[Calls]<UL><LI><a href="#[e82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_peek
</UL>
<BR>[Called By]<UL><LI><a href="#[e85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_voice_start
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_audio_stop
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_ipc_event_handler
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_dsp_mgr_session_cb
</UL>

<P><STRONG><a name="[e72]"></a>audio_path_state_exit</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, audio_path.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = audio_path_state_exit
</UL>
<BR>[Calls]<UL><LI><a href="#[e73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_get_queue
</UL>
<BR>[Called By]<UL><LI><a href="#[a66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_destory
<LI><a href="#[e71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_state_set
</UL>

<P><STRONG><a name="[e78]"></a>audio_path_schedule_priority</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, audio_path.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = audio_path_schedule_priority
</UL>
<BR>[Called By]<UL><LI><a href="#[e77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_suspend
<LI><a href="#[e76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_schedule
</UL>

<P><STRONG><a name="[e85]"></a>audio_path_voice_start</STRONG> (Thumb, 94 bytes, Stack size 24 bytes, audio_path.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = audio_path_voice_start &rArr; dsp_mgr_session_enable &rArr; dsp_state_machine &rArr; dsp_power_on &rArr; dsp_hal_reset &rArr; shm_enable &rArr; h2d_cmd_send &rArr; shm_cmd_send &rArr; wr_queue_send
</UL>
<BR>[Calls]<UL><LI><a href="#[e74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_find_category
<LI><a href="#[e89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_mgr_peek_running_path
<LI><a href="#[e77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_suspend
<LI><a href="#[e86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_is_mixable
<LI><a href="#[e71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_state_set
<LI><a href="#[e88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_event_flag_wait
<LI><a href="#[e69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_mgr_session_enable
<LI><a href="#[e87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_session_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[e76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_schedule
</UL>

<P><STRONG><a name="[ad]"></a>audio_mgr_codec_timer_cback</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, audio_path.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = audio_mgr_codec_timer_cback &rArr; sys_timer_stop &rArr; sys_hp_timer_list_remove &rArr; hw_timer_restart &rArr; hw_timer_safe_stop &rArr; hw_timer_set_div
</UL>
<BR>[Calls]<UL><LI><a href="#[9b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_stop
<LI><a href="#[e6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_mgr_idle
<LI><a href="#[ec0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_mgr_dsp2_ref_get
<LI><a href="#[ec1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_power_off
</UL>
<BR>[Called By]<UL><LI><a href="#[a3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_power_off
</UL>
<BR>[Address Reference Count : 1]<UL><LI> audio_path.o(.text)
</UL>
<P><STRONG><a name="[ae]"></a>audio_mgr_dsp_timer_cback</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, audio_path.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = audio_mgr_dsp_timer_cback &rArr; dsp_mgr_power_off &rArr; dsp_state_machine &rArr; dsp_power_on &rArr; dsp_hal_reset &rArr; shm_enable &rArr; h2d_cmd_send &rArr; shm_cmd_send &rArr; wr_queue_send
</UL>
<BR>[Calls]<UL><LI><a href="#[9b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_stop
<LI><a href="#[e6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_mgr_idle
<LI><a href="#[e70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_mgr_power_off
<LI><a href="#[ec0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_mgr_dsp2_ref_get
</UL>
<BR>[Called By]<UL><LI><a href="#[a3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_power_off
</UL>
<BR>[Address Reference Count : 1]<UL><LI> audio_path.o(.text)
</UL>
<P><STRONG><a name="[e93]"></a>audio_path_audio_init</STRONG> (Thumb, 148 bytes, Stack size 48 bytes, audio_path.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = audio_path_audio_init &rArr; sport_mgr_session_create &rArr; sport_mgr_sport_path_take &rArr; audio_route_physical_path_take &rArr; audio_route_physical_path_get &rArr; audio_route_voice_physical_path_get
</UL>
<BR>[Calls]<UL><LI><a href="#[ec4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_mgr_session_create
<LI><a href="#[e9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_mgr_destroy
<LI><a href="#[ec5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_mgr_session_create
<LI><a href="#[e99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_session_destroy
<LI><a href="#[ec3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_session_create
<LI><a href="#[ec2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_codec_chann_num_get
</UL>
<BR>[Called By]<UL><LI><a href="#[a60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_create
</UL>

<P><STRONG><a name="[e94]"></a>audio_path_voice_init</STRONG> (Thumb, 184 bytes, Stack size 40 bytes, audio_path.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = audio_path_voice_init &rArr; sport_mgr_session_create &rArr; sport_mgr_sport_path_take &rArr; audio_route_physical_path_take &rArr; audio_route_physical_path_get &rArr; audio_route_voice_physical_path_get
</UL>
<BR>[Calls]<UL><LI><a href="#[ec4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_mgr_session_create
<LI><a href="#[e9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_mgr_destroy
<LI><a href="#[ec5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_mgr_session_create
<LI><a href="#[e99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_session_destroy
<LI><a href="#[ec3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_session_create
</UL>
<BR>[Called By]<UL><LI><a href="#[a60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_create
</UL>

<P><STRONG><a name="[e95]"></a>audio_path_record_init</STRONG> (Thumb, 152 bytes, Stack size 48 bytes, audio_path.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = audio_path_record_init &rArr; sport_mgr_session_create &rArr; sport_mgr_sport_path_take &rArr; audio_route_physical_path_take &rArr; audio_route_physical_path_get &rArr; audio_route_voice_physical_path_get
</UL>
<BR>[Calls]<UL><LI><a href="#[ec6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_route_record_dev_set
<LI><a href="#[ec4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_mgr_session_create
<LI><a href="#[e9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_mgr_destroy
<LI><a href="#[ec5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_mgr_session_create
<LI><a href="#[e99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_session_destroy
<LI><a href="#[ec3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_session_create
<LI><a href="#[ec2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_codec_chann_num_get
</UL>
<BR>[Called By]<UL><LI><a href="#[a60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_create
</UL>

<P><STRONG><a name="[e96]"></a>audio_path_tone_init</STRONG> (Thumb, 102 bytes, Stack size 32 bytes, audio_path.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = audio_path_tone_init &rArr; sport_mgr_session_create &rArr; sport_mgr_sport_path_take &rArr; audio_route_physical_path_take &rArr; audio_route_physical_path_get &rArr; audio_route_voice_physical_path_get
</UL>
<BR>[Calls]<UL><LI><a href="#[ec4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_mgr_session_create
<LI><a href="#[e9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_mgr_destroy
<LI><a href="#[ec5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_mgr_session_create
<LI><a href="#[e99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_session_destroy
<LI><a href="#[ec3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_session_create
</UL>
<BR>[Called By]<UL><LI><a href="#[a60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_create
</UL>

<P><STRONG><a name="[e97]"></a>audio_path_vp_init</STRONG> (Thumb, 100 bytes, Stack size 32 bytes, audio_path.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = audio_path_vp_init &rArr; sport_mgr_session_create &rArr; sport_mgr_sport_path_take &rArr; audio_route_physical_path_take &rArr; audio_route_physical_path_get &rArr; audio_route_voice_physical_path_get
</UL>
<BR>[Calls]<UL><LI><a href="#[ec4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_mgr_session_create
<LI><a href="#[e9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_mgr_destroy
<LI><a href="#[ec5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_mgr_session_create
<LI><a href="#[e99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_session_destroy
<LI><a href="#[ec3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_session_create
</UL>
<BR>[Called By]<UL><LI><a href="#[a60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_create
</UL>

<P><STRONG><a name="[e98]"></a>audio_path_analog_init</STRONG> (Thumb, 100 bytes, Stack size 32 bytes, audio_path.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = audio_path_analog_init &rArr; sport_mgr_session_create &rArr; sport_mgr_sport_path_take &rArr; audio_route_physical_path_take &rArr; audio_route_physical_path_get &rArr; audio_route_voice_physical_path_get
</UL>
<BR>[Calls]<UL><LI><a href="#[ec4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_mgr_session_create
<LI><a href="#[e9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_mgr_destroy
<LI><a href="#[ec5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_mgr_session_create
<LI><a href="#[e99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_session_destroy
<LI><a href="#[ec3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_session_create
</UL>
<BR>[Called By]<UL><LI><a href="#[a60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_path_create
</UL>

<P><STRONG><a name="[edb]"></a>float2Hint</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, audio_interval_eval.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = float2Hint &rArr; __aeabi_fmul
</UL>
<BR>[Calls]<UL><LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[a7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
</UL>
<BR>[Called By]<UL><LI><a href="#[e67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_inteval_evaluator_update
</UL>

<P><STRONG><a name="[ed9]"></a>interval_queue_update</STRONG> (Thumb, 136 bytes, Stack size 32 bytes, audio_interval_eval.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = interval_queue_update &rArr; __aeabi_fmul
</UL>
<BR>[Calls]<UL><LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[940]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[ea9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[eaa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[e67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_inteval_evaluator_update
</UL>

<P><STRONG><a name="[eda]"></a>param_long_term_update</STRONG> (Thumb, 130 bytes, Stack size 24 bytes, audio_interval_eval.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = param_long_term_update &rArr; __aeabi_fmul
</UL>
<BR>[Calls]<UL><LI><a href="#[ed6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_interval_check_handle
<LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[940]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[ea9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[eaa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[e67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_inteval_evaluator_update
</UL>

<P><STRONG><a name="[eed]"></a>dsp_ipc_set_audio_sport_action</STRONG> (Thumb, 66 bytes, Stack size 32 bytes, dsp_ipc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = dsp_ipc_set_audio_sport_action &rArr; dsp_ipc_h2d_cmd_send &rArr; h2d_cmd_send &rArr; shm_cmd_send &rArr; wr_queue_send
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[ee0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_ipc_h2d_cmd_send
</UL>
<BR>[Called By]<UL><LI><a href="#[eef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_ipc_set_audio_sport1_action
<LI><a href="#[eee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_ipc_set_audio_sport0_action
</UL>

<P><STRONG><a name="[ef8]"></a>dsp_ipc_event_parser</STRONG> (Thumb, 438 bytes, Stack size 24 bytes, dsp_ipc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = dsp_ipc_event_parser
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_ipc_hal_cback
</UL>

<P><STRONG><a name="[bd]"></a>dsp_ipc_hal_cback</STRONG> (Thumb, 104 bytes, Stack size 312 bytes, dsp_ipc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = dsp_ipc_hal_cback &rArr; d2h_cmd_recv &rArr; shm_cmd_recv &rArr; wr_queue_rcv
</UL>
<BR>[Calls]<UL><LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[efa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_send_msg (via Veneer)
<LI><a href="#[ef9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;d2h_cmd_recv
<LI><a href="#[ef8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_ipc_event_parser
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dsp_ipc.o(.text)
</UL>
<P><STRONG><a name="[f00]"></a>dsp_ipc_action_send</STRONG> (Thumb, 182 bytes, Stack size 64 bytes, dsp_ipc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = dsp_ipc_action_send &rArr; h2d_cmd_send &rArr; shm_cmd_send &rArr; wr_queue_send
</UL>
<BR>[Calls]<UL><LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[a4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;h2d_cmd_send
</UL>
<BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_ipc_encoder_action
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_ipc_decoder_action
</UL>

<P><STRONG><a name="[f02]"></a>dipc2_cmd_send</STRONG> (Thumb, 52 bytes, Stack size 40 bytes, dsp_ipc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = dipc2_cmd_send &rArr; h2d_cmd_send &rArr; shm_cmd_send &rArr; wr_queue_send
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[a4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;h2d_cmd_send
</UL>
<BR>[Called By]<UL><LI><a href="#[f05]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dipc_gate_stop_core
<LI><a href="#[f03]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dipc_gate_start_core
</UL>

<P><STRONG><a name="[f03]"></a>dipc_gate_start_core</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, dsp_ipc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = dipc_gate_start_core &rArr; dipc2_cmd_send &rArr; h2d_cmd_send &rArr; shm_cmd_send &rArr; wr_queue_send
</UL>
<BR>[Calls]<UL><LI><a href="#[f02]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dipc2_cmd_send
</UL>
<BR>[Called By]<UL><LI><a href="#[f04]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dipc_gate_start
</UL>

<P><STRONG><a name="[f05]"></a>dipc_gate_stop_core</STRONG> (Thumb, 112 bytes, Stack size 16 bytes, dsp_ipc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = dipc_gate_stop_core &rArr; dipc2_cmd_send &rArr; h2d_cmd_send &rArr; shm_cmd_send &rArr; wr_queue_send
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[f02]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dipc2_cmd_send
</UL>
<BR>[Called By]<UL><LI><a href="#[f06]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dipc_gate_stop
</UL>

<P><STRONG><a name="[ee0]"></a>dsp_ipc_h2d_cmd_send</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dsp_ipc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = dsp_ipc_h2d_cmd_send &rArr; h2d_cmd_send &rArr; shm_cmd_send &rArr; wr_queue_send
</UL>
<BR>[Calls]<UL><LI><a href="#[a4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;h2d_cmd_send
</UL>
<BR>[Called By]<UL><LI><a href="#[a94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_ipc_voice_nrec_set
<LI><a href="#[a8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_ipc_voice_eq_set
<LI><a href="#[a8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_ipc_record_eq_set
<LI><a href="#[a8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_ipc_audio_eq_set
<LI><a href="#[f01]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_ipc_init_dsp_sdk
<LI><a href="#[efc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_ipc_voice_prompt_start
<LI><a href="#[efb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_ipc_composite_data_send
<LI><a href="#[ef7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_ipc_sport_set
<LI><a href="#[ef6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_ipc_set_signal_proc_start
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_ipc_voice_prompt_end
<LI><a href="#[ef5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_ipc_set_log_output_sel
<LI><a href="#[ef4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_ipc_set_tx_path_ramp_gain_control
<LI><a href="#[ef3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_ipc_set_rws
<LI><a href="#[ef2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_ipc_set_rws_init
<LI><a href="#[ef1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_ipc_set_sbc_encoder_hdr_config
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_ipc_set_action_control
<LI><a href="#[ef0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_ipc_set_fade_in_out_control
<LI><a href="#[eec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_ipc_get_algo_status
<LI><a href="#[eeb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_ipc_set_stream_channel_in_config
<LI><a href="#[eea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_ipc_set_stream_channel_out_config
<LI><a href="#[ee9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_ipc_set_lc3_encoder
<LI><a href="#[ee8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_ipc_set_lc3_decoder
<LI><a href="#[ee7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_ipc_set_encoder
<LI><a href="#[ee6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_ipc_set_decoder
<LI><a href="#[ee5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_ipc_set_dsp_config
<LI><a href="#[ee4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_ipc_set_power_down
<LI><a href="#[ee3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_ipc_set_boot_config
<LI><a href="#[ee2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_ipc_set_decode_emtpy
<LI><a href="#[ee1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_ipc_set_fifo_len
<LI><a href="#[eed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_ipc_set_audio_sport_action
<LI><a href="#[ed4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_ipc_set_rws_asrc_ratio
<LI><a href="#[ea6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_ipc_set_volume_level
<LI><a href="#[ebe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_ipc_set_voice_adc_gain
<LI><a href="#[ebc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_ipc_set_tone_gain
<LI><a href="#[ebf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_ipc_set_record_adc_gain
<LI><a href="#[ece]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_ipc_set_low_latency_mode
<LI><a href="#[eb7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_ipc_set_latency_report
<LI><a href="#[e9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_ipc_set_force_dummy_pkt
<LI><a href="#[ebb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_ipc_set_dac_gain
</UL>

<P><STRONG><a name="[c1]"></a>dsp_mgr_wait_fw_ready_handler</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, dsp_mgr.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> dsp_mgr.o(.text)
</UL>
<P><STRONG><a name="[f15]"></a>dsp_mgr_deployment_traverse</STRONG> (Thumb, 162 bytes, Stack size 48 bytes, dsp_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = dsp_mgr_deployment_traverse &rArr; audio_route_physical_path_take &rArr; audio_route_physical_path_get &rArr; audio_route_voice_physical_path_get
</UL>
<BR>[Calls]<UL><LI><a href="#[aa5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_route_physical_path_take
<LI><a href="#[f16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_route_physical_path_give
</UL>
<BR>[Called By]<UL><LI><a href="#[eca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_mgr_session_run
<LI><a href="#[e7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_mgr_session_disable
</UL>

<P><STRONG><a name="[f17]"></a>dsp_download_algo_param</STRONG> (Thumb, 180 bytes, Stack size 40 bytes, dsp_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = dsp_download_algo_param &rArr; dsp_ipc_download_algo_param &rArr; h2d_cmd_send &rArr; shm_cmd_send &rArr; wr_queue_send
</UL>
<BR>[Calls]<UL><LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_flash_nor_read
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_cur_bank_img_payload_addr_get
<LI><a href="#[f07]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_ipc_download_algo_param
<LI><a href="#[e6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_event_flag_post
<LI><a href="#[e81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_event_flag_check
</UL>
<BR>[Called By]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_mgr_sport_start
</UL>

<P><STRONG><a name="[c2]"></a>dsp_mgr_wait_load_handler</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, dsp_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = dsp_mgr_wait_load_handler &rArr; dsp_send_msg
</UL>
<BR>[Calls]<UL><LI><a href="#[efa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_send_msg (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dsp_mgr.o(.text)
</UL>
<P><STRONG><a name="[c3]"></a>dsp_mgr_wait_fw_stop_handler</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, dsp_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = dsp_mgr_wait_fw_stop_handler &rArr; dsp_state_machine &rArr; dsp_power_on &rArr; dsp_hal_reset &rArr; shm_enable &rArr; h2d_cmd_send &rArr; shm_cmd_send &rArr; wr_queue_send
</UL>
<BR>[Calls]<UL><LI><a href="#[f1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_mgr_is_idle
<LI><a href="#[f1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_state_machine
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dsp_mgr.o(.text)
</UL>
<P><STRONG><a name="[c4]"></a>dsp_mgr_wait_fade_out_finish_cback</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, dsp_mgr.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> dsp_mgr.o(.text)
</UL>
<P><STRONG><a name="[18a]"></a>dsp_notification_cfg_setting</STRONG> (Thumb, 66 bytes, Stack size 56 bytes, dsp_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = dsp_notification_cfg_setting &rArr; dsp_ipc_set_decoder &rArr; dsp_ipc_h2d_cmd_send &rArr; h2d_cmd_send &rArr; shm_cmd_send &rArr; wr_queue_send
</UL>
<BR>[Calls]<UL><LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4 (via Veneer)
<LI><a href="#[f18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_mgr_sub_state_get
<LI><a href="#[eea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_ipc_set_stream_channel_out_config
<LI><a href="#[ee6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_ipc_set_decoder
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dsp_mgr.o(.constdata)
</UL>
<P><STRONG><a name="[187]"></a>dsp_audio_cfg_setting</STRONG> (Thumb, 136 bytes, Stack size 56 bytes, dsp_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = dsp_audio_cfg_setting &rArr; dsp_ipc_set_lc3_decoder &rArr; dsp_ipc_h2d_cmd_send &rArr; h2d_cmd_send &rArr; shm_cmd_send &rArr; wr_queue_send
</UL>
<BR>[Calls]<UL><LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4 (via Veneer)
<LI><a href="#[eea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_ipc_set_stream_channel_out_config
<LI><a href="#[ee8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_ipc_set_lc3_decoder
<LI><a href="#[ee6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_ipc_set_decoder
<LI><a href="#[ee2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_ipc_set_decode_emtpy
<LI><a href="#[ee1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_ipc_set_fifo_len
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dsp_mgr.o(.constdata)
</UL>
<P><STRONG><a name="[188]"></a>dsp_voice_cfg_setting</STRONG> (Thumb, 140 bytes, Stack size 72 bytes, dsp_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = dsp_voice_cfg_setting &rArr; dsp_ipc_set_lc3_encoder &rArr; dsp_ipc_h2d_cmd_send &rArr; h2d_cmd_send &rArr; shm_cmd_send &rArr; wr_queue_send
</UL>
<BR>[Calls]<UL><LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4 (via Veneer)
<LI><a href="#[eea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_ipc_set_stream_channel_out_config
<LI><a href="#[ee9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_ipc_set_lc3_encoder
<LI><a href="#[ee8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_ipc_set_lc3_decoder
<LI><a href="#[ee7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_ipc_set_encoder
<LI><a href="#[ee6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_ipc_set_decoder
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dsp_mgr.o(.constdata)
</UL>
<P><STRONG><a name="[f23]"></a>dsp_mgr_gate_status_handler</STRONG> (Thumb, 198 bytes, Stack size 24 bytes, dsp_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = dsp_mgr_gate_status_handler &rArr; sys_event_flag_post &rArr; sys_event_flag_abort
</UL>
<BR>[Calls]<UL><LI><a href="#[f19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_mgr_sub_state_set
<LI><a href="#[e6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_event_flag_post
</UL>
<BR>[Called By]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_ipc_event_handler
</UL>

<P><STRONG><a name="[cc]"></a>dsp_ipc_event_handler</STRONG> (Thumb, 434 bytes, Stack size 32 bytes, dsp_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = dsp_ipc_event_handler &rArr; dsp_state_machine &rArr; dsp_power_on &rArr; dsp_hal_reset &rArr; shm_enable &rArr; h2d_cmd_send &rArr; shm_cmd_send &rArr; wr_queue_send
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[af2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pm_dsp1_freq_set
<LI><a href="#[cfb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_ipc_publish
<LI><a href="#[f23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_mgr_gate_status_handler
<LI><a href="#[ee5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_ipc_set_dsp_config
<LI><a href="#[e6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_event_flag_post
<LI><a href="#[f1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_state_machine
</UL>
<BR>[Called By]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_mgr_hal_cback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dsp_mgr.o(.text)
</UL>
<P><STRONG><a name="[cb]"></a>dsp_mgr_hal_cback</STRONG> (Thumb, 258 bytes, Stack size 8 bytes, dsp_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = dsp_mgr_hal_cback &rArr; dsp_ipc_event_handler &rArr; dsp_state_machine &rArr; dsp_power_on &rArr; dsp_hal_reset &rArr; shm_enable &rArr; h2d_cmd_send &rArr; shm_cmd_send &rArr; wr_queue_send
</UL>
<BR>[Calls]<UL><LI><a href="#[cfb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_ipc_publish
<LI><a href="#[f1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_mgr_is_idle
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_ipc_event_handler
<LI><a href="#[f11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_load_finish
<LI><a href="#[f0f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_load_next_bin
<LI><a href="#[e6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_event_flag_post
<LI><a href="#[f22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_mailbox_process
<LI><a href="#[f1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_state_machine
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dsp_mgr.o(.text)
</UL>
<P><STRONG><a name="[c8]"></a>dsp_mgr_io_fliter_rx</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, dsp_mgr.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> dsp_mgr.o(.text)
</UL>
<P><STRONG><a name="[c6]"></a>dsp_mgr_io_fliter_tx</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, dsp_mgr.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> dsp_mgr.o(.text)
</UL>
<P><STRONG><a name="[f24]"></a>dsp_mgr_send_action</STRONG> (Thumb, 244 bytes, Stack size 56 bytes, dsp_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = dsp_mgr_send_action &rArr; audio_route_physical_path_take &rArr; audio_route_physical_path_get &rArr; audio_route_voice_physical_path_get
</UL>
<BR>[Calls]<UL><LI><a href="#[aa5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_route_physical_path_take
<LI><a href="#[f16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_route_physical_path_give
</UL>
<BR>[Called By]<UL><LI><a href="#[e7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_mgr_encoder_action
<LI><a href="#[e7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_mgr_decoder_action
</UL>

<P><STRONG><a name="[f29]"></a>audio_decode_set</STRONG> (Thumb, 376 bytes, Stack size 24 bytes, dsp_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = audio_decode_set &rArr; audio_codec_frame_size_get &rArr; opus_frame_size_get
</UL>
<BR>[Calls]<UL><LI><a href="#[ec2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_codec_chann_num_get
<LI><a href="#[f2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_codec_frame_size_get
<LI><a href="#[f2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_codec_frame_duration_get
</UL>
<BR>[Called By]<UL><LI><a href="#[ec5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_mgr_session_create
</UL>

<P><STRONG><a name="[f2c]"></a>voice_encode_decode_set</STRONG> (Thumb, 378 bytes, Stack size 40 bytes, dsp_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = voice_encode_decode_set &rArr; audio_codec_frame_size_get &rArr; opus_frame_size_get
</UL>
<BR>[Calls]<UL><LI><a href="#[ec2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_codec_chann_num_get
<LI><a href="#[f2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_codec_frame_size_get
<LI><a href="#[f2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_codec_frame_duration_get
</UL>
<BR>[Called By]<UL><LI><a href="#[ec5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_mgr_session_create
</UL>

<P><STRONG><a name="[f2d]"></a>record_encode_set</STRONG> (Thumb, 446 bytes, Stack size 32 bytes, dsp_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = record_encode_set &rArr; audio_codec_frame_size_get &rArr; opus_frame_size_get
</UL>
<BR>[Calls]<UL><LI><a href="#[ec2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_codec_chann_num_get
<LI><a href="#[f2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_codec_frame_size_get
<LI><a href="#[f2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_codec_frame_duration_get
</UL>
<BR>[Called By]<UL><LI><a href="#[ec5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_mgr_session_create
</UL>

<P><STRONG><a name="[cd]"></a>notification_wait_finish</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, dsp_mgr.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> dsp_mgr.o(.text)
</UL>
<P><STRONG><a name="[189]"></a>dsp_record_cfg_setting</STRONG> (Thumb, 100 bytes, Stack size 64 bytes, dsp_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = dsp_record_cfg_setting &rArr; dsp_ipc_set_lc3_encoder &rArr; dsp_ipc_h2d_cmd_send &rArr; h2d_cmd_send &rArr; shm_cmd_send &rArr; wr_queue_send
</UL>
<BR>[Calls]<UL><LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4 (via Veneer)
<LI><a href="#[ef1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_ipc_set_sbc_encoder_hdr_config
<LI><a href="#[eea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_ipc_set_stream_channel_out_config
<LI><a href="#[ee9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_ipc_set_lc3_encoder
<LI><a href="#[ee7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_ipc_set_encoder
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dsp_mgr.o(.constdata)
</UL>
<P><STRONG><a name="[f18]"></a>dsp_mgr_sub_state_get</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, dsp_mgr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_notification_cfg_setting
<LI><a href="#[e80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_mgr_is_stable
<LI><a href="#[eba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_mgr_fade_out_start
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_mgr_sport_stop
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_mgr_sport_start
</UL>

<P><STRONG><a name="[f19]"></a>dsp_mgr_sub_state_set</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, dsp_mgr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[f23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_mgr_gate_status_handler
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_mgr_sport_stop
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_mgr_sport_start
</UL>

<P><STRONG><a name="[f26]"></a>dsp_param_init</STRONG> (Thumb, 104 bytes, Stack size 16 bytes, dsp_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = dsp_param_init &rArr; dsp_algo_param_load &rArr; fmc_flash_nor_read
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_flash_nor_read
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_cur_bank_img_payload_addr_get
<LI><a href="#[f14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_algo_param_load
</UL>
<BR>[Called By]<UL><LI><a href="#[e8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_mgr_init
</UL>

<P><STRONG><a name="[f1e]"></a>dsp_mgr_is_idle</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, dsp_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = dsp_mgr_is_idle
</UL>
<BR>[Called By]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_mgr_hal_cback
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_mgr_wait_fw_stop_handler
</UL>

<P><STRONG><a name="[f2f]"></a>dsp_mgr_notification_stop</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, dsp_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = dsp_mgr_notification_stop &rArr; dsp_send_msg
</UL>
<BR>[Calls]<UL><LI><a href="#[efa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_send_msg (via Veneer)
<LI><a href="#[e81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_event_flag_check
</UL>
<BR>[Called By]<UL><LI><a href="#[e9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_mgr_voice_prompt_stop
<LI><a href="#[e9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_mgr_composite_stop
</UL>

<P><STRONG><a name="[d2]"></a>dsp_mgr_sport_set_post_cback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, dsp_mgr.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> dsp_mgr.o(.text)
</UL>
<P><STRONG><a name="[d3]"></a>dsp_mgr_sport_set</STRONG> (Thumb, 226 bytes, Stack size 56 bytes, dsp_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = dsp_mgr_sport_set &rArr; dsp_ipc_sport_set &rArr; dsp_ipc_h2d_cmd_send &rArr; h2d_cmd_send &rArr; shm_cmd_send &rArr; wr_queue_send
</UL>
<BR>[Calls]<UL><LI><a href="#[f30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_route_sport_cfg_get
<LI><a href="#[ef7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_ipc_sport_set
<LI><a href="#[f31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_mgr_tx_channel_mode_get
<LI><a href="#[f32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_mgr_sample_rate_get
<LI><a href="#[f33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_mgr_rx_channel_mode_get
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dsp_mgr.o(.text)
</UL>
<P><STRONG><a name="[10f6]"></a>hw_timer_set_div</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, hw_tim.o(.ram_text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = hw_timer_set_div
</UL>
<BR>[Called By]<UL><LI><a href="#[10f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hw_timer_safe_stop
</UL>

<P><STRONG><a name="[d7]"></a>hw_timer_pm_check</STRONG> (Thumb, 222 bytes, Stack size 40 bytes, hw_tim.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = hw_timer_pm_check
</UL>
<BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hw_tim.o(.text)
</UL>
<P><STRONG><a name="[f3d]"></a>hw_timer_update_isr</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, hw_tim.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = hw_timer_update_isr &rArr; RamVectorTableUpdate_for_xip_isr
</UL>
<BR>[Calls]<UL><LI><a href="#[f35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RamVectorTableUpdate_rom (via Veneer)
<LI><a href="#[f34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RamVectorTableUpdate_for_xip_isr
</UL>
<BR>[Called By]<UL><LI><a href="#[f39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hw_timer_driver_init_int
</UL>

<P><STRONG><a name="[f39]"></a>hw_timer_driver_init_int</STRONG> (Thumb, 160 bytes, Stack size 96 bytes, hw_tim.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = hw_timer_driver_init_int &rArr; hw_timer_update_isr &rArr; RamVectorTableUpdate_for_xip_isr
</UL>
<BR>[Calls]<UL><LI><a href="#[f43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_INTConfig (via Veneer)
<LI><a href="#[f3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_StructInit (via Veneer)
<LI><a href="#[f40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TimeBaseInit (via Veneer)
<LI><a href="#[f3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hw_timer_rcc_clock_cmd
<LI><a href="#[f41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hw_timer_get_vectorn_from_id
<LI><a href="#[f42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hw_timer_get_irqn_from_id
<LI><a href="#[f3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hw_timer_update_isr
</UL>
<BR>[Called By]<UL><LI><a href="#[f38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hw_timer_create_int
</UL>

<P><STRONG><a name="[f44]"></a>aes256_key_swap</STRONG> (Thumb, 40 bytes, Stack size 32 bytes, aes256_ecb_api.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = aes256_key_swap
</UL>
<BR>[Calls]<UL><LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[ce9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aes256_ecb_encrypt
</UL>

<P><STRONG><a name="[f46]"></a>codec_drv_dump_cur_setting</STRONG> (Thumb, 378 bytes, Stack size 48 bytes, codec_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = codec_drv_dump_cur_setting
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[f4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_event_process
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_active_state
</UL>

<P><STRONG><a name="[f74]"></a>codec_drv_check_depop_done</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, codec_driver.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[f4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_event_process
<LI><a href="#[fa3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_push_state
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_ad_depop_state
</UL>

<P><STRONG><a name="[d9]"></a>codec_drv_ad_depop_halt_timer_cb</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, codec_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = codec_drv_ad_depop_halt_timer_cb &rArr; codec_drv_event_process &rArr; codec_drv_set_sample_rate
</UL>
<BR>[Calls]<UL><LI><a href="#[9b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_stop
<LI><a href="#[9b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_id_get
<LI><a href="#[977]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_delete
<LI><a href="#[f4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_event_process
</UL>
<BR>[Address Reference Count : 1]<UL><LI> codec_driver.o(.text)
</UL>
<P><STRONG><a name="[f4c]"></a>codec_drv_halt_adc_depop</STRONG> (Thumb, 132 bytes, Stack size 24 bytes, codec_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = codec_drv_halt_adc_depop &rArr; sys_timer_restart &rArr; sys_hp_timer_list_insert &rArr; hw_timer_restart &rArr; hw_timer_safe_stop &rArr; hw_timer_set_div
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[9b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_start
<LI><a href="#[9b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_restart
<LI><a href="#[9b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_create
</UL>
<BR>[Called By]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_halt_adc_config
</UL>

<P><STRONG><a name="[de]"></a>codec_drv_halt_adc_config</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, codec_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = codec_drv_halt_adc_config &rArr; codec_drv_halt_adc_depop &rArr; sys_timer_restart &rArr; sys_hp_timer_list_insert &rArr; hw_timer_restart &rArr; hw_timer_safe_stop &rArr; hw_timer_set_div
</UL>
<BR>[Calls]<UL><LI><a href="#[f4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_halt_adc_depop
</UL>
<BR>[Address Reference Count : 1]<UL><LI> codec_driver.o(.text)
</UL>
<P><STRONG><a name="[f9e]"></a>codec_drv_adc_dchpf_ctrl</STRONG> (Thumb, 204 bytes, Stack size 20 bytes, codec_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = codec_drv_adc_dchpf_ctrl
</UL>
<BR>[Called By]<UL><LI><a href="#[f73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_adc_depop_process
</UL>

<P><STRONG><a name="[f4e]"></a>codec_drv_micbias_process</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, codec_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = codec_drv_micbias_process &rArr; audio_pad_bias_set
</UL>
<BR>[Calls]<UL><LI><a href="#[f51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_pad_bias_set
<LI><a href="#[f50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_pad_bias_enable
<LI><a href="#[f4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_check_micbias
</UL>
<BR>[Called By]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_micbias_parser
<LI><a href="#[f73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_adc_depop_process
</UL>

<P><STRONG><a name="[f5d]"></a>codec_drv_adc_phase_align</STRONG> (Thumb, 236 bytes, Stack size 36 bytes, codec_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = codec_drv_adc_phase_align
</UL>
<BR>[Called By]<UL><LI><a href="#[f5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_adc_digital_parser
<LI><a href="#[f73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_adc_depop_process
</UL>

<P><STRONG><a name="[f9d]"></a>codec_drv_mic_mute_setting</STRONG> (Thumb, 104 bytes, Stack size 16 bytes, codec_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = codec_drv_mic_mute_setting
</UL>
<BR>[Called By]<UL><LI><a href="#[f73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_adc_depop_process
</UL>

<P><STRONG><a name="[f71]"></a>codec_drv_set_sample_rate</STRONG> (Thumb, 218 bytes, Stack size 80 bytes, codec_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = codec_drv_set_sample_rate
</UL>
<BR>[Calls]<UL><LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[f4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_event_process
</UL>

<P><STRONG><a name="[dd]"></a>codec_drv_halt_dac_config</STRONG> (Thumb, 88 bytes, Stack size 24 bytes, codec_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = codec_drv_halt_dac_config &rArr; sys_timer_restart &rArr; sys_hp_timer_list_insert &rArr; hw_timer_restart &rArr; hw_timer_safe_stop &rArr; hw_timer_set_div
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[9b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_start
<LI><a href="#[9b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_restart
<LI><a href="#[9b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_create
</UL>
<BR>[Address Reference Count : 1]<UL><LI> codec_driver.o(.text)
</UL>
<P><STRONG><a name="[db]"></a>codec_drv_sidetone_config</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, codec_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = codec_drv_sidetone_config &rArr; codec_drv_sidetone_parser
</UL>
<BR>[Calls]<UL><LI><a href="#[f72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_sidetone_parser
</UL>
<BR>[Address Reference Count : 1]<UL><LI> codec_driver.o(.text)
</UL>
<P><STRONG><a name="[f80]"></a>codec_drv_sidetone_clock_ctrl</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, codec_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = codec_drv_sidetone_clock_ctrl
</UL>
<BR>[Called By]<UL><LI><a href="#[f7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_sidetone_enable
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_msg_handler
</UL>

<P><STRONG><a name="[e0]"></a>codec_drv_sidetone_timer_cb</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, codec_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = codec_drv_sidetone_timer_cb &rArr; codec_drv_sidetone_timer_ctrl &rArr; sys_timer_restart &rArr; sys_hp_timer_list_insert &rArr; hw_timer_restart &rArr; hw_timer_safe_stop &rArr; hw_timer_set_div
</UL>
<BR>[Calls]<UL><LI><a href="#[f48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_send_isr_msg
<LI><a href="#[f76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_sidetone_timer_ctrl
</UL>
<BR>[Address Reference Count : 1]<UL><LI> codec_driver.o(.text)
</UL>
<P><STRONG><a name="[f76]"></a>codec_drv_sidetone_timer_ctrl</STRONG> (Thumb, 116 bytes, Stack size 24 bytes, codec_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = codec_drv_sidetone_timer_ctrl &rArr; sys_timer_restart &rArr; sys_hp_timer_list_insert &rArr; hw_timer_restart &rArr; hw_timer_safe_stop &rArr; hw_timer_set_div
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[9b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_stop
<LI><a href="#[9b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_start
<LI><a href="#[9b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_restart
<LI><a href="#[9b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_create
<LI><a href="#[977]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_delete
</UL>
<BR>[Called By]<UL><LI><a href="#[f82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_sidetone_disable
<LI><a href="#[f7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_sidetone_enable
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_msg_handler
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_sidetone_timer_cb
</UL>

<P><STRONG><a name="[f77]"></a>codec_drv_dc_diff_calculate</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, codec_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = codec_drv_dc_diff_calculate
</UL>
<BR>[Calls]<UL><LI><a href="#[960]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul (via Veneer)
<LI><a href="#[95d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d (via Veneer)
<LI><a href="#[963]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[f78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_dc_offset_apply
</UL>

<P><STRONG><a name="[f78]"></a>codec_drv_dc_offset_apply</STRONG> (Thumb, 220 bytes, Stack size 40 bytes, codec_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = codec_drv_dc_offset_apply &rArr; codec_drv_dc_diff_calculate
</UL>
<BR>[Calls]<UL><LI><a href="#[f77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_dc_diff_calculate
</UL>
<BR>[Called By]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_active_state
</UL>

<P><STRONG><a name="[f7e]"></a>codec_drv_eq_en_ctrl</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, codec_driver.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[a4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_eq_data_set
<LI><a href="#[f7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_eq_data_clear
</UL>

<P><STRONG><a name="[f79]"></a>codec_drv_eq_target_clear</STRONG> (Thumb, 84 bytes, Stack size 48 bytes, codec_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = codec_drv_eq_target_clear &rArr; codec_drv_eq_coef_write
</UL>
<BR>[Calls]<UL><LI><a href="#[f7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_eq_coef_write
<LI><a href="#[f6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_eq_set_stage_en
</UL>
<BR>[Called By]<UL><LI><a href="#[a4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_eq_data_set
<LI><a href="#[f7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_eq_data_clear
</UL>

<P><STRONG><a name="[18b]"></a>codec_drv_close_state</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, codec_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = codec_drv_close_state
</UL>
<BR>[Address Reference Count : 1]<UL><LI> codec_driver.o(.constdata)
</UL>
<P><STRONG><a name="[18c]"></a>codec_drv_ad_depop_state</STRONG> (Thumb, 138 bytes, Stack size 40 bytes, codec_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = codec_drv_ad_depop_state &rArr; codec_drv_req_send &rArr; codec_drv_req_recv
</UL>
<BR>[Calls]<UL><LI><a href="#[f4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_req_send
<LI><a href="#[f49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_req_process
<LI><a href="#[f74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_check_depop_done
</UL>
<BR>[Address Reference Count : 1]<UL><LI> codec_driver.o(.constdata)
</UL>
<P><STRONG><a name="[18d]"></a>codec_drv_mute_state</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, codec_driver.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> codec_driver.o(.constdata)
</UL>
<P><STRONG><a name="[18e]"></a>codec_drv_active_state</STRONG> (Thumb, 176 bytes, Stack size 24 bytes, codec_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = codec_drv_active_state &rArr; codec_drv_dc_offset_apply &rArr; codec_drv_dc_diff_calculate
</UL>
<BR>[Calls]<UL><LI><a href="#[f5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_hal_action
<LI><a href="#[f4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_req_send
<LI><a href="#[f49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_req_process
<LI><a href="#[f78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_dc_offset_apply
<LI><a href="#[f46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_dump_cur_setting
</UL>
<BR>[Address Reference Count : 1]<UL><LI> codec_driver.o(.constdata)
</UL>
<P><STRONG><a name="[f4f]"></a>codec_drv_check_micbias</STRONG> (Thumb, 100 bytes, Stack size 8 bytes, codec_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = codec_drv_check_micbias
</UL>
<BR>[Called By]<UL><LI><a href="#[f4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_micbias_process
</UL>

<P><STRONG><a name="[f73]"></a>codec_drv_adc_depop_process</STRONG> (Thumb, 146 bytes, Stack size 16 bytes, codec_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = codec_drv_adc_depop_process &rArr; codec_drv_send_push_state_msg &rArr; codec_send_isr_msg
</UL>
<BR>[Calls]<UL><LI><a href="#[f47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_send_push_state_msg
<LI><a href="#[f9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_amic_disable_setting
<LI><a href="#[f9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_mic_mute_setting
<LI><a href="#[f5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_adc_phase_align
<LI><a href="#[f4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_micbias_process
<LI><a href="#[f9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_adc_dchpf_ctrl
</UL>
<BR>[Called By]<UL><LI><a href="#[f4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_event_process
</UL>

<P><STRONG><a name="[f5b]"></a>codec_drv_adc_depop_check</STRONG> (Thumb, 128 bytes, Stack size 20 bytes, codec_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = codec_drv_adc_depop_check
</UL>
<BR>[Called By]<UL><LI><a href="#[f5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_adc_digital_parser
</UL>

<P><STRONG><a name="[f61]"></a>codec_drv_amic_analog_depop_check</STRONG> (Thumb, 138 bytes, Stack size 20 bytes, codec_driver.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[f5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_adc_analog_parser
</UL>

<P><STRONG><a name="[f68]"></a>codec_drv_dac_mute_ctrl</STRONG> (Thumb, 108 bytes, Stack size 20 bytes, codec_driver.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[f67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_dac_digital_config
</UL>

<P><STRONG><a name="[f66]"></a>codec_drv_check_adc_decimation_mapping</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, codec_driver.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[f67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_dac_digital_config
<LI><a href="#[f65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_dac_digital_parser
<LI><a href="#[fa4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_sidetone_mute_ctrl
</UL>

<P><STRONG><a name="[fa0]"></a>codec_drv_eq_get_offset</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, codec_driver.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[f7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_eq_coef_write
<LI><a href="#[f6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_eq_set_stage_en
</UL>

<P><STRONG><a name="[f6d]"></a>codec_drv_eq_set_stage_en</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, codec_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = codec_drv_eq_set_stage_en
</UL>
<BR>[Calls]<UL><LI><a href="#[fa0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_eq_get_offset
</UL>
<BR>[Called By]<UL><LI><a href="#[f7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_eq_band_write
<LI><a href="#[f6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_eq_dac_parser
<LI><a href="#[f6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_eq_adc_parser
<LI><a href="#[f79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_eq_target_clear
</UL>

<P><STRONG><a name="[f6c]"></a>codec_drv_eq_get_stage_en</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, codec_driver.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[f6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_eq_dac_parser
<LI><a href="#[f6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_eq_adc_parser
</UL>

<P><STRONG><a name="[f81]"></a>codec_drv_sidetone_boost_gain_set</STRONG> (Thumb, 42 bytes, Stack size 12 bytes, codec_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = codec_drv_sidetone_boost_gain_set
</UL>
<BR>[Called By]<UL><LI><a href="#[f7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_sidetone_enable
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_msg_handler
</UL>

<P><STRONG><a name="[f83]"></a>codec_drv_sidetone_dvol_gain_ctrl</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, codec_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = codec_drv_sidetone_dvol_gain_ctrl
</UL>
<BR>[Called By]<UL><LI><a href="#[f82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_sidetone_disable
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_msg_handler
</UL>

<P><STRONG><a name="[f7a]"></a>codec_drv_eq_coef_write</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, codec_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = codec_drv_eq_coef_write
</UL>
<BR>[Calls]<UL><LI><a href="#[fa0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_eq_get_offset
</UL>
<BR>[Called By]<UL><LI><a href="#[f7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_eq_band_write
<LI><a href="#[f79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_eq_target_clear
</UL>

<P><STRONG><a name="[f7d]"></a>codec_drv_eq_target_convert</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, codec_driver.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[a4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_eq_data_set
<LI><a href="#[f7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_eq_data_clear
</UL>

<P><STRONG><a name="[f9f]"></a>codec_drv_amic_disable_setting</STRONG> (Thumb, 94 bytes, Stack size 16 bytes, codec_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = codec_drv_amic_disable_setting
</UL>
<BR>[Called By]<UL><LI><a href="#[f73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_adc_depop_process
</UL>

<P><STRONG><a name="[fa4]"></a>codec_drv_sidetone_mute_ctrl</STRONG> (Thumb, 102 bytes, Stack size 16 bytes, codec_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = codec_drv_sidetone_mute_ctrl
</UL>
<BR>[Calls]<UL><LI><a href="#[f66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_check_adc_decimation_mapping
</UL>
<BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_msg_handler
</UL>

<P><STRONG><a name="[fb0]"></a>shm_traceport_enable</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, dsp_shm.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[fb9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shm_reset
<LI><a href="#[fad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shm_init
</UL>

<P><STRONG><a name="[fc9]"></a>_lshift_word</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, bn.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[fc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bignum_mul
</UL>

<P><STRONG><a name="[fd0]"></a>_rshift_one_bit</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, bn.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[fcd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bignum_div
</UL>

<P><STRONG><a name="[fce]"></a>_lshift_one_bit</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, bn.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[fcd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bignum_div
</UL>

<P><STRONG><a name="[fd5]"></a>muladd</STRONG> (Thumb, 42 bytes, Stack size 20 bytes, uecc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = muladd
</UL>
<BR>[Called By]<UL><LI><a href="#[fd4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uECC_vli_mult
</UL>

<P><STRONG><a name="[fdb]"></a>vli_modInv_update</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, uecc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = vli_modInv_update &rArr; uECC_vli_add
</UL>
<BR>[Calls]<UL><LI><a href="#[fdc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uECC_vli_rshift1
<LI><a href="#[fc5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uECC_vli_add
</UL>
<BR>[Called By]<UL><LI><a href="#[fdd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uECC_vli_modInv
</UL>

<P><STRONG><a name="[18f]"></a>double_jacobian_default</STRONG> (Thumb, 338 bytes, Stack size 96 bytes, uecc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 252<LI>Call Chain = double_jacobian_default &rArr; uECC_vli_modSquare_fast &rArr; uECC_vli_modMult_fast &rArr; uECC_vli_mult &rArr; muladd
</UL>
<BR>[Calls]<UL><LI><a href="#[b38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uECC_vli_isZero
<LI><a href="#[fda]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uECC_vli_modSquare_fast
<LI><a href="#[fd9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uECC_vli_modMult_fast
<LI><a href="#[fd8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uECC_vli_modSub
<LI><a href="#[fd6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uECC_vli_modAdd
<LI><a href="#[fdc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uECC_vli_rshift1
<LI><a href="#[fde]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uECC_vli_testBit
<LI><a href="#[fcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uECC_vli_set
<LI><a href="#[fc5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uECC_vli_add
</UL>
<BR>[Address Reference Count : 1]<UL><LI> uecc.o(.constdata)
</UL>
<P><STRONG><a name="[190]"></a>x_side_default</STRONG> (Thumb, 84 bytes, Stack size 56 bytes, uecc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 212<LI>Call Chain = x_side_default &rArr; uECC_vli_modSquare_fast &rArr; uECC_vli_modMult_fast &rArr; uECC_vli_mult &rArr; muladd
</UL>
<BR>[Calls]<UL><LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
<LI><a href="#[fda]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uECC_vli_modSquare_fast
<LI><a href="#[fd9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uECC_vli_modMult_fast
<LI><a href="#[fd8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uECC_vli_modSub
<LI><a href="#[fd6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uECC_vli_modAdd
</UL>
<BR>[Address Reference Count : 1]<UL><LI> uecc.o(.constdata)
</UL>
<P><STRONG><a name="[fdf]"></a>omega_mult_secp160r1</STRONG> (Thumb, 68 bytes, Stack size 12 bytes, uecc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = omega_mult_secp160r1 &rArr; uECC_vli_add
</UL>
<BR>[Calls]<UL><LI><a href="#[fdc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uECC_vli_rshift1
<LI><a href="#[fcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uECC_vli_set
<LI><a href="#[fc5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uECC_vli_add
</UL>
<BR>[Called By]<UL><LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vli_mmod_fast_secp160r1
</UL>

<P><STRONG><a name="[191]"></a>vli_mmod_fast_secp160r1</STRONG> (Thumb, 134 bytes, Stack size 64 bytes, uecc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = vli_mmod_fast_secp160r1 &rArr; omega_mult_secp160r1 &rArr; uECC_vli_add
</UL>
<BR>[Calls]<UL><LI><a href="#[fd7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uECC_vli_cmp_unsafe
<LI><a href="#[fdf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;omega_mult_secp160r1
<LI><a href="#[fc7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uECC_vli_sub
<LI><a href="#[fc2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uECC_vli_clear
<LI><a href="#[fc5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uECC_vli_add
</UL>
<BR>[Address Reference Count : 1]<UL><LI> uecc.o(.constdata)
</UL>
<P><STRONG><a name="[192]"></a>vli_mmod_fast_secp256r1</STRONG> (Thumb, 430 bytes, Stack size 56 bytes, uecc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = vli_mmod_fast_secp256r1 &rArr; uECC_vli_sub
</UL>
<BR>[Calls]<UL><LI><a href="#[fd7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uECC_vli_cmp_unsafe
<LI><a href="#[fc7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uECC_vli_sub
<LI><a href="#[fcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uECC_vli_set
<LI><a href="#[fc5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uECC_vli_add
</UL>
<BR>[Address Reference Count : 1]<UL><LI> uecc.o(.constdata)
</UL>
<P><STRONG><a name="[fe0]"></a>apply_z</STRONG> (Thumb, 60 bytes, Stack size 56 bytes, uecc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 212<LI>Call Chain = apply_z &rArr; uECC_vli_modSquare_fast &rArr; uECC_vli_modMult_fast &rArr; uECC_vli_mult &rArr; muladd
</UL>
<BR>[Calls]<UL><LI><a href="#[fda]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uECC_vli_modSquare_fast
<LI><a href="#[fd9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uECC_vli_modMult_fast
</UL>
<BR>[Called By]<UL><LI><a href="#[fe4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XYcZ_initial_double
<LI><a href="#[fe3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EccPoint_mult
</UL>

<P><STRONG><a name="[fe1]"></a>XYcZ_add</STRONG> (Thumb, 202 bytes, Stack size 64 bytes, uecc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 220<LI>Call Chain = XYcZ_add &rArr; uECC_vli_modSquare_fast &rArr; uECC_vli_modMult_fast &rArr; uECC_vli_mult &rArr; muladd
</UL>
<BR>[Calls]<UL><LI><a href="#[fda]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uECC_vli_modSquare_fast
<LI><a href="#[fd9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uECC_vli_modMult_fast
<LI><a href="#[fd8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uECC_vli_modSub
<LI><a href="#[fcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uECC_vli_set
</UL>
<BR>[Called By]<UL><LI><a href="#[fe3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EccPoint_mult
</UL>

<P><STRONG><a name="[fe2]"></a>XYcZ_addC</STRONG> (Thumb, 284 bytes, Stack size 128 bytes, uecc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 284<LI>Call Chain = XYcZ_addC &rArr; uECC_vli_modSquare_fast &rArr; uECC_vli_modMult_fast &rArr; uECC_vli_mult &rArr; muladd
</UL>
<BR>[Calls]<UL><LI><a href="#[fda]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uECC_vli_modSquare_fast
<LI><a href="#[fd9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uECC_vli_modMult_fast
<LI><a href="#[fd8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uECC_vli_modSub
<LI><a href="#[fd6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uECC_vli_modAdd
<LI><a href="#[fcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uECC_vli_set
</UL>
<BR>[Called By]<UL><LI><a href="#[fe3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EccPoint_mult
</UL>

<P><STRONG><a name="[fe3]"></a>EccPoint_mult</STRONG> (Thumb, 338 bytes, Stack size 232 bytes, uecc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 516<LI>Call Chain = EccPoint_mult &rArr; XYcZ_addC &rArr; uECC_vli_modSquare_fast &rArr; uECC_vli_modMult_fast &rArr; uECC_vli_mult &rArr; muladd
</UL>
<BR>[Calls]<UL><LI><a href="#[fdd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uECC_vli_modInv
<LI><a href="#[fd9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uECC_vli_modMult_fast
<LI><a href="#[fd8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uECC_vli_modSub
<LI><a href="#[fde]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uECC_vli_testBit
<LI><a href="#[fe4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XYcZ_initial_double
<LI><a href="#[fe2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XYcZ_addC
<LI><a href="#[fe1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XYcZ_add
<LI><a href="#[fe0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apply_z
<LI><a href="#[fcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uECC_vli_set
</UL>
<BR>[Called By]<UL><LI><a href="#[fe7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EccPoint_compute_public_key
</UL>

<P><STRONG><a name="[fd7]"></a>uECC_vli_cmp_unsafe</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, uecc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = uECC_vli_cmp_unsafe
</UL>
<BR>[Called By]<UL><LI><a href="#[fdd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uECC_vli_modInv
<LI><a href="#[fd6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uECC_vli_modAdd
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vli_mmod_fast_secp256r1
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vli_mmod_fast_secp160r1
</UL>

<P><STRONG><a name="[fe4]"></a>XYcZ_initial_double</STRONG> (Thumb, 108 bytes, Stack size 56 bytes, uecc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 268<LI>Call Chain = XYcZ_initial_double &rArr; apply_z &rArr; uECC_vli_modSquare_fast &rArr; uECC_vli_modMult_fast &rArr; uECC_vli_mult &rArr; muladd
</UL>
<BR>[Calls]<UL><LI><a href="#[fe0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apply_z
<LI><a href="#[fcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uECC_vli_set
<LI><a href="#[fc2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uECC_vli_clear
</UL>
<BR>[Called By]<UL><LI><a href="#[fe3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EccPoint_mult
</UL>

<P><STRONG><a name="[fe7]"></a>EccPoint_compute_public_key</STRONG> (Thumb, 184 bytes, Stack size 112 bytes, uecc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 628<LI>Call Chain = EccPoint_compute_public_key &rArr; EccPoint_mult &rArr; XYcZ_addC &rArr; uECC_vli_modSquare_fast &rArr; uECC_vli_modMult_fast &rArr; uECC_vli_mult &rArr; muladd
</UL>
<BR>[Calls]<UL><LI><a href="#[b38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uECC_vli_isZero
<LI><a href="#[fe5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uECC_generate_random_int
<LI><a href="#[fde]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uECC_vli_testBit
<LI><a href="#[fe3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EccPoint_mult
<LI><a href="#[fc5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uECC_vli_add
</UL>
<BR>[Called By]<UL><LI><a href="#[b3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uECC_compute_public_key
</UL>

<P><STRONG><a name="[e6]"></a>gattc_cccd_timeout</STRONG> (Thumb, 120 bytes, Stack size 48 bytes, bt_gattc_storage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = gattc_cccd_timeout &rArr; sys_timer_delete &rArr; sys_hp_timer_list_remove &rArr; hw_timer_restart &rArr; hw_timer_safe_stop &rArr; hw_timer_set_div
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[ff2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_chann_get_addr
<LI><a href="#[9b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_id_get
<LI><a href="#[977]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_delete
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bt_gattc_storage.o(.text)
</UL>
<P><STRONG><a name="[ec]"></a>notification_buffer_stream_write</STRONG> (Thumb, 92 bytes, Stack size 32 bytes, notification_buffer.o(.ram_text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = notification_buffer_stream_write
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> notification_buffer.o(.text)
</UL>
<P><STRONG><a name="[1048]"></a>notification_buffer_frame_write</STRONG> (Thumb, 236 bytes, Stack size 24 bytes, notification_buffer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = notification_buffer_frame_write
</UL>
<BR>[Calls]<UL><LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[1049]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notification_buffer_frame_push
</UL>

<P><STRONG><a name="[104a]"></a>notification_buffer_frame_flush</STRONG> (Thumb, 132 bytes, Stack size 16 bytes, notification_buffer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = notification_buffer_frame_flush
</UL>
<BR>[Called By]<UL><LI><a href="#[e3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notification_buffer_flush
<LI><a href="#[1049]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notification_buffer_frame_push
</UL>

<P><STRONG><a name="[1049]"></a>notification_buffer_frame_push</STRONG> (Thumb, 128 bytes, Stack size 32 bytes, notification_buffer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = notification_buffer_frame_push &rArr; notification_buffer_frame_write
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[104a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notification_buffer_frame_flush
<LI><a href="#[1048]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notification_buffer_frame_write
</UL>
<BR>[Called By]<UL><LI><a href="#[e3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notification_buffer_prequeue
</UL>

<P><STRONG><a name="[104e]"></a>notification_buffer_stream_flush</STRONG> (Thumb, 106 bytes, Stack size 16 bytes, notification_buffer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = notification_buffer_stream_flush
</UL>
<BR>[Called By]<UL><LI><a href="#[e3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notification_buffer_flush
</UL>

<P><STRONG><a name="[104b]"></a>notification_buffer_stream_push</STRONG> (Thumb, 82 bytes, Stack size 32 bytes, notification_buffer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = notification_buffer_stream_push &rArr; fmc_flash_nor_auto_dma_read
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[104c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_flash_nor_auto_dma_read
</UL>
<BR>[Called By]<UL><LI><a href="#[e3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notification_buffer_prequeue
</UL>

<P><STRONG><a name="[104d]"></a>notification_buffer_stream_peek</STRONG> (Thumb, 86 bytes, Stack size 40 bytes, notification_buffer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = notification_buffer_stream_peek
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[e3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notification_buffer_peek
</UL>

<P><STRONG><a name="[1050]"></a>sbc_chann_num_get</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, audio_codec.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[ec2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_codec_chann_num_get
</UL>

<P><STRONG><a name="[1051]"></a>opus_frame_size_get</STRONG> (Thumb, 144 bytes, Stack size 8 bytes, audio_codec.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = opus_frame_size_get
</UL>
<BR>[Called By]<UL><LI><a href="#[f2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_codec_frame_size_get
</UL>

<P><STRONG><a name="[19b]"></a>codec_mgr_op_enter_busy</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, codec_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = codec_mgr_op_enter_busy &rArr; codec_mgr_session_event_post &rArr; fsm_run
</UL>
<BR>[Calls]<UL><LI><a href="#[1057]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_session_event_post
</UL>
<BR>[Address Reference Count : 1]<UL><LI> codec_mgr.o(.constdata)
</UL>
<P><STRONG><a name="[19a]"></a>codec_mgr_op_start_action</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, codec_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = codec_mgr_op_start_action
</UL>
<BR>[Calls]<UL><LI><a href="#[1058]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_op_queue_peek
</UL>
<BR>[Address Reference Count : 1]<UL><LI> codec_mgr.o(.constdata)
</UL>
<P><STRONG><a name="[19c]"></a>codec_mgr_op_stop_action</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, codec_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = codec_mgr_op_stop_action
</UL>
<BR>[Address Reference Count : 1]<UL><LI> codec_mgr.o(.constdata)
</UL>
<P><STRONG><a name="[19d]"></a>codec_mgr_op_enter_idle</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, codec_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = codec_mgr_op_enter_idle &rArr; codec_mgr_op_event_post &rArr; fsm_run
</UL>
<BR>[Calls]<UL><LI><a href="#[1059]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_op_event_post
</UL>
<BR>[Address Reference Count : 1]<UL><LI> codec_mgr.o(.constdata)
</UL>
<P><STRONG><a name="[19e]"></a>codec_mgr_enter_enabling</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, codec_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = codec_mgr_enter_enabling &rArr; codec_drv_enable &rArr; codec_drv_cfg_state &rArr; codec_drv_send_push_state_msg &rArr; codec_send_isr_msg
</UL>
<BR>[Calls]<UL><LI><a href="#[f8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_enable
</UL>
<BR>[Address Reference Count : 1]<UL><LI> codec_mgr.o(.constdata)
</UL>
<P><STRONG><a name="[19f]"></a>codec_mgr_enter_enabled</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, codec_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = codec_mgr_enter_enabled &rArr; codec_mgr_session_event_post &rArr; fsm_run
</UL>
<BR>[Calls]<UL><LI><a href="#[1057]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_session_event_post
</UL>
<BR>[Address Reference Count : 1]<UL><LI> codec_mgr.o(.constdata)
</UL>
<P><STRONG><a name="[1a0]"></a>codec_mgr_enter_muting</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, codec_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = codec_mgr_enter_muting &rArr; codec_drv_set_mute &rArr; codec_drv_cfg_state &rArr; codec_drv_send_push_state_msg &rArr; codec_send_isr_msg
</UL>
<BR>[Calls]<UL><LI><a href="#[f8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_set_mute
</UL>
<BR>[Address Reference Count : 1]<UL><LI> codec_mgr.o(.constdata)
</UL>
<P><STRONG><a name="[1a1]"></a>codec_mgr_enter_muted</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, codec_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = codec_mgr_enter_muted &rArr; codec_mgr_session_event_post &rArr; fsm_run
</UL>
<BR>[Calls]<UL><LI><a href="#[1057]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_session_event_post
</UL>
<BR>[Address Reference Count : 1]<UL><LI> codec_mgr.o(.constdata)
</UL>
<P><STRONG><a name="[1a2]"></a>codec_mgr_enter_disabling</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, codec_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = codec_mgr_enter_disabling &rArr; codec_drv_disable &rArr; codec_drv_cfg_state &rArr; codec_drv_send_push_state_msg &rArr; codec_send_isr_msg
</UL>
<BR>[Calls]<UL><LI><a href="#[f8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_disable
</UL>
<BR>[Address Reference Count : 1]<UL><LI> codec_mgr.o(.constdata)
</UL>
<P><STRONG><a name="[1a3]"></a>codec_mgr_enter_disabled</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, codec_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = codec_mgr_enter_disabled &rArr; dsp_send_msg
</UL>
<BR>[Calls]<UL><LI><a href="#[efa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_send_msg (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> codec_mgr.o(.constdata)
</UL>
<P><STRONG><a name="[105a]"></a>codec_mgr_session_route</STRONG> (Thumb, 108 bytes, Stack size 16 bytes, codec_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = codec_mgr_session_route &rArr; codec_mgr_event_post &rArr; fsm_run
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[105b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_event_post
<LI><a href="#[1057]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_session_event_post
</UL>
<BR>[Called By]<UL><LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_session_enter_disabling
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_session_enter_enabling
</UL>

<P><STRONG><a name="[1a5]"></a>codec_mgr_session_enter_enabling</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, codec_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = codec_mgr_session_enter_enabling &rArr; codec_mgr_session_route &rArr; codec_mgr_event_post &rArr; fsm_run
</UL>
<BR>[Calls]<UL><LI><a href="#[105a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_session_route
</UL>
<BR>[Address Reference Count : 1]<UL><LI> codec_mgr.o(.constdata)
</UL>
<P><STRONG><a name="[1a8]"></a>codec_mgr_session_enter_enabled</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, codec_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = codec_mgr_session_enter_enabled &rArr; dsp_send_msg
</UL>
<BR>[Calls]<UL><LI><a href="#[efa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_send_msg (via Veneer)
<LI><a href="#[1059]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_op_event_post
</UL>
<BR>[Address Reference Count : 1]<UL><LI> codec_mgr.o(.constdata)
</UL>
<P><STRONG><a name="[1aa]"></a>codec_mgr_session_enter_disabling</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, codec_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = codec_mgr_session_enter_disabling &rArr; codec_mgr_session_route &rArr; codec_mgr_event_post &rArr; fsm_run
</UL>
<BR>[Calls]<UL><LI><a href="#[105a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_session_route
</UL>
<BR>[Address Reference Count : 1]<UL><LI> codec_mgr.o(.constdata)
</UL>
<P><STRONG><a name="[1ab]"></a>codec_mgr_session_enter_disabled</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, codec_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = codec_mgr_session_enter_disabled &rArr; dsp_send_msg
</UL>
<BR>[Calls]<UL><LI><a href="#[efa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_send_msg (via Veneer)
<LI><a href="#[1059]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_op_event_post
</UL>
<BR>[Address Reference Count : 1]<UL><LI> codec_mgr.o(.constdata)
</UL>
<P><STRONG><a name="[1a7]"></a>codec_mgr_session_nop</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, codec_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = codec_mgr_session_nop &rArr; codec_mgr_op_event_post &rArr; fsm_run
</UL>
<BR>[Calls]<UL><LI><a href="#[1059]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_op_event_post
</UL>
<BR>[Address Reference Count : 1]<UL><LI> codec_mgr.o(.constdata)
</UL>
<P><STRONG><a name="[1a9]"></a>codec_mgr_session_enter_fading_out</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, codec_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = codec_mgr_session_enter_fading_out &rArr; codec_mgr_sidetone_set &rArr; codec_drv_sidetone_disable &rArr; codec_drv_sidetone_timer_ctrl &rArr; sys_timer_restart &rArr; sys_hp_timer_list_insert &rArr; hw_timer_restart &rArr; hw_timer_safe_stop &rArr; hw_timer_set_div
</UL>
<BR>[Calls]<UL><LI><a href="#[eb9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_sidetone_set
<LI><a href="#[1057]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_session_event_post
</UL>
<BR>[Address Reference Count : 1]<UL><LI> codec_mgr.o(.constdata)
</UL>
<P><STRONG><a name="[1060]"></a>codec_mgr_eq_set</STRONG> (Thumb, 204 bytes, Stack size 48 bytes, codec_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = codec_mgr_eq_set &rArr; codec_drv_eq_data_set &rArr; codec_drv_eq_band_write &rArr; codec_drv_eq_coef_write
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_flash_nor_read
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_cur_bank_img_payload_addr_get
<LI><a href="#[a4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_eq_data_set
</UL>
<BR>[Called By]<UL><LI><a href="#[106d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_mic_enable
<LI><a href="#[1068]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_spk_enable
</UL>

<P><STRONG><a name="[1061]"></a>codec_mgr_adc_config_set</STRONG> (Thumb, 478 bytes, Stack size 88 bytes, codec_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = codec_mgr_adc_config_set &rArr; codec_drv_adc_config_set &rArr; codec_drv_event_process &rArr; codec_drv_set_sample_rate
</UL>
<BR>[Calls]<UL><LI><a href="#[f96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_adc_config_set
<LI><a href="#[f95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_dmic_config_set
<LI><a href="#[f94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_amic_config_set
<LI><a href="#[f8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_config_init
<LI><a href="#[1063]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_get_mic_src_sel
<LI><a href="#[1062]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_get_mic_ch_sel
<LI><a href="#[1064]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_is_audio_mic
<LI><a href="#[1066]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_is_anc_mic
<LI><a href="#[1065]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_get_codec_dmic_clk
</UL>
<BR>[Called By]<UL><LI><a href="#[106d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_mic_enable
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_adc_gain_set_action
</UL>

<P><STRONG><a name="[1067]"></a>codec_mgr_mic_disable</STRONG> (Thumb, 188 bytes, Stack size 32 bytes, codec_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = codec_mgr_mic_disable &rArr; codec_drv_adc_config_clear &rArr; codec_drv_event_process &rArr; codec_drv_set_sample_rate
</UL>
<BR>[Calls]<UL><LI><a href="#[f9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_adc_config_clear
<LI><a href="#[f9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_dmic_config_clear
<LI><a href="#[f9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_amic_config_clear
<LI><a href="#[f7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_eq_data_clear
<LI><a href="#[1062]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_get_mic_ch_sel
<LI><a href="#[1064]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_is_audio_mic
<LI><a href="#[1066]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_is_anc_mic
</UL>
<BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_adc_gain_mute_action
<LI><a href="#[106e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_phy_path_disable
</UL>

<P><STRONG><a name="[1068]"></a>codec_mgr_spk_enable</STRONG> (Thumb, 250 bytes, Stack size 88 bytes, codec_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = codec_mgr_spk_enable &rArr; codec_mgr_eq_set &rArr; codec_drv_eq_data_set &rArr; codec_drv_eq_band_write &rArr; codec_drv_eq_coef_write
</UL>
<BR>[Calls]<UL><LI><a href="#[f30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_route_sport_cfg_get
<LI><a href="#[f97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_i2s_config_set
<LI><a href="#[f93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_dac_config_set
<LI><a href="#[f92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_spk_config_set
<LI><a href="#[f8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_config_init
<LI><a href="#[1060]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_eq_set
</UL>
<BR>[Called By]<UL><LI><a href="#[106c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_phy_path_enable
</UL>

<P><STRONG><a name="[106a]"></a>codec_mgr_is_idle</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, codec_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = codec_mgr_is_idle
</UL>
<BR>[Called By]<UL><LI><a href="#[106f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_mix_disable
<LI><a href="#[1069]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_spk_disable
</UL>

<P><STRONG><a name="[1069]"></a>codec_mgr_spk_disable</STRONG> (Thumb, 188 bytes, Stack size 48 bytes, codec_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = codec_mgr_spk_disable &rArr; codec_drv_dac_config_clear &rArr; codec_drv_event_process &rArr; codec_drv_set_sample_rate
</UL>
<BR>[Calls]<UL><LI><a href="#[f99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_dac_config_clear
<LI><a href="#[f98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_spk_config_clear
<LI><a href="#[f93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_dac_config_set
<LI><a href="#[f8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_config_init
<LI><a href="#[f7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_eq_data_clear
<LI><a href="#[106a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_is_idle
</UL>
<BR>[Called By]<UL><LI><a href="#[106e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_phy_path_disable
</UL>

<P><STRONG><a name="[ed]"></a>codec_mgr_adc_gain_mute_action</STRONG> (Thumb, 100 bytes, Stack size 24 bytes, codec_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = codec_mgr_adc_gain_mute_action &rArr; codec_mgr_mic_disable &rArr; codec_drv_adc_config_clear &rArr; codec_drv_event_process &rArr; codec_drv_set_sample_rate
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[1064]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_is_audio_mic
<LI><a href="#[1067]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_mic_disable
</UL>
<BR>[Address Reference Count : 1]<UL><LI> codec_mgr.o(.text)
</UL>
<P><STRONG><a name="[ee]"></a>codec_mgr_adc_gain_set_action</STRONG> (Thumb, 248 bytes, Stack size 72 bytes, codec_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = codec_mgr_adc_gain_set_action &rArr; codec_mgr_adc_config_set &rArr; codec_drv_adc_config_set &rArr; codec_drv_event_process &rArr; codec_drv_set_sample_rate
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[f96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_adc_config_set
<LI><a href="#[f94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_amic_config_set
<LI><a href="#[f8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_config_init
<LI><a href="#[1062]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_get_mic_ch_sel
<LI><a href="#[1052]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_loopback_enable
<LI><a href="#[1064]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_is_audio_mic
<LI><a href="#[1066]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_is_anc_mic
<LI><a href="#[1061]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_adc_config_set
</UL>
<BR>[Address Reference Count : 1]<UL><LI> codec_mgr.o(.text)
</UL>
<P><STRONG><a name="[106b]"></a>codec_mgr_adc_gain_config</STRONG> (Thumb, 84 bytes, Stack size 48 bytes, codec_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = codec_mgr_adc_gain_config &rArr; audio_route_physical_path_take &rArr; audio_route_physical_path_get &rArr; audio_route_voice_physical_path_get
</UL>
<BR>[Calls]<UL><LI><a href="#[aa5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_route_physical_path_take
<LI><a href="#[f16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_route_physical_path_give
<LI><a href="#[105e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_session_state_get
</UL>
<BR>[Called By]<UL><LI><a href="#[eac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_adc_gain_set
<LI><a href="#[ead]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_adc_gain_mute
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_session_cfg_set
</UL>

<P><STRONG><a name="[1072]"></a>codec_mgr_eq_load</STRONG> (Thumb, 220 bytes, Stack size 32 bytes, codec_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = codec_mgr_eq_load &rArr; fmc_flash_nor_read
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_flash_nor_read
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_cur_bank_img_payload_addr_get
</UL>
<BR>[Called By]<UL><LI><a href="#[e8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_init
</UL>

<P><STRONG><a name="[1a4]"></a>codec_mgr_session_cfg_set</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, codec_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = codec_mgr_session_cfg_set &rArr; codec_mgr_phy_path_enable &rArr; codec_mgr_mic_enable &rArr; codec_mgr_adc_config_set &rArr; codec_drv_adc_config_set &rArr; codec_drv_event_process &rArr; codec_drv_set_sample_rate
</UL>
<BR>[Calls]<UL><LI><a href="#[ea7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_dac_gain_set
<LI><a href="#[106b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_adc_gain_config
<LI><a href="#[1070]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_bias_setting
<LI><a href="#[106c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_phy_path_enable
</UL>
<BR>[Address Reference Count : 1]<UL><LI> codec_mgr.o(.constdata)
</UL>
<P><STRONG><a name="[1a6]"></a>codec_mgr_session_cfg_clear</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, codec_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = codec_mgr_session_cfg_clear &rArr; codec_mgr_phy_path_disable &rArr; codec_mgr_loopback_disable &rArr; codec_drv_adc_config_set &rArr; codec_drv_event_process &rArr; codec_drv_set_sample_rate
</UL>
<BR>[Calls]<UL><LI><a href="#[106e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_phy_path_disable
</UL>
<BR>[Address Reference Count : 1]<UL><LI> codec_mgr.o(.constdata)
</UL>
<P><STRONG><a name="[1058]"></a>codec_mgr_op_queue_peek</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, codec_mgr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_cback
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_op_start_action
</UL>

<P><STRONG><a name="[1056]"></a>fsm_create_trans_index_table</STRONG> (Thumb, 132 bytes, Stack size 24 bytes, codec_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = fsm_create_trans_index_table
</UL>
<BR>[Calls]<UL><LI><a href="#[336]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[1055]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fsm_init
</UL>

<P><STRONG><a name="[105f]"></a>fsm_deinit</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, codec_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = fsm_deinit
</UL>
<BR>[Called By]<UL><LI><a href="#[e99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_session_destroy
<LI><a href="#[e8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_init
</UL>

<P><STRONG><a name="[1057]"></a>codec_mgr_session_event_post</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, codec_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = codec_mgr_session_event_post &rArr; fsm_run
</UL>
<BR>[Calls]<UL><LI><a href="#[1054]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fsm_run
</UL>
<BR>[Called By]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_cback
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_session_enter_fading_out
<LI><a href="#[105a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_session_route
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_enter_muted
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_enter_enabled
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_op_enter_busy
</UL>

<P><STRONG><a name="[1059]"></a>codec_mgr_op_event_post</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, codec_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = codec_mgr_op_event_post &rArr; fsm_run
</UL>
<BR>[Calls]<UL><LI><a href="#[1054]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fsm_run
</UL>
<BR>[Called By]<UL><LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_session_nop
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_session_enter_disabled
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_session_enter_enabled
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_op_enter_idle
<LI><a href="#[105c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_session_control
</UL>

<P><STRONG><a name="[105b]"></a>codec_mgr_event_post</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, codec_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = codec_mgr_event_post &rArr; fsm_run
</UL>
<BR>[Calls]<UL><LI><a href="#[1054]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fsm_run
</UL>
<BR>[Called By]<UL><LI><a href="#[ec1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_power_off
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_cback
<LI><a href="#[105a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_session_route
</UL>

<P><STRONG><a name="[1066]"></a>codec_mgr_is_anc_mic</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, codec_mgr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[106d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_mic_enable
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_adc_gain_set_action
<LI><a href="#[1067]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_mic_disable
<LI><a href="#[1061]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_adc_config_set
</UL>

<P><STRONG><a name="[1064]"></a>codec_mgr_is_audio_mic</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, codec_mgr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[106d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_mic_enable
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_adc_gain_set_action
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_adc_gain_mute_action
<LI><a href="#[1067]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_mic_disable
<LI><a href="#[1061]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_adc_config_set
</UL>

<P><STRONG><a name="[106d]"></a>codec_mgr_mic_enable</STRONG> (Thumb, 130 bytes, Stack size 72 bytes, codec_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = codec_mgr_mic_enable &rArr; codec_mgr_adc_config_set &rArr; codec_drv_adc_config_set &rArr; codec_drv_event_process &rArr; codec_drv_set_sample_rate
</UL>
<BR>[Calls]<UL><LI><a href="#[f30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_route_sport_cfg_get
<LI><a href="#[f97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_i2s_config_set
<LI><a href="#[f8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_config_init
<LI><a href="#[1064]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_is_audio_mic
<LI><a href="#[1066]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_is_anc_mic
<LI><a href="#[1061]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_adc_config_set
<LI><a href="#[1060]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_eq_set
</UL>
<BR>[Called By]<UL><LI><a href="#[106c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_phy_path_enable
</UL>

<P><STRONG><a name="[106f]"></a>codec_mgr_mix_disable</STRONG> (Thumb, 140 bytes, Stack size 16 bytes, codec_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = codec_mgr_mix_disable &rArr; codec_drv_dac_config_clear &rArr; codec_drv_event_process &rArr; codec_drv_set_sample_rate
</UL>
<BR>[Calls]<UL><LI><a href="#[f99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_dac_config_clear
<LI><a href="#[f98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_spk_config_clear
<LI><a href="#[f7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_drv_eq_data_clear
<LI><a href="#[106a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_is_idle
</UL>
<BR>[Called By]<UL><LI><a href="#[106e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;codec_mgr_phy_path_disable
</UL>

<P><STRONG><a name="[1073]"></a>sport_mgr_path_db_get</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, sport_mgr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[e6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_mgr_tx_sample_rate_get
<LI><a href="#[e6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_mgr_rx_sample_rate_get
<LI><a href="#[ecd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_mgr_enable
<LI><a href="#[ec9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_mgr_disable
<LI><a href="#[f31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_mgr_tx_channel_mode_get
<LI><a href="#[f32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_mgr_sample_rate_get
<LI><a href="#[f33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_mgr_rx_channel_mode_get
<LI><a href="#[1077]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_mgr_param_set
</UL>

<P><STRONG><a name="[1077]"></a>sport_mgr_param_set</STRONG> (Thumb, 250 bytes, Stack size 104 bytes, sport_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = sport_mgr_param_set &rArr; sport_drv_trx_config_set &rArr; sport_drv_frac_div_set_dependent &rArr; sport_drv_calc_channel_len_ratio &rArr; __aeabi_fdiv
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[f30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_route_sport_cfg_get
<LI><a href="#[1079]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_drv_trx_config_set
<LI><a href="#[1078]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_drv_trx_config_default
<LI><a href="#[107a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_drv_dump_setting
<LI><a href="#[1073]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_mgr_path_db_get
</UL>
<BR>[Called By]<UL><LI><a href="#[ecd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_mgr_enable
</UL>

<P><STRONG><a name="[107b]"></a>sport_mgr_param_init</STRONG> (Thumb, 346 bytes, Stack size 80 bytes, sport_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = sport_mgr_param_init &rArr; Pad_Config &rArr; flash_cur_bank_img_payload_addr_get
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer (via Veneer)
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pinmux_Config
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pad_Config (via Veneer)
<LI><a href="#[1081]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_drv_reset
<LI><a href="#[1083]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_drv_misc_config_set
<LI><a href="#[1082]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_drv_misc_config_default
<LI><a href="#[107c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_drv_mclk_enable
<LI><a href="#[107d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_drv_mclk_conifg_set
<LI><a href="#[107e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_drv_enable_module
<LI><a href="#[1080]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_drv_codec_sel
<LI><a href="#[107f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_drv_clock_src_sel
<LI><a href="#[1075]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_mgr_init_cfg_get
<LI><a href="#[964]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
</UL>
<BR>[Called By]<UL><LI><a href="#[ecd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_mgr_enable
</UL>

<P><STRONG><a name="[108b]"></a>bin_loader_drv_crc16</STRONG> (Thumb, 170 bytes, Stack size 16 bytes, bin_loader_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = bin_loader_drv_crc16
</UL>
<BR>[Called By]<UL><LI><a href="#[f10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bin_loader_driver_check_image_correct
</UL>

<P><STRONG><a name="[f5]"></a>dsp_fw_dsp_aes_done_cb</STRONG> (Thumb, 110 bytes, Stack size 32 bytes, bin_loader_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = dsp_fw_dsp_aes_done_cb
</UL>
<BR>[Calls]<UL><LI><a href="#[108f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GDMA_channel_release (via Veneer)
</UL>
<BR>[Address Reference Count : 2]<UL><LI> bin_loader_driver.o(.text)
<LI> bin_loader_driver.o(.text)
</UL>
<P><STRONG><a name="[1092]"></a>bin_loader_driver_dma_decrypt_image</STRONG> (Thumb, 144 bytes, Stack size 64 bytes, bin_loader_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = bin_loader_driver_dma_decrypt_image
</UL>
<BR>[Called By]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_fw_load_image
</UL>

<P><STRONG><a name="[fa]"></a>dsp_pm_timer_cback</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, dsp_driver.o(.isr.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = dsp_pm_timer_cback &rArr; dsp_pm_power_on &rArr; hw_timer_create &rArr; hw_timer_create_int &rArr; hw_timer_driver_init_int &rArr; hw_timer_update_isr &rArr; RamVectorTableUpdate_for_xip_isr
</UL>
<BR>[Calls]<UL><LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dsp_pm_power_on
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dsp_driver.o(.text)
</UL>
<P><STRONG><a name="[10a1]"></a>audio_pad_amic2_aux_set</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, audio_pad.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = audio_pad_amic2_aux_set &rArr; audio_pad_func_enable
</UL>
<BR>[Calls]<UL><LI><a href="#[6af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btaon_fast_write_safe (via Veneer)
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btaon_fast_read_safe (via Veneer)
<LI><a href="#[10a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_pad_func_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[10a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_pad_load
<LI><a href="#[10a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_pad_amic_set
</UL>

<P><STRONG><a name="[10a4]"></a>audio_pad_dmic_pad_cfg</STRONG> (Thumb, 66 bytes, Stack size 32 bytes, audio_pad.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = audio_pad_dmic_pad_cfg &rArr; Pad_Config &rArr; flash_cur_bank_img_payload_addr_get
</UL>
<BR>[Calls]<UL><LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pad_Config (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[f59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_pad_dmic_pad_ctrl
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_pad_dlps_enter_callback
</UL>

<P><STRONG><a name="[10a2]"></a>audio_pad_amic_set</STRONG> (Thumb, 148 bytes, Stack size 16 bytes, audio_pad.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = audio_pad_amic_set &rArr; audio_pad_amic2_aux_set &rArr; audio_pad_func_enable
</UL>
<BR>[Calls]<UL><LI><a href="#[6af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btaon_fast_write_safe (via Veneer)
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btaon_fast_read_safe (via Veneer)
<LI><a href="#[10a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_pad_func_enable
<LI><a href="#[10a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_pad_amic2_aux_set
</UL>
<BR>[Called By]<UL><LI><a href="#[f58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_pad_mic_set
</UL>

<P><STRONG><a name="[10a3]"></a>audio_pad_dmic_set</STRONG> (Thumb, 82 bytes, Stack size 24 bytes, audio_pad.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = audio_pad_dmic_set &rArr; Pad_Config &rArr; flash_cur_bank_img_payload_addr_get
</UL>
<BR>[Calls]<UL><LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pinmux_Config
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pad_Config (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[f58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_pad_mic_set
</UL>

<P><STRONG><a name="[10ab]"></a>sport_drv_calc_bclk_div</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, sport_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = sport_drv_calc_bclk_div &rArr; __aeabi_fmul
</UL>
<BR>[Calls]<UL><LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
<LI><a href="#[ea9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[10ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_drv_get_channel_len
</UL>
<BR>[Called By]<UL><LI><a href="#[10b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_drv_frac_div_set_separate
<LI><a href="#[10b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_drv_frac_div_set_dependent
</UL>

<P><STRONG><a name="[10af]"></a>sport_drv_calc_trx_sr_magnification</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, sport_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = sport_drv_calc_trx_sr_magnification
</UL>
<BR>[Calls]<UL><LI><a href="#[10ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_drv_convert_sample_rate
</UL>
<BR>[Called By]<UL><LI><a href="#[1079]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_drv_trx_config_set
<LI><a href="#[10b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_drv_frac_div_set_dependent
</UL>

<P><STRONG><a name="[10b1]"></a>sport_drv_set_tdm_mode</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, sport_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = sport_drv_set_tdm_mode
</UL>
<BR>[Called By]<UL><LI><a href="#[10b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_drv_trx_parameter_set
</UL>

<P><STRONG><a name="[10b3]"></a>sport_drv_set_channel_mode</STRONG> (Thumb, 34 bytes, Stack size 12 bytes, sport_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = sport_drv_set_channel_mode
</UL>
<BR>[Called By]<UL><LI><a href="#[10b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_drv_trx_parameter_set
</UL>

<P><STRONG><a name="[10b5]"></a>sport_drv_set_channel_len</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, sport_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = sport_drv_set_channel_len
</UL>
<BR>[Called By]<UL><LI><a href="#[10b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_drv_trx_parameter_set
</UL>

<P><STRONG><a name="[10b2]"></a>sport_drv_set_data_format</STRONG> (Thumb, 34 bytes, Stack size 12 bytes, sport_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = sport_drv_set_data_format
</UL>
<BR>[Called By]<UL><LI><a href="#[10b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_drv_trx_parameter_set
</UL>

<P><STRONG><a name="[10b4]"></a>sport_drv_set_data_len</STRONG> (Thumb, 34 bytes, Stack size 12 bytes, sport_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = sport_drv_set_data_len
</UL>
<BR>[Called By]<UL><LI><a href="#[10b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_drv_trx_parameter_set
</UL>

<P><STRONG><a name="[10b7]"></a>sport_drv_config_bclk</STRONG> (Thumb, 30 bytes, Stack size 12 bytes, sport_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = sport_drv_config_bclk
</UL>
<BR>[Called By]<UL><LI><a href="#[10b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_drv_frac_div_set_separate
<LI><a href="#[10b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_drv_frac_div_set_dependent
</UL>

<P><STRONG><a name="[10b8]"></a>sport_drv_config_bclk_div</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, sport_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = sport_drv_config_bclk_div
</UL>
<BR>[Called By]<UL><LI><a href="#[10b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_drv_frac_div_set_separate
<LI><a href="#[10b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_drv_frac_div_set_dependent
</UL>

<P><STRONG><a name="[10ba]"></a>sport_drv_calc_channel_len_ratio</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, sport_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = sport_drv_calc_channel_len_ratio &rArr; __aeabi_fdiv
</UL>
<BR>[Calls]<UL><LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[940]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[10ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_drv_get_channel_len
</UL>
<BR>[Called By]<UL><LI><a href="#[10b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_drv_frac_div_set_dependent
</UL>

<P><STRONG><a name="[10bb]"></a>sport_drv_check_exceed_div_ratio</STRONG> (Thumb, 38 bytes, Stack size 12 bytes, sport_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = sport_drv_check_exceed_div_ratio
</UL>
<BR>[Calls]<UL><LI><a href="#[10ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_drv_get_channel_len
</UL>
<BR>[Called By]<UL><LI><a href="#[1079]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_drv_trx_config_set
</UL>

<P><STRONG><a name="[10ea]"></a>_fadd1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, faddsub_clz.o(x$fpl$fadd), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[10eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fsub
<LI><a href="#[10e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_frsb
</UL>

<P><STRONG><a name="[10de]"></a>_fsub1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, faddsub_clz.o(x$fpl$fsub), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[10e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_frsb
<LI><a href="#[10dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fadd
</UL>

<P><STRONG><a name="[111b]"></a>_fdiv1</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, fdiv.o(x$fpl$fdiv), UNUSED)
<BR><BR>[Called By]<UL></UL>

<P><STRONG><a name="[102]"></a>_scanf_char_input</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, scanf_char.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> scanf_char.o(.text)
</UL><P>
<H3>
Undefined Global Symbols
</H3>
<P><STRONG><a name="[130a]"></a>_handle_redirection</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED, UNUSED)
<BR><BR>[Called By]<UL></UL>
<HR></body></html>
